MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.39 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                20. April 2016
Time:                17.39 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2YY7RMM 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl38\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2YY7RMM new;
MPRINT(EM_DIAGRAM):   run;
2320139    filename emflow
2320139  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl38\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl38\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Scoring AUTONEURAL6_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2320140    *------------------------------------------------------------*;
2320141    * Ensmbl38: Scoring AUTONEURAL6_TRAIN data;
2320142    *------------------------------------------------------------*;
2320143    data EMWS8.Ensmbl38_TRAIN
2320144    / view=EMWS8.Ensmbl38_TRAIN
2320145    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl38_TRAIN / view=EMWS8.Ensmbl38_TRAIN ;
2320146    set EMWS8.AutoNeural6_TRAIN
2320147    ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural6_TRAIN ;
2320148    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl38\EMFLOWSCORE.sas.
2320149   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2320150   +* Ensmbl38: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Combine model for DepVar;
2320151   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2320152   +* Ensmbl38: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Scoring Code of model 1 of 7;
2320153   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2320154   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2320155   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
2320156   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2320157   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
2320158   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2320159   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2320160   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
2320161   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
2320162   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
2320163   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2320164   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2320165   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
2320166   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2320167   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
2320168   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2320169   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2320170   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
2320171   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2320172   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
2320173   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2320174   +
2320175   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2320176   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2320176  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2320177   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2320178   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2320179   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2320180   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2320181   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
2320182   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2320183   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
2320184   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2320185   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
2320186   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2320187   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2320188   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2320189   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2320190   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2320191   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2320192   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
2320193   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2320194   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
2320195   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2320196   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
2320197   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2320198   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2320199   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
2320200   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2320201   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
2320202   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2320203   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2320204   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2320205   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2320206   +* NODE: AutoNeural6;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural6;
2320207   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2320208   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2320209   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2320210   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2320211   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2320212   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2320213   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2320214   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2320215   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2320216   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2320217   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2320218   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2320219   +LENGTH _WARN_ $4
2320220   +      F_DepVar  $ 12
2320221   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2320222   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2320223   +
2320224   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2320225   +
2320226   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2320227   +
2320228   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2320229   +
2320230   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2320231   +
2320232   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2320233   +
2320234   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2320235   +
2320236   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2320237   +
2320238   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2320239   +
2320240   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2320241   +
2320242   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2320243   +
2320244   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2320245   +
2320246   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2320247   +
2320248   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2320249   +
2320250   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2320251   +
2320252   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2320253   +
2320254   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2320255   +
2320256   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2320257   +
2320258   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2320259   +
2320260   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2320261   +
2320262   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2320263   +
2320264   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2320265   +
2320266   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2320267   +
2320268   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2320269   +
2320270   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2320271   +
2320272   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2320273   +
2320274   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2320275   +
2320276   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2320277   +
2320278   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2320279   +
2320280   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2320281   +
2320282   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2320283   +
2320284   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2320285   +
2320286   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2320287   +
2320288   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2320289   +
2320290   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2320291   +
2320292   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2320293   +
2320294   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2320295   +
2320296   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2320297   +
2320298   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2320299   +
2320300   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2320301   +
2320302   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2320303   +
2320304   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2320305   +
2320306   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2320307   +
2320308   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2320309   +
2320310   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2320311   +
2320312   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2320313   +
2320314   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2320315   +
2320316   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2320317   +
2320318   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2320319   +
2320320   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2320321   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2320322   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2320323   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2320324   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2320325   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2320326   +end;
MPRINT(EM_DIAGRAM):   end;
2320327   +else do;
MPRINT(EM_DIAGRAM):   else do;
2320328   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2320329   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2320330   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2320331   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2320332   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2320333   +   end;
MPRINT(EM_DIAGRAM):   end;
2320334   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2320335   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2320336   +   end;
MPRINT(EM_DIAGRAM):   end;
2320337   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2320338   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2320339   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2320340   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2320341   +   end;
MPRINT(EM_DIAGRAM):   end;
2320342   +end;
MPRINT(EM_DIAGRAM):   end;
2320343   +
2320344   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2320345   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2320346   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2320347   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2320348   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2320349   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2320350   +end;
MPRINT(EM_DIAGRAM):   end;
2320351   +else do;
MPRINT(EM_DIAGRAM):   else do;
2320352   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2320353   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2320354   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2320355   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2320356   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2320357   +   end;
MPRINT(EM_DIAGRAM):   end;
2320358   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2320359   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2320360   +   end;
MPRINT(EM_DIAGRAM):   end;
2320361   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2320362   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2320363   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2320364   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2320365   +   end;
MPRINT(EM_DIAGRAM):   end;
2320366   +end;
MPRINT(EM_DIAGRAM):   end;
2320367   +
2320368   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2320369   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2320370   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2320371   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2320372   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2320373   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2320374   +end;
MPRINT(EM_DIAGRAM):   end;
2320375   +else do;
MPRINT(EM_DIAGRAM):   else do;
2320376   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2320377   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2320378   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2320379   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2320380   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2320381   +   end;
MPRINT(EM_DIAGRAM):   end;
2320382   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2320383   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2320384   +   end;
MPRINT(EM_DIAGRAM):   end;
2320385   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2320386   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2320387   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2320388   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2320389   +   end;
MPRINT(EM_DIAGRAM):   end;
2320390   +end;
MPRINT(EM_DIAGRAM):   end;
2320391   +
2320392   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2320393   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2320394   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2320395   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2320396   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2320397   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2320398   +end;
MPRINT(EM_DIAGRAM):   end;
2320399   +else do;
MPRINT(EM_DIAGRAM):   else do;
2320400   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2320401   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2320402   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2320403   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2320404   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2320405   +   end;
MPRINT(EM_DIAGRAM):   end;
2320406   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2320407   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2320408   +   end;
MPRINT(EM_DIAGRAM):   end;
2320409   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2320410   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2320411   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2320412   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2320413   +   end;
MPRINT(EM_DIAGRAM):   end;
2320414   +end;
MPRINT(EM_DIAGRAM):   end;
2320415   +
2320416   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2320417   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2320418   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2320419   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2320420   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2320421   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2320422   +end;
MPRINT(EM_DIAGRAM):   end;
2320423   +else do;
MPRINT(EM_DIAGRAM):   else do;
2320424   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2320425   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2320426   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2320427   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2320428   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2320429   +   end;
MPRINT(EM_DIAGRAM):   end;
2320430   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2320431   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2320432   +   end;
MPRINT(EM_DIAGRAM):   end;
2320433   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2320434   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2320435   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2320436   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2320437   +   end;
MPRINT(EM_DIAGRAM):   end;
2320438   +end;
MPRINT(EM_DIAGRAM):   end;
2320439   +
2320440   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2320441   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2320442   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2320443   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2320444   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2320445   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2320446   +end;
MPRINT(EM_DIAGRAM):   end;
2320447   +else do;
MPRINT(EM_DIAGRAM):   else do;
2320448   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2320449   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2320450   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2320451   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2320452   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2320453   +   end;
MPRINT(EM_DIAGRAM):   end;
2320454   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2320455   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2320456   +   end;
MPRINT(EM_DIAGRAM):   end;
2320457   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2320458   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2320459   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2320460   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2320461   +   end;
MPRINT(EM_DIAGRAM):   end;
2320462   +end;
MPRINT(EM_DIAGRAM):   end;
2320463   +
2320464   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2320465   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2320466   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2320467   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2320468   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2320469   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2320470   +end;
MPRINT(EM_DIAGRAM):   end;
2320471   +else do;
MPRINT(EM_DIAGRAM):   else do;
2320472   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2320473   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2320474   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2320475   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2320476   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2320477   +   end;
MPRINT(EM_DIAGRAM):   end;
2320478   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2320479   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2320480   +   end;
MPRINT(EM_DIAGRAM):   end;
2320481   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2320482   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2320483   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2320484   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2320485   +   end;
MPRINT(EM_DIAGRAM):   end;
2320486   +end;
MPRINT(EM_DIAGRAM):   end;
2320487   +
2320488   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2320489   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2320490   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2320491   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2320492   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2320493   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2320494   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2320495   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2320496   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2320497   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2320498   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2320499   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2320500   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2320501   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2320502   +end;
MPRINT(EM_DIAGRAM):   end;
2320503   +else do;
MPRINT(EM_DIAGRAM):   else do;
2320504   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2320505   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2320506   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2320507   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2320508   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2320509   +   end;
MPRINT(EM_DIAGRAM):   end;
2320510   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2320511   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2320512   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2320513   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2320514   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2320515   +   end;
MPRINT(EM_DIAGRAM):   end;
2320516   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2320517   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2320518   +   end;
MPRINT(EM_DIAGRAM):   end;
2320519   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2320520   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2320521   +   end;
MPRINT(EM_DIAGRAM):   end;
2320522   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2320523   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2320524   +   end;
MPRINT(EM_DIAGRAM):   end;
2320525   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2320526   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2320527   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2320528   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2320529   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2320530   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2320531   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2320532   +   end;
MPRINT(EM_DIAGRAM):   end;
2320533   +end;
MPRINT(EM_DIAGRAM):   end;
2320534   +
2320535   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2320536   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2320537   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2320538   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2320539   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2320540   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2320541   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2320542   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2320543   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2320544   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2320545   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2320546   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2320547   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2320548   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2320549   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2320550   +end;
MPRINT(EM_DIAGRAM):   end;
2320551   +else do;
MPRINT(EM_DIAGRAM):   else do;
2320552   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2320553   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2320554   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2320555   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2320556   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2320557   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2320558   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2320559   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2320560   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2320561   +         end;
MPRINT(EM_DIAGRAM):   end;
2320562   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2320563   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2320564   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2320565   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2320566   +            end;
MPRINT(EM_DIAGRAM):   end;
2320567   +         end;
MPRINT(EM_DIAGRAM):   end;
2320568   +      end;
MPRINT(EM_DIAGRAM):   end;
2320569   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2320570   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2320571   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2320572   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2320573   +         end;
MPRINT(EM_DIAGRAM):   end;
2320574   +      end;
MPRINT(EM_DIAGRAM):   end;
2320575   +   end;
MPRINT(EM_DIAGRAM):   end;
2320576   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2320577   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2320578   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2320579   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2320580   +      end;
MPRINT(EM_DIAGRAM):   end;
2320581   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2320582   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2320583   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2320584   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2320585   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2320586   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2320587   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2320588   +         end;
MPRINT(EM_DIAGRAM):   end;
2320589   +      end;
MPRINT(EM_DIAGRAM):   end;
2320590   +   end;
MPRINT(EM_DIAGRAM):   end;
2320591   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2320592   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2320593   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2320594   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2320595   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2320596   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2320597   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2320598   +   end;
MPRINT(EM_DIAGRAM):   end;
2320599   +end;
MPRINT(EM_DIAGRAM):   end;
2320600   +
2320601   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2320602   +*** Checking missing input Interval
2320603   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2320604   +
2320605   +IF NMISS(
2320606   +   AcceptedCmpTotal ,
2320607   +   Age ,
2320608   +   Frq ,
2320609   +   Income ,
2320610   +   Kidhome ,
2320611   +   Mnt ,
2320612   +   MntFishProducts ,
2320613   +   MntFruits ,
2320614   +   MntGoldProds ,
2320615   +   MntMeatProducts ,
2320616   +   MntSweetProducts ,
2320617   +   MntWines ,
2320618   +   MonthsAsCustomer ,
2320619   +   NumCatalogPurchases ,
2320620   +   NumDealsPurchases ,
2320621   +   NumDistPurchases ,
2320622   +   NumStorePurchases ,
2320623   +   NumWebPurchases ,
2320624   +   NumWebVisitsMonth ,
2320625   +   RFMstat ,
2320626   +   RMntFrq ,
2320627   +   Recency ,
2320628   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2320629   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2320630   +
2320631   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2320632   +END;
MPRINT(EM_DIAGRAM):   END;
2320633   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2320634   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2320635   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2320636   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2320637   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2320638   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2320639   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2320640   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2320641   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2320642   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2320643   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2320644   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2320645   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2320646   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2320647   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2320648   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2320649   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2320650   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2320651   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2320652   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2320653   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2320654   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2320655   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2320656   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2320657   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2320658   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2320659   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2320660   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2320661   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2320662   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2320663   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2320664   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2320665   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2320666   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2320667   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2320668   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2320669   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2320670   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2320671   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2320672   +END;
MPRINT(EM_DIAGRAM):   END;
2320673   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2320674   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2320675   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2320676   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2320677   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2320678   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2320679   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2320680   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2320681   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2320682   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2320683   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2320684   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2320685   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2320686   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2320687   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2320688   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2320689   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2320690   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2320691   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2320692   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2320693   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2320694   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2320695   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2320696   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2320697   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2320698   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2320699   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2320700   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2320701   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2320702   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2320703   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2320704   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2320705   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2320706   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2320707   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2320708   +   ELSE S_NumCatalogPurchases
2320709   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2320710   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2320711   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2320712   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2320713   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2320714   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2320715   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2320716   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2320717   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2320718   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2320719   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2320720   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2320721   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2320722   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2320723   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2320724   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2320725   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2320726   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2320727   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2320728   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2320729   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2320730   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2320731   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2320732   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2320733   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2320734   +END;
MPRINT(EM_DIAGRAM):   END;
2320735   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2320736   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2320737   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2320738   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2320739   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2320740   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2320741   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2320742   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2320743   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2320744   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2320745   +   H1x1_1  =    -0.00800383076247 * S_AcceptedCmpTotal
2320746   +          +     0.02761302021586 * S_Age  +     0.10595191274027 * S_Frq
2320747   +          +    -0.15720275096991 * S_Income  +     0.14522420813528 *
2320748   +        S_Kidhome  +    -0.14485367197729 * S_Mnt  +     0.10029542464177 *
2320749   +        S_MntFishProducts  +      0.0126489883955 * S_MntFruits
2320750   +          +    -0.01721251339827 * S_MntGoldProds  +    -0.69008250574088 *
2320751   +        S_MntMeatProducts  +     0.01018204164797 * S_MntSweetProducts
2320752   +          +     0.22039448854688 * S_MntWines  +     0.01531819489128 *
2320753   +        S_MonthsAsCustomer  +    -0.23161250514854 * S_NumCatalogPurchases
2320754   +          +    -0.20127545393212 * S_NumDealsPurchases
2320755   +          +     0.04506333103933 * S_NumDistPurchases
2320756   +          +     0.35249458492371 * S_NumStorePurchases
2320757   +          +     0.25004284340707 * S_NumWebPurchases
2320758   +          +    -0.53727251220752 * S_NumWebVisitsMonth
2320759   +          +    -0.05439428653958 * S_RFMstat  +     0.36751560031492 *
2320760   +        S_RMntFrq  +      0.5373510847225 * S_Recency
2320761   +          +     0.08757258535387 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.00800383076247 * S_AcceptedCmpTotal + 0.02761302021586 * 
S_Age + 0.10595191274027 * S_Frq + -0.15720275096991 * S_Income + 0.14522420813528 * S_Kidhome 
+ -0.14485367197729 * S_Mnt + 0.10029542464177 * S_MntFishProducts + 0.0126489883955 * 
S_MntFruits + -0.01721251339827 * S_MntGoldProds + -0.69008250574088 * S_MntMeatProducts + 
0.01018204164797 * S_MntSweetProducts + 0.22039448854688 * S_MntWines + 0.01531819489128 * 
S_MonthsAsCustomer + -0.23161250514854 * S_NumCatalogPurchases + -0.20127545393212 * 
S_NumDealsPurchases + 0.04506333103933 * S_NumDistPurchases + 0.35249458492371 * 
S_NumStorePurchases + 0.25004284340707 * S_NumWebPurchases + -0.53727251220752 * 
S_NumWebVisitsMonth + -0.05439428653958 * S_RFMstat + 0.36751560031492 * S_RMntFrq + 
0.5373510847225 * S_Recency + 0.08757258535387 * S_Teenhome ;
2320762   +   H1x1_1  = H1x1_1  +     0.21204360154837 * AcceptedCmp10
2320763   +          +     0.20766091429217 * AcceptedCmp20  +     0.20201307074488 *
2320764   +        AcceptedCmp30  +     0.26898383850722 * AcceptedCmp40
2320765   +          +     0.55154220854739 * AcceptedCmp50  +     0.13147328871299 *
2320766   +        Complain0  +    -0.02797177954188 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.21204360154837 * AcceptedCmp10 + 0.20766091429217 * 
AcceptedCmp20 + 0.20201307074488 * AcceptedCmp30 + 0.26898383850722 * AcceptedCmp40 + 
0.55154220854739 * AcceptedCmp50 + 0.13147328871299 * Complain0 + -0.02797177954188 * 
HigherEducationBinary0 ;
2320767   +   H1x1_1  = H1x1_1  +    -0.00959805163736 * Education2n_Cycle
2320768   +          +     0.37192717803938 * EducationBasic  +    -0.10342362068485 *
2320769   +        EducationGraduation  +    -0.13377682721092 * EducationMaster
2320770   +          +    -0.19452359839974 * Marital_StatusDivorced
2320771   +          +     0.32327870805716 * Marital_StatusMarried
2320772   +          +    -0.20770545592268 * Marital_StatusSingle
2320773   +          +     0.35618773017298 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00959805163736 * Education2n_Cycle + 
0.37192717803938 * EducationBasic + -0.10342362068485 * EducationGraduation + 
-0.13377682721092 * EducationMaster + -0.19452359839974 * Marital_StatusDivorced + 
0.32327870805716 * Marital_StatusMarried + -0.20770545592268 * Marital_StatusSingle + 
0.35618773017298 * Marital_StatusTogether ;
2320774   +   H1x1_1  =     0.87012150629431 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.87012150629431 + H1x1_1 ;
2320775   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2320776   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2320777   +   H1x1_1  = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
2320778   +END;
MPRINT(EM_DIAGRAM):   END;
2320779   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2320780   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2320781   +END;
MPRINT(EM_DIAGRAM):   END;
2320782   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2320783   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2320784   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2320785   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2320786   +   H1x2_1  =     0.92357456692651 * S_AcceptedCmpTotal
2320787   +          +    -0.00516549264504 * S_Age  +    -1.03043789382359 * S_Frq
2320788   +          +     0.78555631441048 * S_Income  +    -1.36329797235747 *
2320789   +        S_Kidhome  +    -0.77229288487872 * S_Mnt  +     1.27281095482218 *
2320790   +        S_MntFishProducts  +     0.04568599055132 * S_MntFruits
2320791   +          +    -0.13434867195633 * S_MntGoldProds  +    -1.95682488683295 *
2320792   +        S_MntMeatProducts  +     -0.0253141337078 * S_MntSweetProducts
2320793   +          +     0.67857436596482 * S_MntWines  +    -0.07247572940845 *
2320794   +        S_MonthsAsCustomer  +    -1.02814758425435 * S_NumCatalogPurchases
2320795   +          +    -0.02120959778153 * S_NumDealsPurchases
2320796   +          +     1.49013956394863 * S_NumDistPurchases
2320797   +          +    -0.96806240220463 * S_NumStorePurchases
2320798   +          +    -1.68330472453558 * S_NumWebPurchases
2320799   +          +     3.42976128164256 * S_NumWebVisitsMonth
2320800   +          +    -0.38912520446503 * S_RFMstat  +    -2.57487899031042 *
2320801   +        S_RMntFrq  +    -3.14923215912621 * S_Recency
2320802   +          +    -0.67635091810974 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.92357456692651 * S_AcceptedCmpTotal + -0.00516549264504 * 
S_Age + -1.03043789382359 * S_Frq + 0.78555631441048 * S_Income + -1.36329797235747 * 
S_Kidhome + -0.77229288487872 * S_Mnt + 1.27281095482218 * S_MntFishProducts + 
0.04568599055132 * S_MntFruits + -0.13434867195633 * S_MntGoldProds + -1.95682488683295 * 
S_MntMeatProducts + -0.0253141337078 * S_MntSweetProducts + 0.67857436596482 * S_MntWines + 
-0.07247572940845 * S_MonthsAsCustomer + -1.02814758425435 * S_NumCatalogPurchases + 
-0.02120959778153 * S_NumDealsPurchases + 1.49013956394863 * S_NumDistPurchases + 
-0.96806240220463 * S_NumStorePurchases + -1.68330472453558 * S_NumWebPurchases + 
3.42976128164256 * S_NumWebVisitsMonth + -0.38912520446503 * S_RFMstat + -2.57487899031042 * 
S_RMntFrq + -3.14923215912621 * S_Recency + -0.67635091810974 * S_Teenhome ;
2320803   +   H1x2_1  = H1x2_1  +    -0.18835638765595 * AcceptedCmp10
2320804   +          +     1.28752081945681 * AcceptedCmp20  +     -0.5515893923669 *
2320805   +        AcceptedCmp30  +    -0.82440763600043 * AcceptedCmp40
2320806   +          +     1.94503109075872 * AcceptedCmp50  +    -0.75977722298402 *
2320807   +        Complain0  +    -1.11349075129464 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.18835638765595 * AcceptedCmp10 + 1.28752081945681 * 
AcceptedCmp20 + -0.5515893923669 * AcceptedCmp30 + -0.82440763600043 * AcceptedCmp40 + 
1.94503109075872 * AcceptedCmp50 + -0.75977722298402 * Complain0 + -1.11349075129464 * 
HigherEducationBinary0 ;
2320808   +   H1x2_1  = H1x2_1  +     1.79843117215153 * Education2n_Cycle
2320809   +          +    -1.50428649925314 * EducationBasic  +    -0.32238897768725 *
2320810   +        EducationGraduation  +    -0.16909007224958 * EducationMaster
2320811   +          +      1.9815992681602 * Marital_StatusDivorced
2320812   +          +    -3.07893181570848 * Marital_StatusMarried
2320813   +          +     1.72965298244219 * Marital_StatusSingle
2320814   +          +    -3.17208781997524 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.79843117215153 * Education2n_Cycle + 
-1.50428649925314 * EducationBasic + -0.32238897768725 * EducationGraduation + 
-0.16909007224958 * EducationMaster + 1.9815992681602 * Marital_StatusDivorced + 
-3.07893181570848 * Marital_StatusMarried + 1.72965298244219 * Marital_StatusSingle + 
-3.17208781997524 * Marital_StatusTogether ;
2320815   +   H1x2_1  =     0.54729406730223 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.54729406730223 + H1x2_1 ;
2320816   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2320817   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2320818   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2320819   +   IF H1x2_1  < _REC_EPS AND H1x2_1  > - _REC_EPS THEN
2320820   +   H1x2_1  = H1x2_1  * H1x2_1 ;
MPRINT(EM_DIAGRAM):   IF H1x2_1 < _REC_EPS AND H1x2_1 > - _REC_EPS THEN H1x2_1 = H1x2_1 * 
H1x2_1 ;
2320821   +   ELSE H1x2_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x2_1 = _REC_EPS ;
2320822   +END;
MPRINT(EM_DIAGRAM):   END;
2320823   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2320824   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2320825   +END;
MPRINT(EM_DIAGRAM):   END;
2320826   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2320827   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2320828   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2320829   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2320830   +   H1x3_1  =     0.90092602642364 * S_AcceptedCmpTotal
2320831   +          +    -0.16291307307626 * S_Age  +    -0.40132431666712 * S_Frq
2320832   +          +    -0.77251140598484 * S_Income  +     0.02215214313934 *
2320833   +        S_Kidhome  +     0.13123074182657 * S_Mnt  +    -0.43664076061176 *
2320834   +        S_MntFishProducts  +    -1.64192761266072 * S_MntFruits
2320835   +          +    -1.54189230184745 * S_MntGoldProds  +     -0.4138869968665 *
2320836   +        S_MntMeatProducts  +      0.5773885392047 * S_MntSweetProducts
2320837   +          +     1.45077769194851 * S_MntWines  +      0.5855746168529 *
2320838   +        S_MonthsAsCustomer  +     0.10198319985004 * S_NumCatalogPurchases
2320839   +          +     -0.5334151509863 * S_NumDealsPurchases
2320840   +          +     0.40600458912114 * S_NumDistPurchases
2320841   +          +    -0.30674653528261 * S_NumStorePurchases
2320842   +          +     0.10785037433743 * S_NumWebPurchases
2320843   +          +     0.99701680073452 * S_NumWebVisitsMonth
2320844   +          +    -0.25371895811899 * S_RFMstat  +     2.19406614746442 *
2320845   +        S_RMntFrq  +      1.0786726340694 * S_Recency
2320846   +          +     0.64406049150007 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.90092602642364 * S_AcceptedCmpTotal + -0.16291307307626 * 
S_Age + -0.40132431666712 * S_Frq + -0.77251140598484 * S_Income + 0.02215214313934 * 
S_Kidhome + 0.13123074182657 * S_Mnt + -0.43664076061176 * S_MntFishProducts + 
-1.64192761266072 * S_MntFruits + -1.54189230184745 * S_MntGoldProds + -0.4138869968665 * 
S_MntMeatProducts + 0.5773885392047 * S_MntSweetProducts + 1.45077769194851 * S_MntWines + 
0.5855746168529 * S_MonthsAsCustomer + 0.10198319985004 * S_NumCatalogPurchases + 
-0.5334151509863 * S_NumDealsPurchases + 0.40600458912114 * S_NumDistPurchases + 
-0.30674653528261 * S_NumStorePurchases + 0.10785037433743 * S_NumWebPurchases + 
0.99701680073452 * S_NumWebVisitsMonth + -0.25371895811899 * S_RFMstat + 2.19406614746442 * 
S_RMntFrq + 1.0786726340694 * S_Recency + 0.64406049150007 * S_Teenhome ;
2320847   +   H1x3_1  = H1x3_1  +    -0.58424742605644 * AcceptedCmp10
2320848   +          +     -0.7436165858459 * AcceptedCmp20  +    -0.33959137246457 *
2320849   +        AcceptedCmp30  +     0.42726020731333 * AcceptedCmp40
2320850   +          +     2.23707409189181 * AcceptedCmp50  +     0.98135772482722 *
2320851   +        Complain0  +    -0.85818399669867 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.58424742605644 * AcceptedCmp10 + -0.7436165858459 * 
AcceptedCmp20 + -0.33959137246457 * AcceptedCmp30 + 0.42726020731333 * AcceptedCmp40 + 
2.23707409189181 * AcceptedCmp50 + 0.98135772482722 * Complain0 + -0.85818399669867 * 
HigherEducationBinary0 ;
2320852   +   H1x3_1  = H1x3_1  +    -0.89540752048995 * Education2n_Cycle
2320853   +          +     1.29513448243349 * EducationBasic  +    -1.47068621785539 *
2320854   +        EducationGraduation  +    -1.63362973413899 * EducationMaster
2320855   +          +    -0.72494401881341 * Marital_StatusDivorced
2320856   +          +    -0.82332231639631 * Marital_StatusMarried
2320857   +          +     -0.8863559011195 * Marital_StatusSingle
2320858   +          +     0.97129982315045 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.89540752048995 * Education2n_Cycle + 
1.29513448243349 * EducationBasic + -1.47068621785539 * EducationGraduation + 
-1.63362973413899 * EducationMaster + -0.72494401881341 * Marital_StatusDivorced + 
-0.82332231639631 * Marital_StatusMarried + -0.8863559011195 * Marital_StatusSingle + 
0.97129982315045 * Marital_StatusTogether ;
2320859   +   H1x3_1  =     0.55234573720932 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.55234573720932 + H1x3_1 ;
2320860   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2320861   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2320862   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2320863   +   IF H1x3_1  < _REC_EPS AND H1x3_1  > - _REC_EPS THEN
2320864   +   H1x3_1  = H1x3_1  * H1x3_1 ;
MPRINT(EM_DIAGRAM):   IF H1x3_1 < _REC_EPS AND H1x3_1 > - _REC_EPS THEN H1x3_1 = H1x3_1 * 
H1x3_1 ;
2320865   +   ELSE H1x3_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_1 = _REC_EPS ;
2320866   +END;
MPRINT(EM_DIAGRAM):   END;
2320867   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2320868   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2320869   +END;
MPRINT(EM_DIAGRAM):   END;
2320870   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2320871   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2320872   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2320873   +
2320874   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2320875   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2320876   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2320877   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2320878   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2320879   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2320880   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2320881   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2320882   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2320883   +end;
MPRINT(EM_DIAGRAM):   end;
2320884   +else do;
MPRINT(EM_DIAGRAM):   else do;
2320885   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2320886   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2320887   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2320888   +   end;
MPRINT(EM_DIAGRAM):   end;
2320889   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2320890   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2320891   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2320892   +   end;
MPRINT(EM_DIAGRAM):   end;
2320893   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2320894   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2320895   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2320896   +   end;
MPRINT(EM_DIAGRAM):   end;
2320897   +end;
MPRINT(EM_DIAGRAM):   end;
2320898   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2320899   +   P_DepVar1  =     35.4482526843154 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 35.4482526843154 * H1x1_1 ;
2320900   +   P_DepVar1  = P_DepVar1  +    -0.08810161142704 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.08810161142704 * H1x2_1 ;
2320901   +   P_DepVar1  = P_DepVar1  +     0.02248060710303 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + 0.02248060710303 * H1x3_1 ;
2320902   +   P_DepVar1  =    -6.23004657634651 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.23004657634651 + P_DepVar1 ;
2320903   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2320904   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2320905   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2320906   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2320907   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2320908   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2320909   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2320910   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2320911   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2320912   +END;
MPRINT(EM_DIAGRAM):   END;
2320913   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2320914   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2320915   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2320916   +END;
MPRINT(EM_DIAGRAM):   END;
2320917   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2320918   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2320919   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2320920   +END;
MPRINT(EM_DIAGRAM):   END;
2320921   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2320922   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2320923   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2320924   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2320925   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2320926   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2320927   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2320928   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2320929   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2320930   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2320931   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2320932   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2320933   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2320934   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2320935   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2320936   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2320937   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2320938   +END;
MPRINT(EM_DIAGRAM):   END;
2320939   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2320940   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2320941   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2320942   +drop
2320943   +H1x1_1
2320944   +H1x2_1
2320945   +H1x3_1
2320946   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x2_1 H1x3_1 ;
2320947   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2320948   +* Renaming variables for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural6;
2320949   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2320950   +* Renaming Posterior variables for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural6;
2320951   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2320952   +drop AutoNeural6_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_P_DepVar1;
2320953   +AutoNeural6_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural6_P_DepVar1 = P_DepVar1;
2320954   +drop AutoNeural6_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_P_DepVar0;
2320955   +AutoNeural6_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural6_P_DepVar0 = P_DepVar0;
2320956   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2320957   +* Renaming Into variables for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural6;
2320958   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2320959   +length AutoNeural6_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural6_I_DepVar $32;
2320960   +drop AutoNeural6_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_I_DepVar;
2320961   +AutoNeural6_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural6_I_DepVar = I_DepVar;
2320962   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2320963   +* Renaming _WARN_ variable for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural6;
2320964   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2320965   +length AutoNeural6_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural6_WARN_ $4;
2320966   +drop AutoNeural6_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_WARN_;
2320967   +AutoNeural6_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural6_WARN_ = _WARN_;
2320968   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2320969   +* Ensmbl38: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Scoring Code of model 2 of 7;
2320970   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2320971   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2320972   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2320973   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2320974   +* NODE: AutoNeural7;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural7;
2320975   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2320976   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2320977   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2320978   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2320979   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2320980   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2320981   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2320982   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2320983   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2320984   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2320985   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2320986   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2320987   +LENGTH _WARN_ $4
2320988   +      F_DepVar  $ 12
2320989   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2320990   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2320991   +
2320992   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2320993   +
2320994   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2320995   +
2320996   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2320997   +
2320998   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2320999   +
2321000   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2321001   +
2321002   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2321003   +
2321004   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2321005   +
2321006   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2321007   +
2321008   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2321009   +
2321010   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2321011   +
2321012   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2321013   +
2321014   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2321015   +
2321016   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2321017   +
2321018   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2321019   +
2321020   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2321021   +
2321022   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2321023   +
2321024   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2321025   +
2321026   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2321027   +
2321028   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2321029   +
2321030   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2321031   +
2321032   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2321033   +
2321034   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2321035   +
2321036   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2321037   +
2321038   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2321039   +
2321040   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2321041   +
2321042   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2321043   +
2321044   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2321045   +
2321046   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2321047   +
2321048   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2321049   +
2321050   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2321051   +
2321052   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2321053   +
2321054   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2321055   +
2321056   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2321057   +
2321058   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2321059   +
2321060   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2321061   +
2321062   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2321063   +
2321064   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2321065   +
2321066   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2321067   +
2321068   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2321069   +
2321070   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2321071   +
2321072   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2321073   +
2321074   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2321075   +
2321076   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2321077   +
2321078   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2321079   +
2321080   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2321081   +
2321082   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2321083   +
2321084   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2321085   +
2321086   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2321087   +
2321088   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2321089   +
2321090   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2321091   +
2321092   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2321093   +
2321094   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2321095   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2321096   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2321097   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2321098   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2321099   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2321100   +end;
MPRINT(EM_DIAGRAM):   end;
2321101   +else do;
MPRINT(EM_DIAGRAM):   else do;
2321102   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2321103   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2321104   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2321105   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2321106   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2321107   +   end;
MPRINT(EM_DIAGRAM):   end;
2321108   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2321109   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2321110   +   end;
MPRINT(EM_DIAGRAM):   end;
2321111   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2321112   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2321113   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2321114   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2321115   +   end;
MPRINT(EM_DIAGRAM):   end;
2321116   +end;
MPRINT(EM_DIAGRAM):   end;
2321117   +
2321118   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2321119   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2321120   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2321121   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2321122   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2321123   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2321124   +end;
MPRINT(EM_DIAGRAM):   end;
2321125   +else do;
MPRINT(EM_DIAGRAM):   else do;
2321126   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2321127   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2321128   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2321129   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2321130   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2321131   +   end;
MPRINT(EM_DIAGRAM):   end;
2321132   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2321133   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2321134   +   end;
MPRINT(EM_DIAGRAM):   end;
2321135   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2321136   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2321137   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2321138   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2321139   +   end;
MPRINT(EM_DIAGRAM):   end;
2321140   +end;
MPRINT(EM_DIAGRAM):   end;
2321141   +
2321142   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2321143   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2321144   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2321145   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2321146   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2321147   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2321148   +end;
MPRINT(EM_DIAGRAM):   end;
2321149   +else do;
MPRINT(EM_DIAGRAM):   else do;
2321150   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2321151   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2321152   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2321153   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2321154   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2321155   +   end;
MPRINT(EM_DIAGRAM):   end;
2321156   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2321157   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2321158   +   end;
MPRINT(EM_DIAGRAM):   end;
2321159   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2321160   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2321161   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2321162   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2321163   +   end;
MPRINT(EM_DIAGRAM):   end;
2321164   +end;
MPRINT(EM_DIAGRAM):   end;
2321165   +
2321166   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2321167   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2321168   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2321169   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2321170   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2321171   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2321172   +end;
MPRINT(EM_DIAGRAM):   end;
2321173   +else do;
MPRINT(EM_DIAGRAM):   else do;
2321174   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2321175   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2321176   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2321177   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2321178   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2321179   +   end;
MPRINT(EM_DIAGRAM):   end;
2321180   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2321181   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2321182   +   end;
MPRINT(EM_DIAGRAM):   end;
2321183   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2321184   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2321185   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2321186   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2321187   +   end;
MPRINT(EM_DIAGRAM):   end;
2321188   +end;
MPRINT(EM_DIAGRAM):   end;
2321189   +
2321190   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2321191   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2321192   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2321193   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2321194   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2321195   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2321196   +end;
MPRINT(EM_DIAGRAM):   end;
2321197   +else do;
MPRINT(EM_DIAGRAM):   else do;
2321198   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2321199   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2321200   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2321201   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2321202   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2321203   +   end;
MPRINT(EM_DIAGRAM):   end;
2321204   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2321205   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2321206   +   end;
MPRINT(EM_DIAGRAM):   end;
2321207   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2321208   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2321209   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2321210   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2321211   +   end;
MPRINT(EM_DIAGRAM):   end;
2321212   +end;
MPRINT(EM_DIAGRAM):   end;
2321213   +
2321214   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2321215   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2321216   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2321217   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2321218   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2321219   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2321220   +end;
MPRINT(EM_DIAGRAM):   end;
2321221   +else do;
MPRINT(EM_DIAGRAM):   else do;
2321222   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2321223   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2321224   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2321225   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2321226   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2321227   +   end;
MPRINT(EM_DIAGRAM):   end;
2321228   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2321229   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2321230   +   end;
MPRINT(EM_DIAGRAM):   end;
2321231   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2321232   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2321233   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2321234   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2321235   +   end;
MPRINT(EM_DIAGRAM):   end;
2321236   +end;
MPRINT(EM_DIAGRAM):   end;
2321237   +
2321238   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2321239   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2321240   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2321241   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2321242   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2321243   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2321244   +end;
MPRINT(EM_DIAGRAM):   end;
2321245   +else do;
MPRINT(EM_DIAGRAM):   else do;
2321246   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2321247   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2321248   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2321249   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2321250   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2321251   +   end;
MPRINT(EM_DIAGRAM):   end;
2321252   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2321253   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2321254   +   end;
MPRINT(EM_DIAGRAM):   end;
2321255   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2321256   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2321257   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2321258   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2321259   +   end;
MPRINT(EM_DIAGRAM):   end;
2321260   +end;
MPRINT(EM_DIAGRAM):   end;
2321261   +
2321262   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2321263   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2321264   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2321265   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2321266   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2321267   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2321268   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2321269   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2321270   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2321271   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2321272   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2321273   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2321274   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2321275   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2321276   +end;
MPRINT(EM_DIAGRAM):   end;
2321277   +else do;
MPRINT(EM_DIAGRAM):   else do;
2321278   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2321279   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2321280   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2321281   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2321282   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2321283   +   end;
MPRINT(EM_DIAGRAM):   end;
2321284   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2321285   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2321286   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2321287   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2321288   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2321289   +   end;
MPRINT(EM_DIAGRAM):   end;
2321290   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2321291   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2321292   +   end;
MPRINT(EM_DIAGRAM):   end;
2321293   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2321294   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2321295   +   end;
MPRINT(EM_DIAGRAM):   end;
2321296   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2321297   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2321298   +   end;
MPRINT(EM_DIAGRAM):   end;
2321299   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2321300   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2321301   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2321302   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2321303   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2321304   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2321305   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2321306   +   end;
MPRINT(EM_DIAGRAM):   end;
2321307   +end;
MPRINT(EM_DIAGRAM):   end;
2321308   +
2321309   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2321310   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2321311   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2321312   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2321313   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2321314   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2321315   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2321316   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2321317   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2321318   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2321319   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2321320   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2321321   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2321322   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2321323   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2321324   +end;
MPRINT(EM_DIAGRAM):   end;
2321325   +else do;
MPRINT(EM_DIAGRAM):   else do;
2321326   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2321327   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2321328   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2321329   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2321330   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2321331   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2321332   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2321333   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2321334   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2321335   +         end;
MPRINT(EM_DIAGRAM):   end;
2321336   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2321337   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2321338   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2321339   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2321340   +            end;
MPRINT(EM_DIAGRAM):   end;
2321341   +         end;
MPRINT(EM_DIAGRAM):   end;
2321342   +      end;
MPRINT(EM_DIAGRAM):   end;
2321343   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2321344   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2321345   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2321346   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2321347   +         end;
MPRINT(EM_DIAGRAM):   end;
2321348   +      end;
MPRINT(EM_DIAGRAM):   end;
2321349   +   end;
MPRINT(EM_DIAGRAM):   end;
2321350   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2321351   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2321352   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2321353   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2321354   +      end;
MPRINT(EM_DIAGRAM):   end;
2321355   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2321356   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2321357   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2321358   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2321359   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2321360   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2321361   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2321362   +         end;
MPRINT(EM_DIAGRAM):   end;
2321363   +      end;
MPRINT(EM_DIAGRAM):   end;
2321364   +   end;
MPRINT(EM_DIAGRAM):   end;
2321365   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2321366   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2321367   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2321368   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2321369   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2321370   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2321371   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2321372   +   end;
MPRINT(EM_DIAGRAM):   end;
2321373   +end;
MPRINT(EM_DIAGRAM):   end;
2321374   +
2321375   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2321376   +*** Checking missing input Interval
2321377   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2321378   +
2321379   +IF NMISS(
2321380   +   AcceptedCmpTotal ,
2321381   +   Age ,
2321382   +   Frq ,
2321383   +   Income ,
2321384   +   Kidhome ,
2321385   +   Mnt ,
2321386   +   MntFishProducts ,
2321387   +   MntFruits ,
2321388   +   MntGoldProds ,
2321389   +   MntMeatProducts ,
2321390   +   MntSweetProducts ,
2321391   +   MntWines ,
2321392   +   MonthsAsCustomer ,
2321393   +   NumCatalogPurchases ,
2321394   +   NumDealsPurchases ,
2321395   +   NumDistPurchases ,
2321396   +   NumStorePurchases ,
2321397   +   NumWebPurchases ,
2321398   +   NumWebVisitsMonth ,
2321399   +   RFMstat ,
2321400   +   RMntFrq ,
2321401   +   Recency ,
2321402   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2321403   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2321404   +
2321405   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2321406   +END;
MPRINT(EM_DIAGRAM):   END;
2321407   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2321408   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2321409   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2321410   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2321411   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2321412   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2321413   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2321414   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2321415   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2321416   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2321417   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2321418   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2321419   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2321420   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2321421   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2321422   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2321423   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2321424   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2321425   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2321426   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2321427   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2321428   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2321429   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2321430   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2321431   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2321432   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2321433   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2321434   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2321435   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2321436   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2321437   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2321438   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2321439   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2321440   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2321441   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2321442   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2321443   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2321444   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2321445   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2321446   +END;
MPRINT(EM_DIAGRAM):   END;
2321447   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2321448   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2321449   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2321450   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2321451   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2321452   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2321453   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2321454   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2321455   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2321456   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2321457   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2321458   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2321459   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2321460   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2321461   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2321462   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2321463   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2321464   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2321465   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2321466   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2321467   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2321468   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2321469   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2321470   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2321471   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2321472   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2321473   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2321474   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2321475   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2321476   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2321477   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2321478   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2321479   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2321480   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2321481   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2321482   +   ELSE S_NumCatalogPurchases
2321483   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2321484   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2321485   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2321486   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2321487   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2321488   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2321489   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2321490   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2321491   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2321492   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2321493   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2321494   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2321495   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2321496   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2321497   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2321498   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2321499   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2321500   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2321501   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2321502   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2321503   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2321504   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2321505   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2321506   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2321507   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2321508   +END;
MPRINT(EM_DIAGRAM):   END;
2321509   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2321510   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2321511   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2321512   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2321513   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2321514   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2321515   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2321516   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2321517   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2321518   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2321519   +   H1x1_1  =     0.26454269681311 * S_AcceptedCmpTotal
2321520   +          +    -0.01281904987956 * S_Age  +    -0.19309516267581 * S_Frq
2321521   +          +    -0.19077579202378 * S_Income  +      0.1806651018562 *
2321522   +        S_Kidhome  +    -0.31002612826472 * S_Mnt  +    -0.05901796512011 *
2321523   +        S_MntFishProducts  +    -0.03760930101165 * S_MntFruits
2321524   +          +     0.01720900715043 * S_MntGoldProds  +     0.21472292961422 *
2321525   +        S_MntMeatProducts  +    -0.02880706568684 * S_MntSweetProducts
2321526   +          +    -0.37993583170844 * S_MntWines  +    -0.00848444156361 *
2321527   +        S_MonthsAsCustomer  +     0.15939611818942 * S_NumCatalogPurchases
2321528   +          +     0.08390531145773 * S_NumDealsPurchases
2321529   +          +    -0.29505970645775 * S_NumDistPurchases
2321530   +          +    -0.13820571170194 * S_NumStorePurchases
2321531   +          +     0.11468011313368 * S_NumWebPurchases
2321532   +          +    -0.18421241371843 * S_NumWebVisitsMonth
2321533   +          +     0.11564064971509 * S_RFMstat  +    -0.02223928001432 *
2321534   +        S_RMntFrq  +     0.18022777532589 * S_Recency
2321535   +          +     0.14654831145379 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26454269681311 * S_AcceptedCmpTotal + -0.01281904987956 * 
S_Age + -0.19309516267581 * S_Frq + -0.19077579202378 * S_Income + 0.1806651018562 * S_Kidhome 
+ -0.31002612826472 * S_Mnt + -0.05901796512011 * S_MntFishProducts + -0.03760930101165 * 
S_MntFruits + 0.01720900715043 * S_MntGoldProds + 0.21472292961422 * S_MntMeatProducts + 
-0.02880706568684 * S_MntSweetProducts + -0.37993583170844 * S_MntWines + -0.00848444156361 * 
S_MonthsAsCustomer + 0.15939611818942 * S_NumCatalogPurchases + 0.08390531145773 * 
S_NumDealsPurchases + -0.29505970645775 * S_NumDistPurchases + -0.13820571170194 * 
S_NumStorePurchases + 0.11468011313368 * S_NumWebPurchases + -0.18421241371843 * 
S_NumWebVisitsMonth + 0.11564064971509 * S_RFMstat + -0.02223928001432 * S_RMntFrq + 
0.18022777532589 * S_Recency + 0.14654831145379 * S_Teenhome ;
2321536   +   H1x1_2  =     0.27055972468014 * S_AcceptedCmpTotal
2321537   +          +      0.0025862891193 * S_Age  +    -0.07147307366817 * S_Frq
2321538   +          +      0.1883776136263 * S_Income  +    -0.12712510891181 *
2321539   +        S_Kidhome  +    -0.42099927948686 * S_Mnt  +    -0.07047631817862 *
2321540   +        S_MntFishProducts  +    -0.06658475152878 * S_MntFruits
2321541   +          +     0.01943025682869 * S_MntGoldProds  +     0.29481794109465 *
2321542   +        S_MntMeatProducts  +    -0.06573502094591 * S_MntSweetProducts
2321543   +          +    -0.46266722725002 * S_MntWines  +    -0.00472333181469 *
2321544   +        S_MonthsAsCustomer  +     0.35081452017576 * S_NumCatalogPurchases
2321545   +          +     0.18009076035363 * S_NumDealsPurchases
2321546   +          +     0.03853861006587 * S_NumDistPurchases
2321547   +          +    -0.05118063952874 * S_NumStorePurchases
2321548   +          +    -0.03282286120473 * S_NumWebPurchases
2321549   +          +     0.31160900419026 * S_NumWebVisitsMonth
2321550   +          +     0.08027884378429 * S_RFMstat  +     0.39057239541393 *
2321551   +        S_RMntFrq  +    -0.34796767111274 * S_Recency
2321552   +          +    -0.12099758522271 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.27055972468014 * S_AcceptedCmpTotal + 0.0025862891193 * S_Age 
+ -0.07147307366817 * S_Frq + 0.1883776136263 * S_Income + -0.12712510891181 * S_Kidhome + 
-0.42099927948686 * S_Mnt + -0.07047631817862 * S_MntFishProducts + -0.06658475152878 * 
S_MntFruits + 0.01943025682869 * S_MntGoldProds + 0.29481794109465 * S_MntMeatProducts + 
-0.06573502094591 * S_MntSweetProducts + -0.46266722725002 * S_MntWines + -0.00472333181469 * 
S_MonthsAsCustomer + 0.35081452017576 * S_NumCatalogPurchases + 0.18009076035363 * 
S_NumDealsPurchases + 0.03853861006587 * S_NumDistPurchases + -0.05118063952874 * 
S_NumStorePurchases + -0.03282286120473 * S_NumWebPurchases + 0.31160900419026 * 
S_NumWebVisitsMonth + 0.08027884378429 * S_RFMstat + 0.39057239541393 * S_RMntFrq + 
-0.34796767111274 * S_Recency + -0.12099758522271 * S_Teenhome ;
2321553   +   H1x1_1  = H1x1_1  +     0.12539246465239 * AcceptedCmp10
2321554   +          +     0.38473652869745 * AcceptedCmp20  +     0.29820983391886 *
2321555   +        AcceptedCmp30  +     0.29085092779792 * AcceptedCmp40
2321556   +          +     0.18918195914981 * AcceptedCmp50  +    -0.26812516781697 *
2321557   +        Complain0  +    -0.08804110897148 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.12539246465239 * AcceptedCmp10 + 0.38473652869745 * 
AcceptedCmp20 + 0.29820983391886 * AcceptedCmp30 + 0.29085092779792 * AcceptedCmp40 + 
0.18918195914981 * AcceptedCmp50 + -0.26812516781697 * Complain0 + -0.08804110897148 * 
HigherEducationBinary0 ;
2321558   +   H1x1_2  = H1x1_2  +    -0.02312897825565 * AcceptedCmp10
2321559   +          +     0.03909481703523 * AcceptedCmp20  +     0.02531081539721 *
2321560   +        AcceptedCmp30  +     0.03109641300151 * AcceptedCmp40
2321561   +          +     0.01985718189621 * AcceptedCmp50  +     0.13425456375085 *
2321562   +        Complain0  +    -0.08222486590117 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.02312897825565 * AcceptedCmp10 + 0.03909481703523 * 
AcceptedCmp20 + 0.02531081539721 * AcceptedCmp30 + 0.03109641300151 * AcceptedCmp40 + 
0.01985718189621 * AcceptedCmp50 + 0.13425456375085 * Complain0 + -0.08222486590117 * 
HigherEducationBinary0 ;
2321563   +   H1x1_1  = H1x1_1  +    -0.01975862863669 * Education2n_Cycle
2321564   +          +     0.14654730697956 * EducationBasic  +    -0.00459515646452 *
2321565   +        EducationGraduation  +     0.01586948449127 * EducationMaster
2321566   +          +    -0.04750981393889 * Marital_StatusDivorced
2321567   +          +     0.28216925676677 * Marital_StatusMarried
2321568   +          +    -0.20757827413964 * Marital_StatusSingle
2321569   +          +     0.22622509024122 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.01975862863669 * Education2n_Cycle + 
0.14654730697956 * EducationBasic + -0.00459515646452 * EducationGraduation + 0.01586948449127 
* EducationMaster + -0.04750981393889 * Marital_StatusDivorced + 0.28216925676677 * 
Marital_StatusMarried + -0.20757827413964 * Marital_StatusSingle + 0.22622509024122 * 
Marital_StatusTogether ;
2321570   +   H1x1_2  = H1x1_2  +     0.12009608969049 * Education2n_Cycle
2321571   +          +     0.01793460710056 * EducationBasic  +    -0.04257710051346 *
2321572   +        EducationGraduation  +    -0.06975725710115 * EducationMaster
2321573   +          +     0.05981919620577 * Marital_StatusDivorced
2321574   +          +    -0.17161573846062 * Marital_StatusMarried
2321575   +          +     0.15869440681091 * Marital_StatusSingle
2321576   +          +    -0.13282372850158 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12009608969049 * Education2n_Cycle + 
0.01793460710056 * EducationBasic + -0.04257710051346 * EducationGraduation + 
-0.06975725710115 * EducationMaster + 0.05981919620577 * Marital_StatusDivorced + 
-0.17161573846062 * Marital_StatusMarried + 0.15869440681091 * Marital_StatusSingle + 
-0.13282372850158 * Marital_StatusTogether ;
2321577   +   H1x1_1  =     0.87962277715971 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.87962277715971 + H1x1_1 ;
2321578   +   H1x1_2  =    -0.62570339696782 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.62570339696782 + H1x1_2 ;
2321579   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
2321580   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
2321581   +END;
MPRINT(EM_DIAGRAM):   END;
2321582   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2321583   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2321584   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2321585   +END;
MPRINT(EM_DIAGRAM):   END;
2321586   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2321587   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2321588   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2321589   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2321590   +   H1x2_1  =      0.1719390672121 * S_AcceptedCmpTotal
2321591   +          +     0.23586839288361 * S_Age  +    -1.85384134180372 * S_Frq
2321592   +          +    -0.43561758063577 * S_Income  +     -2.5581498901473 *
2321593   +        S_Kidhome  +      1.7031888248428 * S_Mnt  +     0.84982621124736 *
2321594   +        S_MntFishProducts  +     0.25990173458485 * S_MntFruits
2321595   +          +    -2.80730469703961 * S_MntGoldProds  +     0.64923500711702 *
2321596   +        S_MntMeatProducts  +     0.27458645458502 * S_MntSweetProducts
2321597   +          +    -0.47723589182372 * S_MntWines  +    -0.66777488145507 *
2321598   +        S_MonthsAsCustomer  +    -0.46364414558282 * S_NumCatalogPurchases
2321599   +          +     0.00741910846933 * S_NumDealsPurchases
2321600   +          +       1.334289252268 * S_NumDistPurchases
2321601   +          +    -0.29851567180932 * S_NumStorePurchases
2321602   +          +    -0.52115313259666 * S_NumWebPurchases
2321603   +          +     0.93907168501909 * S_NumWebVisitsMonth
2321604   +          +    -0.26126881318451 * S_RFMstat  +     -1.3003763542929 *
2321605   +        S_RMntFrq  +    -0.12807368149309 * S_Recency
2321606   +          +    -0.21296116974623 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.1719390672121 * S_AcceptedCmpTotal + 0.23586839288361 * S_Age 
+ -1.85384134180372 * S_Frq + -0.43561758063577 * S_Income + -2.5581498901473 * S_Kidhome + 
1.7031888248428 * S_Mnt + 0.84982621124736 * S_MntFishProducts + 0.25990173458485 * 
S_MntFruits + -2.80730469703961 * S_MntGoldProds + 0.64923500711702 * S_MntMeatProducts + 
0.27458645458502 * S_MntSweetProducts + -0.47723589182372 * S_MntWines + -0.66777488145507 * 
S_MonthsAsCustomer + -0.46364414558282 * S_NumCatalogPurchases + 0.00741910846933 * 
S_NumDealsPurchases + 1.334289252268 * S_NumDistPurchases + -0.29851567180932 * 
S_NumStorePurchases + -0.52115313259666 * S_NumWebPurchases + 0.93907168501909 * 
S_NumWebVisitsMonth + -0.26126881318451 * S_RFMstat + -1.3003763542929 * S_RMntFrq + 
-0.12807368149309 * S_Recency + -0.21296116974623 * S_Teenhome ;
2321607   +   H1x2_2  =     0.30897763700303 * S_AcceptedCmpTotal
2321608   +          +    -0.77727886396317 * S_Age  +    -0.79298582494973 * S_Frq
2321609   +          +    -1.73199353738093 * S_Income  +     1.12984956989288 *
2321610   +        S_Kidhome  +    -1.36701096993984 * S_Mnt  +    -0.21063950702424 *
2321611   +        S_MntFishProducts  +    -0.20027336686257 * S_MntFruits
2321612   +          +    -0.06955810418489 * S_MntGoldProds  +     0.16672767423533 *
2321613   +        S_MntMeatProducts  +    -1.56675269740541 * S_MntSweetProducts
2321614   +          +     1.85366479127485 * S_MntWines  +    -0.58178621903094 *
2321615   +        S_MonthsAsCustomer  +     1.31024619253935 * S_NumCatalogPurchases
2321616   +          +     1.60427001186844 * S_NumDealsPurchases
2321617   +          +    -0.18447618033353 * S_NumDistPurchases
2321618   +          +    -1.29966073003539 * S_NumStorePurchases
2321619   +          +    -1.12373457341536 * S_NumWebPurchases
2321620   +          +     1.46099221440494 * S_NumWebVisitsMonth
2321621   +          +     0.17795038564406 * S_RFMstat  +    -0.82372068140832 *
2321622   +        S_RMntFrq  +      0.4480370534729 * S_Recency
2321623   +          +     0.19272737691538 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.30897763700303 * S_AcceptedCmpTotal + -0.77727886396317 * 
S_Age + -0.79298582494973 * S_Frq + -1.73199353738093 * S_Income + 1.12984956989288 * 
S_Kidhome + -1.36701096993984 * S_Mnt + -0.21063950702424 * S_MntFishProducts + 
-0.20027336686257 * S_MntFruits + -0.06955810418489 * S_MntGoldProds + 0.16672767423533 * 
S_MntMeatProducts + -1.56675269740541 * S_MntSweetProducts + 1.85366479127485 * S_MntWines + 
-0.58178621903094 * S_MonthsAsCustomer + 1.31024619253935 * S_NumCatalogPurchases + 
1.60427001186844 * S_NumDealsPurchases + -0.18447618033353 * S_NumDistPurchases + 
-1.29966073003539 * S_NumStorePurchases + -1.12373457341536 * S_NumWebPurchases + 
1.46099221440494 * S_NumWebVisitsMonth + 0.17795038564406 * S_RFMstat + -0.82372068140832 * 
S_RMntFrq + 0.4480370534729 * S_Recency + 0.19272737691538 * S_Teenhome ;
2321624   +   H1x2_1  = H1x2_1  +     -0.6569942252053 * AcceptedCmp10
2321625   +          +    -0.89152555599538 * AcceptedCmp20  +     1.00488730476017 *
2321626   +        AcceptedCmp30  +     0.34286042692068 * AcceptedCmp40
2321627   +          +    -1.19198820362508 * AcceptedCmp50  +    -0.86571531914686 *
2321628   +        Complain0  +     0.14303136037365 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.6569942252053 * AcceptedCmp10 + -0.89152555599538 * 
AcceptedCmp20 + 1.00488730476017 * AcceptedCmp30 + 0.34286042692068 * AcceptedCmp40 + 
-1.19198820362508 * AcceptedCmp50 + -0.86571531914686 * Complain0 + 0.14303136037365 * 
HigherEducationBinary0 ;
2321629   +   H1x2_2  = H1x2_2  +     1.79481763784518 * AcceptedCmp10
2321630   +          +    -2.85912280013336 * AcceptedCmp20  +     0.16890012708431 *
2321631   +        AcceptedCmp30  +     0.94639083182751 * AcceptedCmp40
2321632   +          +    -0.62141828005946 * AcceptedCmp50  +    -0.39098882491277 *
2321633   +        Complain0  +     0.85700787946581 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.79481763784518 * AcceptedCmp10 + -2.85912280013336 * 
AcceptedCmp20 + 0.16890012708431 * AcceptedCmp30 + 0.94639083182751 * AcceptedCmp40 + 
-0.62141828005946 * AcceptedCmp50 + -0.39098882491277 * Complain0 + 0.85700787946581 * 
HigherEducationBinary0 ;
2321634   +   H1x2_1  = H1x2_1  +      0.0737054452993 * Education2n_Cycle
2321635   +          +       0.362372261752 * EducationBasic  +      -1.485941295677 *
2321636   +        EducationGraduation  +    -0.81257694655594 * EducationMaster
2321637   +          +     0.59819559998538 * Marital_StatusDivorced
2321638   +          +     0.92957772553633 * Marital_StatusMarried
2321639   +          +    -1.11796266958894 * Marital_StatusSingle
2321640   +          +     -2.0576132087002 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.0737054452993 * Education2n_Cycle + 0.362372261752 * 
EducationBasic + -1.485941295677 * EducationGraduation + -0.81257694655594 * EducationMaster + 
0.59819559998538 * Marital_StatusDivorced + 0.92957772553633 * Marital_StatusMarried + 
-1.11796266958894 * Marital_StatusSingle + -2.0576132087002 * Marital_StatusTogether ;
2321641   +   H1x2_2  = H1x2_2  +    -1.10016528859962 * Education2n_Cycle
2321642   +          +    -1.46816646165468 * EducationBasic  +    -0.11241499152788 *
2321643   +        EducationGraduation  +    -0.65110715251273 * EducationMaster
2321644   +          +      1.0870909562212 * Marital_StatusDivorced
2321645   +          +     1.50333961797515 * Marital_StatusMarried
2321646   +          +    -1.41407780765932 * Marital_StatusSingle
2321647   +          +    -0.52528072358697 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.10016528859962 * Education2n_Cycle + 
-1.46816646165468 * EducationBasic + -0.11241499152788 * EducationGraduation + 
-0.65110715251273 * EducationMaster + 1.0870909562212 * Marital_StatusDivorced + 
1.50333961797515 * Marital_StatusMarried + -1.41407780765932 * Marital_StatusSingle + 
-0.52528072358697 * Marital_StatusTogether ;
2321648   +   H1x2_1  =     1.46376024534028 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.46376024534028 + H1x2_1 ;
2321649   +   H1x2_2  =    -0.21341526379366 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.21341526379366 + H1x2_2 ;
2321650   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2321651   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2321652   +   H1x2_1  = EXP(MIN(-0.5 * H1x2_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(-0.5 * H1x2_1 **2, _EXP_BAR));
2321653   +   H1x2_2  = EXP(MIN(-0.5 * H1x2_2 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(-0.5 * H1x2_2 **2, _EXP_BAR));
2321654   +END;
MPRINT(EM_DIAGRAM):   END;
2321655   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2321656   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2321657   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2321658   +END;
MPRINT(EM_DIAGRAM):   END;
2321659   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2321660   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2321661   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2321662   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2321663   +   H1x3_1  =     0.29299707972123 * S_AcceptedCmpTotal
2321664   +          +     1.39797329466471 * S_Age  +    -2.02673480388837 * S_Frq
2321665   +          +    -1.09682777516542 * S_Income  +    -1.22241109888643 *
2321666   +        S_Kidhome  +    -1.35766076466324 * S_Mnt  +    -2.90812690982576 *
2321667   +        S_MntFishProducts  +    -0.48174923069843 * S_MntFruits
2321668   +          +     1.57335575145195 * S_MntGoldProds  +    -0.55248873552176 *
2321669   +        S_MntMeatProducts  +     0.54536808091745 * S_MntSweetProducts
2321670   +          +    -0.41516162035296 * S_MntWines  +     0.07715050596116 *
2321671   +        S_MonthsAsCustomer  +    -2.18785324142159 * S_NumCatalogPurchases
2321672   +          +     -1.1174504455343 * S_NumDealsPurchases
2321673   +          +    -0.18561253113498 * S_NumDistPurchases
2321674   +          +    -0.35231054612792 * S_NumStorePurchases
2321675   +          +      0.9249490354172 * S_NumWebPurchases
2321676   +          +    -0.79868535147175 * S_NumWebVisitsMonth
2321677   +          +    -0.17158151681124 * S_RFMstat  +     -0.9870286843901 *
2321678   +        S_RMntFrq  +     0.62439123699986 * S_Recency
2321679   +          +    -0.45845377794308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.29299707972123 * S_AcceptedCmpTotal + 1.39797329466471 * 
S_Age + -2.02673480388837 * S_Frq + -1.09682777516542 * S_Income + -1.22241109888643 * 
S_Kidhome + -1.35766076466324 * S_Mnt + -2.90812690982576 * S_MntFishProducts + 
-0.48174923069843 * S_MntFruits + 1.57335575145195 * S_MntGoldProds + -0.55248873552176 * 
S_MntMeatProducts + 0.54536808091745 * S_MntSweetProducts + -0.41516162035296 * S_MntWines + 
0.07715050596116 * S_MonthsAsCustomer + -2.18785324142159 * S_NumCatalogPurchases + 
-1.1174504455343 * S_NumDealsPurchases + -0.18561253113498 * S_NumDistPurchases + 
-0.35231054612792 * S_NumStorePurchases + 0.9249490354172 * S_NumWebPurchases + 
-0.79868535147175 * S_NumWebVisitsMonth + -0.17158151681124 * S_RFMstat + -0.9870286843901 * 
S_RMntFrq + 0.62439123699986 * S_Recency + -0.45845377794308 * S_Teenhome ;
2321680   +   H1x3_2  =    -1.07483179793421 * S_AcceptedCmpTotal
2321681   +          +     1.03558600048684 * S_Age  +     1.11497695424161 * S_Frq
2321682   +          +     0.27297296926116 * S_Income  +     0.77036019999023 *
2321683   +        S_Kidhome  +     0.02567848304605 * S_Mnt  +     0.38661977628442 *
2321684   +        S_MntFishProducts  +    -0.36751750771945 * S_MntFruits
2321685   +          +     0.93924107558212 * S_MntGoldProds  +     0.93046859422523 *
2321686   +        S_MntMeatProducts  +    -0.46124679979068 * S_MntSweetProducts
2321687   +          +    -0.45348234529786 * S_MntWines  +     1.60057890623864 *
2321688   +        S_MonthsAsCustomer  +    -1.74657448073162 * S_NumCatalogPurchases
2321689   +          +     1.05434863590054 * S_NumDealsPurchases
2321690   +          +    -0.73255174632068 * S_NumDistPurchases
2321691   +          +     0.53949953455044 * S_NumStorePurchases
2321692   +          +    -0.61709467816649 * S_NumWebPurchases
2321693   +          +     1.36235282484348 * S_NumWebVisitsMonth
2321694   +          +     -0.0352720913953 * S_RFMstat  +     0.14001475375682 *
2321695   +        S_RMntFrq  +    -0.24276831608869 * S_Recency
2321696   +          +     0.09762798365722 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -1.07483179793421 * S_AcceptedCmpTotal + 1.03558600048684 * 
S_Age + 1.11497695424161 * S_Frq + 0.27297296926116 * S_Income + 0.77036019999023 * S_Kidhome 
+ 0.02567848304605 * S_Mnt + 0.38661977628442 * S_MntFishProducts + -0.36751750771945 * 
S_MntFruits + 0.93924107558212 * S_MntGoldProds + 0.93046859422523 * S_MntMeatProducts + 
-0.46124679979068 * S_MntSweetProducts + -0.45348234529786 * S_MntWines + 1.60057890623864 * 
S_MonthsAsCustomer + -1.74657448073162 * S_NumCatalogPurchases + 1.05434863590054 * 
S_NumDealsPurchases + -0.73255174632068 * S_NumDistPurchases + 0.53949953455044 * 
S_NumStorePurchases + -0.61709467816649 * S_NumWebPurchases + 1.36235282484348 * 
S_NumWebVisitsMonth + -0.0352720913953 * S_RFMstat + 0.14001475375682 * S_RMntFrq + 
-0.24276831608869 * S_Recency + 0.09762798365722 * S_Teenhome ;
2321697   +   H1x3_1  = H1x3_1  +    -0.94208577947628 * AcceptedCmp10
2321698   +          +     -0.5233017415423 * AcceptedCmp20  +    -0.76900164563331 *
2321699   +        AcceptedCmp30  +    -0.79512141055877 * AcceptedCmp40
2321700   +          +     0.20126599116957 * AcceptedCmp50  +    -0.43046555689873 *
2321701   +        Complain0  +     0.31565229685815 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.94208577947628 * AcceptedCmp10 + -0.5233017415423 * 
AcceptedCmp20 + -0.76900164563331 * AcceptedCmp30 + -0.79512141055877 * AcceptedCmp40 + 
0.20126599116957 * AcceptedCmp50 + -0.43046555689873 * Complain0 + 0.31565229685815 * 
HigherEducationBinary0 ;
2321702   +   H1x3_2  = H1x3_2  +    -1.24961064002454 * AcceptedCmp10
2321703   +          +    -0.89859693224833 * AcceptedCmp20  +     1.15884958881232 *
2321704   +        AcceptedCmp30  +     0.38250389164472 * AcceptedCmp40
2321705   +          +     0.47123004358879 * AcceptedCmp50  +     -2.1232679844098 *
2321706   +        Complain0  +     0.97226091069674 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -1.24961064002454 * AcceptedCmp10 + -0.89859693224833 
* AcceptedCmp20 + 1.15884958881232 * AcceptedCmp30 + 0.38250389164472 * AcceptedCmp40 + 
0.47123004358879 * AcceptedCmp50 + -2.1232679844098 * Complain0 + 0.97226091069674 * 
HigherEducationBinary0 ;
2321707   +   H1x3_1  = H1x3_1  +    -0.07500306665919 * Education2n_Cycle
2321708   +          +     0.04122924311058 * EducationBasic  +    -0.49410102102951 *
2321709   +        EducationGraduation  +    -0.45477734340809 * EducationMaster
2321710   +          +     0.22253248036322 * Marital_StatusDivorced
2321711   +          +    -1.72455332745001 * Marital_StatusMarried
2321712   +          +     0.57787272107232 * Marital_StatusSingle
2321713   +          +     0.16267074825086 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.07500306665919 * Education2n_Cycle + 
0.04122924311058 * EducationBasic + -0.49410102102951 * EducationGraduation + 
-0.45477734340809 * EducationMaster + 0.22253248036322 * Marital_StatusDivorced + 
-1.72455332745001 * Marital_StatusMarried + 0.57787272107232 * Marital_StatusSingle + 
0.16267074825086 * Marital_StatusTogether ;
2321714   +   H1x3_2  = H1x3_2  +    -0.21560233542581 * Education2n_Cycle
2321715   +          +    -0.36476815429069 * EducationBasic  +     1.63334881201349 *
2321716   +        EducationGraduation  +    -1.12620982139344 * EducationMaster
2321717   +          +     0.14637124403046 * Marital_StatusDivorced
2321718   +          +     0.18905186437528 * Marital_StatusMarried
2321719   +          +     0.00511958458521 * Marital_StatusSingle
2321720   +          +      -0.915980703129 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.21560233542581 * Education2n_Cycle + 
-0.36476815429069 * EducationBasic + 1.63334881201349 * EducationGraduation + 
-1.12620982139344 * EducationMaster + 0.14637124403046 * Marital_StatusDivorced + 
0.18905186437528 * Marital_StatusMarried + 0.00511958458521 * Marital_StatusSingle + 
-0.915980703129 * Marital_StatusTogether ;
2321721   +   H1x3_1  =     0.54853846322055 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.54853846322055 + H1x3_1 ;
2321722   +   H1x3_2  =     1.36395858099198 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.36395858099198 + H1x3_2 ;
2321723   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2321724   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2321725   +   H1x3_1  = EXP(MIN(H1x3_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(MIN(H1x3_1 , _EXP_BAR));
2321726   +   H1x3_2  = EXP(MIN(H1x3_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(MIN(H1x3_2 , _EXP_BAR));
2321727   +END;
MPRINT(EM_DIAGRAM):   END;
2321728   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2321729   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2321730   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2321731   +END;
MPRINT(EM_DIAGRAM):   END;
2321732   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2321733   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2321734   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2321735   +
2321736   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2321737   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2321738   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2321739   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2321740   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2321741   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2321742   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2321743   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2321744   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2321745   +end;
MPRINT(EM_DIAGRAM):   end;
2321746   +else do;
MPRINT(EM_DIAGRAM):   else do;
2321747   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2321748   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2321749   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2321750   +   end;
MPRINT(EM_DIAGRAM):   end;
2321751   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2321752   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2321753   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2321754   +   end;
MPRINT(EM_DIAGRAM):   end;
2321755   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2321756   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2321757   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2321758   +   end;
MPRINT(EM_DIAGRAM):   end;
2321759   +end;
MPRINT(EM_DIAGRAM):   end;
2321760   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2321761   +   P_DepVar1  =    -10.6892993503201 * H1x1_1  +     16.2938756734008 * H1x1_2
2321762   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -10.6892993503201 * H1x1_1 + 16.2938756734008 * H1x1_2 ;
2321763   +   P_DepVar1  = P_DepVar1  +      1.2332183930826 * H1x2_1
2321764   +          +    -0.85206858106106 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + 1.2332183930826 * H1x2_1 + -0.85206858106106 * 
H1x2_2 ;
2321765   +   P_DepVar1  = P_DepVar1  +    -0.00087126688031 * H1x3_1
2321766   +          +    -0.00025812675645 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.00087126688031 * H1x3_1 + -0.00025812675645 * 
H1x3_2 ;
2321767   +   P_DepVar1  =     2.20710379818135 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.20710379818135 + P_DepVar1 ;
2321768   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2321769   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2321770   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2321771   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2321772   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2321773   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2321774   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2321775   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2321776   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2321777   +END;
MPRINT(EM_DIAGRAM):   END;
2321778   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2321779   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2321780   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2321781   +END;
MPRINT(EM_DIAGRAM):   END;
2321782   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2321783   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2321784   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2321785   +END;
MPRINT(EM_DIAGRAM):   END;
2321786   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2321787   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2321788   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2321789   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2321790   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2321791   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2321792   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2321793   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2321794   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2321795   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2321796   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2321797   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2321798   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2321799   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2321800   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2321801   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2321802   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2321803   +END;
MPRINT(EM_DIAGRAM):   END;
2321804   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2321805   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2321806   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2321807   +drop
2321808   +H1x1_1
2321809   +H1x1_2
2321810   +H1x2_1
2321811   +H1x2_2
2321812   +H1x3_1
2321813   +H1x3_2
2321814   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x2_1 H1x2_2 H1x3_1 H1x3_2 ;
2321815   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2321816   +* Renaming variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural7;
2321817   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2321818   +* Renaming Posterior variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural7;
2321819   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2321820   +drop AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar1;
2321821   +AutoNeural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar1 = P_DepVar1;
2321822   +drop AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar0;
2321823   +AutoNeural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar0 = P_DepVar0;
2321824   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2321825   +* Renaming Into variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural7;
2321826   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2321827   +length AutoNeural7_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural7_I_DepVar $32;
2321828   +drop AutoNeural7_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_I_DepVar;
2321829   +AutoNeural7_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural7_I_DepVar = I_DepVar;
2321830   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2321831   +* Renaming _WARN_ variable for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural7;
2321832   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2321833   +length AutoNeural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural7_WARN_ $4;
2321834   +drop AutoNeural7_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_WARN_;
2321835   +AutoNeural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural7_WARN_ = _WARN_;
2321836   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2321837   +* Ensmbl38: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Scoring Code of model 3 of 7;
2321838   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2321839   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2321840   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2321841   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2321842   +* NODE: AutoNeural8;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural8;
2321843   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2321844   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2321845   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2321846   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2321847   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2321848   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2321849   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2321850   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2321851   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2321852   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2321853   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2321854   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2321855   +LENGTH _WARN_ $4
2321856   +      F_DepVar  $ 12
2321857   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2321858   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2321859   +
2321860   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2321861   +
2321862   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2321863   +
2321864   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2321865   +
2321866   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2321867   +
2321868   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2321869   +
2321870   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2321871   +
2321872   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2321873   +
2321874   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2321875   +
2321876   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2321877   +
2321878   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2321879   +
2321880   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2321881   +
2321882   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2321883   +
2321884   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2321885   +
2321886   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2321887   +
2321888   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2321889   +
2321890   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2321891   +
2321892   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2321893   +
2321894   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2321895   +
2321896   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2321897   +
2321898   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2321899   +
2321900   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2321901   +
2321902   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2321903   +
2321904   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2321905   +
2321906   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2321907   +
2321908   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2321909   +
2321910   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2321911   +
2321912   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2321913   +
2321914   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2321915   +
2321916   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2321917   +
2321918   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2321919   +
2321920   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2321921   +
2321922   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2321923   +
2321924   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2321925   +
2321926   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2321927   +
2321928   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2321929   +
2321930   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2321931   +
2321932   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2321933   +
2321934   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2321935   +
2321936   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2321937   +
2321938   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2321939   +
2321940   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2321941   +
2321942   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2321943   +
2321944   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2321945   +
2321946   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2321947   +
2321948   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2321949   +
2321950   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2321951   +
2321952   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2321953   +
2321954   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2321955   +
2321956   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2321957   +
2321958   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2321959   +
2321960   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2321961   +
2321962   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2321963   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2321964   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2321965   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2321966   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2321967   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2321968   +end;
MPRINT(EM_DIAGRAM):   end;
2321969   +else do;
MPRINT(EM_DIAGRAM):   else do;
2321970   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2321971   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2321972   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2321973   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2321974   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2321975   +   end;
MPRINT(EM_DIAGRAM):   end;
2321976   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2321977   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2321978   +   end;
MPRINT(EM_DIAGRAM):   end;
2321979   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2321980   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2321981   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2321982   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2321983   +   end;
MPRINT(EM_DIAGRAM):   end;
2321984   +end;
MPRINT(EM_DIAGRAM):   end;
2321985   +
2321986   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2321987   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2321988   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2321989   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2321990   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2321991   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2321992   +end;
MPRINT(EM_DIAGRAM):   end;
2321993   +else do;
MPRINT(EM_DIAGRAM):   else do;
2321994   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2321995   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2321996   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2321997   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2321998   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2321999   +   end;
MPRINT(EM_DIAGRAM):   end;
2322000   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2322001   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2322002   +   end;
MPRINT(EM_DIAGRAM):   end;
2322003   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2322004   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2322005   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2322006   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2322007   +   end;
MPRINT(EM_DIAGRAM):   end;
2322008   +end;
MPRINT(EM_DIAGRAM):   end;
2322009   +
2322010   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2322011   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2322012   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2322013   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2322014   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2322015   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2322016   +end;
MPRINT(EM_DIAGRAM):   end;
2322017   +else do;
MPRINT(EM_DIAGRAM):   else do;
2322018   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2322019   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2322020   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2322021   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2322022   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2322023   +   end;
MPRINT(EM_DIAGRAM):   end;
2322024   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2322025   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2322026   +   end;
MPRINT(EM_DIAGRAM):   end;
2322027   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2322028   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2322029   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2322030   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2322031   +   end;
MPRINT(EM_DIAGRAM):   end;
2322032   +end;
MPRINT(EM_DIAGRAM):   end;
2322033   +
2322034   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2322035   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2322036   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2322037   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2322038   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2322039   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2322040   +end;
MPRINT(EM_DIAGRAM):   end;
2322041   +else do;
MPRINT(EM_DIAGRAM):   else do;
2322042   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2322043   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2322044   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2322045   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2322046   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2322047   +   end;
MPRINT(EM_DIAGRAM):   end;
2322048   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2322049   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2322050   +   end;
MPRINT(EM_DIAGRAM):   end;
2322051   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2322052   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2322053   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2322054   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2322055   +   end;
MPRINT(EM_DIAGRAM):   end;
2322056   +end;
MPRINT(EM_DIAGRAM):   end;
2322057   +
2322058   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2322059   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2322060   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2322061   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2322062   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2322063   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2322064   +end;
MPRINT(EM_DIAGRAM):   end;
2322065   +else do;
MPRINT(EM_DIAGRAM):   else do;
2322066   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2322067   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2322068   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2322069   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2322070   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2322071   +   end;
MPRINT(EM_DIAGRAM):   end;
2322072   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2322073   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2322074   +   end;
MPRINT(EM_DIAGRAM):   end;
2322075   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2322076   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2322077   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2322078   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2322079   +   end;
MPRINT(EM_DIAGRAM):   end;
2322080   +end;
MPRINT(EM_DIAGRAM):   end;
2322081   +
2322082   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2322083   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2322084   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2322085   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2322086   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2322087   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2322088   +end;
MPRINT(EM_DIAGRAM):   end;
2322089   +else do;
MPRINT(EM_DIAGRAM):   else do;
2322090   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2322091   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2322092   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2322093   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2322094   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2322095   +   end;
MPRINT(EM_DIAGRAM):   end;
2322096   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2322097   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2322098   +   end;
MPRINT(EM_DIAGRAM):   end;
2322099   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2322100   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2322101   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2322102   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2322103   +   end;
MPRINT(EM_DIAGRAM):   end;
2322104   +end;
MPRINT(EM_DIAGRAM):   end;
2322105   +
2322106   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2322107   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2322108   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2322109   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2322110   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2322111   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2322112   +end;
MPRINT(EM_DIAGRAM):   end;
2322113   +else do;
MPRINT(EM_DIAGRAM):   else do;
2322114   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2322115   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2322116   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2322117   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2322118   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2322119   +   end;
MPRINT(EM_DIAGRAM):   end;
2322120   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2322121   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2322122   +   end;
MPRINT(EM_DIAGRAM):   end;
2322123   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2322124   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2322125   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2322126   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2322127   +   end;
MPRINT(EM_DIAGRAM):   end;
2322128   +end;
MPRINT(EM_DIAGRAM):   end;
2322129   +
2322130   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2322131   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2322132   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2322133   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2322134   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2322135   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2322136   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2322137   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2322138   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2322139   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2322140   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2322141   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2322142   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2322143   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2322144   +end;
MPRINT(EM_DIAGRAM):   end;
2322145   +else do;
MPRINT(EM_DIAGRAM):   else do;
2322146   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2322147   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2322148   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2322149   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2322150   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2322151   +   end;
MPRINT(EM_DIAGRAM):   end;
2322152   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2322153   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2322154   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2322155   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2322156   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2322157   +   end;
MPRINT(EM_DIAGRAM):   end;
2322158   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2322159   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2322160   +   end;
MPRINT(EM_DIAGRAM):   end;
2322161   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2322162   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2322163   +   end;
MPRINT(EM_DIAGRAM):   end;
2322164   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2322165   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2322166   +   end;
MPRINT(EM_DIAGRAM):   end;
2322167   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2322168   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2322169   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2322170   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2322171   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2322172   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2322173   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2322174   +   end;
MPRINT(EM_DIAGRAM):   end;
2322175   +end;
MPRINT(EM_DIAGRAM):   end;
2322176   +
2322177   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2322178   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2322179   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2322180   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2322181   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2322182   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2322183   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2322184   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2322185   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2322186   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2322187   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2322188   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2322189   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2322190   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2322191   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2322192   +end;
MPRINT(EM_DIAGRAM):   end;
2322193   +else do;
MPRINT(EM_DIAGRAM):   else do;
2322194   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2322195   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2322196   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2322197   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2322198   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2322199   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2322200   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2322201   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2322202   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2322203   +         end;
MPRINT(EM_DIAGRAM):   end;
2322204   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2322205   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2322206   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2322207   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2322208   +            end;
MPRINT(EM_DIAGRAM):   end;
2322209   +         end;
MPRINT(EM_DIAGRAM):   end;
2322210   +      end;
MPRINT(EM_DIAGRAM):   end;
2322211   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2322212   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2322213   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2322214   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2322215   +         end;
MPRINT(EM_DIAGRAM):   end;
2322216   +      end;
MPRINT(EM_DIAGRAM):   end;
2322217   +   end;
MPRINT(EM_DIAGRAM):   end;
2322218   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2322219   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2322220   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2322221   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2322222   +      end;
MPRINT(EM_DIAGRAM):   end;
2322223   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2322224   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2322225   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2322226   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2322227   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2322228   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2322229   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2322230   +         end;
MPRINT(EM_DIAGRAM):   end;
2322231   +      end;
MPRINT(EM_DIAGRAM):   end;
2322232   +   end;
MPRINT(EM_DIAGRAM):   end;
2322233   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2322234   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2322235   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2322236   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2322237   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2322238   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2322239   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2322240   +   end;
MPRINT(EM_DIAGRAM):   end;
2322241   +end;
MPRINT(EM_DIAGRAM):   end;
2322242   +
2322243   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2322244   +*** Checking missing input Interval
2322245   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2322246   +
2322247   +IF NMISS(
2322248   +   AcceptedCmpTotal ,
2322249   +   Age ,
2322250   +   Frq ,
2322251   +   Income ,
2322252   +   Kidhome ,
2322253   +   Mnt ,
2322254   +   MntFishProducts ,
2322255   +   MntFruits ,
2322256   +   MntGoldProds ,
2322257   +   MntMeatProducts ,
2322258   +   MntSweetProducts ,
2322259   +   MntWines ,
2322260   +   MonthsAsCustomer ,
2322261   +   NumCatalogPurchases ,
2322262   +   NumDealsPurchases ,
2322263   +   NumDistPurchases ,
2322264   +   NumStorePurchases ,
2322265   +   NumWebPurchases ,
2322266   +   NumWebVisitsMonth ,
2322267   +   RFMstat ,
2322268   +   RMntFrq ,
2322269   +   Recency ,
2322270   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2322271   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2322272   +
2322273   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2322274   +END;
MPRINT(EM_DIAGRAM):   END;
2322275   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2322276   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2322277   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2322278   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2322279   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2322280   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2322281   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2322282   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2322283   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2322284   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2322285   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2322286   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2322287   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2322288   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2322289   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2322290   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2322291   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2322292   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2322293   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2322294   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2322295   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2322296   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2322297   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2322298   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2322299   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2322300   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2322301   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2322302   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2322303   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2322304   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2322305   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2322306   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2322307   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2322308   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2322309   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2322310   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2322311   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2322312   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2322313   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2322314   +END;
MPRINT(EM_DIAGRAM):   END;
2322315   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2322316   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2322317   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2322318   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2322319   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2322320   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2322321   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2322322   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2322323   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2322324   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2322325   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2322326   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2322327   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2322328   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2322329   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2322330   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2322331   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2322332   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2322333   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2322334   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2322335   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2322336   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2322337   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2322338   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2322339   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2322340   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2322341   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2322342   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2322343   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2322344   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2322345   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2322346   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2322347   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2322348   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2322349   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2322350   +   ELSE S_NumCatalogPurchases
2322351   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2322352   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2322353   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2322354   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2322355   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2322356   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2322357   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2322358   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2322359   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2322360   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2322361   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2322362   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2322363   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2322364   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2322365   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2322366   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2322367   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2322368   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2322369   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2322370   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2322371   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2322372   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2322373   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2322374   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2322375   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2322376   +END;
MPRINT(EM_DIAGRAM):   END;
2322377   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2322378   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2322379   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2322380   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2322381   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2322382   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2322383   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2322384   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2322385   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2322386   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2322387   +   H1x1_1  =      1.2726802048269 * S_AcceptedCmpTotal
2322388   +          +    -0.02889982967357 * S_Age  +    -0.26165770909003 * S_Frq
2322389   +          +     0.19140564299867 * S_Income  +     0.30244335152969 *
2322390   +        S_Kidhome  +    -0.03391217967468 * S_Mnt  +    -0.99943007809307 *
2322391   +        S_MntFishProducts  +    -0.04374917285968 * S_MntFruits
2322392   +          +    -0.13546758294455 * S_MntGoldProds  +     3.59922243619013 *
2322393   +        S_MntMeatProducts  +    -0.10424531322566 * S_MntSweetProducts
2322394   +          +    -1.98884071414703 * S_MntWines  +     0.05310540691138 *
2322395   +        S_MonthsAsCustomer  +     0.58072892654416 * S_NumCatalogPurchases
2322396   +          +     0.30381426454211 * S_NumDealsPurchases
2322397   +          +     0.39966076372974 * S_NumDistPurchases
2322398   +          +    -0.58875986801139 * S_NumStorePurchases
2322399   +          +    -0.78850031558536 * S_NumWebPurchases
2322400   +          +     0.35182997415921 * S_NumWebVisitsMonth
2322401   +          +     1.51048129701176 * S_RFMstat  +     1.13354085492775 *
2322402   +        S_RMntFrq  +     -0.2185811652116 * S_Recency
2322403   +          +     0.01153374704027 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.2726802048269 * S_AcceptedCmpTotal + -0.02889982967357 * 
S_Age + -0.26165770909003 * S_Frq + 0.19140564299867 * S_Income + 0.30244335152969 * S_Kidhome 
+ -0.03391217967468 * S_Mnt + -0.99943007809307 * S_MntFishProducts + -0.04374917285968 * 
S_MntFruits + -0.13546758294455 * S_MntGoldProds + 3.59922243619013 * S_MntMeatProducts + 
-0.10424531322566 * S_MntSweetProducts + -1.98884071414703 * S_MntWines + 0.05310540691138 * 
S_MonthsAsCustomer + 0.58072892654416 * S_NumCatalogPurchases + 0.30381426454211 * 
S_NumDealsPurchases + 0.39966076372974 * S_NumDistPurchases + -0.58875986801139 * 
S_NumStorePurchases + -0.78850031558536 * S_NumWebPurchases + 0.35182997415921 * 
S_NumWebVisitsMonth + 1.51048129701176 * S_RFMstat + 1.13354085492775 * S_RMntFrq + 
-0.2185811652116 * S_Recency + 0.01153374704027 * S_Teenhome ;
2322404   +   H1x1_2  =     0.18093166280015 * S_AcceptedCmpTotal
2322405   +          +    -0.00677564787839 * S_Age  +    -0.21510325598577 * S_Frq
2322406   +          +     0.26314356814214 * S_Income  +    -0.30016454601651 *
2322407   +        S_Kidhome  +     -0.1410547608427 * S_Mnt  +    -0.04272369939478 *
2322408   +        S_MntFishProducts  +    -0.05622578678457 * S_MntFruits
2322409   +          +     0.04457230545618 * S_MntGoldProds  +     0.40709024692944 *
2322410   +        S_MntMeatProducts  +    -0.02989090770621 * S_MntSweetProducts
2322411   +          +    -0.18818656503765 * S_MntWines  +    -0.06237311646922 *
2322412   +        S_MonthsAsCustomer  +     0.39737856936198 * S_NumCatalogPurchases
2322413   +          +     0.33734772994048 * S_NumDealsPurchases
2322414   +          +     0.06152222921422 * S_NumDistPurchases
2322415   +          +    -0.32068333792942 * S_NumStorePurchases
2322416   +          +    -0.26971366415104 * S_NumWebPurchases
2322417   +          +     0.57693239481071 * S_NumWebVisitsMonth
2322418   +          +     0.01161324864777 * S_RFMstat  +     0.00311083015445 *
2322419   +        S_RMntFrq  +    -0.67669007299893 * S_Recency
2322420   +          +     -0.2298426154616 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.18093166280015 * S_AcceptedCmpTotal + -0.00677564787839 * 
S_Age + -0.21510325598577 * S_Frq + 0.26314356814214 * S_Income + -0.30016454601651 * 
S_Kidhome + -0.1410547608427 * S_Mnt + -0.04272369939478 * S_MntFishProducts + 
-0.05622578678457 * S_MntFruits + 0.04457230545618 * S_MntGoldProds + 0.40709024692944 * 
S_MntMeatProducts + -0.02989090770621 * S_MntSweetProducts + -0.18818656503765 * S_MntWines + 
-0.06237311646922 * S_MonthsAsCustomer + 0.39737856936198 * S_NumCatalogPurchases + 
0.33734772994048 * S_NumDealsPurchases + 0.06152222921422 * S_NumDistPurchases + 
-0.32068333792942 * S_NumStorePurchases + -0.26971366415104 * S_NumWebPurchases + 
0.57693239481071 * S_NumWebVisitsMonth + 0.01161324864777 * S_RFMstat + 0.00311083015445 * 
S_RMntFrq + -0.67669007299893 * S_Recency + -0.2298426154616 * S_Teenhome ;
2322421   +   H1x1_3  =    -0.09356212420726 * S_AcceptedCmpTotal
2322422   +          +    -0.01904617704654 * S_Age  +    -0.15700206132472 * S_Frq
2322423   +          +    -0.58483226627076 * S_Income  +     0.30001673574917 *
2322424   +        S_Kidhome  +    -0.19921492301896 * S_Mnt  +    -0.00125986769238 *
2322425   +        S_MntFishProducts  +     0.10195959942937 * S_MntFruits
2322426   +          +      0.0069592628978 * S_MntGoldProds  +     0.03606436199308 *
2322427   +        S_MntMeatProducts  +     0.11259135359155 * S_MntSweetProducts
2322428   +          +     0.05408818612126 * S_MntWines  +    -0.14024859528104 *
2322429   +        S_MonthsAsCustomer  +    -0.14071929240584 * S_NumCatalogPurchases
2322430   +          +     0.22142792900578 * S_NumDealsPurchases
2322431   +          +     -0.0291983445755 * S_NumDistPurchases
2322432   +          +     -0.1997372957954 * S_NumStorePurchases
2322433   +          +    -0.01286201468794 * S_NumWebPurchases
2322434   +          +    -0.35208468552742 * S_NumWebVisitsMonth
2322435   +          +     0.02982651364231 * S_RFMstat  +      0.0228316921695 *
2322436   +        S_RMntFrq  +      0.3930877517629 * S_Recency
2322437   +          +     0.28989829670594 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.09356212420726 * S_AcceptedCmpTotal + -0.01904617704654 * 
S_Age + -0.15700206132472 * S_Frq + -0.58483226627076 * S_Income + 0.30001673574917 * 
S_Kidhome + -0.19921492301896 * S_Mnt + -0.00125986769238 * S_MntFishProducts + 
0.10195959942937 * S_MntFruits + 0.0069592628978 * S_MntGoldProds + 0.03606436199308 * 
S_MntMeatProducts + 0.11259135359155 * S_MntSweetProducts + 0.05408818612126 * S_MntWines + 
-0.14024859528104 * S_MonthsAsCustomer + -0.14071929240584 * S_NumCatalogPurchases + 
0.22142792900578 * S_NumDealsPurchases + -0.0291983445755 * S_NumDistPurchases + 
-0.1997372957954 * S_NumStorePurchases + -0.01286201468794 * S_NumWebPurchases + 
-0.35208468552742 * S_NumWebVisitsMonth + 0.02982651364231 * S_RFMstat + 0.0228316921695 * 
S_RMntFrq + 0.3930877517629 * S_Recency + 0.28989829670594 * S_Teenhome ;
2322438   +   H1x1_1  = H1x1_1  +     0.03659432989123 * AcceptedCmp10
2322439   +          +    -0.12552546530316 * AcceptedCmp20  +     0.57200428680255 *
2322440   +        AcceptedCmp30  +      0.4327465126256 * AcceptedCmp40
2322441   +          +    -1.24484170256212 * AcceptedCmp50  +     0.21604379838869 *
2322442   +        Complain0  +    -0.14986629245585 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.03659432989123 * AcceptedCmp10 + -0.12552546530316 * 
AcceptedCmp20 + 0.57200428680255 * AcceptedCmp30 + 0.4327465126256 * AcceptedCmp40 + 
-1.24484170256212 * AcceptedCmp50 + 0.21604379838869 * Complain0 + -0.14986629245585 * 
HigherEducationBinary0 ;
2322443   +   H1x1_2  = H1x1_2  +    -0.13542589174402 * AcceptedCmp10
2322444   +          +    -0.19116289400292 * AcceptedCmp20  +    -0.10302282473135 *
2322445   +        AcceptedCmp30  +    -0.08705955845916 * AcceptedCmp40
2322446   +          +    -0.17435407626698 * AcceptedCmp50  +    -0.09781790399225 *
2322447   +        Complain0  +     0.02006296587353 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.13542589174402 * AcceptedCmp10 + -0.19116289400292 
* AcceptedCmp20 + -0.10302282473135 * AcceptedCmp30 + -0.08705955845916 * AcceptedCmp40 + 
-0.17435407626698 * AcceptedCmp50 + -0.09781790399225 * Complain0 + 0.02006296587353 * 
HigherEducationBinary0 ;
2322448   +   H1x1_3  = H1x1_3  +     0.08917557424765 * AcceptedCmp10
2322449   +          +    -0.00944366858806 * AcceptedCmp20  +     0.30527409248576 *
2322450   +        AcceptedCmp30  +     0.26823019920335 * AcceptedCmp40
2322451   +          +    -0.02131660897576 * AcceptedCmp50  +    -0.16243659451446 *
2322452   +        Complain0  +    -0.28227689084686 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.08917557424765 * AcceptedCmp10 + -0.00944366858806 * 
AcceptedCmp20 + 0.30527409248576 * AcceptedCmp30 + 0.26823019920335 * AcceptedCmp40 + 
-0.02131660897576 * AcceptedCmp50 + -0.16243659451446 * Complain0 + -0.28227689084686 * 
HigherEducationBinary0 ;
2322453   +   H1x1_1  = H1x1_1  +     0.12998959528304 * Education2n_Cycle
2322454   +          +     0.48334684246109 * EducationBasic  +    -0.07156918649895 *
2322455   +        EducationGraduation  +    -0.21017720550072 * EducationMaster
2322456   +          +    -0.22358326722482 * Marital_StatusDivorced
2322457   +          +     0.09394210085787 * Marital_StatusMarried
2322458   +          +    -0.10381546554982 * Marital_StatusSingle
2322459   +          +     0.05935260608375 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.12998959528304 * Education2n_Cycle + 
0.48334684246109 * EducationBasic + -0.07156918649895 * EducationGraduation + 
-0.21017720550072 * EducationMaster + -0.22358326722482 * Marital_StatusDivorced + 
0.09394210085787 * Marital_StatusMarried + -0.10381546554982 * Marital_StatusSingle + 
0.05935260608375 * Marital_StatusTogether ;
2322460   +   H1x1_2  = H1x1_2  +     0.02955854298839 * Education2n_Cycle
2322461   +          +    -0.13472200519398 * EducationBasic  +     0.01930622297518 *
2322462   +        EducationGraduation  +    -0.00188262361226 * EducationMaster
2322463   +          +     0.16606212232833 * Marital_StatusDivorced
2322464   +          +    -0.33252488631677 * Marital_StatusMarried
2322465   +          +     0.26735237322144 * Marital_StatusSingle
2322466   +          +    -0.37056611493683 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.02955854298839 * Education2n_Cycle + 
-0.13472200519398 * EducationBasic + 0.01930622297518 * EducationGraduation + 
-0.00188262361226 * EducationMaster + 0.16606212232833 * Marital_StatusDivorced + 
-0.33252488631677 * Marital_StatusMarried + 0.26735237322144 * Marital_StatusSingle + 
-0.37056611493683 * Marital_StatusTogether ;
2322467   +   H1x1_3  = H1x1_3  +     0.29085314695378 * Education2n_Cycle
2322468   +          +     -0.2177077392676 * EducationBasic  +    -0.12975750226767 *
2322469   +        EducationGraduation  +     0.12920694427876 * EducationMaster
2322470   +          +    -0.30275479651076 * Marital_StatusDivorced
2322471   +          +     0.50273719874035 * Marital_StatusMarried
2322472   +          +    -0.39588303956293 * Marital_StatusSingle
2322473   +          +     0.42028863850572 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.29085314695378 * Education2n_Cycle + 
-0.2177077392676 * EducationBasic + -0.12975750226767 * EducationGraduation + 0.12920694427876 
* EducationMaster + -0.30275479651076 * Marital_StatusDivorced + 0.50273719874035 * 
Marital_StatusMarried + -0.39588303956293 * Marital_StatusSingle + 0.42028863850572 * 
Marital_StatusTogether ;
2322474   +   H1x1_1  =     1.91295924572895 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.91295924572895 + H1x1_1 ;
2322475   +   H1x1_2  =    -1.21245226681055 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.21245226681055 + H1x1_2 ;
2322476   +   H1x1_3  =    -0.01609140135594 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.01609140135594 + H1x1_3 ;
2322477   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2322478   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2322479   +   H1x1_1  = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
2322480   +   H1x1_2  = EXP(MIN(-0.5 * H1x1_2 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(MIN(-0.5 * H1x1_2 **2, _EXP_BAR));
2322481   +   H1x1_3  = EXP(MIN(-0.5 * H1x1_3 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(MIN(-0.5 * H1x1_3 **2, _EXP_BAR));
2322482   +END;
MPRINT(EM_DIAGRAM):   END;
2322483   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2322484   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2322485   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2322486   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2322487   +END;
MPRINT(EM_DIAGRAM):   END;
2322488   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2322489   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2322490   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2322491   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2322492   +   H1x2_1  =     0.73632716677259 * S_AcceptedCmpTotal
2322493   +          +     -1.3452480925823 * S_Age  +    -0.77564767519981 * S_Frq
2322494   +          +    -0.06163854052357 * S_Income  +     1.82428003860444 *
2322495   +        S_Kidhome  +       0.661412748756 * S_Mnt  +      1.8826488743919 *
2322496   +        S_MntFishProducts  +    -0.21815276926728 * S_MntFruits
2322497   +          +     1.06597641654862 * S_MntGoldProds  +     0.13887400045643 *
2322498   +        S_MntMeatProducts  +    -0.62827157985225 * S_MntSweetProducts
2322499   +          +     1.70742231056065 * S_MntWines  +     0.52403167020638 *
2322500   +        S_MonthsAsCustomer  +    -2.99889150929209 * S_NumCatalogPurchases
2322501   +          +    -2.59470529821377 * S_NumDealsPurchases
2322502   +          +      0.7668756449818 * S_NumDistPurchases
2322503   +          +     0.61064641547208 * S_NumStorePurchases
2322504   +          +    -0.87106335660846 * S_NumWebPurchases
2322505   +          +      0.1188879348197 * S_NumWebVisitsMonth
2322506   +          +     0.89319669432194 * S_RFMstat  +       -0.45272285967 *
2322507   +        S_RMntFrq  +     -0.7210740986075 * S_Recency
2322508   +          +      0.7032117485114 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.73632716677259 * S_AcceptedCmpTotal + -1.3452480925823 * 
S_Age + -0.77564767519981 * S_Frq + -0.06163854052357 * S_Income + 1.82428003860444 * 
S_Kidhome + 0.661412748756 * S_Mnt + 1.8826488743919 * S_MntFishProducts + -0.21815276926728 * 
S_MntFruits + 1.06597641654862 * S_MntGoldProds + 0.13887400045643 * S_MntMeatProducts + 
-0.62827157985225 * S_MntSweetProducts + 1.70742231056065 * S_MntWines + 0.52403167020638 * 
S_MonthsAsCustomer + -2.99889150929209 * S_NumCatalogPurchases + -2.59470529821377 * 
S_NumDealsPurchases + 0.7668756449818 * S_NumDistPurchases + 0.61064641547208 * 
S_NumStorePurchases + -0.87106335660846 * S_NumWebPurchases + 0.1188879348197 * 
S_NumWebVisitsMonth + 0.89319669432194 * S_RFMstat + -0.45272285967 * S_RMntFrq + 
-0.7210740986075 * S_Recency + 0.7032117485114 * S_Teenhome ;
2322509   +   H1x2_2  =      0.5405970783297 * S_AcceptedCmpTotal
2322510   +          +     0.34103648596436 * S_Age  +    -1.00413619660059 * S_Frq
2322511   +          +     0.40958797602392 * S_Income  +    -0.94731216445533 *
2322512   +        S_Kidhome  +    -0.17755265939769 * S_Mnt  +    -0.88926202859892 *
2322513   +        S_MntFishProducts  +      0.6791087530674 * S_MntFruits
2322514   +          +     1.10836805118307 * S_MntGoldProds  +    -0.29462180872033 *
2322515   +        S_MntMeatProducts  +     2.21935054370304 * S_MntSweetProducts
2322516   +          +     1.41379847080743 * S_MntWines  +    -0.66077297246309 *
2322517   +        S_MonthsAsCustomer  +     0.91491641336561 * S_NumCatalogPurchases
2322518   +          +    -0.41834528691349 * S_NumDealsPurchases
2322519   +          +    -0.07802605490227 * S_NumDistPurchases
2322520   +          +    -0.62261476153139 * S_NumStorePurchases
2322521   +          +    -0.84011953180231 * S_NumWebPurchases
2322522   +          +     0.95169092183885 * S_NumWebVisitsMonth
2322523   +          +      0.4036735448902 * S_RFMstat  +     0.44620057959954 *
2322524   +        S_RMntFrq  +    -0.54980566705324 * S_Recency
2322525   +          +    -0.48914926560129 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.5405970783297 * S_AcceptedCmpTotal + 0.34103648596436 * S_Age 
+ -1.00413619660059 * S_Frq + 0.40958797602392 * S_Income + -0.94731216445533 * S_Kidhome + 
-0.17755265939769 * S_Mnt + -0.88926202859892 * S_MntFishProducts + 0.6791087530674 * 
S_MntFruits + 1.10836805118307 * S_MntGoldProds + -0.29462180872033 * S_MntMeatProducts + 
2.21935054370304 * S_MntSweetProducts + 1.41379847080743 * S_MntWines + -0.66077297246309 * 
S_MonthsAsCustomer + 0.91491641336561 * S_NumCatalogPurchases + -0.41834528691349 * 
S_NumDealsPurchases + -0.07802605490227 * S_NumDistPurchases + -0.62261476153139 * 
S_NumStorePurchases + -0.84011953180231 * S_NumWebPurchases + 0.95169092183885 * 
S_NumWebVisitsMonth + 0.4036735448902 * S_RFMstat + 0.44620057959954 * S_RMntFrq + 
-0.54980566705324 * S_Recency + -0.48914926560129 * S_Teenhome ;
2322526   +   H1x2_3  =    -0.10056833202616 * S_AcceptedCmpTotal
2322527   +          +    -3.35021911955911 * S_Age  +    -0.47433508394475 * S_Frq
2322528   +          +      0.2642483252057 * S_Income  +     0.20666167536737 *
2322529   +        S_Kidhome  +    -1.63711887449192 * S_Mnt  +    -0.02078521278323 *
2322530   +        S_MntFishProducts  +    -0.13356020799092 * S_MntFruits
2322531   +          +     0.03199170913357 * S_MntGoldProds  +     0.35859745927921 *
2322532   +        S_MntMeatProducts  +     1.28933517907056 * S_MntSweetProducts
2322533   +          +    -0.45266889039243 * S_MntWines  +    -0.03980312418999 *
2322534   +        S_MonthsAsCustomer  +     0.11407065408619 * S_NumCatalogPurchases
2322535   +          +     1.50811278700924 * S_NumDealsPurchases
2322536   +          +    -0.40025710583484 * S_NumDistPurchases
2322537   +          +     0.16539197954198 * S_NumStorePurchases
2322538   +          +    -1.50803186935431 * S_NumWebPurchases
2322539   +          +    -0.35788712697704 * S_NumWebVisitsMonth
2322540   +          +    -2.06761773527847 * S_RFMstat  +    -0.00353259675109 *
2322541   +        S_RMntFrq  +      0.4364156603095 * S_Recency
2322542   +          +    -0.44689366494665 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.10056833202616 * S_AcceptedCmpTotal + -3.35021911955911 * 
S_Age + -0.47433508394475 * S_Frq + 0.2642483252057 * S_Income + 0.20666167536737 * S_Kidhome 
+ -1.63711887449192 * S_Mnt + -0.02078521278323 * S_MntFishProducts + -0.13356020799092 * 
S_MntFruits + 0.03199170913357 * S_MntGoldProds + 0.35859745927921 * S_MntMeatProducts + 
1.28933517907056 * S_MntSweetProducts + -0.45266889039243 * S_MntWines + -0.03980312418999 * 
S_MonthsAsCustomer + 0.11407065408619 * S_NumCatalogPurchases + 1.50811278700924 * 
S_NumDealsPurchases + -0.40025710583484 * S_NumDistPurchases + 0.16539197954198 * 
S_NumStorePurchases + -1.50803186935431 * S_NumWebPurchases + -0.35788712697704 * 
S_NumWebVisitsMonth + -2.06761773527847 * S_RFMstat + -0.00353259675109 * S_RMntFrq + 
0.4364156603095 * S_Recency + -0.44689366494665 * S_Teenhome ;
2322543   +   H1x2_1  = H1x2_1  +     1.19862785990255 * AcceptedCmp10
2322544   +          +    -0.56777088839338 * AcceptedCmp20  +    -0.20982687937883 *
2322545   +        AcceptedCmp30  +     0.23051157512105 * AcceptedCmp40
2322546   +          +    -1.16625535461103 * AcceptedCmp50  +    -0.03987377830172 *
2322547   +        Complain0  +    -1.17553145310278 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.19862785990255 * AcceptedCmp10 + -0.56777088839338 * 
AcceptedCmp20 + -0.20982687937883 * AcceptedCmp30 + 0.23051157512105 * AcceptedCmp40 + 
-1.16625535461103 * AcceptedCmp50 + -0.03987377830172 * Complain0 + -1.17553145310278 * 
HigherEducationBinary0 ;
2322548   +   H1x2_2  = H1x2_2  +    -1.37553391657098 * AcceptedCmp10
2322549   +          +    -0.49489986415129 * AcceptedCmp20  +     0.84075258232812 *
2322550   +        AcceptedCmp30  +     0.31883526052436 * AcceptedCmp40
2322551   +          +    -0.41245383847025 * AcceptedCmp50  +     0.75603245683628 *
2322552   +        Complain0  +    -2.07732119239317 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.37553391657098 * AcceptedCmp10 + -0.49489986415129 
* AcceptedCmp20 + 0.84075258232812 * AcceptedCmp30 + 0.31883526052436 * AcceptedCmp40 + 
-0.41245383847025 * AcceptedCmp50 + 0.75603245683628 * Complain0 + -2.07732119239317 * 
HigherEducationBinary0 ;
2322553   +   H1x2_3  = H1x2_3  +     0.94876862525586 * AcceptedCmp10
2322554   +          +     0.79245605062261 * AcceptedCmp20  +     1.18614024465163 *
2322555   +        AcceptedCmp30  +    -0.24348380736895 * AcceptedCmp40
2322556   +          +     0.63374252730038 * AcceptedCmp50  +     0.36777527794452 *
2322557   +        Complain0  +    -0.07746344015306 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.94876862525586 * AcceptedCmp10 + 0.79245605062261 * 
AcceptedCmp20 + 1.18614024465163 * AcceptedCmp30 + -0.24348380736895 * AcceptedCmp40 + 
0.63374252730038 * AcceptedCmp50 + 0.36777527794452 * Complain0 + -0.07746344015306 * 
HigherEducationBinary0 ;
2322558   +   H1x2_1  = H1x2_1  +     1.73012058377195 * Education2n_Cycle
2322559   +          +     2.12295803973544 * EducationBasic  +     0.36945596974292 *
2322560   +        EducationGraduation  +    -1.22675967760612 * EducationMaster
2322561   +          +    -0.48199299977856 * Marital_StatusDivorced
2322562   +          +    -1.61546983135535 * Marital_StatusMarried
2322563   +          +     1.25890289649165 * Marital_StatusSingle
2322564   +          +    -0.35805098686637 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.73012058377195 * Education2n_Cycle + 
2.12295803973544 * EducationBasic + 0.36945596974292 * EducationGraduation + -1.22675967760612 
* EducationMaster + -0.48199299977856 * Marital_StatusDivorced + -1.61546983135535 * 
Marital_StatusMarried + 1.25890289649165 * Marital_StatusSingle + -0.35805098686637 * 
Marital_StatusTogether ;
2322565   +   H1x2_2  = H1x2_2  +    -1.04319773106255 * Education2n_Cycle
2322566   +          +    -1.20017517243416 * EducationBasic  +    -0.21851017334559 *
2322567   +        EducationGraduation  +     0.54918303984069 * EducationMaster
2322568   +          +    -0.69719138781358 * Marital_StatusDivorced
2322569   +          +     0.26964883367384 * Marital_StatusMarried
2322570   +          +      0.4656663467381 * Marital_StatusSingle
2322571   +          +    -0.38324848670979 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.04319773106255 * Education2n_Cycle + 
-1.20017517243416 * EducationBasic + -0.21851017334559 * EducationGraduation + 
0.54918303984069 * EducationMaster + -0.69719138781358 * Marital_StatusDivorced + 
0.26964883367384 * Marital_StatusMarried + 0.4656663467381 * Marital_StatusSingle + 
-0.38324848670979 * Marital_StatusTogether ;
2322572   +   H1x2_3  = H1x2_3  +     0.26572249637491 * Education2n_Cycle
2322573   +          +     1.36865822272368 * EducationBasic  +     0.26769702437041 *
2322574   +        EducationGraduation  +    -0.57748542336591 * EducationMaster
2322575   +          +     1.40407968804704 * Marital_StatusDivorced
2322576   +          +    -1.35468203106214 * Marital_StatusMarried
2322577   +          +      1.0644996414042 * Marital_StatusSingle
2322578   +          +    -0.68198832748724 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.26572249637491 * Education2n_Cycle + 
1.36865822272368 * EducationBasic + 0.26769702437041 * EducationGraduation + -0.57748542336591 
* EducationMaster + 1.40407968804704 * Marital_StatusDivorced + -1.35468203106214 * 
Marital_StatusMarried + 1.0644996414042 * Marital_StatusSingle + -0.68198832748724 * 
Marital_StatusTogether ;
2322579   +   H1x2_1  =     1.72650566457008 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.72650566457008 + H1x2_1 ;
2322580   +   H1x2_2  =     -1.0113179577999 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.0113179577999 + H1x2_2 ;
2322581   +   H1x2_3  =     0.14003924400021 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.14003924400021 + H1x2_3 ;
2322582   +   H1x2_1  = SIN(H1x2_1 );
MPRINT(EM_DIAGRAM):   H1x2_1 = SIN(H1x2_1 );
2322583   +   H1x2_2  = SIN(H1x2_2 );
MPRINT(EM_DIAGRAM):   H1x2_2 = SIN(H1x2_2 );
2322584   +   H1x2_3  = SIN(H1x2_3 );
MPRINT(EM_DIAGRAM):   H1x2_3 = SIN(H1x2_3 );
2322585   +END;
MPRINT(EM_DIAGRAM):   END;
2322586   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2322587   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2322588   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2322589   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2322590   +END;
MPRINT(EM_DIAGRAM):   END;
2322591   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2322592   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2322593   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2322594   +
2322595   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2322596   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2322597   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2322598   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2322599   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2322600   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2322601   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2322602   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2322603   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2322604   +end;
MPRINT(EM_DIAGRAM):   end;
2322605   +else do;
MPRINT(EM_DIAGRAM):   else do;
2322606   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2322607   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2322608   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2322609   +   end;
MPRINT(EM_DIAGRAM):   end;
2322610   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2322611   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2322612   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2322613   +   end;
MPRINT(EM_DIAGRAM):   end;
2322614   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2322615   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2322616   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2322617   +   end;
MPRINT(EM_DIAGRAM):   end;
2322618   +end;
MPRINT(EM_DIAGRAM):   end;
2322619   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2322620   +   P_DepVar1  =    -7.62079794803554 * H1x1_1  +     13.7007341613959 * H1x1_2
2322621   +          +    -6.77882452096978 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -7.62079794803554 * H1x1_1 + 13.7007341613959 * H1x1_2 + 
-6.77882452096978 * H1x1_3 ;
2322622   +   P_DepVar1  = P_DepVar1  +    -0.44850093089338 * H1x2_1
2322623   +          +    -1.24228597291063 * H1x2_2  +     1.00075465600952 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.44850093089338 * H1x2_1 + -1.24228597291063 * 
H1x2_2 + 1.00075465600952 * H1x2_3 ;
2322624   +   P_DepVar1  =    -2.26198805619545 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.26198805619545 + P_DepVar1 ;
2322625   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2322626   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2322627   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2322628   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2322629   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2322630   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2322631   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2322632   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2322633   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2322634   +END;
MPRINT(EM_DIAGRAM):   END;
2322635   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2322636   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2322637   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2322638   +END;
MPRINT(EM_DIAGRAM):   END;
2322639   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2322640   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2322641   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2322642   +END;
MPRINT(EM_DIAGRAM):   END;
2322643   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2322644   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2322645   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2322646   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2322647   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2322648   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2322649   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2322650   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2322651   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2322652   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2322653   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2322654   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2322655   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2322656   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2322657   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2322658   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2322659   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2322660   +END;
MPRINT(EM_DIAGRAM):   END;
2322661   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2322662   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2322663   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2322664   +drop
2322665   +H1x1_1
2322666   +H1x1_2
2322667   +H1x1_3
2322668   +H1x2_1
2322669   +H1x2_2
2322670   +H1x2_3
2322671   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x2_1 H1x2_2 H1x2_3 ;
2322672   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2322673   +* Renaming variables for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural8;
2322674   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2322675   +* Renaming Posterior variables for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural8;
2322676   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2322677   +drop AutoNeural8_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_P_DepVar1;
2322678   +AutoNeural8_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural8_P_DepVar1 = P_DepVar1;
2322679   +drop AutoNeural8_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_P_DepVar0;
2322680   +AutoNeural8_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural8_P_DepVar0 = P_DepVar0;
2322681   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2322682   +* Renaming Into variables for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural8;
2322683   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2322684   +length AutoNeural8_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural8_I_DepVar $32;
2322685   +drop AutoNeural8_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_I_DepVar;
2322686   +AutoNeural8_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural8_I_DepVar = I_DepVar;
2322687   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2322688   +* Renaming _WARN_ variable for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural8;
2322689   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2322690   +length AutoNeural8_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural8_WARN_ $4;
2322691   +drop AutoNeural8_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_WARN_;
2322692   +AutoNeural8_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural8_WARN_ = _WARN_;
2322693   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2322694   +* Ensmbl38: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Scoring Code of model 4 of 7;
2322695   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2322696   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2322697   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2322698   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2322699   +* NODE: AutoNeural10;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural10;
2322700   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2322701   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2322702   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2322703   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2322704   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2322705   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2322706   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2322707   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2322708   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2322709   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2322710   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2322711   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2322712   +LENGTH _WARN_ $4
2322713   +      F_DepVar  $ 12
2322714   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2322715   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2322716   +
2322717   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2322718   +
2322719   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2322720   +
2322721   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2322722   +
2322723   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2322724   +
2322725   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2322726   +
2322727   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2322728   +
2322729   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2322730   +
2322731   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2322732   +
2322733   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2322734   +
2322735   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2322736   +
2322737   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2322738   +
2322739   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2322740   +
2322741   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2322742   +
2322743   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2322744   +
2322745   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2322746   +
2322747   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2322748   +
2322749   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2322750   +
2322751   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2322752   +
2322753   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2322754   +
2322755   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2322756   +
2322757   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2322758   +
2322759   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2322760   +
2322761   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2322762   +
2322763   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2322764   +
2322765   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2322766   +
2322767   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2322768   +
2322769   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2322770   +
2322771   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2322772   +
2322773   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2322774   +
2322775   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2322776   +
2322777   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2322778   +
2322779   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2322780   +
2322781   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2322782   +
2322783   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2322784   +
2322785   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2322786   +
2322787   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2322788   +
2322789   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2322790   +
2322791   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2322792   +
2322793   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2322794   +
2322795   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2322796   +
2322797   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2322798   +
2322799   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2322800   +
2322801   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2322802   +
2322803   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2322804   +
2322805   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2322806   +
2322807   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2322808   +
2322809   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2322810   +
2322811   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2322812   +
2322813   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2322814   +
2322815   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
2322816   +
2322817   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
2322818   +
2322819   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
2322820   +
2322821   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2322822   +
2322823   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2322824   +
2322825   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2322826   +
2322827   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2322828   +
2322829   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2322830   +
2322831   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2322832   +
2322833   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2322834   +
2322835   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2322836   +
2322837   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2322838   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2322839   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2322840   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2322841   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2322842   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2322843   +end;
MPRINT(EM_DIAGRAM):   end;
2322844   +else do;
MPRINT(EM_DIAGRAM):   else do;
2322845   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2322846   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2322847   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2322848   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2322849   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2322850   +   end;
MPRINT(EM_DIAGRAM):   end;
2322851   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2322852   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2322853   +   end;
MPRINT(EM_DIAGRAM):   end;
2322854   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2322855   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2322856   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2322857   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2322858   +   end;
MPRINT(EM_DIAGRAM):   end;
2322859   +end;
MPRINT(EM_DIAGRAM):   end;
2322860   +
2322861   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2322862   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2322863   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2322864   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2322865   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2322866   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2322867   +end;
MPRINT(EM_DIAGRAM):   end;
2322868   +else do;
MPRINT(EM_DIAGRAM):   else do;
2322869   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2322870   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2322871   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2322872   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2322873   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2322874   +   end;
MPRINT(EM_DIAGRAM):   end;
2322875   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2322876   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2322877   +   end;
MPRINT(EM_DIAGRAM):   end;
2322878   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2322879   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2322880   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2322881   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2322882   +   end;
MPRINT(EM_DIAGRAM):   end;
2322883   +end;
MPRINT(EM_DIAGRAM):   end;
2322884   +
2322885   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2322886   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2322887   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2322888   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2322889   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2322890   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2322891   +end;
MPRINT(EM_DIAGRAM):   end;
2322892   +else do;
MPRINT(EM_DIAGRAM):   else do;
2322893   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2322894   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2322895   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2322896   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2322897   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2322898   +   end;
MPRINT(EM_DIAGRAM):   end;
2322899   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2322900   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2322901   +   end;
MPRINT(EM_DIAGRAM):   end;
2322902   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2322903   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2322904   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2322905   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2322906   +   end;
MPRINT(EM_DIAGRAM):   end;
2322907   +end;
MPRINT(EM_DIAGRAM):   end;
2322908   +
2322909   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2322910   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2322911   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2322912   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2322913   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2322914   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2322915   +end;
MPRINT(EM_DIAGRAM):   end;
2322916   +else do;
MPRINT(EM_DIAGRAM):   else do;
2322917   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2322918   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2322919   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2322920   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2322921   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2322922   +   end;
MPRINT(EM_DIAGRAM):   end;
2322923   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2322924   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2322925   +   end;
MPRINT(EM_DIAGRAM):   end;
2322926   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2322927   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2322928   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2322929   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2322930   +   end;
MPRINT(EM_DIAGRAM):   end;
2322931   +end;
MPRINT(EM_DIAGRAM):   end;
2322932   +
2322933   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2322934   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2322935   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2322936   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2322937   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2322938   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2322939   +end;
MPRINT(EM_DIAGRAM):   end;
2322940   +else do;
MPRINT(EM_DIAGRAM):   else do;
2322941   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2322942   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2322943   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2322944   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2322945   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2322946   +   end;
MPRINT(EM_DIAGRAM):   end;
2322947   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2322948   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2322949   +   end;
MPRINT(EM_DIAGRAM):   end;
2322950   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2322951   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2322952   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2322953   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2322954   +   end;
MPRINT(EM_DIAGRAM):   end;
2322955   +end;
MPRINT(EM_DIAGRAM):   end;
2322956   +
2322957   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2322958   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2322959   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2322960   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2322961   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2322962   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2322963   +end;
MPRINT(EM_DIAGRAM):   end;
2322964   +else do;
MPRINT(EM_DIAGRAM):   else do;
2322965   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2322966   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2322967   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2322968   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2322969   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2322970   +   end;
MPRINT(EM_DIAGRAM):   end;
2322971   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2322972   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2322973   +   end;
MPRINT(EM_DIAGRAM):   end;
2322974   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2322975   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2322976   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2322977   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2322978   +   end;
MPRINT(EM_DIAGRAM):   end;
2322979   +end;
MPRINT(EM_DIAGRAM):   end;
2322980   +
2322981   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2322982   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2322983   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2322984   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2322985   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2322986   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2322987   +end;
MPRINT(EM_DIAGRAM):   end;
2322988   +else do;
MPRINT(EM_DIAGRAM):   else do;
2322989   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2322990   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2322991   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2322992   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2322993   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2322994   +   end;
MPRINT(EM_DIAGRAM):   end;
2322995   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2322996   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2322997   +   end;
MPRINT(EM_DIAGRAM):   end;
2322998   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2322999   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2323000   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2323001   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2323002   +   end;
MPRINT(EM_DIAGRAM):   end;
2323003   +end;
MPRINT(EM_DIAGRAM):   end;
2323004   +
2323005   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2323006   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2323007   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2323008   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2323009   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2323010   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2323011   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2323012   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2323013   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2323014   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2323015   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2323016   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2323017   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2323018   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2323019   +end;
MPRINT(EM_DIAGRAM):   end;
2323020   +else do;
MPRINT(EM_DIAGRAM):   else do;
2323021   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2323022   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2323023   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2323024   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2323025   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2323026   +   end;
MPRINT(EM_DIAGRAM):   end;
2323027   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2323028   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2323029   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2323030   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2323031   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2323032   +   end;
MPRINT(EM_DIAGRAM):   end;
2323033   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2323034   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2323035   +   end;
MPRINT(EM_DIAGRAM):   end;
2323036   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2323037   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2323038   +   end;
MPRINT(EM_DIAGRAM):   end;
2323039   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2323040   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2323041   +   end;
MPRINT(EM_DIAGRAM):   end;
2323042   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2323043   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2323044   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2323045   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2323046   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2323047   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2323048   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2323049   +   end;
MPRINT(EM_DIAGRAM):   end;
2323050   +end;
MPRINT(EM_DIAGRAM):   end;
2323051   +
2323052   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2323053   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2323054   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2323055   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2323056   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2323057   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2323058   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2323059   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2323060   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2323061   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2323062   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2323063   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2323064   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2323065   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2323066   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2323067   +end;
MPRINT(EM_DIAGRAM):   end;
2323068   +else do;
MPRINT(EM_DIAGRAM):   else do;
2323069   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2323070   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2323071   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2323072   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2323073   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2323074   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2323075   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2323076   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2323077   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2323078   +         end;
MPRINT(EM_DIAGRAM):   end;
2323079   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2323080   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2323081   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2323082   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2323083   +            end;
MPRINT(EM_DIAGRAM):   end;
2323084   +         end;
MPRINT(EM_DIAGRAM):   end;
2323085   +      end;
MPRINT(EM_DIAGRAM):   end;
2323086   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2323087   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2323088   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2323089   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2323090   +         end;
MPRINT(EM_DIAGRAM):   end;
2323091   +      end;
MPRINT(EM_DIAGRAM):   end;
2323092   +   end;
MPRINT(EM_DIAGRAM):   end;
2323093   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2323094   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2323095   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2323096   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2323097   +      end;
MPRINT(EM_DIAGRAM):   end;
2323098   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2323099   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2323100   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2323101   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2323102   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2323103   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2323104   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2323105   +         end;
MPRINT(EM_DIAGRAM):   end;
2323106   +      end;
MPRINT(EM_DIAGRAM):   end;
2323107   +   end;
MPRINT(EM_DIAGRAM):   end;
2323108   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2323109   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2323110   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2323111   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2323112   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2323113   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2323114   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2323115   +   end;
MPRINT(EM_DIAGRAM):   end;
2323116   +end;
MPRINT(EM_DIAGRAM):   end;
2323117   +
2323118   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2323119   +*** Checking missing input Interval
2323120   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2323121   +
2323122   +IF NMISS(
2323123   +   AcceptedCmpTotal ,
2323124   +   Age ,
2323125   +   Frq ,
2323126   +   Income ,
2323127   +   Kidhome ,
2323128   +   Mnt ,
2323129   +   MntFishProducts ,
2323130   +   MntFruits ,
2323131   +   MntGoldProds ,
2323132   +   MntMeatProducts ,
2323133   +   MntSweetProducts ,
2323134   +   MntWines ,
2323135   +   MonthsAsCustomer ,
2323136   +   NumCatalogPurchases ,
2323137   +   NumDealsPurchases ,
2323138   +   NumDistPurchases ,
2323139   +   NumStorePurchases ,
2323140   +   NumWebPurchases ,
2323141   +   NumWebVisitsMonth ,
2323142   +   RFMstat ,
2323143   +   RMntFrq ,
2323144   +   Recency ,
2323145   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2323146   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2323147   +
2323148   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2323149   +END;
MPRINT(EM_DIAGRAM):   END;
2323150   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2323151   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2323152   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2323153   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2323154   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2323155   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2323156   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2323157   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2323158   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2323159   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2323160   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2323161   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2323162   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2323163   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2323164   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2323165   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2323166   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2323167   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2323168   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2323169   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2323170   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2323171   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2323172   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2323173   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2323174   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2323175   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2323176   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2323177   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2323178   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2323179   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2323180   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2323181   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2323182   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2323183   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2323184   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2323185   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2323186   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2323187   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2323188   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2323189   +END;
MPRINT(EM_DIAGRAM):   END;
2323190   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2323191   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2323192   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2323193   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2323194   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2323195   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2323196   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2323197   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2323198   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2323199   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2323200   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2323201   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2323202   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2323203   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2323204   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2323205   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2323206   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2323207   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2323208   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2323209   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2323210   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2323211   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2323212   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2323213   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2323214   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2323215   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2323216   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2323217   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2323218   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2323219   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2323220   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2323221   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2323222   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2323223   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2323224   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2323225   +   ELSE S_NumCatalogPurchases
2323226   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2323227   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2323228   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2323229   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2323230   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2323231   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2323232   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2323233   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2323234   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2323235   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2323236   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2323237   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2323238   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2323239   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2323240   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2323241   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2323242   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2323243   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2323244   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2323245   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2323246   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2323247   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2323248   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2323249   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2323250   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2323251   +END;
MPRINT(EM_DIAGRAM):   END;
2323252   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2323253   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2323254   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2323255   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2323256   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2323257   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2323258   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2323259   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2323260   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2323261   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2323262   +   H1x1_1  =     -1.5235159368138 * S_AcceptedCmpTotal
2323263   +          +     0.13941271308016 * S_Age  +    -0.84765157270503 * S_Frq
2323264   +          +    -0.89386555046676 * S_Income  +     1.62709236629244 *
2323265   +        S_Kidhome  +    -1.21416429819342 * S_Mnt  +    -1.95640488965637 *
2323266   +        S_MntFishProducts  +    -0.08621024993404 * S_MntFruits
2323267   +          +    -0.38536990009586 * S_MntGoldProds  +     3.12553097304637 *
2323268   +        S_MntMeatProducts  +    -2.50680711036653 * S_MntSweetProducts
2323269   +          +    -3.77770073626477 * S_MntWines  +     0.39118206604766 *
2323270   +        S_MonthsAsCustomer  +     1.80485993754239 * S_NumCatalogPurchases
2323271   +          +     3.21215425524619 * S_NumDealsPurchases
2323272   +          +     0.08695198777156 * S_NumDistPurchases
2323273   +          +    -2.58697971128295 * S_NumStorePurchases
2323274   +          +    -0.44431924796059 * S_NumWebPurchases
2323275   +          +     -1.4492698984921 * S_NumWebVisitsMonth
2323276   +          +     2.16652214648037 * S_RFMstat  +    -0.48027961131639 *
2323277   +        S_RMntFrq  +    -0.27206877070748 * S_Recency
2323278   +          +    -0.34774852853763 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.5235159368138 * S_AcceptedCmpTotal + 0.13941271308016 * 
S_Age + -0.84765157270503 * S_Frq + -0.89386555046676 * S_Income + 1.62709236629244 * 
S_Kidhome + -1.21416429819342 * S_Mnt + -1.95640488965637 * S_MntFishProducts + 
-0.08621024993404 * S_MntFruits + -0.38536990009586 * S_MntGoldProds + 3.12553097304637 * 
S_MntMeatProducts + -2.50680711036653 * S_MntSweetProducts + -3.77770073626477 * S_MntWines + 
0.39118206604766 * S_MonthsAsCustomer + 1.80485993754239 * S_NumCatalogPurchases + 
3.21215425524619 * S_NumDealsPurchases + 0.08695198777156 * S_NumDistPurchases + 
-2.58697971128295 * S_NumStorePurchases + -0.44431924796059 * S_NumWebPurchases + 
-1.4492698984921 * S_NumWebVisitsMonth + 2.16652214648037 * S_RFMstat + -0.48027961131639 * 
S_RMntFrq + -0.27206877070748 * S_Recency + -0.34774852853763 * S_Teenhome ;
2323279   +   H1x1_2  =     -0.5665707820209 * S_AcceptedCmpTotal
2323280   +          +    -1.33582859121223 * S_Age  +     0.90483024742522 * S_Frq
2323281   +          +    -2.00588558815165 * S_Income  +      3.0373198083895 *
2323282   +        S_Kidhome  +      0.4356905004225 * S_Mnt  +     0.19619626354366 *
2323283   +        S_MntFishProducts  +    -1.09111340184132 * S_MntFruits
2323284   +          +     0.36844676336289 * S_MntGoldProds  +    -2.23832561375429 *
2323285   +        S_MntMeatProducts  +    -0.18280081530069 * S_MntSweetProducts
2323286   +          +     2.11599309139107 * S_MntWines  +     0.68147940490709 *
2323287   +        S_MonthsAsCustomer  +    -0.73940648599397 * S_NumCatalogPurchases
2323288   +          +    -0.83844506398484 * S_NumDealsPurchases
2323289   +          +     0.60831936516804 * S_NumDistPurchases
2323290   +          +     1.79084087761626 * S_NumStorePurchases
2323291   +          +     1.17119196356453 * S_NumWebPurchases
2323292   +          +    -3.63586683518718 * S_NumWebVisitsMonth
2323293   +          +     0.60521990735996 * S_RFMstat  +     0.56036381019221 *
2323294   +        S_RMntFrq  +     3.84599118896159 * S_Recency
2323295   +          +     2.42091939246471 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5665707820209 * S_AcceptedCmpTotal + -1.33582859121223 * 
S_Age + 0.90483024742522 * S_Frq + -2.00588558815165 * S_Income + 3.0373198083895 * S_Kidhome 
+ 0.4356905004225 * S_Mnt + 0.19619626354366 * S_MntFishProducts + -1.09111340184132 * 
S_MntFruits + 0.36844676336289 * S_MntGoldProds + -2.23832561375429 * S_MntMeatProducts + 
-0.18280081530069 * S_MntSweetProducts + 2.11599309139107 * S_MntWines + 0.68147940490709 * 
S_MonthsAsCustomer + -0.73940648599397 * S_NumCatalogPurchases + -0.83844506398484 * 
S_NumDealsPurchases + 0.60831936516804 * S_NumDistPurchases + 1.79084087761626 * 
S_NumStorePurchases + 1.17119196356453 * S_NumWebPurchases + -3.63586683518718 * 
S_NumWebVisitsMonth + 0.60521990735996 * S_RFMstat + 0.56036381019221 * S_RMntFrq + 
3.84599118896159 * S_Recency + 2.42091939246471 * S_Teenhome ;
2323296   +   H1x1_3  =    -2.34864034635966 * S_AcceptedCmpTotal
2323297   +          +     0.38417502023066 * S_Age  +     0.18241442054661 * S_Frq
2323298   +          +    -0.36643054878492 * S_Income  +    -0.01464967964014 *
2323299   +        S_Kidhome  +     0.13084033882631 * S_Mnt  +     1.43066752801424 *
2323300   +        S_MntFishProducts  +     0.30678881611098 * S_MntFruits
2323301   +          +    -0.35038082288662 * S_MntGoldProds  +    -6.79650673935808 *
2323302   +        S_MntMeatProducts  +    -0.35154740308081 * S_MntSweetProducts
2323303   +          +     4.53406963590593 * S_MntWines  +     0.35082802515055 *
2323304   +        S_MonthsAsCustomer  +    -1.62489937965567 * S_NumCatalogPurchases
2323305   +          +    -0.31484031572628 * S_NumDealsPurchases
2323306   +          +    -0.18273941035679 * S_NumDistPurchases
2323307   +          +     0.99501789733882 * S_NumStorePurchases
2323308   +          +     1.32014078829379 * S_NumWebPurchases
2323309   +          +    -1.34393498450215 * S_NumWebVisitsMonth
2323310   +          +    -0.93549119966022 * S_RFMstat  +    -1.74825390192193 *
2323311   +        S_RMntFrq  +     0.84406941726743 * S_Recency
2323312   +          +     -0.5004540381333 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.34864034635966 * S_AcceptedCmpTotal + 0.38417502023066 * 
S_Age + 0.18241442054661 * S_Frq + -0.36643054878492 * S_Income + -0.01464967964014 * 
S_Kidhome + 0.13084033882631 * S_Mnt + 1.43066752801424 * S_MntFishProducts + 0.30678881611098 
* S_MntFruits + -0.35038082288662 * S_MntGoldProds + -6.79650673935808 * S_MntMeatProducts + 
-0.35154740308081 * S_MntSweetProducts + 4.53406963590593 * S_MntWines + 0.35082802515055 * 
S_MonthsAsCustomer + -1.62489937965567 * S_NumCatalogPurchases + -0.31484031572628 * 
S_NumDealsPurchases + -0.18273941035679 * S_NumDistPurchases + 0.99501789733882 * 
S_NumStorePurchases + 1.32014078829379 * S_NumWebPurchases + -1.34393498450215 * 
S_NumWebVisitsMonth + -0.93549119966022 * S_RFMstat + -1.74825390192193 * S_RMntFrq + 
0.84406941726743 * S_Recency + -0.5004540381333 * S_Teenhome ;
2323313   +   H1x1_4  =     0.46772023050431 * S_AcceptedCmpTotal
2323314   +          +    -0.64609651992636 * S_Age  +     0.65433283816167 * S_Frq
2323315   +          +     0.97922442633265 * S_Income  +    -0.37705204232056 *
2323316   +        S_Kidhome  +     0.00937752600299 * S_Mnt  +     -0.6082843846013 *
2323317   +        S_MntFishProducts  +     -0.6227107898918 * S_MntFruits
2323318   +          +      0.0291421224006 * S_MntGoldProds  +     1.09748402313736 *
2323319   +        S_MntMeatProducts  +     0.00604619863622 * S_MntSweetProducts
2323320   +          +    -0.74684537570529 * S_MntWines  +    -0.00266569003481 *
2323321   +        S_MonthsAsCustomer  +     2.01081657735872 * S_NumCatalogPurchases
2323322   +          +     1.19658719134196 * S_NumDealsPurchases
2323323   +          +     0.87478204472986 * S_NumDistPurchases
2323324   +          +    -0.20635856288784 * S_NumStorePurchases
2323325   +          +    -0.89927356974242 * S_NumWebPurchases
2323326   +          +     2.92285244132576 * S_NumWebVisitsMonth
2323327   +          +    -0.10913907245142 * S_RFMstat  +     1.64233441899256 *
2323328   +        S_RMntFrq  +    -3.64945971202322 * S_Recency
2323329   +          +    -1.78841346993558 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46772023050431 * S_AcceptedCmpTotal + -0.64609651992636 * 
S_Age + 0.65433283816167 * S_Frq + 0.97922442633265 * S_Income + -0.37705204232056 * S_Kidhome 
+ 0.00937752600299 * S_Mnt + -0.6082843846013 * S_MntFishProducts + -0.6227107898918 * 
S_MntFruits + 0.0291421224006 * S_MntGoldProds + 1.09748402313736 * S_MntMeatProducts + 
0.00604619863622 * S_MntSweetProducts + -0.74684537570529 * S_MntWines + -0.00266569003481 * 
S_MonthsAsCustomer + 2.01081657735872 * S_NumCatalogPurchases + 1.19658719134196 * 
S_NumDealsPurchases + 0.87478204472986 * S_NumDistPurchases + -0.20635856288784 * 
S_NumStorePurchases + -0.89927356974242 * S_NumWebPurchases + 2.92285244132576 * 
S_NumWebVisitsMonth + -0.10913907245142 * S_RFMstat + 1.64233441899256 * S_RMntFrq + 
-3.64945971202322 * S_Recency + -1.78841346993558 * S_Teenhome ;
2323330   +   H1x1_5  =    -1.22491918863941 * S_AcceptedCmpTotal
2323331   +          +     0.16201659993217 * S_Age  +     0.17189537824457 * S_Frq
2323332   +          +    -0.87922900323563 * S_Income  +    -0.79268410231108 *
2323333   +        S_Kidhome  +     0.62793961676074 * S_Mnt  +     0.20877761882787 *
2323334   +        S_MntFishProducts  +     0.99367872286661 * S_MntFruits
2323335   +          +     -0.4347564565882 * S_MntGoldProds  +    -0.16203279329295 *
2323336   +        S_MntMeatProducts  +     0.81409215344356 * S_MntSweetProducts
2323337   +          +     1.33482971563984 * S_MntWines  +    -1.17441882196058 *
2323338   +        S_MonthsAsCustomer  +    -1.72330829533107 * S_NumCatalogPurchases
2323339   +          +       -2.32617124568 * S_NumDealsPurchases
2323340   +          +    -0.56589187730672 * S_NumDistPurchases
2323341   +          +     1.07062299863482 * S_NumStorePurchases
2323342   +          +     0.30077273739578 * S_NumWebPurchases
2323343   +          +    -1.67745421915317 * S_NumWebVisitsMonth
2323344   +          +      0.0530074713265 * S_RFMstat  +    -0.55969729655382 *
2323345   +        S_RMntFrq  +     1.32196704233234 * S_Recency
2323346   +          +     1.05470622089613 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.22491918863941 * S_AcceptedCmpTotal + 0.16201659993217 * 
S_Age + 0.17189537824457 * S_Frq + -0.87922900323563 * S_Income + -0.79268410231108 * 
S_Kidhome + 0.62793961676074 * S_Mnt + 0.20877761882787 * S_MntFishProducts + 0.99367872286661 
* S_MntFruits + -0.4347564565882 * S_MntGoldProds + -0.16203279329295 * S_MntMeatProducts + 
0.81409215344356 * S_MntSweetProducts + 1.33482971563984 * S_MntWines + -1.17441882196058 * 
S_MonthsAsCustomer + -1.72330829533107 * S_NumCatalogPurchases + -2.32617124568 * 
S_NumDealsPurchases + -0.56589187730672 * S_NumDistPurchases + 1.07062299863482 * 
S_NumStorePurchases + 0.30077273739578 * S_NumWebPurchases + -1.67745421915317 * 
S_NumWebVisitsMonth + 0.0530074713265 * S_RFMstat + -0.55969729655382 * S_RMntFrq + 
1.32196704233234 * S_Recency + 1.05470622089613 * S_Teenhome ;
2323347   +   H1x1_1  = H1x1_1  +     0.19875423759582 * AcceptedCmp10
2323348   +          +    -1.84163905120352 * AcceptedCmp20  +    -1.63149345314696 *
2323349   +        AcceptedCmp30  +    -1.52652349127913 * AcceptedCmp40
2323350   +          +    -0.97663634905647 * AcceptedCmp50  +    -0.94352222509088 *
2323351   +        Complain0  +    -0.63297203617355 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.19875423759582 * AcceptedCmp10 + -1.84163905120352 * 
AcceptedCmp20 + -1.63149345314696 * AcceptedCmp30 + -1.52652349127913 * AcceptedCmp40 + 
-0.97663634905647 * AcceptedCmp50 + -0.94352222509088 * Complain0 + -0.63297203617355 * 
HigherEducationBinary0 ;
2323352   +   H1x1_2  = H1x1_2  +      0.0505791781839 * AcceptedCmp10
2323353   +          +    -0.19407965320143 * AcceptedCmp20  +     0.35537657271506 *
2323354   +        AcceptedCmp30  +    -0.84577216347728 * AcceptedCmp40
2323355   +          +     1.73085566880686 * AcceptedCmp50  +     0.05800586053869 *
2323356   +        Complain0  +    -0.62505561129469 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0505791781839 * AcceptedCmp10 + -0.19407965320143 * 
AcceptedCmp20 + 0.35537657271506 * AcceptedCmp30 + -0.84577216347728 * AcceptedCmp40 + 
1.73085566880686 * AcceptedCmp50 + 0.05800586053869 * Complain0 + -0.62505561129469 * 
HigherEducationBinary0 ;
2323357   +   H1x1_3  = H1x1_3  +     0.54825581966403 * AcceptedCmp10
2323358   +          +     -0.0966204838125 * AcceptedCmp20  +    -1.31707923763053 *
2323359   +        AcceptedCmp30  +    -1.21021077486757 * AcceptedCmp40
2323360   +          +     3.29102250037389 * AcceptedCmp50  +    -0.16383687725206 *
2323361   +        Complain0  +     0.00651446514934 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.54825581966403 * AcceptedCmp10 + -0.0966204838125 * 
AcceptedCmp20 + -1.31707923763053 * AcceptedCmp30 + -1.21021077486757 * AcceptedCmp40 + 
3.29102250037389 * AcceptedCmp50 + -0.16383687725206 * Complain0 + 0.00651446514934 * 
HigherEducationBinary0 ;
2323362   +   H1x1_4  = H1x1_4  +    -1.18573650260336 * AcceptedCmp10
2323363   +          +    -1.73968979068234 * AcceptedCmp20  +    -1.31277698137778 *
2323364   +        AcceptedCmp30  +    -1.74346538593922 * AcceptedCmp40
2323365   +          +    -0.72543919818299 * AcceptedCmp50  +    -0.06328353200384 *
2323366   +        Complain0  +     0.74828735398796 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.18573650260336 * AcceptedCmp10 + -1.73968979068234 
* AcceptedCmp20 + -1.31277698137778 * AcceptedCmp30 + -1.74346538593922 * AcceptedCmp40 + 
-0.72543919818299 * AcceptedCmp50 + -0.06328353200384 * Complain0 + 0.74828735398796 * 
HigherEducationBinary0 ;
2323367   +   H1x1_5  = H1x1_5  +    -0.19622185523754 * AcceptedCmp10
2323368   +          +     -0.4643498903813 * AcceptedCmp20  +     0.69293644934542 *
2323369   +        AcceptedCmp30  +     0.23077838801355 * AcceptedCmp40
2323370   +          +     0.53061813608476 * AcceptedCmp50  +    -0.56870999936869 *
2323371   +        Complain0  +      0.5917990310858 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.19622185523754 * AcceptedCmp10 + -0.4643498903813 * 
AcceptedCmp20 + 0.69293644934542 * AcceptedCmp30 + 0.23077838801355 * AcceptedCmp40 + 
0.53061813608476 * AcceptedCmp50 + -0.56870999936869 * Complain0 + 0.5917990310858 * 
HigherEducationBinary0 ;
2323372   +   H1x1_1  = H1x1_1  +     1.01422000032629 * Education2n_Cycle
2323373   +          +    -0.77619298826287 * EducationBasic  +     0.35633748974614 *
2323374   +        EducationGraduation  +     0.98491516107588 * EducationMaster
2323375   +          +    -0.27797737429678 * Marital_StatusDivorced
2323376   +          +    -0.08137635862327 * Marital_StatusMarried
2323377   +          +     0.06275411820495 * Marital_StatusSingle
2323378   +          +    -0.19979743343415 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.01422000032629 * Education2n_Cycle + 
-0.77619298826287 * EducationBasic + 0.35633748974614 * EducationGraduation + 0.98491516107588 
* EducationMaster + -0.27797737429678 * Marital_StatusDivorced + -0.08137635862327 * 
Marital_StatusMarried + 0.06275411820495 * Marital_StatusSingle + -0.19979743343415 * 
Marital_StatusTogether ;
2323379   +   H1x1_2  = H1x1_2  +    -0.66224206017124 * Education2n_Cycle
2323380   +          +     0.80729589186486 * EducationBasic  +     0.75931615755998 *
2323381   +        EducationGraduation  +    -0.05470462753112 * EducationMaster
2323382   +          +     0.05151426841441 * Marital_StatusDivorced
2323383   +          +     1.19165082030442 * Marital_StatusMarried
2323384   +          +    -1.08257080662611 * Marital_StatusSingle
2323385   +          +     0.13534863375625 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.66224206017124 * Education2n_Cycle + 
0.80729589186486 * EducationBasic + 0.75931615755998 * EducationGraduation + -0.05470462753112 
* EducationMaster + 0.05151426841441 * Marital_StatusDivorced + 1.19165082030442 * 
Marital_StatusMarried + -1.08257080662611 * Marital_StatusSingle + 0.13534863375625 * 
Marital_StatusTogether ;
2323386   +   H1x1_3  = H1x1_3  +     0.20065577451105 * Education2n_Cycle
2323387   +          +    -0.14205714608311 * EducationBasic  +    -0.07077711368393 *
2323388   +        EducationGraduation  +     0.40262329710793 * EducationMaster
2323389   +          +      0.0238206459022 * Marital_StatusDivorced
2323390   +          +     -0.4653244204261 * Marital_StatusMarried
2323391   +          +     0.13051613619882 * Marital_StatusSingle
2323392   +          +    -0.35951366919755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.20065577451105 * Education2n_Cycle + 
-0.14205714608311 * EducationBasic + -0.07077711368393 * EducationGraduation + 
0.40262329710793 * EducationMaster + 0.0238206459022 * Marital_StatusDivorced + 
-0.4653244204261 * Marital_StatusMarried + 0.13051613619882 * Marital_StatusSingle + 
-0.35951366919755 * Marital_StatusTogether ;
2323393   +   H1x1_4  = H1x1_4  +     -0.8555672630555 * Education2n_Cycle
2323394   +          +     0.58439980233621 * EducationBasic  +     0.04784356342853 *
2323395   +        EducationGraduation  +    -0.79764992264249 * EducationMaster
2323396   +          +     -0.7449356409222 * Marital_StatusDivorced
2323397   +          +    -1.46604673521535 * Marital_StatusMarried
2323398   +          +     0.74484771688818 * Marital_StatusSingle
2323399   +          +    -1.91273009779071 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.8555672630555 * Education2n_Cycle + 
0.58439980233621 * EducationBasic + 0.04784356342853 * EducationGraduation + -0.79764992264249 
* EducationMaster + -0.7449356409222 * Marital_StatusDivorced + -1.46604673521535 * 
Marital_StatusMarried + 0.74484771688818 * Marital_StatusSingle + -1.91273009779071 * 
Marital_StatusTogether ;
2323400   +   H1x1_5  = H1x1_5  +    -0.45561096683674 * Education2n_Cycle
2323401   +          +    -0.08389156101858 * EducationBasic  +    -1.24281299616343 *
2323402   +        EducationGraduation  +    -0.00999807517226 * EducationMaster
2323403   +          +    -3.68044980584423 * Marital_StatusDivorced
2323404   +          +     3.14587407902338 * Marital_StatusMarried
2323405   +          +    -2.66118132753024 * Marital_StatusSingle
2323406   +          +     3.50991640149914 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.45561096683674 * Education2n_Cycle + 
-0.08389156101858 * EducationBasic + -1.24281299616343 * EducationGraduation + 
-0.00999807517226 * EducationMaster + -3.68044980584423 * Marital_StatusDivorced + 
3.14587407902338 * Marital_StatusMarried + -2.66118132753024 * Marital_StatusSingle + 
3.50991640149914 * Marital_StatusTogether ;
2323407   +   H1x1_1  =    -2.87464368543529 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.87464368543529 + H1x1_1 ;
2323408   +   H1x1_2  =     0.69745433976458 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.69745433976458 + H1x1_2 ;
2323409   +   H1x1_3  =    -0.71895677211617 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.71895677211617 + H1x1_3 ;
2323410   +   H1x1_4  =    -3.07619671976178 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.07619671976178 + H1x1_4 ;
2323411   +   H1x1_5  =    -1.74345318000473 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.74345318000473 + H1x1_5 ;
2323412   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2323413   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2323414   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2323415   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
2323416   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
2323417   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
2323418   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
2323419   +END;
MPRINT(EM_DIAGRAM):   END;
2323420   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2323421   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2323422   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2323423   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2323424   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2323425   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2323426   +END;
MPRINT(EM_DIAGRAM):   END;
2323427   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2323428   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2323429   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2323430   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2323431   +   H1x2_1  =     0.02206354442682 * S_AcceptedCmpTotal
2323432   +          +    -1.34753268833642 * S_Age  +    -2.08377331969695 * S_Frq
2323433   +          +    -1.39854535380539 * S_Income  +     2.13620611759545 *
2323434   +        S_Kidhome  +    -1.50515365217324 * S_Mnt  +     0.85499321862984 *
2323435   +        S_MntFishProducts  +    -1.17732452790345 * S_MntFruits
2323436   +          +     1.52355640622249 * S_MntGoldProds  +     1.31854239360457 *
2323437   +        S_MntMeatProducts  +    -0.03265851293389 * S_MntSweetProducts
2323438   +          +     2.18666242847435 * S_MntWines  +     0.08246249957908 *
2323439   +        S_MonthsAsCustomer  +    -1.06901902236609 * S_NumCatalogPurchases
2323440   +          +     0.89261880438741 * S_NumDealsPurchases
2323441   +          +    -1.61647413199892 * S_NumDistPurchases
2323442   +          +    -0.56304669045195 * S_NumStorePurchases
2323443   +          +      0.7766837080945 * S_NumWebPurchases
2323444   +          +     -2.2953497398902 * S_NumWebVisitsMonth
2323445   +          +    -3.34547809243199 * S_RFMstat  +     0.07311937799261 *
2323446   +        S_RMntFrq  +     -0.5786489917247 * S_Recency
2323447   +          +    -1.06532056361117 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.02206354442682 * S_AcceptedCmpTotal + -1.34753268833642 * 
S_Age + -2.08377331969695 * S_Frq + -1.39854535380539 * S_Income + 2.13620611759545 * 
S_Kidhome + -1.50515365217324 * S_Mnt + 0.85499321862984 * S_MntFishProducts + 
-1.17732452790345 * S_MntFruits + 1.52355640622249 * S_MntGoldProds + 1.31854239360457 * 
S_MntMeatProducts + -0.03265851293389 * S_MntSweetProducts + 2.18666242847435 * S_MntWines + 
0.08246249957908 * S_MonthsAsCustomer + -1.06901902236609 * S_NumCatalogPurchases + 
0.89261880438741 * S_NumDealsPurchases + -1.61647413199892 * S_NumDistPurchases + 
-0.56304669045195 * S_NumStorePurchases + 0.7766837080945 * S_NumWebPurchases + 
-2.2953497398902 * S_NumWebVisitsMonth + -3.34547809243199 * S_RFMstat + 0.07311937799261 * 
S_RMntFrq + -0.5786489917247 * S_Recency + -1.06532056361117 * S_Teenhome ;
2323448   +   H1x2_2  =      0.0341880757331 * S_AcceptedCmpTotal
2323449   +          +     0.72034771315738 * S_Age  +     0.64155966340389 * S_Frq
2323450   +          +    -1.06570008729492 * S_Income  +    -1.84532938869849 *
2323451   +        S_Kidhome  +     0.94433555965982 * S_Mnt  +     1.23831916074831 *
2323452   +        S_MntFishProducts  +     1.33415870886475 * S_MntFruits
2323453   +          +    -0.51253922893993 * S_MntGoldProds  +     0.02241594009025 *
2323454   +        S_MntMeatProducts  +     -1.2811169586741 * S_MntSweetProducts
2323455   +          +     1.96686773881953 * S_MntWines  +     1.44655944802715 *
2323456   +        S_MonthsAsCustomer  +    -1.18627316384798 * S_NumCatalogPurchases
2323457   +          +     1.02431289724643 * S_NumDealsPurchases
2323458   +          +    -0.90960173637405 * S_NumDistPurchases
2323459   +          +     1.24283490404772 * S_NumStorePurchases
2323460   +          +     1.23072413154592 * S_NumWebPurchases
2323461   +          +    -0.21533378473931 * S_NumWebVisitsMonth
2323462   +          +     1.26438704884008 * S_RFMstat  +      0.0014042871018 *
2323463   +        S_RMntFrq  +     0.32357651423135 * S_Recency
2323464   +          +    -0.49834512433407 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.0341880757331 * S_AcceptedCmpTotal + 0.72034771315738 * S_Age 
+ 0.64155966340389 * S_Frq + -1.06570008729492 * S_Income + -1.84532938869849 * S_Kidhome + 
0.94433555965982 * S_Mnt + 1.23831916074831 * S_MntFishProducts + 1.33415870886475 * 
S_MntFruits + -0.51253922893993 * S_MntGoldProds + 0.02241594009025 * S_MntMeatProducts + 
-1.2811169586741 * S_MntSweetProducts + 1.96686773881953 * S_MntWines + 1.44655944802715 * 
S_MonthsAsCustomer + -1.18627316384798 * S_NumCatalogPurchases + 1.02431289724643 * 
S_NumDealsPurchases + -0.90960173637405 * S_NumDistPurchases + 1.24283490404772 * 
S_NumStorePurchases + 1.23072413154592 * S_NumWebPurchases + -0.21533378473931 * 
S_NumWebVisitsMonth + 1.26438704884008 * S_RFMstat + 0.0014042871018 * S_RMntFrq + 
0.32357651423135 * S_Recency + -0.49834512433407 * S_Teenhome ;
2323465   +   H1x2_3  =    -0.57066024275015 * S_AcceptedCmpTotal
2323466   +          +     0.16615358153136 * S_Age  +    -0.60017461612499 * S_Frq
2323467   +          +    -0.21195793925019 * S_Income  +    -0.36049126996499 *
2323468   +        S_Kidhome  +     0.97458542661118 * S_Mnt  +     0.62279162661518 *
2323469   +        S_MntFishProducts  +    -0.44715765367363 * S_MntFruits
2323470   +          +     0.91519163455361 * S_MntGoldProds  +     1.07312113398768 *
2323471   +        S_MntMeatProducts  +    -1.61967017526055 * S_MntSweetProducts
2323472   +          +    -1.88327677412185 * S_MntWines  +    -1.67067768979245 *
2323473   +        S_MonthsAsCustomer  +    -0.64725516463464 * S_NumCatalogPurchases
2323474   +          +    -0.26249596122198 * S_NumDealsPurchases
2323475   +          +    -0.63328519804758 * S_NumDistPurchases
2323476   +          +    -0.88467503575886 * S_NumStorePurchases
2323477   +          +    -0.83120537310738 * S_NumWebPurchases
2323478   +          +     1.40072282351719 * S_NumWebVisitsMonth
2323479   +          +     1.42591300760984 * S_RFMstat  +     1.93593865100837 *
2323480   +        S_RMntFrq  +     -1.2794275536508 * S_Recency
2323481   +          +    -0.78582664529339 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.57066024275015 * S_AcceptedCmpTotal + 0.16615358153136 * 
S_Age + -0.60017461612499 * S_Frq + -0.21195793925019 * S_Income + -0.36049126996499 * 
S_Kidhome + 0.97458542661118 * S_Mnt + 0.62279162661518 * S_MntFishProducts + 
-0.44715765367363 * S_MntFruits + 0.91519163455361 * S_MntGoldProds + 1.07312113398768 * 
S_MntMeatProducts + -1.61967017526055 * S_MntSweetProducts + -1.88327677412185 * S_MntWines + 
-1.67067768979245 * S_MonthsAsCustomer + -0.64725516463464 * S_NumCatalogPurchases + 
-0.26249596122198 * S_NumDealsPurchases + -0.63328519804758 * S_NumDistPurchases + 
-0.88467503575886 * S_NumStorePurchases + -0.83120537310738 * S_NumWebPurchases + 
1.40072282351719 * S_NumWebVisitsMonth + 1.42591300760984 * S_RFMstat + 1.93593865100837 * 
S_RMntFrq + -1.2794275536508 * S_Recency + -0.78582664529339 * S_Teenhome ;
2323482   +   H1x2_4  =     0.70159995537759 * S_AcceptedCmpTotal
2323483   +          +    -0.70199351793792 * S_Age  +     1.63573967285806 * S_Frq
2323484   +          +     -0.1930098634567 * S_Income  +    -0.43173926207337 *
2323485   +        S_Kidhome  +    -0.45239271926178 * S_Mnt  +    -0.14139816383874 *
2323486   +        S_MntFishProducts  +    -0.70568635660703 * S_MntFruits
2323487   +          +     1.68796268038024 * S_MntGoldProds  +     0.80481626355934 *
2323488   +        S_MntMeatProducts  +     0.29831384975096 * S_MntSweetProducts
2323489   +          +    -0.50792336172825 * S_MntWines  +     0.80425149159678 *
2323490   +        S_MonthsAsCustomer  +    -2.26171302044375 * S_NumCatalogPurchases
2323491   +          +     1.30167361451945 * S_NumDealsPurchases
2323492   +          +     1.45457613716235 * S_NumDistPurchases
2323493   +          +    -0.40226463685252 * S_NumStorePurchases
2323494   +          +     0.36369161683572 * S_NumWebPurchases
2323495   +          +    -2.65684851610403 * S_NumWebVisitsMonth
2323496   +          +    -1.14810413235545 * S_RFMstat  +       1.291857215261 *
2323497   +        S_RMntFrq  +     1.36572595403825 * S_Recency
2323498   +          +    -0.54958418574963 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.70159995537759 * S_AcceptedCmpTotal + -0.70199351793792 * 
S_Age + 1.63573967285806 * S_Frq + -0.1930098634567 * S_Income + -0.43173926207337 * S_Kidhome 
+ -0.45239271926178 * S_Mnt + -0.14139816383874 * S_MntFishProducts + -0.70568635660703 * 
S_MntFruits + 1.68796268038024 * S_MntGoldProds + 0.80481626355934 * S_MntMeatProducts + 
0.29831384975096 * S_MntSweetProducts + -0.50792336172825 * S_MntWines + 0.80425149159678 * 
S_MonthsAsCustomer + -2.26171302044375 * S_NumCatalogPurchases + 1.30167361451945 * 
S_NumDealsPurchases + 1.45457613716235 * S_NumDistPurchases + -0.40226463685252 * 
S_NumStorePurchases + 0.36369161683572 * S_NumWebPurchases + -2.65684851610403 * 
S_NumWebVisitsMonth + -1.14810413235545 * S_RFMstat + 1.291857215261 * S_RMntFrq + 
1.36572595403825 * S_Recency + -0.54958418574963 * S_Teenhome ;
2323499   +   H1x2_5  =    -1.00456225444665 * S_AcceptedCmpTotal
2323500   +          +     0.19033874303798 * S_Age  +    -0.62578451616415 * S_Frq
2323501   +          +    -0.96647190269426 * S_Income  +     1.77002676974464 *
2323502   +        S_Kidhome  +    -0.53816249322166 * S_Mnt  +     0.21322270253871 *
2323503   +        S_MntFishProducts  +     0.84210241961105 * S_MntFruits
2323504   +          +     0.44153678515007 * S_MntGoldProds  +    -0.23120999196747 *
2323505   +        S_MntMeatProducts  +     0.62950730283125 * S_MntSweetProducts
2323506   +          +    -0.64043011108056 * S_MntWines  +    -2.74922907599662 *
2323507   +        S_MonthsAsCustomer  +     0.67939322758717 * S_NumCatalogPurchases
2323508   +          +    -0.54572162665338 * S_NumDealsPurchases
2323509   +          +      0.9607390449318 * S_NumDistPurchases
2323510   +          +    -0.03259470545754 * S_NumStorePurchases
2323511   +          +     0.19202241423412 * S_NumWebPurchases
2323512   +          +     0.61085831658456 * S_NumWebVisitsMonth
2323513   +          +    -0.08582160429243 * S_RFMstat  +     1.73862452808565 *
2323514   +        S_RMntFrq  +    -0.01216476188714 * S_Recency
2323515   +          +     -0.3304403270473 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.00456225444665 * S_AcceptedCmpTotal + 0.19033874303798 * 
S_Age + -0.62578451616415 * S_Frq + -0.96647190269426 * S_Income + 1.77002676974464 * 
S_Kidhome + -0.53816249322166 * S_Mnt + 0.21322270253871 * S_MntFishProducts + 
0.84210241961105 * S_MntFruits + 0.44153678515007 * S_MntGoldProds + -0.23120999196747 * 
S_MntMeatProducts + 0.62950730283125 * S_MntSweetProducts + -0.64043011108056 * S_MntWines + 
-2.74922907599662 * S_MonthsAsCustomer + 0.67939322758717 * S_NumCatalogPurchases + 
-0.54572162665338 * S_NumDealsPurchases + 0.9607390449318 * S_NumDistPurchases + 
-0.03259470545754 * S_NumStorePurchases + 0.19202241423412 * S_NumWebPurchases + 
0.61085831658456 * S_NumWebVisitsMonth + -0.08582160429243 * S_RFMstat + 1.73862452808565 * 
S_RMntFrq + -0.01216476188714 * S_Recency + -0.3304403270473 * S_Teenhome ;
2323516   +   H1x2_1  = H1x2_1  +     0.83453601566539 * AcceptedCmp10
2323517   +          +     0.59109136511077 * AcceptedCmp20  +     -0.9669340701943 *
2323518   +        AcceptedCmp30  +    -2.31468262956126 * AcceptedCmp40
2323519   +          +    -0.76277791850069 * AcceptedCmp50  +     0.30895289981412 *
2323520   +        Complain0  +       0.147233855837 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.83453601566539 * AcceptedCmp10 + 0.59109136511077 * 
AcceptedCmp20 + -0.9669340701943 * AcceptedCmp30 + -2.31468262956126 * AcceptedCmp40 + 
-0.76277791850069 * AcceptedCmp50 + 0.30895289981412 * Complain0 + 0.147233855837 * 
HigherEducationBinary0 ;
2323521   +   H1x2_2  = H1x2_2  +     0.42789425545567 * AcceptedCmp10
2323522   +          +     0.08505833889085 * AcceptedCmp20  +    -1.15112188313855 *
2323523   +        AcceptedCmp30  +    -1.24362486486214 * AcceptedCmp40
2323524   +          +     0.04131419116048 * AcceptedCmp50  +    -0.45255799355317 *
2323525   +        Complain0  +    -0.32616423192953 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.42789425545567 * AcceptedCmp10 + 0.08505833889085 * 
AcceptedCmp20 + -1.15112188313855 * AcceptedCmp30 + -1.24362486486214 * AcceptedCmp40 + 
0.04131419116048 * AcceptedCmp50 + -0.45255799355317 * Complain0 + -0.32616423192953 * 
HigherEducationBinary0 ;
2323526   +   H1x2_3  = H1x2_3  +    -0.03136360497649 * AcceptedCmp10
2323527   +          +     0.33867713207886 * AcceptedCmp20  +     0.05809342990544 *
2323528   +        AcceptedCmp30  +    -0.06416815079894 * AcceptedCmp40
2323529   +          +     1.14617960682421 * AcceptedCmp50  +    -0.82461320336041 *
2323530   +        Complain0  +     0.58944444655621 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.03136360497649 * AcceptedCmp10 + 0.33867713207886 * 
AcceptedCmp20 + 0.05809342990544 * AcceptedCmp30 + -0.06416815079894 * AcceptedCmp40 + 
1.14617960682421 * AcceptedCmp50 + -0.82461320336041 * Complain0 + 0.58944444655621 * 
HigherEducationBinary0 ;
2323531   +   H1x2_4  = H1x2_4  +    -1.12705500616438 * AcceptedCmp10
2323532   +          +      0.0487863004734 * AcceptedCmp20  +     1.30229008593765 *
2323533   +        AcceptedCmp30  +      0.1726718549662 * AcceptedCmp40
2323534   +          +     0.68443569845295 * AcceptedCmp50  +     2.39733248962228 *
2323535   +        Complain0  +      -0.620937291929 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.12705500616438 * AcceptedCmp10 + 0.0487863004734 * 
AcceptedCmp20 + 1.30229008593765 * AcceptedCmp30 + 0.1726718549662 * AcceptedCmp40 + 
0.68443569845295 * AcceptedCmp50 + 2.39733248962228 * Complain0 + -0.620937291929 * 
HigherEducationBinary0 ;
2323536   +   H1x2_5  = H1x2_5  +     1.42400460803453 * AcceptedCmp10
2323537   +          +    -1.22361480936625 * AcceptedCmp20  +     1.31090186367202 *
2323538   +        AcceptedCmp30  +    -1.40343404818254 * AcceptedCmp40
2323539   +          +    -0.57377230862494 * AcceptedCmp50  +     0.58622740778295 *
2323540   +        Complain0  +    -0.83222074319962 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.42400460803453 * AcceptedCmp10 + -1.22361480936625 * 
AcceptedCmp20 + 1.31090186367202 * AcceptedCmp30 + -1.40343404818254 * AcceptedCmp40 + 
-0.57377230862494 * AcceptedCmp50 + 0.58622740778295 * Complain0 + -0.83222074319962 * 
HigherEducationBinary0 ;
2323541   +   H1x2_1  = H1x2_1  +     1.56508379719546 * Education2n_Cycle
2323542   +          +     0.52302987210661 * EducationBasic  +     -0.0570045326497 *
2323543   +        EducationGraduation  +    -0.01838790774804 * EducationMaster
2323544   +          +    -2.32430245081383 * Marital_StatusDivorced
2323545   +          +    -0.09815511356796 * Marital_StatusMarried
2323546   +          +     0.13075504294551 * Marital_StatusSingle
2323547   +          +     -0.0278875765201 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.56508379719546 * Education2n_Cycle + 
0.52302987210661 * EducationBasic + -0.0570045326497 * EducationGraduation + -0.01838790774804 
* EducationMaster + -2.32430245081383 * Marital_StatusDivorced + -0.09815511356796 * 
Marital_StatusMarried + 0.13075504294551 * Marital_StatusSingle + -0.0278875765201 * 
Marital_StatusTogether ;
2323548   +   H1x2_2  = H1x2_2  +    -0.85592920992847 * Education2n_Cycle
2323549   +          +     0.93272618259957 * EducationBasic  +     0.48987674771079 *
2323550   +        EducationGraduation  +    -1.12454002820451 * EducationMaster
2323551   +          +    -0.65574603869224 * Marital_StatusDivorced
2323552   +          +     1.54672472575294 * Marital_StatusMarried
2323553   +          +    -1.59817602340208 * Marital_StatusSingle
2323554   +          +     1.94381954546813 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.85592920992847 * Education2n_Cycle + 
0.93272618259957 * EducationBasic + 0.48987674771079 * EducationGraduation + -1.12454002820451 
* EducationMaster + -0.65574603869224 * Marital_StatusDivorced + 1.54672472575294 * 
Marital_StatusMarried + -1.59817602340208 * Marital_StatusSingle + 1.94381954546813 * 
Marital_StatusTogether ;
2323555   +   H1x2_3  = H1x2_3  +     0.37093371596523 * Education2n_Cycle
2323556   +          +    -2.05531065359129 * EducationBasic  +     1.16090743585078 *
2323557   +        EducationGraduation  +     0.87547303889444 * EducationMaster
2323558   +          +    -0.50911604604781 * Marital_StatusDivorced
2323559   +          +     0.30403066135719 * Marital_StatusMarried
2323560   +          +      0.1026950879545 * Marital_StatusSingle
2323561   +          +     0.01000166524405 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.37093371596523 * Education2n_Cycle + 
-2.05531065359129 * EducationBasic + 1.16090743585078 * EducationGraduation + 0.87547303889444 
* EducationMaster + -0.50911604604781 * Marital_StatusDivorced + 0.30403066135719 * 
Marital_StatusMarried + 0.1026950879545 * Marital_StatusSingle + 0.01000166524405 * 
Marital_StatusTogether ;
2323562   +   H1x2_4  = H1x2_4  +     1.28509086202466 * Education2n_Cycle
2323563   +          +     0.07860157688162 * EducationBasic  +     0.24607672351689 *
2323564   +        EducationGraduation  +    -0.06009602645566 * EducationMaster
2323565   +          +     1.07371507133318 * Marital_StatusDivorced
2323566   +          +    -0.07097334129051 * Marital_StatusMarried
2323567   +          +    -0.48339718568621 * Marital_StatusSingle
2323568   +          +    -0.08900780355835 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.28509086202466 * Education2n_Cycle + 
0.07860157688162 * EducationBasic + 0.24607672351689 * EducationGraduation + -0.06009602645566 
* EducationMaster + 1.07371507133318 * Marital_StatusDivorced + -0.07097334129051 * 
Marital_StatusMarried + -0.48339718568621 * Marital_StatusSingle + -0.08900780355835 * 
Marital_StatusTogether ;
2323569   +   H1x2_5  = H1x2_5  +    -1.08109633810919 * Education2n_Cycle
2323570   +          +    -0.54966585100103 * EducationBasic  +      0.5388683065169 *
2323571   +        EducationGraduation  +     0.46960055830119 * EducationMaster
2323572   +          +     1.04342893515504 * Marital_StatusDivorced
2323573   +          +     1.16171312085032 * Marital_StatusMarried
2323574   +          +    -0.30201646939913 * Marital_StatusSingle
2323575   +          +     1.84122645884771 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -1.08109633810919 * Education2n_Cycle + 
-0.54966585100103 * EducationBasic + 0.5388683065169 * EducationGraduation + 0.46960055830119 
* EducationMaster + 1.04342893515504 * Marital_StatusDivorced + 1.16171312085032 * 
Marital_StatusMarried + -0.30201646939913 * Marital_StatusSingle + 1.84122645884771 * 
Marital_StatusTogether ;
2323576   +   H1x2_1  =     1.56970796025332 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.56970796025332 + H1x2_1 ;
2323577   +   H1x2_2  =    -0.11766478836824 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.11766478836824 + H1x2_2 ;
2323578   +   H1x2_3  =    -2.78218653641036 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -2.78218653641036 + H1x2_3 ;
2323579   +   H1x2_4  =     0.51979515224467 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.51979515224467 + H1x2_4 ;
2323580   +   H1x2_5  =     -0.4635890987824 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.4635890987824 + H1x2_5 ;
2323581   +END;
MPRINT(EM_DIAGRAM):   END;
2323582   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2323583   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2323584   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2323585   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2323586   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2323587   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2323588   +END;
MPRINT(EM_DIAGRAM):   END;
2323589   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2323590   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2323591   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2323592   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2323593   +   H1x3_1  =     0.04411772880581 * S_AcceptedCmpTotal
2323594   +          +    -1.62725197326682 * S_Age  +    -1.99668213406033 * S_Frq
2323595   +          +     -1.2265241921112 * S_Income  +     1.99702869958035 *
2323596   +        S_Kidhome  +    -1.46762539068512 * S_Mnt  +     0.97784534044189 *
2323597   +        S_MntFishProducts  +    -1.07945265688497 * S_MntFruits
2323598   +          +     2.09306294956674 * S_MntGoldProds  +     1.46219664114361 *
2323599   +        S_MntMeatProducts  +     0.10961158671991 * S_MntSweetProducts
2323600   +          +     2.03040669273977 * S_MntWines  +     0.16536646017211 *
2323601   +        S_MonthsAsCustomer  +    -0.88077951545076 * S_NumCatalogPurchases
2323602   +          +     1.32256781010645 * S_NumDealsPurchases
2323603   +          +    -1.43015438973619 * S_NumDistPurchases
2323604   +          +    -0.63489289584421 * S_NumStorePurchases
2323605   +          +     0.90508699686841 * S_NumWebPurchases
2323606   +          +    -2.24234858061014 * S_NumWebVisitsMonth
2323607   +          +     -2.9988027991146 * S_RFMstat  +     0.35987461993699 *
2323608   +        S_RMntFrq  +    -1.09317668626142 * S_Recency
2323609   +          +    -1.09925349438658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.04411772880581 * S_AcceptedCmpTotal + -1.62725197326682 * 
S_Age + -1.99668213406033 * S_Frq + -1.2265241921112 * S_Income + 1.99702869958035 * S_Kidhome 
+ -1.46762539068512 * S_Mnt + 0.97784534044189 * S_MntFishProducts + -1.07945265688497 * 
S_MntFruits + 2.09306294956674 * S_MntGoldProds + 1.46219664114361 * S_MntMeatProducts + 
0.10961158671991 * S_MntSweetProducts + 2.03040669273977 * S_MntWines + 0.16536646017211 * 
S_MonthsAsCustomer + -0.88077951545076 * S_NumCatalogPurchases + 1.32256781010645 * 
S_NumDealsPurchases + -1.43015438973619 * S_NumDistPurchases + -0.63489289584421 * 
S_NumStorePurchases + 0.90508699686841 * S_NumWebPurchases + -2.24234858061014 * 
S_NumWebVisitsMonth + -2.9988027991146 * S_RFMstat + 0.35987461993699 * S_RMntFrq + 
-1.09317668626142 * S_Recency + -1.09925349438658 * S_Teenhome ;
2323610   +   H1x3_2  =     0.10522923391314 * S_AcceptedCmpTotal
2323611   +          +     0.68417479453112 * S_Age  +     0.46966162186743 * S_Frq
2323612   +          +    -1.21537535753115 * S_Income  +    -1.87423294109672 *
2323613   +        S_Kidhome  +     0.76913864731495 * S_Mnt  +     1.08535778796502 *
2323614   +        S_MntFishProducts  +     1.27743864099826 * S_MntFruits
2323615   +          +     -0.3186089651882 * S_MntGoldProds  +    -0.00224333051647 *
2323616   +        S_MntMeatProducts  +    -1.28169616734092 * S_MntSweetProducts
2323617   +          +     1.67350500234032 * S_MntWines  +     1.09584504562467 *
2323618   +        S_MonthsAsCustomer  +    -1.45467876727494 * S_NumCatalogPurchases
2323619   +          +     0.85965187264096 * S_NumDealsPurchases
2323620   +          +    -1.15239933286756 * S_NumDistPurchases
2323621   +          +     1.20800889102387 * S_NumStorePurchases
2323622   +          +     1.08790389130242 * S_NumWebPurchases
2323623   +          +    -0.13665551161149 * S_NumWebVisitsMonth
2323624   +          +     1.02103499612659 * S_RFMstat  +    -0.12980097143044 *
2323625   +        S_RMntFrq  +     0.65854311654256 * S_Recency
2323626   +          +    -0.60999209572192 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.10522923391314 * S_AcceptedCmpTotal + 0.68417479453112 * 
S_Age + 0.46966162186743 * S_Frq + -1.21537535753115 * S_Income + -1.87423294109672 * 
S_Kidhome + 0.76913864731495 * S_Mnt + 1.08535778796502 * S_MntFishProducts + 1.27743864099826 
* S_MntFruits + -0.3186089651882 * S_MntGoldProds + -0.00224333051647 * S_MntMeatProducts + 
-1.28169616734092 * S_MntSweetProducts + 1.67350500234032 * S_MntWines + 1.09584504562467 * 
S_MonthsAsCustomer + -1.45467876727494 * S_NumCatalogPurchases + 0.85965187264096 * 
S_NumDealsPurchases + -1.15239933286756 * S_NumDistPurchases + 1.20800889102387 * 
S_NumStorePurchases + 1.08790389130242 * S_NumWebPurchases + -0.13665551161149 * 
S_NumWebVisitsMonth + 1.02103499612659 * S_RFMstat + -0.12980097143044 * S_RMntFrq + 
0.65854311654256 * S_Recency + -0.60999209572192 * S_Teenhome ;
2323627   +   H1x3_3  =    -0.72575004293074 * S_AcceptedCmpTotal
2323628   +          +     0.34932839743259 * S_Age  +     -0.2673460618328 * S_Frq
2323629   +          +     0.25743187687481 * S_Income  +    -0.02172890929346 *
2323630   +        S_Kidhome  +     1.21785656626837 * S_Mnt  +     0.37454359336223 *
2323631   +        S_MntFishProducts  +    -0.32600053706408 * S_MntFruits
2323632   +          +     0.57807148940534 * S_MntGoldProds  +     1.14736546512366 *
2323633   +        S_MntMeatProducts  +    -1.41517082393978 * S_MntSweetProducts
2323634   +          +    -1.44899595080061 * S_MntWines  +    -1.45520867126531 *
2323635   +        S_MonthsAsCustomer  +    -0.33372174099196 * S_NumCatalogPurchases
2323636   +          +     -0.5767607129654 * S_NumDealsPurchases
2323637   +          +     -0.2643921429796 * S_NumDistPurchases
2323638   +          +    -0.67417489911206 * S_NumStorePurchases
2323639   +          +    -0.51423877684891 * S_NumWebPurchases
2323640   +          +     1.40328299605176 * S_NumWebVisitsMonth
2323641   +          +     1.35588787174957 * S_RFMstat  +     1.98416436137119 *
2323642   +        S_RMntFrq  +     -0.8447362450681 * S_Recency
2323643   +          +    -1.04372961736437 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.72575004293074 * S_AcceptedCmpTotal + 0.34932839743259 * 
S_Age + -0.2673460618328 * S_Frq + 0.25743187687481 * S_Income + -0.02172890929346 * S_Kidhome 
+ 1.21785656626837 * S_Mnt + 0.37454359336223 * S_MntFishProducts + -0.32600053706408 * 
S_MntFruits + 0.57807148940534 * S_MntGoldProds + 1.14736546512366 * S_MntMeatProducts + 
-1.41517082393978 * S_MntSweetProducts + -1.44899595080061 * S_MntWines + -1.45520867126531 * 
S_MonthsAsCustomer + -0.33372174099196 * S_NumCatalogPurchases + -0.5767607129654 * 
S_NumDealsPurchases + -0.2643921429796 * S_NumDistPurchases + -0.67417489911206 * 
S_NumStorePurchases + -0.51423877684891 * S_NumWebPurchases + 1.40328299605176 * 
S_NumWebVisitsMonth + 1.35588787174957 * S_RFMstat + 1.98416436137119 * S_RMntFrq + 
-0.8447362450681 * S_Recency + -1.04372961736437 * S_Teenhome ;
2323644   +   H1x3_4  =     0.05745684959388 * S_AcceptedCmpTotal
2323645   +          +    -0.71077680161454 * S_Age  +      1.4854566142375 * S_Frq
2323646   +          +    -0.32870416928843 * S_Income  +    -0.24944295149087 *
2323647   +        S_Kidhome  +     -0.8312409740431 * S_Mnt  +    -0.09638646505384 *
2323648   +        S_MntFishProducts  +    -0.86550491354678 * S_MntFruits
2323649   +          +     1.46902858697296 * S_MntGoldProds  +      0.3661164136841 *
2323650   +        S_MntMeatProducts  +     0.43108270077708 * S_MntSweetProducts
2323651   +          +    -0.87140466249616 * S_MntWines  +     0.17511224898094 *
2323652   +        S_MonthsAsCustomer  +    -2.66256923117027 * S_NumCatalogPurchases
2323653   +          +      1.2821617657076 * S_NumDealsPurchases
2323654   +          +     1.26584115202735 * S_NumDistPurchases
2323655   +          +    -0.46597664211833 * S_NumStorePurchases
2323656   +          +     0.45652363472866 * S_NumWebPurchases
2323657   +          +    -2.66296112021252 * S_NumWebVisitsMonth
2323658   +          +    -0.86670667018974 * S_RFMstat  +     0.60866041131732 *
2323659   +        S_RMntFrq  +     1.31886754707923 * S_Recency
2323660   +          +    -0.09949653139413 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.05745684959388 * S_AcceptedCmpTotal + -0.71077680161454 * 
S_Age + 1.4854566142375 * S_Frq + -0.32870416928843 * S_Income + -0.24944295149087 * S_Kidhome 
+ -0.8312409740431 * S_Mnt + -0.09638646505384 * S_MntFishProducts + -0.86550491354678 * 
S_MntFruits + 1.46902858697296 * S_MntGoldProds + 0.3661164136841 * S_MntMeatProducts + 
0.43108270077708 * S_MntSweetProducts + -0.87140466249616 * S_MntWines + 0.17511224898094 * 
S_MonthsAsCustomer + -2.66256923117027 * S_NumCatalogPurchases + 1.2821617657076 * 
S_NumDealsPurchases + 1.26584115202735 * S_NumDistPurchases + -0.46597664211833 * 
S_NumStorePurchases + 0.45652363472866 * S_NumWebPurchases + -2.66296112021252 * 
S_NumWebVisitsMonth + -0.86670667018974 * S_RFMstat + 0.60866041131732 * S_RMntFrq + 
1.31886754707923 * S_Recency + -0.09949653139413 * S_Teenhome ;
2323661   +   H1x3_5  =    -0.66850525418144 * S_AcceptedCmpTotal
2323662   +          +     0.14331320698516 * S_Age  +    -0.82708146094779 * S_Frq
2323663   +          +    -0.95718847240937 * S_Income  +     1.37375648833049 *
2323664   +        S_Kidhome  +    -0.48314397401233 * S_Mnt  +     0.07047324834759 *
2323665   +        S_MntFishProducts  +     0.86114312801139 * S_MntFruits
2323666   +          +     0.54573348379533 * S_MntGoldProds  +    -0.05966372249273 *
2323667   +        S_MntMeatProducts  +     0.47275063848217 * S_MntSweetProducts
2323668   +          +    -0.62962007155261 * S_MntWines  +    -2.38081462831488 *
2323669   +        S_MonthsAsCustomer  +     0.56594272689824 * S_NumCatalogPurchases
2323670   +          +    -0.85162564171681 * S_NumDealsPurchases
2323671   +          +     0.64631099667221 * S_NumDistPurchases
2323672   +          +    -0.03081963858636 * S_NumStorePurchases
2323673   +          +    -0.24124717624664 * S_NumWebPurchases
2323674   +          +     0.56425980772372 * S_NumWebVisitsMonth
2323675   +          +    -0.32254616624678 * S_RFMstat  +     1.84875225899832 *
2323676   +        S_RMntFrq  +     0.08133312388911 * S_Recency
2323677   +          +    -0.19004451996479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.66850525418144 * S_AcceptedCmpTotal + 0.14331320698516 * 
S_Age + -0.82708146094779 * S_Frq + -0.95718847240937 * S_Income + 1.37375648833049 * 
S_Kidhome + -0.48314397401233 * S_Mnt + 0.07047324834759 * S_MntFishProducts + 
0.86114312801139 * S_MntFruits + 0.54573348379533 * S_MntGoldProds + -0.05966372249273 * 
S_MntMeatProducts + 0.47275063848217 * S_MntSweetProducts + -0.62962007155261 * S_MntWines + 
-2.38081462831488 * S_MonthsAsCustomer + 0.56594272689824 * S_NumCatalogPurchases + 
-0.85162564171681 * S_NumDealsPurchases + 0.64631099667221 * S_NumDistPurchases + 
-0.03081963858636 * S_NumStorePurchases + -0.24124717624664 * S_NumWebPurchases + 
0.56425980772372 * S_NumWebVisitsMonth + -0.32254616624678 * S_RFMstat + 1.84875225899832 * 
S_RMntFrq + 0.08133312388911 * S_Recency + -0.19004451996479 * S_Teenhome ;
2323678   +   H1x3_1  = H1x3_1  +     1.03487942320068 * AcceptedCmp10
2323679   +          +     0.77723443135875 * AcceptedCmp20  +    -1.04686858569959 *
2323680   +        AcceptedCmp30  +    -1.87852311800194 * AcceptedCmp40
2323681   +          +    -0.69838759011672 * AcceptedCmp50  +     0.50242045854463 *
2323682   +        Complain0  +    -0.13339808164255 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.03487942320068 * AcceptedCmp10 + 0.77723443135875 * 
AcceptedCmp20 + -1.04686858569959 * AcceptedCmp30 + -1.87852311800194 * AcceptedCmp40 + 
-0.69838759011672 * AcceptedCmp50 + 0.50242045854463 * Complain0 + -0.13339808164255 * 
HigherEducationBinary0 ;
2323683   +   H1x3_2  = H1x3_2  +     0.39887299789564 * AcceptedCmp10
2323684   +          +     0.12293700562648 * AcceptedCmp20  +    -1.41656670681309 *
2323685   +        AcceptedCmp30  +    -1.04607557362847 * AcceptedCmp40
2323686   +          +     0.02824649030864 * AcceptedCmp50  +    -0.46581865837196 *
2323687   +        Complain0  +    -0.45913631308543 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.39887299789564 * AcceptedCmp10 + 0.12293700562648 * 
AcceptedCmp20 + -1.41656670681309 * AcceptedCmp30 + -1.04607557362847 * AcceptedCmp40 + 
0.02824649030864 * AcceptedCmp50 + -0.46581865837196 * Complain0 + -0.45913631308543 * 
HigherEducationBinary0 ;
2323688   +   H1x3_3  = H1x3_3  +     0.20672868292414 * AcceptedCmp10
2323689   +          +     0.52082182457868 * AcceptedCmp20  +     0.54911826263592 *
2323690   +        AcceptedCmp30  +    -0.02400616289922 * AcceptedCmp40
2323691   +          +     1.22209744911863 * AcceptedCmp50  +    -0.68243413694538 *
2323692   +        Complain0  +     0.15620895311704 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.20672868292414 * AcceptedCmp10 + 0.52082182457868 * 
AcceptedCmp20 + 0.54911826263592 * AcceptedCmp30 + -0.02400616289922 * AcceptedCmp40 + 
1.22209744911863 * AcceptedCmp50 + -0.68243413694538 * Complain0 + 0.15620895311704 * 
HigherEducationBinary0 ;
2323693   +   H1x3_4  = H1x3_4  +    -0.88269820758187 * AcceptedCmp10
2323694   +          +    -0.19276892535938 * AcceptedCmp20  +     1.26789056018511 *
2323695   +        AcceptedCmp30  +     0.04396979158385 * AcceptedCmp40
2323696   +          +     0.54194186871284 * AcceptedCmp50  +     2.07766091697967 *
2323697   +        Complain0  +    -0.43514178858246 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.88269820758187 * AcceptedCmp10 + -0.19276892535938 
* AcceptedCmp20 + 1.26789056018511 * AcceptedCmp30 + 0.04396979158385 * AcceptedCmp40 + 
0.54194186871284 * AcceptedCmp50 + 2.07766091697967 * Complain0 + -0.43514178858246 * 
HigherEducationBinary0 ;
2323698   +   H1x3_5  = H1x3_5  +     1.04303179873707 * AcceptedCmp10
2323699   +          +    -1.29742389809739 * AcceptedCmp20  +     1.21708533617895 *
2323700   +        AcceptedCmp30  +    -1.47807634614974 * AcceptedCmp40
2323701   +          +     -0.7694244559597 * AcceptedCmp50  +     0.51798162453723 *
2323702   +        Complain0  +    -0.95513113905832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 1.04303179873707 * AcceptedCmp10 + -1.29742389809739 * 
AcceptedCmp20 + 1.21708533617895 * AcceptedCmp30 + -1.47807634614974 * AcceptedCmp40 + 
-0.7694244559597 * AcceptedCmp50 + 0.51798162453723 * Complain0 + -0.95513113905832 * 
HigherEducationBinary0 ;
2323703   +   H1x3_1  = H1x3_1  +     1.27822716215014 * Education2n_Cycle
2323704   +          +     0.45900505383383 * EducationBasic  +    -0.35822992758656 *
2323705   +        EducationGraduation  +     0.05949934527868 * EducationMaster
2323706   +          +    -2.49973437075558 * Marital_StatusDivorced
2323707   +          +    -0.18076948182574 * Marital_StatusMarried
2323708   +          +     0.13498525495231 * Marital_StatusSingle
2323709   +          +    -0.02365465636052 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.27822716215014 * Education2n_Cycle + 
0.45900505383383 * EducationBasic + -0.35822992758656 * EducationGraduation + 0.05949934527868 
* EducationMaster + -2.49973437075558 * Marital_StatusDivorced + -0.18076948182574 * 
Marital_StatusMarried + 0.13498525495231 * Marital_StatusSingle + -0.02365465636052 * 
Marital_StatusTogether ;
2323710   +   H1x3_2  = H1x3_2  +    -1.14981446246051 * Education2n_Cycle
2323711   +          +     0.68006996858541 * EducationBasic  +    -0.06493857044709 *
2323712   +        EducationGraduation  +    -1.22462805502453 * EducationMaster
2323713   +          +       -0.59463732835 * Marital_StatusDivorced
2323714   +          +     1.37741332427598 * Marital_StatusMarried
2323715   +          +     -1.5833455713231 * Marital_StatusSingle
2323716   +          +     1.79205360628448 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -1.14981446246051 * Education2n_Cycle + 
0.68006996858541 * EducationBasic + -0.06493857044709 * EducationGraduation + 
-1.22462805502453 * EducationMaster + -0.59463732835 * Marital_StatusDivorced + 
1.37741332427598 * Marital_StatusMarried + -1.5833455713231 * Marital_StatusSingle + 
1.79205360628448 * Marital_StatusTogether ;
2323717   +   H1x3_3  = H1x3_3  +     0.17779609626753 * Education2n_Cycle
2323718   +          +    -2.22704675950779 * EducationBasic  +     1.30292325944162 *
2323719   +        EducationGraduation  +     0.68083131423474 * EducationMaster
2323720   +          +    -0.44569556289443 * Marital_StatusDivorced
2323721   +          +     0.29918053103557 * Marital_StatusMarried
2323722   +          +    -0.10337314064224 * Marital_StatusSingle
2323723   +          +     0.04054221993299 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.17779609626753 * Education2n_Cycle + 
-2.22704675950779 * EducationBasic + 1.30292325944162 * EducationGraduation + 0.68083131423474 
* EducationMaster + -0.44569556289443 * Marital_StatusDivorced + 0.29918053103557 * 
Marital_StatusMarried + -0.10337314064224 * Marital_StatusSingle + 0.04054221993299 * 
Marital_StatusTogether ;
2323724   +   H1x3_4  = H1x3_4  +     1.16412985277542 * Education2n_Cycle
2323725   +          +     0.18806330813344 * EducationBasic  +     0.00212145829045 *
2323726   +        EducationGraduation  +     0.00087354662697 * EducationMaster
2323727   +          +     1.13881957277462 * Marital_StatusDivorced
2323728   +          +    -0.35849807146313 * Marital_StatusMarried
2323729   +          +    -0.22168731316885 * Marital_StatusSingle
2323730   +          +    -0.22672306263461 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 1.16412985277542 * Education2n_Cycle + 
0.18806330813344 * EducationBasic + 0.00212145829045 * EducationGraduation + 0.00087354662697 
* EducationMaster + 1.13881957277462 * Marital_StatusDivorced + -0.35849807146313 * 
Marital_StatusMarried + -0.22168731316885 * Marital_StatusSingle + -0.22672306263461 * 
Marital_StatusTogether ;
2323731   +   H1x3_5  = H1x3_5  +    -1.25195599938207 * Education2n_Cycle
2323732   +          +    -0.60946428681789 * EducationBasic  +     0.39993500009227 *
2323733   +        EducationGraduation  +     0.43730905987249 * EducationMaster
2323734   +          +     1.10774969923269 * Marital_StatusDivorced
2323735   +          +     1.08409594073043 * Marital_StatusMarried
2323736   +          +    -0.33145048007894 * Marital_StatusSingle
2323737   +          +     1.68703837664761 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.25195599938207 * Education2n_Cycle + 
-0.60946428681789 * EducationBasic + 0.39993500009227 * EducationGraduation + 0.43730905987249 
* EducationMaster + 1.10774969923269 * Marital_StatusDivorced + 1.08409594073043 * 
Marital_StatusMarried + -0.33145048007894 * Marital_StatusSingle + 1.68703837664761 * 
Marital_StatusTogether ;
2323738   +   H1x3_1  =     1.76093149538288 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.76093149538288 + H1x3_1 ;
2323739   +   H1x3_2  =    -0.11243980195421 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.11243980195421 + H1x3_2 ;
2323740   +   H1x3_3  =    -2.59474781862449 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -2.59474781862449 + H1x3_3 ;
2323741   +   H1x3_4  =     0.25376473610258 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.25376473610258 + H1x3_4 ;
2323742   +   H1x3_5  =    -0.54808648261397 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.54808648261397 + H1x3_5 ;
2323743   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2323744   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2323745   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2323746   +   IF H1x3_1  < _REC_EPS AND H1x3_1  > - _REC_EPS THEN
2323747   +   H1x3_1  = H1x3_1  * H1x3_1 ;
MPRINT(EM_DIAGRAM):   IF H1x3_1 < _REC_EPS AND H1x3_1 > - _REC_EPS THEN H1x3_1 = H1x3_1 * 
H1x3_1 ;
2323748   +   ELSE H1x3_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_1 = _REC_EPS ;
2323749   +   IF H1x3_2  < _REC_EPS AND H1x3_2  > - _REC_EPS THEN
2323750   +   H1x3_2  = H1x3_2  * H1x3_2 ;
MPRINT(EM_DIAGRAM):   IF H1x3_2 < _REC_EPS AND H1x3_2 > - _REC_EPS THEN H1x3_2 = H1x3_2 * 
H1x3_2 ;
2323751   +   ELSE H1x3_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_2 = _REC_EPS ;
2323752   +   IF H1x3_3  < _REC_EPS AND H1x3_3  > - _REC_EPS THEN
2323753   +   H1x3_3  = H1x3_3  * H1x3_3 ;
MPRINT(EM_DIAGRAM):   IF H1x3_3 < _REC_EPS AND H1x3_3 > - _REC_EPS THEN H1x3_3 = H1x3_3 * 
H1x3_3 ;
2323754   +   ELSE H1x3_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_3 = _REC_EPS ;
2323755   +   IF H1x3_4  < _REC_EPS AND H1x3_4  > - _REC_EPS THEN
2323756   +   H1x3_4  = H1x3_4  * H1x3_4 ;
MPRINT(EM_DIAGRAM):   IF H1x3_4 < _REC_EPS AND H1x3_4 > - _REC_EPS THEN H1x3_4 = H1x3_4 * 
H1x3_4 ;
2323757   +   ELSE H1x3_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_4 = _REC_EPS ;
2323758   +   IF H1x3_5  < _REC_EPS AND H1x3_5  > - _REC_EPS THEN
2323759   +   H1x3_5  = H1x3_5  * H1x3_5 ;
MPRINT(EM_DIAGRAM):   IF H1x3_5 < _REC_EPS AND H1x3_5 > - _REC_EPS THEN H1x3_5 = H1x3_5 * 
H1x3_5 ;
2323760   +   ELSE H1x3_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_5 = _REC_EPS ;
2323761   +END;
MPRINT(EM_DIAGRAM):   END;
2323762   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2323763   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2323764   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2323765   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
2323766   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
2323767   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
2323768   +END;
MPRINT(EM_DIAGRAM):   END;
2323769   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2323770   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2323771   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2323772   +
2323773   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2323774   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2323775   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2323776   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2323777   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2323778   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2323779   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2323780   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2323781   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2323782   +end;
MPRINT(EM_DIAGRAM):   end;
2323783   +else do;
MPRINT(EM_DIAGRAM):   else do;
2323784   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2323785   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2323786   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2323787   +   end;
MPRINT(EM_DIAGRAM):   end;
2323788   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2323789   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2323790   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2323791   +   end;
MPRINT(EM_DIAGRAM):   end;
2323792   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2323793   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2323794   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2323795   +   end;
MPRINT(EM_DIAGRAM):   end;
2323796   +end;
MPRINT(EM_DIAGRAM):   end;
2323797   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2323798   +   P_DepVar1  =     12.3694111963696 * H1x1_1  +     -9.1014019341077 * H1x1_2
2323799   +          +    -14.9093780045901 * H1x1_3  +     25.4505756686259 * H1x1_4
2323800   +          +    -13.3798044908382 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 12.3694111963696 * H1x1_1 + -9.1014019341077 * H1x1_2 + 
-14.9093780045901 * H1x1_3 + 25.4505756686259 * H1x1_4 + -13.3798044908382 * H1x1_5 ;
2323801   +   P_DepVar1  = P_DepVar1  +     -0.2373753683635 * H1x2_1
2323802   +          +    -0.03661175538589 * H1x2_2  +     0.29534813812803 * H1x2_3
2323803   +          +     0.11908166898588 * H1x2_4  +      -0.241544638637 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.2373753683635 * H1x2_1 + -0.03661175538589 * 
H1x2_2 + 0.29534813812803 * H1x2_3 + 0.11908166898588 * H1x2_4 + -0.241544638637 * H1x2_5 ;
2323804   +   P_DepVar1  = P_DepVar1  +    -0.00276620815201 * H1x3_1
2323805   +          +     0.00487849269566 * H1x3_2  +     0.01323887261394 * H1x3_3
2323806   +          +     -0.0271389925801 * H1x3_4  +     0.00026595473892 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.00276620815201 * H1x3_1 + 0.00487849269566 * 
H1x3_2 + 0.01323887261394 * H1x3_3 + -0.0271389925801 * H1x3_4 + 0.00026595473892 * H1x3_5 ;
2323807   +   P_DepVar1  =      4.0541137239843 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.0541137239843 + P_DepVar1 ;
2323808   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2323809   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2323810   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2323811   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2323812   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2323813   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2323814   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2323815   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2323816   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2323817   +END;
MPRINT(EM_DIAGRAM):   END;
2323818   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2323819   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2323820   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2323821   +END;
MPRINT(EM_DIAGRAM):   END;
2323822   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2323823   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2323824   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2323825   +END;
MPRINT(EM_DIAGRAM):   END;
2323826   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2323827   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2323828   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2323829   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2323830   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2323831   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2323832   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2323833   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2323834   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2323835   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2323836   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2323837   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2323838   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2323839   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2323840   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2323841   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2323842   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2323843   +END;
MPRINT(EM_DIAGRAM):   END;
2323844   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2323845   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2323846   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2323847   +drop
2323848   +H1x1_1
2323849   +H1x1_2
2323850   +H1x1_3
2323851   +H1x1_4
2323852   +H1x1_5
2323853   +H1x2_1
2323854   +H1x2_2
2323855   +H1x2_3
2323856   +H1x2_4
2323857   +H1x2_5
2323858   +H1x3_1
2323859   +H1x3_2
2323860   +H1x3_3
2323861   +H1x3_4
2323862   +H1x3_5
2323863   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x2_1 H1x2_2 H1x2_3 H1x2_4 
H1x2_5 H1x3_1 H1x3_2 H1x3_3 H1x3_4 H1x3_5 ;
2323864   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2323865   +* Renaming variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural10;
2323866   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2323867   +* Renaming Posterior variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural10;
2323868   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2323869   +drop AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar1;
2323870   +AutoNeural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar1 = P_DepVar1;
2323871   +drop AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar0;
2323872   +AutoNeural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar0 = P_DepVar0;
2323873   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2323874   +* Renaming Into variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural10;
2323875   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2323876   +length AutoNeural10_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural10_I_DepVar $32;
2323877   +drop AutoNeural10_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_I_DepVar;
2323878   +AutoNeural10_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural10_I_DepVar = I_DepVar;
2323879   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2323880   +* Renaming _WARN_ variable for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural10;
2323881   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2323882   +length AutoNeural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural10_WARN_ $4;
2323883   +drop AutoNeural10_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_WARN_;
2323884   +AutoNeural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural10_WARN_ = _WARN_;
2323885   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2323886   +* Ensmbl38: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Scoring Code of model 5 of 7;
2323887   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2323888   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2323889   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2323890   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2323891   +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
2323892   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2323893   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2323894   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2323895   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2323896   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2323897   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2323898   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2323899   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2323900   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2323901   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2323902   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2323903   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2323904   +LENGTH _WARN_ $4
2323905   +      F_DepVar  $ 12
2323906   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2323907   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2323908   +
2323909   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2323910   +
2323911   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2323912   +
2323913   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2323914   +
2323915   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2323916   +
2323917   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2323918   +
2323919   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2323920   +
2323921   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2323922   +
2323923   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2323924   +
2323925   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2323926   +
2323927   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2323928   +
2323929   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2323930   +
2323931   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2323932   +
2323933   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2323934   +
2323935   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2323936   +
2323937   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2323938   +
2323939   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2323940   +
2323941   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2323942   +
2323943   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2323944   +
2323945   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2323946   +
2323947   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2323948   +
2323949   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2323950   +
2323951   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2323952   +
2323953   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2323954   +
2323955   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2323956   +
2323957   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2323958   +
2323959   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2323960   +
2323961   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2323962   +
2323963   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2323964   +
2323965   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2323966   +
2323967   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2323968   +
2323969   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2323970   +
2323971   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2323972   +
2323973   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2323974   +
2323975   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2323976   +
2323977   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2323978   +
2323979   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2323980   +
2323981   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2323982   +
2323983   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2323984   +
2323985   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2323986   +
2323987   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2323988   +
2323989   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2323990   +
2323991   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2323992   +
2323993   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2323994   +
2323995   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2323996   +
2323997   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2323998   +
2323999   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2324000   +
2324001   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2324002   +
2324003   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2324004   +
2324005   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2324006   +
2324007   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2324008   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2324009   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2324010   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2324011   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2324012   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324013   +end;
MPRINT(EM_DIAGRAM):   end;
2324014   +else do;
MPRINT(EM_DIAGRAM):   else do;
2324015   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2324016   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2324017   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2324018   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2324019   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2324020   +   end;
MPRINT(EM_DIAGRAM):   end;
2324021   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2324022   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2324023   +   end;
MPRINT(EM_DIAGRAM):   end;
2324024   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2324025   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2324026   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2324027   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324028   +   end;
MPRINT(EM_DIAGRAM):   end;
2324029   +end;
MPRINT(EM_DIAGRAM):   end;
2324030   +
2324031   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2324032   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2324033   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2324034   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2324035   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2324036   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324037   +end;
MPRINT(EM_DIAGRAM):   end;
2324038   +else do;
MPRINT(EM_DIAGRAM):   else do;
2324039   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2324040   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2324041   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2324042   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2324043   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2324044   +   end;
MPRINT(EM_DIAGRAM):   end;
2324045   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2324046   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2324047   +   end;
MPRINT(EM_DIAGRAM):   end;
2324048   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2324049   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2324050   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2324051   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324052   +   end;
MPRINT(EM_DIAGRAM):   end;
2324053   +end;
MPRINT(EM_DIAGRAM):   end;
2324054   +
2324055   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2324056   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2324057   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2324058   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2324059   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2324060   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324061   +end;
MPRINT(EM_DIAGRAM):   end;
2324062   +else do;
MPRINT(EM_DIAGRAM):   else do;
2324063   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2324064   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2324065   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2324066   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2324067   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2324068   +   end;
MPRINT(EM_DIAGRAM):   end;
2324069   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2324070   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2324071   +   end;
MPRINT(EM_DIAGRAM):   end;
2324072   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2324073   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2324074   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2324075   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324076   +   end;
MPRINT(EM_DIAGRAM):   end;
2324077   +end;
MPRINT(EM_DIAGRAM):   end;
2324078   +
2324079   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2324080   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2324081   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2324082   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2324083   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2324084   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324085   +end;
MPRINT(EM_DIAGRAM):   end;
2324086   +else do;
MPRINT(EM_DIAGRAM):   else do;
2324087   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2324088   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2324089   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2324090   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2324091   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2324092   +   end;
MPRINT(EM_DIAGRAM):   end;
2324093   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2324094   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2324095   +   end;
MPRINT(EM_DIAGRAM):   end;
2324096   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2324097   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2324098   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2324099   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324100   +   end;
MPRINT(EM_DIAGRAM):   end;
2324101   +end;
MPRINT(EM_DIAGRAM):   end;
2324102   +
2324103   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2324104   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2324105   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2324106   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2324107   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2324108   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324109   +end;
MPRINT(EM_DIAGRAM):   end;
2324110   +else do;
MPRINT(EM_DIAGRAM):   else do;
2324111   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2324112   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2324113   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2324114   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2324115   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2324116   +   end;
MPRINT(EM_DIAGRAM):   end;
2324117   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2324118   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2324119   +   end;
MPRINT(EM_DIAGRAM):   end;
2324120   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2324121   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2324122   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2324123   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324124   +   end;
MPRINT(EM_DIAGRAM):   end;
2324125   +end;
MPRINT(EM_DIAGRAM):   end;
2324126   +
2324127   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2324128   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2324129   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2324130   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2324131   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2324132   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324133   +end;
MPRINT(EM_DIAGRAM):   end;
2324134   +else do;
MPRINT(EM_DIAGRAM):   else do;
2324135   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2324136   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2324137   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2324138   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2324139   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2324140   +   end;
MPRINT(EM_DIAGRAM):   end;
2324141   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2324142   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2324143   +   end;
MPRINT(EM_DIAGRAM):   end;
2324144   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2324145   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2324146   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2324147   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324148   +   end;
MPRINT(EM_DIAGRAM):   end;
2324149   +end;
MPRINT(EM_DIAGRAM):   end;
2324150   +
2324151   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2324152   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2324153   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2324154   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2324155   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2324156   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324157   +end;
MPRINT(EM_DIAGRAM):   end;
2324158   +else do;
MPRINT(EM_DIAGRAM):   else do;
2324159   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2324160   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2324161   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2324162   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2324163   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2324164   +   end;
MPRINT(EM_DIAGRAM):   end;
2324165   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2324166   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2324167   +   end;
MPRINT(EM_DIAGRAM):   end;
2324168   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2324169   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2324170   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2324171   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324172   +   end;
MPRINT(EM_DIAGRAM):   end;
2324173   +end;
MPRINT(EM_DIAGRAM):   end;
2324174   +
2324175   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2324176   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2324177   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2324178   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2324179   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2324180   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2324181   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2324182   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2324183   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2324184   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2324185   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2324186   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2324187   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2324188   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324189   +end;
MPRINT(EM_DIAGRAM):   end;
2324190   +else do;
MPRINT(EM_DIAGRAM):   else do;
2324191   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2324192   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2324193   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2324194   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2324195   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2324196   +   end;
MPRINT(EM_DIAGRAM):   end;
2324197   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2324198   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2324199   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2324200   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2324201   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2324202   +   end;
MPRINT(EM_DIAGRAM):   end;
2324203   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2324204   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2324205   +   end;
MPRINT(EM_DIAGRAM):   end;
2324206   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2324207   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2324208   +   end;
MPRINT(EM_DIAGRAM):   end;
2324209   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2324210   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2324211   +   end;
MPRINT(EM_DIAGRAM):   end;
2324212   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2324213   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2324214   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2324215   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2324216   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2324217   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2324218   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324219   +   end;
MPRINT(EM_DIAGRAM):   end;
2324220   +end;
MPRINT(EM_DIAGRAM):   end;
2324221   +
2324222   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2324223   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2324224   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2324225   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2324226   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2324227   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2324228   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2324229   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2324230   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2324231   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2324232   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2324233   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2324234   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2324235   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2324236   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324237   +end;
MPRINT(EM_DIAGRAM):   end;
2324238   +else do;
MPRINT(EM_DIAGRAM):   else do;
2324239   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2324240   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2324241   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2324242   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2324243   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2324244   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2324245   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2324246   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2324247   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2324248   +         end;
MPRINT(EM_DIAGRAM):   end;
2324249   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2324250   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2324251   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2324252   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2324253   +            end;
MPRINT(EM_DIAGRAM):   end;
2324254   +         end;
MPRINT(EM_DIAGRAM):   end;
2324255   +      end;
MPRINT(EM_DIAGRAM):   end;
2324256   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2324257   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2324258   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2324259   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2324260   +         end;
MPRINT(EM_DIAGRAM):   end;
2324261   +      end;
MPRINT(EM_DIAGRAM):   end;
2324262   +   end;
MPRINT(EM_DIAGRAM):   end;
2324263   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2324264   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2324265   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2324266   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2324267   +      end;
MPRINT(EM_DIAGRAM):   end;
2324268   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2324269   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2324270   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2324271   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2324272   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2324273   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2324274   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2324275   +         end;
MPRINT(EM_DIAGRAM):   end;
2324276   +      end;
MPRINT(EM_DIAGRAM):   end;
2324277   +   end;
MPRINT(EM_DIAGRAM):   end;
2324278   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2324279   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2324280   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2324281   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2324282   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2324283   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2324284   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324285   +   end;
MPRINT(EM_DIAGRAM):   end;
2324286   +end;
MPRINT(EM_DIAGRAM):   end;
2324287   +
2324288   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2324289   +*** Checking missing input Interval
2324290   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2324291   +
2324292   +IF NMISS(
2324293   +   AcceptedCmpTotal ,
2324294   +   Age ,
2324295   +   Frq ,
2324296   +   Income ,
2324297   +   Kidhome ,
2324298   +   Mnt ,
2324299   +   MntFishProducts ,
2324300   +   MntFruits ,
2324301   +   MntGoldProds ,
2324302   +   MntMeatProducts ,
2324303   +   MntSweetProducts ,
2324304   +   MntWines ,
2324305   +   MonthsAsCustomer ,
2324306   +   NumCatalogPurchases ,
2324307   +   NumDealsPurchases ,
2324308   +   NumDistPurchases ,
2324309   +   NumStorePurchases ,
2324310   +   NumWebPurchases ,
2324311   +   NumWebVisitsMonth ,
2324312   +   RFMstat ,
2324313   +   RMntFrq ,
2324314   +   Recency ,
2324315   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2324316   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2324317   +
2324318   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324319   +END;
MPRINT(EM_DIAGRAM):   END;
2324320   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2324321   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2324322   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2324323   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2324324   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2324325   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2324326   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2324327   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2324328   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2324329   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2324330   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2324331   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2324332   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2324333   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2324334   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2324335   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2324336   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2324337   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2324338   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2324339   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2324340   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2324341   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2324342   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2324343   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2324344   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2324345   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2324346   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2324347   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2324348   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2324349   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2324350   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2324351   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2324352   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2324353   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2324354   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2324355   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2324356   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2324357   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2324358   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2324359   +END;
MPRINT(EM_DIAGRAM):   END;
2324360   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2324361   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2324362   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2324363   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2324364   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2324365   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2324366   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2324367   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2324368   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2324369   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2324370   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2324371   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2324372   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2324373   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2324374   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2324375   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2324376   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2324377   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2324378   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2324379   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2324380   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2324381   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2324382   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2324383   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2324384   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2324385   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2324386   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2324387   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2324388   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2324389   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2324390   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2324391   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2324392   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2324393   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2324394   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2324395   +   ELSE S_NumCatalogPurchases
2324396   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2324397   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2324398   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2324399   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2324400   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2324401   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2324402   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2324403   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2324404   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2324405   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2324406   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2324407   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2324408   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2324409   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2324410   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2324411   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2324412   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2324413   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2324414   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2324415   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2324416   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2324417   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2324418   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2324419   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2324420   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2324421   +END;
MPRINT(EM_DIAGRAM):   END;
2324422   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2324423   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2324424   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2324425   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2324426   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2324427   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2324428   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2324429   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2324430   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2324431   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2324432   +   H1x1_1  =     -0.7790327388408 * S_AcceptedCmpTotal
2324433   +          +     0.32193739579856 * S_Age  +    -0.43875684835169 * S_Frq
2324434   +          +     0.13013240455049 * S_Income  +    -0.74127716462976 *
2324435   +        S_Kidhome  +    -0.86416600561474 * S_Mnt  +     0.94819226754442 *
2324436   +        S_MntFishProducts  +     0.15895119408799 * S_MntFruits
2324437   +          +     0.03658391935071 * S_MntGoldProds  +    -3.75052142292398 *
2324438   +        S_MntMeatProducts  +    -0.22192220883538 * S_MntSweetProducts
2324439   +          +     0.80534656860633 * S_MntWines  +     0.16144794241259 *
2324440   +        S_MonthsAsCustomer  +    -1.53040364803625 * S_NumCatalogPurchases
2324441   +          +    -1.09856598010056 * S_NumDealsPurchases
2324442   +          +    -0.10571850472514 * S_NumDistPurchases
2324443   +          +     0.11898210654227 * S_NumStorePurchases
2324444   +          +      0.5984912060231 * S_NumWebPurchases
2324445   +          +     0.78592531126942 * S_NumWebVisitsMonth
2324446   +          +    -0.50004686386273 * S_RFMstat  +     0.40804018151571 *
2324447   +        S_RMntFrq  +    -0.94753260620308 * S_Recency
2324448   +          +    -0.49604118088328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.7790327388408 * S_AcceptedCmpTotal + 0.32193739579856 * 
S_Age + -0.43875684835169 * S_Frq + 0.13013240455049 * S_Income + -0.74127716462976 * 
S_Kidhome + -0.86416600561474 * S_Mnt + 0.94819226754442 * S_MntFishProducts + 
0.15895119408799 * S_MntFruits + 0.03658391935071 * S_MntGoldProds + -3.75052142292398 * 
S_MntMeatProducts + -0.22192220883538 * S_MntSweetProducts + 0.80534656860633 * S_MntWines + 
0.16144794241259 * S_MonthsAsCustomer + -1.53040364803625 * S_NumCatalogPurchases + 
-1.09856598010056 * S_NumDealsPurchases + -0.10571850472514 * S_NumDistPurchases + 
0.11898210654227 * S_NumStorePurchases + 0.5984912060231 * S_NumWebPurchases + 
0.78592531126942 * S_NumWebVisitsMonth + -0.50004686386273 * S_RFMstat + 0.40804018151571 * 
S_RMntFrq + -0.94753260620308 * S_Recency + -0.49604118088328 * S_Teenhome ;
2324449   +   H1x1_2  =    -0.22226926295489 * S_AcceptedCmpTotal
2324450   +          +     0.08523894206962 * S_Age  +    -0.13010378102207 * S_Frq
2324451   +          +    -0.61810906923536 * S_Income  +     0.26583917928045 *
2324452   +        S_Kidhome  +     0.57213479787981 * S_Mnt  +    -0.58077613046442 *
2324453   +        S_MntFishProducts  +      0.1530301493776 * S_MntFruits
2324454   +          +      0.4586167382631 * S_MntGoldProds  +     1.40179051129147 *
2324455   +        S_MntMeatProducts  +      0.0231413770297 * S_MntSweetProducts
2324456   +          +    -0.08483682112771 * S_MntWines  +     0.22891006905064 *
2324457   +        S_MonthsAsCustomer  +    -1.21866617917435 * S_NumCatalogPurchases
2324458   +          +    -0.84042044250624 * S_NumDealsPurchases
2324459   +          +    -0.10246261015488 * S_NumDistPurchases
2324460   +          +     0.06886149708824 * S_NumStorePurchases
2324461   +          +     0.63156910388199 * S_NumWebPurchases
2324462   +          +    -1.33032061845311 * S_NumWebVisitsMonth
2324463   +          +     0.51240040684649 * S_RFMstat  +     0.77604047421115 *
2324464   +        S_RMntFrq  +     1.27964260226958 * S_Recency
2324465   +          +     0.12022076571016 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22226926295489 * S_AcceptedCmpTotal + 0.08523894206962 * 
S_Age + -0.13010378102207 * S_Frq + -0.61810906923536 * S_Income + 0.26583917928045 * 
S_Kidhome + 0.57213479787981 * S_Mnt + -0.58077613046442 * S_MntFishProducts + 0.1530301493776 
* S_MntFruits + 0.4586167382631 * S_MntGoldProds + 1.40179051129147 * S_MntMeatProducts + 
0.0231413770297 * S_MntSweetProducts + -0.08483682112771 * S_MntWines + 0.22891006905064 * 
S_MonthsAsCustomer + -1.21866617917435 * S_NumCatalogPurchases + -0.84042044250624 * 
S_NumDealsPurchases + -0.10246261015488 * S_NumDistPurchases + 0.06886149708824 * 
S_NumStorePurchases + 0.63156910388199 * S_NumWebPurchases + -1.33032061845311 * 
S_NumWebVisitsMonth + 0.51240040684649 * S_RFMstat + 0.77604047421115 * S_RMntFrq + 
1.27964260226958 * S_Recency + 0.12022076571016 * S_Teenhome ;
2324466   +   H1x1_3  =     1.19879097976404 * S_AcceptedCmpTotal
2324467   +          +     0.14973951999399 * S_Age  +    -0.90630756390399 * S_Frq
2324468   +          +     0.64934241358682 * S_Income  +    -0.66249532206724 *
2324469   +        S_Kidhome  +     0.54195490560813 * S_Mnt  +    -0.58497380565417 *
2324470   +        S_MntFishProducts  +     0.12409202833851 * S_MntFruits
2324471   +          +     0.44480061346561 * S_MntGoldProds  +     3.27513201048136 *
2324472   +        S_MntMeatProducts  +     -0.1256493054184 * S_MntSweetProducts
2324473   +          +    -0.56080685022301 * S_MntWines  +     0.08633469383177 *
2324474   +        S_MonthsAsCustomer  +     0.45482673505107 * S_NumCatalogPurchases
2324475   +          +     0.45393712455366 * S_NumDealsPurchases
2324476   +          +    -0.25292198053552 * S_NumDistPurchases
2324477   +          +    -1.35582215064749 * S_NumStorePurchases
2324478   +          +    -0.83132202302639 * S_NumWebPurchases
2324479   +          +     1.87116225272678 * S_NumWebVisitsMonth
2324480   +          +     0.39564162951481 * S_RFMstat  +    -1.08810221295144 *
2324481   +        S_RMntFrq  +    -2.07407859514648 * S_Recency
2324482   +          +     -0.6849099475723 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.19879097976404 * S_AcceptedCmpTotal + 0.14973951999399 * 
S_Age + -0.90630756390399 * S_Frq + 0.64934241358682 * S_Income + -0.66249532206724 * 
S_Kidhome + 0.54195490560813 * S_Mnt + -0.58497380565417 * S_MntFishProducts + 
0.12409202833851 * S_MntFruits + 0.44480061346561 * S_MntGoldProds + 3.27513201048136 * 
S_MntMeatProducts + -0.1256493054184 * S_MntSweetProducts + -0.56080685022301 * S_MntWines + 
0.08633469383177 * S_MonthsAsCustomer + 0.45482673505107 * S_NumCatalogPurchases + 
0.45393712455366 * S_NumDealsPurchases + -0.25292198053552 * S_NumDistPurchases + 
-1.35582215064749 * S_NumStorePurchases + -0.83132202302639 * S_NumWebPurchases + 
1.87116225272678 * S_NumWebVisitsMonth + 0.39564162951481 * S_RFMstat + -1.08810221295144 * 
S_RMntFrq + -2.07407859514648 * S_Recency + -0.6849099475723 * S_Teenhome ;
2324483   +   H1x1_1  = H1x1_1  +     0.81075414854045 * AcceptedCmp10
2324484   +          +    -0.33403710427327 * AcceptedCmp20  +    -0.62242387435975 *
2324485   +        AcceptedCmp30  +    -0.89439410552439 * AcceptedCmp40
2324486   +          +     0.77335976756467 * AcceptedCmp50  +    -0.08825784612626 *
2324487   +        Complain0  +      0.3404395194267 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.81075414854045 * AcceptedCmp10 + -0.33403710427327 * 
AcceptedCmp20 + -0.62242387435975 * AcceptedCmp30 + -0.89439410552439 * AcceptedCmp40 + 
0.77335976756467 * AcceptedCmp50 + -0.08825784612626 * Complain0 + 0.3404395194267 * 
HigherEducationBinary0 ;
2324488   +   H1x1_2  = H1x1_2  +    -0.16741179709566 * AcceptedCmp10
2324489   +          +    -0.53751033948061 * AcceptedCmp20  +     0.80285496945068 *
2324490   +        AcceptedCmp30  +     0.39379279966091 * AcceptedCmp40
2324491   +          +    -1.40366799083237 * AcceptedCmp50  +     -0.4265482924132 *
2324492   +        Complain0  +     0.37272103593422 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.16741179709566 * AcceptedCmp10 + -0.53751033948061 
* AcceptedCmp20 + 0.80285496945068 * AcceptedCmp30 + 0.39379279966091 * AcceptedCmp40 + 
-1.40366799083237 * AcceptedCmp50 + -0.4265482924132 * Complain0 + 0.37272103593422 * 
HigherEducationBinary0 ;
2324493   +   H1x1_3  = H1x1_3  +    -0.19417657656326 * AcceptedCmp10
2324494   +          +    -0.06547746897317 * AcceptedCmp20  +     0.21980739904513 *
2324495   +        AcceptedCmp30  +    -0.19452210052301 * AcceptedCmp40
2324496   +          +    -2.02403282278574 * AcceptedCmp50  +    -0.18250261144524 *
2324497   +        Complain0  +     0.34168103813312 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.19417657656326 * AcceptedCmp10 + -0.06547746897317 
* AcceptedCmp20 + 0.21980739904513 * AcceptedCmp30 + -0.19452210052301 * AcceptedCmp40 + 
-2.02403282278574 * AcceptedCmp50 + -0.18250261144524 * Complain0 + 0.34168103813312 * 
HigherEducationBinary0 ;
2324498   +   H1x1_1  = H1x1_1  +    -0.03956789621002 * Education2n_Cycle
2324499   +          +    -0.38372374638888 * EducationBasic  +     -0.4178927802606 *
2324500   +        EducationGraduation  +    -0.61278625923288 * EducationMaster
2324501   +          +      0.4695898100094 * Marital_StatusDivorced
2324502   +          +    -0.52137742289262 * Marital_StatusMarried
2324503   +          +    -0.32382086914936 * Marital_StatusSingle
2324504   +          +    -0.66163012672344 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03956789621002 * Education2n_Cycle + 
-0.38372374638888 * EducationBasic + -0.4178927802606 * EducationGraduation + 
-0.61278625923288 * EducationMaster + 0.4695898100094 * Marital_StatusDivorced + 
-0.52137742289262 * Marital_StatusMarried + -0.32382086914936 * Marital_StatusSingle + 
-0.66163012672344 * Marital_StatusTogether ;
2324505   +   H1x1_2  = H1x1_2  +    -0.25832319223886 * Education2n_Cycle
2324506   +          +     0.05602860720141 * EducationBasic  +    -0.86282852488383 *
2324507   +        EducationGraduation  +     0.18916317018059 * EducationMaster
2324508   +          +    -1.04858218653238 * Marital_StatusDivorced
2324509   +          +     2.41098335093061 * Marital_StatusMarried
2324510   +          +    -1.94696044861334 * Marital_StatusSingle
2324511   +          +     2.16021514856437 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.25832319223886 * Education2n_Cycle + 
0.05602860720141 * EducationBasic + -0.86282852488383 * EducationGraduation + 0.18916317018059 
* EducationMaster + -1.04858218653238 * Marital_StatusDivorced + 2.41098335093061 * 
Marital_StatusMarried + -1.94696044861334 * Marital_StatusSingle + 2.16021514856437 * 
Marital_StatusTogether ;
2324512   +   H1x1_3  = H1x1_3  +    -0.05351872242069 * Education2n_Cycle
2324513   +          +    -0.56850783552841 * EducationBasic  +    -0.14880907057098 *
2324514   +        EducationGraduation  +    -0.32850851013319 * EducationMaster
2324515   +          +     0.42964114177062 * Marital_StatusDivorced
2324516   +          +    -0.38607635605816 * Marital_StatusMarried
2324517   +          +    -0.02157405407852 * Marital_StatusSingle
2324518   +          +    -0.59995619744527 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.05351872242069 * Education2n_Cycle + 
-0.56850783552841 * EducationBasic + -0.14880907057098 * EducationGraduation + 
-0.32850851013319 * EducationMaster + 0.42964114177062 * Marital_StatusDivorced + 
-0.38607635605816 * Marital_StatusMarried + -0.02157405407852 * Marital_StatusSingle + 
-0.59995619744527 * Marital_StatusTogether ;
2324519   +   H1x1_1  =    -0.53239337390307 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53239337390307 + H1x1_1 ;
2324520   +   H1x1_2  =     0.99428677123948 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.99428677123948 + H1x1_2 ;
2324521   +   H1x1_3  =       1.835877082844 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.835877082844 + H1x1_3 ;
2324522   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
2324523   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
2324524   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2324525   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2324526   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2324527   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2324528   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2324529   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2324530   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2324531   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2324532   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2324533   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2324534   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2324535   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2324536   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2324537   +END;
MPRINT(EM_DIAGRAM):   END;
2324538   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2324539   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2324540   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2324541   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2324542   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2324543   +END;
MPRINT(EM_DIAGRAM):   END;
2324544   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2324545   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2324546   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2324547   +
2324548   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2324549   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2324550   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2324551   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2324552   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2324553   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2324554   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2324555   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2324556   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2324557   +end;
MPRINT(EM_DIAGRAM):   end;
2324558   +else do;
MPRINT(EM_DIAGRAM):   else do;
2324559   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2324560   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2324561   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2324562   +   end;
MPRINT(EM_DIAGRAM):   end;
2324563   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2324564   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2324565   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2324566   +   end;
MPRINT(EM_DIAGRAM):   end;
2324567   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2324568   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2324569   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2324570   +   end;
MPRINT(EM_DIAGRAM):   end;
2324571   +end;
MPRINT(EM_DIAGRAM):   end;
2324572   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2324573   +   P_DepVar1  =    -3.41904253756965 * H1x1_1  +    -7.11204151517034 * H1x1_2
2324574   +          +     10.7909509395818 * H1x1_3  +    -2.20432578352426 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.41904253756965 * H1x1_1 + -7.11204151517034 * H1x1_2 + 
10.7909509395818 * H1x1_3 + -2.20432578352426 * H1x1_4 ;
2324575   +   P_DepVar1  =    -3.66951098257489 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.66951098257489 + P_DepVar1 ;
2324576   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2324577   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2324578   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2324579   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2324580   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2324581   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2324582   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2324583   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2324584   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2324585   +END;
MPRINT(EM_DIAGRAM):   END;
2324586   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2324587   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2324588   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2324589   +END;
MPRINT(EM_DIAGRAM):   END;
2324590   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2324591   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2324592   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2324593   +END;
MPRINT(EM_DIAGRAM):   END;
2324594   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2324595   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2324596   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2324597   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2324598   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2324599   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2324600   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2324601   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2324602   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2324603   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2324604   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2324605   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2324606   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2324607   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2324608   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2324609   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2324610   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2324611   +END;
MPRINT(EM_DIAGRAM):   END;
2324612   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2324613   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2324614   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2324615   +drop
2324616   +H1x1_1
2324617   +H1x1_2
2324618   +H1x1_3
2324619   +H1x1_4
2324620   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 ;
2324621   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2324622   +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
2324623   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2324624   +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
2324625   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2324626   +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
2324627   +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
2324628   +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
2324629   +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
2324630   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2324631   +* Renaming Into variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural9;
2324632   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2324633   +length AutoNeural9_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural9_I_DepVar $32;
2324634   +drop AutoNeural9_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_I_DepVar;
2324635   +AutoNeural9_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural9_I_DepVar = I_DepVar;
2324636   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2324637   +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
2324638   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2324639   +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
2324640   +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
2324641   +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
2324642   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2324643   +* Ensmbl38: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Scoring Code of model 6 of 7;
2324644   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2324645   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2324646   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2324647   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2324648   +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
2324649   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2324650   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2324651   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2324652   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2324653   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2324654   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2324655   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2324656   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2324657   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2324658   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2324659   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2324660   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2324661   +LENGTH _WARN_ $4
2324662   +      F_DepVar  $ 12
2324663   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2324664   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2324665   +
2324666   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2324667   +
2324668   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2324669   +
2324670   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2324671   +
2324672   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2324673   +
2324674   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2324675   +
2324676   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2324677   +
2324678   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2324679   +
2324680   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2324681   +
2324682   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2324683   +
2324684   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2324685   +
2324686   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2324687   +
2324688   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2324689   +
2324690   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2324691   +
2324692   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2324693   +
2324694   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2324695   +
2324696   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2324697   +
2324698   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2324699   +
2324700   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2324701   +
2324702   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2324703   +
2324704   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2324705   +
2324706   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2324707   +
2324708   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2324709   +
2324710   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2324711   +
2324712   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2324713   +
2324714   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2324715   +
2324716   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2324717   +
2324718   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2324719   +
2324720   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2324721   +
2324722   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2324723   +
2324724   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2324725   +
2324726   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2324727   +
2324728   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2324729   +
2324730   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2324731   +
2324732   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2324733   +
2324734   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2324735   +
2324736   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2324737   +
2324738   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2324739   +
2324740   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2324741   +
2324742   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2324743   +
2324744   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2324745   +
2324746   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2324747   +
2324748   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2324749   +
2324750   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2324751   +
2324752   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2324753   +
2324754   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2324755   +
2324756   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2324757   +
2324758   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2324759   +
2324760   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2324761   +
2324762   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2324763   +
2324764   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2324765   +
2324766   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2324767   +
2324768   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2324769   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2324770   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2324771   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2324772   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2324773   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324774   +end;
MPRINT(EM_DIAGRAM):   end;
2324775   +else do;
MPRINT(EM_DIAGRAM):   else do;
2324776   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2324777   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2324778   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2324779   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2324780   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2324781   +   end;
MPRINT(EM_DIAGRAM):   end;
2324782   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2324783   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2324784   +   end;
MPRINT(EM_DIAGRAM):   end;
2324785   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2324786   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2324787   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2324788   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324789   +   end;
MPRINT(EM_DIAGRAM):   end;
2324790   +end;
MPRINT(EM_DIAGRAM):   end;
2324791   +
2324792   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2324793   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2324794   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2324795   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2324796   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2324797   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324798   +end;
MPRINT(EM_DIAGRAM):   end;
2324799   +else do;
MPRINT(EM_DIAGRAM):   else do;
2324800   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2324801   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2324802   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2324803   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2324804   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2324805   +   end;
MPRINT(EM_DIAGRAM):   end;
2324806   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2324807   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2324808   +   end;
MPRINT(EM_DIAGRAM):   end;
2324809   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2324810   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2324811   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2324812   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324813   +   end;
MPRINT(EM_DIAGRAM):   end;
2324814   +end;
MPRINT(EM_DIAGRAM):   end;
2324815   +
2324816   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2324817   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2324818   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2324819   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2324820   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2324821   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324822   +end;
MPRINT(EM_DIAGRAM):   end;
2324823   +else do;
MPRINT(EM_DIAGRAM):   else do;
2324824   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2324825   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2324826   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2324827   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2324828   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2324829   +   end;
MPRINT(EM_DIAGRAM):   end;
2324830   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2324831   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2324832   +   end;
MPRINT(EM_DIAGRAM):   end;
2324833   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2324834   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2324835   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2324836   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324837   +   end;
MPRINT(EM_DIAGRAM):   end;
2324838   +end;
MPRINT(EM_DIAGRAM):   end;
2324839   +
2324840   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2324841   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2324842   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2324843   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2324844   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2324845   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324846   +end;
MPRINT(EM_DIAGRAM):   end;
2324847   +else do;
MPRINT(EM_DIAGRAM):   else do;
2324848   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2324849   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2324850   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2324851   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2324852   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2324853   +   end;
MPRINT(EM_DIAGRAM):   end;
2324854   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2324855   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2324856   +   end;
MPRINT(EM_DIAGRAM):   end;
2324857   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2324858   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2324859   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2324860   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324861   +   end;
MPRINT(EM_DIAGRAM):   end;
2324862   +end;
MPRINT(EM_DIAGRAM):   end;
2324863   +
2324864   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2324865   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2324866   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2324867   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2324868   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2324869   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324870   +end;
MPRINT(EM_DIAGRAM):   end;
2324871   +else do;
MPRINT(EM_DIAGRAM):   else do;
2324872   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2324873   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2324874   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2324875   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2324876   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2324877   +   end;
MPRINT(EM_DIAGRAM):   end;
2324878   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2324879   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2324880   +   end;
MPRINT(EM_DIAGRAM):   end;
2324881   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2324882   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2324883   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2324884   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324885   +   end;
MPRINT(EM_DIAGRAM):   end;
2324886   +end;
MPRINT(EM_DIAGRAM):   end;
2324887   +
2324888   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2324889   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2324890   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2324891   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2324892   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2324893   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324894   +end;
MPRINT(EM_DIAGRAM):   end;
2324895   +else do;
MPRINT(EM_DIAGRAM):   else do;
2324896   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2324897   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2324898   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2324899   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2324900   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2324901   +   end;
MPRINT(EM_DIAGRAM):   end;
2324902   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2324903   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2324904   +   end;
MPRINT(EM_DIAGRAM):   end;
2324905   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2324906   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2324907   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2324908   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324909   +   end;
MPRINT(EM_DIAGRAM):   end;
2324910   +end;
MPRINT(EM_DIAGRAM):   end;
2324911   +
2324912   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2324913   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2324914   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2324915   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2324916   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2324917   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324918   +end;
MPRINT(EM_DIAGRAM):   end;
2324919   +else do;
MPRINT(EM_DIAGRAM):   else do;
2324920   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2324921   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2324922   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2324923   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2324924   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2324925   +   end;
MPRINT(EM_DIAGRAM):   end;
2324926   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2324927   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2324928   +   end;
MPRINT(EM_DIAGRAM):   end;
2324929   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2324930   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2324931   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2324932   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324933   +   end;
MPRINT(EM_DIAGRAM):   end;
2324934   +end;
MPRINT(EM_DIAGRAM):   end;
2324935   +
2324936   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2324937   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2324938   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2324939   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2324940   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2324941   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2324942   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2324943   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2324944   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2324945   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2324946   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2324947   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2324948   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2324949   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324950   +end;
MPRINT(EM_DIAGRAM):   end;
2324951   +else do;
MPRINT(EM_DIAGRAM):   else do;
2324952   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2324953   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2324954   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2324955   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2324956   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2324957   +   end;
MPRINT(EM_DIAGRAM):   end;
2324958   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2324959   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2324960   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2324961   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2324962   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2324963   +   end;
MPRINT(EM_DIAGRAM):   end;
2324964   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2324965   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2324966   +   end;
MPRINT(EM_DIAGRAM):   end;
2324967   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2324968   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2324969   +   end;
MPRINT(EM_DIAGRAM):   end;
2324970   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2324971   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2324972   +   end;
MPRINT(EM_DIAGRAM):   end;
2324973   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2324974   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2324975   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2324976   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2324977   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2324978   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2324979   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324980   +   end;
MPRINT(EM_DIAGRAM):   end;
2324981   +end;
MPRINT(EM_DIAGRAM):   end;
2324982   +
2324983   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2324984   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2324985   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2324986   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2324987   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2324988   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2324989   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2324990   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2324991   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2324992   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2324993   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2324994   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2324995   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2324996   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2324997   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324998   +end;
MPRINT(EM_DIAGRAM):   end;
2324999   +else do;
MPRINT(EM_DIAGRAM):   else do;
2325000   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2325001   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2325002   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2325003   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2325004   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2325005   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2325006   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2325007   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2325008   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2325009   +         end;
MPRINT(EM_DIAGRAM):   end;
2325010   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2325011   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2325012   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2325013   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2325014   +            end;
MPRINT(EM_DIAGRAM):   end;
2325015   +         end;
MPRINT(EM_DIAGRAM):   end;
2325016   +      end;
MPRINT(EM_DIAGRAM):   end;
2325017   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2325018   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2325019   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2325020   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2325021   +         end;
MPRINT(EM_DIAGRAM):   end;
2325022   +      end;
MPRINT(EM_DIAGRAM):   end;
2325023   +   end;
MPRINT(EM_DIAGRAM):   end;
2325024   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2325025   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2325026   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2325027   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2325028   +      end;
MPRINT(EM_DIAGRAM):   end;
2325029   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2325030   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2325031   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2325032   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2325033   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2325034   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2325035   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2325036   +         end;
MPRINT(EM_DIAGRAM):   end;
2325037   +      end;
MPRINT(EM_DIAGRAM):   end;
2325038   +   end;
MPRINT(EM_DIAGRAM):   end;
2325039   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2325040   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2325041   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2325042   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2325043   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2325044   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2325045   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2325046   +   end;
MPRINT(EM_DIAGRAM):   end;
2325047   +end;
MPRINT(EM_DIAGRAM):   end;
2325048   +
2325049   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2325050   +*** Checking missing input Interval
2325051   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2325052   +
2325053   +IF NMISS(
2325054   +   AcceptedCmpTotal ,
2325055   +   Age ,
2325056   +   Frq ,
2325057   +   Income ,
2325058   +   Kidhome ,
2325059   +   Mnt ,
2325060   +   MntFishProducts ,
2325061   +   MntFruits ,
2325062   +   MntGoldProds ,
2325063   +   MntMeatProducts ,
2325064   +   MntSweetProducts ,
2325065   +   MntWines ,
2325066   +   MonthsAsCustomer ,
2325067   +   NumCatalogPurchases ,
2325068   +   NumDealsPurchases ,
2325069   +   NumDistPurchases ,
2325070   +   NumStorePurchases ,
2325071   +   NumWebPurchases ,
2325072   +   NumWebVisitsMonth ,
2325073   +   RFMstat ,
2325074   +   RMntFrq ,
2325075   +   Recency ,
2325076   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2325077   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2325078   +
2325079   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2325080   +END;
MPRINT(EM_DIAGRAM):   END;
2325081   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2325082   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2325083   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2325084   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2325085   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2325086   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2325087   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2325088   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2325089   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2325090   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2325091   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2325092   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2325093   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2325094   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2325095   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2325096   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2325097   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2325098   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2325099   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2325100   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2325101   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2325102   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2325103   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2325104   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2325105   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2325106   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2325107   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2325108   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2325109   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2325110   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2325111   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2325112   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2325113   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2325114   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2325115   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2325116   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2325117   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2325118   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2325119   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2325120   +END;
MPRINT(EM_DIAGRAM):   END;
2325121   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2325122   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2325123   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2325124   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2325125   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2325126   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2325127   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2325128   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2325129   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2325130   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2325131   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2325132   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2325133   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2325134   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2325135   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2325136   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2325137   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2325138   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2325139   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2325140   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2325141   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2325142   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2325143   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2325144   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2325145   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2325146   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2325147   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2325148   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2325149   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2325150   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2325151   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2325152   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2325153   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2325154   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2325155   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2325156   +   ELSE S_NumCatalogPurchases
2325157   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2325158   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2325159   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2325160   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2325161   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2325162   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2325163   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2325164   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2325165   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2325166   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2325167   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2325168   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2325169   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2325170   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2325171   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2325172   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2325173   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2325174   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2325175   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2325176   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2325177   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2325178   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2325179   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2325180   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2325181   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2325182   +END;
MPRINT(EM_DIAGRAM):   END;
2325183   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2325184   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2325185   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2325186   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2325187   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2325188   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2325189   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2325190   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2325191   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2325192   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2325193   +   H1x1_1  =     0.08465472857554 * S_AcceptedCmpTotal
2325194   +          +     0.23104131534618 * S_Age  +     0.27646175976509 * S_Frq
2325195   +          +     0.45938840681203 * S_Income  +     0.09814900830666 *
2325196   +        S_Kidhome  +     0.23249430277518 * S_Mnt  +    -0.51905493105122 *
2325197   +        S_MntFishProducts  +    -0.07604226481078 * S_MntFruits
2325198   +          +     0.10100393832157 * S_MntGoldProds  +     1.56159221713858 *
2325199   +        S_MntMeatProducts  +     0.12166799382268 * S_MntSweetProducts
2325200   +          +    -0.63388816790524 * S_MntWines  +     0.00878303775585 *
2325201   +        S_MonthsAsCustomer  +     0.01990411233136 * S_NumCatalogPurchases
2325202   +          +     0.19770934886328 * S_NumDealsPurchases
2325203   +          +      0.0515215988111 * S_NumDistPurchases
2325204   +          +    -0.34569346346089 * S_NumStorePurchases
2325205   +          +    -0.27122293596124 * S_NumWebPurchases
2325206   +          +    -0.17061565609755 * S_NumWebVisitsMonth
2325207   +          +      0.1271178187502 * S_RFMstat  +     0.38306508975954 *
2325208   +        S_RMntFrq  +     0.05823588653853 * S_Recency
2325209   +          +    -0.03760117378617 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.08465472857554 * S_AcceptedCmpTotal + 0.23104131534618 * 
S_Age + 0.27646175976509 * S_Frq + 0.45938840681203 * S_Income + 0.09814900830666 * S_Kidhome 
+ 0.23249430277518 * S_Mnt + -0.51905493105122 * S_MntFishProducts + -0.07604226481078 * 
S_MntFruits + 0.10100393832157 * S_MntGoldProds + 1.56159221713858 * S_MntMeatProducts + 
0.12166799382268 * S_MntSweetProducts + -0.63388816790524 * S_MntWines + 0.00878303775585 * 
S_MonthsAsCustomer + 0.01990411233136 * S_NumCatalogPurchases + 0.19770934886328 * 
S_NumDealsPurchases + 0.0515215988111 * S_NumDistPurchases + -0.34569346346089 * 
S_NumStorePurchases + -0.27122293596124 * S_NumWebPurchases + -0.17061565609755 * 
S_NumWebVisitsMonth + 0.1271178187502 * S_RFMstat + 0.38306508975954 * S_RMntFrq + 
0.05823588653853 * S_Recency + -0.03760117378617 * S_Teenhome ;
2325210   +   H1x1_2  =     0.16564144258189 * S_AcceptedCmpTotal
2325211   +          +    -0.18930338067433 * S_Age  +    -0.23013558761757 * S_Frq
2325212   +          +     -0.1347135122598 * S_Income  +     0.04776498811407 *
2325213   +        S_Kidhome  +    -0.14940302068852 * S_Mnt  +    -0.13108691405604 *
2325214   +        S_MntFishProducts  +    -0.02561341150704 * S_MntFruits
2325215   +          +    -0.02022222891948 * S_MntGoldProds  +     0.80867688993093 *
2325216   +        S_MntMeatProducts  +    -0.08374488783635 * S_MntSweetProducts
2325217   +          +     -0.6719369441832 * S_MntWines  +    -0.14760035685198 *
2325218   +        S_MonthsAsCustomer  +      0.4007376271331 * S_NumCatalogPurchases
2325219   +          +     0.54308887602031 * S_NumDealsPurchases
2325220   +          +    -0.22507315320192 * S_NumDistPurchases
2325221   +          +    -0.79861387328361 * S_NumStorePurchases
2325222   +          +    -0.45467494002747 * S_NumWebPurchases
2325223   +          +      0.2119048824613 * S_NumWebVisitsMonth
2325224   +          +     0.30167662748678 * S_RFMstat  +     0.10712110659027 *
2325225   +        S_RMntFrq  +    -0.03061918029089 * S_Recency
2325226   +          +    -0.06096313113607 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.16564144258189 * S_AcceptedCmpTotal + -0.18930338067433 * 
S_Age + -0.23013558761757 * S_Frq + -0.1347135122598 * S_Income + 0.04776498811407 * S_Kidhome 
+ -0.14940302068852 * S_Mnt + -0.13108691405604 * S_MntFishProducts + -0.02561341150704 * 
S_MntFruits + -0.02022222891948 * S_MntGoldProds + 0.80867688993093 * S_MntMeatProducts + 
-0.08374488783635 * S_MntSweetProducts + -0.6719369441832 * S_MntWines + -0.14760035685198 * 
S_MonthsAsCustomer + 0.4007376271331 * S_NumCatalogPurchases + 0.54308887602031 * 
S_NumDealsPurchases + -0.22507315320192 * S_NumDistPurchases + -0.79861387328361 * 
S_NumStorePurchases + -0.45467494002747 * S_NumWebPurchases + 0.2119048824613 * 
S_NumWebVisitsMonth + 0.30167662748678 * S_RFMstat + 0.10712110659027 * S_RMntFrq + 
-0.03061918029089 * S_Recency + -0.06096313113607 * S_Teenhome ;
2325227   +   H1x1_3  =     0.02674875562898 * S_AcceptedCmpTotal
2325228   +          +    -0.19731891748843 * S_Age  +    -0.00753784701259 * S_Frq
2325229   +          +    -0.31764694608254 * S_Income  +     0.49525183733398 *
2325230   +        S_Kidhome  +     0.24623619243686 * S_Mnt  +     0.25904859702044 *
2325231   +        S_MntFishProducts  +     0.26153358982994 * S_MntFruits
2325232   +          +    -0.07223707213485 * S_MntGoldProds  +    -0.15192960471493 *
2325233   +        S_MntMeatProducts  +     0.08241128624385 * S_MntSweetProducts
2325234   +          +     0.62479763709054 * S_MntWines  +     0.03593742779349 *
2325235   +        S_MonthsAsCustomer  +     0.00825730323418 * S_NumCatalogPurchases
2325236   +          +     -0.0771083149302 * S_NumDealsPurchases
2325237   +          +     0.03403621221162 * S_NumDistPurchases
2325238   +          +     0.61303946422025 * S_NumStorePurchases
2325239   +          +     0.27126793634053 * S_NumWebPurchases
2325240   +          +     -0.9769688424222 * S_NumWebVisitsMonth
2325241   +          +     0.08832170040425 * S_RFMstat  +     0.13241491054212 *
2325242   +        S_RMntFrq  +     0.94872655811163 * S_Recency
2325243   +          +     0.22002222738147 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.02674875562898 * S_AcceptedCmpTotal + -0.19731891748843 * 
S_Age + -0.00753784701259 * S_Frq + -0.31764694608254 * S_Income + 0.49525183733398 * 
S_Kidhome + 0.24623619243686 * S_Mnt + 0.25904859702044 * S_MntFishProducts + 0.26153358982994 
* S_MntFruits + -0.07223707213485 * S_MntGoldProds + -0.15192960471493 * S_MntMeatProducts + 
0.08241128624385 * S_MntSweetProducts + 0.62479763709054 * S_MntWines + 0.03593742779349 * 
S_MonthsAsCustomer + 0.00825730323418 * S_NumCatalogPurchases + -0.0771083149302 * 
S_NumDealsPurchases + 0.03403621221162 * S_NumDistPurchases + 0.61303946422025 * 
S_NumStorePurchases + 0.27126793634053 * S_NumWebPurchases + -0.9769688424222 * 
S_NumWebVisitsMonth + 0.08832170040425 * S_RFMstat + 0.13241491054212 * S_RMntFrq + 
0.94872655811163 * S_Recency + 0.22002222738147 * S_Teenhome ;
2325244   +   H1x1_4  =     0.46328587348713 * S_AcceptedCmpTotal
2325245   +          +      -0.306946385792 * S_Age  +    -0.24247964225191 * S_Frq
2325246   +          +    -0.42968609314513 * S_Income  +    -0.08934431746158 *
2325247   +        S_Kidhome  +     0.15972194979558 * S_Mnt  +    -0.22174909818279 *
2325248   +        S_MntFishProducts  +    -0.23755215058744 * S_MntFruits
2325249   +          +      -0.124789433808 * S_MntGoldProds  +     0.50040173514144 *
2325250   +        S_MntMeatProducts  +     0.02850063230459 * S_MntSweetProducts
2325251   +          +     0.13427582671876 * S_MntWines  +     0.25569886862761 *
2325252   +        S_MonthsAsCustomer  +     0.34004201732149 * S_NumCatalogPurchases
2325253   +          +     0.29894603062327 * S_NumDealsPurchases
2325254   +          +     0.07614620530875 * S_NumDistPurchases
2325255   +          +     0.15402335009896 * S_NumStorePurchases
2325256   +          +     0.10615749096863 * S_NumWebPurchases
2325257   +          +     0.41962286816879 * S_NumWebVisitsMonth
2325258   +          +     0.00203630873093 * S_RFMstat  +     0.04736976805951 *
2325259   +        S_RMntFrq  +    -0.84751074132422 * S_Recency
2325260   +          +      0.2189023557249 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46328587348713 * S_AcceptedCmpTotal + -0.306946385792 * S_Age 
+ -0.24247964225191 * S_Frq + -0.42968609314513 * S_Income + -0.08934431746158 * S_Kidhome + 
0.15972194979558 * S_Mnt + -0.22174909818279 * S_MntFishProducts + -0.23755215058744 * 
S_MntFruits + -0.124789433808 * S_MntGoldProds + 0.50040173514144 * S_MntMeatProducts + 
0.02850063230459 * S_MntSweetProducts + 0.13427582671876 * S_MntWines + 0.25569886862761 * 
S_MonthsAsCustomer + 0.34004201732149 * S_NumCatalogPurchases + 0.29894603062327 * 
S_NumDealsPurchases + 0.07614620530875 * S_NumDistPurchases + 0.15402335009896 * 
S_NumStorePurchases + 0.10615749096863 * S_NumWebPurchases + 0.41962286816879 * 
S_NumWebVisitsMonth + 0.00203630873093 * S_RFMstat + 0.04736976805951 * S_RMntFrq + 
-0.84751074132422 * S_Recency + 0.2189023557249 * S_Teenhome ;
2325261   +   H1x1_5  =    -0.32353341757368 * S_AcceptedCmpTotal
2325262   +          +     0.03233494925748 * S_Age  +    -0.21296093282526 * S_Frq
2325263   +          +    -0.33919081075007 * S_Income  +     0.08771362671573 *
2325264   +        S_Kidhome  +    -0.10797068838726 * S_Mnt  +    -0.19736358637985 *
2325265   +        S_MntFishProducts  +    -0.19679917231132 * S_MntFruits
2325266   +          +     0.07502386205588 * S_MntGoldProds  +    -0.50948750987247 *
2325267   +        S_MntMeatProducts  +     0.00413757018488 * S_MntSweetProducts
2325268   +          +      0.0788538305785 * S_MntWines  +    -0.02917052455021 *
2325269   +        S_MonthsAsCustomer  +    -0.53933514609821 * S_NumCatalogPurchases
2325270   +          +     0.14392502416642 * S_NumDealsPurchases
2325271   +          +    -0.10026304978633 * S_NumDistPurchases
2325272   +          +     -0.0588453022746 * S_NumStorePurchases
2325273   +          +     0.24799398610395 * S_NumWebPurchases
2325274   +          +    -0.52695548549717 * S_NumWebVisitsMonth
2325275   +          +     0.01855620452049 * S_RFMstat  +    -0.00189170766477 *
2325276   +        S_RMntFrq  +     0.51841177421912 * S_Recency
2325277   +          +     0.31491299720207 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.32353341757368 * S_AcceptedCmpTotal + 0.03233494925748 * 
S_Age + -0.21296093282526 * S_Frq + -0.33919081075007 * S_Income + 0.08771362671573 * 
S_Kidhome + -0.10797068838726 * S_Mnt + -0.19736358637985 * S_MntFishProducts + 
-0.19679917231132 * S_MntFruits + 0.07502386205588 * S_MntGoldProds + -0.50948750987247 * 
S_MntMeatProducts + 0.00413757018488 * S_MntSweetProducts + 0.0788538305785 * S_MntWines + 
-0.02917052455021 * S_MonthsAsCustomer + -0.53933514609821 * S_NumCatalogPurchases + 
0.14392502416642 * S_NumDealsPurchases + -0.10026304978633 * S_NumDistPurchases + 
-0.0588453022746 * S_NumStorePurchases + 0.24799398610395 * S_NumWebPurchases + 
-0.52695548549717 * S_NumWebVisitsMonth + 0.01855620452049 * S_RFMstat + -0.00189170766477 * 
S_RMntFrq + 0.51841177421912 * S_Recency + 0.31491299720207 * S_Teenhome ;
2325278   +   H1x1_6  =     -0.2113594539647 * S_AcceptedCmpTotal
2325279   +          +     -0.1052829531896 * S_Age  +     0.30802959734964 * S_Frq
2325280   +          +    -0.03112570586685 * S_Income  +     0.19129661263247 *
2325281   +        S_Kidhome  +     0.00533736622639 * S_Mnt  +    -0.06112703732925 *
2325282   +        S_MntFishProducts  +    -0.15875686512247 * S_MntFruits
The SAS System

2325283   +          +    -0.08040179272112 * S_MntGoldProds  +    -0.14462087536907 *
2325284   +        S_MntMeatProducts  +     0.21353582706121 * S_MntSweetProducts
2325285   +          +    -0.30180630737612 * S_MntWines  +    -0.11825033043182 *
2325286   +        S_MonthsAsCustomer  +     -0.2917393256645 * S_NumCatalogPurchases
2325287   +          +     0.08149600854964 * S_NumDealsPurchases
2325288   +          +     0.16873541613513 * S_NumDistPurchases
2325289   +          +    -0.20437343413446 * S_NumStorePurchases
2325290   +          +     -0.1671107527288 * S_NumWebPurchases
2325291   +          +     0.03677043100993 * S_NumWebVisitsMonth
2325292   +          +      0.0240516540488 * S_RFMstat  +     0.06155030856383 *
2325293   +        S_RMntFrq  +    -0.28802122451372 * S_Recency
2325294   +          +     0.06998878697307 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.2113594539647 * S_AcceptedCmpTotal + -0.1052829531896 * 
S_Age + 0.30802959734964 * S_Frq + -0.03112570586685 * S_Income + 0.19129661263247 * S_Kidhome 
+ 0.00533736622639 * S_Mnt + -0.06112703732925 * S_MntFishProducts + -0.15875686512247 * 
S_MntFruits + -0.08040179272112 * S_MntGoldProds + -0.14462087536907 * S_MntMeatProducts + 
0.21353582706121 * S_MntSweetProducts + -0.30180630737612 * S_MntWines + -0.11825033043182 * 
S_MonthsAsCustomer + -0.2917393256645 * S_NumCatalogPurchases + 0.08149600854964 * 
S_NumDealsPurchases + 0.16873541613513 * S_NumDistPurchases + -0.20437343413446 * 
S_NumStorePurchases + -0.1671107527288 * S_NumWebPurchases + 0.03677043100993 * 
S_NumWebVisitsMonth + 0.0240516540488 * S_RFMstat + 0.06155030856383 * S_RMntFrq + 
-0.28802122451372 * S_Recency + 0.06998878697307 * S_Teenhome ;
2325295   +   H1x1_1  = H1x1_1  +    -0.33641509021082 * AcceptedCmp10
2325296   +          +     0.03092292109435 * AcceptedCmp20  +    -0.23551187181907 *
2325297   +        AcceptedCmp30  +    -0.06694400005185 * AcceptedCmp40
2325298   +          +    -0.14203506237074 * AcceptedCmp50  +    -0.25866390496966 *
2325299   +        Complain0  +     0.19505921178308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.33641509021082 * AcceptedCmp10 + 0.03092292109435 * 
AcceptedCmp20 + -0.23551187181907 * AcceptedCmp30 + -0.06694400005185 * AcceptedCmp40 + 
-0.14203506237074 * AcceptedCmp50 + -0.25866390496966 * Complain0 + 0.19505921178308 * 
HigherEducationBinary0 ;
2325300   +   H1x1_2  = H1x1_2  +     0.09937599707203 * AcceptedCmp10
2325301   +          +     0.03831208573575 * AcceptedCmp20  +     0.39683693019758 *
2325302   +        AcceptedCmp30  +     0.37006277175295 * AcceptedCmp40
2325303   +          +     0.21293419476895 * AcceptedCmp50  +     0.15528568367473 *
2325304   +        Complain0  +    -0.30210013299822 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.09937599707203 * AcceptedCmp10 + 0.03831208573575 * 
AcceptedCmp20 + 0.39683693019758 * AcceptedCmp30 + 0.37006277175295 * AcceptedCmp40 + 
0.21293419476895 * AcceptedCmp50 + 0.15528568367473 * Complain0 + -0.30210013299822 * 
HigherEducationBinary0 ;
2325305   +   H1x1_3  = H1x1_3  +     0.29891621770856 * AcceptedCmp10
2325306   +          +     0.64938384482014 * AcceptedCmp20  +     0.44997242602142 *
2325307   +        AcceptedCmp30  +       0.479093722666 * AcceptedCmp40
2325308   +          +     0.50957180373919 * AcceptedCmp50  +     0.27833535432461 *
2325309   +        Complain0  +    -0.20383534906723 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.29891621770856 * AcceptedCmp10 + 0.64938384482014 * 
AcceptedCmp20 + 0.44997242602142 * AcceptedCmp30 + 0.479093722666 * AcceptedCmp40 + 
0.50957180373919 * AcceptedCmp50 + 0.27833535432461 * Complain0 + -0.20383534906723 * 
HigherEducationBinary0 ;
2325310   +   H1x1_4  = H1x1_4  +    -0.26872515586946 * AcceptedCmp10
2325311   +          +    -0.24299337381911 * AcceptedCmp20  +    -0.01147155911926 *
2325312   +        AcceptedCmp30  +     -0.3056041277894 * AcceptedCmp40
2325313   +          +    -0.05496409609003 * AcceptedCmp50  +     0.07858238173893 *
2325314   +        Complain0  +     0.05721550070076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26872515586946 * AcceptedCmp10 + -0.24299337381911 
* AcceptedCmp20 + -0.01147155911926 * AcceptedCmp30 + -0.3056041277894 * AcceptedCmp40 + 
-0.05496409609003 * AcceptedCmp50 + 0.07858238173893 * Complain0 + 0.05721550070076 * 
HigherEducationBinary0 ;
2325315   +   H1x1_5  = H1x1_5  +    -0.14067626649899 * AcceptedCmp10
2325316   +          +    -0.30627802828357 * AcceptedCmp20  +     0.05057942365592 *
2325317   +        AcceptedCmp30  +    -0.10378506600459 * AcceptedCmp40
2325318   +          +     0.07479232390108 * AcceptedCmp50  +     0.07252750671496 *
2325319   +        Complain0  +     0.11114854035831 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.14067626649899 * AcceptedCmp10 + -0.30627802828357 
* AcceptedCmp20 + 0.05057942365592 * AcceptedCmp30 + -0.10378506600459 * AcceptedCmp40 + 
0.07479232390108 * AcceptedCmp50 + 0.07252750671496 * Complain0 + 0.11114854035831 * 
HigherEducationBinary0 ;
2325320   +   H1x1_6  = H1x1_6  +    -0.25806332334976 * AcceptedCmp10
2325321   +          +     0.03944021903138 * AcceptedCmp20  +    -0.08792206887119 *
2325322   +        AcceptedCmp30  +    -0.24631282865199 * AcceptedCmp40
2325323   +          +    -0.06123991538969 * AcceptedCmp50  +    -0.03114784375357 *
2325324   +        Complain0  +    -0.25204544481193 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.25806332334976 * AcceptedCmp10 + 0.03944021903138 * 
AcceptedCmp20 + -0.08792206887119 * AcceptedCmp30 + -0.24631282865199 * AcceptedCmp40 + 
-0.06123991538969 * AcceptedCmp50 + -0.03114784375357 * Complain0 + -0.25204544481193 * 
HigherEducationBinary0 ;
2325325   +   H1x1_1  = H1x1_1  +      0.2972170984261 * Education2n_Cycle
2325326   +          +     0.01651368568996 * EducationBasic  +     -0.1186055936649 *
2325327   +        EducationGraduation  +      0.0228208538951 * EducationMaster
2325328   +          +    -0.31045295887604 * Marital_StatusDivorced
2325329   +          +    -0.01109401001539 * Marital_StatusMarried
2325330   +          +     0.01325135981025 * Marital_StatusSingle
2325331   +          +     0.16609357475978 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.2972170984261 * Education2n_Cycle + 0.01651368568996 
* EducationBasic + -0.1186055936649 * EducationGraduation + 0.0228208538951 * EducationMaster 
+ -0.31045295887604 * Marital_StatusDivorced + -0.01109401001539 * Marital_StatusMarried + 
0.01325135981025 * Marital_StatusSingle + 0.16609357475978 * Marital_StatusTogether ;
2325332   +   H1x1_2  = H1x1_2  +    -0.07095220065018 * Education2n_Cycle
2325333   +          +    -0.23491732567608 * EducationBasic  +     0.20187086452315 *
2325334   +        EducationGraduation  +     0.07524128723108 * EducationMaster
2325335   +          +     0.02275101861599 * Marital_StatusDivorced
2325336   +          +     0.20271548664903 * Marital_StatusMarried
2325337   +          +    -0.12132069210718 * Marital_StatusSingle
2325338   +          +     0.00085090729385 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.07095220065018 * Education2n_Cycle + 
-0.23491732567608 * EducationBasic + 0.20187086452315 * EducationGraduation + 0.07524128723108 
* EducationMaster + 0.02275101861599 * Marital_StatusDivorced + 0.20271548664903 * 
Marital_StatusMarried + -0.12132069210718 * Marital_StatusSingle + 0.00085090729385 * 
Marital_StatusTogether ;
2325339   +   H1x1_3  = H1x1_3  +    -0.02268297689573 * Education2n_Cycle
2325340   +          +     0.06359770535369 * EducationBasic  +     -0.1194001280088 *
2325341   +        EducationGraduation  +     0.17299848976308 * EducationMaster
2325342   +          +     -0.4992959703281 * Marital_StatusDivorced
2325343   +          +     0.62071659624138 * Marital_StatusMarried
2325344   +          +    -0.21776202274494 * Marital_StatusSingle
2325345   +          +     0.54712874598141 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.02268297689573 * Education2n_Cycle + 
0.06359770535369 * EducationBasic + -0.1194001280088 * EducationGraduation + 0.17299848976308 
* EducationMaster + -0.4992959703281 * Marital_StatusDivorced + 0.62071659624138 * 
Marital_StatusMarried + -0.21776202274494 * Marital_StatusSingle + 0.54712874598141 * 
Marital_StatusTogether ;
2325346   +   H1x1_4  = H1x1_4  +    -0.17773353520266 * Education2n_Cycle
2325347   +          +     0.17998728120628 * EducationBasic  +    -0.00324602612825 *
2325348   +        EducationGraduation  +    -0.22448876765089 * EducationMaster
2325349   +          +     0.05626212670587 * Marital_StatusDivorced
2325350   +          +     0.14353891364597 * Marital_StatusMarried
2325351   +          +    -0.29006765622997 * Marital_StatusSingle
2325352   +          +     0.05503638282535 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.17773353520266 * Education2n_Cycle + 
0.17998728120628 * EducationBasic + -0.00324602612825 * EducationGraduation + 
-0.22448876765089 * EducationMaster + 0.05626212670587 * Marital_StatusDivorced + 
0.14353891364597 * Marital_StatusMarried + -0.29006765622997 * Marital_StatusSingle + 
0.05503638282535 * Marital_StatusTogether ;
2325353   +   H1x1_5  = H1x1_5  +     0.06634316870499 * Education2n_Cycle
2325354   +          +    -0.36153880127411 * EducationBasic  +     0.23023144658635 *
2325355   +        EducationGraduation  +    -0.06568730318683 * EducationMaster
2325356   +          +    -0.21206913700604 * Marital_StatusDivorced
2325357   +          +     0.58790643614629 * Marital_StatusMarried
2325358   +          +    -0.65995982578062 * Marital_StatusSingle
2325359   +          +     0.49642503732428 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.06634316870499 * Education2n_Cycle + 
-0.36153880127411 * EducationBasic + 0.23023144658635 * EducationGraduation + 
-0.06568730318683 * EducationMaster + -0.21206913700604 * Marital_StatusDivorced + 
0.58790643614629 * Marital_StatusMarried + -0.65995982578062 * Marital_StatusSingle + 
0.49642503732428 * Marital_StatusTogether ;
2325360   +   H1x1_6  = H1x1_6  +     0.16504024096118 * Education2n_Cycle
2325361   +          +     0.11925867171875 * EducationBasic  +    -0.04213907014732 *
2325362   +        EducationGraduation  +    -0.21389968555475 * EducationMaster
2325363   +          +    -0.05047370516008 * Marital_StatusDivorced
2325364   +          +    -0.23139090963669 * Marital_StatusMarried
2325365   +          +     0.04816197463249 * Marital_StatusSingle
2325366   +          +     0.04977890114896 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16504024096118 * Education2n_Cycle + 
0.11925867171875 * EducationBasic + -0.04213907014732 * EducationGraduation + 
-0.21389968555475 * EducationMaster + -0.05047370516008 * Marital_StatusDivorced + 
-0.23139090963669 * Marital_StatusMarried + 0.04816197463249 * Marital_StatusSingle + 
0.04977890114896 * Marital_StatusTogether ;
2325367   +   H1x1_1  =    -1.90576647346127 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.90576647346127 + H1x1_1 ;
2325368   +   H1x1_2  =     0.32295787429294 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.32295787429294 + H1x1_2 ;
2325369   +   H1x1_3  =     0.75117643107919 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.75117643107919 + H1x1_3 ;
2325370   +   H1x1_4  =      1.2336762751587 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.2336762751587 + H1x1_4 ;
2325371   +   H1x1_5  =    -0.97062317465491 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.97062317465491 + H1x1_5 ;
2325372   +   H1x1_6  =    -1.15756803634408 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.15756803634408 + H1x1_6 ;
2325373   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2325374   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2325375   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2325376   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2325377   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 * 
H1x1_1 ;
2325378   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2325379   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2325380   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 * 
H1x1_2 ;
2325381   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2325382   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2325383   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 * 
H1x1_3 ;
2325384   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2325385   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2325386   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 * 
H1x1_4 ;
2325387   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2325388   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2325389   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 * 
H1x1_5 ;
2325390   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2325391   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2325392   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 * 
H1x1_6 ;
2325393   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2325394   +END;
MPRINT(EM_DIAGRAM):   END;
2325395   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2325396   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2325397   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2325398   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2325399   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2325400   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2325401   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2325402   +END;
MPRINT(EM_DIAGRAM):   END;
2325403   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2325404   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2325405   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2325406   +
2325407   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2325408   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2325409   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2325410   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2325411   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2325412   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2325413   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2325414   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2325415   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2325416   +end;
MPRINT(EM_DIAGRAM):   end;
2325417   +else do;
MPRINT(EM_DIAGRAM):   else do;
2325418   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2325419   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2325420   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2325421   +   end;
MPRINT(EM_DIAGRAM):   end;
2325422   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2325423   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2325424   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2325425   +   end;
MPRINT(EM_DIAGRAM):   end;
2325426   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2325427   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2325428   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2325429   +   end;
MPRINT(EM_DIAGRAM):   end;
2325430   +end;
MPRINT(EM_DIAGRAM):   end;
2325431   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2325432   +   P_DepVar1  =    -0.99830813428318 * H1x1_1  +     1.33495006526712 * H1x1_2
2325433   +          +    -1.37942150026657 * H1x1_3  +     1.22714974922576 * H1x1_4
2325434   +          +     1.73375794385595 * H1x1_5  +     -0.0100306049679 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.99830813428318 * H1x1_1 + 1.33495006526712 * H1x1_2 + 
-1.37942150026657 * H1x1_3 + 1.22714974922576 * H1x1_4 + 1.73375794385595 * H1x1_5 + 
-0.0100306049679 * H1x1_6 ;
2325435   +   P_DepVar1  =    -1.90393999986167 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.90393999986167 + P_DepVar1 ;
2325436   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2325437   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2325438   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2325439   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2325440   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2325441   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2325442   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2325443   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2325444   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2325445   +END;
MPRINT(EM_DIAGRAM):   END;
2325446   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2325447   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2325448   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2325449   +END;
MPRINT(EM_DIAGRAM):   END;
2325450   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2325451   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2325452   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2325453   +END;
MPRINT(EM_DIAGRAM):   END;
2325454   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2325455   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2325456   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2325457   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2325458   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2325459   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2325460   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2325461   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2325462   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2325463   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2325464   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2325465   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2325466   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2325467   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2325468   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2325469   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2325470   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2325471   +END;
MPRINT(EM_DIAGRAM):   END;
2325472   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2325473   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2325474   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2325475   +drop
2325476   +H1x1_1
2325477   +H1x1_2
2325478   +H1x1_3
2325479   +H1x1_4
2325480   +H1x1_5
2325481   +H1x1_6
2325482   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 ;
2325483   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2325484   +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
2325485   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2325486   +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
2325487   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2325488   +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
2325489   +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
2325490   +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
2325491   +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
2325492   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2325493   +* Renaming Into variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural11;
2325494   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2325495   +length AutoNeural11_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural11_I_DepVar $32;
2325496   +drop AutoNeural11_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_I_DepVar;
2325497   +AutoNeural11_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural11_I_DepVar = I_DepVar;
2325498   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2325499   +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
2325500   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2325501   +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
2325502   +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
2325503   +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
2325504   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2325505   +* Ensmbl38: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Scoring Code of model 7 of 7;
2325506   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2325507   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2325508   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2325509   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2325510   +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
2325511   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2325512   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2325513   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2325514   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2325515   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2325516   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2325517   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2325518   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2325519   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2325520   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2325521   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2325522   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2325523   +LENGTH _WARN_ $4
2325524   +      F_DepVar  $ 12
2325525   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2325526   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2325527   +
2325528   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2325529   +
2325530   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2325531   +
2325532   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2325533   +
2325534   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2325535   +
2325536   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2325537   +
2325538   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2325539   +
2325540   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2325541   +
2325542   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2325543   +
2325544   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2325545   +
2325546   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2325547   +
2325548   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2325549   +
2325550   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2325551   +
2325552   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2325553   +
2325554   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2325555   +
2325556   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2325557   +
2325558   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2325559   +
2325560   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2325561   +
2325562   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2325563   +
2325564   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2325565   +
2325566   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2325567   +
2325568   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2325569   +
2325570   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2325571   +
2325572   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2325573   +
2325574   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2325575   +
2325576   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2325577   +
2325578   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2325579   +
2325580   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2325581   +
2325582   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2325583   +
2325584   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2325585   +
2325586   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2325587   +
2325588   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2325589   +
2325590   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2325591   +
2325592   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2325593   +
2325594   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2325595   +
2325596   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2325597   +
2325598   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2325599   +
2325600   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2325601   +
2325602   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2325603   +
2325604   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2325605   +
2325606   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2325607   +
2325608   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2325609   +
2325610   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2325611   +
2325612   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2325613   +
2325614   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
2325615   +
2325616   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2325617   +
2325618   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2325619   +
2325620   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2325621   +
2325622   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2325623   +
2325624   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2325625   +
2325626   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2325627   +
2325628   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
2325629   +
2325630   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2325631   +
2325632   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2325633   +
2325634   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2325635   +
2325636   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2325637   +
2325638   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2325639   +
2325640   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2325641   +
2325642   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2325643   +
2325644   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2325645   +
2325646   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2325647   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2325648   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2325649   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2325650   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2325651   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2325652   +end;
MPRINT(EM_DIAGRAM):   end;
2325653   +else do;
MPRINT(EM_DIAGRAM):   else do;
2325654   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2325655   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2325656   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2325657   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2325658   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2325659   +   end;
MPRINT(EM_DIAGRAM):   end;
2325660   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2325661   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2325662   +   end;
MPRINT(EM_DIAGRAM):   end;
2325663   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2325664   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2325665   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2325666   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2325667   +   end;
MPRINT(EM_DIAGRAM):   end;
2325668   +end;
MPRINT(EM_DIAGRAM):   end;
2325669   +
2325670   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2325671   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2325672   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2325673   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2325674   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2325675   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2325676   +end;
MPRINT(EM_DIAGRAM):   end;
2325677   +else do;
MPRINT(EM_DIAGRAM):   else do;
2325678   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2325679   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2325680   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2325681   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2325682   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2325683   +   end;
MPRINT(EM_DIAGRAM):   end;
2325684   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2325685   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2325686   +   end;
MPRINT(EM_DIAGRAM):   end;
2325687   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2325688   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2325689   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2325690   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2325691   +   end;
MPRINT(EM_DIAGRAM):   end;
2325692   +end;
MPRINT(EM_DIAGRAM):   end;
2325693   +
2325694   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2325695   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2325696   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2325697   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2325698   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2325699   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2325700   +end;
MPRINT(EM_DIAGRAM):   end;
2325701   +else do;
MPRINT(EM_DIAGRAM):   else do;
2325702   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2325703   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2325704   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2325705   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2325706   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2325707   +   end;
MPRINT(EM_DIAGRAM):   end;
2325708   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2325709   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2325710   +   end;
MPRINT(EM_DIAGRAM):   end;
2325711   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2325712   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2325713   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2325714   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2325715   +   end;
MPRINT(EM_DIAGRAM):   end;
2325716   +end;
MPRINT(EM_DIAGRAM):   end;
2325717   +
2325718   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2325719   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2325720   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2325721   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2325722   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2325723   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2325724   +end;
MPRINT(EM_DIAGRAM):   end;
2325725   +else do;
MPRINT(EM_DIAGRAM):   else do;
2325726   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2325727   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2325728   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2325729   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2325730   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2325731   +   end;
MPRINT(EM_DIAGRAM):   end;
2325732   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2325733   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2325734   +   end;
MPRINT(EM_DIAGRAM):   end;
2325735   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2325736   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2325737   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2325738   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2325739   +   end;
MPRINT(EM_DIAGRAM):   end;
2325740   +end;
MPRINT(EM_DIAGRAM):   end;
2325741   +
2325742   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2325743   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2325744   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2325745   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2325746   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2325747   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2325748   +end;
MPRINT(EM_DIAGRAM):   end;
2325749   +else do;
MPRINT(EM_DIAGRAM):   else do;
2325750   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2325751   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2325752   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2325753   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2325754   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2325755   +   end;
MPRINT(EM_DIAGRAM):   end;
2325756   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2325757   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2325758   +   end;
MPRINT(EM_DIAGRAM):   end;
2325759   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2325760   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2325761   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2325762   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2325763   +   end;
MPRINT(EM_DIAGRAM):   end;
2325764   +end;
MPRINT(EM_DIAGRAM):   end;
2325765   +
2325766   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2325767   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2325768   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2325769   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2325770   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2325771   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2325772   +end;
MPRINT(EM_DIAGRAM):   end;
2325773   +else do;
MPRINT(EM_DIAGRAM):   else do;
2325774   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2325775   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2325776   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2325777   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2325778   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2325779   +   end;
MPRINT(EM_DIAGRAM):   end;
2325780   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2325781   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2325782   +   end;
MPRINT(EM_DIAGRAM):   end;
2325783   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2325784   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2325785   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2325786   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2325787   +   end;
MPRINT(EM_DIAGRAM):   end;
2325788   +end;
MPRINT(EM_DIAGRAM):   end;
2325789   +
2325790   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2325791   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2325792   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2325793   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2325794   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2325795   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2325796   +end;
MPRINT(EM_DIAGRAM):   end;
2325797   +else do;
MPRINT(EM_DIAGRAM):   else do;
2325798   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2325799   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2325800   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2325801   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2325802   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2325803   +   end;
MPRINT(EM_DIAGRAM):   end;
2325804   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2325805   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2325806   +   end;
MPRINT(EM_DIAGRAM):   end;
2325807   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2325808   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2325809   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2325810   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2325811   +   end;
MPRINT(EM_DIAGRAM):   end;
2325812   +end;
MPRINT(EM_DIAGRAM):   end;
2325813   +
2325814   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2325815   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2325816   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2325817   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2325818   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2325819   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2325820   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2325821   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2325822   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2325823   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2325824   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2325825   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2325826   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2325827   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2325828   +end;
MPRINT(EM_DIAGRAM):   end;
2325829   +else do;
MPRINT(EM_DIAGRAM):   else do;
2325830   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2325831   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2325832   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2325833   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2325834   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2325835   +   end;
MPRINT(EM_DIAGRAM):   end;
2325836   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2325837   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2325838   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2325839   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2325840   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2325841   +   end;
MPRINT(EM_DIAGRAM):   end;
2325842   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2325843   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2325844   +   end;
MPRINT(EM_DIAGRAM):   end;
2325845   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2325846   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2325847   +   end;
MPRINT(EM_DIAGRAM):   end;
2325848   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2325849   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2325850   +   end;
MPRINT(EM_DIAGRAM):   end;
2325851   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2325852   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2325853   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2325854   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2325855   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2325856   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2325857   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2325858   +   end;
MPRINT(EM_DIAGRAM):   end;
2325859   +end;
MPRINT(EM_DIAGRAM):   end;
2325860   +
2325861   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2325862   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2325863   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2325864   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2325865   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2325866   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2325867   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2325868   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2325869   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2325870   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2325871   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2325872   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2325873   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2325874   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2325875   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2325876   +end;
MPRINT(EM_DIAGRAM):   end;
2325877   +else do;
MPRINT(EM_DIAGRAM):   else do;
2325878   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2325879   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2325880   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2325881   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2325882   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2325883   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2325884   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2325885   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2325886   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2325887   +         end;
MPRINT(EM_DIAGRAM):   end;
2325888   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2325889   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2325890   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2325891   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2325892   +            end;
MPRINT(EM_DIAGRAM):   end;
2325893   +         end;
MPRINT(EM_DIAGRAM):   end;
2325894   +      end;
MPRINT(EM_DIAGRAM):   end;
2325895   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2325896   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2325897   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2325898   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2325899   +         end;
MPRINT(EM_DIAGRAM):   end;
2325900   +      end;
MPRINT(EM_DIAGRAM):   end;
2325901   +   end;
MPRINT(EM_DIAGRAM):   end;
2325902   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2325903   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2325904   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2325905   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2325906   +      end;
MPRINT(EM_DIAGRAM):   end;
2325907   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2325908   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2325909   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2325910   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2325911   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2325912   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2325913   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2325914   +         end;
MPRINT(EM_DIAGRAM):   end;
2325915   +      end;
MPRINT(EM_DIAGRAM):   end;
2325916   +   end;
MPRINT(EM_DIAGRAM):   end;
2325917   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2325918   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2325919   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2325920   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2325921   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2325922   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2325923   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2325924   +   end;
MPRINT(EM_DIAGRAM):   end;
2325925   +end;
MPRINT(EM_DIAGRAM):   end;
2325926   +
2325927   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2325928   +*** Checking missing input Interval
2325929   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2325930   +
2325931   +IF NMISS(
2325932   +   AcceptedCmpTotal ,
2325933   +   Age ,
2325934   +   Frq ,
2325935   +   Income ,
2325936   +   Kidhome ,
2325937   +   Mnt ,
2325938   +   MntFishProducts ,
2325939   +   MntFruits ,
2325940   +   MntGoldProds ,
2325941   +   MntMeatProducts ,
2325942   +   MntSweetProducts ,
2325943   +   MntWines ,
2325944   +   MonthsAsCustomer ,
2325945   +   NumCatalogPurchases ,
2325946   +   NumDealsPurchases ,
2325947   +   NumDistPurchases ,
2325948   +   NumStorePurchases ,
2325949   +   NumWebPurchases ,
2325950   +   NumWebVisitsMonth ,
2325951   +   RFMstat ,
2325952   +   RMntFrq ,
2325953   +   Recency ,
2325954   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2325955   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2325956   +
2325957   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2325958   +END;
MPRINT(EM_DIAGRAM):   END;
2325959   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2325960   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2325961   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2325962   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2325963   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2325964   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2325965   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2325966   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2325967   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2325968   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2325969   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2325970   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2325971   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2325972   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2325973   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2325974   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2325975   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2325976   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2325977   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2325978   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2325979   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2325980   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2325981   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2325982   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2325983   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2325984   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2325985   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2325986   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2325987   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2325988   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2325989   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2325990   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2325991   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2325992   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2325993   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2325994   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2325995   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2325996   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2325997   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2325998   +END;
MPRINT(EM_DIAGRAM):   END;
2325999   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2326000   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2326001   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2326002   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2326003   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2326004   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2326005   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2326006   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2326007   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2326008   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2326009   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2326010   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2326011   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2326012   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2326013   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2326014   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2326015   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2326016   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2326017   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2326018   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2326019   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2326020   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2326021   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2326022   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2326023   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2326024   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2326025   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2326026   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2326027   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2326028   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2326029   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2326030   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2326031   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2326032   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2326033   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2326034   +   ELSE S_NumCatalogPurchases
2326035   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2326036   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2326037   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2326038   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2326039   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2326040   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2326041   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2326042   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2326043   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2326044   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2326045   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2326046   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2326047   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2326048   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2326049   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2326050   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2326051   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2326052   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2326053   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2326054   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2326055   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2326056   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2326057   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2326058   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2326059   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2326060   +END;
MPRINT(EM_DIAGRAM):   END;
2326061   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2326062   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2326063   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2326064   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2326065   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2326066   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2326067   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2326068   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2326069   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2326070   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2326071   +   H1x1_1  =    -0.08478534961354 * S_AcceptedCmpTotal
2326072   +          +     0.21528166003219 * S_Age  +    -0.16079737422774 * S_Frq
2326073   +          +     0.04922044955183 * S_Income  +     0.06245849112135 *
2326074   +        S_Kidhome  +    -0.12820970008154 * S_Mnt  +    -0.00676959308959 *
2326075   +        S_MntFishProducts  +    -0.20367403957375 * S_MntFruits
2326076   +          +    -0.06459558558968 * S_MntGoldProds  +     0.01557669100416 *
2326077   +        S_MntMeatProducts  +    -0.16342003924117 * S_MntSweetProducts
2326078   +          +     0.34676276369853 * S_MntWines  +    -0.08454570225616 *
2326079   +        S_MonthsAsCustomer  +    -0.00318885387905 * S_NumCatalogPurchases
2326080   +          +      0.1112677116841 * S_NumDealsPurchases
2326081   +          +     0.01563584187072 * S_NumDistPurchases
2326082   +          +     0.19193969522995 * S_NumStorePurchases
2326083   +          +      0.3133556199984 * S_NumWebPurchases
2326084   +          +    -0.21884874785716 * S_NumWebVisitsMonth
2326085   +          +     0.08478875792216 * S_RFMstat  +     0.05964414665285 *
2326086   +        S_RMntFrq  +    -0.12595000497726 * S_Recency
2326087   +          +     -0.1238719414537 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.08478534961354 * S_AcceptedCmpTotal + 0.21528166003219 * 
S_Age + -0.16079737422774 * S_Frq + 0.04922044955183 * S_Income + 0.06245849112135 * S_Kidhome 
+ -0.12820970008154 * S_Mnt + -0.00676959308959 * S_MntFishProducts + -0.20367403957375 * 
S_MntFruits + -0.06459558558968 * S_MntGoldProds + 0.01557669100416 * S_MntMeatProducts + 
-0.16342003924117 * S_MntSweetProducts + 0.34676276369853 * S_MntWines + -0.08454570225616 * 
S_MonthsAsCustomer + -0.00318885387905 * S_NumCatalogPurchases + 0.1112677116841 * 
S_NumDealsPurchases + 0.01563584187072 * S_NumDistPurchases + 0.19193969522995 * 
S_NumStorePurchases + 0.3133556199984 * S_NumWebPurchases + -0.21884874785716 * 
S_NumWebVisitsMonth + 0.08478875792216 * S_RFMstat + 0.05964414665285 * S_RMntFrq + 
-0.12595000497726 * S_Recency + -0.1238719414537 * S_Teenhome ;
2326088   +   H1x1_2  =     0.20807487357943 * S_AcceptedCmpTotal
2326089   +          +    -0.27223051908987 * S_Age  +     0.28649391533674 * S_Frq
2326090   +          +     0.46493719675068 * S_Income  +     0.10180542910079 *
2326091   +        S_Kidhome  +    -0.19573056673819 * S_Mnt  +    -0.05332725327514 *
2326092   +        S_MntFishProducts  +    -0.28610692329433 * S_MntFruits
2326093   +          +    -0.13417237194849 * S_MntGoldProds  +     0.45697707494335 *
2326094   +        S_MntMeatProducts  +    -0.28280545785477 * S_MntSweetProducts
2326095   +          +    -0.13234920069688 * S_MntWines  +     -0.2710938018651 *
2326096   +        S_MonthsAsCustomer  +     0.31174284041905 * S_NumCatalogPurchases
2326097   +          +     0.30225032753275 * S_NumDealsPurchases
2326098   +          +     0.33833359923595 * S_NumDistPurchases
2326099   +          +    -0.20255599575849 * S_NumStorePurchases
2326100   +          +    -0.12040071168942 * S_NumWebPurchases
2326101   +          +    -0.12407090307061 * S_NumWebVisitsMonth
2326102   +          +    -0.05688936259515 * S_RFMstat  +     0.15514736649245 *
2326103   +        S_RMntFrq  +     0.00838555462657 * S_Recency
2326104   +          +     0.04609426861136 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.20807487357943 * S_AcceptedCmpTotal + -0.27223051908987 * 
S_Age + 0.28649391533674 * S_Frq + 0.46493719675068 * S_Income + 0.10180542910079 * S_Kidhome 
+ -0.19573056673819 * S_Mnt + -0.05332725327514 * S_MntFishProducts + -0.28610692329433 * 
S_MntFruits + -0.13417237194849 * S_MntGoldProds + 0.45697707494335 * S_MntMeatProducts + 
-0.28280545785477 * S_MntSweetProducts + -0.13234920069688 * S_MntWines + -0.2710938018651 * 
S_MonthsAsCustomer + 0.31174284041905 * S_NumCatalogPurchases + 0.30225032753275 * 
S_NumDealsPurchases + 0.33833359923595 * S_NumDistPurchases + -0.20255599575849 * 
S_NumStorePurchases + -0.12040071168942 * S_NumWebPurchases + -0.12407090307061 * 
S_NumWebVisitsMonth + -0.05688936259515 * S_RFMstat + 0.15514736649245 * S_RMntFrq + 
0.00838555462657 * S_Recency + 0.04609426861136 * S_Teenhome ;
2326105   +   H1x1_3  =    -0.30541463116928 * S_AcceptedCmpTotal
2326106   +          +    -0.01746117216025 * S_Age  +    -0.44156473334329 * S_Frq
2326107   +          +    -0.51952426304193 * S_Income  +     0.20419921255777 *
2326108   +        S_Kidhome  +    -0.18174316707953 * S_Mnt  +    -0.03813675536406 *
2326109   +        S_MntFishProducts  +     -0.0959023413712 * S_MntFruits
2326110   +          +     0.12724081783278 * S_MntGoldProds  +    -0.07639148541426 *
2326111   +        S_MntMeatProducts  +     -0.0797214413833 * S_MntSweetProducts
2326112   +          +    -0.57705931875808 * S_MntWines  +    -0.12638551201991 *
2326113   +        S_MonthsAsCustomer  +    -0.21854676704549 * S_NumCatalogPurchases
2326114   +          +     0.16792903091627 * S_NumDealsPurchases
2326115   +          +    -0.37408945626745 * S_NumDistPurchases
2326116   +          +    -0.18067262995566 * S_NumStorePurchases
2326117   +          +     0.21192146789881 * S_NumWebPurchases
2326118   +          +    -0.23547702310669 * S_NumWebVisitsMonth
2326119   +          +    -0.02272089758813 * S_RFMstat  +    -0.16409330281075 *
2326120   +        S_RMntFrq  +     0.45021846112946 * S_Recency
2326121   +          +     0.32988735727394 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.30541463116928 * S_AcceptedCmpTotal + -0.01746117216025 * 
S_Age + -0.44156473334329 * S_Frq + -0.51952426304193 * S_Income + 0.20419921255777 * 
S_Kidhome + -0.18174316707953 * S_Mnt + -0.03813675536406 * S_MntFishProducts + 
-0.0959023413712 * S_MntFruits + 0.12724081783278 * S_MntGoldProds + -0.07639148541426 * 
S_MntMeatProducts + -0.0797214413833 * S_MntSweetProducts + -0.57705931875808 * S_MntWines + 
-0.12638551201991 * S_MonthsAsCustomer + -0.21854676704549 * S_NumCatalogPurchases + 
0.16792903091627 * S_NumDealsPurchases + -0.37408945626745 * S_NumDistPurchases + 
-0.18067262995566 * S_NumStorePurchases + 0.21192146789881 * S_NumWebPurchases + 
-0.23547702310669 * S_NumWebVisitsMonth + -0.02272089758813 * S_RFMstat + -0.16409330281075 * 
S_RMntFrq + 0.45021846112946 * S_Recency + 0.32988735727394 * S_Teenhome ;
2326122   +   H1x1_4  =     0.05205198916717 * S_AcceptedCmpTotal
2326123   +          +     0.25568653619739 * S_Age  +    -0.31037252146959 * S_Frq
2326124   +          +     0.42636025358982 * S_Income  +    -0.24453708980866 *
2326125   +        S_Kidhome  +    -0.07832530945892 * S_Mnt  +    -0.48332124476182 *
2326126   +        S_MntFishProducts  +    -0.13932879119138 * S_MntFruits
2326127   +          +      0.1984121566988 * S_MntGoldProds  +     1.14965897015972 *
2326128   +        S_MntMeatProducts  +     0.07027485457428 * S_MntSweetProducts
2326129   +          +    -0.56598097754046 * S_MntWines  +     0.07317190938075 *
2326130   +        S_MonthsAsCustomer  +       0.075756987983 * S_NumCatalogPurchases
2326131   +          +     0.29407429399136 * S_NumDealsPurchases
2326132   +          +     0.01610745252195 * S_NumDistPurchases
2326133   +          +    -0.17767939085628 * S_NumStorePurchases
2326134   +          +    -0.15168958538637 * S_NumWebPurchases
2326135   +          +     0.17433622143988 * S_NumWebVisitsMonth
2326136   +          +     0.11635602973993 * S_RFMstat  +     0.32632751843433 *
2326137   +        S_RMntFrq  +    -0.24758483374458 * S_Recency
2326138   +          +    -0.31468291567479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.05205198916717 * S_AcceptedCmpTotal + 0.25568653619739 * 
S_Age + -0.31037252146959 * S_Frq + 0.42636025358982 * S_Income + -0.24453708980866 * 
S_Kidhome + -0.07832530945892 * S_Mnt + -0.48332124476182 * S_MntFishProducts + 
-0.13932879119138 * S_MntFruits + 0.1984121566988 * S_MntGoldProds + 1.14965897015972 * 
S_MntMeatProducts + 0.07027485457428 * S_MntSweetProducts + -0.56598097754046 * S_MntWines + 
0.07317190938075 * S_MonthsAsCustomer + 0.075756987983 * S_NumCatalogPurchases + 
0.29407429399136 * S_NumDealsPurchases + 0.01610745252195 * S_NumDistPurchases + 
-0.17767939085628 * S_NumStorePurchases + -0.15168958538637 * S_NumWebPurchases + 
0.17433622143988 * S_NumWebVisitsMonth + 0.11635602973993 * S_RFMstat + 0.32632751843433 * 
S_RMntFrq + -0.24758483374458 * S_Recency + -0.31468291567479 * S_Teenhome ;
2326139   +   H1x1_5  =    -0.59657492903543 * S_AcceptedCmpTotal
2326140   +          +     0.23513672763458 * S_Age  +    -0.14882104210954 * S_Frq
2326141   +          +    -0.07762660201035 * S_Income  +     0.01424651904783 *
2326142   +        S_Kidhome  +     0.18748607813081 * S_Mnt  +     0.11088464897095 *
2326143   +        S_MntFishProducts  +    -0.10064450211557 * S_MntFruits
2326144   +          +     0.11161391354421 * S_MntGoldProds  +    -1.36345407290644 *
2326145   +        S_MntMeatProducts  +     0.04868729717044 * S_MntSweetProducts
2326146   +          +     0.80284342329654 * S_MntWines  +     -0.0179539622492 *
2326147   +        S_MonthsAsCustomer  +    -0.60051908798715 * S_NumCatalogPurchases
2326148   +          +    -0.37976451362108 * S_NumDealsPurchases
2326149   +          +    -0.17027731520801 * S_NumDistPurchases
2326150   +          +     0.59849493667087 * S_NumStorePurchases
2326151   +          +     0.65481480560301 * S_NumWebPurchases
2326152   +          +    -0.68253224576609 * S_NumWebVisitsMonth
2326153   +          +    -0.16723490165629 * S_RFMstat  +    -0.10533797887644 *
2326154   +        S_RMntFrq  +     0.81382723915873 * S_Recency
2326155   +          +     0.06049401205856 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.59657492903543 * S_AcceptedCmpTotal + 0.23513672763458 * 
S_Age + -0.14882104210954 * S_Frq + -0.07762660201035 * S_Income + 0.01424651904783 * 
S_Kidhome + 0.18748607813081 * S_Mnt + 0.11088464897095 * S_MntFishProducts + 
-0.10064450211557 * S_MntFruits + 0.11161391354421 * S_MntGoldProds + -1.36345407290644 * 
S_MntMeatProducts + 0.04868729717044 * S_MntSweetProducts + 0.80284342329654 * S_MntWines + 
-0.0179539622492 * S_MonthsAsCustomer + -0.60051908798715 * S_NumCatalogPurchases + 
-0.37976451362108 * S_NumDealsPurchases + -0.17027731520801 * S_NumDistPurchases + 
0.59849493667087 * S_NumStorePurchases + 0.65481480560301 * S_NumWebPurchases + 
-0.68253224576609 * S_NumWebVisitsMonth + -0.16723490165629 * S_RFMstat + -0.10533797887644 * 
S_RMntFrq + 0.81382723915873 * S_Recency + 0.06049401205856 * S_Teenhome ;
2326156   +   H1x1_6  =    -0.07547841798202 * S_AcceptedCmpTotal
2326157   +          +     0.22445278254589 * S_Age  +    -0.26357481075143 * S_Frq
2326158   +          +     0.06894154144261 * S_Income  +     0.20713236126681 *
2326159   +        S_Kidhome  +    -0.14103612934526 * S_Mnt  +     0.36334508557452 *
2326160   +        S_MntFishProducts  +    -0.20862425337296 * S_MntFruits
2326161   +          +    -0.29089690099273 * S_MntGoldProds  +     0.11336893090527 *
2326162   +        S_MntMeatProducts  +    -0.13547374281924 * S_MntSweetProducts
2326163   +          +     0.02228828195539 * S_MntWines  +    -0.19257650420334 *
2326164   +        S_MonthsAsCustomer  +      0.1365526319824 * S_NumCatalogPurchases
2326165   +          +    -0.07686699131623 * S_NumDealsPurchases
2326166   +          +    -0.07220460738926 * S_NumDistPurchases
2326167   +          +    -0.06554027468389 * S_NumStorePurchases
2326168   +          +     0.10422838158001 * S_NumWebPurchases
2326169   +          +    -0.03858550147892 * S_NumWebVisitsMonth
2326170   +          +    -0.06397448441373 * S_RFMstat  +     0.21747838287147 *
2326171   +        S_RMntFrq  +     0.24839313159913 * S_Recency
2326172   +          +    -0.06317317698653 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.07547841798202 * S_AcceptedCmpTotal + 0.22445278254589 * 
S_Age + -0.26357481075143 * S_Frq + 0.06894154144261 * S_Income + 0.20713236126681 * S_Kidhome 
+ -0.14103612934526 * S_Mnt + 0.36334508557452 * S_MntFishProducts + -0.20862425337296 * 
S_MntFruits + -0.29089690099273 * S_MntGoldProds + 0.11336893090527 * S_MntMeatProducts + 
-0.13547374281924 * S_MntSweetProducts + 0.02228828195539 * S_MntWines + -0.19257650420334 * 
S_MonthsAsCustomer + 0.1365526319824 * S_NumCatalogPurchases + -0.07686699131623 * 
S_NumDealsPurchases + -0.07220460738926 * S_NumDistPurchases + -0.06554027468389 * 
S_NumStorePurchases + 0.10422838158001 * S_NumWebPurchases + -0.03858550147892 * 
S_NumWebVisitsMonth + -0.06397448441373 * S_RFMstat + 0.21747838287147 * S_RMntFrq + 
0.24839313159913 * S_Recency + -0.06317317698653 * S_Teenhome ;
2326173   +   H1x1_7  =    -0.08604903695444 * S_AcceptedCmpTotal
2326174   +          +    -0.14807437541992 * S_Age  +     0.01466157584549 * S_Frq
2326175   +          +    -0.09883966180507 * S_Income  +     0.51992566778352 *
2326176   +        S_Kidhome  +     0.29795006703636 * S_Mnt  +    -0.08922020500011 *
2326177   +        S_MntFishProducts  +     0.19836834402079 * S_MntFruits
2326178   +          +    -0.11292241468378 * S_MntGoldProds  +       0.584464452194 *
2326179   +        S_MntMeatProducts  +     0.22625326024073 * S_MntSweetProducts
2326180   +          +     0.24074129944382 * S_MntWines  +     0.13538906557527 *
2326181   +        S_MonthsAsCustomer  +    -0.01228250248922 * S_NumCatalogPurchases
2326182   +          +    -0.07920122387563 * S_NumDealsPurchases
2326183   +          +      0.3649244061347 * S_NumDistPurchases
2326184   +          +     0.36475853688403 * S_NumStorePurchases
2326185   +          +     0.02153991404063 * S_NumWebPurchases
2326186   +          +    -0.94080669139388 * S_NumWebVisitsMonth
2326187   +          +     0.24853677977494 * S_RFMstat  +     0.37015183933951 *
2326188   +        S_RMntFrq  +      0.6724157721663 * S_Recency
2326189   +          +      0.1615471643866 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_7 = -0.08604903695444 * S_AcceptedCmpTotal + -0.14807437541992 * 
S_Age + 0.01466157584549 * S_Frq + -0.09883966180507 * S_Income + 0.51992566778352 * S_Kidhome 
+ 0.29795006703636 * S_Mnt + -0.08922020500011 * S_MntFishProducts + 0.19836834402079 * 
S_MntFruits + -0.11292241468378 * S_MntGoldProds + 0.584464452194 * S_MntMeatProducts + 
0.22625326024073 * S_MntSweetProducts + 0.24074129944382 * S_MntWines + 0.13538906557527 * 
S_MonthsAsCustomer + -0.01228250248922 * S_NumCatalogPurchases + -0.07920122387563 * 
S_NumDealsPurchases + 0.3649244061347 * S_NumDistPurchases + 0.36475853688403 * 
S_NumStorePurchases + 0.02153991404063 * S_NumWebPurchases + -0.94080669139388 * 
S_NumWebVisitsMonth + 0.24853677977494 * S_RFMstat + 0.37015183933951 * S_RMntFrq + 
0.6724157721663 * S_Recency + 0.1615471643866 * S_Teenhome ;
2326190   +   H1x1_1  = H1x1_1  +     0.04431608362128 * AcceptedCmp10
2326191   +          +       0.145592087795 * AcceptedCmp20  +    -0.18972867139938 *
2326192   +        AcceptedCmp30  +     0.11297731320888 * AcceptedCmp40
2326193   +          +     0.15203974410995 * AcceptedCmp50  +     0.05130421316428 *
2326194   +        Complain0  +     0.33576036450343 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.04431608362128 * AcceptedCmp10 + 0.145592087795 * 
AcceptedCmp20 + -0.18972867139938 * AcceptedCmp30 + 0.11297731320888 * AcceptedCmp40 + 
0.15203974410995 * AcceptedCmp50 + 0.05130421316428 * Complain0 + 0.33576036450343 * 
HigherEducationBinary0 ;
2326195   +   H1x1_2  = H1x1_2  +    -0.05495742609855 * AcceptedCmp10
2326196   +          +    -0.08873650760176 * AcceptedCmp20  +    -0.16380549867313 *
2326197   +        AcceptedCmp30  +    -0.24495261884932 * AcceptedCmp40
2326198   +          +    -0.22199506896148 * AcceptedCmp50  +       0.149484615172 *
2326199   +        Complain0  +     0.01091791142552 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.05495742609855 * AcceptedCmp10 + -0.08873650760176 
* AcceptedCmp20 + -0.16380549867313 * AcceptedCmp30 + -0.24495261884932 * AcceptedCmp40 + 
-0.22199506896148 * AcceptedCmp50 + 0.149484615172 * Complain0 + 0.01091791142552 * 
HigherEducationBinary0 ;
2326200   +   H1x1_3  = H1x1_3  +     0.03473702421341 * AcceptedCmp10
2326201   +          +    -0.11226718065217 * AcceptedCmp20  +     0.19024579384296 *
2326202   +        AcceptedCmp30  +     0.15478548865598 * AcceptedCmp40
2326203   +          +     0.15222823671897 * AcceptedCmp50  +     0.07713012834947 *
2326204   +        Complain0  +    -0.18741708707661 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.03473702421341 * AcceptedCmp10 + -0.11226718065217 * 
AcceptedCmp20 + 0.19024579384296 * AcceptedCmp30 + 0.15478548865598 * AcceptedCmp40 + 
0.15222823671897 * AcceptedCmp50 + 0.07713012834947 * Complain0 + -0.18741708707661 * 
HigherEducationBinary0 ;
2326205   +   H1x1_4  = H1x1_4  +    -0.25622127302429 * AcceptedCmp10
2326206   +          +    -0.39059103518073 * AcceptedCmp20  +    -0.29716603631807 *
2326207   +        AcceptedCmp30  +    -0.20875694971526 * AcceptedCmp40
2326208   +          +    -0.35128787139073 * AcceptedCmp50  +    -0.28848733462386 *
2326209   +        Complain0  +      0.4276503747649 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.25622127302429 * AcceptedCmp10 + -0.39059103518073 
* AcceptedCmp20 + -0.29716603631807 * AcceptedCmp30 + -0.20875694971526 * AcceptedCmp40 + 
-0.35128787139073 * AcceptedCmp50 + -0.28848733462386 * Complain0 + 0.4276503747649 * 
HigherEducationBinary0 ;
2326210   +   H1x1_5  = H1x1_5  +    -0.06574875851088 * AcceptedCmp10
2326211   +          +    -0.27375195259265 * AcceptedCmp20  +     -0.2740681662293 *
2326212   +        AcceptedCmp30  +    -0.14697156898736 * AcceptedCmp40
2326213   +          +     0.17684649468835 * AcceptedCmp50  +    -0.09979172944646 *
2326214   +        Complain0  +     0.38986664202197 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.06574875851088 * AcceptedCmp10 + -0.27375195259265 
* AcceptedCmp20 + -0.2740681662293 * AcceptedCmp30 + -0.14697156898736 * AcceptedCmp40 + 
0.17684649468835 * AcceptedCmp50 + -0.09979172944646 * Complain0 + 0.38986664202197 * 
HigherEducationBinary0 ;
2326215   +   H1x1_6  = H1x1_6  +     0.08696678529441 * AcceptedCmp10
2326216   +          +     0.09467543942215 * AcceptedCmp20  +     0.04586779705477 *
2326217   +        AcceptedCmp30  +    -0.12591921836379 * AcceptedCmp40
2326218   +          +     0.20150138392895 * AcceptedCmp50  +     0.27764282700214 *
2326219   +        Complain0  +     0.13985738522066 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.08696678529441 * AcceptedCmp10 + 0.09467543942215 * 
AcceptedCmp20 + 0.04586779705477 * AcceptedCmp30 + -0.12591921836379 * AcceptedCmp40 + 
0.20150138392895 * AcceptedCmp50 + 0.27764282700214 * Complain0 + 0.13985738522066 * 
HigherEducationBinary0 ;
2326220   +   H1x1_7  = H1x1_7  +    -0.10455069401218 * AcceptedCmp10
2326221   +          +      0.1311831941372 * AcceptedCmp20  +     0.17844209104604 *
2326222   +        AcceptedCmp30  +     0.19406707592815 * AcceptedCmp40
2326223   +          +    -0.00068155012319 * AcceptedCmp50  +     0.13245364846536 *
2326224   +        Complain0  +    -0.05165256160872 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + -0.10455069401218 * AcceptedCmp10 + 0.1311831941372 * 
AcceptedCmp20 + 0.17844209104604 * AcceptedCmp30 + 0.19406707592815 * AcceptedCmp40 + 
-0.00068155012319 * AcceptedCmp50 + 0.13245364846536 * Complain0 + -0.05165256160872 * 
HigherEducationBinary0 ;
2326225   +   H1x1_1  = H1x1_1  +     0.28967939808759 * Education2n_Cycle
2326226   +          +    -0.15795056374781 * EducationBasic  +    -0.00649803471307 *
2326227   +        EducationGraduation  +     0.19520715924532 * EducationMaster
2326228   +          +     0.07744097241553 * Marital_StatusDivorced
2326229   +          +     -0.0247463100385 * Marital_StatusMarried
2326230   +          +     0.05804915234573 * Marital_StatusSingle
2326231   +          +    -0.08320125047871 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.28967939808759 * Education2n_Cycle + 
-0.15795056374781 * EducationBasic + -0.00649803471307 * EducationGraduation + 
0.19520715924532 * EducationMaster + 0.07744097241553 * Marital_StatusDivorced + 
-0.0247463100385 * Marital_StatusMarried + 0.05804915234573 * Marital_StatusSingle + 
-0.08320125047871 * Marital_StatusTogether ;
2326232   +   H1x1_2  = H1x1_2  +     0.12524444422085 * Education2n_Cycle
2326233   +          +    -0.30278286924729 * EducationBasic  +     0.37480827366421 *
2326234   +        EducationGraduation  +     0.34209136290694 * EducationMaster
2326235   +          +     0.01390668926269 * Marital_StatusDivorced
2326236   +          +     0.01136282152074 * Marital_StatusMarried
2326237   +          +     0.12450246418789 * Marital_StatusSingle
2326238   +          +     -0.1576148519872 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12524444422085 * Education2n_Cycle + 
-0.30278286924729 * EducationBasic + 0.37480827366421 * EducationGraduation + 0.34209136290694 
* EducationMaster + 0.01390668926269 * Marital_StatusDivorced + 0.01136282152074 * 
Marital_StatusMarried + 0.12450246418789 * Marital_StatusSingle + -0.1576148519872 * 
Marital_StatusTogether ;
2326239   +   H1x1_3  = H1x1_3  +    -0.14589041643593 * Education2n_Cycle
2326240   +          +    -0.15691118816463 * EducationBasic  +      0.1993616073183 *
2326241   +        EducationGraduation  +     0.02862010255145 * EducationMaster
2326242   +          +    -0.19133456931879 * Marital_StatusDivorced
2326243   +          +     0.56263566654996 * Marital_StatusMarried
2326244   +          +    -0.42172822038882 * Marital_StatusSingle
2326245   +          +     0.42023140643292 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14589041643593 * Education2n_Cycle + 
-0.15691118816463 * EducationBasic + 0.1993616073183 * EducationGraduation + 0.02862010255145 
* EducationMaster + -0.19133456931879 * Marital_StatusDivorced + 0.56263566654996 * 
Marital_StatusMarried + -0.42172822038882 * Marital_StatusSingle + 0.42023140643292 * 
Marital_StatusTogether ;
2326246   +   H1x1_4  = H1x1_4  +     0.10038585978656 * Education2n_Cycle
2326247   +          +    -0.11388609002984 * EducationBasic  +    -0.14980553500983 *
2326248   +        EducationGraduation  +    -0.07646595330369 * EducationMaster
2326249   +          +    -0.19871205065609 * Marital_StatusDivorced
2326250   +          +    -0.14730795681603 * Marital_StatusMarried
2326251   +          +     0.05055432510362 * Marital_StatusSingle
2326252   +          +     0.06558965292395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.10038585978656 * Education2n_Cycle + 
-0.11388609002984 * EducationBasic + -0.14980553500983 * EducationGraduation + 
-0.07646595330369 * EducationMaster + -0.19871205065609 * Marital_StatusDivorced + 
-0.14730795681603 * Marital_StatusMarried + 0.05055432510362 * Marital_StatusSingle + 
0.06558965292395 * Marital_StatusTogether ;
2326253   +   H1x1_5  = H1x1_5  +      0.0015835307855 * Education2n_Cycle
2326254   +          +    -0.22658746797638 * EducationBasic  +    -0.03445982386977 *
2326255   +        EducationGraduation  +     0.11375378192685 * EducationMaster
2326256   +          +    -0.35623807358995 * Marital_StatusDivorced
2326257   +          +     0.30324726283965 * Marital_StatusMarried
2326258   +          +    -0.18561093467927 * Marital_StatusSingle
2326259   +          +       0.395424582152 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0015835307855 * Education2n_Cycle + 
-0.22658746797638 * EducationBasic + -0.03445982386977 * EducationGraduation + 
0.11375378192685 * EducationMaster + -0.35623807358995 * Marital_StatusDivorced + 
0.30324726283965 * Marital_StatusMarried + -0.18561093467927 * Marital_StatusSingle + 
0.395424582152 * Marital_StatusTogether ;
2326260   +   H1x1_6  = H1x1_6  +    -0.23751822587858 * Education2n_Cycle
2326261   +          +    -0.01687300040825 * EducationBasic  +     0.23236967703011 *
2326262   +        EducationGraduation  +      0.0725289831541 * EducationMaster
2326263   +          +     0.11581014663368 * Marital_StatusDivorced
2326264   +          +    -0.31070638037659 * Marital_StatusMarried
2326265   +          +     0.17131747253949 * Marital_StatusSingle
2326266   +          +    -0.19314955966476 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.23751822587858 * Education2n_Cycle + 
-0.01687300040825 * EducationBasic + 0.23236967703011 * EducationGraduation + 0.0725289831541 
* EducationMaster + 0.11581014663368 * Marital_StatusDivorced + -0.31070638037659 * 
Marital_StatusMarried + 0.17131747253949 * Marital_StatusSingle + -0.19314955966476 * 
Marital_StatusTogether ;
2326267   +   H1x1_7  = H1x1_7  +     0.00103693282479 * Education2n_Cycle
2326268   +          +     0.12608909598752 * EducationBasic  +     -0.2366673091666 *
2326269   +        EducationGraduation  +     0.24413217290922 * EducationMaster
2326270   +          +    -0.42450599871892 * Marital_StatusDivorced
2326271   +          +     0.48162905075885 * Marital_StatusMarried
2326272   +          +    -0.26618507749283 * Marital_StatusSingle
2326273   +          +     0.38053668740338 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + 0.00103693282479 * Education2n_Cycle + 
0.12608909598752 * EducationBasic + -0.2366673091666 * EducationGraduation + 0.24413217290922 
* EducationMaster + -0.42450599871892 * Marital_StatusDivorced + 0.48162905075885 * 
Marital_StatusMarried + -0.26618507749283 * Marital_StatusSingle + 0.38053668740338 * 
Marital_StatusTogether ;
2326274   +   H1x1_1  =     0.12149136705075 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.12149136705075 + H1x1_1 ;
2326275   +   H1x1_2  =    -0.97489696657001 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.97489696657001 + H1x1_2 ;
2326276   +   H1x1_3  =    -0.70605220802968 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.70605220802968 + H1x1_3 ;
2326277   +   H1x1_4  =    -1.07783206982379 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.07783206982379 + H1x1_4 ;
2326278   +   H1x1_5  =    -1.00400706261511 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.00400706261511 + H1x1_5 ;
2326279   +   H1x1_6  =     0.22600488314839 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.22600488314839 + H1x1_6 ;
2326280   +   H1x1_7  =     1.55642446968077 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.55642446968077 + H1x1_7 ;
2326281   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2326282   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2326283   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2326284   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2326285   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 * 
H1x1_1 ;
2326286   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2326287   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2326288   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 * 
H1x1_2 ;
2326289   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2326290   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2326291   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 * 
H1x1_3 ;
2326292   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2326293   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2326294   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 * 
H1x1_4 ;
2326295   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2326296   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2326297   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 * 
H1x1_5 ;
2326298   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2326299   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2326300   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 * 
H1x1_6 ;
2326301   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2326302   +   IF H1x1_7  < _REC_EPS AND H1x1_7  > - _REC_EPS THEN
2326303   +   H1x1_7  = H1x1_7  * H1x1_7 ;
MPRINT(EM_DIAGRAM):   IF H1x1_7 < _REC_EPS AND H1x1_7 > - _REC_EPS THEN H1x1_7 = H1x1_7 * 
H1x1_7 ;
2326304   +   ELSE H1x1_7  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_7 = _REC_EPS ;
2326305   +END;
MPRINT(EM_DIAGRAM):   END;
2326306   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2326307   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2326308   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2326309   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2326310   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2326311   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2326312   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2326313   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
2326314   +END;
MPRINT(EM_DIAGRAM):   END;
2326315   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2326316   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2326317   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2326318   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2326319   +   H1x2_1  =    -1.36226288448745 * S_AcceptedCmpTotal
2326320   +          +     -1.3328616352886 * S_Age  +     1.25346137866034 * S_Frq
2326321   +          +    -1.21746243786295 * S_Income  +     2.83911738158074 *
2326322   +        S_Kidhome  +    -0.60784009102409 * S_Mnt  +     1.57752173634223 *
2326323   +        S_MntFishProducts  +    -0.26776567401075 * S_MntFruits
2326324   +          +     1.09584731081081 * S_MntGoldProds  +     1.22333044103532 *
2326325   +        S_MntMeatProducts  +     0.42827942745016 * S_MntSweetProducts
2326326   +          +     0.67813472792448 * S_MntWines  +     0.56816492004798 *
2326327   +        S_MonthsAsCustomer  +     0.58113470399079 * S_NumCatalogPurchases
2326328   +          +     1.96719021971894 * S_NumDealsPurchases
2326329   +          +    -0.44535354794671 * S_NumDistPurchases
2326330   +          +    -0.54827762736866 * S_NumStorePurchases
2326331   +          +     1.02703310241897 * S_NumWebPurchases
2326332   +          +    -0.12526997502601 * S_NumWebVisitsMonth
2326333   +          +    -0.55803926383776 * S_RFMstat  +     0.01819380776809 *
2326334   +        S_RMntFrq  +       0.651688575044 * S_Recency
2326335   +          +     1.58682398186611 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.36226288448745 * S_AcceptedCmpTotal + -1.3328616352886 * 
S_Age + 1.25346137866034 * S_Frq + -1.21746243786295 * S_Income + 2.83911738158074 * S_Kidhome 
+ -0.60784009102409 * S_Mnt + 1.57752173634223 * S_MntFishProducts + -0.26776567401075 * 
S_MntFruits + 1.09584731081081 * S_MntGoldProds + 1.22333044103532 * S_MntMeatProducts + 
0.42827942745016 * S_MntSweetProducts + 0.67813472792448 * S_MntWines + 0.56816492004798 * 
S_MonthsAsCustomer + 0.58113470399079 * S_NumCatalogPurchases + 1.96719021971894 * 
S_NumDealsPurchases + -0.44535354794671 * S_NumDistPurchases + -0.54827762736866 * 
S_NumStorePurchases + 1.02703310241897 * S_NumWebPurchases + -0.12526997502601 * 
S_NumWebVisitsMonth + -0.55803926383776 * S_RFMstat + 0.01819380776809 * S_RMntFrq + 
0.651688575044 * S_Recency + 1.58682398186611 * S_Teenhome ;
2326336   +   H1x2_2  =    -0.38064507857029 * S_AcceptedCmpTotal
2326337   +          +    -0.49661801158351 * S_Age  +    -0.89589399799916 * S_Frq
2326338   +          +     -0.0121499288597 * S_Income  +    -0.48023022827846 *
2326339   +        S_Kidhome  +     -0.5183846206029 * S_Mnt  +    -3.13913899012334 *
2326340   +        S_MntFishProducts  +    -2.07291335687615 * S_MntFruits
2326341   +          +     0.51019753905662 * S_MntGoldProds  +     0.11458666377917 *
2326342   +        S_MntMeatProducts  +     -1.8499241966205 * S_MntSweetProducts
2326343   +          +     0.23160544044172 * S_MntWines  +    -0.48210626907943 *
2326344   +        S_MonthsAsCustomer  +     0.15500845227752 * S_NumCatalogPurchases
2326345   +          +     1.34659447971131 * S_NumDealsPurchases
2326346   +          +    -0.51624251310423 * S_NumDistPurchases
2326347   +          +      -1.283121574848 * S_NumStorePurchases
2326348   +          +    -1.83517806228926 * S_NumWebPurchases
2326349   +          +     0.51321339475285 * S_NumWebVisitsMonth
2326350   +          +    -1.86431704283342 * S_RFMstat  +    -1.52065204326569 *
2326351   +        S_RMntFrq  +    -0.33186055095462 * S_Recency
2326352   +          +    -0.49524729407054 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.38064507857029 * S_AcceptedCmpTotal + -0.49661801158351 * 
S_Age + -0.89589399799916 * S_Frq + -0.0121499288597 * S_Income + -0.48023022827846 * 
S_Kidhome + -0.5183846206029 * S_Mnt + -3.13913899012334 * S_MntFishProducts + 
-2.07291335687615 * S_MntFruits + 0.51019753905662 * S_MntGoldProds + 0.11458666377917 * 
S_MntMeatProducts + -1.8499241966205 * S_MntSweetProducts + 0.23160544044172 * S_MntWines + 
-0.48210626907943 * S_MonthsAsCustomer + 0.15500845227752 * S_NumCatalogPurchases + 
1.34659447971131 * S_NumDealsPurchases + -0.51624251310423 * S_NumDistPurchases + 
-1.283121574848 * S_NumStorePurchases + -1.83517806228926 * S_NumWebPurchases + 
0.51321339475285 * S_NumWebVisitsMonth + -1.86431704283342 * S_RFMstat + -1.52065204326569 * 
S_RMntFrq + -0.33186055095462 * S_Recency + -0.49524729407054 * S_Teenhome ;
2326353   +   H1x2_3  =    -0.75774003934728 * S_AcceptedCmpTotal
2326354   +          +    -0.85312030825337 * S_Age  +    -0.01726294458221 * S_Frq
2326355   +          +     0.58598267983786 * S_Income  +     1.30497766805554 *
2326356   +        S_Kidhome  +    -0.84214135491022 * S_Mnt  +     0.55305862453787 *
2326357   +        S_MntFishProducts  +      0.6488663613899 * S_MntFruits
2326358   +          +    -0.83189439197558 * S_MntGoldProds  +    -0.07500050412653 *
2326359   +        S_MntMeatProducts  +    -0.06401928810253 * S_MntSweetProducts
2326360   +          +      0.5940135658334 * S_MntWines  +    -0.04573352455984 *
2326361   +        S_MonthsAsCustomer  +    -1.53610650634069 * S_NumCatalogPurchases
2326362   +          +     0.67492297345004 * S_NumDealsPurchases
2326363   +          +    -0.40437875375926 * S_NumDistPurchases
2326364   +          +     0.36322603681545 * S_NumStorePurchases
2326365   +          +    -1.15315070635524 * S_NumWebPurchases
2326366   +          +     1.20707272201156 * S_NumWebVisitsMonth
2326367   +          +     0.12192566357285 * S_RFMstat  +    -0.46711219170047 *
2326368   +        S_RMntFrq  +     1.89703582493259 * S_Recency
2326369   +          +     1.07511942237188 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.75774003934728 * S_AcceptedCmpTotal + -0.85312030825337 * 
S_Age + -0.01726294458221 * S_Frq + 0.58598267983786 * S_Income + 1.30497766805554 * S_Kidhome 
+ -0.84214135491022 * S_Mnt + 0.55305862453787 * S_MntFishProducts + 0.6488663613899 * 
S_MntFruits + -0.83189439197558 * S_MntGoldProds + -0.07500050412653 * S_MntMeatProducts + 
-0.06401928810253 * S_MntSweetProducts + 0.5940135658334 * S_MntWines + -0.04573352455984 * 
S_MonthsAsCustomer + -1.53610650634069 * S_NumCatalogPurchases + 0.67492297345004 * 
S_NumDealsPurchases + -0.40437875375926 * S_NumDistPurchases + 0.36322603681545 * 
S_NumStorePurchases + -1.15315070635524 * S_NumWebPurchases + 1.20707272201156 * 
S_NumWebVisitsMonth + 0.12192566357285 * S_RFMstat + -0.46711219170047 * S_RMntFrq + 
1.89703582493259 * S_Recency + 1.07511942237188 * S_Teenhome ;
2326370   +   H1x2_4  =     0.62123819069495 * S_AcceptedCmpTotal
2326371   +          +     0.03399237520702 * S_Age  +    -0.01971421795338 * S_Frq
2326372   +          +    -0.54728266919056 * S_Income  +     -0.4634195771237 *
2326373   +        S_Kidhome  +    -1.19055247712911 * S_Mnt  +      1.4307770729159 *
2326374   +        S_MntFishProducts  +    -0.83895281276374 * S_MntFruits
2326375   +          +    -0.48578798244317 * S_MntGoldProds  +     -0.2846617807101 *
2326376   +        S_MntMeatProducts  +     0.70721686533987 * S_MntSweetProducts
2326377   +          +     1.32824513551741 * S_MntWines  +    -0.62654342755965 *
2326378   +        S_MonthsAsCustomer  +    -0.97245161056543 * S_NumCatalogPurchases
2326379   +          +    -0.41427983342148 * S_NumDealsPurchases
2326380   +          +    -0.22714305629205 * S_NumDistPurchases
2326381   +          +    -0.78763182048862 * S_NumStorePurchases
2326382   +          +    -0.26669253451501 * S_NumWebPurchases
2326383   +          +    -0.79601078616342 * S_NumWebVisitsMonth
2326384   +          +    -0.03863278696502 * S_RFMstat  +     0.95011556103056 *
2326385   +        S_RMntFrq  +     0.57184629262878 * S_Recency
2326386   +          +    -0.21560478702461 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.62123819069495 * S_AcceptedCmpTotal + 0.03399237520702 * 
S_Age + -0.01971421795338 * S_Frq + -0.54728266919056 * S_Income + -0.4634195771237 * 
S_Kidhome + -1.19055247712911 * S_Mnt + 1.4307770729159 * S_MntFishProducts + 
-0.83895281276374 * S_MntFruits + -0.48578798244317 * S_MntGoldProds + -0.2846617807101 * 
S_MntMeatProducts + 0.70721686533987 * S_MntSweetProducts + 1.32824513551741 * S_MntWines + 
-0.62654342755965 * S_MonthsAsCustomer + -0.97245161056543 * S_NumCatalogPurchases + 
-0.41427983342148 * S_NumDealsPurchases + -0.22714305629205 * S_NumDistPurchases + 
-0.78763182048862 * S_NumStorePurchases + -0.26669253451501 * S_NumWebPurchases + 
-0.79601078616342 * S_NumWebVisitsMonth + -0.03863278696502 * S_RFMstat + 0.95011556103056 * 
S_RMntFrq + 0.57184629262878 * S_Recency + -0.21560478702461 * S_Teenhome ;
2326387   +   H1x2_5  =     1.47906557745075 * S_AcceptedCmpTotal
2326388   +          +    -0.31060566334198 * S_Age  +     0.56472424389718 * S_Frq
2326389   +          +     2.16541682726249 * S_Income  +    -0.34119803841059 *
2326390   +        S_Kidhome  +    -0.53783050542796 * S_Mnt  +     0.54954821448236 *
2326391   +        S_MntFishProducts  +    -0.48449918837838 * S_MntFruits
2326392   +          +     0.29783052620672 * S_MntGoldProds  +    -0.15068954343013 *
2326393   +        S_MntMeatProducts  +     0.12733251381761 * S_MntSweetProducts
2326394   +          +    -2.46709166794296 * S_MntWines  +     -1.2011286508879 *
2326395   +        S_MonthsAsCustomer  +    -0.88194814936932 * S_NumCatalogPurchases
2326396   +          +      0.7697882092212 * S_NumDealsPurchases
2326397   +          +     0.51864835453056 * S_NumDistPurchases
2326398   +          +    -1.18320366630444 * S_NumStorePurchases
2326399   +          +     -0.6608394639529 * S_NumWebPurchases
2326400   +          +    -0.03948137707769 * S_NumWebVisitsMonth
2326401   +          +     1.01076462488608 * S_RFMstat  +    -0.91562280329354 *
2326402   +        S_RMntFrq  +    -1.07576669501238 * S_Recency
2326403   +          +     -0.5946628412106 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.47906557745075 * S_AcceptedCmpTotal + -0.31060566334198 * 
S_Age + 0.56472424389718 * S_Frq + 2.16541682726249 * S_Income + -0.34119803841059 * S_Kidhome 
+ -0.53783050542796 * S_Mnt + 0.54954821448236 * S_MntFishProducts + -0.48449918837838 * 
S_MntFruits + 0.29783052620672 * S_MntGoldProds + -0.15068954343013 * S_MntMeatProducts + 
0.12733251381761 * S_MntSweetProducts + -2.46709166794296 * S_MntWines + -1.2011286508879 * 
S_MonthsAsCustomer + -0.88194814936932 * S_NumCatalogPurchases + 0.7697882092212 * 
S_NumDealsPurchases + 0.51864835453056 * S_NumDistPurchases + -1.18320366630444 * 
S_NumStorePurchases + -0.6608394639529 * S_NumWebPurchases + -0.03948137707769 * 
S_NumWebVisitsMonth + 1.01076462488608 * S_RFMstat + -0.91562280329354 * S_RMntFrq + 
-1.07576669501238 * S_Recency + -0.5946628412106 * S_Teenhome ;
2326404   +   H1x2_6  =     0.42130900994246 * S_AcceptedCmpTotal
2326405   +          +     1.64256522546546 * S_Age  +    -0.31822237495441 * S_Frq
2326406   +          +     0.39698710846967 * S_Income  +    -1.30075584525681 *
2326407   +        S_Kidhome  +    -1.74733472316294 * S_Mnt  +    -1.04423575539078 *
2326408   +        S_MntFishProducts  +     0.28025913700744 * S_MntFruits
2326409   +          +     0.92062413073229 * S_MntGoldProds  +     0.38487452173084 *
2326410   +        S_MntMeatProducts  +     2.15808673418264 * S_MntSweetProducts
2326411   +          +     -0.5364274323591 * S_MntWines  +     0.64447858852609 *
2326412   +        S_MonthsAsCustomer  +     0.33683873873337 * S_NumCatalogPurchases
2326413   +          +     1.45707983202269 * S_NumDealsPurchases
2326414   +          +     0.83341887728641 * S_NumDistPurchases
2326415   +          +    -0.36664450469423 * S_NumStorePurchases
2326416   +          +     0.63911579043339 * S_NumWebPurchases
2326417   +          +     0.67144790303554 * S_NumWebVisitsMonth
2326418   +          +    -0.22124390112376 * S_RFMstat  +     1.72222071547971 *
2326419   +        S_RMntFrq  +    -0.02323382627271 * S_Recency
2326420   +          +    -0.09494567508522 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0.42130900994246 * S_AcceptedCmpTotal + 1.64256522546546 * 
S_Age + -0.31822237495441 * S_Frq + 0.39698710846967 * S_Income + -1.30075584525681 * 
S_Kidhome + -1.74733472316294 * S_Mnt + -1.04423575539078 * S_MntFishProducts + 
0.28025913700744 * S_MntFruits + 0.92062413073229 * S_MntGoldProds + 0.38487452173084 * 
S_MntMeatProducts + 2.15808673418264 * S_MntSweetProducts + -0.5364274323591 * S_MntWines + 
0.64447858852609 * S_MonthsAsCustomer + 0.33683873873337 * S_NumCatalogPurchases + 
1.45707983202269 * S_NumDealsPurchases + 0.83341887728641 * S_NumDistPurchases + 
-0.36664450469423 * S_NumStorePurchases + 0.63911579043339 * S_NumWebPurchases + 
0.67144790303554 * S_NumWebVisitsMonth + -0.22124390112376 * S_RFMstat + 1.72222071547971 * 
S_RMntFrq + -0.02323382627271 * S_Recency + -0.09494567508522 * S_Teenhome ;
2326421   +   H1x2_7  =      0.0903330772553 * S_AcceptedCmpTotal
2326422   +          +     0.13217959089196 * S_Age  +     0.93600629225871 * S_Frq
2326423   +          +     1.23765169211392 * S_Income  +     1.27732984858098 *
2326424   +        S_Kidhome  +     1.54889765360944 * S_Mnt  +     0.84618173514761 *
2326425   +        S_MntFishProducts  +    -0.32044356786958 * S_MntFruits
2326426   +          +    -0.26357995597029 * S_MntGoldProds  +     0.53649229087334 *
2326427   +        S_MntMeatProducts  +     1.46955866272889 * S_MntSweetProducts
2326428   +          +    -0.34260315437319 * S_MntWines  +    -1.70693604004836 *
2326429   +        S_MonthsAsCustomer  +     -0.4612555130737 * S_NumCatalogPurchases
2326430   +          +     0.68491896063662 * S_NumDealsPurchases
2326431   +          +      0.5386312048592 * S_NumDistPurchases
2326432   +          +     1.28108942503912 * S_NumStorePurchases
2326433   +          +    -0.88282270505969 * S_NumWebPurchases
2326434   +          +    -0.66670958211416 * S_NumWebVisitsMonth
2326435   +          +     0.94315921733739 * S_RFMstat  +     0.70533705858561 *
2326436   +        S_RMntFrq  +     0.23896687873405 * S_Recency
2326437   +          +     0.66289635918858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.0903330772553 * S_AcceptedCmpTotal + 0.13217959089196 * S_Age 
+ 0.93600629225871 * S_Frq + 1.23765169211392 * S_Income + 1.27732984858098 * S_Kidhome + 
1.54889765360944 * S_Mnt + 0.84618173514761 * S_MntFishProducts + -0.32044356786958 * 
S_MntFruits + -0.26357995597029 * S_MntGoldProds + 0.53649229087334 * S_MntMeatProducts + 
1.46955866272889 * S_MntSweetProducts + -0.34260315437319 * S_MntWines + -1.70693604004836 * 
S_MonthsAsCustomer + -0.4612555130737 * S_NumCatalogPurchases + 0.68491896063662 * 
S_NumDealsPurchases + 0.5386312048592 * S_NumDistPurchases + 1.28108942503912 * 
S_NumStorePurchases + -0.88282270505969 * S_NumWebPurchases + -0.66670958211416 * 
S_NumWebVisitsMonth + 0.94315921733739 * S_RFMstat + 0.70533705858561 * S_RMntFrq + 
0.23896687873405 * S_Recency + 0.66289635918858 * S_Teenhome ;
2326438   +   H1x2_1  = H1x2_1  +     0.22958861848016 * AcceptedCmp10
2326439   +          +    -1.11069938765475 * AcceptedCmp20  +     1.18563222829069 *
2326440   +        AcceptedCmp30  +    -0.97028253571173 * AcceptedCmp40
2326441   +          +     0.60850082670391 * AcceptedCmp50  +     0.31163990605418 *
2326442   +        Complain0  +     1.10957053966326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.22958861848016 * AcceptedCmp10 + -1.11069938765475 * 
AcceptedCmp20 + 1.18563222829069 * AcceptedCmp30 + -0.97028253571173 * AcceptedCmp40 + 
0.60850082670391 * AcceptedCmp50 + 0.31163990605418 * Complain0 + 1.10957053966326 * 
HigherEducationBinary0 ;
2326443   +   H1x2_2  = H1x2_2  +    -0.99409862826118 * AcceptedCmp10
2326444   +          +    -0.76360093699992 * AcceptedCmp20  +     0.82772534103696 *
2326445   +        AcceptedCmp30  +     1.74232000787449 * AcceptedCmp40
2326446   +          +    -1.37356239255127 * AcceptedCmp50  +      0.0919811154199 *
2326447   +        Complain0  +    -0.00220513515877 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.99409862826118 * AcceptedCmp10 + -0.76360093699992 
* AcceptedCmp20 + 0.82772534103696 * AcceptedCmp30 + 1.74232000787449 * AcceptedCmp40 + 
-1.37356239255127 * AcceptedCmp50 + 0.0919811154199 * Complain0 + -0.00220513515877 * 
HigherEducationBinary0 ;
2326448   +   H1x2_3  = H1x2_3  +    -0.21003647134105 * AcceptedCmp10
2326449   +          +    -0.08930317176477 * AcceptedCmp20  +    -0.39109673162041 *
2326450   +        AcceptedCmp30  +     1.14094450038946 * AcceptedCmp40
2326451   +          +     1.26041997788848 * AcceptedCmp50  +    -0.10972130900569 *
2326452   +        Complain0  +    -0.99352598480407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.21003647134105 * AcceptedCmp10 + -0.08930317176477 
* AcceptedCmp20 + -0.39109673162041 * AcceptedCmp30 + 1.14094450038946 * AcceptedCmp40 + 
1.26041997788848 * AcceptedCmp50 + -0.10972130900569 * Complain0 + -0.99352598480407 * 
HigherEducationBinary0 ;
2326453   +   H1x2_4  = H1x2_4  +     2.02630284432093 * AcceptedCmp10
2326454   +          +    -2.50721904229276 * AcceptedCmp20  +    -1.31026450397446 *
2326455   +        AcceptedCmp30  +    -0.83440880266914 * AcceptedCmp40
2326456   +          +     -0.0570899805015 * AcceptedCmp50  +    -0.55525351434733 *
2326457   +        Complain0  +     0.27306601694081 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 2.02630284432093 * AcceptedCmp10 + -2.50721904229276 * 
AcceptedCmp20 + -1.31026450397446 * AcceptedCmp30 + -0.83440880266914 * AcceptedCmp40 + 
-0.0570899805015 * AcceptedCmp50 + -0.55525351434733 * Complain0 + 0.27306601694081 * 
HigherEducationBinary0 ;
2326458   +   H1x2_5  = H1x2_5  +    -0.18595284227194 * AcceptedCmp10
2326459   +          +    -1.55973916517392 * AcceptedCmp20  +    -3.81563768970049 *
2326460   +        AcceptedCmp30  +    -0.09331430915239 * AcceptedCmp40
2326461   +          +     0.76128118177142 * AcceptedCmp50  +    -0.17283107047755 *
2326462   +        Complain0  +    -1.01028562804392 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.18595284227194 * AcceptedCmp10 + -1.55973916517392 
* AcceptedCmp20 + -3.81563768970049 * AcceptedCmp30 + -0.09331430915239 * AcceptedCmp40 + 
0.76128118177142 * AcceptedCmp50 + -0.17283107047755 * Complain0 + -1.01028562804392 * 
HigherEducationBinary0 ;
2326463   +   H1x2_6  = H1x2_6  +    -1.21475169836565 * AcceptedCmp10
2326464   +          +     0.28748729216575 * AcceptedCmp20  +     1.15908030413172 *
2326465   +        AcceptedCmp30  +    -0.05889528676549 * AcceptedCmp40
2326466   +          +    -0.41661363625562 * AcceptedCmp50  +    -0.77939130028952 *
2326467   +        Complain0  +     2.19510865765326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.21475169836565 * AcceptedCmp10 + 0.28748729216575 * 
AcceptedCmp20 + 1.15908030413172 * AcceptedCmp30 + -0.05889528676549 * AcceptedCmp40 + 
-0.41661363625562 * AcceptedCmp50 + -0.77939130028952 * Complain0 + 2.19510865765326 * 
HigherEducationBinary0 ;
2326468   +   H1x2_7  = H1x2_7  +     0.87360423179644 * AcceptedCmp10
2326469   +          +    -0.47867594186426 * AcceptedCmp20  +    -0.30325818223392 *
2326470   +        AcceptedCmp30  +    -0.96085556588297 * AcceptedCmp40
2326471   +          +    -0.19693158209969 * AcceptedCmp50  +    -0.73731792634553 *
2326472   +        Complain0  +    -1.10021678806679 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + 0.87360423179644 * AcceptedCmp10 + -0.47867594186426 * 
AcceptedCmp20 + -0.30325818223392 * AcceptedCmp30 + -0.96085556588297 * AcceptedCmp40 + 
-0.19693158209969 * AcceptedCmp50 + -0.73731792634553 * Complain0 + -1.10021678806679 * 
HigherEducationBinary0 ;
2326473   +   H1x2_1  = H1x2_1  +    -1.17876013389516 * Education2n_Cycle
2326474   +          +    -0.35670434275624 * EducationBasic  +    -0.12456502068616 *
2326475   +        EducationGraduation  +     -1.0620373133508 * EducationMaster
2326476   +          +    -3.97961426831865 * Marital_StatusDivorced
2326477   +          +     0.00932639813867 * Marital_StatusMarried
2326478   +          +     1.29310186574718 * Marital_StatusSingle
2326479   +          +     1.60940802221114 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.17876013389516 * Education2n_Cycle + 
-0.35670434275624 * EducationBasic + -0.12456502068616 * EducationGraduation + 
-1.0620373133508 * EducationMaster + -3.97961426831865 * Marital_StatusDivorced + 
0.00932639813867 * Marital_StatusMarried + 1.29310186574718 * Marital_StatusSingle + 
1.60940802221114 * Marital_StatusTogether ;
2326480   +   H1x2_2  = H1x2_2  +     0.58497813059595 * Education2n_Cycle
2326481   +          +     0.98038586431321 * EducationBasic  +    -0.20442806724521 *
2326482   +        EducationGraduation  +     0.64973046142001 * EducationMaster
2326483   +          +    -0.30358516578188 * Marital_StatusDivorced
2326484   +          +    -0.96176709360703 * Marital_StatusMarried
2326485   +          +     1.26977690921649 * Marital_StatusSingle
2326486   +          +     -0.6681544336237 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.58497813059595 * Education2n_Cycle + 
0.98038586431321 * EducationBasic + -0.20442806724521 * EducationGraduation + 0.64973046142001 
* EducationMaster + -0.30358516578188 * Marital_StatusDivorced + -0.96176709360703 * 
Marital_StatusMarried + 1.26977690921649 * Marital_StatusSingle + -0.6681544336237 * 
Marital_StatusTogether ;
2326487   +   H1x2_3  = H1x2_3  +     0.42123479646947 * Education2n_Cycle
2326488   +          +     0.22705854674045 * EducationBasic  +     0.34794003687348 *
2326489   +        EducationGraduation  +     0.18356390207843 * EducationMaster
2326490   +          +     0.55272671490757 * Marital_StatusDivorced
2326491   +          +      0.1499239288334 * Marital_StatusMarried
2326492   +          +    -0.46840941760604 * Marital_StatusSingle
2326493   +          +     0.93706218273755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.42123479646947 * Education2n_Cycle + 
0.22705854674045 * EducationBasic + 0.34794003687348 * EducationGraduation + 0.18356390207843 
* EducationMaster + 0.55272671490757 * Marital_StatusDivorced + 0.1499239288334 * 
Marital_StatusMarried + -0.46840941760604 * Marital_StatusSingle + 0.93706218273755 * 
Marital_StatusTogether ;
2326494   +   H1x2_4  = H1x2_4  +     0.85035585831723 * Education2n_Cycle
2326495   +          +    -0.70680576286167 * EducationBasic  +    -0.24487676912938 *
2326496   +        EducationGraduation  +    -0.33030970028481 * EducationMaster
2326497   +          +      -1.240735370138 * Marital_StatusDivorced
2326498   +          +    -1.20089294883599 * Marital_StatusMarried
2326499   +          +     0.57492674426149 * Marital_StatusSingle
2326500   +          +     1.44189292990255 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.85035585831723 * Education2n_Cycle + 
-0.70680576286167 * EducationBasic + -0.24487676912938 * EducationGraduation + 
-0.33030970028481 * EducationMaster + -1.240735370138 * Marital_StatusDivorced + 
-1.20089294883599 * Marital_StatusMarried + 0.57492674426149 * Marital_StatusSingle + 
1.44189292990255 * Marital_StatusTogether ;
2326501   +   H1x2_5  = H1x2_5  +    -0.62461434654579 * Education2n_Cycle
2326502   +          +    -0.34090423965869 * EducationBasic  +    -0.82493401834396 *
2326503   +        EducationGraduation  +    -1.09423426649553 * EducationMaster
2326504   +          +     1.05435442049802 * Marital_StatusDivorced
2326505   +          +      0.3571256349717 * Marital_StatusMarried
2326506   +          +    -0.44741267266578 * Marital_StatusSingle
2326507   +          +     0.02948931507994 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.62461434654579 * Education2n_Cycle + 
-0.34090423965869 * EducationBasic + -0.82493401834396 * EducationGraduation + 
-1.09423426649553 * EducationMaster + 1.05435442049802 * Marital_StatusDivorced + 
0.3571256349717 * Marital_StatusMarried + -0.44741267266578 * Marital_StatusSingle + 
0.02948931507994 * Marital_StatusTogether ;
2326508   +   H1x2_6  = H1x2_6  +     0.09620501635178 * Education2n_Cycle
2326509   +          +    -0.54617424401993 * EducationBasic  +    -0.43305038404558 *
2326510   +        EducationGraduation  +     0.05453229059502 * EducationMaster
2326511   +          +     2.06026721980778 * Marital_StatusDivorced
2326512   +          +    -0.49583258645166 * Marital_StatusMarried
2326513   +          +    -1.14824900824474 * Marital_StatusSingle
2326514   +          +     0.57690093967839 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + 0.09620501635178 * Education2n_Cycle + 
-0.54617424401993 * EducationBasic + -0.43305038404558 * EducationGraduation + 
0.05453229059502 * EducationMaster + 2.06026721980778 * Marital_StatusDivorced + 
-0.49583258645166 * Marital_StatusMarried + -1.14824900824474 * Marital_StatusSingle + 
0.57690093967839 * Marital_StatusTogether ;
2326515   +   H1x2_7  = H1x2_7  +    -0.31251046777442 * Education2n_Cycle
2326516   +          +    -1.69272922870259 * EducationBasic  +    -0.08682253496961 *
2326517   +        EducationGraduation  +     0.58241644186309 * EducationMaster
2326518   +          +     -1.1890908607447 * Marital_StatusDivorced
2326519   +          +    -0.46668809907123 * Marital_StatusMarried
2326520   +          +     1.20342564763422 * Marital_StatusSingle
2326521   +          +    -1.75740662969578 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + -0.31251046777442 * Education2n_Cycle + 
-1.69272922870259 * EducationBasic + -0.08682253496961 * EducationGraduation + 
0.58241644186309 * EducationMaster + -1.1890908607447 * Marital_StatusDivorced + 
-0.46668809907123 * Marital_StatusMarried + 1.20342564763422 * Marital_StatusSingle + 
-1.75740662969578 * Marital_StatusTogether ;
2326522   +   H1x2_1  =    -0.14973719401763 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.14973719401763 + H1x2_1 ;
2326523   +   H1x2_2  =    -0.56259582407931 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.56259582407931 + H1x2_2 ;
2326524   +   H1x2_3  =     0.42132483186492 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.42132483186492 + H1x2_3 ;
2326525   +   H1x2_4  =      1.1996209421335 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.1996209421335 + H1x2_4 ;
2326526   +   H1x2_5  =     0.95827018478011 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.95827018478011 + H1x2_5 ;
2326527   +   H1x2_6  =     1.88844492435344 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.88844492435344 + H1x2_6 ;
2326528   +   H1x2_7  =     0.77184516675485 + H1x2_7 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.77184516675485 + H1x2_7 ;
2326529   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2326530   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2326531   +   H1x2_1  = EXP(MIN(H1x2_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(H1x2_1 , _EXP_BAR));
2326532   +   H1x2_2  = EXP(MIN(H1x2_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(H1x2_2 , _EXP_BAR));
2326533   +   H1x2_3  = EXP(MIN(H1x2_3 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(MIN(H1x2_3 , _EXP_BAR));
2326534   +   H1x2_4  = EXP(MIN(H1x2_4 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(MIN(H1x2_4 , _EXP_BAR));
2326535   +   H1x2_5  = EXP(MIN(H1x2_5 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(MIN(H1x2_5 , _EXP_BAR));
2326536   +   H1x2_6  = EXP(MIN(H1x2_6 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(MIN(H1x2_6 , _EXP_BAR));
2326537   +   H1x2_7  = EXP(MIN(H1x2_7 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(MIN(H1x2_7 , _EXP_BAR));
2326538   +END;
MPRINT(EM_DIAGRAM):   END;
2326539   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2326540   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2326541   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2326542   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2326543   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2326544   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2326545   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2326546   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
2326547   +END;
MPRINT(EM_DIAGRAM):   END;
2326548   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2326549   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2326550   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2326551   +
2326552   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2326553   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2326554   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2326555   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2326556   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2326557   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2326558   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2326559   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2326560   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2326561   +end;
MPRINT(EM_DIAGRAM):   end;
2326562   +else do;
MPRINT(EM_DIAGRAM):   else do;
2326563   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2326564   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2326565   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2326566   +   end;
MPRINT(EM_DIAGRAM):   end;
2326567   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2326568   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2326569   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2326570   +   end;
MPRINT(EM_DIAGRAM):   end;
2326571   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2326572   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2326573   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2326574   +   end;
MPRINT(EM_DIAGRAM):   end;
2326575   +end;
MPRINT(EM_DIAGRAM):   end;
2326576   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2326577   +   P_DepVar1  =     0.10431866610268 * H1x1_1  +    -0.48100701431081 * H1x1_2
2326578   +          +      1.1561061025832 * H1x1_3  +    -1.23928879501664 * H1x1_4
2326579   +          +     1.22057275321508 * H1x1_5  +     0.21972347471711 * H1x1_6
2326580   +          +    -0.98998788335495 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.10431866610268 * H1x1_1 + -0.48100701431081 * H1x1_2 + 
1.1561061025832 * H1x1_3 + -1.23928879501664 * H1x1_4 + 1.22057275321508 * H1x1_5 + 
0.21972347471711 * H1x1_6 + -0.98998788335495 * H1x1_7 ;
2326581   +   P_DepVar1  = P_DepVar1  + -4.9985478923183E-10 * H1x2_1
2326582   +          +   2.7724573038604E-6 * H1x2_2  +  -3.3263781208921E-6 * H1x2_3
2326583   +          +     1.90169432265E-8 * H1x2_4  +  -9.7460294571708E-9 * H1x2_5
2326584   +          +  -2.0885179583168E-6 * H1x2_6  +    3.038660449943E-8 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -4.9985478923183E-10 * H1x2_1 + 
2.7724573038604E-6 * H1x2_2 + -3.3263781208921E-6 * H1x2_3 + 1.90169432265E-8 * H1x2_4 + 
-9.7460294571708E-9 * H1x2_5 + -2.0885179583168E-6 * H1x2_6 + 3.038660449943E-8 * H1x2_7 ;
2326585   +   P_DepVar1  =    -2.34500119066237 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.34500119066237 + P_DepVar1 ;
2326586   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2326587   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2326588   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2326589   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2326590   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2326591   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2326592   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2326593   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2326594   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2326595   +END;
MPRINT(EM_DIAGRAM):   END;
2326596   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2326597   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2326598   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2326599   +END;
MPRINT(EM_DIAGRAM):   END;
2326600   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2326601   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2326602   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2326603   +END;
MPRINT(EM_DIAGRAM):   END;
2326604   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2326605   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2326606   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2326607   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2326608   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2326609   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2326610   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2326611   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2326612   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2326613   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2326614   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2326615   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2326616   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2326617   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2326618   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2326619   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2326620   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2326621   +END;
MPRINT(EM_DIAGRAM):   END;
2326622   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2326623   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2326624   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2326625   +drop
2326626   +H1x1_1
2326627   +H1x1_2
2326628   +H1x1_3
2326629   +H1x1_4
2326630   +H1x1_5
2326631   +H1x1_6
2326632   +H1x1_7
2326633   +H1x2_1
2326634   +H1x2_2
2326635   +H1x2_3
2326636   +H1x2_4
2326637   +H1x2_5
2326638   +H1x2_6
2326639   +H1x2_7
2326640   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 H1x1_7 H1x2_1 H1x2_2 
H1x2_3 H1x2_4 H1x2_5 H1x2_6 H1x2_7 ;
2326641   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2326642   +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
2326643   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2326644   +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
2326645   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2326646   +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
2326647   +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
2326648   +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
2326649   +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
2326650   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2326651   +* Renaming Into variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural12;
2326652   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2326653   +length AutoNeural12_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural12_I_DepVar $32;
2326654   +drop AutoNeural12_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_I_DepVar;
2326655   +AutoNeural12_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural12_I_DepVar = I_DepVar;
2326656   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2326657   +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
2326658   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2326659   +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
2326660   +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
2326661   +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
2326662   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2326663   +* Ensmbl38: Voting to produce predicted target;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Voting to produce predicted target;
2326664   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2326665   +array Ensmbl38_post{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl38_post{2} _temporary_;
2326666   +array Ensmbl38_count{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl38_count{2} _temporary_;
2326667   +array Ensmbl38_level{2} $32 _temporary_ (
2326668   +"1"
2326669   +"0"
2326670   +);
MPRINT(EM_DIAGRAM):   array Ensmbl38_level{2} $32 _temporary_ ( "1" "0" );
2326671   +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
2326672   +Ensmbl38_post{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{i} = 0;
2326673   +Ensmbl38_count{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{i} = 0;
2326674   +end;
MPRINT(EM_DIAGRAM):   end;
2326675   +if AutoNeural6_I_DepVar = Ensmbl38_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural6_I_DepVar = Ensmbl38_level{1} then do;
2326676   +Ensmbl38_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{1} + 1;
2326677   +Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural6_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural6_P_DepVar1;
2326678   +end;
MPRINT(EM_DIAGRAM):   end;
2326679   +if AutoNeural7_I_DepVar = Ensmbl38_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural7_I_DepVar = Ensmbl38_level{1} then do;
2326680   +Ensmbl38_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{1} + 1;
2326681   +Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural7_P_DepVar1;
2326682   +end;
MPRINT(EM_DIAGRAM):   end;
2326683   +if AutoNeural8_I_DepVar = Ensmbl38_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural8_I_DepVar = Ensmbl38_level{1} then do;
2326684   +Ensmbl38_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{1} + 1;
2326685   +Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural8_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural8_P_DepVar1;
2326686   +end;
MPRINT(EM_DIAGRAM):   end;
2326687   +if AutoNeural10_I_DepVar = Ensmbl38_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural10_I_DepVar = Ensmbl38_level{1} then do;
2326688   +Ensmbl38_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{1} + 1;
2326689   +Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural10_P_DepVar1;
2326690   +end;
MPRINT(EM_DIAGRAM):   end;
2326691   +if AutoNeural9_I_DepVar = Ensmbl38_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural9_I_DepVar = Ensmbl38_level{1} then do;
2326692   +Ensmbl38_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{1} + 1;
2326693   +Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural9_P_DepVar1;
2326694   +end;
MPRINT(EM_DIAGRAM):   end;
2326695   +if AutoNeural11_I_DepVar = Ensmbl38_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural11_I_DepVar = Ensmbl38_level{1} then do;
2326696   +Ensmbl38_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{1} + 1;
2326697   +Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural11_P_DepVar1;
2326698   +end;
MPRINT(EM_DIAGRAM):   end;
2326699   +if AutoNeural12_I_DepVar = Ensmbl38_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural12_I_DepVar = Ensmbl38_level{1} then do;
2326700   +Ensmbl38_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{1} + 1;
2326701   +Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural12_P_DepVar1;
2326702   +end;
MPRINT(EM_DIAGRAM):   end;
2326703   +if AutoNeural6_I_DepVar = Ensmbl38_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural6_I_DepVar = Ensmbl38_level{2} then do;
2326704   +Ensmbl38_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{2} + 1;
2326705   +Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural6_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural6_P_DepVar0;
2326706   +end;
MPRINT(EM_DIAGRAM):   end;
2326707   +if AutoNeural7_I_DepVar = Ensmbl38_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural7_I_DepVar = Ensmbl38_level{2} then do;
2326708   +Ensmbl38_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{2} + 1;
2326709   +Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural7_P_DepVar0;
2326710   +end;
MPRINT(EM_DIAGRAM):   end;
2326711   +if AutoNeural8_I_DepVar = Ensmbl38_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural8_I_DepVar = Ensmbl38_level{2} then do;
2326712   +Ensmbl38_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{2} + 1;
2326713   +Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural8_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural8_P_DepVar0;
2326714   +end;
MPRINT(EM_DIAGRAM):   end;
2326715   +if AutoNeural10_I_DepVar = Ensmbl38_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural10_I_DepVar = Ensmbl38_level{2} then do;
2326716   +Ensmbl38_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{2} + 1;
2326717   +Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural10_P_DepVar0;
2326718   +end;
MPRINT(EM_DIAGRAM):   end;
2326719   +if AutoNeural9_I_DepVar = Ensmbl38_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural9_I_DepVar = Ensmbl38_level{2} then do;
2326720   +Ensmbl38_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{2} + 1;
2326721   +Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural9_P_DepVar0;
2326722   +end;
MPRINT(EM_DIAGRAM):   end;
2326723   +if AutoNeural11_I_DepVar = Ensmbl38_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural11_I_DepVar = Ensmbl38_level{2} then do;
2326724   +Ensmbl38_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{2} + 1;
2326725   +Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural11_P_DepVar0;
2326726   +end;
MPRINT(EM_DIAGRAM):   end;
2326727   +if AutoNeural12_I_DepVar = Ensmbl38_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural12_I_DepVar = Ensmbl38_level{2} then do;
2326728   +Ensmbl38_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{2} + 1;
2326729   +Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural12_P_DepVar0;
2326730   +end;
MPRINT(EM_DIAGRAM):   end;
2326731   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2326732   +* Ensmbl38: Determine Into Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Determine Into Variable;
2326733   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2326734   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
2326735   +drop i vote_count vote_post;
MPRINT(EM_DIAGRAM):   drop i vote_count vote_post;
2326736   +vote_count = max(
2326737   +Ensmbl38_count{1} ,
2326738   +Ensmbl38_count{2}
2326739   +);
MPRINT(EM_DIAGRAM):   vote_count = max( Ensmbl38_count{1} , Ensmbl38_count{2} );
2326740   +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
2326741   +if Ensmbl38_count{i}=vote_count and Ensmbl38_post{i}>vote_post then do;
MPRINT(EM_DIAGRAM):   if Ensmbl38_count{i}=vote_count and Ensmbl38_post{i}>vote_post then do;
2326742   +I_DepVar = Ensmbl38_level{i};
MPRINT(EM_DIAGRAM):   I_DepVar = Ensmbl38_level{i};
2326743   +vote_post = Ensmbl38_count{i};
MPRINT(EM_DIAGRAM):   vote_post = Ensmbl38_count{i};
2326744   +end;
MPRINT(EM_DIAGRAM):   end;
2326745   +end;
MPRINT(EM_DIAGRAM):   end;
2326746   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2326747   +* Ensmbl38: Compute posterior vars using models predicting the chosen level;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Compute posterior vars using models predicting the chosen 
level;
2326748   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2326749   +P_DepVar1 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
2326750   +P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2326751   +if I_DepVar = AutoNeural6_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural6_I_DepVar then do;
2326752   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural6_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural6_P_DepVar1;
2326753   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural6_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural6_P_DepVar0;
2326754   +end;
MPRINT(EM_DIAGRAM):   end;
2326755   +if I_DepVar = AutoNeural7_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural7_I_DepVar then do;
2326756   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural7_P_DepVar1;
2326757   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural7_P_DepVar0;
2326758   +end;
MPRINT(EM_DIAGRAM):   end;
2326759   +if I_DepVar = AutoNeural8_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural8_I_DepVar then do;
2326760   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural8_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural8_P_DepVar1;
2326761   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural8_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural8_P_DepVar0;
2326762   +end;
MPRINT(EM_DIAGRAM):   end;
2326763   +if I_DepVar = AutoNeural10_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural10_I_DepVar then do;
2326764   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural10_P_DepVar1;
2326765   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural10_P_DepVar0;
2326766   +end;
MPRINT(EM_DIAGRAM):   end;
2326767   +if I_DepVar = AutoNeural9_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural9_I_DepVar then do;
2326768   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural9_P_DepVar1;
2326769   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural9_P_DepVar0;
2326770   +end;
MPRINT(EM_DIAGRAM):   end;
2326771   +if I_DepVar = AutoNeural11_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural11_I_DepVar then do;
2326772   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural11_P_DepVar1;
2326773   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural11_P_DepVar0;
2326774   +end;
MPRINT(EM_DIAGRAM):   end;
2326775   +if I_DepVar = AutoNeural12_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural12_I_DepVar then do;
2326776   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural12_P_DepVar1;
2326777   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural12_P_DepVar0;
2326778   +end;
MPRINT(EM_DIAGRAM):   end;
2326779   +* Ensmbl38: Averaging posterior;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Averaging posterior;
2326780   +P_DepVar1 = P_DepVar1/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1/vote_count;
2326781   +P_DepVar0 = P_DepVar0/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0/vote_count;
2326782   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2326783   +* Ensmbl38: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Producing Unformatted variable;
2326784   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2326785   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
2326786   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
2326787   +else
2326788   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
2326789   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2326790   +* Ensmbl38: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Computing _WARN_ Variable;
2326791   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2326792   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2326793   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
2326794   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
2326795   +if index(AUTONEURAL6_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2326795  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2326796   +if index(AUTONEURAL6_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2326796  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2326797   +if index(AUTONEURAL6_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2326797  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2326798   +if index(AUTONEURAL6_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2326798  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2326799   +if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2326799  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2326800   +if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2326800  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2326801   +if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2326801  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2326802   +if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2326802  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2326803   +if index(AUTONEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2326803  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2326804   +if index(AUTONEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2326804  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2326805   +if index(AUTONEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2326805  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2326806   +if index(AUTONEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2326806  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2326807   +if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2326807  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2326808   +if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2326808  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2326809   +if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2326809  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2326810   +if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2326810  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2326811   +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2326811  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2326812   +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2326812  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2326813   +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2326813  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2326814   +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2326814  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2326815   +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2326815  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2326816   +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2326816  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2326817   +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2326817  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2326818   +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2326818  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2326819   +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2326819  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2326820   +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2326820  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2326821   +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2326821  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2326822   +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2326822  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2326823   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2326824   +* Ensmbl38: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Computing Residual Vars;
2326825   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2326826   +if
2326827   +F_DepVar NE '1'
2326828   +AND F_DepVar NE '0'
2326829   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
2326830   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2326831   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2326832   +end;
MPRINT(EM_DIAGRAM):   end;
2326833   +else do;
MPRINT(EM_DIAGRAM):   else do;
2326834   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
2326835   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
2326836   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
2326837   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
2326838   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
2326839   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
2326840   +END;
MPRINT(EM_DIAGRAM):   END;
2326841   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2326842    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL38_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL6_TRAIN.VIEW used (Total process time):
      real time           0.22 seconds
      cpu time            0.21 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.23 seconds
      cpu time            0.23 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2326843    quit;
2326844    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
2326845    filename emflow
2326845  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl38\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl38\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Scoring AUTONEURAL6_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2326846    *------------------------------------------------------------*;
2326847    * Ensmbl38: Scoring AUTONEURAL6_VALIDATE data;
2326848    *------------------------------------------------------------*;
2326849    data EMWS8.Ensmbl38_VALIDATE
2326850    / view=EMWS8.Ensmbl38_VALIDATE
2326851    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl38_VALIDATE / view=EMWS8.Ensmbl38_VALIDATE ;
2326852    set EMWS8.AutoNeural6_VALIDATE
2326853    ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural6_VALIDATE ;
2326854    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl38\EMFLOWSCORE.sas.
2326855   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2326856   +* Ensmbl38: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Combine model for DepVar;
2326857   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2326858   +* Ensmbl38: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Scoring Code of model 1 of 7;
2326859   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2326860   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2326861   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
2326862   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2326863   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
2326864   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2326865   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2326866   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
2326867   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
2326868   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
2326869   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2326870   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2326871   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
2326872   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2326873   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
2326874   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2326875   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2326876   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
2326877   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2326878   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
2326879   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2326880   +
2326881   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2326882   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2326882  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2326883   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2326884   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2326885   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2326886   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2326887   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
2326888   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2326889   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
2326890   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2326891   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
2326892   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2326893   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2326894   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2326895   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2326896   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2326897   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2326898   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
2326899   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2326900   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
2326901   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2326902   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
2326903   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2326904   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2326905   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
2326906   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2326907   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
2326908   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2326909   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2326910   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2326911   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2326912   +* NODE: AutoNeural6;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural6;
2326913   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2326914   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2326915   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2326916   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2326917   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2326918   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2326919   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2326920   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2326921   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2326922   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2326923   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2326924   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2326925   +LENGTH _WARN_ $4
2326926   +      F_DepVar  $ 12
2326927   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2326928   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2326929   +
2326930   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2326931   +
2326932   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2326933   +
2326934   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2326935   +
2326936   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2326937   +
2326938   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2326939   +
2326940   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2326941   +
2326942   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2326943   +
2326944   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2326945   +
2326946   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2326947   +
2326948   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2326949   +
2326950   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2326951   +
2326952   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2326953   +
2326954   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2326955   +
2326956   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2326957   +
2326958   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2326959   +
2326960   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2326961   +
2326962   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2326963   +
2326964   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2326965   +
2326966   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2326967   +
2326968   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2326969   +
2326970   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2326971   +
2326972   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2326973   +
2326974   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2326975   +
2326976   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2326977   +
2326978   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2326979   +
2326980   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2326981   +
2326982   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2326983   +
2326984   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2326985   +
2326986   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2326987   +
2326988   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2326989   +
2326990   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2326991   +
2326992   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2326993   +
2326994   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2326995   +
2326996   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2326997   +
2326998   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2326999   +
2327000   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2327001   +
2327002   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2327003   +
2327004   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2327005   +
2327006   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2327007   +
2327008   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2327009   +
2327010   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2327011   +
2327012   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2327013   +
2327014   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2327015   +
2327016   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2327017   +
2327018   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2327019   +
2327020   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2327021   +
2327022   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2327023   +
2327024   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2327025   +
2327026   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2327027   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2327028   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2327029   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2327030   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2327031   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2327032   +end;
MPRINT(EM_DIAGRAM):   end;
2327033   +else do;
MPRINT(EM_DIAGRAM):   else do;
2327034   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2327035   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2327036   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2327037   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2327038   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2327039   +   end;
MPRINT(EM_DIAGRAM):   end;
2327040   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2327041   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2327042   +   end;
MPRINT(EM_DIAGRAM):   end;
2327043   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2327044   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2327045   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2327046   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2327047   +   end;
MPRINT(EM_DIAGRAM):   end;
2327048   +end;
MPRINT(EM_DIAGRAM):   end;
2327049   +
2327050   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2327051   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2327052   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2327053   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2327054   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2327055   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2327056   +end;
MPRINT(EM_DIAGRAM):   end;
2327057   +else do;
MPRINT(EM_DIAGRAM):   else do;
2327058   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2327059   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2327060   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2327061   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2327062   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2327063   +   end;
MPRINT(EM_DIAGRAM):   end;
2327064   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2327065   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2327066   +   end;
MPRINT(EM_DIAGRAM):   end;
2327067   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2327068   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2327069   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2327070   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2327071   +   end;
MPRINT(EM_DIAGRAM):   end;
2327072   +end;
MPRINT(EM_DIAGRAM):   end;
2327073   +
2327074   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2327075   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2327076   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2327077   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2327078   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2327079   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2327080   +end;
MPRINT(EM_DIAGRAM):   end;
2327081   +else do;
MPRINT(EM_DIAGRAM):   else do;
2327082   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2327083   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2327084   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2327085   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2327086   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2327087   +   end;
MPRINT(EM_DIAGRAM):   end;
2327088   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2327089   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2327090   +   end;
MPRINT(EM_DIAGRAM):   end;
2327091   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2327092   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2327093   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2327094   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2327095   +   end;
MPRINT(EM_DIAGRAM):   end;
2327096   +end;
MPRINT(EM_DIAGRAM):   end;
2327097   +
2327098   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2327099   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2327100   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2327101   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2327102   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2327103   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2327104   +end;
MPRINT(EM_DIAGRAM):   end;
2327105   +else do;
MPRINT(EM_DIAGRAM):   else do;
2327106   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2327107   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2327108   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2327109   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2327110   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2327111   +   end;
MPRINT(EM_DIAGRAM):   end;
2327112   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2327113   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2327114   +   end;
MPRINT(EM_DIAGRAM):   end;
2327115   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2327116   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2327117   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2327118   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2327119   +   end;
MPRINT(EM_DIAGRAM):   end;
2327120   +end;
MPRINT(EM_DIAGRAM):   end;
2327121   +
2327122   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2327123   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2327124   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2327125   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2327126   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2327127   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2327128   +end;
MPRINT(EM_DIAGRAM):   end;
2327129   +else do;
MPRINT(EM_DIAGRAM):   else do;
2327130   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2327131   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2327132   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2327133   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2327134   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2327135   +   end;
MPRINT(EM_DIAGRAM):   end;
2327136   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2327137   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2327138   +   end;
MPRINT(EM_DIAGRAM):   end;
2327139   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2327140   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2327141   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2327142   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2327143   +   end;
MPRINT(EM_DIAGRAM):   end;
2327144   +end;
MPRINT(EM_DIAGRAM):   end;
2327145   +
2327146   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2327147   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2327148   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2327149   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2327150   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2327151   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2327152   +end;
MPRINT(EM_DIAGRAM):   end;
2327153   +else do;
MPRINT(EM_DIAGRAM):   else do;
2327154   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2327155   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2327156   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2327157   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2327158   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2327159   +   end;
MPRINT(EM_DIAGRAM):   end;
2327160   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2327161   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2327162   +   end;
MPRINT(EM_DIAGRAM):   end;
2327163   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2327164   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2327165   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2327166   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2327167   +   end;
MPRINT(EM_DIAGRAM):   end;
2327168   +end;
MPRINT(EM_DIAGRAM):   end;
2327169   +
2327170   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2327171   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2327172   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2327173   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2327174   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2327175   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2327176   +end;
MPRINT(EM_DIAGRAM):   end;
2327177   +else do;
MPRINT(EM_DIAGRAM):   else do;
2327178   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2327179   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2327180   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2327181   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2327182   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2327183   +   end;
MPRINT(EM_DIAGRAM):   end;
2327184   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2327185   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2327186   +   end;
MPRINT(EM_DIAGRAM):   end;
2327187   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2327188   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2327189   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2327190   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2327191   +   end;
MPRINT(EM_DIAGRAM):   end;
2327192   +end;
MPRINT(EM_DIAGRAM):   end;
2327193   +
2327194   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2327195   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2327196   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2327197   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2327198   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2327199   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2327200   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2327201   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2327202   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2327203   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2327204   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2327205   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2327206   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2327207   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2327208   +end;
MPRINT(EM_DIAGRAM):   end;
2327209   +else do;
MPRINT(EM_DIAGRAM):   else do;
2327210   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2327211   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2327212   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2327213   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2327214   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2327215   +   end;
MPRINT(EM_DIAGRAM):   end;
2327216   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2327217   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2327218   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2327219   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2327220   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2327221   +   end;
MPRINT(EM_DIAGRAM):   end;
2327222   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2327223   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2327224   +   end;
MPRINT(EM_DIAGRAM):   end;
2327225   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2327226   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2327227   +   end;
MPRINT(EM_DIAGRAM):   end;
2327228   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2327229   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2327230   +   end;
MPRINT(EM_DIAGRAM):   end;
2327231   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2327232   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2327233   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2327234   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2327235   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2327236   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2327237   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2327238   +   end;
MPRINT(EM_DIAGRAM):   end;
2327239   +end;
MPRINT(EM_DIAGRAM):   end;
2327240   +
2327241   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2327242   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2327243   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2327244   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2327245   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2327246   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2327247   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2327248   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2327249   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2327250   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2327251   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2327252   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2327253   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2327254   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2327255   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2327256   +end;
MPRINT(EM_DIAGRAM):   end;
2327257   +else do;
MPRINT(EM_DIAGRAM):   else do;
2327258   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2327259   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2327260   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2327261   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2327262   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2327263   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2327264   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2327265   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2327266   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2327267   +         end;
MPRINT(EM_DIAGRAM):   end;
2327268   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2327269   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2327270   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2327271   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2327272   +            end;
MPRINT(EM_DIAGRAM):   end;
2327273   +         end;
MPRINT(EM_DIAGRAM):   end;
2327274   +      end;
MPRINT(EM_DIAGRAM):   end;
2327275   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2327276   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2327277   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2327278   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2327279   +         end;
MPRINT(EM_DIAGRAM):   end;
2327280   +      end;
MPRINT(EM_DIAGRAM):   end;
2327281   +   end;
MPRINT(EM_DIAGRAM):   end;
2327282   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2327283   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2327284   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2327285   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2327286   +      end;
MPRINT(EM_DIAGRAM):   end;
2327287   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2327288   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2327289   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2327290   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2327291   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2327292   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2327293   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2327294   +         end;
MPRINT(EM_DIAGRAM):   end;
2327295   +      end;
MPRINT(EM_DIAGRAM):   end;
2327296   +   end;
MPRINT(EM_DIAGRAM):   end;
2327297   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2327298   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2327299   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2327300   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2327301   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2327302   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2327303   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2327304   +   end;
MPRINT(EM_DIAGRAM):   end;
2327305   +end;
MPRINT(EM_DIAGRAM):   end;
2327306   +
2327307   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2327308   +*** Checking missing input Interval
2327309   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2327310   +
2327311   +IF NMISS(
2327312   +   AcceptedCmpTotal ,
2327313   +   Age ,
2327314   +   Frq ,
2327315   +   Income ,
2327316   +   Kidhome ,
2327317   +   Mnt ,
2327318   +   MntFishProducts ,
2327319   +   MntFruits ,
2327320   +   MntGoldProds ,
2327321   +   MntMeatProducts ,
2327322   +   MntSweetProducts ,
2327323   +   MntWines ,
2327324   +   MonthsAsCustomer ,
2327325   +   NumCatalogPurchases ,
2327326   +   NumDealsPurchases ,
2327327   +   NumDistPurchases ,
2327328   +   NumStorePurchases ,
2327329   +   NumWebPurchases ,
2327330   +   NumWebVisitsMonth ,
2327331   +   RFMstat ,
2327332   +   RMntFrq ,
2327333   +   Recency ,
2327334   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2327335   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2327336   +
2327337   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2327338   +END;
MPRINT(EM_DIAGRAM):   END;
2327339   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2327340   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2327341   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2327342   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2327343   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2327344   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2327345   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2327346   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2327347   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2327348   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2327349   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2327350   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2327351   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2327352   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2327353   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2327354   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2327355   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2327356   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2327357   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2327358   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2327359   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2327360   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2327361   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2327362   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2327363   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2327364   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2327365   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2327366   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2327367   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2327368   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2327369   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2327370   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2327371   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2327372   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2327373   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2327374   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2327375   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2327376   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2327377   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2327378   +END;
MPRINT(EM_DIAGRAM):   END;
2327379   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2327380   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2327381   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2327382   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2327383   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2327384   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2327385   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2327386   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2327387   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2327388   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2327389   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2327390   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2327391   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2327392   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2327393   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2327394   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2327395   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2327396   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2327397   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2327398   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2327399   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2327400   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2327401   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2327402   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2327403   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2327404   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2327405   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2327406   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2327407   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2327408   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2327409   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2327410   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2327411   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2327412   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2327413   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2327414   +   ELSE S_NumCatalogPurchases
2327415   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2327416   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2327417   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2327418   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2327419   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2327420   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2327421   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2327422   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2327423   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2327424   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2327425   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2327426   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2327427   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2327428   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2327429   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2327430   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2327431   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2327432   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2327433   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2327434   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2327435   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2327436   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2327437   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2327438   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2327439   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2327440   +END;
MPRINT(EM_DIAGRAM):   END;
2327441   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2327442   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2327443   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2327444   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2327445   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2327446   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2327447   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2327448   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2327449   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2327450   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2327451   +   H1x1_1  =    -0.00800383076247 * S_AcceptedCmpTotal
2327452   +          +     0.02761302021586 * S_Age  +     0.10595191274027 * S_Frq
2327453   +          +    -0.15720275096991 * S_Income  +     0.14522420813528 *
2327454   +        S_Kidhome  +    -0.14485367197729 * S_Mnt  +     0.10029542464177 *
2327455   +        S_MntFishProducts  +      0.0126489883955 * S_MntFruits
2327456   +          +    -0.01721251339827 * S_MntGoldProds  +    -0.69008250574088 *
2327457   +        S_MntMeatProducts  +     0.01018204164797 * S_MntSweetProducts
2327458   +          +     0.22039448854688 * S_MntWines  +     0.01531819489128 *
2327459   +        S_MonthsAsCustomer  +    -0.23161250514854 * S_NumCatalogPurchases
2327460   +          +    -0.20127545393212 * S_NumDealsPurchases
2327461   +          +     0.04506333103933 * S_NumDistPurchases
2327462   +          +     0.35249458492371 * S_NumStorePurchases
2327463   +          +     0.25004284340707 * S_NumWebPurchases
2327464   +          +    -0.53727251220752 * S_NumWebVisitsMonth
2327465   +          +    -0.05439428653958 * S_RFMstat  +     0.36751560031492 *
2327466   +        S_RMntFrq  +      0.5373510847225 * S_Recency
2327467   +          +     0.08757258535387 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.00800383076247 * S_AcceptedCmpTotal + 0.02761302021586 * 
S_Age + 0.10595191274027 * S_Frq + -0.15720275096991 * S_Income + 0.14522420813528 * S_Kidhome 
+ -0.14485367197729 * S_Mnt + 0.10029542464177 * S_MntFishProducts + 0.0126489883955 * 
S_MntFruits + -0.01721251339827 * S_MntGoldProds + -0.69008250574088 * S_MntMeatProducts + 
0.01018204164797 * S_MntSweetProducts + 0.22039448854688 * S_MntWines + 0.01531819489128 * 
S_MonthsAsCustomer + -0.23161250514854 * S_NumCatalogPurchases + -0.20127545393212 * 
S_NumDealsPurchases + 0.04506333103933 * S_NumDistPurchases + 0.35249458492371 * 
S_NumStorePurchases + 0.25004284340707 * S_NumWebPurchases + -0.53727251220752 * 
S_NumWebVisitsMonth + -0.05439428653958 * S_RFMstat + 0.36751560031492 * S_RMntFrq + 
0.5373510847225 * S_Recency + 0.08757258535387 * S_Teenhome ;
2327468   +   H1x1_1  = H1x1_1  +     0.21204360154837 * AcceptedCmp10
2327469   +          +     0.20766091429217 * AcceptedCmp20  +     0.20201307074488 *
2327470   +        AcceptedCmp30  +     0.26898383850722 * AcceptedCmp40
2327471   +          +     0.55154220854739 * AcceptedCmp50  +     0.13147328871299 *
2327472   +        Complain0  +    -0.02797177954188 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.21204360154837 * AcceptedCmp10 + 0.20766091429217 * 
AcceptedCmp20 + 0.20201307074488 * AcceptedCmp30 + 0.26898383850722 * AcceptedCmp40 + 
0.55154220854739 * AcceptedCmp50 + 0.13147328871299 * Complain0 + -0.02797177954188 * 
HigherEducationBinary0 ;
2327473   +   H1x1_1  = H1x1_1  +    -0.00959805163736 * Education2n_Cycle
2327474   +          +     0.37192717803938 * EducationBasic  +    -0.10342362068485 *
2327475   +        EducationGraduation  +    -0.13377682721092 * EducationMaster
2327476   +          +    -0.19452359839974 * Marital_StatusDivorced
2327477   +          +     0.32327870805716 * Marital_StatusMarried
2327478   +          +    -0.20770545592268 * Marital_StatusSingle
2327479   +          +     0.35618773017298 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00959805163736 * Education2n_Cycle + 
0.37192717803938 * EducationBasic + -0.10342362068485 * EducationGraduation + 
-0.13377682721092 * EducationMaster + -0.19452359839974 * Marital_StatusDivorced + 
0.32327870805716 * Marital_StatusMarried + -0.20770545592268 * Marital_StatusSingle + 
0.35618773017298 * Marital_StatusTogether ;
2327480   +   H1x1_1  =     0.87012150629431 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.87012150629431 + H1x1_1 ;
2327481   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2327482   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2327483   +   H1x1_1  = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
2327484   +END;
MPRINT(EM_DIAGRAM):   END;
2327485   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2327486   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2327487   +END;
MPRINT(EM_DIAGRAM):   END;
2327488   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2327489   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2327490   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2327491   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2327492   +   H1x2_1  =     0.92357456692651 * S_AcceptedCmpTotal
2327493   +          +    -0.00516549264504 * S_Age  +    -1.03043789382359 * S_Frq
2327494   +          +     0.78555631441048 * S_Income  +    -1.36329797235747 *
2327495   +        S_Kidhome  +    -0.77229288487872 * S_Mnt  +     1.27281095482218 *
2327496   +        S_MntFishProducts  +     0.04568599055132 * S_MntFruits
2327497   +          +    -0.13434867195633 * S_MntGoldProds  +    -1.95682488683295 *
2327498   +        S_MntMeatProducts  +     -0.0253141337078 * S_MntSweetProducts
2327499   +          +     0.67857436596482 * S_MntWines  +    -0.07247572940845 *
2327500   +        S_MonthsAsCustomer  +    -1.02814758425435 * S_NumCatalogPurchases
2327501   +          +    -0.02120959778153 * S_NumDealsPurchases
2327502   +          +     1.49013956394863 * S_NumDistPurchases
2327503   +          +    -0.96806240220463 * S_NumStorePurchases
2327504   +          +    -1.68330472453558 * S_NumWebPurchases
2327505   +          +     3.42976128164256 * S_NumWebVisitsMonth
2327506   +          +    -0.38912520446503 * S_RFMstat  +    -2.57487899031042 *
2327507   +        S_RMntFrq  +    -3.14923215912621 * S_Recency
2327508   +          +    -0.67635091810974 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.92357456692651 * S_AcceptedCmpTotal + -0.00516549264504 * 
S_Age + -1.03043789382359 * S_Frq + 0.78555631441048 * S_Income + -1.36329797235747 * 
S_Kidhome + -0.77229288487872 * S_Mnt + 1.27281095482218 * S_MntFishProducts + 
0.04568599055132 * S_MntFruits + -0.13434867195633 * S_MntGoldProds + -1.95682488683295 * 
S_MntMeatProducts + -0.0253141337078 * S_MntSweetProducts + 0.67857436596482 * S_MntWines + 
-0.07247572940845 * S_MonthsAsCustomer + -1.02814758425435 * S_NumCatalogPurchases + 
-0.02120959778153 * S_NumDealsPurchases + 1.49013956394863 * S_NumDistPurchases + 
-0.96806240220463 * S_NumStorePurchases + -1.68330472453558 * S_NumWebPurchases + 
3.42976128164256 * S_NumWebVisitsMonth + -0.38912520446503 * S_RFMstat + -2.57487899031042 * 
S_RMntFrq + -3.14923215912621 * S_Recency + -0.67635091810974 * S_Teenhome ;
2327509   +   H1x2_1  = H1x2_1  +    -0.18835638765595 * AcceptedCmp10
2327510   +          +     1.28752081945681 * AcceptedCmp20  +     -0.5515893923669 *
2327511   +        AcceptedCmp30  +    -0.82440763600043 * AcceptedCmp40
2327512   +          +     1.94503109075872 * AcceptedCmp50  +    -0.75977722298402 *
2327513   +        Complain0  +    -1.11349075129464 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.18835638765595 * AcceptedCmp10 + 1.28752081945681 * 
AcceptedCmp20 + -0.5515893923669 * AcceptedCmp30 + -0.82440763600043 * AcceptedCmp40 + 
1.94503109075872 * AcceptedCmp50 + -0.75977722298402 * Complain0 + -1.11349075129464 * 
HigherEducationBinary0 ;
2327514   +   H1x2_1  = H1x2_1  +     1.79843117215153 * Education2n_Cycle
2327515   +          +    -1.50428649925314 * EducationBasic  +    -0.32238897768725 *
2327516   +        EducationGraduation  +    -0.16909007224958 * EducationMaster
2327517   +          +      1.9815992681602 * Marital_StatusDivorced
2327518   +          +    -3.07893181570848 * Marital_StatusMarried
2327519   +          +     1.72965298244219 * Marital_StatusSingle
2327520   +          +    -3.17208781997524 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.79843117215153 * Education2n_Cycle + 
-1.50428649925314 * EducationBasic + -0.32238897768725 * EducationGraduation + 
-0.16909007224958 * EducationMaster + 1.9815992681602 * Marital_StatusDivorced + 
-3.07893181570848 * Marital_StatusMarried + 1.72965298244219 * Marital_StatusSingle + 
-3.17208781997524 * Marital_StatusTogether ;
2327521   +   H1x2_1  =     0.54729406730223 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.54729406730223 + H1x2_1 ;
2327522   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2327523   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2327524   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2327525   +   IF H1x2_1  < _REC_EPS AND H1x2_1  > - _REC_EPS THEN
2327526   +   H1x2_1  = H1x2_1  * H1x2_1 ;
MPRINT(EM_DIAGRAM):   IF H1x2_1 < _REC_EPS AND H1x2_1 > - _REC_EPS THEN H1x2_1 = H1x2_1 * 
H1x2_1 ;
2327527   +   ELSE H1x2_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x2_1 = _REC_EPS ;
2327528   +END;
MPRINT(EM_DIAGRAM):   END;
2327529   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2327530   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2327531   +END;
MPRINT(EM_DIAGRAM):   END;
2327532   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2327533   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2327534   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2327535   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2327536   +   H1x3_1  =     0.90092602642364 * S_AcceptedCmpTotal
2327537   +          +    -0.16291307307626 * S_Age  +    -0.40132431666712 * S_Frq
2327538   +          +    -0.77251140598484 * S_Income  +     0.02215214313934 *
2327539   +        S_Kidhome  +     0.13123074182657 * S_Mnt  +    -0.43664076061176 *
2327540   +        S_MntFishProducts  +    -1.64192761266072 * S_MntFruits
2327541   +          +    -1.54189230184745 * S_MntGoldProds  +     -0.4138869968665 *
2327542   +        S_MntMeatProducts  +      0.5773885392047 * S_MntSweetProducts
2327543   +          +     1.45077769194851 * S_MntWines  +      0.5855746168529 *
2327544   +        S_MonthsAsCustomer  +     0.10198319985004 * S_NumCatalogPurchases
2327545   +          +     -0.5334151509863 * S_NumDealsPurchases
2327546   +          +     0.40600458912114 * S_NumDistPurchases
2327547   +          +    -0.30674653528261 * S_NumStorePurchases
2327548   +          +     0.10785037433743 * S_NumWebPurchases
2327549   +          +     0.99701680073452 * S_NumWebVisitsMonth
2327550   +          +    -0.25371895811899 * S_RFMstat  +     2.19406614746442 *
2327551   +        S_RMntFrq  +      1.0786726340694 * S_Recency
2327552   +          +     0.64406049150007 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.90092602642364 * S_AcceptedCmpTotal + -0.16291307307626 * 
S_Age + -0.40132431666712 * S_Frq + -0.77251140598484 * S_Income + 0.02215214313934 * 
S_Kidhome + 0.13123074182657 * S_Mnt + -0.43664076061176 * S_MntFishProducts + 
-1.64192761266072 * S_MntFruits + -1.54189230184745 * S_MntGoldProds + -0.4138869968665 * 
S_MntMeatProducts + 0.5773885392047 * S_MntSweetProducts + 1.45077769194851 * S_MntWines + 
0.5855746168529 * S_MonthsAsCustomer + 0.10198319985004 * S_NumCatalogPurchases + 
-0.5334151509863 * S_NumDealsPurchases + 0.40600458912114 * S_NumDistPurchases + 
-0.30674653528261 * S_NumStorePurchases + 0.10785037433743 * S_NumWebPurchases + 
0.99701680073452 * S_NumWebVisitsMonth + -0.25371895811899 * S_RFMstat + 2.19406614746442 * 
S_RMntFrq + 1.0786726340694 * S_Recency + 0.64406049150007 * S_Teenhome ;
2327553   +   H1x3_1  = H1x3_1  +    -0.58424742605644 * AcceptedCmp10
2327554   +          +     -0.7436165858459 * AcceptedCmp20  +    -0.33959137246457 *
2327555   +        AcceptedCmp30  +     0.42726020731333 * AcceptedCmp40
2327556   +          +     2.23707409189181 * AcceptedCmp50  +     0.98135772482722 *
2327557   +        Complain0  +    -0.85818399669867 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.58424742605644 * AcceptedCmp10 + -0.7436165858459 * 
AcceptedCmp20 + -0.33959137246457 * AcceptedCmp30 + 0.42726020731333 * AcceptedCmp40 + 
2.23707409189181 * AcceptedCmp50 + 0.98135772482722 * Complain0 + -0.85818399669867 * 
HigherEducationBinary0 ;
2327558   +   H1x3_1  = H1x3_1  +    -0.89540752048995 * Education2n_Cycle
2327559   +          +     1.29513448243349 * EducationBasic  +    -1.47068621785539 *
2327560   +        EducationGraduation  +    -1.63362973413899 * EducationMaster
2327561   +          +    -0.72494401881341 * Marital_StatusDivorced
2327562   +          +    -0.82332231639631 * Marital_StatusMarried
2327563   +          +     -0.8863559011195 * Marital_StatusSingle
2327564   +          +     0.97129982315045 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.89540752048995 * Education2n_Cycle + 
1.29513448243349 * EducationBasic + -1.47068621785539 * EducationGraduation + 
-1.63362973413899 * EducationMaster + -0.72494401881341 * Marital_StatusDivorced + 
-0.82332231639631 * Marital_StatusMarried + -0.8863559011195 * Marital_StatusSingle + 
0.97129982315045 * Marital_StatusTogether ;
2327565   +   H1x3_1  =     0.55234573720932 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.55234573720932 + H1x3_1 ;
2327566   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2327567   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2327568   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2327569   +   IF H1x3_1  < _REC_EPS AND H1x3_1  > - _REC_EPS THEN
2327570   +   H1x3_1  = H1x3_1  * H1x3_1 ;
MPRINT(EM_DIAGRAM):   IF H1x3_1 < _REC_EPS AND H1x3_1 > - _REC_EPS THEN H1x3_1 = H1x3_1 * 
H1x3_1 ;
2327571   +   ELSE H1x3_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_1 = _REC_EPS ;
2327572   +END;
MPRINT(EM_DIAGRAM):   END;
2327573   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2327574   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2327575   +END;
MPRINT(EM_DIAGRAM):   END;
2327576   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2327577   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2327578   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2327579   +
2327580   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2327581   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2327582   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2327583   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2327584   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2327585   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2327586   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2327587   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2327588   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2327589   +end;
MPRINT(EM_DIAGRAM):   end;
2327590   +else do;
MPRINT(EM_DIAGRAM):   else do;
2327591   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2327592   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2327593   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2327594   +   end;
MPRINT(EM_DIAGRAM):   end;
2327595   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2327596   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2327597   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2327598   +   end;
MPRINT(EM_DIAGRAM):   end;
2327599   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2327600   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2327601   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2327602   +   end;
MPRINT(EM_DIAGRAM):   end;
2327603   +end;
MPRINT(EM_DIAGRAM):   end;
2327604   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2327605   +   P_DepVar1  =     35.4482526843154 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 35.4482526843154 * H1x1_1 ;
2327606   +   P_DepVar1  = P_DepVar1  +    -0.08810161142704 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.08810161142704 * H1x2_1 ;
2327607   +   P_DepVar1  = P_DepVar1  +     0.02248060710303 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + 0.02248060710303 * H1x3_1 ;
2327608   +   P_DepVar1  =    -6.23004657634651 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.23004657634651 + P_DepVar1 ;
2327609   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2327610   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2327611   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2327612   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2327613   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2327614   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2327615   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2327616   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2327617   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2327618   +END;
MPRINT(EM_DIAGRAM):   END;
2327619   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2327620   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2327621   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2327622   +END;
MPRINT(EM_DIAGRAM):   END;
2327623   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2327624   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2327625   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2327626   +END;
MPRINT(EM_DIAGRAM):   END;
2327627   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2327628   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2327629   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2327630   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2327631   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2327632   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2327633   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2327634   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2327635   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2327636   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2327637   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2327638   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2327639   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2327640   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2327641   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2327642   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2327643   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2327644   +END;
MPRINT(EM_DIAGRAM):   END;
2327645   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2327646   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2327647   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2327648   +drop
2327649   +H1x1_1
2327650   +H1x2_1
2327651   +H1x3_1
2327652   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x2_1 H1x3_1 ;
2327653   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2327654   +* Renaming variables for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural6;
2327655   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2327656   +* Renaming Posterior variables for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural6;
2327657   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2327658   +drop AutoNeural6_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_P_DepVar1;
2327659   +AutoNeural6_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural6_P_DepVar1 = P_DepVar1;
2327660   +drop AutoNeural6_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_P_DepVar0;
2327661   +AutoNeural6_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural6_P_DepVar0 = P_DepVar0;
2327662   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2327663   +* Renaming Into variables for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural6;
2327664   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2327665   +length AutoNeural6_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural6_I_DepVar $32;
2327666   +drop AutoNeural6_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_I_DepVar;
2327667   +AutoNeural6_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural6_I_DepVar = I_DepVar;
2327668   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2327669   +* Renaming _WARN_ variable for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural6;
2327670   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2327671   +length AutoNeural6_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural6_WARN_ $4;
2327672   +drop AutoNeural6_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_WARN_;
2327673   +AutoNeural6_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural6_WARN_ = _WARN_;
2327674   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2327675   +* Ensmbl38: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Scoring Code of model 2 of 7;
2327676   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2327677   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2327678   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2327679   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2327680   +* NODE: AutoNeural7;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural7;
2327681   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2327682   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2327683   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2327684   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2327685   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2327686   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2327687   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2327688   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2327689   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2327690   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2327691   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2327692   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2327693   +LENGTH _WARN_ $4
2327694   +      F_DepVar  $ 12
2327695   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2327696   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2327697   +
2327698   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2327699   +
2327700   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2327701   +
2327702   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2327703   +
2327704   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2327705   +
2327706   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2327707   +
2327708   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2327709   +
2327710   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2327711   +
2327712   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2327713   +
2327714   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2327715   +
2327716   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2327717   +
2327718   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2327719   +
2327720   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2327721   +
2327722   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2327723   +
2327724   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2327725   +
2327726   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2327727   +
2327728   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2327729   +
2327730   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2327731   +
2327732   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2327733   +
2327734   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2327735   +
2327736   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2327737   +
2327738   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2327739   +
2327740   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2327741   +
2327742   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2327743   +
2327744   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2327745   +
2327746   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2327747   +
2327748   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2327749   +
2327750   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2327751   +
2327752   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2327753   +
2327754   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2327755   +
2327756   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2327757   +
2327758   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2327759   +
2327760   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2327761   +
2327762   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2327763   +
2327764   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2327765   +
2327766   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2327767   +
2327768   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2327769   +
2327770   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2327771   +
2327772   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2327773   +
2327774   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2327775   +
2327776   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2327777   +
2327778   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2327779   +
2327780   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2327781   +
2327782   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2327783   +
2327784   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2327785   +
2327786   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2327787   +
2327788   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2327789   +
2327790   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2327791   +
2327792   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2327793   +
2327794   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2327795   +
2327796   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2327797   +
2327798   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2327799   +
2327800   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2327801   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2327802   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2327803   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2327804   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2327805   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2327806   +end;
MPRINT(EM_DIAGRAM):   end;
2327807   +else do;
MPRINT(EM_DIAGRAM):   else do;
2327808   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2327809   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2327810   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2327811   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2327812   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2327813   +   end;
MPRINT(EM_DIAGRAM):   end;
2327814   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2327815   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2327816   +   end;
MPRINT(EM_DIAGRAM):   end;
2327817   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2327818   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2327819   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2327820   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2327821   +   end;
MPRINT(EM_DIAGRAM):   end;
2327822   +end;
MPRINT(EM_DIAGRAM):   end;
2327823   +
2327824   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2327825   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2327826   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2327827   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2327828   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2327829   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2327830   +end;
MPRINT(EM_DIAGRAM):   end;
2327831   +else do;
MPRINT(EM_DIAGRAM):   else do;
2327832   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2327833   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2327834   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2327835   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2327836   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2327837   +   end;
MPRINT(EM_DIAGRAM):   end;
2327838   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2327839   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2327840   +   end;
MPRINT(EM_DIAGRAM):   end;
2327841   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2327842   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2327843   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2327844   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2327845   +   end;
MPRINT(EM_DIAGRAM):   end;
2327846   +end;
MPRINT(EM_DIAGRAM):   end;
2327847   +
2327848   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2327849   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2327850   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2327851   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2327852   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2327853   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2327854   +end;
MPRINT(EM_DIAGRAM):   end;
2327855   +else do;
MPRINT(EM_DIAGRAM):   else do;
2327856   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2327857   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2327858   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2327859   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2327860   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2327861   +   end;
MPRINT(EM_DIAGRAM):   end;
2327862   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2327863   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2327864   +   end;
MPRINT(EM_DIAGRAM):   end;
2327865   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2327866   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2327867   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2327868   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2327869   +   end;
MPRINT(EM_DIAGRAM):   end;
2327870   +end;
MPRINT(EM_DIAGRAM):   end;
2327871   +
2327872   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2327873   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2327874   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2327875   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2327876   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2327877   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2327878   +end;
MPRINT(EM_DIAGRAM):   end;
2327879   +else do;
MPRINT(EM_DIAGRAM):   else do;
2327880   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2327881   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2327882   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2327883   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2327884   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2327885   +   end;
MPRINT(EM_DIAGRAM):   end;
2327886   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2327887   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2327888   +   end;
MPRINT(EM_DIAGRAM):   end;
2327889   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2327890   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2327891   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2327892   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2327893   +   end;
MPRINT(EM_DIAGRAM):   end;
2327894   +end;
MPRINT(EM_DIAGRAM):   end;
2327895   +
2327896   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2327897   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2327898   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2327899   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2327900   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2327901   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2327902   +end;
MPRINT(EM_DIAGRAM):   end;
2327903   +else do;
MPRINT(EM_DIAGRAM):   else do;
2327904   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2327905   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2327906   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2327907   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2327908   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2327909   +   end;
MPRINT(EM_DIAGRAM):   end;
2327910   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2327911   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2327912   +   end;
MPRINT(EM_DIAGRAM):   end;
2327913   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2327914   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2327915   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2327916   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2327917   +   end;
MPRINT(EM_DIAGRAM):   end;
2327918   +end;
MPRINT(EM_DIAGRAM):   end;
2327919   +
2327920   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2327921   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2327922   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2327923   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2327924   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2327925   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2327926   +end;
MPRINT(EM_DIAGRAM):   end;
2327927   +else do;
MPRINT(EM_DIAGRAM):   else do;
2327928   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2327929   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2327930   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2327931   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2327932   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2327933   +   end;
MPRINT(EM_DIAGRAM):   end;
2327934   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2327935   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2327936   +   end;
MPRINT(EM_DIAGRAM):   end;
2327937   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2327938   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2327939   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2327940   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2327941   +   end;
MPRINT(EM_DIAGRAM):   end;
2327942   +end;
MPRINT(EM_DIAGRAM):   end;
2327943   +
2327944   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2327945   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2327946   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2327947   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2327948   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2327949   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2327950   +end;
MPRINT(EM_DIAGRAM):   end;
2327951   +else do;
MPRINT(EM_DIAGRAM):   else do;
2327952   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2327953   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2327954   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2327955   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2327956   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2327957   +   end;
MPRINT(EM_DIAGRAM):   end;
2327958   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2327959   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2327960   +   end;
MPRINT(EM_DIAGRAM):   end;
2327961   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2327962   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2327963   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2327964   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2327965   +   end;
MPRINT(EM_DIAGRAM):   end;
2327966   +end;
MPRINT(EM_DIAGRAM):   end;
2327967   +
2327968   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2327969   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2327970   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2327971   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2327972   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2327973   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2327974   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2327975   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2327976   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2327977   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2327978   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2327979   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2327980   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2327981   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2327982   +end;
MPRINT(EM_DIAGRAM):   end;
2327983   +else do;
MPRINT(EM_DIAGRAM):   else do;
2327984   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2327985   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2327986   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2327987   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2327988   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2327989   +   end;
MPRINT(EM_DIAGRAM):   end;
2327990   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2327991   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2327992   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2327993   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2327994   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2327995   +   end;
MPRINT(EM_DIAGRAM):   end;
2327996   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2327997   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2327998   +   end;
MPRINT(EM_DIAGRAM):   end;
2327999   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2328000   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2328001   +   end;
MPRINT(EM_DIAGRAM):   end;
2328002   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2328003   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2328004   +   end;
MPRINT(EM_DIAGRAM):   end;
2328005   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2328006   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2328007   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2328008   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2328009   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2328010   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2328011   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2328012   +   end;
MPRINT(EM_DIAGRAM):   end;
2328013   +end;
MPRINT(EM_DIAGRAM):   end;
2328014   +
2328015   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2328016   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2328017   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2328018   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2328019   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2328020   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2328021   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2328022   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2328023   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2328024   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2328025   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2328026   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2328027   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2328028   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2328029   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2328030   +end;
MPRINT(EM_DIAGRAM):   end;
2328031   +else do;
MPRINT(EM_DIAGRAM):   else do;
2328032   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2328033   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2328034   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2328035   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2328036   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2328037   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2328038   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2328039   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2328040   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2328041   +         end;
MPRINT(EM_DIAGRAM):   end;
2328042   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2328043   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2328044   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2328045   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2328046   +            end;
MPRINT(EM_DIAGRAM):   end;
2328047   +         end;
MPRINT(EM_DIAGRAM):   end;
2328048   +      end;
MPRINT(EM_DIAGRAM):   end;
2328049   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2328050   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2328051   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2328052   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2328053   +         end;
MPRINT(EM_DIAGRAM):   end;
2328054   +      end;
MPRINT(EM_DIAGRAM):   end;
2328055   +   end;
MPRINT(EM_DIAGRAM):   end;
2328056   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2328057   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2328058   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2328059   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2328060   +      end;
MPRINT(EM_DIAGRAM):   end;
2328061   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2328062   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2328063   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2328064   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2328065   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2328066   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2328067   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2328068   +         end;
MPRINT(EM_DIAGRAM):   end;
2328069   +      end;
MPRINT(EM_DIAGRAM):   end;
2328070   +   end;
MPRINT(EM_DIAGRAM):   end;
2328071   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2328072   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2328073   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2328074   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2328075   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2328076   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2328077   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2328078   +   end;
MPRINT(EM_DIAGRAM):   end;
2328079   +end;
MPRINT(EM_DIAGRAM):   end;
2328080   +
2328081   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2328082   +*** Checking missing input Interval
2328083   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2328084   +
2328085   +IF NMISS(
2328086   +   AcceptedCmpTotal ,
2328087   +   Age ,
2328088   +   Frq ,
2328089   +   Income ,
2328090   +   Kidhome ,
2328091   +   Mnt ,
2328092   +   MntFishProducts ,
2328093   +   MntFruits ,
2328094   +   MntGoldProds ,
2328095   +   MntMeatProducts ,
2328096   +   MntSweetProducts ,
2328097   +   MntWines ,
2328098   +   MonthsAsCustomer ,
2328099   +   NumCatalogPurchases ,
2328100   +   NumDealsPurchases ,
2328101   +   NumDistPurchases ,
2328102   +   NumStorePurchases ,
2328103   +   NumWebPurchases ,
2328104   +   NumWebVisitsMonth ,
2328105   +   RFMstat ,
2328106   +   RMntFrq ,
2328107   +   Recency ,
2328108   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2328109   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2328110   +
2328111   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2328112   +END;
MPRINT(EM_DIAGRAM):   END;
2328113   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2328114   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2328115   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2328116   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2328117   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2328118   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2328119   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2328120   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2328121   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2328122   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2328123   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2328124   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2328125   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2328126   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2328127   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2328128   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2328129   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2328130   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2328131   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2328132   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2328133   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2328134   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2328135   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2328136   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2328137   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2328138   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2328139   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2328140   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2328141   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2328142   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2328143   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2328144   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2328145   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2328146   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2328147   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2328148   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2328149   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2328150   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2328151   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2328152   +END;
MPRINT(EM_DIAGRAM):   END;
2328153   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2328154   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2328155   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2328156   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2328157   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2328158   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2328159   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2328160   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2328161   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2328162   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2328163   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2328164   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2328165   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2328166   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2328167   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2328168   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2328169   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2328170   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2328171   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2328172   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2328173   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2328174   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2328175   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2328176   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2328177   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2328178   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2328179   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2328180   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2328181   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2328182   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2328183   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2328184   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2328185   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2328186   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2328187   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2328188   +   ELSE S_NumCatalogPurchases
2328189   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2328190   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2328191   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2328192   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2328193   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2328194   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2328195   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2328196   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2328197   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2328198   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2328199   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2328200   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2328201   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2328202   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2328203   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2328204   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2328205   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2328206   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2328207   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2328208   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2328209   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2328210   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2328211   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2328212   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2328213   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2328214   +END;
MPRINT(EM_DIAGRAM):   END;
2328215   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2328216   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2328217   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2328218   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2328219   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2328220   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2328221   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2328222   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2328223   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2328224   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2328225   +   H1x1_1  =     0.26454269681311 * S_AcceptedCmpTotal
2328226   +          +    -0.01281904987956 * S_Age  +    -0.19309516267581 * S_Frq
2328227   +          +    -0.19077579202378 * S_Income  +      0.1806651018562 *
2328228   +        S_Kidhome  +    -0.31002612826472 * S_Mnt  +    -0.05901796512011 *
2328229   +        S_MntFishProducts  +    -0.03760930101165 * S_MntFruits
2328230   +          +     0.01720900715043 * S_MntGoldProds  +     0.21472292961422 *
2328231   +        S_MntMeatProducts  +    -0.02880706568684 * S_MntSweetProducts
2328232   +          +    -0.37993583170844 * S_MntWines  +    -0.00848444156361 *
2328233   +        S_MonthsAsCustomer  +     0.15939611818942 * S_NumCatalogPurchases
2328234   +          +     0.08390531145773 * S_NumDealsPurchases
2328235   +          +    -0.29505970645775 * S_NumDistPurchases
2328236   +          +    -0.13820571170194 * S_NumStorePurchases
2328237   +          +     0.11468011313368 * S_NumWebPurchases
2328238   +          +    -0.18421241371843 * S_NumWebVisitsMonth
2328239   +          +     0.11564064971509 * S_RFMstat  +    -0.02223928001432 *
2328240   +        S_RMntFrq  +     0.18022777532589 * S_Recency
2328241   +          +     0.14654831145379 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26454269681311 * S_AcceptedCmpTotal + -0.01281904987956 * 
S_Age + -0.19309516267581 * S_Frq + -0.19077579202378 * S_Income + 0.1806651018562 * S_Kidhome 
+ -0.31002612826472 * S_Mnt + -0.05901796512011 * S_MntFishProducts + -0.03760930101165 * 
S_MntFruits + 0.01720900715043 * S_MntGoldProds + 0.21472292961422 * S_MntMeatProducts + 
-0.02880706568684 * S_MntSweetProducts + -0.37993583170844 * S_MntWines + -0.00848444156361 * 
S_MonthsAsCustomer + 0.15939611818942 * S_NumCatalogPurchases + 0.08390531145773 * 
S_NumDealsPurchases + -0.29505970645775 * S_NumDistPurchases + -0.13820571170194 * 
S_NumStorePurchases + 0.11468011313368 * S_NumWebPurchases + -0.18421241371843 * 
S_NumWebVisitsMonth + 0.11564064971509 * S_RFMstat + -0.02223928001432 * S_RMntFrq + 
0.18022777532589 * S_Recency + 0.14654831145379 * S_Teenhome ;
2328242   +   H1x1_2  =     0.27055972468014 * S_AcceptedCmpTotal
2328243   +          +      0.0025862891193 * S_Age  +    -0.07147307366817 * S_Frq
2328244   +          +      0.1883776136263 * S_Income  +    -0.12712510891181 *
2328245   +        S_Kidhome  +    -0.42099927948686 * S_Mnt  +    -0.07047631817862 *
2328246   +        S_MntFishProducts  +    -0.06658475152878 * S_MntFruits
2328247   +          +     0.01943025682869 * S_MntGoldProds  +     0.29481794109465 *
2328248   +        S_MntMeatProducts  +    -0.06573502094591 * S_MntSweetProducts
2328249   +          +    -0.46266722725002 * S_MntWines  +    -0.00472333181469 *
2328250   +        S_MonthsAsCustomer  +     0.35081452017576 * S_NumCatalogPurchases
2328251   +          +     0.18009076035363 * S_NumDealsPurchases
2328252   +          +     0.03853861006587 * S_NumDistPurchases
2328253   +          +    -0.05118063952874 * S_NumStorePurchases
2328254   +          +    -0.03282286120473 * S_NumWebPurchases
2328255   +          +     0.31160900419026 * S_NumWebVisitsMonth
2328256   +          +     0.08027884378429 * S_RFMstat  +     0.39057239541393 *
2328257   +        S_RMntFrq  +    -0.34796767111274 * S_Recency
2328258   +          +    -0.12099758522271 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.27055972468014 * S_AcceptedCmpTotal + 0.0025862891193 * S_Age 
+ -0.07147307366817 * S_Frq + 0.1883776136263 * S_Income + -0.12712510891181 * S_Kidhome + 
-0.42099927948686 * S_Mnt + -0.07047631817862 * S_MntFishProducts + -0.06658475152878 * 
S_MntFruits + 0.01943025682869 * S_MntGoldProds + 0.29481794109465 * S_MntMeatProducts + 
-0.06573502094591 * S_MntSweetProducts + -0.46266722725002 * S_MntWines + -0.00472333181469 * 
S_MonthsAsCustomer + 0.35081452017576 * S_NumCatalogPurchases + 0.18009076035363 * 
S_NumDealsPurchases + 0.03853861006587 * S_NumDistPurchases + -0.05118063952874 * 
S_NumStorePurchases + -0.03282286120473 * S_NumWebPurchases + 0.31160900419026 * 
S_NumWebVisitsMonth + 0.08027884378429 * S_RFMstat + 0.39057239541393 * S_RMntFrq + 
-0.34796767111274 * S_Recency + -0.12099758522271 * S_Teenhome ;
2328259   +   H1x1_1  = H1x1_1  +     0.12539246465239 * AcceptedCmp10
2328260   +          +     0.38473652869745 * AcceptedCmp20  +     0.29820983391886 *
2328261   +        AcceptedCmp30  +     0.29085092779792 * AcceptedCmp40
2328262   +          +     0.18918195914981 * AcceptedCmp50  +    -0.26812516781697 *
2328263   +        Complain0  +    -0.08804110897148 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.12539246465239 * AcceptedCmp10 + 0.38473652869745 * 
AcceptedCmp20 + 0.29820983391886 * AcceptedCmp30 + 0.29085092779792 * AcceptedCmp40 + 
0.18918195914981 * AcceptedCmp50 + -0.26812516781697 * Complain0 + -0.08804110897148 * 
HigherEducationBinary0 ;
2328264   +   H1x1_2  = H1x1_2  +    -0.02312897825565 * AcceptedCmp10
2328265   +          +     0.03909481703523 * AcceptedCmp20  +     0.02531081539721 *
2328266   +        AcceptedCmp30  +     0.03109641300151 * AcceptedCmp40
2328267   +          +     0.01985718189621 * AcceptedCmp50  +     0.13425456375085 *
2328268   +        Complain0  +    -0.08222486590117 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.02312897825565 * AcceptedCmp10 + 0.03909481703523 * 
AcceptedCmp20 + 0.02531081539721 * AcceptedCmp30 + 0.03109641300151 * AcceptedCmp40 + 
0.01985718189621 * AcceptedCmp50 + 0.13425456375085 * Complain0 + -0.08222486590117 * 
HigherEducationBinary0 ;
2328269   +   H1x1_1  = H1x1_1  +    -0.01975862863669 * Education2n_Cycle
2328270   +          +     0.14654730697956 * EducationBasic  +    -0.00459515646452 *
2328271   +        EducationGraduation  +     0.01586948449127 * EducationMaster
2328272   +          +    -0.04750981393889 * Marital_StatusDivorced
2328273   +          +     0.28216925676677 * Marital_StatusMarried
2328274   +          +    -0.20757827413964 * Marital_StatusSingle
2328275   +          +     0.22622509024122 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.01975862863669 * Education2n_Cycle + 
0.14654730697956 * EducationBasic + -0.00459515646452 * EducationGraduation + 0.01586948449127 
* EducationMaster + -0.04750981393889 * Marital_StatusDivorced + 0.28216925676677 * 
Marital_StatusMarried + -0.20757827413964 * Marital_StatusSingle + 0.22622509024122 * 
Marital_StatusTogether ;
2328276   +   H1x1_2  = H1x1_2  +     0.12009608969049 * Education2n_Cycle
2328277   +          +     0.01793460710056 * EducationBasic  +    -0.04257710051346 *
2328278   +        EducationGraduation  +    -0.06975725710115 * EducationMaster
2328279   +          +     0.05981919620577 * Marital_StatusDivorced
2328280   +          +    -0.17161573846062 * Marital_StatusMarried
2328281   +          +     0.15869440681091 * Marital_StatusSingle
2328282   +          +    -0.13282372850158 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12009608969049 * Education2n_Cycle + 
0.01793460710056 * EducationBasic + -0.04257710051346 * EducationGraduation + 
-0.06975725710115 * EducationMaster + 0.05981919620577 * Marital_StatusDivorced + 
-0.17161573846062 * Marital_StatusMarried + 0.15869440681091 * Marital_StatusSingle + 
-0.13282372850158 * Marital_StatusTogether ;
2328283   +   H1x1_1  =     0.87962277715971 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.87962277715971 + H1x1_1 ;
2328284   +   H1x1_2  =    -0.62570339696782 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.62570339696782 + H1x1_2 ;
2328285   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
2328286   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
2328287   +END;
MPRINT(EM_DIAGRAM):   END;
2328288   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2328289   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2328290   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2328291   +END;
MPRINT(EM_DIAGRAM):   END;
2328292   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2328293   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2328294   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2328295   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2328296   +   H1x2_1  =      0.1719390672121 * S_AcceptedCmpTotal
2328297   +          +     0.23586839288361 * S_Age  +    -1.85384134180372 * S_Frq
2328298   +          +    -0.43561758063577 * S_Income  +     -2.5581498901473 *
2328299   +        S_Kidhome  +      1.7031888248428 * S_Mnt  +     0.84982621124736 *
2328300   +        S_MntFishProducts  +     0.25990173458485 * S_MntFruits
2328301   +          +    -2.80730469703961 * S_MntGoldProds  +     0.64923500711702 *
2328302   +        S_MntMeatProducts  +     0.27458645458502 * S_MntSweetProducts
2328303   +          +    -0.47723589182372 * S_MntWines  +    -0.66777488145507 *
2328304   +        S_MonthsAsCustomer  +    -0.46364414558282 * S_NumCatalogPurchases
2328305   +          +     0.00741910846933 * S_NumDealsPurchases
2328306   +          +       1.334289252268 * S_NumDistPurchases
2328307   +          +    -0.29851567180932 * S_NumStorePurchases
2328308   +          +    -0.52115313259666 * S_NumWebPurchases
2328309   +          +     0.93907168501909 * S_NumWebVisitsMonth
2328310   +          +    -0.26126881318451 * S_RFMstat  +     -1.3003763542929 *
2328311   +        S_RMntFrq  +    -0.12807368149309 * S_Recency
2328312   +          +    -0.21296116974623 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.1719390672121 * S_AcceptedCmpTotal + 0.23586839288361 * S_Age 
+ -1.85384134180372 * S_Frq + -0.43561758063577 * S_Income + -2.5581498901473 * S_Kidhome + 
1.7031888248428 * S_Mnt + 0.84982621124736 * S_MntFishProducts + 0.25990173458485 * 
S_MntFruits + -2.80730469703961 * S_MntGoldProds + 0.64923500711702 * S_MntMeatProducts + 
0.27458645458502 * S_MntSweetProducts + -0.47723589182372 * S_MntWines + -0.66777488145507 * 
S_MonthsAsCustomer + -0.46364414558282 * S_NumCatalogPurchases + 0.00741910846933 * 
S_NumDealsPurchases + 1.334289252268 * S_NumDistPurchases + -0.29851567180932 * 
S_NumStorePurchases + -0.52115313259666 * S_NumWebPurchases + 0.93907168501909 * 
S_NumWebVisitsMonth + -0.26126881318451 * S_RFMstat + -1.3003763542929 * S_RMntFrq + 
-0.12807368149309 * S_Recency + -0.21296116974623 * S_Teenhome ;
2328313   +   H1x2_2  =     0.30897763700303 * S_AcceptedCmpTotal
2328314   +          +    -0.77727886396317 * S_Age  +    -0.79298582494973 * S_Frq
2328315   +          +    -1.73199353738093 * S_Income  +     1.12984956989288 *
2328316   +        S_Kidhome  +    -1.36701096993984 * S_Mnt  +    -0.21063950702424 *
2328317   +        S_MntFishProducts  +    -0.20027336686257 * S_MntFruits
2328318   +          +    -0.06955810418489 * S_MntGoldProds  +     0.16672767423533 *
2328319   +        S_MntMeatProducts  +    -1.56675269740541 * S_MntSweetProducts
2328320   +          +     1.85366479127485 * S_MntWines  +    -0.58178621903094 *
2328321   +        S_MonthsAsCustomer  +     1.31024619253935 * S_NumCatalogPurchases
2328322   +          +     1.60427001186844 * S_NumDealsPurchases
2328323   +          +    -0.18447618033353 * S_NumDistPurchases
2328324   +          +    -1.29966073003539 * S_NumStorePurchases
2328325   +          +    -1.12373457341536 * S_NumWebPurchases
2328326   +          +     1.46099221440494 * S_NumWebVisitsMonth
2328327   +          +     0.17795038564406 * S_RFMstat  +    -0.82372068140832 *
2328328   +        S_RMntFrq  +      0.4480370534729 * S_Recency
2328329   +          +     0.19272737691538 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.30897763700303 * S_AcceptedCmpTotal + -0.77727886396317 * 
S_Age + -0.79298582494973 * S_Frq + -1.73199353738093 * S_Income + 1.12984956989288 * 
S_Kidhome + -1.36701096993984 * S_Mnt + -0.21063950702424 * S_MntFishProducts + 
-0.20027336686257 * S_MntFruits + -0.06955810418489 * S_MntGoldProds + 0.16672767423533 * 
S_MntMeatProducts + -1.56675269740541 * S_MntSweetProducts + 1.85366479127485 * S_MntWines + 
-0.58178621903094 * S_MonthsAsCustomer + 1.31024619253935 * S_NumCatalogPurchases + 
1.60427001186844 * S_NumDealsPurchases + -0.18447618033353 * S_NumDistPurchases + 
-1.29966073003539 * S_NumStorePurchases + -1.12373457341536 * S_NumWebPurchases + 
1.46099221440494 * S_NumWebVisitsMonth + 0.17795038564406 * S_RFMstat + -0.82372068140832 * 
S_RMntFrq + 0.4480370534729 * S_Recency + 0.19272737691538 * S_Teenhome ;
2328330   +   H1x2_1  = H1x2_1  +     -0.6569942252053 * AcceptedCmp10
2328331   +          +    -0.89152555599538 * AcceptedCmp20  +     1.00488730476017 *
2328332   +        AcceptedCmp30  +     0.34286042692068 * AcceptedCmp40
2328333   +          +    -1.19198820362508 * AcceptedCmp50  +    -0.86571531914686 *
2328334   +        Complain0  +     0.14303136037365 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.6569942252053 * AcceptedCmp10 + -0.89152555599538 * 
AcceptedCmp20 + 1.00488730476017 * AcceptedCmp30 + 0.34286042692068 * AcceptedCmp40 + 
-1.19198820362508 * AcceptedCmp50 + -0.86571531914686 * Complain0 + 0.14303136037365 * 
HigherEducationBinary0 ;
2328335   +   H1x2_2  = H1x2_2  +     1.79481763784518 * AcceptedCmp10
2328336   +          +    -2.85912280013336 * AcceptedCmp20  +     0.16890012708431 *
2328337   +        AcceptedCmp30  +     0.94639083182751 * AcceptedCmp40
2328338   +          +    -0.62141828005946 * AcceptedCmp50  +    -0.39098882491277 *
2328339   +        Complain0  +     0.85700787946581 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.79481763784518 * AcceptedCmp10 + -2.85912280013336 * 
AcceptedCmp20 + 0.16890012708431 * AcceptedCmp30 + 0.94639083182751 * AcceptedCmp40 + 
-0.62141828005946 * AcceptedCmp50 + -0.39098882491277 * Complain0 + 0.85700787946581 * 
HigherEducationBinary0 ;
2328340   +   H1x2_1  = H1x2_1  +      0.0737054452993 * Education2n_Cycle
2328341   +          +       0.362372261752 * EducationBasic  +      -1.485941295677 *
2328342   +        EducationGraduation  +    -0.81257694655594 * EducationMaster
2328343   +          +     0.59819559998538 * Marital_StatusDivorced
2328344   +          +     0.92957772553633 * Marital_StatusMarried
2328345   +          +    -1.11796266958894 * Marital_StatusSingle
2328346   +          +     -2.0576132087002 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.0737054452993 * Education2n_Cycle + 0.362372261752 * 
EducationBasic + -1.485941295677 * EducationGraduation + -0.81257694655594 * EducationMaster + 
0.59819559998538 * Marital_StatusDivorced + 0.92957772553633 * Marital_StatusMarried + 
-1.11796266958894 * Marital_StatusSingle + -2.0576132087002 * Marital_StatusTogether ;
2328347   +   H1x2_2  = H1x2_2  +    -1.10016528859962 * Education2n_Cycle
2328348   +          +    -1.46816646165468 * EducationBasic  +    -0.11241499152788 *
2328349   +        EducationGraduation  +    -0.65110715251273 * EducationMaster
2328350   +          +      1.0870909562212 * Marital_StatusDivorced
2328351   +          +     1.50333961797515 * Marital_StatusMarried
2328352   +          +    -1.41407780765932 * Marital_StatusSingle
2328353   +          +    -0.52528072358697 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.10016528859962 * Education2n_Cycle + 
-1.46816646165468 * EducationBasic + -0.11241499152788 * EducationGraduation + 
-0.65110715251273 * EducationMaster + 1.0870909562212 * Marital_StatusDivorced + 
1.50333961797515 * Marital_StatusMarried + -1.41407780765932 * Marital_StatusSingle + 
-0.52528072358697 * Marital_StatusTogether ;
2328354   +   H1x2_1  =     1.46376024534028 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.46376024534028 + H1x2_1 ;
2328355   +   H1x2_2  =    -0.21341526379366 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.21341526379366 + H1x2_2 ;
2328356   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2328357   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2328358   +   H1x2_1  = EXP(MIN(-0.5 * H1x2_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(-0.5 * H1x2_1 **2, _EXP_BAR));
2328359   +   H1x2_2  = EXP(MIN(-0.5 * H1x2_2 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(-0.5 * H1x2_2 **2, _EXP_BAR));
2328360   +END;
MPRINT(EM_DIAGRAM):   END;
2328361   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2328362   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2328363   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2328364   +END;
MPRINT(EM_DIAGRAM):   END;
2328365   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2328366   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2328367   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2328368   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2328369   +   H1x3_1  =     0.29299707972123 * S_AcceptedCmpTotal
2328370   +          +     1.39797329466471 * S_Age  +    -2.02673480388837 * S_Frq
2328371   +          +    -1.09682777516542 * S_Income  +    -1.22241109888643 *
2328372   +        S_Kidhome  +    -1.35766076466324 * S_Mnt  +    -2.90812690982576 *
2328373   +        S_MntFishProducts  +    -0.48174923069843 * S_MntFruits
2328374   +          +     1.57335575145195 * S_MntGoldProds  +    -0.55248873552176 *
2328375   +        S_MntMeatProducts  +     0.54536808091745 * S_MntSweetProducts
2328376   +          +    -0.41516162035296 * S_MntWines  +     0.07715050596116 *
2328377   +        S_MonthsAsCustomer  +    -2.18785324142159 * S_NumCatalogPurchases
2328378   +          +     -1.1174504455343 * S_NumDealsPurchases
2328379   +          +    -0.18561253113498 * S_NumDistPurchases
2328380   +          +    -0.35231054612792 * S_NumStorePurchases
2328381   +          +      0.9249490354172 * S_NumWebPurchases
2328382   +          +    -0.79868535147175 * S_NumWebVisitsMonth
2328383   +          +    -0.17158151681124 * S_RFMstat  +     -0.9870286843901 *
2328384   +        S_RMntFrq  +     0.62439123699986 * S_Recency
2328385   +          +    -0.45845377794308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.29299707972123 * S_AcceptedCmpTotal + 1.39797329466471 * 
S_Age + -2.02673480388837 * S_Frq + -1.09682777516542 * S_Income + -1.22241109888643 * 
S_Kidhome + -1.35766076466324 * S_Mnt + -2.90812690982576 * S_MntFishProducts + 
-0.48174923069843 * S_MntFruits + 1.57335575145195 * S_MntGoldProds + -0.55248873552176 * 
S_MntMeatProducts + 0.54536808091745 * S_MntSweetProducts + -0.41516162035296 * S_MntWines + 
0.07715050596116 * S_MonthsAsCustomer + -2.18785324142159 * S_NumCatalogPurchases + 
-1.1174504455343 * S_NumDealsPurchases + -0.18561253113498 * S_NumDistPurchases + 
-0.35231054612792 * S_NumStorePurchases + 0.9249490354172 * S_NumWebPurchases + 
-0.79868535147175 * S_NumWebVisitsMonth + -0.17158151681124 * S_RFMstat + -0.9870286843901 * 
S_RMntFrq + 0.62439123699986 * S_Recency + -0.45845377794308 * S_Teenhome ;
2328386   +   H1x3_2  =    -1.07483179793421 * S_AcceptedCmpTotal
2328387   +          +     1.03558600048684 * S_Age  +     1.11497695424161 * S_Frq
2328388   +          +     0.27297296926116 * S_Income  +     0.77036019999023 *
2328389   +        S_Kidhome  +     0.02567848304605 * S_Mnt  +     0.38661977628442 *
2328390   +        S_MntFishProducts  +    -0.36751750771945 * S_MntFruits
2328391   +          +     0.93924107558212 * S_MntGoldProds  +     0.93046859422523 *
2328392   +        S_MntMeatProducts  +    -0.46124679979068 * S_MntSweetProducts
2328393   +          +    -0.45348234529786 * S_MntWines  +     1.60057890623864 *
2328394   +        S_MonthsAsCustomer  +    -1.74657448073162 * S_NumCatalogPurchases
2328395   +          +     1.05434863590054 * S_NumDealsPurchases
2328396   +          +    -0.73255174632068 * S_NumDistPurchases
2328397   +          +     0.53949953455044 * S_NumStorePurchases
2328398   +          +    -0.61709467816649 * S_NumWebPurchases
2328399   +          +     1.36235282484348 * S_NumWebVisitsMonth
2328400   +          +     -0.0352720913953 * S_RFMstat  +     0.14001475375682 *
2328401   +        S_RMntFrq  +    -0.24276831608869 * S_Recency
2328402   +          +     0.09762798365722 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -1.07483179793421 * S_AcceptedCmpTotal + 1.03558600048684 * 
S_Age + 1.11497695424161 * S_Frq + 0.27297296926116 * S_Income + 0.77036019999023 * S_Kidhome 
+ 0.02567848304605 * S_Mnt + 0.38661977628442 * S_MntFishProducts + -0.36751750771945 * 
S_MntFruits + 0.93924107558212 * S_MntGoldProds + 0.93046859422523 * S_MntMeatProducts + 
-0.46124679979068 * S_MntSweetProducts + -0.45348234529786 * S_MntWines + 1.60057890623864 * 
S_MonthsAsCustomer + -1.74657448073162 * S_NumCatalogPurchases + 1.05434863590054 * 
S_NumDealsPurchases + -0.73255174632068 * S_NumDistPurchases + 0.53949953455044 * 
S_NumStorePurchases + -0.61709467816649 * S_NumWebPurchases + 1.36235282484348 * 
S_NumWebVisitsMonth + -0.0352720913953 * S_RFMstat + 0.14001475375682 * S_RMntFrq + 
-0.24276831608869 * S_Recency + 0.09762798365722 * S_Teenhome ;
2328403   +   H1x3_1  = H1x3_1  +    -0.94208577947628 * AcceptedCmp10
2328404   +          +     -0.5233017415423 * AcceptedCmp20  +    -0.76900164563331 *
2328405   +        AcceptedCmp30  +    -0.79512141055877 * AcceptedCmp40
2328406   +          +     0.20126599116957 * AcceptedCmp50  +    -0.43046555689873 *
2328407   +        Complain0  +     0.31565229685815 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.94208577947628 * AcceptedCmp10 + -0.5233017415423 * 
AcceptedCmp20 + -0.76900164563331 * AcceptedCmp30 + -0.79512141055877 * AcceptedCmp40 + 
0.20126599116957 * AcceptedCmp50 + -0.43046555689873 * Complain0 + 0.31565229685815 * 
HigherEducationBinary0 ;
2328408   +   H1x3_2  = H1x3_2  +    -1.24961064002454 * AcceptedCmp10
2328409   +          +    -0.89859693224833 * AcceptedCmp20  +     1.15884958881232 *
2328410   +        AcceptedCmp30  +     0.38250389164472 * AcceptedCmp40
2328411   +          +     0.47123004358879 * AcceptedCmp50  +     -2.1232679844098 *
2328412   +        Complain0  +     0.97226091069674 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -1.24961064002454 * AcceptedCmp10 + -0.89859693224833 
* AcceptedCmp20 + 1.15884958881232 * AcceptedCmp30 + 0.38250389164472 * AcceptedCmp40 + 
0.47123004358879 * AcceptedCmp50 + -2.1232679844098 * Complain0 + 0.97226091069674 * 
HigherEducationBinary0 ;
2328413   +   H1x3_1  = H1x3_1  +    -0.07500306665919 * Education2n_Cycle
2328414   +          +     0.04122924311058 * EducationBasic  +    -0.49410102102951 *
2328415   +        EducationGraduation  +    -0.45477734340809 * EducationMaster
2328416   +          +     0.22253248036322 * Marital_StatusDivorced
2328417   +          +    -1.72455332745001 * Marital_StatusMarried
2328418   +          +     0.57787272107232 * Marital_StatusSingle
2328419   +          +     0.16267074825086 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.07500306665919 * Education2n_Cycle + 
0.04122924311058 * EducationBasic + -0.49410102102951 * EducationGraduation + 
-0.45477734340809 * EducationMaster + 0.22253248036322 * Marital_StatusDivorced + 
-1.72455332745001 * Marital_StatusMarried + 0.57787272107232 * Marital_StatusSingle + 
0.16267074825086 * Marital_StatusTogether ;
2328420   +   H1x3_2  = H1x3_2  +    -0.21560233542581 * Education2n_Cycle
2328421   +          +    -0.36476815429069 * EducationBasic  +     1.63334881201349 *
2328422   +        EducationGraduation  +    -1.12620982139344 * EducationMaster
2328423   +          +     0.14637124403046 * Marital_StatusDivorced
2328424   +          +     0.18905186437528 * Marital_StatusMarried
2328425   +          +     0.00511958458521 * Marital_StatusSingle
2328426   +          +      -0.915980703129 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.21560233542581 * Education2n_Cycle + 
-0.36476815429069 * EducationBasic + 1.63334881201349 * EducationGraduation + 
-1.12620982139344 * EducationMaster + 0.14637124403046 * Marital_StatusDivorced + 
0.18905186437528 * Marital_StatusMarried + 0.00511958458521 * Marital_StatusSingle + 
-0.915980703129 * Marital_StatusTogether ;
2328427   +   H1x3_1  =     0.54853846322055 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.54853846322055 + H1x3_1 ;
2328428   +   H1x3_2  =     1.36395858099198 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.36395858099198 + H1x3_2 ;
2328429   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2328430   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2328431   +   H1x3_1  = EXP(MIN(H1x3_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(MIN(H1x3_1 , _EXP_BAR));
2328432   +   H1x3_2  = EXP(MIN(H1x3_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(MIN(H1x3_2 , _EXP_BAR));
2328433   +END;
MPRINT(EM_DIAGRAM):   END;
2328434   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2328435   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2328436   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2328437   +END;
MPRINT(EM_DIAGRAM):   END;
2328438   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2328439   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2328440   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2328441   +
2328442   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2328443   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2328444   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2328445   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2328446   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2328447   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2328448   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2328449   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2328450   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2328451   +end;
MPRINT(EM_DIAGRAM):   end;
2328452   +else do;
MPRINT(EM_DIAGRAM):   else do;
2328453   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2328454   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2328455   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2328456   +   end;
MPRINT(EM_DIAGRAM):   end;
2328457   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2328458   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2328459   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2328460   +   end;
MPRINT(EM_DIAGRAM):   end;
2328461   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2328462   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2328463   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2328464   +   end;
MPRINT(EM_DIAGRAM):   end;
2328465   +end;
MPRINT(EM_DIAGRAM):   end;
2328466   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2328467   +   P_DepVar1  =    -10.6892993503201 * H1x1_1  +     16.2938756734008 * H1x1_2
2328468   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -10.6892993503201 * H1x1_1 + 16.2938756734008 * H1x1_2 ;
2328469   +   P_DepVar1  = P_DepVar1  +      1.2332183930826 * H1x2_1
2328470   +          +    -0.85206858106106 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + 1.2332183930826 * H1x2_1 + -0.85206858106106 * 
H1x2_2 ;
2328471   +   P_DepVar1  = P_DepVar1  +    -0.00087126688031 * H1x3_1
2328472   +          +    -0.00025812675645 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.00087126688031 * H1x3_1 + -0.00025812675645 * 
H1x3_2 ;
2328473   +   P_DepVar1  =     2.20710379818135 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.20710379818135 + P_DepVar1 ;
2328474   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2328475   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2328476   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2328477   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2328478   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2328479   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2328480   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2328481   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2328482   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2328483   +END;
MPRINT(EM_DIAGRAM):   END;
2328484   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2328485   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2328486   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2328487   +END;
MPRINT(EM_DIAGRAM):   END;
2328488   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2328489   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2328490   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2328491   +END;
MPRINT(EM_DIAGRAM):   END;
2328492   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2328493   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2328494   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2328495   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2328496   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2328497   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2328498   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2328499   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2328500   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2328501   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2328502   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2328503   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2328504   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2328505   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2328506   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2328507   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2328508   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2328509   +END;
MPRINT(EM_DIAGRAM):   END;
2328510   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2328511   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2328512   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2328513   +drop
2328514   +H1x1_1
2328515   +H1x1_2
2328516   +H1x2_1
2328517   +H1x2_2
2328518   +H1x3_1
2328519   +H1x3_2
2328520   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x2_1 H1x2_2 H1x3_1 H1x3_2 ;
2328521   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2328522   +* Renaming variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural7;
2328523   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2328524   +* Renaming Posterior variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural7;
2328525   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2328526   +drop AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar1;
2328527   +AutoNeural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar1 = P_DepVar1;
2328528   +drop AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar0;
2328529   +AutoNeural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar0 = P_DepVar0;
2328530   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2328531   +* Renaming Into variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural7;
2328532   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2328533   +length AutoNeural7_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural7_I_DepVar $32;
2328534   +drop AutoNeural7_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_I_DepVar;
2328535   +AutoNeural7_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural7_I_DepVar = I_DepVar;
2328536   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2328537   +* Renaming _WARN_ variable for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural7;
2328538   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2328539   +length AutoNeural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural7_WARN_ $4;
2328540   +drop AutoNeural7_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_WARN_;
2328541   +AutoNeural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural7_WARN_ = _WARN_;
2328542   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2328543   +* Ensmbl38: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Scoring Code of model 3 of 7;
2328544   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2328545   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2328546   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2328547   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2328548   +* NODE: AutoNeural8;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural8;
2328549   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2328550   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2328551   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2328552   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2328553   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2328554   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2328555   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2328556   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2328557   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2328558   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2328559   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2328560   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2328561   +LENGTH _WARN_ $4
2328562   +      F_DepVar  $ 12
2328563   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2328564   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2328565   +
2328566   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2328567   +
2328568   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2328569   +
2328570   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2328571   +
2328572   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2328573   +
2328574   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2328575   +
2328576   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2328577   +
2328578   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2328579   +
2328580   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2328581   +
2328582   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2328583   +
2328584   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2328585   +
2328586   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2328587   +
2328588   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2328589   +
2328590   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2328591   +
2328592   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2328593   +
2328594   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2328595   +
2328596   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2328597   +
2328598   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2328599   +
2328600   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2328601   +
2328602   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2328603   +
2328604   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2328605   +
2328606   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2328607   +
2328608   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2328609   +
2328610   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2328611   +
2328612   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2328613   +
2328614   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2328615   +
2328616   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2328617   +
2328618   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2328619   +
2328620   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2328621   +
2328622   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2328623   +
2328624   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2328625   +
2328626   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2328627   +
2328628   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2328629   +
2328630   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2328631   +
2328632   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2328633   +
2328634   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2328635   +
2328636   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2328637   +
2328638   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2328639   +
2328640   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2328641   +
2328642   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2328643   +
2328644   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2328645   +
2328646   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2328647   +
2328648   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2328649   +
2328650   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2328651   +
2328652   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2328653   +
2328654   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2328655   +
2328656   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2328657   +
2328658   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2328659   +
2328660   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2328661   +
2328662   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2328663   +
2328664   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2328665   +
2328666   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2328667   +
2328668   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2328669   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2328670   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2328671   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2328672   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2328673   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2328674   +end;
MPRINT(EM_DIAGRAM):   end;
2328675   +else do;
MPRINT(EM_DIAGRAM):   else do;
2328676   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2328677   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2328678   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2328679   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2328680   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2328681   +   end;
MPRINT(EM_DIAGRAM):   end;
2328682   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2328683   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2328684   +   end;
MPRINT(EM_DIAGRAM):   end;
2328685   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2328686   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2328687   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2328688   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2328689   +   end;
MPRINT(EM_DIAGRAM):   end;
2328690   +end;
MPRINT(EM_DIAGRAM):   end;
2328691   +
2328692   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2328693   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2328694   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2328695   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2328696   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2328697   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2328698   +end;
MPRINT(EM_DIAGRAM):   end;
2328699   +else do;
MPRINT(EM_DIAGRAM):   else do;
2328700   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2328701   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2328702   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2328703   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2328704   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2328705   +   end;
MPRINT(EM_DIAGRAM):   end;
2328706   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2328707   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2328708   +   end;
MPRINT(EM_DIAGRAM):   end;
2328709   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2328710   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2328711   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2328712   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2328713   +   end;
MPRINT(EM_DIAGRAM):   end;
2328714   +end;
MPRINT(EM_DIAGRAM):   end;
2328715   +
2328716   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2328717   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2328718   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2328719   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2328720   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2328721   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2328722   +end;
MPRINT(EM_DIAGRAM):   end;
2328723   +else do;
MPRINT(EM_DIAGRAM):   else do;
2328724   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2328725   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2328726   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2328727   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2328728   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2328729   +   end;
MPRINT(EM_DIAGRAM):   end;
2328730   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2328731   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2328732   +   end;
MPRINT(EM_DIAGRAM):   end;
2328733   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2328734   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2328735   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2328736   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2328737   +   end;
MPRINT(EM_DIAGRAM):   end;
2328738   +end;
MPRINT(EM_DIAGRAM):   end;
2328739   +
2328740   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2328741   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2328742   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2328743   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2328744   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2328745   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2328746   +end;
MPRINT(EM_DIAGRAM):   end;
2328747   +else do;
MPRINT(EM_DIAGRAM):   else do;
2328748   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2328749   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2328750   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2328751   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2328752   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2328753   +   end;
MPRINT(EM_DIAGRAM):   end;
2328754   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2328755   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2328756   +   end;
MPRINT(EM_DIAGRAM):   end;
2328757   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2328758   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2328759   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2328760   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2328761   +   end;
MPRINT(EM_DIAGRAM):   end;
2328762   +end;
MPRINT(EM_DIAGRAM):   end;
2328763   +
2328764   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2328765   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2328766   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2328767   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2328768   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2328769   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2328770   +end;
MPRINT(EM_DIAGRAM):   end;
2328771   +else do;
MPRINT(EM_DIAGRAM):   else do;
2328772   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2328773   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2328774   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2328775   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2328776   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2328777   +   end;
MPRINT(EM_DIAGRAM):   end;
2328778   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2328779   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2328780   +   end;
MPRINT(EM_DIAGRAM):   end;
2328781   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2328782   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2328783   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2328784   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2328785   +   end;
MPRINT(EM_DIAGRAM):   end;
2328786   +end;
MPRINT(EM_DIAGRAM):   end;
2328787   +
2328788   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2328789   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2328790   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2328791   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2328792   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2328793   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2328794   +end;
MPRINT(EM_DIAGRAM):   end;
2328795   +else do;
MPRINT(EM_DIAGRAM):   else do;
2328796   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2328797   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2328798   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2328799   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2328800   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2328801   +   end;
MPRINT(EM_DIAGRAM):   end;
2328802   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2328803   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2328804   +   end;
MPRINT(EM_DIAGRAM):   end;
2328805   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2328806   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2328807   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2328808   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2328809   +   end;
MPRINT(EM_DIAGRAM):   end;
2328810   +end;
MPRINT(EM_DIAGRAM):   end;
2328811   +
2328812   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2328813   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2328814   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2328815   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2328816   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2328817   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2328818   +end;
MPRINT(EM_DIAGRAM):   end;
2328819   +else do;
MPRINT(EM_DIAGRAM):   else do;
2328820   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2328821   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2328822   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2328823   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2328824   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2328825   +   end;
MPRINT(EM_DIAGRAM):   end;
2328826   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2328827   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2328828   +   end;
MPRINT(EM_DIAGRAM):   end;
2328829   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2328830   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2328831   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2328832   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2328833   +   end;
MPRINT(EM_DIAGRAM):   end;
2328834   +end;
MPRINT(EM_DIAGRAM):   end;
2328835   +
2328836   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2328837   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2328838   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2328839   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2328840   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2328841   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2328842   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2328843   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2328844   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2328845   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2328846   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2328847   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2328848   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2328849   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2328850   +end;
MPRINT(EM_DIAGRAM):   end;
2328851   +else do;
MPRINT(EM_DIAGRAM):   else do;
2328852   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2328853   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2328854   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2328855   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2328856   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2328857   +   end;
MPRINT(EM_DIAGRAM):   end;
2328858   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2328859   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2328860   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2328861   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2328862   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2328863   +   end;
MPRINT(EM_DIAGRAM):   end;
2328864   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2328865   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2328866   +   end;
MPRINT(EM_DIAGRAM):   end;
2328867   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2328868   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2328869   +   end;
MPRINT(EM_DIAGRAM):   end;
2328870   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2328871   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2328872   +   end;
MPRINT(EM_DIAGRAM):   end;
2328873   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2328874   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2328875   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2328876   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2328877   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2328878   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2328879   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2328880   +   end;
MPRINT(EM_DIAGRAM):   end;
2328881   +end;
MPRINT(EM_DIAGRAM):   end;
2328882   +
2328883   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2328884   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2328885   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2328886   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2328887   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2328888   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2328889   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2328890   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2328891   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2328892   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2328893   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2328894   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2328895   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2328896   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2328897   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2328898   +end;
MPRINT(EM_DIAGRAM):   end;
2328899   +else do;
MPRINT(EM_DIAGRAM):   else do;
2328900   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2328901   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2328902   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2328903   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2328904   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2328905   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2328906   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2328907   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2328908   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2328909   +         end;
MPRINT(EM_DIAGRAM):   end;
2328910   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2328911   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2328912   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2328913   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2328914   +            end;
MPRINT(EM_DIAGRAM):   end;
2328915   +         end;
MPRINT(EM_DIAGRAM):   end;
2328916   +      end;
MPRINT(EM_DIAGRAM):   end;
2328917   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2328918   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2328919   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2328920   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2328921   +         end;
MPRINT(EM_DIAGRAM):   end;
2328922   +      end;
MPRINT(EM_DIAGRAM):   end;
2328923   +   end;
MPRINT(EM_DIAGRAM):   end;
2328924   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2328925   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2328926   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2328927   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2328928   +      end;
MPRINT(EM_DIAGRAM):   end;
2328929   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2328930   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2328931   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2328932   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2328933   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2328934   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2328935   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2328936   +         end;
MPRINT(EM_DIAGRAM):   end;
2328937   +      end;
MPRINT(EM_DIAGRAM):   end;
2328938   +   end;
MPRINT(EM_DIAGRAM):   end;
2328939   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2328940   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2328941   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2328942   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2328943   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2328944   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2328945   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2328946   +   end;
MPRINT(EM_DIAGRAM):   end;
2328947   +end;
MPRINT(EM_DIAGRAM):   end;
2328948   +
2328949   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2328950   +*** Checking missing input Interval
2328951   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2328952   +
2328953   +IF NMISS(
2328954   +   AcceptedCmpTotal ,
2328955   +   Age ,
2328956   +   Frq ,
2328957   +   Income ,
2328958   +   Kidhome ,
2328959   +   Mnt ,
2328960   +   MntFishProducts ,
2328961   +   MntFruits ,
2328962   +   MntGoldProds ,
2328963   +   MntMeatProducts ,
2328964   +   MntSweetProducts ,
2328965   +   MntWines ,
2328966   +   MonthsAsCustomer ,
2328967   +   NumCatalogPurchases ,
2328968   +   NumDealsPurchases ,
2328969   +   NumDistPurchases ,
2328970   +   NumStorePurchases ,
2328971   +   NumWebPurchases ,
2328972   +   NumWebVisitsMonth ,
2328973   +   RFMstat ,
2328974   +   RMntFrq ,
2328975   +   Recency ,
2328976   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2328977   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2328978   +
2328979   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2328980   +END;
MPRINT(EM_DIAGRAM):   END;
2328981   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2328982   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2328983   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2328984   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2328985   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2328986   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2328987   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2328988   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2328989   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2328990   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2328991   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2328992   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2328993   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2328994   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2328995   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2328996   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2328997   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2328998   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2328999   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2329000   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2329001   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2329002   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2329003   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2329004   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2329005   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2329006   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2329007   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2329008   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2329009   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2329010   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2329011   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2329012   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2329013   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2329014   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2329015   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2329016   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2329017   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2329018   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2329019   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2329020   +END;
MPRINT(EM_DIAGRAM):   END;
2329021   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2329022   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2329023   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2329024   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2329025   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2329026   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2329027   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2329028   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2329029   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2329030   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2329031   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2329032   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2329033   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2329034   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2329035   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2329036   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2329037   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2329038   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2329039   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2329040   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2329041   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2329042   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2329043   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2329044   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2329045   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2329046   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2329047   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2329048   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2329049   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2329050   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2329051   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2329052   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2329053   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2329054   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2329055   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2329056   +   ELSE S_NumCatalogPurchases
2329057   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2329058   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2329059   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2329060   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2329061   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2329062   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2329063   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2329064   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2329065   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2329066   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2329067   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2329068   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2329069   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2329070   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2329071   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2329072   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2329073   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2329074   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2329075   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2329076   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2329077   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2329078   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2329079   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2329080   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2329081   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2329082   +END;
MPRINT(EM_DIAGRAM):   END;
2329083   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2329084   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2329085   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2329086   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2329087   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2329088   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2329089   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2329090   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2329091   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2329092   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2329093   +   H1x1_1  =      1.2726802048269 * S_AcceptedCmpTotal
2329094   +          +    -0.02889982967357 * S_Age  +    -0.26165770909003 * S_Frq
2329095   +          +     0.19140564299867 * S_Income  +     0.30244335152969 *
2329096   +        S_Kidhome  +    -0.03391217967468 * S_Mnt  +    -0.99943007809307 *
2329097   +        S_MntFishProducts  +    -0.04374917285968 * S_MntFruits
2329098   +          +    -0.13546758294455 * S_MntGoldProds  +     3.59922243619013 *
2329099   +        S_MntMeatProducts  +    -0.10424531322566 * S_MntSweetProducts
2329100   +          +    -1.98884071414703 * S_MntWines  +     0.05310540691138 *
2329101   +        S_MonthsAsCustomer  +     0.58072892654416 * S_NumCatalogPurchases
2329102   +          +     0.30381426454211 * S_NumDealsPurchases
2329103   +          +     0.39966076372974 * S_NumDistPurchases
2329104   +          +    -0.58875986801139 * S_NumStorePurchases
2329105   +          +    -0.78850031558536 * S_NumWebPurchases
2329106   +          +     0.35182997415921 * S_NumWebVisitsMonth
2329107   +          +     1.51048129701176 * S_RFMstat  +     1.13354085492775 *
2329108   +        S_RMntFrq  +     -0.2185811652116 * S_Recency
2329109   +          +     0.01153374704027 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.2726802048269 * S_AcceptedCmpTotal + -0.02889982967357 * 
S_Age + -0.26165770909003 * S_Frq + 0.19140564299867 * S_Income + 0.30244335152969 * S_Kidhome 
+ -0.03391217967468 * S_Mnt + -0.99943007809307 * S_MntFishProducts + -0.04374917285968 * 
S_MntFruits + -0.13546758294455 * S_MntGoldProds + 3.59922243619013 * S_MntMeatProducts + 
-0.10424531322566 * S_MntSweetProducts + -1.98884071414703 * S_MntWines + 0.05310540691138 * 
S_MonthsAsCustomer + 0.58072892654416 * S_NumCatalogPurchases + 0.30381426454211 * 
S_NumDealsPurchases + 0.39966076372974 * S_NumDistPurchases + -0.58875986801139 * 
S_NumStorePurchases + -0.78850031558536 * S_NumWebPurchases + 0.35182997415921 * 
S_NumWebVisitsMonth + 1.51048129701176 * S_RFMstat + 1.13354085492775 * S_RMntFrq + 
-0.2185811652116 * S_Recency + 0.01153374704027 * S_Teenhome ;
2329110   +   H1x1_2  =     0.18093166280015 * S_AcceptedCmpTotal
2329111   +          +    -0.00677564787839 * S_Age  +    -0.21510325598577 * S_Frq
2329112   +          +     0.26314356814214 * S_Income  +    -0.30016454601651 *
2329113   +        S_Kidhome  +     -0.1410547608427 * S_Mnt  +    -0.04272369939478 *
2329114   +        S_MntFishProducts  +    -0.05622578678457 * S_MntFruits
2329115   +          +     0.04457230545618 * S_MntGoldProds  +     0.40709024692944 *
2329116   +        S_MntMeatProducts  +    -0.02989090770621 * S_MntSweetProducts
2329117   +          +    -0.18818656503765 * S_MntWines  +    -0.06237311646922 *
2329118   +        S_MonthsAsCustomer  +     0.39737856936198 * S_NumCatalogPurchases
2329119   +          +     0.33734772994048 * S_NumDealsPurchases
2329120   +          +     0.06152222921422 * S_NumDistPurchases
2329121   +          +    -0.32068333792942 * S_NumStorePurchases
2329122   +          +    -0.26971366415104 * S_NumWebPurchases
2329123   +          +     0.57693239481071 * S_NumWebVisitsMonth
2329124   +          +     0.01161324864777 * S_RFMstat  +     0.00311083015445 *
2329125   +        S_RMntFrq  +    -0.67669007299893 * S_Recency
2329126   +          +     -0.2298426154616 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.18093166280015 * S_AcceptedCmpTotal + -0.00677564787839 * 
S_Age + -0.21510325598577 * S_Frq + 0.26314356814214 * S_Income + -0.30016454601651 * 
S_Kidhome + -0.1410547608427 * S_Mnt + -0.04272369939478 * S_MntFishProducts + 
-0.05622578678457 * S_MntFruits + 0.04457230545618 * S_MntGoldProds + 0.40709024692944 * 
S_MntMeatProducts + -0.02989090770621 * S_MntSweetProducts + -0.18818656503765 * S_MntWines + 
-0.06237311646922 * S_MonthsAsCustomer + 0.39737856936198 * S_NumCatalogPurchases + 
0.33734772994048 * S_NumDealsPurchases + 0.06152222921422 * S_NumDistPurchases + 
-0.32068333792942 * S_NumStorePurchases + -0.26971366415104 * S_NumWebPurchases + 
0.57693239481071 * S_NumWebVisitsMonth + 0.01161324864777 * S_RFMstat + 0.00311083015445 * 
S_RMntFrq + -0.67669007299893 * S_Recency + -0.2298426154616 * S_Teenhome ;
2329127   +   H1x1_3  =    -0.09356212420726 * S_AcceptedCmpTotal
2329128   +          +    -0.01904617704654 * S_Age  +    -0.15700206132472 * S_Frq
2329129   +          +    -0.58483226627076 * S_Income  +     0.30001673574917 *
2329130   +        S_Kidhome  +    -0.19921492301896 * S_Mnt  +    -0.00125986769238 *
2329131   +        S_MntFishProducts  +     0.10195959942937 * S_MntFruits
2329132   +          +      0.0069592628978 * S_MntGoldProds  +     0.03606436199308 *
2329133   +        S_MntMeatProducts  +     0.11259135359155 * S_MntSweetProducts
2329134   +          +     0.05408818612126 * S_MntWines  +    -0.14024859528104 *
2329135   +        S_MonthsAsCustomer  +    -0.14071929240584 * S_NumCatalogPurchases
2329136   +          +     0.22142792900578 * S_NumDealsPurchases
2329137   +          +     -0.0291983445755 * S_NumDistPurchases
2329138   +          +     -0.1997372957954 * S_NumStorePurchases
2329139   +          +    -0.01286201468794 * S_NumWebPurchases
2329140   +          +    -0.35208468552742 * S_NumWebVisitsMonth
2329141   +          +     0.02982651364231 * S_RFMstat  +      0.0228316921695 *
2329142   +        S_RMntFrq  +      0.3930877517629 * S_Recency
2329143   +          +     0.28989829670594 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.09356212420726 * S_AcceptedCmpTotal + -0.01904617704654 * 
S_Age + -0.15700206132472 * S_Frq + -0.58483226627076 * S_Income + 0.30001673574917 * 
S_Kidhome + -0.19921492301896 * S_Mnt + -0.00125986769238 * S_MntFishProducts + 
0.10195959942937 * S_MntFruits + 0.0069592628978 * S_MntGoldProds + 0.03606436199308 * 
S_MntMeatProducts + 0.11259135359155 * S_MntSweetProducts + 0.05408818612126 * S_MntWines + 
-0.14024859528104 * S_MonthsAsCustomer + -0.14071929240584 * S_NumCatalogPurchases + 
0.22142792900578 * S_NumDealsPurchases + -0.0291983445755 * S_NumDistPurchases + 
-0.1997372957954 * S_NumStorePurchases + -0.01286201468794 * S_NumWebPurchases + 
-0.35208468552742 * S_NumWebVisitsMonth + 0.02982651364231 * S_RFMstat + 0.0228316921695 * 
S_RMntFrq + 0.3930877517629 * S_Recency + 0.28989829670594 * S_Teenhome ;
2329144   +   H1x1_1  = H1x1_1  +     0.03659432989123 * AcceptedCmp10
2329145   +          +    -0.12552546530316 * AcceptedCmp20  +     0.57200428680255 *
2329146   +        AcceptedCmp30  +      0.4327465126256 * AcceptedCmp40
2329147   +          +    -1.24484170256212 * AcceptedCmp50  +     0.21604379838869 *
2329148   +        Complain0  +    -0.14986629245585 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.03659432989123 * AcceptedCmp10 + -0.12552546530316 * 
AcceptedCmp20 + 0.57200428680255 * AcceptedCmp30 + 0.4327465126256 * AcceptedCmp40 + 
-1.24484170256212 * AcceptedCmp50 + 0.21604379838869 * Complain0 + -0.14986629245585 * 
HigherEducationBinary0 ;
2329149   +   H1x1_2  = H1x1_2  +    -0.13542589174402 * AcceptedCmp10
2329150   +          +    -0.19116289400292 * AcceptedCmp20  +    -0.10302282473135 *
2329151   +        AcceptedCmp30  +    -0.08705955845916 * AcceptedCmp40
2329152   +          +    -0.17435407626698 * AcceptedCmp50  +    -0.09781790399225 *
2329153   +        Complain0  +     0.02006296587353 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.13542589174402 * AcceptedCmp10 + -0.19116289400292 
* AcceptedCmp20 + -0.10302282473135 * AcceptedCmp30 + -0.08705955845916 * AcceptedCmp40 + 
-0.17435407626698 * AcceptedCmp50 + -0.09781790399225 * Complain0 + 0.02006296587353 * 
HigherEducationBinary0 ;
2329154   +   H1x1_3  = H1x1_3  +     0.08917557424765 * AcceptedCmp10
2329155   +          +    -0.00944366858806 * AcceptedCmp20  +     0.30527409248576 *
2329156   +        AcceptedCmp30  +     0.26823019920335 * AcceptedCmp40
2329157   +          +    -0.02131660897576 * AcceptedCmp50  +    -0.16243659451446 *
2329158   +        Complain0  +    -0.28227689084686 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.08917557424765 * AcceptedCmp10 + -0.00944366858806 * 
AcceptedCmp20 + 0.30527409248576 * AcceptedCmp30 + 0.26823019920335 * AcceptedCmp40 + 
-0.02131660897576 * AcceptedCmp50 + -0.16243659451446 * Complain0 + -0.28227689084686 * 
HigherEducationBinary0 ;
2329159   +   H1x1_1  = H1x1_1  +     0.12998959528304 * Education2n_Cycle
2329160   +          +     0.48334684246109 * EducationBasic  +    -0.07156918649895 *
2329161   +        EducationGraduation  +    -0.21017720550072 * EducationMaster
2329162   +          +    -0.22358326722482 * Marital_StatusDivorced
2329163   +          +     0.09394210085787 * Marital_StatusMarried
2329164   +          +    -0.10381546554982 * Marital_StatusSingle
2329165   +          +     0.05935260608375 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.12998959528304 * Education2n_Cycle + 
0.48334684246109 * EducationBasic + -0.07156918649895 * EducationGraduation + 
-0.21017720550072 * EducationMaster + -0.22358326722482 * Marital_StatusDivorced + 
0.09394210085787 * Marital_StatusMarried + -0.10381546554982 * Marital_StatusSingle + 
0.05935260608375 * Marital_StatusTogether ;
2329166   +   H1x1_2  = H1x1_2  +     0.02955854298839 * Education2n_Cycle
2329167   +          +    -0.13472200519398 * EducationBasic  +     0.01930622297518 *
2329168   +        EducationGraduation  +    -0.00188262361226 * EducationMaster
2329169   +          +     0.16606212232833 * Marital_StatusDivorced
2329170   +          +    -0.33252488631677 * Marital_StatusMarried
2329171   +          +     0.26735237322144 * Marital_StatusSingle
2329172   +          +    -0.37056611493683 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.02955854298839 * Education2n_Cycle + 
-0.13472200519398 * EducationBasic + 0.01930622297518 * EducationGraduation + 
-0.00188262361226 * EducationMaster + 0.16606212232833 * Marital_StatusDivorced + 
-0.33252488631677 * Marital_StatusMarried + 0.26735237322144 * Marital_StatusSingle + 
-0.37056611493683 * Marital_StatusTogether ;
2329173   +   H1x1_3  = H1x1_3  +     0.29085314695378 * Education2n_Cycle
2329174   +          +     -0.2177077392676 * EducationBasic  +    -0.12975750226767 *
2329175   +        EducationGraduation  +     0.12920694427876 * EducationMaster
2329176   +          +    -0.30275479651076 * Marital_StatusDivorced
2329177   +          +     0.50273719874035 * Marital_StatusMarried
2329178   +          +    -0.39588303956293 * Marital_StatusSingle
2329179   +          +     0.42028863850572 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.29085314695378 * Education2n_Cycle + 
-0.2177077392676 * EducationBasic + -0.12975750226767 * EducationGraduation + 0.12920694427876 
* EducationMaster + -0.30275479651076 * Marital_StatusDivorced + 0.50273719874035 * 
Marital_StatusMarried + -0.39588303956293 * Marital_StatusSingle + 0.42028863850572 * 
Marital_StatusTogether ;
2329180   +   H1x1_1  =     1.91295924572895 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.91295924572895 + H1x1_1 ;
2329181   +   H1x1_2  =    -1.21245226681055 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.21245226681055 + H1x1_2 ;
2329182   +   H1x1_3  =    -0.01609140135594 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.01609140135594 + H1x1_3 ;
2329183   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2329184   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2329185   +   H1x1_1  = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
2329186   +   H1x1_2  = EXP(MIN(-0.5 * H1x1_2 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(MIN(-0.5 * H1x1_2 **2, _EXP_BAR));
2329187   +   H1x1_3  = EXP(MIN(-0.5 * H1x1_3 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(MIN(-0.5 * H1x1_3 **2, _EXP_BAR));
2329188   +END;
MPRINT(EM_DIAGRAM):   END;
2329189   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2329190   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2329191   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2329192   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2329193   +END;
MPRINT(EM_DIAGRAM):   END;
2329194   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2329195   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2329196   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2329197   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2329198   +   H1x2_1  =     0.73632716677259 * S_AcceptedCmpTotal
2329199   +          +     -1.3452480925823 * S_Age  +    -0.77564767519981 * S_Frq
2329200   +          +    -0.06163854052357 * S_Income  +     1.82428003860444 *
2329201   +        S_Kidhome  +       0.661412748756 * S_Mnt  +      1.8826488743919 *
2329202   +        S_MntFishProducts  +    -0.21815276926728 * S_MntFruits
2329203   +          +     1.06597641654862 * S_MntGoldProds  +     0.13887400045643 *
2329204   +        S_MntMeatProducts  +    -0.62827157985225 * S_MntSweetProducts
2329205   +          +     1.70742231056065 * S_MntWines  +     0.52403167020638 *
2329206   +        S_MonthsAsCustomer  +    -2.99889150929209 * S_NumCatalogPurchases
2329207   +          +    -2.59470529821377 * S_NumDealsPurchases
2329208   +          +      0.7668756449818 * S_NumDistPurchases
2329209   +          +     0.61064641547208 * S_NumStorePurchases
2329210   +          +    -0.87106335660846 * S_NumWebPurchases
2329211   +          +      0.1188879348197 * S_NumWebVisitsMonth
2329212   +          +     0.89319669432194 * S_RFMstat  +       -0.45272285967 *
2329213   +        S_RMntFrq  +     -0.7210740986075 * S_Recency
2329214   +          +      0.7032117485114 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.73632716677259 * S_AcceptedCmpTotal + -1.3452480925823 * 
S_Age + -0.77564767519981 * S_Frq + -0.06163854052357 * S_Income + 1.82428003860444 * 
S_Kidhome + 0.661412748756 * S_Mnt + 1.8826488743919 * S_MntFishProducts + -0.21815276926728 * 
S_MntFruits + 1.06597641654862 * S_MntGoldProds + 0.13887400045643 * S_MntMeatProducts + 
-0.62827157985225 * S_MntSweetProducts + 1.70742231056065 * S_MntWines + 0.52403167020638 * 
S_MonthsAsCustomer + -2.99889150929209 * S_NumCatalogPurchases + -2.59470529821377 * 
S_NumDealsPurchases + 0.7668756449818 * S_NumDistPurchases + 0.61064641547208 * 
S_NumStorePurchases + -0.87106335660846 * S_NumWebPurchases + 0.1188879348197 * 
S_NumWebVisitsMonth + 0.89319669432194 * S_RFMstat + -0.45272285967 * S_RMntFrq + 
-0.7210740986075 * S_Recency + 0.7032117485114 * S_Teenhome ;
2329215   +   H1x2_2  =      0.5405970783297 * S_AcceptedCmpTotal
2329216   +          +     0.34103648596436 * S_Age  +    -1.00413619660059 * S_Frq
2329217   +          +     0.40958797602392 * S_Income  +    -0.94731216445533 *
2329218   +        S_Kidhome  +    -0.17755265939769 * S_Mnt  +    -0.88926202859892 *
2329219   +        S_MntFishProducts  +      0.6791087530674 * S_MntFruits
2329220   +          +     1.10836805118307 * S_MntGoldProds  +    -0.29462180872033 *
2329221   +        S_MntMeatProducts  +     2.21935054370304 * S_MntSweetProducts
2329222   +          +     1.41379847080743 * S_MntWines  +    -0.66077297246309 *
2329223   +        S_MonthsAsCustomer  +     0.91491641336561 * S_NumCatalogPurchases
2329224   +          +    -0.41834528691349 * S_NumDealsPurchases
2329225   +          +    -0.07802605490227 * S_NumDistPurchases
2329226   +          +    -0.62261476153139 * S_NumStorePurchases
2329227   +          +    -0.84011953180231 * S_NumWebPurchases
2329228   +          +     0.95169092183885 * S_NumWebVisitsMonth
2329229   +          +      0.4036735448902 * S_RFMstat  +     0.44620057959954 *
2329230   +        S_RMntFrq  +    -0.54980566705324 * S_Recency
2329231   +          +    -0.48914926560129 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.5405970783297 * S_AcceptedCmpTotal + 0.34103648596436 * S_Age 
+ -1.00413619660059 * S_Frq + 0.40958797602392 * S_Income + -0.94731216445533 * S_Kidhome + 
-0.17755265939769 * S_Mnt + -0.88926202859892 * S_MntFishProducts + 0.6791087530674 * 
S_MntFruits + 1.10836805118307 * S_MntGoldProds + -0.29462180872033 * S_MntMeatProducts + 
2.21935054370304 * S_MntSweetProducts + 1.41379847080743 * S_MntWines + -0.66077297246309 * 
S_MonthsAsCustomer + 0.91491641336561 * S_NumCatalogPurchases + -0.41834528691349 * 
S_NumDealsPurchases + -0.07802605490227 * S_NumDistPurchases + -0.62261476153139 * 
S_NumStorePurchases + -0.84011953180231 * S_NumWebPurchases + 0.95169092183885 * 
S_NumWebVisitsMonth + 0.4036735448902 * S_RFMstat + 0.44620057959954 * S_RMntFrq + 
-0.54980566705324 * S_Recency + -0.48914926560129 * S_Teenhome ;
2329232   +   H1x2_3  =    -0.10056833202616 * S_AcceptedCmpTotal
2329233   +          +    -3.35021911955911 * S_Age  +    -0.47433508394475 * S_Frq
2329234   +          +      0.2642483252057 * S_Income  +     0.20666167536737 *
2329235   +        S_Kidhome  +    -1.63711887449192 * S_Mnt  +    -0.02078521278323 *
2329236   +        S_MntFishProducts  +    -0.13356020799092 * S_MntFruits
2329237   +          +     0.03199170913357 * S_MntGoldProds  +     0.35859745927921 *
2329238   +        S_MntMeatProducts  +     1.28933517907056 * S_MntSweetProducts
2329239   +          +    -0.45266889039243 * S_MntWines  +    -0.03980312418999 *
2329240   +        S_MonthsAsCustomer  +     0.11407065408619 * S_NumCatalogPurchases
2329241   +          +     1.50811278700924 * S_NumDealsPurchases
2329242   +          +    -0.40025710583484 * S_NumDistPurchases
2329243   +          +     0.16539197954198 * S_NumStorePurchases
2329244   +          +    -1.50803186935431 * S_NumWebPurchases
2329245   +          +    -0.35788712697704 * S_NumWebVisitsMonth
2329246   +          +    -2.06761773527847 * S_RFMstat  +    -0.00353259675109 *
2329247   +        S_RMntFrq  +      0.4364156603095 * S_Recency
2329248   +          +    -0.44689366494665 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.10056833202616 * S_AcceptedCmpTotal + -3.35021911955911 * 
S_Age + -0.47433508394475 * S_Frq + 0.2642483252057 * S_Income + 0.20666167536737 * S_Kidhome 
+ -1.63711887449192 * S_Mnt + -0.02078521278323 * S_MntFishProducts + -0.13356020799092 * 
S_MntFruits + 0.03199170913357 * S_MntGoldProds + 0.35859745927921 * S_MntMeatProducts + 
1.28933517907056 * S_MntSweetProducts + -0.45266889039243 * S_MntWines + -0.03980312418999 * 
S_MonthsAsCustomer + 0.11407065408619 * S_NumCatalogPurchases + 1.50811278700924 * 
S_NumDealsPurchases + -0.40025710583484 * S_NumDistPurchases + 0.16539197954198 * 
S_NumStorePurchases + -1.50803186935431 * S_NumWebPurchases + -0.35788712697704 * 
S_NumWebVisitsMonth + -2.06761773527847 * S_RFMstat + -0.00353259675109 * S_RMntFrq + 
0.4364156603095 * S_Recency + -0.44689366494665 * S_Teenhome ;
2329249   +   H1x2_1  = H1x2_1  +     1.19862785990255 * AcceptedCmp10
2329250   +          +    -0.56777088839338 * AcceptedCmp20  +    -0.20982687937883 *
2329251   +        AcceptedCmp30  +     0.23051157512105 * AcceptedCmp40
2329252   +          +    -1.16625535461103 * AcceptedCmp50  +    -0.03987377830172 *
2329253   +        Complain0  +    -1.17553145310278 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.19862785990255 * AcceptedCmp10 + -0.56777088839338 * 
AcceptedCmp20 + -0.20982687937883 * AcceptedCmp30 + 0.23051157512105 * AcceptedCmp40 + 
-1.16625535461103 * AcceptedCmp50 + -0.03987377830172 * Complain0 + -1.17553145310278 * 
HigherEducationBinary0 ;
2329254   +   H1x2_2  = H1x2_2  +    -1.37553391657098 * AcceptedCmp10
2329255   +          +    -0.49489986415129 * AcceptedCmp20  +     0.84075258232812 *
2329256   +        AcceptedCmp30  +     0.31883526052436 * AcceptedCmp40
2329257   +          +    -0.41245383847025 * AcceptedCmp50  +     0.75603245683628 *
2329258   +        Complain0  +    -2.07732119239317 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.37553391657098 * AcceptedCmp10 + -0.49489986415129 
* AcceptedCmp20 + 0.84075258232812 * AcceptedCmp30 + 0.31883526052436 * AcceptedCmp40 + 
-0.41245383847025 * AcceptedCmp50 + 0.75603245683628 * Complain0 + -2.07732119239317 * 
HigherEducationBinary0 ;
2329259   +   H1x2_3  = H1x2_3  +     0.94876862525586 * AcceptedCmp10
2329260   +          +     0.79245605062261 * AcceptedCmp20  +     1.18614024465163 *
2329261   +        AcceptedCmp30  +    -0.24348380736895 * AcceptedCmp40
2329262   +          +     0.63374252730038 * AcceptedCmp50  +     0.36777527794452 *
2329263   +        Complain0  +    -0.07746344015306 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.94876862525586 * AcceptedCmp10 + 0.79245605062261 * 
AcceptedCmp20 + 1.18614024465163 * AcceptedCmp30 + -0.24348380736895 * AcceptedCmp40 + 
0.63374252730038 * AcceptedCmp50 + 0.36777527794452 * Complain0 + -0.07746344015306 * 
HigherEducationBinary0 ;
2329264   +   H1x2_1  = H1x2_1  +     1.73012058377195 * Education2n_Cycle
2329265   +          +     2.12295803973544 * EducationBasic  +     0.36945596974292 *
2329266   +        EducationGraduation  +    -1.22675967760612 * EducationMaster
2329267   +          +    -0.48199299977856 * Marital_StatusDivorced
2329268   +          +    -1.61546983135535 * Marital_StatusMarried
2329269   +          +     1.25890289649165 * Marital_StatusSingle
2329270   +          +    -0.35805098686637 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.73012058377195 * Education2n_Cycle + 
2.12295803973544 * EducationBasic + 0.36945596974292 * EducationGraduation + -1.22675967760612 
* EducationMaster + -0.48199299977856 * Marital_StatusDivorced + -1.61546983135535 * 
Marital_StatusMarried + 1.25890289649165 * Marital_StatusSingle + -0.35805098686637 * 
Marital_StatusTogether ;
2329271   +   H1x2_2  = H1x2_2  +    -1.04319773106255 * Education2n_Cycle
2329272   +          +    -1.20017517243416 * EducationBasic  +    -0.21851017334559 *
2329273   +        EducationGraduation  +     0.54918303984069 * EducationMaster
2329274   +          +    -0.69719138781358 * Marital_StatusDivorced
2329275   +          +     0.26964883367384 * Marital_StatusMarried
2329276   +          +      0.4656663467381 * Marital_StatusSingle
2329277   +          +    -0.38324848670979 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.04319773106255 * Education2n_Cycle + 
-1.20017517243416 * EducationBasic + -0.21851017334559 * EducationGraduation + 
0.54918303984069 * EducationMaster + -0.69719138781358 * Marital_StatusDivorced + 
0.26964883367384 * Marital_StatusMarried + 0.4656663467381 * Marital_StatusSingle + 
-0.38324848670979 * Marital_StatusTogether ;
2329278   +   H1x2_3  = H1x2_3  +     0.26572249637491 * Education2n_Cycle
2329279   +          +     1.36865822272368 * EducationBasic  +     0.26769702437041 *
2329280   +        EducationGraduation  +    -0.57748542336591 * EducationMaster
2329281   +          +     1.40407968804704 * Marital_StatusDivorced
2329282   +          +    -1.35468203106214 * Marital_StatusMarried
2329283   +          +      1.0644996414042 * Marital_StatusSingle
2329284   +          +    -0.68198832748724 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.26572249637491 * Education2n_Cycle + 
1.36865822272368 * EducationBasic + 0.26769702437041 * EducationGraduation + -0.57748542336591 
* EducationMaster + 1.40407968804704 * Marital_StatusDivorced + -1.35468203106214 * 
Marital_StatusMarried + 1.0644996414042 * Marital_StatusSingle + -0.68198832748724 * 
Marital_StatusTogether ;
2329285   +   H1x2_1  =     1.72650566457008 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.72650566457008 + H1x2_1 ;
2329286   +   H1x2_2  =     -1.0113179577999 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.0113179577999 + H1x2_2 ;
2329287   +   H1x2_3  =     0.14003924400021 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.14003924400021 + H1x2_3 ;
2329288   +   H1x2_1  = SIN(H1x2_1 );
MPRINT(EM_DIAGRAM):   H1x2_1 = SIN(H1x2_1 );
2329289   +   H1x2_2  = SIN(H1x2_2 );
MPRINT(EM_DIAGRAM):   H1x2_2 = SIN(H1x2_2 );
2329290   +   H1x2_3  = SIN(H1x2_3 );
MPRINT(EM_DIAGRAM):   H1x2_3 = SIN(H1x2_3 );
2329291   +END;
MPRINT(EM_DIAGRAM):   END;
2329292   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2329293   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2329294   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2329295   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2329296   +END;
MPRINT(EM_DIAGRAM):   END;
2329297   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2329298   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2329299   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2329300   +
2329301   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2329302   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2329303   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2329304   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2329305   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2329306   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2329307   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2329308   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2329309   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2329310   +end;
MPRINT(EM_DIAGRAM):   end;
2329311   +else do;
MPRINT(EM_DIAGRAM):   else do;
2329312   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2329313   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2329314   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2329315   +   end;
MPRINT(EM_DIAGRAM):   end;
2329316   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2329317   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2329318   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2329319   +   end;
MPRINT(EM_DIAGRAM):   end;
2329320   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2329321   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2329322   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2329323   +   end;
MPRINT(EM_DIAGRAM):   end;
2329324   +end;
MPRINT(EM_DIAGRAM):   end;
2329325   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2329326   +   P_DepVar1  =    -7.62079794803554 * H1x1_1  +     13.7007341613959 * H1x1_2
2329327   +          +    -6.77882452096978 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -7.62079794803554 * H1x1_1 + 13.7007341613959 * H1x1_2 + 
-6.77882452096978 * H1x1_3 ;
2329328   +   P_DepVar1  = P_DepVar1  +    -0.44850093089338 * H1x2_1
2329329   +          +    -1.24228597291063 * H1x2_2  +     1.00075465600952 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.44850093089338 * H1x2_1 + -1.24228597291063 * 
H1x2_2 + 1.00075465600952 * H1x2_3 ;
2329330   +   P_DepVar1  =    -2.26198805619545 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.26198805619545 + P_DepVar1 ;
2329331   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2329332   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2329333   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2329334   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2329335   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2329336   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2329337   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2329338   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2329339   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2329340   +END;
MPRINT(EM_DIAGRAM):   END;
2329341   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2329342   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2329343   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2329344   +END;
MPRINT(EM_DIAGRAM):   END;
2329345   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2329346   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2329347   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2329348   +END;
MPRINT(EM_DIAGRAM):   END;
2329349   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2329350   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2329351   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2329352   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2329353   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2329354   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2329355   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2329356   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2329357   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2329358   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2329359   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2329360   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2329361   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2329362   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2329363   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2329364   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2329365   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2329366   +END;
MPRINT(EM_DIAGRAM):   END;
2329367   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2329368   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2329369   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2329370   +drop
2329371   +H1x1_1
2329372   +H1x1_2
2329373   +H1x1_3
2329374   +H1x2_1
2329375   +H1x2_2
2329376   +H1x2_3
2329377   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x2_1 H1x2_2 H1x2_3 ;
2329378   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2329379   +* Renaming variables for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural8;
2329380   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2329381   +* Renaming Posterior variables for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural8;
2329382   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2329383   +drop AutoNeural8_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_P_DepVar1;
2329384   +AutoNeural8_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural8_P_DepVar1 = P_DepVar1;
2329385   +drop AutoNeural8_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_P_DepVar0;
2329386   +AutoNeural8_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural8_P_DepVar0 = P_DepVar0;
2329387   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2329388   +* Renaming Into variables for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural8;
2329389   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2329390   +length AutoNeural8_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural8_I_DepVar $32;
2329391   +drop AutoNeural8_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_I_DepVar;
2329392   +AutoNeural8_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural8_I_DepVar = I_DepVar;
2329393   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2329394   +* Renaming _WARN_ variable for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural8;
2329395   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2329396   +length AutoNeural8_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural8_WARN_ $4;
2329397   +drop AutoNeural8_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_WARN_;
2329398   +AutoNeural8_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural8_WARN_ = _WARN_;
2329399   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2329400   +* Ensmbl38: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Scoring Code of model 4 of 7;
2329401   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2329402   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2329403   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2329404   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2329405   +* NODE: AutoNeural10;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural10;
2329406   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2329407   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2329408   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2329409   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2329410   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2329411   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2329412   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2329413   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2329414   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2329415   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2329416   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2329417   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2329418   +LENGTH _WARN_ $4
2329419   +      F_DepVar  $ 12
2329420   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2329421   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2329422   +
2329423   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2329424   +
2329425   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2329426   +
2329427   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2329428   +
2329429   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2329430   +
2329431   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2329432   +
2329433   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2329434   +
2329435   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2329436   +
2329437   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2329438   +
2329439   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2329440   +
2329441   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2329442   +
2329443   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2329444   +
2329445   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2329446   +
2329447   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2329448   +
2329449   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2329450   +
2329451   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2329452   +
2329453   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2329454   +
2329455   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2329456   +
2329457   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2329458   +
2329459   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2329460   +
2329461   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2329462   +
2329463   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2329464   +
2329465   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2329466   +
2329467   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2329468   +
2329469   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2329470   +
2329471   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2329472   +
2329473   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2329474   +
2329475   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2329476   +
2329477   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2329478   +
2329479   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2329480   +
2329481   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2329482   +
2329483   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2329484   +
2329485   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2329486   +
2329487   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2329488   +
2329489   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2329490   +
2329491   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2329492   +
2329493   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2329494   +
2329495   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2329496   +
2329497   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2329498   +
2329499   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2329500   +
2329501   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2329502   +
2329503   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2329504   +
2329505   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2329506   +
2329507   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2329508   +
2329509   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2329510   +
2329511   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2329512   +
2329513   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2329514   +
2329515   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2329516   +
2329517   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2329518   +
2329519   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2329520   +
2329521   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
2329522   +
2329523   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
2329524   +
2329525   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
2329526   +
2329527   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2329528   +
2329529   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2329530   +
2329531   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2329532   +
2329533   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2329534   +
2329535   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2329536   +
2329537   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2329538   +
2329539   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2329540   +
2329541   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2329542   +
2329543   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2329544   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2329545   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2329546   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2329547   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2329548   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2329549   +end;
MPRINT(EM_DIAGRAM):   end;
2329550   +else do;
MPRINT(EM_DIAGRAM):   else do;
2329551   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2329552   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2329553   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2329554   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2329555   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2329556   +   end;
MPRINT(EM_DIAGRAM):   end;
2329557   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2329558   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2329559   +   end;
MPRINT(EM_DIAGRAM):   end;
2329560   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2329561   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2329562   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2329563   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2329564   +   end;
MPRINT(EM_DIAGRAM):   end;
2329565   +end;
MPRINT(EM_DIAGRAM):   end;
2329566   +
2329567   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2329568   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2329569   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2329570   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2329571   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2329572   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2329573   +end;
MPRINT(EM_DIAGRAM):   end;
2329574   +else do;
MPRINT(EM_DIAGRAM):   else do;
2329575   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2329576   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2329577   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2329578   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2329579   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2329580   +   end;
MPRINT(EM_DIAGRAM):   end;
2329581   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2329582   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2329583   +   end;
MPRINT(EM_DIAGRAM):   end;
2329584   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2329585   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2329586   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2329587   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2329588   +   end;
MPRINT(EM_DIAGRAM):   end;
2329589   +end;
MPRINT(EM_DIAGRAM):   end;
2329590   +
2329591   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2329592   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2329593   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2329594   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2329595   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2329596   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2329597   +end;
MPRINT(EM_DIAGRAM):   end;
2329598   +else do;
MPRINT(EM_DIAGRAM):   else do;
2329599   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2329600   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2329601   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2329602   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2329603   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2329604   +   end;
MPRINT(EM_DIAGRAM):   end;
2329605   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2329606   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2329607   +   end;
MPRINT(EM_DIAGRAM):   end;
2329608   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2329609   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2329610   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2329611   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2329612   +   end;
MPRINT(EM_DIAGRAM):   end;
2329613   +end;
MPRINT(EM_DIAGRAM):   end;
2329614   +
2329615   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2329616   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2329617   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2329618   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2329619   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2329620   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2329621   +end;
MPRINT(EM_DIAGRAM):   end;
2329622   +else do;
MPRINT(EM_DIAGRAM):   else do;
2329623   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2329624   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2329625   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2329626   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2329627   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2329628   +   end;
MPRINT(EM_DIAGRAM):   end;
2329629   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2329630   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2329631   +   end;
MPRINT(EM_DIAGRAM):   end;
2329632   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2329633   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2329634   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2329635   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2329636   +   end;
MPRINT(EM_DIAGRAM):   end;
2329637   +end;
MPRINT(EM_DIAGRAM):   end;
2329638   +
2329639   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2329640   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2329641   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2329642   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2329643   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2329644   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2329645   +end;
MPRINT(EM_DIAGRAM):   end;
2329646   +else do;
MPRINT(EM_DIAGRAM):   else do;
2329647   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2329648   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2329649   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2329650   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2329651   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2329652   +   end;
MPRINT(EM_DIAGRAM):   end;
2329653   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2329654   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2329655   +   end;
MPRINT(EM_DIAGRAM):   end;
2329656   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2329657   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2329658   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2329659   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2329660   +   end;
MPRINT(EM_DIAGRAM):   end;
2329661   +end;
MPRINT(EM_DIAGRAM):   end;
2329662   +
2329663   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2329664   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2329665   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2329666   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2329667   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2329668   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2329669   +end;
MPRINT(EM_DIAGRAM):   end;
2329670   +else do;
MPRINT(EM_DIAGRAM):   else do;
2329671   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2329672   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2329673   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2329674   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2329675   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2329676   +   end;
MPRINT(EM_DIAGRAM):   end;
2329677   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2329678   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2329679   +   end;
MPRINT(EM_DIAGRAM):   end;
2329680   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2329681   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2329682   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2329683   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2329684   +   end;
MPRINT(EM_DIAGRAM):   end;
2329685   +end;
MPRINT(EM_DIAGRAM):   end;
2329686   +
2329687   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2329688   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2329689   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2329690   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2329691   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2329692   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2329693   +end;
MPRINT(EM_DIAGRAM):   end;
2329694   +else do;
MPRINT(EM_DIAGRAM):   else do;
2329695   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2329696   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2329697   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2329698   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2329699   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2329700   +   end;
MPRINT(EM_DIAGRAM):   end;
2329701   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2329702   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2329703   +   end;
MPRINT(EM_DIAGRAM):   end;
2329704   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2329705   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2329706   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2329707   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2329708   +   end;
MPRINT(EM_DIAGRAM):   end;
2329709   +end;
MPRINT(EM_DIAGRAM):   end;
2329710   +
2329711   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2329712   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2329713   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2329714   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2329715   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2329716   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2329717   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2329718   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2329719   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2329720   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2329721   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2329722   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2329723   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2329724   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2329725   +end;
MPRINT(EM_DIAGRAM):   end;
2329726   +else do;
MPRINT(EM_DIAGRAM):   else do;
2329727   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2329728   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2329729   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2329730   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2329731   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2329732   +   end;
MPRINT(EM_DIAGRAM):   end;
2329733   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2329734   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2329735   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2329736   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2329737   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2329738   +   end;
MPRINT(EM_DIAGRAM):   end;
2329739   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2329740   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2329741   +   end;
MPRINT(EM_DIAGRAM):   end;
2329742   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2329743   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2329744   +   end;
MPRINT(EM_DIAGRAM):   end;
2329745   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2329746   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2329747   +   end;
MPRINT(EM_DIAGRAM):   end;
2329748   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2329749   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2329750   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2329751   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2329752   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2329753   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2329754   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2329755   +   end;
MPRINT(EM_DIAGRAM):   end;
2329756   +end;
MPRINT(EM_DIAGRAM):   end;
2329757   +
2329758   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2329759   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2329760   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2329761   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2329762   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2329763   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2329764   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2329765   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2329766   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2329767   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2329768   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2329769   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2329770   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2329771   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2329772   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2329773   +end;
MPRINT(EM_DIAGRAM):   end;
2329774   +else do;
MPRINT(EM_DIAGRAM):   else do;
2329775   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2329776   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2329777   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2329778   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2329779   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2329780   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2329781   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2329782   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2329783   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2329784   +         end;
MPRINT(EM_DIAGRAM):   end;
2329785   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2329786   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2329787   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2329788   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2329789   +            end;
MPRINT(EM_DIAGRAM):   end;
2329790   +         end;
MPRINT(EM_DIAGRAM):   end;
2329791   +      end;
MPRINT(EM_DIAGRAM):   end;
2329792   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2329793   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2329794   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2329795   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2329796   +         end;
MPRINT(EM_DIAGRAM):   end;
2329797   +      end;
MPRINT(EM_DIAGRAM):   end;
2329798   +   end;
MPRINT(EM_DIAGRAM):   end;
2329799   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2329800   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2329801   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2329802   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2329803   +      end;
MPRINT(EM_DIAGRAM):   end;
2329804   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2329805   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2329806   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2329807   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2329808   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2329809   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2329810   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2329811   +         end;
MPRINT(EM_DIAGRAM):   end;
2329812   +      end;
MPRINT(EM_DIAGRAM):   end;
2329813   +   end;
MPRINT(EM_DIAGRAM):   end;
2329814   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2329815   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2329816   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2329817   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2329818   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2329819   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2329820   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2329821   +   end;
MPRINT(EM_DIAGRAM):   end;
2329822   +end;
MPRINT(EM_DIAGRAM):   end;
2329823   +
2329824   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2329825   +*** Checking missing input Interval
2329826   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2329827   +
2329828   +IF NMISS(
2329829   +   AcceptedCmpTotal ,
2329830   +   Age ,
2329831   +   Frq ,
2329832   +   Income ,
2329833   +   Kidhome ,
2329834   +   Mnt ,
2329835   +   MntFishProducts ,
2329836   +   MntFruits ,
2329837   +   MntGoldProds ,
2329838   +   MntMeatProducts ,
2329839   +   MntSweetProducts ,
2329840   +   MntWines ,
2329841   +   MonthsAsCustomer ,
2329842   +   NumCatalogPurchases ,
2329843   +   NumDealsPurchases ,
2329844   +   NumDistPurchases ,
2329845   +   NumStorePurchases ,
2329846   +   NumWebPurchases ,
2329847   +   NumWebVisitsMonth ,
2329848   +   RFMstat ,
2329849   +   RMntFrq ,
2329850   +   Recency ,
2329851   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2329852   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2329853   +
2329854   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2329855   +END;
MPRINT(EM_DIAGRAM):   END;
2329856   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2329857   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2329858   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2329859   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2329860   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2329861   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2329862   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2329863   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2329864   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2329865   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2329866   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2329867   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2329868   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2329869   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2329870   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2329871   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2329872   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2329873   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2329874   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2329875   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2329876   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2329877   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2329878   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2329879   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2329880   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2329881   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2329882   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2329883   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2329884   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2329885   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2329886   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2329887   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2329888   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2329889   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2329890   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2329891   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2329892   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2329893   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2329894   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2329895   +END;
MPRINT(EM_DIAGRAM):   END;
2329896   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2329897   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2329898   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2329899   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2329900   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2329901   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2329902   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2329903   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2329904   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2329905   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2329906   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2329907   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2329908   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2329909   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2329910   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2329911   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2329912   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2329913   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2329914   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2329915   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2329916   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2329917   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2329918   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2329919   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2329920   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2329921   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2329922   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2329923   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2329924   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2329925   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2329926   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2329927   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2329928   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2329929   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2329930   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2329931   +   ELSE S_NumCatalogPurchases
2329932   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2329933   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2329934   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2329935   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2329936   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2329937   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2329938   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2329939   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2329940   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2329941   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2329942   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2329943   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2329944   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2329945   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2329946   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2329947   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2329948   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2329949   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2329950   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2329951   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2329952   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2329953   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2329954   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2329955   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2329956   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2329957   +END;
MPRINT(EM_DIAGRAM):   END;
2329958   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2329959   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2329960   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2329961   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2329962   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2329963   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2329964   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2329965   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2329966   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2329967   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2329968   +   H1x1_1  =     -1.5235159368138 * S_AcceptedCmpTotal
2329969   +          +     0.13941271308016 * S_Age  +    -0.84765157270503 * S_Frq
2329970   +          +    -0.89386555046676 * S_Income  +     1.62709236629244 *
2329971   +        S_Kidhome  +    -1.21416429819342 * S_Mnt  +    -1.95640488965637 *
2329972   +        S_MntFishProducts  +    -0.08621024993404 * S_MntFruits
2329973   +          +    -0.38536990009586 * S_MntGoldProds  +     3.12553097304637 *
2329974   +        S_MntMeatProducts  +    -2.50680711036653 * S_MntSweetProducts
2329975   +          +    -3.77770073626477 * S_MntWines  +     0.39118206604766 *
2329976   +        S_MonthsAsCustomer  +     1.80485993754239 * S_NumCatalogPurchases
2329977   +          +     3.21215425524619 * S_NumDealsPurchases
2329978   +          +     0.08695198777156 * S_NumDistPurchases
2329979   +          +    -2.58697971128295 * S_NumStorePurchases
2329980   +          +    -0.44431924796059 * S_NumWebPurchases
2329981   +          +     -1.4492698984921 * S_NumWebVisitsMonth
2329982   +          +     2.16652214648037 * S_RFMstat  +    -0.48027961131639 *
2329983   +        S_RMntFrq  +    -0.27206877070748 * S_Recency
2329984   +          +    -0.34774852853763 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.5235159368138 * S_AcceptedCmpTotal + 0.13941271308016 * 
S_Age + -0.84765157270503 * S_Frq + -0.89386555046676 * S_Income + 1.62709236629244 * 
S_Kidhome + -1.21416429819342 * S_Mnt + -1.95640488965637 * S_MntFishProducts + 
-0.08621024993404 * S_MntFruits + -0.38536990009586 * S_MntGoldProds + 3.12553097304637 * 
S_MntMeatProducts + -2.50680711036653 * S_MntSweetProducts + -3.77770073626477 * S_MntWines + 
0.39118206604766 * S_MonthsAsCustomer + 1.80485993754239 * S_NumCatalogPurchases + 
3.21215425524619 * S_NumDealsPurchases + 0.08695198777156 * S_NumDistPurchases + 
-2.58697971128295 * S_NumStorePurchases + -0.44431924796059 * S_NumWebPurchases + 
-1.4492698984921 * S_NumWebVisitsMonth + 2.16652214648037 * S_RFMstat + -0.48027961131639 * 
S_RMntFrq + -0.27206877070748 * S_Recency + -0.34774852853763 * S_Teenhome ;
2329985   +   H1x1_2  =     -0.5665707820209 * S_AcceptedCmpTotal
2329986   +          +    -1.33582859121223 * S_Age  +     0.90483024742522 * S_Frq
2329987   +          +    -2.00588558815165 * S_Income  +      3.0373198083895 *
2329988   +        S_Kidhome  +      0.4356905004225 * S_Mnt  +     0.19619626354366 *
2329989   +        S_MntFishProducts  +    -1.09111340184132 * S_MntFruits
2329990   +          +     0.36844676336289 * S_MntGoldProds  +    -2.23832561375429 *
2329991   +        S_MntMeatProducts  +    -0.18280081530069 * S_MntSweetProducts
2329992   +          +     2.11599309139107 * S_MntWines  +     0.68147940490709 *
2329993   +        S_MonthsAsCustomer  +    -0.73940648599397 * S_NumCatalogPurchases
2329994   +          +    -0.83844506398484 * S_NumDealsPurchases
2329995   +          +     0.60831936516804 * S_NumDistPurchases
2329996   +          +     1.79084087761626 * S_NumStorePurchases
2329997   +          +     1.17119196356453 * S_NumWebPurchases
2329998   +          +    -3.63586683518718 * S_NumWebVisitsMonth
2329999   +          +     0.60521990735996 * S_RFMstat  +     0.56036381019221 *
2330000   +        S_RMntFrq  +     3.84599118896159 * S_Recency
2330001   +          +     2.42091939246471 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5665707820209 * S_AcceptedCmpTotal + -1.33582859121223 * 
S_Age + 0.90483024742522 * S_Frq + -2.00588558815165 * S_Income + 3.0373198083895 * S_Kidhome 
+ 0.4356905004225 * S_Mnt + 0.19619626354366 * S_MntFishProducts + -1.09111340184132 * 
S_MntFruits + 0.36844676336289 * S_MntGoldProds + -2.23832561375429 * S_MntMeatProducts + 
-0.18280081530069 * S_MntSweetProducts + 2.11599309139107 * S_MntWines + 0.68147940490709 * 
S_MonthsAsCustomer + -0.73940648599397 * S_NumCatalogPurchases + -0.83844506398484 * 
S_NumDealsPurchases + 0.60831936516804 * S_NumDistPurchases + 1.79084087761626 * 
S_NumStorePurchases + 1.17119196356453 * S_NumWebPurchases + -3.63586683518718 * 
S_NumWebVisitsMonth + 0.60521990735996 * S_RFMstat + 0.56036381019221 * S_RMntFrq + 
3.84599118896159 * S_Recency + 2.42091939246471 * S_Teenhome ;
2330002   +   H1x1_3  =    -2.34864034635966 * S_AcceptedCmpTotal
2330003   +          +     0.38417502023066 * S_Age  +     0.18241442054661 * S_Frq
2330004   +          +    -0.36643054878492 * S_Income  +    -0.01464967964014 *
2330005   +        S_Kidhome  +     0.13084033882631 * S_Mnt  +     1.43066752801424 *
2330006   +        S_MntFishProducts  +     0.30678881611098 * S_MntFruits
2330007   +          +    -0.35038082288662 * S_MntGoldProds  +    -6.79650673935808 *
2330008   +        S_MntMeatProducts  +    -0.35154740308081 * S_MntSweetProducts
2330009   +          +     4.53406963590593 * S_MntWines  +     0.35082802515055 *
2330010   +        S_MonthsAsCustomer  +    -1.62489937965567 * S_NumCatalogPurchases
2330011   +          +    -0.31484031572628 * S_NumDealsPurchases
2330012   +          +    -0.18273941035679 * S_NumDistPurchases
2330013   +          +     0.99501789733882 * S_NumStorePurchases
2330014   +          +     1.32014078829379 * S_NumWebPurchases
2330015   +          +    -1.34393498450215 * S_NumWebVisitsMonth
2330016   +          +    -0.93549119966022 * S_RFMstat  +    -1.74825390192193 *
2330017   +        S_RMntFrq  +     0.84406941726743 * S_Recency
2330018   +          +     -0.5004540381333 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.34864034635966 * S_AcceptedCmpTotal + 0.38417502023066 * 
S_Age + 0.18241442054661 * S_Frq + -0.36643054878492 * S_Income + -0.01464967964014 * 
S_Kidhome + 0.13084033882631 * S_Mnt + 1.43066752801424 * S_MntFishProducts + 0.30678881611098 
* S_MntFruits + -0.35038082288662 * S_MntGoldProds + -6.79650673935808 * S_MntMeatProducts + 
-0.35154740308081 * S_MntSweetProducts + 4.53406963590593 * S_MntWines + 0.35082802515055 * 
S_MonthsAsCustomer + -1.62489937965567 * S_NumCatalogPurchases + -0.31484031572628 * 
S_NumDealsPurchases + -0.18273941035679 * S_NumDistPurchases + 0.99501789733882 * 
S_NumStorePurchases + 1.32014078829379 * S_NumWebPurchases + -1.34393498450215 * 
S_NumWebVisitsMonth + -0.93549119966022 * S_RFMstat + -1.74825390192193 * S_RMntFrq + 
0.84406941726743 * S_Recency + -0.5004540381333 * S_Teenhome ;
2330019   +   H1x1_4  =     0.46772023050431 * S_AcceptedCmpTotal
2330020   +          +    -0.64609651992636 * S_Age  +     0.65433283816167 * S_Frq
2330021   +          +     0.97922442633265 * S_Income  +    -0.37705204232056 *
2330022   +        S_Kidhome  +     0.00937752600299 * S_Mnt  +     -0.6082843846013 *
2330023   +        S_MntFishProducts  +     -0.6227107898918 * S_MntFruits
2330024   +          +      0.0291421224006 * S_MntGoldProds  +     1.09748402313736 *
2330025   +        S_MntMeatProducts  +     0.00604619863622 * S_MntSweetProducts
2330026   +          +    -0.74684537570529 * S_MntWines  +    -0.00266569003481 *
2330027   +        S_MonthsAsCustomer  +     2.01081657735872 * S_NumCatalogPurchases
2330028   +          +     1.19658719134196 * S_NumDealsPurchases
2330029   +          +     0.87478204472986 * S_NumDistPurchases
2330030   +          +    -0.20635856288784 * S_NumStorePurchases
2330031   +          +    -0.89927356974242 * S_NumWebPurchases
2330032   +          +     2.92285244132576 * S_NumWebVisitsMonth
2330033   +          +    -0.10913907245142 * S_RFMstat  +     1.64233441899256 *
2330034   +        S_RMntFrq  +    -3.64945971202322 * S_Recency
2330035   +          +    -1.78841346993558 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46772023050431 * S_AcceptedCmpTotal + -0.64609651992636 * 
S_Age + 0.65433283816167 * S_Frq + 0.97922442633265 * S_Income + -0.37705204232056 * S_Kidhome 
+ 0.00937752600299 * S_Mnt + -0.6082843846013 * S_MntFishProducts + -0.6227107898918 * 
S_MntFruits + 0.0291421224006 * S_MntGoldProds + 1.09748402313736 * S_MntMeatProducts + 
0.00604619863622 * S_MntSweetProducts + -0.74684537570529 * S_MntWines + -0.00266569003481 * 
S_MonthsAsCustomer + 2.01081657735872 * S_NumCatalogPurchases + 1.19658719134196 * 
S_NumDealsPurchases + 0.87478204472986 * S_NumDistPurchases + -0.20635856288784 * 
S_NumStorePurchases + -0.89927356974242 * S_NumWebPurchases + 2.92285244132576 * 
S_NumWebVisitsMonth + -0.10913907245142 * S_RFMstat + 1.64233441899256 * S_RMntFrq + 
-3.64945971202322 * S_Recency + -1.78841346993558 * S_Teenhome ;
2330036   +   H1x1_5  =    -1.22491918863941 * S_AcceptedCmpTotal
2330037   +          +     0.16201659993217 * S_Age  +     0.17189537824457 * S_Frq
2330038   +          +    -0.87922900323563 * S_Income  +    -0.79268410231108 *
2330039   +        S_Kidhome  +     0.62793961676074 * S_Mnt  +     0.20877761882787 *
2330040   +        S_MntFishProducts  +     0.99367872286661 * S_MntFruits
2330041   +          +     -0.4347564565882 * S_MntGoldProds  +    -0.16203279329295 *
2330042   +        S_MntMeatProducts  +     0.81409215344356 * S_MntSweetProducts
2330043   +          +     1.33482971563984 * S_MntWines  +    -1.17441882196058 *
2330044   +        S_MonthsAsCustomer  +    -1.72330829533107 * S_NumCatalogPurchases
2330045   +          +       -2.32617124568 * S_NumDealsPurchases
2330046   +          +    -0.56589187730672 * S_NumDistPurchases
2330047   +          +     1.07062299863482 * S_NumStorePurchases
2330048   +          +     0.30077273739578 * S_NumWebPurchases
2330049   +          +    -1.67745421915317 * S_NumWebVisitsMonth
2330050   +          +      0.0530074713265 * S_RFMstat  +    -0.55969729655382 *
2330051   +        S_RMntFrq  +     1.32196704233234 * S_Recency
2330052   +          +     1.05470622089613 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.22491918863941 * S_AcceptedCmpTotal + 0.16201659993217 * 
S_Age + 0.17189537824457 * S_Frq + -0.87922900323563 * S_Income + -0.79268410231108 * 
S_Kidhome + 0.62793961676074 * S_Mnt + 0.20877761882787 * S_MntFishProducts + 0.99367872286661 
* S_MntFruits + -0.4347564565882 * S_MntGoldProds + -0.16203279329295 * S_MntMeatProducts + 
0.81409215344356 * S_MntSweetProducts + 1.33482971563984 * S_MntWines + -1.17441882196058 * 
S_MonthsAsCustomer + -1.72330829533107 * S_NumCatalogPurchases + -2.32617124568 * 
S_NumDealsPurchases + -0.56589187730672 * S_NumDistPurchases + 1.07062299863482 * 
S_NumStorePurchases + 0.30077273739578 * S_NumWebPurchases + -1.67745421915317 * 
S_NumWebVisitsMonth + 0.0530074713265 * S_RFMstat + -0.55969729655382 * S_RMntFrq + 
1.32196704233234 * S_Recency + 1.05470622089613 * S_Teenhome ;
2330053   +   H1x1_1  = H1x1_1  +     0.19875423759582 * AcceptedCmp10
2330054   +          +    -1.84163905120352 * AcceptedCmp20  +    -1.63149345314696 *
2330055   +        AcceptedCmp30  +    -1.52652349127913 * AcceptedCmp40
2330056   +          +    -0.97663634905647 * AcceptedCmp50  +    -0.94352222509088 *
2330057   +        Complain0  +    -0.63297203617355 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.19875423759582 * AcceptedCmp10 + -1.84163905120352 * 
AcceptedCmp20 + -1.63149345314696 * AcceptedCmp30 + -1.52652349127913 * AcceptedCmp40 + 
-0.97663634905647 * AcceptedCmp50 + -0.94352222509088 * Complain0 + -0.63297203617355 * 
HigherEducationBinary0 ;
2330058   +   H1x1_2  = H1x1_2  +      0.0505791781839 * AcceptedCmp10
2330059   +          +    -0.19407965320143 * AcceptedCmp20  +     0.35537657271506 *
2330060   +        AcceptedCmp30  +    -0.84577216347728 * AcceptedCmp40
2330061   +          +     1.73085566880686 * AcceptedCmp50  +     0.05800586053869 *
2330062   +        Complain0  +    -0.62505561129469 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0505791781839 * AcceptedCmp10 + -0.19407965320143 * 
AcceptedCmp20 + 0.35537657271506 * AcceptedCmp30 + -0.84577216347728 * AcceptedCmp40 + 
1.73085566880686 * AcceptedCmp50 + 0.05800586053869 * Complain0 + -0.62505561129469 * 
HigherEducationBinary0 ;
2330063   +   H1x1_3  = H1x1_3  +     0.54825581966403 * AcceptedCmp10
2330064   +          +     -0.0966204838125 * AcceptedCmp20  +    -1.31707923763053 *
2330065   +        AcceptedCmp30  +    -1.21021077486757 * AcceptedCmp40
2330066   +          +     3.29102250037389 * AcceptedCmp50  +    -0.16383687725206 *
2330067   +        Complain0  +     0.00651446514934 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.54825581966403 * AcceptedCmp10 + -0.0966204838125 * 
AcceptedCmp20 + -1.31707923763053 * AcceptedCmp30 + -1.21021077486757 * AcceptedCmp40 + 
3.29102250037389 * AcceptedCmp50 + -0.16383687725206 * Complain0 + 0.00651446514934 * 
HigherEducationBinary0 ;
2330068   +   H1x1_4  = H1x1_4  +    -1.18573650260336 * AcceptedCmp10
2330069   +          +    -1.73968979068234 * AcceptedCmp20  +    -1.31277698137778 *
2330070   +        AcceptedCmp30  +    -1.74346538593922 * AcceptedCmp40
2330071   +          +    -0.72543919818299 * AcceptedCmp50  +    -0.06328353200384 *
2330072   +        Complain0  +     0.74828735398796 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.18573650260336 * AcceptedCmp10 + -1.73968979068234 
* AcceptedCmp20 + -1.31277698137778 * AcceptedCmp30 + -1.74346538593922 * AcceptedCmp40 + 
-0.72543919818299 * AcceptedCmp50 + -0.06328353200384 * Complain0 + 0.74828735398796 * 
HigherEducationBinary0 ;
2330073   +   H1x1_5  = H1x1_5  +    -0.19622185523754 * AcceptedCmp10
2330074   +          +     -0.4643498903813 * AcceptedCmp20  +     0.69293644934542 *
2330075   +        AcceptedCmp30  +     0.23077838801355 * AcceptedCmp40
2330076   +          +     0.53061813608476 * AcceptedCmp50  +    -0.56870999936869 *
2330077   +        Complain0  +      0.5917990310858 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.19622185523754 * AcceptedCmp10 + -0.4643498903813 * 
AcceptedCmp20 + 0.69293644934542 * AcceptedCmp30 + 0.23077838801355 * AcceptedCmp40 + 
0.53061813608476 * AcceptedCmp50 + -0.56870999936869 * Complain0 + 0.5917990310858 * 
HigherEducationBinary0 ;
2330078   +   H1x1_1  = H1x1_1  +     1.01422000032629 * Education2n_Cycle
2330079   +          +    -0.77619298826287 * EducationBasic  +     0.35633748974614 *
2330080   +        EducationGraduation  +     0.98491516107588 * EducationMaster
2330081   +          +    -0.27797737429678 * Marital_StatusDivorced
2330082   +          +    -0.08137635862327 * Marital_StatusMarried
2330083   +          +     0.06275411820495 * Marital_StatusSingle
2330084   +          +    -0.19979743343415 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.01422000032629 * Education2n_Cycle + 
-0.77619298826287 * EducationBasic + 0.35633748974614 * EducationGraduation + 0.98491516107588 
* EducationMaster + -0.27797737429678 * Marital_StatusDivorced + -0.08137635862327 * 
Marital_StatusMarried + 0.06275411820495 * Marital_StatusSingle + -0.19979743343415 * 
Marital_StatusTogether ;
2330085   +   H1x1_2  = H1x1_2  +    -0.66224206017124 * Education2n_Cycle
2330086   +          +     0.80729589186486 * EducationBasic  +     0.75931615755998 *
2330087   +        EducationGraduation  +    -0.05470462753112 * EducationMaster
2330088   +          +     0.05151426841441 * Marital_StatusDivorced
2330089   +          +     1.19165082030442 * Marital_StatusMarried
2330090   +          +    -1.08257080662611 * Marital_StatusSingle
2330091   +          +     0.13534863375625 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.66224206017124 * Education2n_Cycle + 
0.80729589186486 * EducationBasic + 0.75931615755998 * EducationGraduation + -0.05470462753112 
* EducationMaster + 0.05151426841441 * Marital_StatusDivorced + 1.19165082030442 * 
Marital_StatusMarried + -1.08257080662611 * Marital_StatusSingle + 0.13534863375625 * 
Marital_StatusTogether ;
2330092   +   H1x1_3  = H1x1_3  +     0.20065577451105 * Education2n_Cycle
2330093   +          +    -0.14205714608311 * EducationBasic  +    -0.07077711368393 *
2330094   +        EducationGraduation  +     0.40262329710793 * EducationMaster
2330095   +          +      0.0238206459022 * Marital_StatusDivorced
2330096   +          +     -0.4653244204261 * Marital_StatusMarried
2330097   +          +     0.13051613619882 * Marital_StatusSingle
2330098   +          +    -0.35951366919755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.20065577451105 * Education2n_Cycle + 
-0.14205714608311 * EducationBasic + -0.07077711368393 * EducationGraduation + 
0.40262329710793 * EducationMaster + 0.0238206459022 * Marital_StatusDivorced + 
-0.4653244204261 * Marital_StatusMarried + 0.13051613619882 * Marital_StatusSingle + 
-0.35951366919755 * Marital_StatusTogether ;
2330099   +   H1x1_4  = H1x1_4  +     -0.8555672630555 * Education2n_Cycle
2330100   +          +     0.58439980233621 * EducationBasic  +     0.04784356342853 *
2330101   +        EducationGraduation  +    -0.79764992264249 * EducationMaster
2330102   +          +     -0.7449356409222 * Marital_StatusDivorced
2330103   +          +    -1.46604673521535 * Marital_StatusMarried
2330104   +          +     0.74484771688818 * Marital_StatusSingle
2330105   +          +    -1.91273009779071 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.8555672630555 * Education2n_Cycle + 
0.58439980233621 * EducationBasic + 0.04784356342853 * EducationGraduation + -0.79764992264249 
* EducationMaster + -0.7449356409222 * Marital_StatusDivorced + -1.46604673521535 * 
Marital_StatusMarried + 0.74484771688818 * Marital_StatusSingle + -1.91273009779071 * 
Marital_StatusTogether ;
2330106   +   H1x1_5  = H1x1_5  +    -0.45561096683674 * Education2n_Cycle
2330107   +          +    -0.08389156101858 * EducationBasic  +    -1.24281299616343 *
2330108   +        EducationGraduation  +    -0.00999807517226 * EducationMaster
2330109   +          +    -3.68044980584423 * Marital_StatusDivorced
2330110   +          +     3.14587407902338 * Marital_StatusMarried
2330111   +          +    -2.66118132753024 * Marital_StatusSingle
2330112   +          +     3.50991640149914 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.45561096683674 * Education2n_Cycle + 
-0.08389156101858 * EducationBasic + -1.24281299616343 * EducationGraduation + 
-0.00999807517226 * EducationMaster + -3.68044980584423 * Marital_StatusDivorced + 
3.14587407902338 * Marital_StatusMarried + -2.66118132753024 * Marital_StatusSingle + 
3.50991640149914 * Marital_StatusTogether ;
2330113   +   H1x1_1  =    -2.87464368543529 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.87464368543529 + H1x1_1 ;
2330114   +   H1x1_2  =     0.69745433976458 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.69745433976458 + H1x1_2 ;
2330115   +   H1x1_3  =    -0.71895677211617 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.71895677211617 + H1x1_3 ;
2330116   +   H1x1_4  =    -3.07619671976178 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.07619671976178 + H1x1_4 ;
2330117   +   H1x1_5  =    -1.74345318000473 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.74345318000473 + H1x1_5 ;
2330118   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2330119   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2330120   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2330121   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
2330122   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
2330123   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
2330124   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
2330125   +END;
MPRINT(EM_DIAGRAM):   END;
2330126   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2330127   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2330128   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2330129   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2330130   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2330131   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2330132   +END;
MPRINT(EM_DIAGRAM):   END;
2330133   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2330134   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2330135   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2330136   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2330137   +   H1x2_1  =     0.02206354442682 * S_AcceptedCmpTotal
2330138   +          +    -1.34753268833642 * S_Age  +    -2.08377331969695 * S_Frq
2330139   +          +    -1.39854535380539 * S_Income  +     2.13620611759545 *
2330140   +        S_Kidhome  +    -1.50515365217324 * S_Mnt  +     0.85499321862984 *
2330141   +        S_MntFishProducts  +    -1.17732452790345 * S_MntFruits
2330142   +          +     1.52355640622249 * S_MntGoldProds  +     1.31854239360457 *
2330143   +        S_MntMeatProducts  +    -0.03265851293389 * S_MntSweetProducts
2330144   +          +     2.18666242847435 * S_MntWines  +     0.08246249957908 *
2330145   +        S_MonthsAsCustomer  +    -1.06901902236609 * S_NumCatalogPurchases
2330146   +          +     0.89261880438741 * S_NumDealsPurchases
2330147   +          +    -1.61647413199892 * S_NumDistPurchases
2330148   +          +    -0.56304669045195 * S_NumStorePurchases
2330149   +          +      0.7766837080945 * S_NumWebPurchases
2330150   +          +     -2.2953497398902 * S_NumWebVisitsMonth
2330151   +          +    -3.34547809243199 * S_RFMstat  +     0.07311937799261 *
2330152   +        S_RMntFrq  +     -0.5786489917247 * S_Recency
2330153   +          +    -1.06532056361117 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.02206354442682 * S_AcceptedCmpTotal + -1.34753268833642 * 
S_Age + -2.08377331969695 * S_Frq + -1.39854535380539 * S_Income + 2.13620611759545 * 
S_Kidhome + -1.50515365217324 * S_Mnt + 0.85499321862984 * S_MntFishProducts + 
-1.17732452790345 * S_MntFruits + 1.52355640622249 * S_MntGoldProds + 1.31854239360457 * 
S_MntMeatProducts + -0.03265851293389 * S_MntSweetProducts + 2.18666242847435 * S_MntWines + 
0.08246249957908 * S_MonthsAsCustomer + -1.06901902236609 * S_NumCatalogPurchases + 
0.89261880438741 * S_NumDealsPurchases + -1.61647413199892 * S_NumDistPurchases + 
-0.56304669045195 * S_NumStorePurchases + 0.7766837080945 * S_NumWebPurchases + 
-2.2953497398902 * S_NumWebVisitsMonth + -3.34547809243199 * S_RFMstat + 0.07311937799261 * 
S_RMntFrq + -0.5786489917247 * S_Recency + -1.06532056361117 * S_Teenhome ;
2330154   +   H1x2_2  =      0.0341880757331 * S_AcceptedCmpTotal
2330155   +          +     0.72034771315738 * S_Age  +     0.64155966340389 * S_Frq
2330156   +          +    -1.06570008729492 * S_Income  +    -1.84532938869849 *
2330157   +        S_Kidhome  +     0.94433555965982 * S_Mnt  +     1.23831916074831 *
2330158   +        S_MntFishProducts  +     1.33415870886475 * S_MntFruits
2330159   +          +    -0.51253922893993 * S_MntGoldProds  +     0.02241594009025 *
2330160   +        S_MntMeatProducts  +     -1.2811169586741 * S_MntSweetProducts
2330161   +          +     1.96686773881953 * S_MntWines  +     1.44655944802715 *
2330162   +        S_MonthsAsCustomer  +    -1.18627316384798 * S_NumCatalogPurchases
2330163   +          +     1.02431289724643 * S_NumDealsPurchases
2330164   +          +    -0.90960173637405 * S_NumDistPurchases
2330165   +          +     1.24283490404772 * S_NumStorePurchases
2330166   +          +     1.23072413154592 * S_NumWebPurchases
2330167   +          +    -0.21533378473931 * S_NumWebVisitsMonth
2330168   +          +     1.26438704884008 * S_RFMstat  +      0.0014042871018 *
2330169   +        S_RMntFrq  +     0.32357651423135 * S_Recency
2330170   +          +    -0.49834512433407 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.0341880757331 * S_AcceptedCmpTotal + 0.72034771315738 * S_Age 
+ 0.64155966340389 * S_Frq + -1.06570008729492 * S_Income + -1.84532938869849 * S_Kidhome + 
0.94433555965982 * S_Mnt + 1.23831916074831 * S_MntFishProducts + 1.33415870886475 * 
S_MntFruits + -0.51253922893993 * S_MntGoldProds + 0.02241594009025 * S_MntMeatProducts + 
-1.2811169586741 * S_MntSweetProducts + 1.96686773881953 * S_MntWines + 1.44655944802715 * 
S_MonthsAsCustomer + -1.18627316384798 * S_NumCatalogPurchases + 1.02431289724643 * 
S_NumDealsPurchases + -0.90960173637405 * S_NumDistPurchases + 1.24283490404772 * 
S_NumStorePurchases + 1.23072413154592 * S_NumWebPurchases + -0.21533378473931 * 
S_NumWebVisitsMonth + 1.26438704884008 * S_RFMstat + 0.0014042871018 * S_RMntFrq + 
0.32357651423135 * S_Recency + -0.49834512433407 * S_Teenhome ;
2330171   +   H1x2_3  =    -0.57066024275015 * S_AcceptedCmpTotal
2330172   +          +     0.16615358153136 * S_Age  +    -0.60017461612499 * S_Frq
2330173   +          +    -0.21195793925019 * S_Income  +    -0.36049126996499 *
2330174   +        S_Kidhome  +     0.97458542661118 * S_Mnt  +     0.62279162661518 *
2330175   +        S_MntFishProducts  +    -0.44715765367363 * S_MntFruits
2330176   +          +     0.91519163455361 * S_MntGoldProds  +     1.07312113398768 *
2330177   +        S_MntMeatProducts  +    -1.61967017526055 * S_MntSweetProducts
2330178   +          +    -1.88327677412185 * S_MntWines  +    -1.67067768979245 *
2330179   +        S_MonthsAsCustomer  +    -0.64725516463464 * S_NumCatalogPurchases
2330180   +          +    -0.26249596122198 * S_NumDealsPurchases
2330181   +          +    -0.63328519804758 * S_NumDistPurchases
2330182   +          +    -0.88467503575886 * S_NumStorePurchases
2330183   +          +    -0.83120537310738 * S_NumWebPurchases
2330184   +          +     1.40072282351719 * S_NumWebVisitsMonth
2330185   +          +     1.42591300760984 * S_RFMstat  +     1.93593865100837 *
2330186   +        S_RMntFrq  +     -1.2794275536508 * S_Recency
2330187   +          +    -0.78582664529339 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.57066024275015 * S_AcceptedCmpTotal + 0.16615358153136 * 
S_Age + -0.60017461612499 * S_Frq + -0.21195793925019 * S_Income + -0.36049126996499 * 
S_Kidhome + 0.97458542661118 * S_Mnt + 0.62279162661518 * S_MntFishProducts + 
-0.44715765367363 * S_MntFruits + 0.91519163455361 * S_MntGoldProds + 1.07312113398768 * 
S_MntMeatProducts + -1.61967017526055 * S_MntSweetProducts + -1.88327677412185 * S_MntWines + 
-1.67067768979245 * S_MonthsAsCustomer + -0.64725516463464 * S_NumCatalogPurchases + 
-0.26249596122198 * S_NumDealsPurchases + -0.63328519804758 * S_NumDistPurchases + 
-0.88467503575886 * S_NumStorePurchases + -0.83120537310738 * S_NumWebPurchases + 
1.40072282351719 * S_NumWebVisitsMonth + 1.42591300760984 * S_RFMstat + 1.93593865100837 * 
S_RMntFrq + -1.2794275536508 * S_Recency + -0.78582664529339 * S_Teenhome ;
2330188   +   H1x2_4  =     0.70159995537759 * S_AcceptedCmpTotal
2330189   +          +    -0.70199351793792 * S_Age  +     1.63573967285806 * S_Frq
2330190   +          +     -0.1930098634567 * S_Income  +    -0.43173926207337 *
2330191   +        S_Kidhome  +    -0.45239271926178 * S_Mnt  +    -0.14139816383874 *
2330192   +        S_MntFishProducts  +    -0.70568635660703 * S_MntFruits
2330193   +          +     1.68796268038024 * S_MntGoldProds  +     0.80481626355934 *
2330194   +        S_MntMeatProducts  +     0.29831384975096 * S_MntSweetProducts
2330195   +          +    -0.50792336172825 * S_MntWines  +     0.80425149159678 *
2330196   +        S_MonthsAsCustomer  +    -2.26171302044375 * S_NumCatalogPurchases
2330197   +          +     1.30167361451945 * S_NumDealsPurchases
2330198   +          +     1.45457613716235 * S_NumDistPurchases
2330199   +          +    -0.40226463685252 * S_NumStorePurchases
2330200   +          +     0.36369161683572 * S_NumWebPurchases
2330201   +          +    -2.65684851610403 * S_NumWebVisitsMonth
2330202   +          +    -1.14810413235545 * S_RFMstat  +       1.291857215261 *
2330203   +        S_RMntFrq  +     1.36572595403825 * S_Recency
2330204   +          +    -0.54958418574963 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.70159995537759 * S_AcceptedCmpTotal + -0.70199351793792 * 
S_Age + 1.63573967285806 * S_Frq + -0.1930098634567 * S_Income + -0.43173926207337 * S_Kidhome 
+ -0.45239271926178 * S_Mnt + -0.14139816383874 * S_MntFishProducts + -0.70568635660703 * 
S_MntFruits + 1.68796268038024 * S_MntGoldProds + 0.80481626355934 * S_MntMeatProducts + 
0.29831384975096 * S_MntSweetProducts + -0.50792336172825 * S_MntWines + 0.80425149159678 * 
S_MonthsAsCustomer + -2.26171302044375 * S_NumCatalogPurchases + 1.30167361451945 * 
S_NumDealsPurchases + 1.45457613716235 * S_NumDistPurchases + -0.40226463685252 * 
S_NumStorePurchases + 0.36369161683572 * S_NumWebPurchases + -2.65684851610403 * 
S_NumWebVisitsMonth + -1.14810413235545 * S_RFMstat + 1.291857215261 * S_RMntFrq + 
1.36572595403825 * S_Recency + -0.54958418574963 * S_Teenhome ;
2330205   +   H1x2_5  =    -1.00456225444665 * S_AcceptedCmpTotal
2330206   +          +     0.19033874303798 * S_Age  +    -0.62578451616415 * S_Frq
2330207   +          +    -0.96647190269426 * S_Income  +     1.77002676974464 *
2330208   +        S_Kidhome  +    -0.53816249322166 * S_Mnt  +     0.21322270253871 *
2330209   +        S_MntFishProducts  +     0.84210241961105 * S_MntFruits
2330210   +          +     0.44153678515007 * S_MntGoldProds  +    -0.23120999196747 *
2330211   +        S_MntMeatProducts  +     0.62950730283125 * S_MntSweetProducts
2330212   +          +    -0.64043011108056 * S_MntWines  +    -2.74922907599662 *
2330213   +        S_MonthsAsCustomer  +     0.67939322758717 * S_NumCatalogPurchases
2330214   +          +    -0.54572162665338 * S_NumDealsPurchases
2330215   +          +      0.9607390449318 * S_NumDistPurchases
2330216   +          +    -0.03259470545754 * S_NumStorePurchases
2330217   +          +     0.19202241423412 * S_NumWebPurchases
2330218   +          +     0.61085831658456 * S_NumWebVisitsMonth
2330219   +          +    -0.08582160429243 * S_RFMstat  +     1.73862452808565 *
2330220   +        S_RMntFrq  +    -0.01216476188714 * S_Recency
2330221   +          +     -0.3304403270473 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.00456225444665 * S_AcceptedCmpTotal + 0.19033874303798 * 
S_Age + -0.62578451616415 * S_Frq + -0.96647190269426 * S_Income + 1.77002676974464 * 
S_Kidhome + -0.53816249322166 * S_Mnt + 0.21322270253871 * S_MntFishProducts + 
0.84210241961105 * S_MntFruits + 0.44153678515007 * S_MntGoldProds + -0.23120999196747 * 
S_MntMeatProducts + 0.62950730283125 * S_MntSweetProducts + -0.64043011108056 * S_MntWines + 
-2.74922907599662 * S_MonthsAsCustomer + 0.67939322758717 * S_NumCatalogPurchases + 
-0.54572162665338 * S_NumDealsPurchases + 0.9607390449318 * S_NumDistPurchases + 
-0.03259470545754 * S_NumStorePurchases + 0.19202241423412 * S_NumWebPurchases + 
0.61085831658456 * S_NumWebVisitsMonth + -0.08582160429243 * S_RFMstat + 1.73862452808565 * 
S_RMntFrq + -0.01216476188714 * S_Recency + -0.3304403270473 * S_Teenhome ;
2330222   +   H1x2_1  = H1x2_1  +     0.83453601566539 * AcceptedCmp10
2330223   +          +     0.59109136511077 * AcceptedCmp20  +     -0.9669340701943 *
2330224   +        AcceptedCmp30  +    -2.31468262956126 * AcceptedCmp40
2330225   +          +    -0.76277791850069 * AcceptedCmp50  +     0.30895289981412 *
2330226   +        Complain0  +       0.147233855837 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.83453601566539 * AcceptedCmp10 + 0.59109136511077 * 
AcceptedCmp20 + -0.9669340701943 * AcceptedCmp30 + -2.31468262956126 * AcceptedCmp40 + 
-0.76277791850069 * AcceptedCmp50 + 0.30895289981412 * Complain0 + 0.147233855837 * 
HigherEducationBinary0 ;
2330227   +   H1x2_2  = H1x2_2  +     0.42789425545567 * AcceptedCmp10
2330228   +          +     0.08505833889085 * AcceptedCmp20  +    -1.15112188313855 *
2330229   +        AcceptedCmp30  +    -1.24362486486214 * AcceptedCmp40
2330230   +          +     0.04131419116048 * AcceptedCmp50  +    -0.45255799355317 *
2330231   +        Complain0  +    -0.32616423192953 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.42789425545567 * AcceptedCmp10 + 0.08505833889085 * 
AcceptedCmp20 + -1.15112188313855 * AcceptedCmp30 + -1.24362486486214 * AcceptedCmp40 + 
0.04131419116048 * AcceptedCmp50 + -0.45255799355317 * Complain0 + -0.32616423192953 * 
HigherEducationBinary0 ;
2330232   +   H1x2_3  = H1x2_3  +    -0.03136360497649 * AcceptedCmp10
2330233   +          +     0.33867713207886 * AcceptedCmp20  +     0.05809342990544 *
2330234   +        AcceptedCmp30  +    -0.06416815079894 * AcceptedCmp40
2330235   +          +     1.14617960682421 * AcceptedCmp50  +    -0.82461320336041 *
2330236   +        Complain0  +     0.58944444655621 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.03136360497649 * AcceptedCmp10 + 0.33867713207886 * 
AcceptedCmp20 + 0.05809342990544 * AcceptedCmp30 + -0.06416815079894 * AcceptedCmp40 + 
1.14617960682421 * AcceptedCmp50 + -0.82461320336041 * Complain0 + 0.58944444655621 * 
HigherEducationBinary0 ;
2330237   +   H1x2_4  = H1x2_4  +    -1.12705500616438 * AcceptedCmp10
2330238   +          +      0.0487863004734 * AcceptedCmp20  +     1.30229008593765 *
2330239   +        AcceptedCmp30  +      0.1726718549662 * AcceptedCmp40
2330240   +          +     0.68443569845295 * AcceptedCmp50  +     2.39733248962228 *
2330241   +        Complain0  +      -0.620937291929 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.12705500616438 * AcceptedCmp10 + 0.0487863004734 * 
AcceptedCmp20 + 1.30229008593765 * AcceptedCmp30 + 0.1726718549662 * AcceptedCmp40 + 
0.68443569845295 * AcceptedCmp50 + 2.39733248962228 * Complain0 + -0.620937291929 * 
HigherEducationBinary0 ;
2330242   +   H1x2_5  = H1x2_5  +     1.42400460803453 * AcceptedCmp10
2330243   +          +    -1.22361480936625 * AcceptedCmp20  +     1.31090186367202 *
2330244   +        AcceptedCmp30  +    -1.40343404818254 * AcceptedCmp40
2330245   +          +    -0.57377230862494 * AcceptedCmp50  +     0.58622740778295 *
2330246   +        Complain0  +    -0.83222074319962 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.42400460803453 * AcceptedCmp10 + -1.22361480936625 * 
AcceptedCmp20 + 1.31090186367202 * AcceptedCmp30 + -1.40343404818254 * AcceptedCmp40 + 
-0.57377230862494 * AcceptedCmp50 + 0.58622740778295 * Complain0 + -0.83222074319962 * 
HigherEducationBinary0 ;
2330247   +   H1x2_1  = H1x2_1  +     1.56508379719546 * Education2n_Cycle
2330248   +          +     0.52302987210661 * EducationBasic  +     -0.0570045326497 *
2330249   +        EducationGraduation  +    -0.01838790774804 * EducationMaster
2330250   +          +    -2.32430245081383 * Marital_StatusDivorced
2330251   +          +    -0.09815511356796 * Marital_StatusMarried
2330252   +          +     0.13075504294551 * Marital_StatusSingle
2330253   +          +     -0.0278875765201 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.56508379719546 * Education2n_Cycle + 
0.52302987210661 * EducationBasic + -0.0570045326497 * EducationGraduation + -0.01838790774804 
* EducationMaster + -2.32430245081383 * Marital_StatusDivorced + -0.09815511356796 * 
Marital_StatusMarried + 0.13075504294551 * Marital_StatusSingle + -0.0278875765201 * 
Marital_StatusTogether ;
2330254   +   H1x2_2  = H1x2_2  +    -0.85592920992847 * Education2n_Cycle
2330255   +          +     0.93272618259957 * EducationBasic  +     0.48987674771079 *
2330256   +        EducationGraduation  +    -1.12454002820451 * EducationMaster
2330257   +          +    -0.65574603869224 * Marital_StatusDivorced
2330258   +          +     1.54672472575294 * Marital_StatusMarried
2330259   +          +    -1.59817602340208 * Marital_StatusSingle
2330260   +          +     1.94381954546813 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.85592920992847 * Education2n_Cycle + 
0.93272618259957 * EducationBasic + 0.48987674771079 * EducationGraduation + -1.12454002820451 
* EducationMaster + -0.65574603869224 * Marital_StatusDivorced + 1.54672472575294 * 
Marital_StatusMarried + -1.59817602340208 * Marital_StatusSingle + 1.94381954546813 * 
Marital_StatusTogether ;
2330261   +   H1x2_3  = H1x2_3  +     0.37093371596523 * Education2n_Cycle
2330262   +          +    -2.05531065359129 * EducationBasic  +     1.16090743585078 *
2330263   +        EducationGraduation  +     0.87547303889444 * EducationMaster
2330264   +          +    -0.50911604604781 * Marital_StatusDivorced
2330265   +          +     0.30403066135719 * Marital_StatusMarried
2330266   +          +      0.1026950879545 * Marital_StatusSingle
2330267   +          +     0.01000166524405 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.37093371596523 * Education2n_Cycle + 
-2.05531065359129 * EducationBasic + 1.16090743585078 * EducationGraduation + 0.87547303889444 
* EducationMaster + -0.50911604604781 * Marital_StatusDivorced + 0.30403066135719 * 
Marital_StatusMarried + 0.1026950879545 * Marital_StatusSingle + 0.01000166524405 * 
Marital_StatusTogether ;
2330268   +   H1x2_4  = H1x2_4  +     1.28509086202466 * Education2n_Cycle
2330269   +          +     0.07860157688162 * EducationBasic  +     0.24607672351689 *
2330270   +        EducationGraduation  +    -0.06009602645566 * EducationMaster
2330271   +          +     1.07371507133318 * Marital_StatusDivorced
2330272   +          +    -0.07097334129051 * Marital_StatusMarried
2330273   +          +    -0.48339718568621 * Marital_StatusSingle
2330274   +          +    -0.08900780355835 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.28509086202466 * Education2n_Cycle + 
0.07860157688162 * EducationBasic + 0.24607672351689 * EducationGraduation + -0.06009602645566 
* EducationMaster + 1.07371507133318 * Marital_StatusDivorced + -0.07097334129051 * 
Marital_StatusMarried + -0.48339718568621 * Marital_StatusSingle + -0.08900780355835 * 
Marital_StatusTogether ;
2330275   +   H1x2_5  = H1x2_5  +    -1.08109633810919 * Education2n_Cycle
2330276   +          +    -0.54966585100103 * EducationBasic  +      0.5388683065169 *
2330277   +        EducationGraduation  +     0.46960055830119 * EducationMaster
2330278   +          +     1.04342893515504 * Marital_StatusDivorced
2330279   +          +     1.16171312085032 * Marital_StatusMarried
2330280   +          +    -0.30201646939913 * Marital_StatusSingle
2330281   +          +     1.84122645884771 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -1.08109633810919 * Education2n_Cycle + 
-0.54966585100103 * EducationBasic + 0.5388683065169 * EducationGraduation + 0.46960055830119 
* EducationMaster + 1.04342893515504 * Marital_StatusDivorced + 1.16171312085032 * 
Marital_StatusMarried + -0.30201646939913 * Marital_StatusSingle + 1.84122645884771 * 
Marital_StatusTogether ;
2330282   +   H1x2_1  =     1.56970796025332 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.56970796025332 + H1x2_1 ;
2330283   +   H1x2_2  =    -0.11766478836824 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.11766478836824 + H1x2_2 ;
2330284   +   H1x2_3  =    -2.78218653641036 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -2.78218653641036 + H1x2_3 ;
2330285   +   H1x2_4  =     0.51979515224467 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.51979515224467 + H1x2_4 ;
2330286   +   H1x2_5  =     -0.4635890987824 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.4635890987824 + H1x2_5 ;
2330287   +END;
MPRINT(EM_DIAGRAM):   END;
2330288   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2330289   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2330290   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2330291   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2330292   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2330293   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2330294   +END;
MPRINT(EM_DIAGRAM):   END;
2330295   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2330296   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2330297   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2330298   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2330299   +   H1x3_1  =     0.04411772880581 * S_AcceptedCmpTotal
2330300   +          +    -1.62725197326682 * S_Age  +    -1.99668213406033 * S_Frq
2330301   +          +     -1.2265241921112 * S_Income  +     1.99702869958035 *
2330302   +        S_Kidhome  +    -1.46762539068512 * S_Mnt  +     0.97784534044189 *
2330303   +        S_MntFishProducts  +    -1.07945265688497 * S_MntFruits
2330304   +          +     2.09306294956674 * S_MntGoldProds  +     1.46219664114361 *
2330305   +        S_MntMeatProducts  +     0.10961158671991 * S_MntSweetProducts
2330306   +          +     2.03040669273977 * S_MntWines  +     0.16536646017211 *
2330307   +        S_MonthsAsCustomer  +    -0.88077951545076 * S_NumCatalogPurchases
2330308   +          +     1.32256781010645 * S_NumDealsPurchases
2330309   +          +    -1.43015438973619 * S_NumDistPurchases
2330310   +          +    -0.63489289584421 * S_NumStorePurchases
2330311   +          +     0.90508699686841 * S_NumWebPurchases
2330312   +          +    -2.24234858061014 * S_NumWebVisitsMonth
2330313   +          +     -2.9988027991146 * S_RFMstat  +     0.35987461993699 *
2330314   +        S_RMntFrq  +    -1.09317668626142 * S_Recency
2330315   +          +    -1.09925349438658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.04411772880581 * S_AcceptedCmpTotal + -1.62725197326682 * 
S_Age + -1.99668213406033 * S_Frq + -1.2265241921112 * S_Income + 1.99702869958035 * S_Kidhome 
+ -1.46762539068512 * S_Mnt + 0.97784534044189 * S_MntFishProducts + -1.07945265688497 * 
S_MntFruits + 2.09306294956674 * S_MntGoldProds + 1.46219664114361 * S_MntMeatProducts + 
0.10961158671991 * S_MntSweetProducts + 2.03040669273977 * S_MntWines + 0.16536646017211 * 
S_MonthsAsCustomer + -0.88077951545076 * S_NumCatalogPurchases + 1.32256781010645 * 
S_NumDealsPurchases + -1.43015438973619 * S_NumDistPurchases + -0.63489289584421 * 
S_NumStorePurchases + 0.90508699686841 * S_NumWebPurchases + -2.24234858061014 * 
S_NumWebVisitsMonth + -2.9988027991146 * S_RFMstat + 0.35987461993699 * S_RMntFrq + 
-1.09317668626142 * S_Recency + -1.09925349438658 * S_Teenhome ;
2330316   +   H1x3_2  =     0.10522923391314 * S_AcceptedCmpTotal
2330317   +          +     0.68417479453112 * S_Age  +     0.46966162186743 * S_Frq
2330318   +          +    -1.21537535753115 * S_Income  +    -1.87423294109672 *
2330319   +        S_Kidhome  +     0.76913864731495 * S_Mnt  +     1.08535778796502 *
2330320   +        S_MntFishProducts  +     1.27743864099826 * S_MntFruits
2330321   +          +     -0.3186089651882 * S_MntGoldProds  +    -0.00224333051647 *
2330322   +        S_MntMeatProducts  +    -1.28169616734092 * S_MntSweetProducts
2330323   +          +     1.67350500234032 * S_MntWines  +     1.09584504562467 *
2330324   +        S_MonthsAsCustomer  +    -1.45467876727494 * S_NumCatalogPurchases
2330325   +          +     0.85965187264096 * S_NumDealsPurchases
2330326   +          +    -1.15239933286756 * S_NumDistPurchases
2330327   +          +     1.20800889102387 * S_NumStorePurchases
2330328   +          +     1.08790389130242 * S_NumWebPurchases
2330329   +          +    -0.13665551161149 * S_NumWebVisitsMonth
2330330   +          +     1.02103499612659 * S_RFMstat  +    -0.12980097143044 *
2330331   +        S_RMntFrq  +     0.65854311654256 * S_Recency
2330332   +          +    -0.60999209572192 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.10522923391314 * S_AcceptedCmpTotal + 0.68417479453112 * 
S_Age + 0.46966162186743 * S_Frq + -1.21537535753115 * S_Income + -1.87423294109672 * 
S_Kidhome + 0.76913864731495 * S_Mnt + 1.08535778796502 * S_MntFishProducts + 1.27743864099826 
* S_MntFruits + -0.3186089651882 * S_MntGoldProds + -0.00224333051647 * S_MntMeatProducts + 
-1.28169616734092 * S_MntSweetProducts + 1.67350500234032 * S_MntWines + 1.09584504562467 * 
S_MonthsAsCustomer + -1.45467876727494 * S_NumCatalogPurchases + 0.85965187264096 * 
S_NumDealsPurchases + -1.15239933286756 * S_NumDistPurchases + 1.20800889102387 * 
S_NumStorePurchases + 1.08790389130242 * S_NumWebPurchases + -0.13665551161149 * 
S_NumWebVisitsMonth + 1.02103499612659 * S_RFMstat + -0.12980097143044 * S_RMntFrq + 
0.65854311654256 * S_Recency + -0.60999209572192 * S_Teenhome ;
2330333   +   H1x3_3  =    -0.72575004293074 * S_AcceptedCmpTotal
2330334   +          +     0.34932839743259 * S_Age  +     -0.2673460618328 * S_Frq
2330335   +          +     0.25743187687481 * S_Income  +    -0.02172890929346 *
2330336   +        S_Kidhome  +     1.21785656626837 * S_Mnt  +     0.37454359336223 *
2330337   +        S_MntFishProducts  +    -0.32600053706408 * S_MntFruits
2330338   +          +     0.57807148940534 * S_MntGoldProds  +     1.14736546512366 *
2330339   +        S_MntMeatProducts  +    -1.41517082393978 * S_MntSweetProducts
2330340   +          +    -1.44899595080061 * S_MntWines  +    -1.45520867126531 *
2330341   +        S_MonthsAsCustomer  +    -0.33372174099196 * S_NumCatalogPurchases
2330342   +          +     -0.5767607129654 * S_NumDealsPurchases
2330343   +          +     -0.2643921429796 * S_NumDistPurchases
2330344   +          +    -0.67417489911206 * S_NumStorePurchases
2330345   +          +    -0.51423877684891 * S_NumWebPurchases
2330346   +          +     1.40328299605176 * S_NumWebVisitsMonth
2330347   +          +     1.35588787174957 * S_RFMstat  +     1.98416436137119 *
2330348   +        S_RMntFrq  +     -0.8447362450681 * S_Recency
2330349   +          +    -1.04372961736437 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.72575004293074 * S_AcceptedCmpTotal + 0.34932839743259 * 
S_Age + -0.2673460618328 * S_Frq + 0.25743187687481 * S_Income + -0.02172890929346 * S_Kidhome 
+ 1.21785656626837 * S_Mnt + 0.37454359336223 * S_MntFishProducts + -0.32600053706408 * 
S_MntFruits + 0.57807148940534 * S_MntGoldProds + 1.14736546512366 * S_MntMeatProducts + 
-1.41517082393978 * S_MntSweetProducts + -1.44899595080061 * S_MntWines + -1.45520867126531 * 
S_MonthsAsCustomer + -0.33372174099196 * S_NumCatalogPurchases + -0.5767607129654 * 
S_NumDealsPurchases + -0.2643921429796 * S_NumDistPurchases + -0.67417489911206 * 
S_NumStorePurchases + -0.51423877684891 * S_NumWebPurchases + 1.40328299605176 * 
S_NumWebVisitsMonth + 1.35588787174957 * S_RFMstat + 1.98416436137119 * S_RMntFrq + 
-0.8447362450681 * S_Recency + -1.04372961736437 * S_Teenhome ;
2330350   +   H1x3_4  =     0.05745684959388 * S_AcceptedCmpTotal
2330351   +          +    -0.71077680161454 * S_Age  +      1.4854566142375 * S_Frq
2330352   +          +    -0.32870416928843 * S_Income  +    -0.24944295149087 *
2330353   +        S_Kidhome  +     -0.8312409740431 * S_Mnt  +    -0.09638646505384 *
2330354   +        S_MntFishProducts  +    -0.86550491354678 * S_MntFruits
2330355   +          +     1.46902858697296 * S_MntGoldProds  +      0.3661164136841 *
2330356   +        S_MntMeatProducts  +     0.43108270077708 * S_MntSweetProducts
2330357   +          +    -0.87140466249616 * S_MntWines  +     0.17511224898094 *
2330358   +        S_MonthsAsCustomer  +    -2.66256923117027 * S_NumCatalogPurchases
2330359   +          +      1.2821617657076 * S_NumDealsPurchases
2330360   +          +     1.26584115202735 * S_NumDistPurchases
2330361   +          +    -0.46597664211833 * S_NumStorePurchases
2330362   +          +     0.45652363472866 * S_NumWebPurchases
2330363   +          +    -2.66296112021252 * S_NumWebVisitsMonth
2330364   +          +    -0.86670667018974 * S_RFMstat  +     0.60866041131732 *
2330365   +        S_RMntFrq  +     1.31886754707923 * S_Recency
2330366   +          +    -0.09949653139413 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.05745684959388 * S_AcceptedCmpTotal + -0.71077680161454 * 
S_Age + 1.4854566142375 * S_Frq + -0.32870416928843 * S_Income + -0.24944295149087 * S_Kidhome 
+ -0.8312409740431 * S_Mnt + -0.09638646505384 * S_MntFishProducts + -0.86550491354678 * 
S_MntFruits + 1.46902858697296 * S_MntGoldProds + 0.3661164136841 * S_MntMeatProducts + 
0.43108270077708 * S_MntSweetProducts + -0.87140466249616 * S_MntWines + 0.17511224898094 * 
S_MonthsAsCustomer + -2.66256923117027 * S_NumCatalogPurchases + 1.2821617657076 * 
S_NumDealsPurchases + 1.26584115202735 * S_NumDistPurchases + -0.46597664211833 * 
S_NumStorePurchases + 0.45652363472866 * S_NumWebPurchases + -2.66296112021252 * 
S_NumWebVisitsMonth + -0.86670667018974 * S_RFMstat + 0.60866041131732 * S_RMntFrq + 
1.31886754707923 * S_Recency + -0.09949653139413 * S_Teenhome ;
2330367   +   H1x3_5  =    -0.66850525418144 * S_AcceptedCmpTotal
2330368   +          +     0.14331320698516 * S_Age  +    -0.82708146094779 * S_Frq
2330369   +          +    -0.95718847240937 * S_Income  +     1.37375648833049 *
2330370   +        S_Kidhome  +    -0.48314397401233 * S_Mnt  +     0.07047324834759 *
2330371   +        S_MntFishProducts  +     0.86114312801139 * S_MntFruits
2330372   +          +     0.54573348379533 * S_MntGoldProds  +    -0.05966372249273 *
2330373   +        S_MntMeatProducts  +     0.47275063848217 * S_MntSweetProducts
2330374   +          +    -0.62962007155261 * S_MntWines  +    -2.38081462831488 *
2330375   +        S_MonthsAsCustomer  +     0.56594272689824 * S_NumCatalogPurchases
2330376   +          +    -0.85162564171681 * S_NumDealsPurchases
2330377   +          +     0.64631099667221 * S_NumDistPurchases
2330378   +          +    -0.03081963858636 * S_NumStorePurchases
2330379   +          +    -0.24124717624664 * S_NumWebPurchases
2330380   +          +     0.56425980772372 * S_NumWebVisitsMonth
2330381   +          +    -0.32254616624678 * S_RFMstat  +     1.84875225899832 *
2330382   +        S_RMntFrq  +     0.08133312388911 * S_Recency
2330383   +          +    -0.19004451996479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.66850525418144 * S_AcceptedCmpTotal + 0.14331320698516 * 
S_Age + -0.82708146094779 * S_Frq + -0.95718847240937 * S_Income + 1.37375648833049 * 
S_Kidhome + -0.48314397401233 * S_Mnt + 0.07047324834759 * S_MntFishProducts + 
0.86114312801139 * S_MntFruits + 0.54573348379533 * S_MntGoldProds + -0.05966372249273 * 
S_MntMeatProducts + 0.47275063848217 * S_MntSweetProducts + -0.62962007155261 * S_MntWines + 
-2.38081462831488 * S_MonthsAsCustomer + 0.56594272689824 * S_NumCatalogPurchases + 
-0.85162564171681 * S_NumDealsPurchases + 0.64631099667221 * S_NumDistPurchases + 
-0.03081963858636 * S_NumStorePurchases + -0.24124717624664 * S_NumWebPurchases + 
0.56425980772372 * S_NumWebVisitsMonth + -0.32254616624678 * S_RFMstat + 1.84875225899832 * 
S_RMntFrq + 0.08133312388911 * S_Recency + -0.19004451996479 * S_Teenhome ;
2330384   +   H1x3_1  = H1x3_1  +     1.03487942320068 * AcceptedCmp10
2330385   +          +     0.77723443135875 * AcceptedCmp20  +    -1.04686858569959 *
2330386   +        AcceptedCmp30  +    -1.87852311800194 * AcceptedCmp40
2330387   +          +    -0.69838759011672 * AcceptedCmp50  +     0.50242045854463 *
2330388   +        Complain0  +    -0.13339808164255 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.03487942320068 * AcceptedCmp10 + 0.77723443135875 * 
AcceptedCmp20 + -1.04686858569959 * AcceptedCmp30 + -1.87852311800194 * AcceptedCmp40 + 
-0.69838759011672 * AcceptedCmp50 + 0.50242045854463 * Complain0 + -0.13339808164255 * 
HigherEducationBinary0 ;
2330389   +   H1x3_2  = H1x3_2  +     0.39887299789564 * AcceptedCmp10
2330390   +          +     0.12293700562648 * AcceptedCmp20  +    -1.41656670681309 *
2330391   +        AcceptedCmp30  +    -1.04607557362847 * AcceptedCmp40
2330392   +          +     0.02824649030864 * AcceptedCmp50  +    -0.46581865837196 *
2330393   +        Complain0  +    -0.45913631308543 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.39887299789564 * AcceptedCmp10 + 0.12293700562648 * 
AcceptedCmp20 + -1.41656670681309 * AcceptedCmp30 + -1.04607557362847 * AcceptedCmp40 + 
0.02824649030864 * AcceptedCmp50 + -0.46581865837196 * Complain0 + -0.45913631308543 * 
HigherEducationBinary0 ;
2330394   +   H1x3_3  = H1x3_3  +     0.20672868292414 * AcceptedCmp10
2330395   +          +     0.52082182457868 * AcceptedCmp20  +     0.54911826263592 *
2330396   +        AcceptedCmp30  +    -0.02400616289922 * AcceptedCmp40
2330397   +          +     1.22209744911863 * AcceptedCmp50  +    -0.68243413694538 *
2330398   +        Complain0  +     0.15620895311704 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.20672868292414 * AcceptedCmp10 + 0.52082182457868 * 
AcceptedCmp20 + 0.54911826263592 * AcceptedCmp30 + -0.02400616289922 * AcceptedCmp40 + 
1.22209744911863 * AcceptedCmp50 + -0.68243413694538 * Complain0 + 0.15620895311704 * 
HigherEducationBinary0 ;
2330399   +   H1x3_4  = H1x3_4  +    -0.88269820758187 * AcceptedCmp10
2330400   +          +    -0.19276892535938 * AcceptedCmp20  +     1.26789056018511 *
2330401   +        AcceptedCmp30  +     0.04396979158385 * AcceptedCmp40
2330402   +          +     0.54194186871284 * AcceptedCmp50  +     2.07766091697967 *
2330403   +        Complain0  +    -0.43514178858246 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.88269820758187 * AcceptedCmp10 + -0.19276892535938 
* AcceptedCmp20 + 1.26789056018511 * AcceptedCmp30 + 0.04396979158385 * AcceptedCmp40 + 
0.54194186871284 * AcceptedCmp50 + 2.07766091697967 * Complain0 + -0.43514178858246 * 
HigherEducationBinary0 ;
2330404   +   H1x3_5  = H1x3_5  +     1.04303179873707 * AcceptedCmp10
2330405   +          +    -1.29742389809739 * AcceptedCmp20  +     1.21708533617895 *
2330406   +        AcceptedCmp30  +    -1.47807634614974 * AcceptedCmp40
2330407   +          +     -0.7694244559597 * AcceptedCmp50  +     0.51798162453723 *
2330408   +        Complain0  +    -0.95513113905832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 1.04303179873707 * AcceptedCmp10 + -1.29742389809739 * 
AcceptedCmp20 + 1.21708533617895 * AcceptedCmp30 + -1.47807634614974 * AcceptedCmp40 + 
-0.7694244559597 * AcceptedCmp50 + 0.51798162453723 * Complain0 + -0.95513113905832 * 
HigherEducationBinary0 ;
2330409   +   H1x3_1  = H1x3_1  +     1.27822716215014 * Education2n_Cycle
2330410   +          +     0.45900505383383 * EducationBasic  +    -0.35822992758656 *
2330411   +        EducationGraduation  +     0.05949934527868 * EducationMaster
2330412   +          +    -2.49973437075558 * Marital_StatusDivorced
2330413   +          +    -0.18076948182574 * Marital_StatusMarried
2330414   +          +     0.13498525495231 * Marital_StatusSingle
2330415   +          +    -0.02365465636052 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.27822716215014 * Education2n_Cycle + 
0.45900505383383 * EducationBasic + -0.35822992758656 * EducationGraduation + 0.05949934527868 
* EducationMaster + -2.49973437075558 * Marital_StatusDivorced + -0.18076948182574 * 
Marital_StatusMarried + 0.13498525495231 * Marital_StatusSingle + -0.02365465636052 * 
Marital_StatusTogether ;
2330416   +   H1x3_2  = H1x3_2  +    -1.14981446246051 * Education2n_Cycle
2330417   +          +     0.68006996858541 * EducationBasic  +    -0.06493857044709 *
2330418   +        EducationGraduation  +    -1.22462805502453 * EducationMaster
2330419   +          +       -0.59463732835 * Marital_StatusDivorced
2330420   +          +     1.37741332427598 * Marital_StatusMarried
2330421   +          +     -1.5833455713231 * Marital_StatusSingle
2330422   +          +     1.79205360628448 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -1.14981446246051 * Education2n_Cycle + 
0.68006996858541 * EducationBasic + -0.06493857044709 * EducationGraduation + 
-1.22462805502453 * EducationMaster + -0.59463732835 * Marital_StatusDivorced + 
1.37741332427598 * Marital_StatusMarried + -1.5833455713231 * Marital_StatusSingle + 
1.79205360628448 * Marital_StatusTogether ;
2330423   +   H1x3_3  = H1x3_3  +     0.17779609626753 * Education2n_Cycle
2330424   +          +    -2.22704675950779 * EducationBasic  +     1.30292325944162 *
2330425   +        EducationGraduation  +     0.68083131423474 * EducationMaster
2330426   +          +    -0.44569556289443 * Marital_StatusDivorced
2330427   +          +     0.29918053103557 * Marital_StatusMarried
2330428   +          +    -0.10337314064224 * Marital_StatusSingle
2330429   +          +     0.04054221993299 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.17779609626753 * Education2n_Cycle + 
-2.22704675950779 * EducationBasic + 1.30292325944162 * EducationGraduation + 0.68083131423474 
* EducationMaster + -0.44569556289443 * Marital_StatusDivorced + 0.29918053103557 * 
Marital_StatusMarried + -0.10337314064224 * Marital_StatusSingle + 0.04054221993299 * 
Marital_StatusTogether ;
2330430   +   H1x3_4  = H1x3_4  +     1.16412985277542 * Education2n_Cycle
2330431   +          +     0.18806330813344 * EducationBasic  +     0.00212145829045 *
2330432   +        EducationGraduation  +     0.00087354662697 * EducationMaster
2330433   +          +     1.13881957277462 * Marital_StatusDivorced
2330434   +          +    -0.35849807146313 * Marital_StatusMarried
2330435   +          +    -0.22168731316885 * Marital_StatusSingle
2330436   +          +    -0.22672306263461 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 1.16412985277542 * Education2n_Cycle + 
0.18806330813344 * EducationBasic + 0.00212145829045 * EducationGraduation + 0.00087354662697 
* EducationMaster + 1.13881957277462 * Marital_StatusDivorced + -0.35849807146313 * 
Marital_StatusMarried + -0.22168731316885 * Marital_StatusSingle + -0.22672306263461 * 
Marital_StatusTogether ;
2330437   +   H1x3_5  = H1x3_5  +    -1.25195599938207 * Education2n_Cycle
2330438   +          +    -0.60946428681789 * EducationBasic  +     0.39993500009227 *
2330439   +        EducationGraduation  +     0.43730905987249 * EducationMaster
2330440   +          +     1.10774969923269 * Marital_StatusDivorced
2330441   +          +     1.08409594073043 * Marital_StatusMarried
2330442   +          +    -0.33145048007894 * Marital_StatusSingle
2330443   +          +     1.68703837664761 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.25195599938207 * Education2n_Cycle + 
-0.60946428681789 * EducationBasic + 0.39993500009227 * EducationGraduation + 0.43730905987249 
* EducationMaster + 1.10774969923269 * Marital_StatusDivorced + 1.08409594073043 * 
Marital_StatusMarried + -0.33145048007894 * Marital_StatusSingle + 1.68703837664761 * 
Marital_StatusTogether ;
2330444   +   H1x3_1  =     1.76093149538288 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.76093149538288 + H1x3_1 ;
2330445   +   H1x3_2  =    -0.11243980195421 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.11243980195421 + H1x3_2 ;
2330446   +   H1x3_3  =    -2.59474781862449 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -2.59474781862449 + H1x3_3 ;
2330447   +   H1x3_4  =     0.25376473610258 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.25376473610258 + H1x3_4 ;
2330448   +   H1x3_5  =    -0.54808648261397 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.54808648261397 + H1x3_5 ;
2330449   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2330450   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2330451   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2330452   +   IF H1x3_1  < _REC_EPS AND H1x3_1  > - _REC_EPS THEN
2330453   +   H1x3_1  = H1x3_1  * H1x3_1 ;
MPRINT(EM_DIAGRAM):   IF H1x3_1 < _REC_EPS AND H1x3_1 > - _REC_EPS THEN H1x3_1 = H1x3_1 * 
H1x3_1 ;
2330454   +   ELSE H1x3_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_1 = _REC_EPS ;
2330455   +   IF H1x3_2  < _REC_EPS AND H1x3_2  > - _REC_EPS THEN
2330456   +   H1x3_2  = H1x3_2  * H1x3_2 ;
MPRINT(EM_DIAGRAM):   IF H1x3_2 < _REC_EPS AND H1x3_2 > - _REC_EPS THEN H1x3_2 = H1x3_2 * 
H1x3_2 ;
2330457   +   ELSE H1x3_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_2 = _REC_EPS ;
2330458   +   IF H1x3_3  < _REC_EPS AND H1x3_3  > - _REC_EPS THEN
2330459   +   H1x3_3  = H1x3_3  * H1x3_3 ;
MPRINT(EM_DIAGRAM):   IF H1x3_3 < _REC_EPS AND H1x3_3 > - _REC_EPS THEN H1x3_3 = H1x3_3 * 
H1x3_3 ;
2330460   +   ELSE H1x3_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_3 = _REC_EPS ;
2330461   +   IF H1x3_4  < _REC_EPS AND H1x3_4  > - _REC_EPS THEN
2330462   +   H1x3_4  = H1x3_4  * H1x3_4 ;
MPRINT(EM_DIAGRAM):   IF H1x3_4 < _REC_EPS AND H1x3_4 > - _REC_EPS THEN H1x3_4 = H1x3_4 * 
H1x3_4 ;
2330463   +   ELSE H1x3_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_4 = _REC_EPS ;
2330464   +   IF H1x3_5  < _REC_EPS AND H1x3_5  > - _REC_EPS THEN
2330465   +   H1x3_5  = H1x3_5  * H1x3_5 ;
MPRINT(EM_DIAGRAM):   IF H1x3_5 < _REC_EPS AND H1x3_5 > - _REC_EPS THEN H1x3_5 = H1x3_5 * 
H1x3_5 ;
2330466   +   ELSE H1x3_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_5 = _REC_EPS ;
2330467   +END;
MPRINT(EM_DIAGRAM):   END;
2330468   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2330469   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2330470   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2330471   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
2330472   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
2330473   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
2330474   +END;
MPRINT(EM_DIAGRAM):   END;
2330475   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2330476   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2330477   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2330478   +
2330479   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2330480   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2330481   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2330482   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2330483   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2330484   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2330485   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2330486   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2330487   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2330488   +end;
MPRINT(EM_DIAGRAM):   end;
2330489   +else do;
MPRINT(EM_DIAGRAM):   else do;
2330490   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2330491   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2330492   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2330493   +   end;
MPRINT(EM_DIAGRAM):   end;
2330494   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2330495   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2330496   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2330497   +   end;
MPRINT(EM_DIAGRAM):   end;
2330498   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2330499   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2330500   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2330501   +   end;
MPRINT(EM_DIAGRAM):   end;
2330502   +end;
MPRINT(EM_DIAGRAM):   end;
2330503   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2330504   +   P_DepVar1  =     12.3694111963696 * H1x1_1  +     -9.1014019341077 * H1x1_2
2330505   +          +    -14.9093780045901 * H1x1_3  +     25.4505756686259 * H1x1_4
2330506   +          +    -13.3798044908382 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 12.3694111963696 * H1x1_1 + -9.1014019341077 * H1x1_2 + 
-14.9093780045901 * H1x1_3 + 25.4505756686259 * H1x1_4 + -13.3798044908382 * H1x1_5 ;
2330507   +   P_DepVar1  = P_DepVar1  +     -0.2373753683635 * H1x2_1
2330508   +          +    -0.03661175538589 * H1x2_2  +     0.29534813812803 * H1x2_3
2330509   +          +     0.11908166898588 * H1x2_4  +      -0.241544638637 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.2373753683635 * H1x2_1 + -0.03661175538589 * 
H1x2_2 + 0.29534813812803 * H1x2_3 + 0.11908166898588 * H1x2_4 + -0.241544638637 * H1x2_5 ;
2330510   +   P_DepVar1  = P_DepVar1  +    -0.00276620815201 * H1x3_1
2330511   +          +     0.00487849269566 * H1x3_2  +     0.01323887261394 * H1x3_3
2330512   +          +     -0.0271389925801 * H1x3_4  +     0.00026595473892 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.00276620815201 * H1x3_1 + 0.00487849269566 * 
H1x3_2 + 0.01323887261394 * H1x3_3 + -0.0271389925801 * H1x3_4 + 0.00026595473892 * H1x3_5 ;
2330513   +   P_DepVar1  =      4.0541137239843 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.0541137239843 + P_DepVar1 ;
2330514   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2330515   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2330516   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2330517   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2330518   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2330519   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2330520   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2330521   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2330522   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2330523   +END;
MPRINT(EM_DIAGRAM):   END;
2330524   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2330525   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2330526   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2330527   +END;
MPRINT(EM_DIAGRAM):   END;
2330528   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2330529   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2330530   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2330531   +END;
MPRINT(EM_DIAGRAM):   END;
2330532   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2330533   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2330534   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2330535   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2330536   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2330537   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2330538   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2330539   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2330540   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2330541   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2330542   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2330543   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2330544   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2330545   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2330546   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2330547   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2330548   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2330549   +END;
MPRINT(EM_DIAGRAM):   END;
2330550   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2330551   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2330552   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2330553   +drop
2330554   +H1x1_1
2330555   +H1x1_2
2330556   +H1x1_3
2330557   +H1x1_4
2330558   +H1x1_5
2330559   +H1x2_1
2330560   +H1x2_2
2330561   +H1x2_3
2330562   +H1x2_4
2330563   +H1x2_5
2330564   +H1x3_1
2330565   +H1x3_2
2330566   +H1x3_3
2330567   +H1x3_4
2330568   +H1x3_5
2330569   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x2_1 H1x2_2 H1x2_3 H1x2_4 
H1x2_5 H1x3_1 H1x3_2 H1x3_3 H1x3_4 H1x3_5 ;
2330570   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2330571   +* Renaming variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural10;
2330572   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2330573   +* Renaming Posterior variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural10;
2330574   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2330575   +drop AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar1;
2330576   +AutoNeural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar1 = P_DepVar1;
2330577   +drop AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar0;
2330578   +AutoNeural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar0 = P_DepVar0;
2330579   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2330580   +* Renaming Into variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural10;
2330581   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2330582   +length AutoNeural10_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural10_I_DepVar $32;
2330583   +drop AutoNeural10_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_I_DepVar;
2330584   +AutoNeural10_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural10_I_DepVar = I_DepVar;
2330585   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2330586   +* Renaming _WARN_ variable for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural10;
2330587   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2330588   +length AutoNeural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural10_WARN_ $4;
2330589   +drop AutoNeural10_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_WARN_;
2330590   +AutoNeural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural10_WARN_ = _WARN_;
2330591   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2330592   +* Ensmbl38: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Scoring Code of model 5 of 7;
2330593   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2330594   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2330595   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2330596   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2330597   +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
2330598   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2330599   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2330600   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2330601   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2330602   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2330603   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2330604   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2330605   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2330606   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2330607   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2330608   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2330609   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2330610   +LENGTH _WARN_ $4
2330611   +      F_DepVar  $ 12
2330612   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2330613   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2330614   +
2330615   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2330616   +
2330617   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2330618   +
2330619   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2330620   +
2330621   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2330622   +
2330623   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2330624   +
2330625   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2330626   +
2330627   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2330628   +
2330629   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2330630   +
2330631   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2330632   +
2330633   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2330634   +
2330635   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2330636   +
2330637   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2330638   +
2330639   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2330640   +
2330641   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2330642   +
2330643   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2330644   +
2330645   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2330646   +
2330647   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2330648   +
2330649   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2330650   +
2330651   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2330652   +
2330653   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2330654   +
2330655   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2330656   +
2330657   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2330658   +
2330659   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2330660   +
2330661   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2330662   +
2330663   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2330664   +
2330665   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2330666   +
2330667   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2330668   +
2330669   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2330670   +
2330671   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2330672   +
2330673   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2330674   +
2330675   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2330676   +
2330677   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2330678   +
The SAS System

2330679   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2330680   +
2330681   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2330682   +
2330683   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2330684   +
2330685   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2330686   +
2330687   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2330688   +
2330689   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2330690   +
2330691   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2330692   +
2330693   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2330694   +
2330695   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2330696   +
2330697   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2330698   +
2330699   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2330700   +
2330701   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2330702   +
2330703   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2330704   +
2330705   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2330706   +
2330707   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2330708   +
2330709   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2330710   +
2330711   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2330712   +
2330713   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2330714   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2330715   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2330716   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2330717   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2330718   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2330719   +end;
MPRINT(EM_DIAGRAM):   end;
2330720   +else do;
MPRINT(EM_DIAGRAM):   else do;
2330721   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2330722   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2330723   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2330724   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2330725   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2330726   +   end;
MPRINT(EM_DIAGRAM):   end;
2330727   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2330728   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2330729   +   end;
MPRINT(EM_DIAGRAM):   end;
2330730   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2330731   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2330732   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2330733   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2330734   +   end;
MPRINT(EM_DIAGRAM):   end;
2330735   +end;
MPRINT(EM_DIAGRAM):   end;
2330736   +
2330737   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2330738   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2330739   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2330740   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2330741   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2330742   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2330743   +end;
MPRINT(EM_DIAGRAM):   end;
2330744   +else do;
MPRINT(EM_DIAGRAM):   else do;
2330745   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2330746   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2330747   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2330748   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2330749   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2330750   +   end;
MPRINT(EM_DIAGRAM):   end;
2330751   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2330752   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2330753   +   end;
MPRINT(EM_DIAGRAM):   end;
2330754   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2330755   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2330756   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2330757   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2330758   +   end;
MPRINT(EM_DIAGRAM):   end;
2330759   +end;
MPRINT(EM_DIAGRAM):   end;
2330760   +
2330761   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2330762   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2330763   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2330764   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2330765   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2330766   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2330767   +end;
MPRINT(EM_DIAGRAM):   end;
2330768   +else do;
MPRINT(EM_DIAGRAM):   else do;
2330769   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2330770   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2330771   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2330772   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2330773   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2330774   +   end;
MPRINT(EM_DIAGRAM):   end;
2330775   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2330776   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2330777   +   end;
MPRINT(EM_DIAGRAM):   end;
2330778   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2330779   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2330780   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2330781   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2330782   +   end;
MPRINT(EM_DIAGRAM):   end;
2330783   +end;
MPRINT(EM_DIAGRAM):   end;
2330784   +
2330785   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2330786   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2330787   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2330788   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2330789   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2330790   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2330791   +end;
MPRINT(EM_DIAGRAM):   end;
2330792   +else do;
MPRINT(EM_DIAGRAM):   else do;
2330793   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2330794   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2330795   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2330796   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2330797   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2330798   +   end;
MPRINT(EM_DIAGRAM):   end;
2330799   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2330800   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2330801   +   end;
MPRINT(EM_DIAGRAM):   end;
2330802   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2330803   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2330804   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2330805   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2330806   +   end;
MPRINT(EM_DIAGRAM):   end;
2330807   +end;
MPRINT(EM_DIAGRAM):   end;
2330808   +
2330809   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2330810   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2330811   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2330812   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2330813   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2330814   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2330815   +end;
MPRINT(EM_DIAGRAM):   end;
2330816   +else do;
MPRINT(EM_DIAGRAM):   else do;
2330817   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2330818   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2330819   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2330820   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2330821   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2330822   +   end;
MPRINT(EM_DIAGRAM):   end;
2330823   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2330824   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2330825   +   end;
MPRINT(EM_DIAGRAM):   end;
2330826   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2330827   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2330828   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2330829   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2330830   +   end;
MPRINT(EM_DIAGRAM):   end;
2330831   +end;
MPRINT(EM_DIAGRAM):   end;
2330832   +
2330833   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2330834   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2330835   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2330836   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2330837   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2330838   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2330839   +end;
MPRINT(EM_DIAGRAM):   end;
2330840   +else do;
MPRINT(EM_DIAGRAM):   else do;
2330841   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2330842   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2330843   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2330844   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2330845   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2330846   +   end;
MPRINT(EM_DIAGRAM):   end;
2330847   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2330848   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2330849   +   end;
MPRINT(EM_DIAGRAM):   end;
2330850   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2330851   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2330852   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2330853   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2330854   +   end;
MPRINT(EM_DIAGRAM):   end;
2330855   +end;
MPRINT(EM_DIAGRAM):   end;
2330856   +
2330857   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2330858   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2330859   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2330860   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2330861   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2330862   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2330863   +end;
MPRINT(EM_DIAGRAM):   end;
2330864   +else do;
MPRINT(EM_DIAGRAM):   else do;
2330865   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2330866   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2330867   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2330868   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2330869   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2330870   +   end;
MPRINT(EM_DIAGRAM):   end;
2330871   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2330872   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2330873   +   end;
MPRINT(EM_DIAGRAM):   end;
2330874   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2330875   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2330876   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2330877   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2330878   +   end;
MPRINT(EM_DIAGRAM):   end;
2330879   +end;
MPRINT(EM_DIAGRAM):   end;
2330880   +
2330881   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2330882   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2330883   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2330884   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2330885   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2330886   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2330887   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2330888   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2330889   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2330890   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2330891   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2330892   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2330893   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2330894   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2330895   +end;
MPRINT(EM_DIAGRAM):   end;
2330896   +else do;
MPRINT(EM_DIAGRAM):   else do;
2330897   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2330898   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2330899   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2330900   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2330901   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2330902   +   end;
MPRINT(EM_DIAGRAM):   end;
2330903   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2330904   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2330905   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2330906   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2330907   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2330908   +   end;
MPRINT(EM_DIAGRAM):   end;
2330909   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2330910   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2330911   +   end;
MPRINT(EM_DIAGRAM):   end;
2330912   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2330913   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2330914   +   end;
MPRINT(EM_DIAGRAM):   end;
2330915   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2330916   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2330917   +   end;
MPRINT(EM_DIAGRAM):   end;
2330918   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2330919   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2330920   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2330921   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2330922   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2330923   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2330924   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2330925   +   end;
MPRINT(EM_DIAGRAM):   end;
2330926   +end;
MPRINT(EM_DIAGRAM):   end;
2330927   +
2330928   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2330929   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2330930   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2330931   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2330932   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2330933   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2330934   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2330935   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2330936   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2330937   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2330938   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2330939   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2330940   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2330941   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2330942   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2330943   +end;
MPRINT(EM_DIAGRAM):   end;
2330944   +else do;
MPRINT(EM_DIAGRAM):   else do;
2330945   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2330946   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2330947   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2330948   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2330949   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2330950   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2330951   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2330952   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2330953   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2330954   +         end;
MPRINT(EM_DIAGRAM):   end;
2330955   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2330956   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2330957   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2330958   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2330959   +            end;
MPRINT(EM_DIAGRAM):   end;
2330960   +         end;
MPRINT(EM_DIAGRAM):   end;
2330961   +      end;
MPRINT(EM_DIAGRAM):   end;
2330962   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2330963   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2330964   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2330965   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2330966   +         end;
MPRINT(EM_DIAGRAM):   end;
2330967   +      end;
MPRINT(EM_DIAGRAM):   end;
2330968   +   end;
MPRINT(EM_DIAGRAM):   end;
2330969   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2330970   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2330971   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2330972   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2330973   +      end;
MPRINT(EM_DIAGRAM):   end;
2330974   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2330975   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2330976   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2330977   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2330978   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2330979   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2330980   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2330981   +         end;
MPRINT(EM_DIAGRAM):   end;
2330982   +      end;
MPRINT(EM_DIAGRAM):   end;
2330983   +   end;
MPRINT(EM_DIAGRAM):   end;
2330984   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2330985   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2330986   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2330987   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2330988   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2330989   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2330990   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2330991   +   end;
MPRINT(EM_DIAGRAM):   end;
2330992   +end;
MPRINT(EM_DIAGRAM):   end;
2330993   +
2330994   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2330995   +*** Checking missing input Interval
2330996   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2330997   +
2330998   +IF NMISS(
2330999   +   AcceptedCmpTotal ,
2331000   +   Age ,
2331001   +   Frq ,
2331002   +   Income ,
2331003   +   Kidhome ,
2331004   +   Mnt ,
2331005   +   MntFishProducts ,
2331006   +   MntFruits ,
2331007   +   MntGoldProds ,
2331008   +   MntMeatProducts ,
2331009   +   MntSweetProducts ,
2331010   +   MntWines ,
2331011   +   MonthsAsCustomer ,
2331012   +   NumCatalogPurchases ,
2331013   +   NumDealsPurchases ,
2331014   +   NumDistPurchases ,
2331015   +   NumStorePurchases ,
2331016   +   NumWebPurchases ,
2331017   +   NumWebVisitsMonth ,
2331018   +   RFMstat ,
2331019   +   RMntFrq ,
2331020   +   Recency ,
2331021   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2331022   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2331023   +
2331024   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2331025   +END;
MPRINT(EM_DIAGRAM):   END;
2331026   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2331027   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2331028   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2331029   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2331030   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2331031   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2331032   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2331033   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2331034   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2331035   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2331036   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2331037   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2331038   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2331039   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2331040   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2331041   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2331042   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2331043   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2331044   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2331045   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2331046   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2331047   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2331048   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2331049   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2331050   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2331051   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2331052   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2331053   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2331054   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2331055   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2331056   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2331057   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2331058   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2331059   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2331060   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2331061   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2331062   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2331063   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2331064   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2331065   +END;
MPRINT(EM_DIAGRAM):   END;
2331066   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2331067   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2331068   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2331069   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2331070   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2331071   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2331072   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2331073   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2331074   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2331075   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2331076   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2331077   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2331078   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2331079   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2331080   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2331081   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2331082   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2331083   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2331084   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2331085   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2331086   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2331087   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2331088   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2331089   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2331090   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2331091   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2331092   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2331093   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2331094   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2331095   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2331096   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2331097   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2331098   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2331099   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2331100   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2331101   +   ELSE S_NumCatalogPurchases
2331102   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2331103   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2331104   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2331105   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2331106   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2331107   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2331108   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2331109   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2331110   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2331111   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2331112   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2331113   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2331114   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2331115   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2331116   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2331117   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2331118   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2331119   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2331120   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2331121   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2331122   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2331123   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2331124   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2331125   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2331126   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2331127   +END;
MPRINT(EM_DIAGRAM):   END;
2331128   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2331129   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2331130   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2331131   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2331132   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2331133   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2331134   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2331135   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2331136   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2331137   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2331138   +   H1x1_1  =     -0.7790327388408 * S_AcceptedCmpTotal
2331139   +          +     0.32193739579856 * S_Age  +    -0.43875684835169 * S_Frq
2331140   +          +     0.13013240455049 * S_Income  +    -0.74127716462976 *
2331141   +        S_Kidhome  +    -0.86416600561474 * S_Mnt  +     0.94819226754442 *
2331142   +        S_MntFishProducts  +     0.15895119408799 * S_MntFruits
2331143   +          +     0.03658391935071 * S_MntGoldProds  +    -3.75052142292398 *
2331144   +        S_MntMeatProducts  +    -0.22192220883538 * S_MntSweetProducts
2331145   +          +     0.80534656860633 * S_MntWines  +     0.16144794241259 *
2331146   +        S_MonthsAsCustomer  +    -1.53040364803625 * S_NumCatalogPurchases
2331147   +          +    -1.09856598010056 * S_NumDealsPurchases
2331148   +          +    -0.10571850472514 * S_NumDistPurchases
2331149   +          +     0.11898210654227 * S_NumStorePurchases
2331150   +          +      0.5984912060231 * S_NumWebPurchases
2331151   +          +     0.78592531126942 * S_NumWebVisitsMonth
2331152   +          +    -0.50004686386273 * S_RFMstat  +     0.40804018151571 *
2331153   +        S_RMntFrq  +    -0.94753260620308 * S_Recency
2331154   +          +    -0.49604118088328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.7790327388408 * S_AcceptedCmpTotal + 0.32193739579856 * 
S_Age + -0.43875684835169 * S_Frq + 0.13013240455049 * S_Income + -0.74127716462976 * 
S_Kidhome + -0.86416600561474 * S_Mnt + 0.94819226754442 * S_MntFishProducts + 
0.15895119408799 * S_MntFruits + 0.03658391935071 * S_MntGoldProds + -3.75052142292398 * 
S_MntMeatProducts + -0.22192220883538 * S_MntSweetProducts + 0.80534656860633 * S_MntWines + 
0.16144794241259 * S_MonthsAsCustomer + -1.53040364803625 * S_NumCatalogPurchases + 
-1.09856598010056 * S_NumDealsPurchases + -0.10571850472514 * S_NumDistPurchases + 
0.11898210654227 * S_NumStorePurchases + 0.5984912060231 * S_NumWebPurchases + 
0.78592531126942 * S_NumWebVisitsMonth + -0.50004686386273 * S_RFMstat + 0.40804018151571 * 
S_RMntFrq + -0.94753260620308 * S_Recency + -0.49604118088328 * S_Teenhome ;
2331155   +   H1x1_2  =    -0.22226926295489 * S_AcceptedCmpTotal
2331156   +          +     0.08523894206962 * S_Age  +    -0.13010378102207 * S_Frq
2331157   +          +    -0.61810906923536 * S_Income  +     0.26583917928045 *
2331158   +        S_Kidhome  +     0.57213479787981 * S_Mnt  +    -0.58077613046442 *
2331159   +        S_MntFishProducts  +      0.1530301493776 * S_MntFruits
2331160   +          +      0.4586167382631 * S_MntGoldProds  +     1.40179051129147 *
2331161   +        S_MntMeatProducts  +      0.0231413770297 * S_MntSweetProducts
2331162   +          +    -0.08483682112771 * S_MntWines  +     0.22891006905064 *
2331163   +        S_MonthsAsCustomer  +    -1.21866617917435 * S_NumCatalogPurchases
2331164   +          +    -0.84042044250624 * S_NumDealsPurchases
2331165   +          +    -0.10246261015488 * S_NumDistPurchases
2331166   +          +     0.06886149708824 * S_NumStorePurchases
2331167   +          +     0.63156910388199 * S_NumWebPurchases
2331168   +          +    -1.33032061845311 * S_NumWebVisitsMonth
2331169   +          +     0.51240040684649 * S_RFMstat  +     0.77604047421115 *
2331170   +        S_RMntFrq  +     1.27964260226958 * S_Recency
2331171   +          +     0.12022076571016 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22226926295489 * S_AcceptedCmpTotal + 0.08523894206962 * 
S_Age + -0.13010378102207 * S_Frq + -0.61810906923536 * S_Income + 0.26583917928045 * 
S_Kidhome + 0.57213479787981 * S_Mnt + -0.58077613046442 * S_MntFishProducts + 0.1530301493776 
* S_MntFruits + 0.4586167382631 * S_MntGoldProds + 1.40179051129147 * S_MntMeatProducts + 
0.0231413770297 * S_MntSweetProducts + -0.08483682112771 * S_MntWines + 0.22891006905064 * 
S_MonthsAsCustomer + -1.21866617917435 * S_NumCatalogPurchases + -0.84042044250624 * 
S_NumDealsPurchases + -0.10246261015488 * S_NumDistPurchases + 0.06886149708824 * 
S_NumStorePurchases + 0.63156910388199 * S_NumWebPurchases + -1.33032061845311 * 
S_NumWebVisitsMonth + 0.51240040684649 * S_RFMstat + 0.77604047421115 * S_RMntFrq + 
1.27964260226958 * S_Recency + 0.12022076571016 * S_Teenhome ;
2331172   +   H1x1_3  =     1.19879097976404 * S_AcceptedCmpTotal
2331173   +          +     0.14973951999399 * S_Age  +    -0.90630756390399 * S_Frq
2331174   +          +     0.64934241358682 * S_Income  +    -0.66249532206724 *
2331175   +        S_Kidhome  +     0.54195490560813 * S_Mnt  +    -0.58497380565417 *
2331176   +        S_MntFishProducts  +     0.12409202833851 * S_MntFruits
2331177   +          +     0.44480061346561 * S_MntGoldProds  +     3.27513201048136 *
2331178   +        S_MntMeatProducts  +     -0.1256493054184 * S_MntSweetProducts
2331179   +          +    -0.56080685022301 * S_MntWines  +     0.08633469383177 *
2331180   +        S_MonthsAsCustomer  +     0.45482673505107 * S_NumCatalogPurchases
2331181   +          +     0.45393712455366 * S_NumDealsPurchases
2331182   +          +    -0.25292198053552 * S_NumDistPurchases
2331183   +          +    -1.35582215064749 * S_NumStorePurchases
2331184   +          +    -0.83132202302639 * S_NumWebPurchases
2331185   +          +     1.87116225272678 * S_NumWebVisitsMonth
2331186   +          +     0.39564162951481 * S_RFMstat  +    -1.08810221295144 *
2331187   +        S_RMntFrq  +    -2.07407859514648 * S_Recency
2331188   +          +     -0.6849099475723 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.19879097976404 * S_AcceptedCmpTotal + 0.14973951999399 * 
S_Age + -0.90630756390399 * S_Frq + 0.64934241358682 * S_Income + -0.66249532206724 * 
S_Kidhome + 0.54195490560813 * S_Mnt + -0.58497380565417 * S_MntFishProducts + 
0.12409202833851 * S_MntFruits + 0.44480061346561 * S_MntGoldProds + 3.27513201048136 * 
S_MntMeatProducts + -0.1256493054184 * S_MntSweetProducts + -0.56080685022301 * S_MntWines + 
0.08633469383177 * S_MonthsAsCustomer + 0.45482673505107 * S_NumCatalogPurchases + 
0.45393712455366 * S_NumDealsPurchases + -0.25292198053552 * S_NumDistPurchases + 
-1.35582215064749 * S_NumStorePurchases + -0.83132202302639 * S_NumWebPurchases + 
1.87116225272678 * S_NumWebVisitsMonth + 0.39564162951481 * S_RFMstat + -1.08810221295144 * 
S_RMntFrq + -2.07407859514648 * S_Recency + -0.6849099475723 * S_Teenhome ;
2331189   +   H1x1_1  = H1x1_1  +     0.81075414854045 * AcceptedCmp10
2331190   +          +    -0.33403710427327 * AcceptedCmp20  +    -0.62242387435975 *
2331191   +        AcceptedCmp30  +    -0.89439410552439 * AcceptedCmp40
2331192   +          +     0.77335976756467 * AcceptedCmp50  +    -0.08825784612626 *
2331193   +        Complain0  +      0.3404395194267 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.81075414854045 * AcceptedCmp10 + -0.33403710427327 * 
AcceptedCmp20 + -0.62242387435975 * AcceptedCmp30 + -0.89439410552439 * AcceptedCmp40 + 
0.77335976756467 * AcceptedCmp50 + -0.08825784612626 * Complain0 + 0.3404395194267 * 
HigherEducationBinary0 ;
2331194   +   H1x1_2  = H1x1_2  +    -0.16741179709566 * AcceptedCmp10
2331195   +          +    -0.53751033948061 * AcceptedCmp20  +     0.80285496945068 *
2331196   +        AcceptedCmp30  +     0.39379279966091 * AcceptedCmp40
2331197   +          +    -1.40366799083237 * AcceptedCmp50  +     -0.4265482924132 *
2331198   +        Complain0  +     0.37272103593422 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.16741179709566 * AcceptedCmp10 + -0.53751033948061 
* AcceptedCmp20 + 0.80285496945068 * AcceptedCmp30 + 0.39379279966091 * AcceptedCmp40 + 
-1.40366799083237 * AcceptedCmp50 + -0.4265482924132 * Complain0 + 0.37272103593422 * 
HigherEducationBinary0 ;
2331199   +   H1x1_3  = H1x1_3  +    -0.19417657656326 * AcceptedCmp10
2331200   +          +    -0.06547746897317 * AcceptedCmp20  +     0.21980739904513 *
2331201   +        AcceptedCmp30  +    -0.19452210052301 * AcceptedCmp40
2331202   +          +    -2.02403282278574 * AcceptedCmp50  +    -0.18250261144524 *
2331203   +        Complain0  +     0.34168103813312 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.19417657656326 * AcceptedCmp10 + -0.06547746897317 
* AcceptedCmp20 + 0.21980739904513 * AcceptedCmp30 + -0.19452210052301 * AcceptedCmp40 + 
-2.02403282278574 * AcceptedCmp50 + -0.18250261144524 * Complain0 + 0.34168103813312 * 
HigherEducationBinary0 ;
2331204   +   H1x1_1  = H1x1_1  +    -0.03956789621002 * Education2n_Cycle
2331205   +          +    -0.38372374638888 * EducationBasic  +     -0.4178927802606 *
2331206   +        EducationGraduation  +    -0.61278625923288 * EducationMaster
2331207   +          +      0.4695898100094 * Marital_StatusDivorced
2331208   +          +    -0.52137742289262 * Marital_StatusMarried
2331209   +          +    -0.32382086914936 * Marital_StatusSingle
2331210   +          +    -0.66163012672344 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03956789621002 * Education2n_Cycle + 
-0.38372374638888 * EducationBasic + -0.4178927802606 * EducationGraduation + 
-0.61278625923288 * EducationMaster + 0.4695898100094 * Marital_StatusDivorced + 
-0.52137742289262 * Marital_StatusMarried + -0.32382086914936 * Marital_StatusSingle + 
-0.66163012672344 * Marital_StatusTogether ;
2331211   +   H1x1_2  = H1x1_2  +    -0.25832319223886 * Education2n_Cycle
2331212   +          +     0.05602860720141 * EducationBasic  +    -0.86282852488383 *
2331213   +        EducationGraduation  +     0.18916317018059 * EducationMaster
2331214   +          +    -1.04858218653238 * Marital_StatusDivorced
2331215   +          +     2.41098335093061 * Marital_StatusMarried
2331216   +          +    -1.94696044861334 * Marital_StatusSingle
2331217   +          +     2.16021514856437 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.25832319223886 * Education2n_Cycle + 
0.05602860720141 * EducationBasic + -0.86282852488383 * EducationGraduation + 0.18916317018059 
* EducationMaster + -1.04858218653238 * Marital_StatusDivorced + 2.41098335093061 * 
Marital_StatusMarried + -1.94696044861334 * Marital_StatusSingle + 2.16021514856437 * 
Marital_StatusTogether ;
2331218   +   H1x1_3  = H1x1_3  +    -0.05351872242069 * Education2n_Cycle
2331219   +          +    -0.56850783552841 * EducationBasic  +    -0.14880907057098 *
2331220   +        EducationGraduation  +    -0.32850851013319 * EducationMaster
2331221   +          +     0.42964114177062 * Marital_StatusDivorced
2331222   +          +    -0.38607635605816 * Marital_StatusMarried
2331223   +          +    -0.02157405407852 * Marital_StatusSingle
2331224   +          +    -0.59995619744527 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.05351872242069 * Education2n_Cycle + 
-0.56850783552841 * EducationBasic + -0.14880907057098 * EducationGraduation + 
-0.32850851013319 * EducationMaster + 0.42964114177062 * Marital_StatusDivorced + 
-0.38607635605816 * Marital_StatusMarried + -0.02157405407852 * Marital_StatusSingle + 
-0.59995619744527 * Marital_StatusTogether ;
2331225   +   H1x1_1  =    -0.53239337390307 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53239337390307 + H1x1_1 ;
2331226   +   H1x1_2  =     0.99428677123948 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.99428677123948 + H1x1_2 ;
2331227   +   H1x1_3  =       1.835877082844 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.835877082844 + H1x1_3 ;
2331228   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
2331229   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
2331230   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2331231   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2331232   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2331233   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2331234   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2331235   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2331236   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2331237   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2331238   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2331239   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2331240   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2331241   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2331242   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2331243   +END;
MPRINT(EM_DIAGRAM):   END;
2331244   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2331245   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2331246   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2331247   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2331248   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2331249   +END;
MPRINT(EM_DIAGRAM):   END;
2331250   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2331251   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2331252   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2331253   +
2331254   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2331255   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2331256   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2331257   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2331258   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2331259   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2331260   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2331261   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2331262   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2331263   +end;
MPRINT(EM_DIAGRAM):   end;
2331264   +else do;
MPRINT(EM_DIAGRAM):   else do;
2331265   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2331266   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2331267   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2331268   +   end;
MPRINT(EM_DIAGRAM):   end;
2331269   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2331270   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2331271   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2331272   +   end;
MPRINT(EM_DIAGRAM):   end;
2331273   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2331274   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2331275   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2331276   +   end;
MPRINT(EM_DIAGRAM):   end;
2331277   +end;
MPRINT(EM_DIAGRAM):   end;
2331278   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2331279   +   P_DepVar1  =    -3.41904253756965 * H1x1_1  +    -7.11204151517034 * H1x1_2
2331280   +          +     10.7909509395818 * H1x1_3  +    -2.20432578352426 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.41904253756965 * H1x1_1 + -7.11204151517034 * H1x1_2 + 
10.7909509395818 * H1x1_3 + -2.20432578352426 * H1x1_4 ;
2331281   +   P_DepVar1  =    -3.66951098257489 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.66951098257489 + P_DepVar1 ;
2331282   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2331283   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2331284   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2331285   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2331286   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2331287   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2331288   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2331289   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2331290   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2331291   +END;
MPRINT(EM_DIAGRAM):   END;
2331292   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2331293   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2331294   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2331295   +END;
MPRINT(EM_DIAGRAM):   END;
2331296   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2331297   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2331298   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2331299   +END;
MPRINT(EM_DIAGRAM):   END;
2331300   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2331301   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2331302   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2331303   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2331304   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2331305   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2331306   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2331307   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2331308   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2331309   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2331310   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2331311   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2331312   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2331313   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2331314   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2331315   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2331316   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2331317   +END;
MPRINT(EM_DIAGRAM):   END;
2331318   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2331319   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2331320   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2331321   +drop
2331322   +H1x1_1
2331323   +H1x1_2
2331324   +H1x1_3
2331325   +H1x1_4
2331326   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 ;
2331327   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2331328   +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
2331329   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2331330   +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
2331331   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2331332   +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
2331333   +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
2331334   +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
2331335   +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
2331336   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2331337   +* Renaming Into variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural9;
2331338   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2331339   +length AutoNeural9_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural9_I_DepVar $32;
2331340   +drop AutoNeural9_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_I_DepVar;
2331341   +AutoNeural9_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural9_I_DepVar = I_DepVar;
2331342   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2331343   +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
2331344   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2331345   +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
2331346   +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
2331347   +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
2331348   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2331349   +* Ensmbl38: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Scoring Code of model 6 of 7;
2331350   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2331351   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2331352   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2331353   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2331354   +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
2331355   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2331356   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2331357   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2331358   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2331359   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2331360   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2331361   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2331362   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2331363   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2331364   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2331365   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2331366   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2331367   +LENGTH _WARN_ $4
2331368   +      F_DepVar  $ 12
2331369   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2331370   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2331371   +
2331372   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2331373   +
2331374   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2331375   +
2331376   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2331377   +
2331378   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2331379   +
2331380   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2331381   +
2331382   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2331383   +
2331384   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2331385   +
2331386   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2331387   +
2331388   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2331389   +
2331390   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2331391   +
2331392   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2331393   +
2331394   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2331395   +
2331396   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2331397   +
2331398   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2331399   +
2331400   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2331401   +
2331402   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2331403   +
2331404   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2331405   +
2331406   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2331407   +
2331408   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2331409   +
2331410   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2331411   +
2331412   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2331413   +
2331414   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2331415   +
2331416   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2331417   +
2331418   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2331419   +
2331420   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2331421   +
2331422   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2331423   +
2331424   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2331425   +
2331426   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2331427   +
2331428   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2331429   +
2331430   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2331431   +
2331432   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2331433   +
2331434   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2331435   +
2331436   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2331437   +
2331438   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2331439   +
2331440   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2331441   +
2331442   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2331443   +
2331444   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2331445   +
2331446   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2331447   +
2331448   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2331449   +
2331450   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2331451   +
2331452   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2331453   +
2331454   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2331455   +
2331456   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2331457   +
2331458   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2331459   +
2331460   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2331461   +
2331462   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2331463   +
2331464   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2331465   +
2331466   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2331467   +
2331468   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2331469   +
2331470   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2331471   +
2331472   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2331473   +
2331474   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2331475   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2331476   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2331477   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2331478   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2331479   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2331480   +end;
MPRINT(EM_DIAGRAM):   end;
2331481   +else do;
MPRINT(EM_DIAGRAM):   else do;
2331482   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2331483   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2331484   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2331485   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2331486   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2331487   +   end;
MPRINT(EM_DIAGRAM):   end;
2331488   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2331489   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2331490   +   end;
MPRINT(EM_DIAGRAM):   end;
2331491   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2331492   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2331493   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2331494   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2331495   +   end;
MPRINT(EM_DIAGRAM):   end;
2331496   +end;
MPRINT(EM_DIAGRAM):   end;
2331497   +
2331498   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2331499   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2331500   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2331501   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2331502   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2331503   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2331504   +end;
MPRINT(EM_DIAGRAM):   end;
2331505   +else do;
MPRINT(EM_DIAGRAM):   else do;
2331506   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2331507   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2331508   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2331509   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2331510   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2331511   +   end;
MPRINT(EM_DIAGRAM):   end;
2331512   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2331513   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2331514   +   end;
MPRINT(EM_DIAGRAM):   end;
2331515   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2331516   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2331517   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2331518   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2331519   +   end;
MPRINT(EM_DIAGRAM):   end;
2331520   +end;
MPRINT(EM_DIAGRAM):   end;
2331521   +
2331522   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2331523   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2331524   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2331525   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2331526   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2331527   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2331528   +end;
MPRINT(EM_DIAGRAM):   end;
2331529   +else do;
MPRINT(EM_DIAGRAM):   else do;
2331530   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2331531   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2331532   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2331533   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2331534   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2331535   +   end;
MPRINT(EM_DIAGRAM):   end;
2331536   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2331537   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2331538   +   end;
MPRINT(EM_DIAGRAM):   end;
2331539   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2331540   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2331541   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2331542   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2331543   +   end;
MPRINT(EM_DIAGRAM):   end;
2331544   +end;
MPRINT(EM_DIAGRAM):   end;
2331545   +
2331546   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2331547   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2331548   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2331549   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2331550   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2331551   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2331552   +end;
MPRINT(EM_DIAGRAM):   end;
2331553   +else do;
MPRINT(EM_DIAGRAM):   else do;
2331554   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2331555   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2331556   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2331557   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2331558   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2331559   +   end;
MPRINT(EM_DIAGRAM):   end;
2331560   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2331561   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2331562   +   end;
MPRINT(EM_DIAGRAM):   end;
2331563   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2331564   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2331565   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2331566   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2331567   +   end;
MPRINT(EM_DIAGRAM):   end;
2331568   +end;
MPRINT(EM_DIAGRAM):   end;
2331569   +
2331570   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2331571   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2331572   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2331573   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2331574   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2331575   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2331576   +end;
MPRINT(EM_DIAGRAM):   end;
2331577   +else do;
MPRINT(EM_DIAGRAM):   else do;
2331578   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2331579   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2331580   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2331581   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2331582   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2331583   +   end;
MPRINT(EM_DIAGRAM):   end;
2331584   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2331585   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2331586   +   end;
MPRINT(EM_DIAGRAM):   end;
2331587   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2331588   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2331589   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2331590   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2331591   +   end;
MPRINT(EM_DIAGRAM):   end;
2331592   +end;
MPRINT(EM_DIAGRAM):   end;
2331593   +
2331594   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2331595   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2331596   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2331597   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2331598   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2331599   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2331600   +end;
MPRINT(EM_DIAGRAM):   end;
2331601   +else do;
MPRINT(EM_DIAGRAM):   else do;
2331602   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2331603   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2331604   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2331605   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2331606   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2331607   +   end;
MPRINT(EM_DIAGRAM):   end;
2331608   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2331609   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2331610   +   end;
MPRINT(EM_DIAGRAM):   end;
2331611   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2331612   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2331613   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2331614   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2331615   +   end;
MPRINT(EM_DIAGRAM):   end;
2331616   +end;
MPRINT(EM_DIAGRAM):   end;
2331617   +
2331618   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2331619   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2331620   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2331621   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2331622   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2331623   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2331624   +end;
MPRINT(EM_DIAGRAM):   end;
2331625   +else do;
MPRINT(EM_DIAGRAM):   else do;
2331626   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2331627   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2331628   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2331629   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2331630   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2331631   +   end;
MPRINT(EM_DIAGRAM):   end;
2331632   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2331633   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2331634   +   end;
MPRINT(EM_DIAGRAM):   end;
2331635   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2331636   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2331637   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2331638   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2331639   +   end;
MPRINT(EM_DIAGRAM):   end;
2331640   +end;
MPRINT(EM_DIAGRAM):   end;
2331641   +
2331642   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2331643   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2331644   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2331645   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2331646   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2331647   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2331648   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2331649   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2331650   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2331651   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2331652   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2331653   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2331654   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2331655   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2331656   +end;
MPRINT(EM_DIAGRAM):   end;
2331657   +else do;
MPRINT(EM_DIAGRAM):   else do;
2331658   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2331659   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2331660   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2331661   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2331662   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2331663   +   end;
MPRINT(EM_DIAGRAM):   end;
2331664   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2331665   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2331666   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2331667   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2331668   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2331669   +   end;
MPRINT(EM_DIAGRAM):   end;
2331670   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2331671   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2331672   +   end;
MPRINT(EM_DIAGRAM):   end;
2331673   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2331674   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2331675   +   end;
MPRINT(EM_DIAGRAM):   end;
2331676   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2331677   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2331678   +   end;
MPRINT(EM_DIAGRAM):   end;
2331679   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2331680   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2331681   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2331682   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2331683   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2331684   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2331685   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2331686   +   end;
MPRINT(EM_DIAGRAM):   end;
2331687   +end;
MPRINT(EM_DIAGRAM):   end;
2331688   +
2331689   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2331690   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2331691   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2331692   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2331693   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2331694   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2331695   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2331696   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2331697   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2331698   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2331699   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2331700   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2331701   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2331702   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2331703   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2331704   +end;
MPRINT(EM_DIAGRAM):   end;
2331705   +else do;
MPRINT(EM_DIAGRAM):   else do;
2331706   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2331707   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2331708   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2331709   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2331710   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2331711   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2331712   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2331713   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2331714   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2331715   +         end;
MPRINT(EM_DIAGRAM):   end;
2331716   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2331717   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2331718   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2331719   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2331720   +            end;
MPRINT(EM_DIAGRAM):   end;
2331721   +         end;
MPRINT(EM_DIAGRAM):   end;
2331722   +      end;
MPRINT(EM_DIAGRAM):   end;
2331723   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2331724   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2331725   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2331726   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2331727   +         end;
MPRINT(EM_DIAGRAM):   end;
2331728   +      end;
MPRINT(EM_DIAGRAM):   end;
2331729   +   end;
MPRINT(EM_DIAGRAM):   end;
2331730   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2331731   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2331732   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2331733   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2331734   +      end;
MPRINT(EM_DIAGRAM):   end;
2331735   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2331736   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2331737   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2331738   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2331739   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2331740   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2331741   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2331742   +         end;
MPRINT(EM_DIAGRAM):   end;
2331743   +      end;
MPRINT(EM_DIAGRAM):   end;
2331744   +   end;
MPRINT(EM_DIAGRAM):   end;
2331745   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2331746   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2331747   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2331748   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2331749   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2331750   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2331751   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2331752   +   end;
MPRINT(EM_DIAGRAM):   end;
2331753   +end;
MPRINT(EM_DIAGRAM):   end;
2331754   +
2331755   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2331756   +*** Checking missing input Interval
2331757   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2331758   +
2331759   +IF NMISS(
2331760   +   AcceptedCmpTotal ,
2331761   +   Age ,
2331762   +   Frq ,
2331763   +   Income ,
2331764   +   Kidhome ,
2331765   +   Mnt ,
2331766   +   MntFishProducts ,
2331767   +   MntFruits ,
2331768   +   MntGoldProds ,
2331769   +   MntMeatProducts ,
2331770   +   MntSweetProducts ,
2331771   +   MntWines ,
2331772   +   MonthsAsCustomer ,
2331773   +   NumCatalogPurchases ,
2331774   +   NumDealsPurchases ,
2331775   +   NumDistPurchases ,
2331776   +   NumStorePurchases ,
2331777   +   NumWebPurchases ,
2331778   +   NumWebVisitsMonth ,
2331779   +   RFMstat ,
2331780   +   RMntFrq ,
2331781   +   Recency ,
2331782   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2331783   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2331784   +
2331785   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2331786   +END;
MPRINT(EM_DIAGRAM):   END;
2331787   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2331788   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2331789   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2331790   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2331791   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2331792   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2331793   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2331794   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2331795   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2331796   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2331797   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2331798   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2331799   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2331800   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2331801   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2331802   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2331803   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2331804   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2331805   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2331806   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2331807   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2331808   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2331809   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2331810   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2331811   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2331812   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2331813   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2331814   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2331815   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2331816   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2331817   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2331818   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2331819   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2331820   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2331821   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2331822   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2331823   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2331824   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2331825   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2331826   +END;
MPRINT(EM_DIAGRAM):   END;
2331827   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2331828   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2331829   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2331830   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2331831   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2331832   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2331833   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2331834   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2331835   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2331836   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2331837   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2331838   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2331839   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2331840   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2331841   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2331842   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2331843   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2331844   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2331845   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2331846   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2331847   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2331848   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2331849   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2331850   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2331851   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2331852   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2331853   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2331854   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2331855   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2331856   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2331857   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2331858   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2331859   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2331860   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2331861   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2331862   +   ELSE S_NumCatalogPurchases
2331863   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2331864   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2331865   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2331866   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2331867   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2331868   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2331869   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2331870   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2331871   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2331872   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2331873   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2331874   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2331875   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2331876   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2331877   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2331878   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2331879   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2331880   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2331881   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2331882   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2331883   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2331884   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2331885   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2331886   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2331887   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2331888   +END;
MPRINT(EM_DIAGRAM):   END;
2331889   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2331890   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2331891   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2331892   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2331893   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2331894   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2331895   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2331896   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2331897   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2331898   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2331899   +   H1x1_1  =     0.08465472857554 * S_AcceptedCmpTotal
2331900   +          +     0.23104131534618 * S_Age  +     0.27646175976509 * S_Frq
2331901   +          +     0.45938840681203 * S_Income  +     0.09814900830666 *
2331902   +        S_Kidhome  +     0.23249430277518 * S_Mnt  +    -0.51905493105122 *
2331903   +        S_MntFishProducts  +    -0.07604226481078 * S_MntFruits
2331904   +          +     0.10100393832157 * S_MntGoldProds  +     1.56159221713858 *
2331905   +        S_MntMeatProducts  +     0.12166799382268 * S_MntSweetProducts
2331906   +          +    -0.63388816790524 * S_MntWines  +     0.00878303775585 *
2331907   +        S_MonthsAsCustomer  +     0.01990411233136 * S_NumCatalogPurchases
2331908   +          +     0.19770934886328 * S_NumDealsPurchases
2331909   +          +      0.0515215988111 * S_NumDistPurchases
2331910   +          +    -0.34569346346089 * S_NumStorePurchases
2331911   +          +    -0.27122293596124 * S_NumWebPurchases
2331912   +          +    -0.17061565609755 * S_NumWebVisitsMonth
2331913   +          +      0.1271178187502 * S_RFMstat  +     0.38306508975954 *
2331914   +        S_RMntFrq  +     0.05823588653853 * S_Recency
2331915   +          +    -0.03760117378617 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.08465472857554 * S_AcceptedCmpTotal + 0.23104131534618 * 
S_Age + 0.27646175976509 * S_Frq + 0.45938840681203 * S_Income + 0.09814900830666 * S_Kidhome 
+ 0.23249430277518 * S_Mnt + -0.51905493105122 * S_MntFishProducts + -0.07604226481078 * 
S_MntFruits + 0.10100393832157 * S_MntGoldProds + 1.56159221713858 * S_MntMeatProducts + 
0.12166799382268 * S_MntSweetProducts + -0.63388816790524 * S_MntWines + 0.00878303775585 * 
S_MonthsAsCustomer + 0.01990411233136 * S_NumCatalogPurchases + 0.19770934886328 * 
S_NumDealsPurchases + 0.0515215988111 * S_NumDistPurchases + -0.34569346346089 * 
S_NumStorePurchases + -0.27122293596124 * S_NumWebPurchases + -0.17061565609755 * 
S_NumWebVisitsMonth + 0.1271178187502 * S_RFMstat + 0.38306508975954 * S_RMntFrq + 
0.05823588653853 * S_Recency + -0.03760117378617 * S_Teenhome ;
2331916   +   H1x1_2  =     0.16564144258189 * S_AcceptedCmpTotal
2331917   +          +    -0.18930338067433 * S_Age  +    -0.23013558761757 * S_Frq
2331918   +          +     -0.1347135122598 * S_Income  +     0.04776498811407 *
2331919   +        S_Kidhome  +    -0.14940302068852 * S_Mnt  +    -0.13108691405604 *
2331920   +        S_MntFishProducts  +    -0.02561341150704 * S_MntFruits
2331921   +          +    -0.02022222891948 * S_MntGoldProds  +     0.80867688993093 *
2331922   +        S_MntMeatProducts  +    -0.08374488783635 * S_MntSweetProducts
2331923   +          +     -0.6719369441832 * S_MntWines  +    -0.14760035685198 *
2331924   +        S_MonthsAsCustomer  +      0.4007376271331 * S_NumCatalogPurchases
2331925   +          +     0.54308887602031 * S_NumDealsPurchases
2331926   +          +    -0.22507315320192 * S_NumDistPurchases
2331927   +          +    -0.79861387328361 * S_NumStorePurchases
2331928   +          +    -0.45467494002747 * S_NumWebPurchases
2331929   +          +      0.2119048824613 * S_NumWebVisitsMonth
2331930   +          +     0.30167662748678 * S_RFMstat  +     0.10712110659027 *
2331931   +        S_RMntFrq  +    -0.03061918029089 * S_Recency
2331932   +          +    -0.06096313113607 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.16564144258189 * S_AcceptedCmpTotal + -0.18930338067433 * 
S_Age + -0.23013558761757 * S_Frq + -0.1347135122598 * S_Income + 0.04776498811407 * S_Kidhome 
+ -0.14940302068852 * S_Mnt + -0.13108691405604 * S_MntFishProducts + -0.02561341150704 * 
S_MntFruits + -0.02022222891948 * S_MntGoldProds + 0.80867688993093 * S_MntMeatProducts + 
-0.08374488783635 * S_MntSweetProducts + -0.6719369441832 * S_MntWines + -0.14760035685198 * 
S_MonthsAsCustomer + 0.4007376271331 * S_NumCatalogPurchases + 0.54308887602031 * 
S_NumDealsPurchases + -0.22507315320192 * S_NumDistPurchases + -0.79861387328361 * 
S_NumStorePurchases + -0.45467494002747 * S_NumWebPurchases + 0.2119048824613 * 
S_NumWebVisitsMonth + 0.30167662748678 * S_RFMstat + 0.10712110659027 * S_RMntFrq + 
-0.03061918029089 * S_Recency + -0.06096313113607 * S_Teenhome ;
2331933   +   H1x1_3  =     0.02674875562898 * S_AcceptedCmpTotal
2331934   +          +    -0.19731891748843 * S_Age  +    -0.00753784701259 * S_Frq
2331935   +          +    -0.31764694608254 * S_Income  +     0.49525183733398 *
2331936   +        S_Kidhome  +     0.24623619243686 * S_Mnt  +     0.25904859702044 *
2331937   +        S_MntFishProducts  +     0.26153358982994 * S_MntFruits
2331938   +          +    -0.07223707213485 * S_MntGoldProds  +    -0.15192960471493 *
2331939   +        S_MntMeatProducts  +     0.08241128624385 * S_MntSweetProducts
2331940   +          +     0.62479763709054 * S_MntWines  +     0.03593742779349 *
2331941   +        S_MonthsAsCustomer  +     0.00825730323418 * S_NumCatalogPurchases
2331942   +          +     -0.0771083149302 * S_NumDealsPurchases
2331943   +          +     0.03403621221162 * S_NumDistPurchases
2331944   +          +     0.61303946422025 * S_NumStorePurchases
2331945   +          +     0.27126793634053 * S_NumWebPurchases
2331946   +          +     -0.9769688424222 * S_NumWebVisitsMonth
2331947   +          +     0.08832170040425 * S_RFMstat  +     0.13241491054212 *
2331948   +        S_RMntFrq  +     0.94872655811163 * S_Recency
2331949   +          +     0.22002222738147 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.02674875562898 * S_AcceptedCmpTotal + -0.19731891748843 * 
S_Age + -0.00753784701259 * S_Frq + -0.31764694608254 * S_Income + 0.49525183733398 * 
S_Kidhome + 0.24623619243686 * S_Mnt + 0.25904859702044 * S_MntFishProducts + 0.26153358982994 
* S_MntFruits + -0.07223707213485 * S_MntGoldProds + -0.15192960471493 * S_MntMeatProducts + 
0.08241128624385 * S_MntSweetProducts + 0.62479763709054 * S_MntWines + 0.03593742779349 * 
S_MonthsAsCustomer + 0.00825730323418 * S_NumCatalogPurchases + -0.0771083149302 * 
S_NumDealsPurchases + 0.03403621221162 * S_NumDistPurchases + 0.61303946422025 * 
S_NumStorePurchases + 0.27126793634053 * S_NumWebPurchases + -0.9769688424222 * 
S_NumWebVisitsMonth + 0.08832170040425 * S_RFMstat + 0.13241491054212 * S_RMntFrq + 
0.94872655811163 * S_Recency + 0.22002222738147 * S_Teenhome ;
2331950   +   H1x1_4  =     0.46328587348713 * S_AcceptedCmpTotal
2331951   +          +      -0.306946385792 * S_Age  +    -0.24247964225191 * S_Frq
2331952   +          +    -0.42968609314513 * S_Income  +    -0.08934431746158 *
2331953   +        S_Kidhome  +     0.15972194979558 * S_Mnt  +    -0.22174909818279 *
2331954   +        S_MntFishProducts  +    -0.23755215058744 * S_MntFruits
2331955   +          +      -0.124789433808 * S_MntGoldProds  +     0.50040173514144 *
2331956   +        S_MntMeatProducts  +     0.02850063230459 * S_MntSweetProducts
2331957   +          +     0.13427582671876 * S_MntWines  +     0.25569886862761 *
2331958   +        S_MonthsAsCustomer  +     0.34004201732149 * S_NumCatalogPurchases
2331959   +          +     0.29894603062327 * S_NumDealsPurchases
2331960   +          +     0.07614620530875 * S_NumDistPurchases
2331961   +          +     0.15402335009896 * S_NumStorePurchases
2331962   +          +     0.10615749096863 * S_NumWebPurchases
2331963   +          +     0.41962286816879 * S_NumWebVisitsMonth
2331964   +          +     0.00203630873093 * S_RFMstat  +     0.04736976805951 *
2331965   +        S_RMntFrq  +    -0.84751074132422 * S_Recency
2331966   +          +      0.2189023557249 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46328587348713 * S_AcceptedCmpTotal + -0.306946385792 * S_Age 
+ -0.24247964225191 * S_Frq + -0.42968609314513 * S_Income + -0.08934431746158 * S_Kidhome + 
0.15972194979558 * S_Mnt + -0.22174909818279 * S_MntFishProducts + -0.23755215058744 * 
S_MntFruits + -0.124789433808 * S_MntGoldProds + 0.50040173514144 * S_MntMeatProducts + 
0.02850063230459 * S_MntSweetProducts + 0.13427582671876 * S_MntWines + 0.25569886862761 * 
S_MonthsAsCustomer + 0.34004201732149 * S_NumCatalogPurchases + 0.29894603062327 * 
S_NumDealsPurchases + 0.07614620530875 * S_NumDistPurchases + 0.15402335009896 * 
S_NumStorePurchases + 0.10615749096863 * S_NumWebPurchases + 0.41962286816879 * 
S_NumWebVisitsMonth + 0.00203630873093 * S_RFMstat + 0.04736976805951 * S_RMntFrq + 
-0.84751074132422 * S_Recency + 0.2189023557249 * S_Teenhome ;
2331967   +   H1x1_5  =    -0.32353341757368 * S_AcceptedCmpTotal
2331968   +          +     0.03233494925748 * S_Age  +    -0.21296093282526 * S_Frq
2331969   +          +    -0.33919081075007 * S_Income  +     0.08771362671573 *
2331970   +        S_Kidhome  +    -0.10797068838726 * S_Mnt  +    -0.19736358637985 *
2331971   +        S_MntFishProducts  +    -0.19679917231132 * S_MntFruits
2331972   +          +     0.07502386205588 * S_MntGoldProds  +    -0.50948750987247 *
2331973   +        S_MntMeatProducts  +     0.00413757018488 * S_MntSweetProducts
2331974   +          +      0.0788538305785 * S_MntWines  +    -0.02917052455021 *
2331975   +        S_MonthsAsCustomer  +    -0.53933514609821 * S_NumCatalogPurchases
2331976   +          +     0.14392502416642 * S_NumDealsPurchases
2331977   +          +    -0.10026304978633 * S_NumDistPurchases
2331978   +          +     -0.0588453022746 * S_NumStorePurchases
2331979   +          +     0.24799398610395 * S_NumWebPurchases
2331980   +          +    -0.52695548549717 * S_NumWebVisitsMonth
2331981   +          +     0.01855620452049 * S_RFMstat  +    -0.00189170766477 *
2331982   +        S_RMntFrq  +     0.51841177421912 * S_Recency
2331983   +          +     0.31491299720207 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.32353341757368 * S_AcceptedCmpTotal + 0.03233494925748 * 
S_Age + -0.21296093282526 * S_Frq + -0.33919081075007 * S_Income + 0.08771362671573 * 
S_Kidhome + -0.10797068838726 * S_Mnt + -0.19736358637985 * S_MntFishProducts + 
-0.19679917231132 * S_MntFruits + 0.07502386205588 * S_MntGoldProds + -0.50948750987247 * 
S_MntMeatProducts + 0.00413757018488 * S_MntSweetProducts + 0.0788538305785 * S_MntWines + 
-0.02917052455021 * S_MonthsAsCustomer + -0.53933514609821 * S_NumCatalogPurchases + 
0.14392502416642 * S_NumDealsPurchases + -0.10026304978633 * S_NumDistPurchases + 
-0.0588453022746 * S_NumStorePurchases + 0.24799398610395 * S_NumWebPurchases + 
-0.52695548549717 * S_NumWebVisitsMonth + 0.01855620452049 * S_RFMstat + -0.00189170766477 * 
S_RMntFrq + 0.51841177421912 * S_Recency + 0.31491299720207 * S_Teenhome ;
2331984   +   H1x1_6  =     -0.2113594539647 * S_AcceptedCmpTotal
2331985   +          +     -0.1052829531896 * S_Age  +     0.30802959734964 * S_Frq
2331986   +          +    -0.03112570586685 * S_Income  +     0.19129661263247 *
2331987   +        S_Kidhome  +     0.00533736622639 * S_Mnt  +    -0.06112703732925 *
2331988   +        S_MntFishProducts  +    -0.15875686512247 * S_MntFruits
2331989   +          +    -0.08040179272112 * S_MntGoldProds  +    -0.14462087536907 *
2331990   +        S_MntMeatProducts  +     0.21353582706121 * S_MntSweetProducts
2331991   +          +    -0.30180630737612 * S_MntWines  +    -0.11825033043182 *
2331992   +        S_MonthsAsCustomer  +     -0.2917393256645 * S_NumCatalogPurchases
2331993   +          +     0.08149600854964 * S_NumDealsPurchases
2331994   +          +     0.16873541613513 * S_NumDistPurchases
2331995   +          +    -0.20437343413446 * S_NumStorePurchases
2331996   +          +     -0.1671107527288 * S_NumWebPurchases
2331997   +          +     0.03677043100993 * S_NumWebVisitsMonth
2331998   +          +      0.0240516540488 * S_RFMstat  +     0.06155030856383 *
2331999   +        S_RMntFrq  +    -0.28802122451372 * S_Recency
2332000   +          +     0.06998878697307 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.2113594539647 * S_AcceptedCmpTotal + -0.1052829531896 * 
S_Age + 0.30802959734964 * S_Frq + -0.03112570586685 * S_Income + 0.19129661263247 * S_Kidhome 
+ 0.00533736622639 * S_Mnt + -0.06112703732925 * S_MntFishProducts + -0.15875686512247 * 
S_MntFruits + -0.08040179272112 * S_MntGoldProds + -0.14462087536907 * S_MntMeatProducts + 
0.21353582706121 * S_MntSweetProducts + -0.30180630737612 * S_MntWines + -0.11825033043182 * 
S_MonthsAsCustomer + -0.2917393256645 * S_NumCatalogPurchases + 0.08149600854964 * 
S_NumDealsPurchases + 0.16873541613513 * S_NumDistPurchases + -0.20437343413446 * 
S_NumStorePurchases + -0.1671107527288 * S_NumWebPurchases + 0.03677043100993 * 
S_NumWebVisitsMonth + 0.0240516540488 * S_RFMstat + 0.06155030856383 * S_RMntFrq + 
-0.28802122451372 * S_Recency + 0.06998878697307 * S_Teenhome ;
2332001   +   H1x1_1  = H1x1_1  +    -0.33641509021082 * AcceptedCmp10
2332002   +          +     0.03092292109435 * AcceptedCmp20  +    -0.23551187181907 *
2332003   +        AcceptedCmp30  +    -0.06694400005185 * AcceptedCmp40
2332004   +          +    -0.14203506237074 * AcceptedCmp50  +    -0.25866390496966 *
2332005   +        Complain0  +     0.19505921178308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.33641509021082 * AcceptedCmp10 + 0.03092292109435 * 
AcceptedCmp20 + -0.23551187181907 * AcceptedCmp30 + -0.06694400005185 * AcceptedCmp40 + 
-0.14203506237074 * AcceptedCmp50 + -0.25866390496966 * Complain0 + 0.19505921178308 * 
HigherEducationBinary0 ;
2332006   +   H1x1_2  = H1x1_2  +     0.09937599707203 * AcceptedCmp10
2332007   +          +     0.03831208573575 * AcceptedCmp20  +     0.39683693019758 *
2332008   +        AcceptedCmp30  +     0.37006277175295 * AcceptedCmp40
2332009   +          +     0.21293419476895 * AcceptedCmp50  +     0.15528568367473 *
2332010   +        Complain0  +    -0.30210013299822 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.09937599707203 * AcceptedCmp10 + 0.03831208573575 * 
AcceptedCmp20 + 0.39683693019758 * AcceptedCmp30 + 0.37006277175295 * AcceptedCmp40 + 
0.21293419476895 * AcceptedCmp50 + 0.15528568367473 * Complain0 + -0.30210013299822 * 
HigherEducationBinary0 ;
2332011   +   H1x1_3  = H1x1_3  +     0.29891621770856 * AcceptedCmp10
2332012   +          +     0.64938384482014 * AcceptedCmp20  +     0.44997242602142 *
2332013   +        AcceptedCmp30  +       0.479093722666 * AcceptedCmp40
2332014   +          +     0.50957180373919 * AcceptedCmp50  +     0.27833535432461 *
2332015   +        Complain0  +    -0.20383534906723 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.29891621770856 * AcceptedCmp10 + 0.64938384482014 * 
AcceptedCmp20 + 0.44997242602142 * AcceptedCmp30 + 0.479093722666 * AcceptedCmp40 + 
0.50957180373919 * AcceptedCmp50 + 0.27833535432461 * Complain0 + -0.20383534906723 * 
HigherEducationBinary0 ;
2332016   +   H1x1_4  = H1x1_4  +    -0.26872515586946 * AcceptedCmp10
2332017   +          +    -0.24299337381911 * AcceptedCmp20  +    -0.01147155911926 *
2332018   +        AcceptedCmp30  +     -0.3056041277894 * AcceptedCmp40
2332019   +          +    -0.05496409609003 * AcceptedCmp50  +     0.07858238173893 *
2332020   +        Complain0  +     0.05721550070076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26872515586946 * AcceptedCmp10 + -0.24299337381911 
* AcceptedCmp20 + -0.01147155911926 * AcceptedCmp30 + -0.3056041277894 * AcceptedCmp40 + 
-0.05496409609003 * AcceptedCmp50 + 0.07858238173893 * Complain0 + 0.05721550070076 * 
HigherEducationBinary0 ;
2332021   +   H1x1_5  = H1x1_5  +    -0.14067626649899 * AcceptedCmp10
2332022   +          +    -0.30627802828357 * AcceptedCmp20  +     0.05057942365592 *
2332023   +        AcceptedCmp30  +    -0.10378506600459 * AcceptedCmp40
2332024   +          +     0.07479232390108 * AcceptedCmp50  +     0.07252750671496 *
2332025   +        Complain0  +     0.11114854035831 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.14067626649899 * AcceptedCmp10 + -0.30627802828357 
* AcceptedCmp20 + 0.05057942365592 * AcceptedCmp30 + -0.10378506600459 * AcceptedCmp40 + 
0.07479232390108 * AcceptedCmp50 + 0.07252750671496 * Complain0 + 0.11114854035831 * 
HigherEducationBinary0 ;
2332026   +   H1x1_6  = H1x1_6  +    -0.25806332334976 * AcceptedCmp10
2332027   +          +     0.03944021903138 * AcceptedCmp20  +    -0.08792206887119 *
2332028   +        AcceptedCmp30  +    -0.24631282865199 * AcceptedCmp40
2332029   +          +    -0.06123991538969 * AcceptedCmp50  +    -0.03114784375357 *
2332030   +        Complain0  +    -0.25204544481193 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.25806332334976 * AcceptedCmp10 + 0.03944021903138 * 
AcceptedCmp20 + -0.08792206887119 * AcceptedCmp30 + -0.24631282865199 * AcceptedCmp40 + 
-0.06123991538969 * AcceptedCmp50 + -0.03114784375357 * Complain0 + -0.25204544481193 * 
HigherEducationBinary0 ;
2332031   +   H1x1_1  = H1x1_1  +      0.2972170984261 * Education2n_Cycle
2332032   +          +     0.01651368568996 * EducationBasic  +     -0.1186055936649 *
2332033   +        EducationGraduation  +      0.0228208538951 * EducationMaster
2332034   +          +    -0.31045295887604 * Marital_StatusDivorced
2332035   +          +    -0.01109401001539 * Marital_StatusMarried
2332036   +          +     0.01325135981025 * Marital_StatusSingle
2332037   +          +     0.16609357475978 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.2972170984261 * Education2n_Cycle + 0.01651368568996 
* EducationBasic + -0.1186055936649 * EducationGraduation + 0.0228208538951 * EducationMaster 
+ -0.31045295887604 * Marital_StatusDivorced + -0.01109401001539 * Marital_StatusMarried + 
0.01325135981025 * Marital_StatusSingle + 0.16609357475978 * Marital_StatusTogether ;
2332038   +   H1x1_2  = H1x1_2  +    -0.07095220065018 * Education2n_Cycle
2332039   +          +    -0.23491732567608 * EducationBasic  +     0.20187086452315 *
2332040   +        EducationGraduation  +     0.07524128723108 * EducationMaster
2332041   +          +     0.02275101861599 * Marital_StatusDivorced
2332042   +          +     0.20271548664903 * Marital_StatusMarried
2332043   +          +    -0.12132069210718 * Marital_StatusSingle
2332044   +          +     0.00085090729385 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.07095220065018 * Education2n_Cycle + 
-0.23491732567608 * EducationBasic + 0.20187086452315 * EducationGraduation + 0.07524128723108 
* EducationMaster + 0.02275101861599 * Marital_StatusDivorced + 0.20271548664903 * 
Marital_StatusMarried + -0.12132069210718 * Marital_StatusSingle + 0.00085090729385 * 
Marital_StatusTogether ;
2332045   +   H1x1_3  = H1x1_3  +    -0.02268297689573 * Education2n_Cycle
2332046   +          +     0.06359770535369 * EducationBasic  +     -0.1194001280088 *
2332047   +        EducationGraduation  +     0.17299848976308 * EducationMaster
2332048   +          +     -0.4992959703281 * Marital_StatusDivorced
2332049   +          +     0.62071659624138 * Marital_StatusMarried
2332050   +          +    -0.21776202274494 * Marital_StatusSingle
2332051   +          +     0.54712874598141 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.02268297689573 * Education2n_Cycle + 
0.06359770535369 * EducationBasic + -0.1194001280088 * EducationGraduation + 0.17299848976308 
* EducationMaster + -0.4992959703281 * Marital_StatusDivorced + 0.62071659624138 * 
Marital_StatusMarried + -0.21776202274494 * Marital_StatusSingle + 0.54712874598141 * 
Marital_StatusTogether ;
2332052   +   H1x1_4  = H1x1_4  +    -0.17773353520266 * Education2n_Cycle
2332053   +          +     0.17998728120628 * EducationBasic  +    -0.00324602612825 *
2332054   +        EducationGraduation  +    -0.22448876765089 * EducationMaster
2332055   +          +     0.05626212670587 * Marital_StatusDivorced
2332056   +          +     0.14353891364597 * Marital_StatusMarried
2332057   +          +    -0.29006765622997 * Marital_StatusSingle
2332058   +          +     0.05503638282535 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.17773353520266 * Education2n_Cycle + 
0.17998728120628 * EducationBasic + -0.00324602612825 * EducationGraduation + 
-0.22448876765089 * EducationMaster + 0.05626212670587 * Marital_StatusDivorced + 
0.14353891364597 * Marital_StatusMarried + -0.29006765622997 * Marital_StatusSingle + 
0.05503638282535 * Marital_StatusTogether ;
2332059   +   H1x1_5  = H1x1_5  +     0.06634316870499 * Education2n_Cycle
2332060   +          +    -0.36153880127411 * EducationBasic  +     0.23023144658635 *
2332061   +        EducationGraduation  +    -0.06568730318683 * EducationMaster
2332062   +          +    -0.21206913700604 * Marital_StatusDivorced
2332063   +          +     0.58790643614629 * Marital_StatusMarried
2332064   +          +    -0.65995982578062 * Marital_StatusSingle
2332065   +          +     0.49642503732428 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.06634316870499 * Education2n_Cycle + 
-0.36153880127411 * EducationBasic + 0.23023144658635 * EducationGraduation + 
-0.06568730318683 * EducationMaster + -0.21206913700604 * Marital_StatusDivorced + 
0.58790643614629 * Marital_StatusMarried + -0.65995982578062 * Marital_StatusSingle + 
0.49642503732428 * Marital_StatusTogether ;
2332066   +   H1x1_6  = H1x1_6  +     0.16504024096118 * Education2n_Cycle
2332067   +          +     0.11925867171875 * EducationBasic  +    -0.04213907014732 *
2332068   +        EducationGraduation  +    -0.21389968555475 * EducationMaster
2332069   +          +    -0.05047370516008 * Marital_StatusDivorced
2332070   +          +    -0.23139090963669 * Marital_StatusMarried
2332071   +          +     0.04816197463249 * Marital_StatusSingle
2332072   +          +     0.04977890114896 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16504024096118 * Education2n_Cycle + 
0.11925867171875 * EducationBasic + -0.04213907014732 * EducationGraduation + 
-0.21389968555475 * EducationMaster + -0.05047370516008 * Marital_StatusDivorced + 
-0.23139090963669 * Marital_StatusMarried + 0.04816197463249 * Marital_StatusSingle + 
0.04977890114896 * Marital_StatusTogether ;
2332073   +   H1x1_1  =    -1.90576647346127 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.90576647346127 + H1x1_1 ;
2332074   +   H1x1_2  =     0.32295787429294 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.32295787429294 + H1x1_2 ;
2332075   +   H1x1_3  =     0.75117643107919 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.75117643107919 + H1x1_3 ;
2332076   +   H1x1_4  =      1.2336762751587 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.2336762751587 + H1x1_4 ;
2332077   +   H1x1_5  =    -0.97062317465491 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.97062317465491 + H1x1_5 ;
2332078   +   H1x1_6  =    -1.15756803634408 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.15756803634408 + H1x1_6 ;
2332079   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2332080   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2332081   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2332082   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2332083   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 * 
H1x1_1 ;
2332084   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2332085   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2332086   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 * 
H1x1_2 ;
2332087   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2332088   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2332089   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 * 
H1x1_3 ;
2332090   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2332091   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2332092   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 * 
H1x1_4 ;
2332093   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2332094   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2332095   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 * 
H1x1_5 ;
2332096   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2332097   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2332098   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 * 
H1x1_6 ;
2332099   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2332100   +END;
MPRINT(EM_DIAGRAM):   END;
2332101   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2332102   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2332103   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2332104   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2332105   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2332106   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2332107   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2332108   +END;
MPRINT(EM_DIAGRAM):   END;
2332109   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2332110   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2332111   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2332112   +
2332113   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2332114   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2332115   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2332116   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2332117   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2332118   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2332119   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2332120   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2332121   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2332122   +end;
MPRINT(EM_DIAGRAM):   end;
2332123   +else do;
MPRINT(EM_DIAGRAM):   else do;
2332124   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2332125   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2332126   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2332127   +   end;
MPRINT(EM_DIAGRAM):   end;
2332128   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2332129   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2332130   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2332131   +   end;
MPRINT(EM_DIAGRAM):   end;
2332132   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2332133   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2332134   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2332135   +   end;
MPRINT(EM_DIAGRAM):   end;
2332136   +end;
MPRINT(EM_DIAGRAM):   end;
2332137   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2332138   +   P_DepVar1  =    -0.99830813428318 * H1x1_1  +     1.33495006526712 * H1x1_2
2332139   +          +    -1.37942150026657 * H1x1_3  +     1.22714974922576 * H1x1_4
2332140   +          +     1.73375794385595 * H1x1_5  +     -0.0100306049679 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.99830813428318 * H1x1_1 + 1.33495006526712 * H1x1_2 + 
-1.37942150026657 * H1x1_3 + 1.22714974922576 * H1x1_4 + 1.73375794385595 * H1x1_5 + 
-0.0100306049679 * H1x1_6 ;
2332141   +   P_DepVar1  =    -1.90393999986167 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.90393999986167 + P_DepVar1 ;
2332142   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2332143   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2332144   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2332145   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2332146   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2332147   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2332148   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2332149   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2332150   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2332151   +END;
MPRINT(EM_DIAGRAM):   END;
2332152   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2332153   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2332154   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2332155   +END;
MPRINT(EM_DIAGRAM):   END;
2332156   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2332157   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2332158   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2332159   +END;
MPRINT(EM_DIAGRAM):   END;
2332160   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2332161   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2332162   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2332163   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2332164   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2332165   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2332166   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2332167   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2332168   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2332169   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2332170   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2332171   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2332172   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2332173   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2332174   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2332175   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2332176   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2332177   +END;
MPRINT(EM_DIAGRAM):   END;
2332178   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2332179   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2332180   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2332181   +drop
2332182   +H1x1_1
2332183   +H1x1_2
2332184   +H1x1_3
2332185   +H1x1_4
2332186   +H1x1_5
2332187   +H1x1_6
2332188   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 ;
2332189   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2332190   +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
2332191   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2332192   +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
2332193   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2332194   +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
2332195   +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
2332196   +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
2332197   +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
2332198   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2332199   +* Renaming Into variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural11;
2332200   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2332201   +length AutoNeural11_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural11_I_DepVar $32;
2332202   +drop AutoNeural11_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_I_DepVar;
2332203   +AutoNeural11_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural11_I_DepVar = I_DepVar;
2332204   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2332205   +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
2332206   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2332207   +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
2332208   +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
2332209   +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
2332210   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2332211   +* Ensmbl38: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Scoring Code of model 7 of 7;
2332212   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2332213   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2332214   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2332215   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2332216   +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
2332217   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2332218   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2332219   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2332220   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2332221   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2332222   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2332223   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2332224   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2332225   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2332226   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2332227   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2332228   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2332229   +LENGTH _WARN_ $4
2332230   +      F_DepVar  $ 12
2332231   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2332232   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2332233   +
2332234   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2332235   +
2332236   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2332237   +
2332238   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2332239   +
2332240   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2332241   +
2332242   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2332243   +
2332244   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2332245   +
2332246   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2332247   +
2332248   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2332249   +
2332250   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2332251   +
2332252   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2332253   +
2332254   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2332255   +
2332256   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2332257   +
2332258   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2332259   +
2332260   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2332261   +
2332262   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2332263   +
2332264   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2332265   +
2332266   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2332267   +
2332268   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2332269   +
2332270   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2332271   +
2332272   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2332273   +
2332274   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2332275   +
2332276   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2332277   +
2332278   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2332279   +
2332280   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2332281   +
2332282   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2332283   +
2332284   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2332285   +
2332286   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2332287   +
2332288   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2332289   +
2332290   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2332291   +
2332292   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2332293   +
2332294   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2332295   +
2332296   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2332297   +
2332298   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2332299   +
2332300   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2332301   +
2332302   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2332303   +
2332304   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2332305   +
2332306   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2332307   +
2332308   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2332309   +
2332310   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2332311   +
2332312   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2332313   +
2332314   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2332315   +
2332316   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2332317   +
2332318   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2332319   +
2332320   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
2332321   +
2332322   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2332323   +
2332324   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2332325   +
2332326   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2332327   +
2332328   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2332329   +
2332330   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2332331   +
2332332   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2332333   +
2332334   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
2332335   +
2332336   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2332337   +
2332338   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2332339   +
2332340   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2332341   +
2332342   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2332343   +
2332344   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2332345   +
2332346   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2332347   +
2332348   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2332349   +
2332350   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2332351   +
2332352   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2332353   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2332354   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2332355   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2332356   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2332357   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2332358   +end;
MPRINT(EM_DIAGRAM):   end;
2332359   +else do;
MPRINT(EM_DIAGRAM):   else do;
2332360   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2332361   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2332362   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2332363   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2332364   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2332365   +   end;
MPRINT(EM_DIAGRAM):   end;
2332366   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2332367   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2332368   +   end;
MPRINT(EM_DIAGRAM):   end;
2332369   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2332370   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2332371   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2332372   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2332373   +   end;
MPRINT(EM_DIAGRAM):   end;
2332374   +end;
MPRINT(EM_DIAGRAM):   end;
2332375   +
2332376   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2332377   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2332378   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2332379   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2332380   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2332381   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2332382   +end;
MPRINT(EM_DIAGRAM):   end;
2332383   +else do;
MPRINT(EM_DIAGRAM):   else do;
2332384   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2332385   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2332386   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2332387   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2332388   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2332389   +   end;
MPRINT(EM_DIAGRAM):   end;
2332390   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2332391   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2332392   +   end;
MPRINT(EM_DIAGRAM):   end;
2332393   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2332394   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2332395   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2332396   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2332397   +   end;
MPRINT(EM_DIAGRAM):   end;
2332398   +end;
MPRINT(EM_DIAGRAM):   end;
2332399   +
2332400   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2332401   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2332402   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2332403   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2332404   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2332405   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2332406   +end;
MPRINT(EM_DIAGRAM):   end;
2332407   +else do;
MPRINT(EM_DIAGRAM):   else do;
2332408   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2332409   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2332410   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2332411   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2332412   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2332413   +   end;
MPRINT(EM_DIAGRAM):   end;
2332414   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2332415   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2332416   +   end;
MPRINT(EM_DIAGRAM):   end;
2332417   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2332418   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2332419   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2332420   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2332421   +   end;
MPRINT(EM_DIAGRAM):   end;
2332422   +end;
MPRINT(EM_DIAGRAM):   end;
2332423   +
2332424   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2332425   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2332426   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2332427   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2332428   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2332429   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2332430   +end;
MPRINT(EM_DIAGRAM):   end;
2332431   +else do;
MPRINT(EM_DIAGRAM):   else do;
2332432   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2332433   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2332434   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2332435   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2332436   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2332437   +   end;
MPRINT(EM_DIAGRAM):   end;
2332438   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2332439   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2332440   +   end;
MPRINT(EM_DIAGRAM):   end;
2332441   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2332442   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2332443   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2332444   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2332445   +   end;
MPRINT(EM_DIAGRAM):   end;
2332446   +end;
MPRINT(EM_DIAGRAM):   end;
2332447   +
2332448   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2332449   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2332450   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2332451   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2332452   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2332453   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2332454   +end;
MPRINT(EM_DIAGRAM):   end;
2332455   +else do;
MPRINT(EM_DIAGRAM):   else do;
2332456   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2332457   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2332458   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2332459   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2332460   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2332461   +   end;
MPRINT(EM_DIAGRAM):   end;
2332462   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2332463   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2332464   +   end;
MPRINT(EM_DIAGRAM):   end;
2332465   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2332466   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2332467   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2332468   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2332469   +   end;
MPRINT(EM_DIAGRAM):   end;
2332470   +end;
MPRINT(EM_DIAGRAM):   end;
2332471   +
2332472   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2332473   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2332474   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2332475   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2332476   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2332477   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2332478   +end;
MPRINT(EM_DIAGRAM):   end;
2332479   +else do;
MPRINT(EM_DIAGRAM):   else do;
2332480   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2332481   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2332482   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2332483   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2332484   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2332485   +   end;
MPRINT(EM_DIAGRAM):   end;
2332486   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2332487   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2332488   +   end;
MPRINT(EM_DIAGRAM):   end;
2332489   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2332490   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2332491   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2332492   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2332493   +   end;
MPRINT(EM_DIAGRAM):   end;
2332494   +end;
MPRINT(EM_DIAGRAM):   end;
2332495   +
2332496   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2332497   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2332498   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2332499   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2332500   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2332501   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2332502   +end;
MPRINT(EM_DIAGRAM):   end;
2332503   +else do;
MPRINT(EM_DIAGRAM):   else do;
2332504   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2332505   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2332506   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2332507   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2332508   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2332509   +   end;
MPRINT(EM_DIAGRAM):   end;
2332510   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2332511   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2332512   +   end;
MPRINT(EM_DIAGRAM):   end;
2332513   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2332514   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2332515   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2332516   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2332517   +   end;
MPRINT(EM_DIAGRAM):   end;
2332518   +end;
MPRINT(EM_DIAGRAM):   end;
2332519   +
2332520   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2332521   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2332522   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2332523   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2332524   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2332525   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2332526   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2332527   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2332528   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2332529   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2332530   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2332531   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2332532   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2332533   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2332534   +end;
MPRINT(EM_DIAGRAM):   end;
2332535   +else do;
MPRINT(EM_DIAGRAM):   else do;
2332536   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2332537   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2332538   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2332539   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2332540   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2332541   +   end;
MPRINT(EM_DIAGRAM):   end;
2332542   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2332543   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2332544   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2332545   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2332546   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2332547   +   end;
MPRINT(EM_DIAGRAM):   end;
2332548   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2332549   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2332550   +   end;
MPRINT(EM_DIAGRAM):   end;
2332551   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2332552   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2332553   +   end;
MPRINT(EM_DIAGRAM):   end;
2332554   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2332555   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2332556   +   end;
MPRINT(EM_DIAGRAM):   end;
2332557   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2332558   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2332559   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2332560   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2332561   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2332562   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2332563   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2332564   +   end;
MPRINT(EM_DIAGRAM):   end;
2332565   +end;
MPRINT(EM_DIAGRAM):   end;
2332566   +
2332567   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2332568   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2332569   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2332570   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2332571   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2332572   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2332573   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2332574   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2332575   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2332576   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2332577   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2332578   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2332579   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2332580   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2332581   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2332582   +end;
MPRINT(EM_DIAGRAM):   end;
2332583   +else do;
MPRINT(EM_DIAGRAM):   else do;
2332584   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2332585   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2332586   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2332587   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2332588   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2332589   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2332590   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2332591   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2332592   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2332593   +         end;
MPRINT(EM_DIAGRAM):   end;
2332594   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2332595   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2332596   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2332597   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2332598   +            end;
MPRINT(EM_DIAGRAM):   end;
2332599   +         end;
MPRINT(EM_DIAGRAM):   end;
2332600   +      end;
MPRINT(EM_DIAGRAM):   end;
2332601   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2332602   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2332603   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2332604   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2332605   +         end;
MPRINT(EM_DIAGRAM):   end;
2332606   +      end;
MPRINT(EM_DIAGRAM):   end;
2332607   +   end;
MPRINT(EM_DIAGRAM):   end;
2332608   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2332609   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2332610   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2332611   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2332612   +      end;
MPRINT(EM_DIAGRAM):   end;
2332613   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2332614   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2332615   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2332616   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2332617   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2332618   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2332619   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2332620   +         end;
MPRINT(EM_DIAGRAM):   end;
2332621   +      end;
MPRINT(EM_DIAGRAM):   end;
2332622   +   end;
MPRINT(EM_DIAGRAM):   end;
2332623   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2332624   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2332625   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2332626   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2332627   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2332628   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2332629   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2332630   +   end;
MPRINT(EM_DIAGRAM):   end;
2332631   +end;
MPRINT(EM_DIAGRAM):   end;
2332632   +
2332633   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2332634   +*** Checking missing input Interval
2332635   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2332636   +
2332637   +IF NMISS(
2332638   +   AcceptedCmpTotal ,
2332639   +   Age ,
2332640   +   Frq ,
2332641   +   Income ,
2332642   +   Kidhome ,
2332643   +   Mnt ,
2332644   +   MntFishProducts ,
2332645   +   MntFruits ,
2332646   +   MntGoldProds ,
2332647   +   MntMeatProducts ,
2332648   +   MntSweetProducts ,
2332649   +   MntWines ,
2332650   +   MonthsAsCustomer ,
2332651   +   NumCatalogPurchases ,
2332652   +   NumDealsPurchases ,
2332653   +   NumDistPurchases ,
2332654   +   NumStorePurchases ,
2332655   +   NumWebPurchases ,
2332656   +   NumWebVisitsMonth ,
2332657   +   RFMstat ,
2332658   +   RMntFrq ,
2332659   +   Recency ,
2332660   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2332661   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2332662   +
2332663   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2332664   +END;
MPRINT(EM_DIAGRAM):   END;
2332665   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2332666   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2332667   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2332668   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2332669   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2332670   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2332671   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2332672   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2332673   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2332674   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2332675   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2332676   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2332677   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2332678   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2332679   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2332680   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2332681   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2332682   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2332683   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2332684   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2332685   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2332686   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2332687   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2332688   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2332689   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2332690   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2332691   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2332692   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2332693   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2332694   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2332695   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2332696   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2332697   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2332698   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2332699   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2332700   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2332701   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2332702   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2332703   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2332704   +END;
MPRINT(EM_DIAGRAM):   END;
2332705   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2332706   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2332707   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2332708   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2332709   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2332710   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2332711   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2332712   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2332713   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2332714   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2332715   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2332716   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2332717   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2332718   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2332719   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2332720   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2332721   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2332722   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2332723   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2332724   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2332725   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2332726   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2332727   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2332728   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2332729   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2332730   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2332731   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2332732   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2332733   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2332734   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2332735   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2332736   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2332737   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2332738   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2332739   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2332740   +   ELSE S_NumCatalogPurchases
2332741   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2332742   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2332743   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2332744   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2332745   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2332746   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2332747   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2332748   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2332749   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2332750   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2332751   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2332752   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2332753   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2332754   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2332755   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2332756   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2332757   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2332758   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2332759   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2332760   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2332761   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2332762   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2332763   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2332764   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2332765   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2332766   +END;
MPRINT(EM_DIAGRAM):   END;
2332767   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2332768   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2332769   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2332770   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2332771   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2332772   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2332773   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2332774   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2332775   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2332776   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2332777   +   H1x1_1  =    -0.08478534961354 * S_AcceptedCmpTotal
2332778   +          +     0.21528166003219 * S_Age  +    -0.16079737422774 * S_Frq
2332779   +          +     0.04922044955183 * S_Income  +     0.06245849112135 *
2332780   +        S_Kidhome  +    -0.12820970008154 * S_Mnt  +    -0.00676959308959 *
2332781   +        S_MntFishProducts  +    -0.20367403957375 * S_MntFruits
2332782   +          +    -0.06459558558968 * S_MntGoldProds  +     0.01557669100416 *
2332783   +        S_MntMeatProducts  +    -0.16342003924117 * S_MntSweetProducts
2332784   +          +     0.34676276369853 * S_MntWines  +    -0.08454570225616 *
2332785   +        S_MonthsAsCustomer  +    -0.00318885387905 * S_NumCatalogPurchases
2332786   +          +      0.1112677116841 * S_NumDealsPurchases
2332787   +          +     0.01563584187072 * S_NumDistPurchases
2332788   +          +     0.19193969522995 * S_NumStorePurchases
2332789   +          +      0.3133556199984 * S_NumWebPurchases
2332790   +          +    -0.21884874785716 * S_NumWebVisitsMonth
2332791   +          +     0.08478875792216 * S_RFMstat  +     0.05964414665285 *
2332792   +        S_RMntFrq  +    -0.12595000497726 * S_Recency
2332793   +          +     -0.1238719414537 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.08478534961354 * S_AcceptedCmpTotal + 0.21528166003219 * 
S_Age + -0.16079737422774 * S_Frq + 0.04922044955183 * S_Income + 0.06245849112135 * S_Kidhome 
+ -0.12820970008154 * S_Mnt + -0.00676959308959 * S_MntFishProducts + -0.20367403957375 * 
S_MntFruits + -0.06459558558968 * S_MntGoldProds + 0.01557669100416 * S_MntMeatProducts + 
-0.16342003924117 * S_MntSweetProducts + 0.34676276369853 * S_MntWines + -0.08454570225616 * 
S_MonthsAsCustomer + -0.00318885387905 * S_NumCatalogPurchases + 0.1112677116841 * 
S_NumDealsPurchases + 0.01563584187072 * S_NumDistPurchases + 0.19193969522995 * 
S_NumStorePurchases + 0.3133556199984 * S_NumWebPurchases + -0.21884874785716 * 
S_NumWebVisitsMonth + 0.08478875792216 * S_RFMstat + 0.05964414665285 * S_RMntFrq + 
-0.12595000497726 * S_Recency + -0.1238719414537 * S_Teenhome ;
2332794   +   H1x1_2  =     0.20807487357943 * S_AcceptedCmpTotal
2332795   +          +    -0.27223051908987 * S_Age  +     0.28649391533674 * S_Frq
2332796   +          +     0.46493719675068 * S_Income  +     0.10180542910079 *
2332797   +        S_Kidhome  +    -0.19573056673819 * S_Mnt  +    -0.05332725327514 *
2332798   +        S_MntFishProducts  +    -0.28610692329433 * S_MntFruits
2332799   +          +    -0.13417237194849 * S_MntGoldProds  +     0.45697707494335 *
2332800   +        S_MntMeatProducts  +    -0.28280545785477 * S_MntSweetProducts
2332801   +          +    -0.13234920069688 * S_MntWines  +     -0.2710938018651 *
2332802   +        S_MonthsAsCustomer  +     0.31174284041905 * S_NumCatalogPurchases
2332803   +          +     0.30225032753275 * S_NumDealsPurchases
2332804   +          +     0.33833359923595 * S_NumDistPurchases
2332805   +          +    -0.20255599575849 * S_NumStorePurchases
2332806   +          +    -0.12040071168942 * S_NumWebPurchases
2332807   +          +    -0.12407090307061 * S_NumWebVisitsMonth
2332808   +          +    -0.05688936259515 * S_RFMstat  +     0.15514736649245 *
2332809   +        S_RMntFrq  +     0.00838555462657 * S_Recency
2332810   +          +     0.04609426861136 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.20807487357943 * S_AcceptedCmpTotal + -0.27223051908987 * 
S_Age + 0.28649391533674 * S_Frq + 0.46493719675068 * S_Income + 0.10180542910079 * S_Kidhome 
+ -0.19573056673819 * S_Mnt + -0.05332725327514 * S_MntFishProducts + -0.28610692329433 * 
S_MntFruits + -0.13417237194849 * S_MntGoldProds + 0.45697707494335 * S_MntMeatProducts + 
-0.28280545785477 * S_MntSweetProducts + -0.13234920069688 * S_MntWines + -0.2710938018651 * 
S_MonthsAsCustomer + 0.31174284041905 * S_NumCatalogPurchases + 0.30225032753275 * 
S_NumDealsPurchases + 0.33833359923595 * S_NumDistPurchases + -0.20255599575849 * 
S_NumStorePurchases + -0.12040071168942 * S_NumWebPurchases + -0.12407090307061 * 
S_NumWebVisitsMonth + -0.05688936259515 * S_RFMstat + 0.15514736649245 * S_RMntFrq + 
0.00838555462657 * S_Recency + 0.04609426861136 * S_Teenhome ;
2332811   +   H1x1_3  =    -0.30541463116928 * S_AcceptedCmpTotal
2332812   +          +    -0.01746117216025 * S_Age  +    -0.44156473334329 * S_Frq
2332813   +          +    -0.51952426304193 * S_Income  +     0.20419921255777 *
2332814   +        S_Kidhome  +    -0.18174316707953 * S_Mnt  +    -0.03813675536406 *
2332815   +        S_MntFishProducts  +     -0.0959023413712 * S_MntFruits
2332816   +          +     0.12724081783278 * S_MntGoldProds  +    -0.07639148541426 *
2332817   +        S_MntMeatProducts  +     -0.0797214413833 * S_MntSweetProducts
2332818   +          +    -0.57705931875808 * S_MntWines  +    -0.12638551201991 *
2332819   +        S_MonthsAsCustomer  +    -0.21854676704549 * S_NumCatalogPurchases
2332820   +          +     0.16792903091627 * S_NumDealsPurchases
2332821   +          +    -0.37408945626745 * S_NumDistPurchases
2332822   +          +    -0.18067262995566 * S_NumStorePurchases
2332823   +          +     0.21192146789881 * S_NumWebPurchases
2332824   +          +    -0.23547702310669 * S_NumWebVisitsMonth
2332825   +          +    -0.02272089758813 * S_RFMstat  +    -0.16409330281075 *
2332826   +        S_RMntFrq  +     0.45021846112946 * S_Recency
2332827   +          +     0.32988735727394 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.30541463116928 * S_AcceptedCmpTotal + -0.01746117216025 * 
S_Age + -0.44156473334329 * S_Frq + -0.51952426304193 * S_Income + 0.20419921255777 * 
S_Kidhome + -0.18174316707953 * S_Mnt + -0.03813675536406 * S_MntFishProducts + 
-0.0959023413712 * S_MntFruits + 0.12724081783278 * S_MntGoldProds + -0.07639148541426 * 
S_MntMeatProducts + -0.0797214413833 * S_MntSweetProducts + -0.57705931875808 * S_MntWines + 
-0.12638551201991 * S_MonthsAsCustomer + -0.21854676704549 * S_NumCatalogPurchases + 
0.16792903091627 * S_NumDealsPurchases + -0.37408945626745 * S_NumDistPurchases + 
-0.18067262995566 * S_NumStorePurchases + 0.21192146789881 * S_NumWebPurchases + 
-0.23547702310669 * S_NumWebVisitsMonth + -0.02272089758813 * S_RFMstat + -0.16409330281075 * 
S_RMntFrq + 0.45021846112946 * S_Recency + 0.32988735727394 * S_Teenhome ;
2332828   +   H1x1_4  =     0.05205198916717 * S_AcceptedCmpTotal
2332829   +          +     0.25568653619739 * S_Age  +    -0.31037252146959 * S_Frq
2332830   +          +     0.42636025358982 * S_Income  +    -0.24453708980866 *
2332831   +        S_Kidhome  +    -0.07832530945892 * S_Mnt  +    -0.48332124476182 *
2332832   +        S_MntFishProducts  +    -0.13932879119138 * S_MntFruits
2332833   +          +      0.1984121566988 * S_MntGoldProds  +     1.14965897015972 *
2332834   +        S_MntMeatProducts  +     0.07027485457428 * S_MntSweetProducts
2332835   +          +    -0.56598097754046 * S_MntWines  +     0.07317190938075 *
2332836   +        S_MonthsAsCustomer  +       0.075756987983 * S_NumCatalogPurchases
2332837   +          +     0.29407429399136 * S_NumDealsPurchases
2332838   +          +     0.01610745252195 * S_NumDistPurchases
2332839   +          +    -0.17767939085628 * S_NumStorePurchases
2332840   +          +    -0.15168958538637 * S_NumWebPurchases
2332841   +          +     0.17433622143988 * S_NumWebVisitsMonth
2332842   +          +     0.11635602973993 * S_RFMstat  +     0.32632751843433 *
2332843   +        S_RMntFrq  +    -0.24758483374458 * S_Recency
2332844   +          +    -0.31468291567479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.05205198916717 * S_AcceptedCmpTotal + 0.25568653619739 * 
S_Age + -0.31037252146959 * S_Frq + 0.42636025358982 * S_Income + -0.24453708980866 * 
S_Kidhome + -0.07832530945892 * S_Mnt + -0.48332124476182 * S_MntFishProducts + 
-0.13932879119138 * S_MntFruits + 0.1984121566988 * S_MntGoldProds + 1.14965897015972 * 
S_MntMeatProducts + 0.07027485457428 * S_MntSweetProducts + -0.56598097754046 * S_MntWines + 
0.07317190938075 * S_MonthsAsCustomer + 0.075756987983 * S_NumCatalogPurchases + 
0.29407429399136 * S_NumDealsPurchases + 0.01610745252195 * S_NumDistPurchases + 
-0.17767939085628 * S_NumStorePurchases + -0.15168958538637 * S_NumWebPurchases + 
0.17433622143988 * S_NumWebVisitsMonth + 0.11635602973993 * S_RFMstat + 0.32632751843433 * 
S_RMntFrq + -0.24758483374458 * S_Recency + -0.31468291567479 * S_Teenhome ;
2332845   +   H1x1_5  =    -0.59657492903543 * S_AcceptedCmpTotal
2332846   +          +     0.23513672763458 * S_Age  +    -0.14882104210954 * S_Frq
2332847   +          +    -0.07762660201035 * S_Income  +     0.01424651904783 *
2332848   +        S_Kidhome  +     0.18748607813081 * S_Mnt  +     0.11088464897095 *
2332849   +        S_MntFishProducts  +    -0.10064450211557 * S_MntFruits
2332850   +          +     0.11161391354421 * S_MntGoldProds  +    -1.36345407290644 *
2332851   +        S_MntMeatProducts  +     0.04868729717044 * S_MntSweetProducts
2332852   +          +     0.80284342329654 * S_MntWines  +     -0.0179539622492 *
2332853   +        S_MonthsAsCustomer  +    -0.60051908798715 * S_NumCatalogPurchases
2332854   +          +    -0.37976451362108 * S_NumDealsPurchases
2332855   +          +    -0.17027731520801 * S_NumDistPurchases
2332856   +          +     0.59849493667087 * S_NumStorePurchases
2332857   +          +     0.65481480560301 * S_NumWebPurchases
2332858   +          +    -0.68253224576609 * S_NumWebVisitsMonth
2332859   +          +    -0.16723490165629 * S_RFMstat  +    -0.10533797887644 *
2332860   +        S_RMntFrq  +     0.81382723915873 * S_Recency
2332861   +          +     0.06049401205856 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.59657492903543 * S_AcceptedCmpTotal + 0.23513672763458 * 
S_Age + -0.14882104210954 * S_Frq + -0.07762660201035 * S_Income + 0.01424651904783 * 
S_Kidhome + 0.18748607813081 * S_Mnt + 0.11088464897095 * S_MntFishProducts + 
-0.10064450211557 * S_MntFruits + 0.11161391354421 * S_MntGoldProds + -1.36345407290644 * 
S_MntMeatProducts + 0.04868729717044 * S_MntSweetProducts + 0.80284342329654 * S_MntWines + 
-0.0179539622492 * S_MonthsAsCustomer + -0.60051908798715 * S_NumCatalogPurchases + 
-0.37976451362108 * S_NumDealsPurchases + -0.17027731520801 * S_NumDistPurchases + 
0.59849493667087 * S_NumStorePurchases + 0.65481480560301 * S_NumWebPurchases + 
-0.68253224576609 * S_NumWebVisitsMonth + -0.16723490165629 * S_RFMstat + -0.10533797887644 * 
S_RMntFrq + 0.81382723915873 * S_Recency + 0.06049401205856 * S_Teenhome ;
2332862   +   H1x1_6  =    -0.07547841798202 * S_AcceptedCmpTotal
2332863   +          +     0.22445278254589 * S_Age  +    -0.26357481075143 * S_Frq
2332864   +          +     0.06894154144261 * S_Income  +     0.20713236126681 *
2332865   +        S_Kidhome  +    -0.14103612934526 * S_Mnt  +     0.36334508557452 *
2332866   +        S_MntFishProducts  +    -0.20862425337296 * S_MntFruits
2332867   +          +    -0.29089690099273 * S_MntGoldProds  +     0.11336893090527 *
2332868   +        S_MntMeatProducts  +    -0.13547374281924 * S_MntSweetProducts
2332869   +          +     0.02228828195539 * S_MntWines  +    -0.19257650420334 *
2332870   +        S_MonthsAsCustomer  +      0.1365526319824 * S_NumCatalogPurchases
2332871   +          +    -0.07686699131623 * S_NumDealsPurchases
2332872   +          +    -0.07220460738926 * S_NumDistPurchases
2332873   +          +    -0.06554027468389 * S_NumStorePurchases
2332874   +          +     0.10422838158001 * S_NumWebPurchases
2332875   +          +    -0.03858550147892 * S_NumWebVisitsMonth
2332876   +          +    -0.06397448441373 * S_RFMstat  +     0.21747838287147 *
2332877   +        S_RMntFrq  +     0.24839313159913 * S_Recency
2332878   +          +    -0.06317317698653 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.07547841798202 * S_AcceptedCmpTotal + 0.22445278254589 * 
S_Age + -0.26357481075143 * S_Frq + 0.06894154144261 * S_Income + 0.20713236126681 * S_Kidhome 
+ -0.14103612934526 * S_Mnt + 0.36334508557452 * S_MntFishProducts + -0.20862425337296 * 
S_MntFruits + -0.29089690099273 * S_MntGoldProds + 0.11336893090527 * S_MntMeatProducts + 
-0.13547374281924 * S_MntSweetProducts + 0.02228828195539 * S_MntWines + -0.19257650420334 * 
S_MonthsAsCustomer + 0.1365526319824 * S_NumCatalogPurchases + -0.07686699131623 * 
S_NumDealsPurchases + -0.07220460738926 * S_NumDistPurchases + -0.06554027468389 * 
S_NumStorePurchases + 0.10422838158001 * S_NumWebPurchases + -0.03858550147892 * 
S_NumWebVisitsMonth + -0.06397448441373 * S_RFMstat + 0.21747838287147 * S_RMntFrq + 
0.24839313159913 * S_Recency + -0.06317317698653 * S_Teenhome ;
2332879   +   H1x1_7  =    -0.08604903695444 * S_AcceptedCmpTotal
2332880   +          +    -0.14807437541992 * S_Age  +     0.01466157584549 * S_Frq
2332881   +          +    -0.09883966180507 * S_Income  +     0.51992566778352 *
2332882   +        S_Kidhome  +     0.29795006703636 * S_Mnt  +    -0.08922020500011 *
2332883   +        S_MntFishProducts  +     0.19836834402079 * S_MntFruits
2332884   +          +    -0.11292241468378 * S_MntGoldProds  +       0.584464452194 *
2332885   +        S_MntMeatProducts  +     0.22625326024073 * S_MntSweetProducts
2332886   +          +     0.24074129944382 * S_MntWines  +     0.13538906557527 *
2332887   +        S_MonthsAsCustomer  +    -0.01228250248922 * S_NumCatalogPurchases
2332888   +          +    -0.07920122387563 * S_NumDealsPurchases
2332889   +          +      0.3649244061347 * S_NumDistPurchases
2332890   +          +     0.36475853688403 * S_NumStorePurchases
2332891   +          +     0.02153991404063 * S_NumWebPurchases
2332892   +          +    -0.94080669139388 * S_NumWebVisitsMonth
2332893   +          +     0.24853677977494 * S_RFMstat  +     0.37015183933951 *
2332894   +        S_RMntFrq  +      0.6724157721663 * S_Recency
2332895   +          +      0.1615471643866 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_7 = -0.08604903695444 * S_AcceptedCmpTotal + -0.14807437541992 * 
S_Age + 0.01466157584549 * S_Frq + -0.09883966180507 * S_Income + 0.51992566778352 * S_Kidhome 
+ 0.29795006703636 * S_Mnt + -0.08922020500011 * S_MntFishProducts + 0.19836834402079 * 
S_MntFruits + -0.11292241468378 * S_MntGoldProds + 0.584464452194 * S_MntMeatProducts + 
0.22625326024073 * S_MntSweetProducts + 0.24074129944382 * S_MntWines + 0.13538906557527 * 
S_MonthsAsCustomer + -0.01228250248922 * S_NumCatalogPurchases + -0.07920122387563 * 
S_NumDealsPurchases + 0.3649244061347 * S_NumDistPurchases + 0.36475853688403 * 
S_NumStorePurchases + 0.02153991404063 * S_NumWebPurchases + -0.94080669139388 * 
S_NumWebVisitsMonth + 0.24853677977494 * S_RFMstat + 0.37015183933951 * S_RMntFrq + 
0.6724157721663 * S_Recency + 0.1615471643866 * S_Teenhome ;
2332896   +   H1x1_1  = H1x1_1  +     0.04431608362128 * AcceptedCmp10
2332897   +          +       0.145592087795 * AcceptedCmp20  +    -0.18972867139938 *
2332898   +        AcceptedCmp30  +     0.11297731320888 * AcceptedCmp40
2332899   +          +     0.15203974410995 * AcceptedCmp50  +     0.05130421316428 *
2332900   +        Complain0  +     0.33576036450343 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.04431608362128 * AcceptedCmp10 + 0.145592087795 * 
AcceptedCmp20 + -0.18972867139938 * AcceptedCmp30 + 0.11297731320888 * AcceptedCmp40 + 
0.15203974410995 * AcceptedCmp50 + 0.05130421316428 * Complain0 + 0.33576036450343 * 
HigherEducationBinary0 ;
2332901   +   H1x1_2  = H1x1_2  +    -0.05495742609855 * AcceptedCmp10
2332902   +          +    -0.08873650760176 * AcceptedCmp20  +    -0.16380549867313 *
2332903   +        AcceptedCmp30  +    -0.24495261884932 * AcceptedCmp40
2332904   +          +    -0.22199506896148 * AcceptedCmp50  +       0.149484615172 *
2332905   +        Complain0  +     0.01091791142552 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.05495742609855 * AcceptedCmp10 + -0.08873650760176 
* AcceptedCmp20 + -0.16380549867313 * AcceptedCmp30 + -0.24495261884932 * AcceptedCmp40 + 
-0.22199506896148 * AcceptedCmp50 + 0.149484615172 * Complain0 + 0.01091791142552 * 
HigherEducationBinary0 ;
2332906   +   H1x1_3  = H1x1_3  +     0.03473702421341 * AcceptedCmp10
2332907   +          +    -0.11226718065217 * AcceptedCmp20  +     0.19024579384296 *
2332908   +        AcceptedCmp30  +     0.15478548865598 * AcceptedCmp40
2332909   +          +     0.15222823671897 * AcceptedCmp50  +     0.07713012834947 *
2332910   +        Complain0  +    -0.18741708707661 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.03473702421341 * AcceptedCmp10 + -0.11226718065217 * 
AcceptedCmp20 + 0.19024579384296 * AcceptedCmp30 + 0.15478548865598 * AcceptedCmp40 + 
0.15222823671897 * AcceptedCmp50 + 0.07713012834947 * Complain0 + -0.18741708707661 * 
HigherEducationBinary0 ;
2332911   +   H1x1_4  = H1x1_4  +    -0.25622127302429 * AcceptedCmp10
2332912   +          +    -0.39059103518073 * AcceptedCmp20  +    -0.29716603631807 *
2332913   +        AcceptedCmp30  +    -0.20875694971526 * AcceptedCmp40
2332914   +          +    -0.35128787139073 * AcceptedCmp50  +    -0.28848733462386 *
2332915   +        Complain0  +      0.4276503747649 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.25622127302429 * AcceptedCmp10 + -0.39059103518073 
* AcceptedCmp20 + -0.29716603631807 * AcceptedCmp30 + -0.20875694971526 * AcceptedCmp40 + 
-0.35128787139073 * AcceptedCmp50 + -0.28848733462386 * Complain0 + 0.4276503747649 * 
HigherEducationBinary0 ;
2332916   +   H1x1_5  = H1x1_5  +    -0.06574875851088 * AcceptedCmp10
2332917   +          +    -0.27375195259265 * AcceptedCmp20  +     -0.2740681662293 *
2332918   +        AcceptedCmp30  +    -0.14697156898736 * AcceptedCmp40
2332919   +          +     0.17684649468835 * AcceptedCmp50  +    -0.09979172944646 *
2332920   +        Complain0  +     0.38986664202197 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.06574875851088 * AcceptedCmp10 + -0.27375195259265 
* AcceptedCmp20 + -0.2740681662293 * AcceptedCmp30 + -0.14697156898736 * AcceptedCmp40 + 
0.17684649468835 * AcceptedCmp50 + -0.09979172944646 * Complain0 + 0.38986664202197 * 
HigherEducationBinary0 ;
2332921   +   H1x1_6  = H1x1_6  +     0.08696678529441 * AcceptedCmp10
2332922   +          +     0.09467543942215 * AcceptedCmp20  +     0.04586779705477 *
2332923   +        AcceptedCmp30  +    -0.12591921836379 * AcceptedCmp40
2332924   +          +     0.20150138392895 * AcceptedCmp50  +     0.27764282700214 *
2332925   +        Complain0  +     0.13985738522066 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.08696678529441 * AcceptedCmp10 + 0.09467543942215 * 
AcceptedCmp20 + 0.04586779705477 * AcceptedCmp30 + -0.12591921836379 * AcceptedCmp40 + 
0.20150138392895 * AcceptedCmp50 + 0.27764282700214 * Complain0 + 0.13985738522066 * 
HigherEducationBinary0 ;
2332926   +   H1x1_7  = H1x1_7  +    -0.10455069401218 * AcceptedCmp10
2332927   +          +      0.1311831941372 * AcceptedCmp20  +     0.17844209104604 *
2332928   +        AcceptedCmp30  +     0.19406707592815 * AcceptedCmp40
2332929   +          +    -0.00068155012319 * AcceptedCmp50  +     0.13245364846536 *
2332930   +        Complain0  +    -0.05165256160872 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + -0.10455069401218 * AcceptedCmp10 + 0.1311831941372 * 
AcceptedCmp20 + 0.17844209104604 * AcceptedCmp30 + 0.19406707592815 * AcceptedCmp40 + 
-0.00068155012319 * AcceptedCmp50 + 0.13245364846536 * Complain0 + -0.05165256160872 * 
HigherEducationBinary0 ;
2332931   +   H1x1_1  = H1x1_1  +     0.28967939808759 * Education2n_Cycle
2332932   +          +    -0.15795056374781 * EducationBasic  +    -0.00649803471307 *
2332933   +        EducationGraduation  +     0.19520715924532 * EducationMaster
2332934   +          +     0.07744097241553 * Marital_StatusDivorced
2332935   +          +     -0.0247463100385 * Marital_StatusMarried
2332936   +          +     0.05804915234573 * Marital_StatusSingle
2332937   +          +    -0.08320125047871 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.28967939808759 * Education2n_Cycle + 
-0.15795056374781 * EducationBasic + -0.00649803471307 * EducationGraduation + 
0.19520715924532 * EducationMaster + 0.07744097241553 * Marital_StatusDivorced + 
-0.0247463100385 * Marital_StatusMarried + 0.05804915234573 * Marital_StatusSingle + 
-0.08320125047871 * Marital_StatusTogether ;
2332938   +   H1x1_2  = H1x1_2  +     0.12524444422085 * Education2n_Cycle
2332939   +          +    -0.30278286924729 * EducationBasic  +     0.37480827366421 *
2332940   +        EducationGraduation  +     0.34209136290694 * EducationMaster
2332941   +          +     0.01390668926269 * Marital_StatusDivorced
2332942   +          +     0.01136282152074 * Marital_StatusMarried
2332943   +          +     0.12450246418789 * Marital_StatusSingle
2332944   +          +     -0.1576148519872 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12524444422085 * Education2n_Cycle + 
-0.30278286924729 * EducationBasic + 0.37480827366421 * EducationGraduation + 0.34209136290694 
* EducationMaster + 0.01390668926269 * Marital_StatusDivorced + 0.01136282152074 * 
Marital_StatusMarried + 0.12450246418789 * Marital_StatusSingle + -0.1576148519872 * 
Marital_StatusTogether ;
2332945   +   H1x1_3  = H1x1_3  +    -0.14589041643593 * Education2n_Cycle
2332946   +          +    -0.15691118816463 * EducationBasic  +      0.1993616073183 *
2332947   +        EducationGraduation  +     0.02862010255145 * EducationMaster
2332948   +          +    -0.19133456931879 * Marital_StatusDivorced
2332949   +          +     0.56263566654996 * Marital_StatusMarried
2332950   +          +    -0.42172822038882 * Marital_StatusSingle
2332951   +          +     0.42023140643292 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14589041643593 * Education2n_Cycle + 
-0.15691118816463 * EducationBasic + 0.1993616073183 * EducationGraduation + 0.02862010255145 
* EducationMaster + -0.19133456931879 * Marital_StatusDivorced + 0.56263566654996 * 
Marital_StatusMarried + -0.42172822038882 * Marital_StatusSingle + 0.42023140643292 * 
Marital_StatusTogether ;
2332952   +   H1x1_4  = H1x1_4  +     0.10038585978656 * Education2n_Cycle
2332953   +          +    -0.11388609002984 * EducationBasic  +    -0.14980553500983 *
2332954   +        EducationGraduation  +    -0.07646595330369 * EducationMaster
2332955   +          +    -0.19871205065609 * Marital_StatusDivorced
2332956   +          +    -0.14730795681603 * Marital_StatusMarried
2332957   +          +     0.05055432510362 * Marital_StatusSingle
2332958   +          +     0.06558965292395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.10038585978656 * Education2n_Cycle + 
-0.11388609002984 * EducationBasic + -0.14980553500983 * EducationGraduation + 
-0.07646595330369 * EducationMaster + -0.19871205065609 * Marital_StatusDivorced + 
-0.14730795681603 * Marital_StatusMarried + 0.05055432510362 * Marital_StatusSingle + 
0.06558965292395 * Marital_StatusTogether ;
2332959   +   H1x1_5  = H1x1_5  +      0.0015835307855 * Education2n_Cycle
2332960   +          +    -0.22658746797638 * EducationBasic  +    -0.03445982386977 *
2332961   +        EducationGraduation  +     0.11375378192685 * EducationMaster
2332962   +          +    -0.35623807358995 * Marital_StatusDivorced
2332963   +          +     0.30324726283965 * Marital_StatusMarried
2332964   +          +    -0.18561093467927 * Marital_StatusSingle
2332965   +          +       0.395424582152 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0015835307855 * Education2n_Cycle + 
-0.22658746797638 * EducationBasic + -0.03445982386977 * EducationGraduation + 
0.11375378192685 * EducationMaster + -0.35623807358995 * Marital_StatusDivorced + 
0.30324726283965 * Marital_StatusMarried + -0.18561093467927 * Marital_StatusSingle + 
0.395424582152 * Marital_StatusTogether ;
2332966   +   H1x1_6  = H1x1_6  +    -0.23751822587858 * Education2n_Cycle
2332967   +          +    -0.01687300040825 * EducationBasic  +     0.23236967703011 *
2332968   +        EducationGraduation  +      0.0725289831541 * EducationMaster
2332969   +          +     0.11581014663368 * Marital_StatusDivorced
2332970   +          +    -0.31070638037659 * Marital_StatusMarried
2332971   +          +     0.17131747253949 * Marital_StatusSingle
2332972   +          +    -0.19314955966476 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.23751822587858 * Education2n_Cycle + 
-0.01687300040825 * EducationBasic + 0.23236967703011 * EducationGraduation + 0.0725289831541 
* EducationMaster + 0.11581014663368 * Marital_StatusDivorced + -0.31070638037659 * 
Marital_StatusMarried + 0.17131747253949 * Marital_StatusSingle + -0.19314955966476 * 
Marital_StatusTogether ;
2332973   +   H1x1_7  = H1x1_7  +     0.00103693282479 * Education2n_Cycle
2332974   +          +     0.12608909598752 * EducationBasic  +     -0.2366673091666 *
2332975   +        EducationGraduation  +     0.24413217290922 * EducationMaster
2332976   +          +    -0.42450599871892 * Marital_StatusDivorced
2332977   +          +     0.48162905075885 * Marital_StatusMarried
2332978   +          +    -0.26618507749283 * Marital_StatusSingle
2332979   +          +     0.38053668740338 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + 0.00103693282479 * Education2n_Cycle + 
0.12608909598752 * EducationBasic + -0.2366673091666 * EducationGraduation + 0.24413217290922 
* EducationMaster + -0.42450599871892 * Marital_StatusDivorced + 0.48162905075885 * 
Marital_StatusMarried + -0.26618507749283 * Marital_StatusSingle + 0.38053668740338 * 
Marital_StatusTogether ;
2332980   +   H1x1_1  =     0.12149136705075 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.12149136705075 + H1x1_1 ;
2332981   +   H1x1_2  =    -0.97489696657001 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.97489696657001 + H1x1_2 ;
2332982   +   H1x1_3  =    -0.70605220802968 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.70605220802968 + H1x1_3 ;
2332983   +   H1x1_4  =    -1.07783206982379 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.07783206982379 + H1x1_4 ;
2332984   +   H1x1_5  =    -1.00400706261511 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.00400706261511 + H1x1_5 ;
2332985   +   H1x1_6  =     0.22600488314839 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.22600488314839 + H1x1_6 ;
2332986   +   H1x1_7  =     1.55642446968077 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.55642446968077 + H1x1_7 ;
2332987   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2332988   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2332989   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2332990   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2332991   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 * 
H1x1_1 ;
2332992   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2332993   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2332994   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 * 
H1x1_2 ;
2332995   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2332996   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2332997   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 * 
H1x1_3 ;
2332998   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2332999   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2333000   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 * 
H1x1_4 ;
2333001   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2333002   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2333003   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 * 
H1x1_5 ;
2333004   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2333005   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2333006   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 * 
H1x1_6 ;
2333007   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2333008   +   IF H1x1_7  < _REC_EPS AND H1x1_7  > - _REC_EPS THEN
2333009   +   H1x1_7  = H1x1_7  * H1x1_7 ;
MPRINT(EM_DIAGRAM):   IF H1x1_7 < _REC_EPS AND H1x1_7 > - _REC_EPS THEN H1x1_7 = H1x1_7 * 
H1x1_7 ;
2333010   +   ELSE H1x1_7  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_7 = _REC_EPS ;
2333011   +END;
MPRINT(EM_DIAGRAM):   END;
2333012   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2333013   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2333014   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2333015   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2333016   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2333017   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2333018   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2333019   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
2333020   +END;
MPRINT(EM_DIAGRAM):   END;
2333021   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2333022   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2333023   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2333024   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2333025   +   H1x2_1  =    -1.36226288448745 * S_AcceptedCmpTotal
2333026   +          +     -1.3328616352886 * S_Age  +     1.25346137866034 * S_Frq
2333027   +          +    -1.21746243786295 * S_Income  +     2.83911738158074 *
2333028   +        S_Kidhome  +    -0.60784009102409 * S_Mnt  +     1.57752173634223 *
2333029   +        S_MntFishProducts  +    -0.26776567401075 * S_MntFruits
2333030   +          +     1.09584731081081 * S_MntGoldProds  +     1.22333044103532 *
2333031   +        S_MntMeatProducts  +     0.42827942745016 * S_MntSweetProducts
2333032   +          +     0.67813472792448 * S_MntWines  +     0.56816492004798 *
2333033   +        S_MonthsAsCustomer  +     0.58113470399079 * S_NumCatalogPurchases
2333034   +          +     1.96719021971894 * S_NumDealsPurchases
2333035   +          +    -0.44535354794671 * S_NumDistPurchases
2333036   +          +    -0.54827762736866 * S_NumStorePurchases
2333037   +          +     1.02703310241897 * S_NumWebPurchases
2333038   +          +    -0.12526997502601 * S_NumWebVisitsMonth
2333039   +          +    -0.55803926383776 * S_RFMstat  +     0.01819380776809 *
2333040   +        S_RMntFrq  +       0.651688575044 * S_Recency
2333041   +          +     1.58682398186611 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.36226288448745 * S_AcceptedCmpTotal + -1.3328616352886 * 
S_Age + 1.25346137866034 * S_Frq + -1.21746243786295 * S_Income + 2.83911738158074 * S_Kidhome 
+ -0.60784009102409 * S_Mnt + 1.57752173634223 * S_MntFishProducts + -0.26776567401075 * 
S_MntFruits + 1.09584731081081 * S_MntGoldProds + 1.22333044103532 * S_MntMeatProducts + 
0.42827942745016 * S_MntSweetProducts + 0.67813472792448 * S_MntWines + 0.56816492004798 * 
S_MonthsAsCustomer + 0.58113470399079 * S_NumCatalogPurchases + 1.96719021971894 * 
S_NumDealsPurchases + -0.44535354794671 * S_NumDistPurchases + -0.54827762736866 * 
S_NumStorePurchases + 1.02703310241897 * S_NumWebPurchases + -0.12526997502601 * 
S_NumWebVisitsMonth + -0.55803926383776 * S_RFMstat + 0.01819380776809 * S_RMntFrq + 
0.651688575044 * S_Recency + 1.58682398186611 * S_Teenhome ;
2333042   +   H1x2_2  =    -0.38064507857029 * S_AcceptedCmpTotal
2333043   +          +    -0.49661801158351 * S_Age  +    -0.89589399799916 * S_Frq
2333044   +          +     -0.0121499288597 * S_Income  +    -0.48023022827846 *
2333045   +        S_Kidhome  +     -0.5183846206029 * S_Mnt  +    -3.13913899012334 *
2333046   +        S_MntFishProducts  +    -2.07291335687615 * S_MntFruits
2333047   +          +     0.51019753905662 * S_MntGoldProds  +     0.11458666377917 *
2333048   +        S_MntMeatProducts  +     -1.8499241966205 * S_MntSweetProducts
2333049   +          +     0.23160544044172 * S_MntWines  +    -0.48210626907943 *
2333050   +        S_MonthsAsCustomer  +     0.15500845227752 * S_NumCatalogPurchases
2333051   +          +     1.34659447971131 * S_NumDealsPurchases
2333052   +          +    -0.51624251310423 * S_NumDistPurchases
2333053   +          +      -1.283121574848 * S_NumStorePurchases
2333054   +          +    -1.83517806228926 * S_NumWebPurchases
2333055   +          +     0.51321339475285 * S_NumWebVisitsMonth
2333056   +          +    -1.86431704283342 * S_RFMstat  +    -1.52065204326569 *
2333057   +        S_RMntFrq  +    -0.33186055095462 * S_Recency
2333058   +          +    -0.49524729407054 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.38064507857029 * S_AcceptedCmpTotal + -0.49661801158351 * 
S_Age + -0.89589399799916 * S_Frq + -0.0121499288597 * S_Income + -0.48023022827846 * 
S_Kidhome + -0.5183846206029 * S_Mnt + -3.13913899012334 * S_MntFishProducts + 
-2.07291335687615 * S_MntFruits + 0.51019753905662 * S_MntGoldProds + 0.11458666377917 * 
S_MntMeatProducts + -1.8499241966205 * S_MntSweetProducts + 0.23160544044172 * S_MntWines + 
-0.48210626907943 * S_MonthsAsCustomer + 0.15500845227752 * S_NumCatalogPurchases + 
1.34659447971131 * S_NumDealsPurchases + -0.51624251310423 * S_NumDistPurchases + 
-1.283121574848 * S_NumStorePurchases + -1.83517806228926 * S_NumWebPurchases + 
0.51321339475285 * S_NumWebVisitsMonth + -1.86431704283342 * S_RFMstat + -1.52065204326569 * 
S_RMntFrq + -0.33186055095462 * S_Recency + -0.49524729407054 * S_Teenhome ;
2333059   +   H1x2_3  =    -0.75774003934728 * S_AcceptedCmpTotal
2333060   +          +    -0.85312030825337 * S_Age  +    -0.01726294458221 * S_Frq
2333061   +          +     0.58598267983786 * S_Income  +     1.30497766805554 *
2333062   +        S_Kidhome  +    -0.84214135491022 * S_Mnt  +     0.55305862453787 *
2333063   +        S_MntFishProducts  +      0.6488663613899 * S_MntFruits
2333064   +          +    -0.83189439197558 * S_MntGoldProds  +    -0.07500050412653 *
2333065   +        S_MntMeatProducts  +    -0.06401928810253 * S_MntSweetProducts
2333066   +          +      0.5940135658334 * S_MntWines  +    -0.04573352455984 *
2333067   +        S_MonthsAsCustomer  +    -1.53610650634069 * S_NumCatalogPurchases
2333068   +          +     0.67492297345004 * S_NumDealsPurchases
2333069   +          +    -0.40437875375926 * S_NumDistPurchases
2333070   +          +     0.36322603681545 * S_NumStorePurchases
2333071   +          +    -1.15315070635524 * S_NumWebPurchases
2333072   +          +     1.20707272201156 * S_NumWebVisitsMonth
2333073   +          +     0.12192566357285 * S_RFMstat  +    -0.46711219170047 *
2333074   +        S_RMntFrq  +     1.89703582493259 * S_Recency
2333075   +          +     1.07511942237188 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.75774003934728 * S_AcceptedCmpTotal + -0.85312030825337 * 
S_Age + -0.01726294458221 * S_Frq + 0.58598267983786 * S_Income + 1.30497766805554 * S_Kidhome 
+ -0.84214135491022 * S_Mnt + 0.55305862453787 * S_MntFishProducts + 0.6488663613899 * 
S_MntFruits + -0.83189439197558 * S_MntGoldProds + -0.07500050412653 * S_MntMeatProducts + 
-0.06401928810253 * S_MntSweetProducts + 0.5940135658334 * S_MntWines + -0.04573352455984 * 
S_MonthsAsCustomer + -1.53610650634069 * S_NumCatalogPurchases + 0.67492297345004 * 
S_NumDealsPurchases + -0.40437875375926 * S_NumDistPurchases + 0.36322603681545 * 
S_NumStorePurchases + -1.15315070635524 * S_NumWebPurchases + 1.20707272201156 * 
S_NumWebVisitsMonth + 0.12192566357285 * S_RFMstat + -0.46711219170047 * S_RMntFrq + 
1.89703582493259 * S_Recency + 1.07511942237188 * S_Teenhome ;
2333076   +   H1x2_4  =     0.62123819069495 * S_AcceptedCmpTotal
2333077   +          +     0.03399237520702 * S_Age  +    -0.01971421795338 * S_Frq
2333078   +          +    -0.54728266919056 * S_Income  +     -0.4634195771237 *
2333079   +        S_Kidhome  +    -1.19055247712911 * S_Mnt  +      1.4307770729159 *
2333080   +        S_MntFishProducts  +    -0.83895281276374 * S_MntFruits
2333081   +          +    -0.48578798244317 * S_MntGoldProds  +     -0.2846617807101 *
2333082   +        S_MntMeatProducts  +     0.70721686533987 * S_MntSweetProducts
2333083   +          +     1.32824513551741 * S_MntWines  +    -0.62654342755965 *
2333084   +        S_MonthsAsCustomer  +    -0.97245161056543 * S_NumCatalogPurchases
2333085   +          +    -0.41427983342148 * S_NumDealsPurchases
2333086   +          +    -0.22714305629205 * S_NumDistPurchases
2333087   +          +    -0.78763182048862 * S_NumStorePurchases
2333088   +          +    -0.26669253451501 * S_NumWebPurchases
2333089   +          +    -0.79601078616342 * S_NumWebVisitsMonth
2333090   +          +    -0.03863278696502 * S_RFMstat  +     0.95011556103056 *
2333091   +        S_RMntFrq  +     0.57184629262878 * S_Recency
2333092   +          +    -0.21560478702461 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.62123819069495 * S_AcceptedCmpTotal + 0.03399237520702 * 
S_Age + -0.01971421795338 * S_Frq + -0.54728266919056 * S_Income + -0.4634195771237 * 
S_Kidhome + -1.19055247712911 * S_Mnt + 1.4307770729159 * S_MntFishProducts + 
-0.83895281276374 * S_MntFruits + -0.48578798244317 * S_MntGoldProds + -0.2846617807101 * 
S_MntMeatProducts + 0.70721686533987 * S_MntSweetProducts + 1.32824513551741 * S_MntWines + 
-0.62654342755965 * S_MonthsAsCustomer + -0.97245161056543 * S_NumCatalogPurchases + 
-0.41427983342148 * S_NumDealsPurchases + -0.22714305629205 * S_NumDistPurchases + 
-0.78763182048862 * S_NumStorePurchases + -0.26669253451501 * S_NumWebPurchases + 
-0.79601078616342 * S_NumWebVisitsMonth + -0.03863278696502 * S_RFMstat + 0.95011556103056 * 
S_RMntFrq + 0.57184629262878 * S_Recency + -0.21560478702461 * S_Teenhome ;
2333093   +   H1x2_5  =     1.47906557745075 * S_AcceptedCmpTotal
2333094   +          +    -0.31060566334198 * S_Age  +     0.56472424389718 * S_Frq
2333095   +          +     2.16541682726249 * S_Income  +    -0.34119803841059 *
2333096   +        S_Kidhome  +    -0.53783050542796 * S_Mnt  +     0.54954821448236 *
2333097   +        S_MntFishProducts  +    -0.48449918837838 * S_MntFruits
2333098   +          +     0.29783052620672 * S_MntGoldProds  +    -0.15068954343013 *
2333099   +        S_MntMeatProducts  +     0.12733251381761 * S_MntSweetProducts
2333100   +          +    -2.46709166794296 * S_MntWines  +     -1.2011286508879 *
2333101   +        S_MonthsAsCustomer  +    -0.88194814936932 * S_NumCatalogPurchases
2333102   +          +      0.7697882092212 * S_NumDealsPurchases
2333103   +          +     0.51864835453056 * S_NumDistPurchases
2333104   +          +    -1.18320366630444 * S_NumStorePurchases
2333105   +          +     -0.6608394639529 * S_NumWebPurchases
2333106   +          +    -0.03948137707769 * S_NumWebVisitsMonth
2333107   +          +     1.01076462488608 * S_RFMstat  +    -0.91562280329354 *
2333108   +        S_RMntFrq  +    -1.07576669501238 * S_Recency
2333109   +          +     -0.5946628412106 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.47906557745075 * S_AcceptedCmpTotal + -0.31060566334198 * 
S_Age + 0.56472424389718 * S_Frq + 2.16541682726249 * S_Income + -0.34119803841059 * S_Kidhome 
+ -0.53783050542796 * S_Mnt + 0.54954821448236 * S_MntFishProducts + -0.48449918837838 * 
S_MntFruits + 0.29783052620672 * S_MntGoldProds + -0.15068954343013 * S_MntMeatProducts + 
0.12733251381761 * S_MntSweetProducts + -2.46709166794296 * S_MntWines + -1.2011286508879 * 
S_MonthsAsCustomer + -0.88194814936932 * S_NumCatalogPurchases + 0.7697882092212 * 
S_NumDealsPurchases + 0.51864835453056 * S_NumDistPurchases + -1.18320366630444 * 
S_NumStorePurchases + -0.6608394639529 * S_NumWebPurchases + -0.03948137707769 * 
S_NumWebVisitsMonth + 1.01076462488608 * S_RFMstat + -0.91562280329354 * S_RMntFrq + 
-1.07576669501238 * S_Recency + -0.5946628412106 * S_Teenhome ;
2333110   +   H1x2_6  =     0.42130900994246 * S_AcceptedCmpTotal
2333111   +          +     1.64256522546546 * S_Age  +    -0.31822237495441 * S_Frq
2333112   +          +     0.39698710846967 * S_Income  +    -1.30075584525681 *
2333113   +        S_Kidhome  +    -1.74733472316294 * S_Mnt  +    -1.04423575539078 *
2333114   +        S_MntFishProducts  +     0.28025913700744 * S_MntFruits
2333115   +          +     0.92062413073229 * S_MntGoldProds  +     0.38487452173084 *
2333116   +        S_MntMeatProducts  +     2.15808673418264 * S_MntSweetProducts
2333117   +          +     -0.5364274323591 * S_MntWines  +     0.64447858852609 *
2333118   +        S_MonthsAsCustomer  +     0.33683873873337 * S_NumCatalogPurchases
2333119   +          +     1.45707983202269 * S_NumDealsPurchases
2333120   +          +     0.83341887728641 * S_NumDistPurchases
2333121   +          +    -0.36664450469423 * S_NumStorePurchases
2333122   +          +     0.63911579043339 * S_NumWebPurchases
2333123   +          +     0.67144790303554 * S_NumWebVisitsMonth
2333124   +          +    -0.22124390112376 * S_RFMstat  +     1.72222071547971 *
2333125   +        S_RMntFrq  +    -0.02323382627271 * S_Recency
2333126   +          +    -0.09494567508522 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0.42130900994246 * S_AcceptedCmpTotal + 1.64256522546546 * 
S_Age + -0.31822237495441 * S_Frq + 0.39698710846967 * S_Income + -1.30075584525681 * 
S_Kidhome + -1.74733472316294 * S_Mnt + -1.04423575539078 * S_MntFishProducts + 
0.28025913700744 * S_MntFruits + 0.92062413073229 * S_MntGoldProds + 0.38487452173084 * 
S_MntMeatProducts + 2.15808673418264 * S_MntSweetProducts + -0.5364274323591 * S_MntWines + 
0.64447858852609 * S_MonthsAsCustomer + 0.33683873873337 * S_NumCatalogPurchases + 
1.45707983202269 * S_NumDealsPurchases + 0.83341887728641 * S_NumDistPurchases + 
-0.36664450469423 * S_NumStorePurchases + 0.63911579043339 * S_NumWebPurchases + 
0.67144790303554 * S_NumWebVisitsMonth + -0.22124390112376 * S_RFMstat + 1.72222071547971 * 
S_RMntFrq + -0.02323382627271 * S_Recency + -0.09494567508522 * S_Teenhome ;
2333127   +   H1x2_7  =      0.0903330772553 * S_AcceptedCmpTotal
2333128   +          +     0.13217959089196 * S_Age  +     0.93600629225871 * S_Frq
2333129   +          +     1.23765169211392 * S_Income  +     1.27732984858098 *
2333130   +        S_Kidhome  +     1.54889765360944 * S_Mnt  +     0.84618173514761 *
2333131   +        S_MntFishProducts  +    -0.32044356786958 * S_MntFruits
2333132   +          +    -0.26357995597029 * S_MntGoldProds  +     0.53649229087334 *
2333133   +        S_MntMeatProducts  +     1.46955866272889 * S_MntSweetProducts
2333134   +          +    -0.34260315437319 * S_MntWines  +    -1.70693604004836 *
2333135   +        S_MonthsAsCustomer  +     -0.4612555130737 * S_NumCatalogPurchases
2333136   +          +     0.68491896063662 * S_NumDealsPurchases
2333137   +          +      0.5386312048592 * S_NumDistPurchases
2333138   +          +     1.28108942503912 * S_NumStorePurchases
2333139   +          +    -0.88282270505969 * S_NumWebPurchases
2333140   +          +    -0.66670958211416 * S_NumWebVisitsMonth
2333141   +          +     0.94315921733739 * S_RFMstat  +     0.70533705858561 *
2333142   +        S_RMntFrq  +     0.23896687873405 * S_Recency
2333143   +          +     0.66289635918858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.0903330772553 * S_AcceptedCmpTotal + 0.13217959089196 * S_Age 
+ 0.93600629225871 * S_Frq + 1.23765169211392 * S_Income + 1.27732984858098 * S_Kidhome + 
1.54889765360944 * S_Mnt + 0.84618173514761 * S_MntFishProducts + -0.32044356786958 * 
S_MntFruits + -0.26357995597029 * S_MntGoldProds + 0.53649229087334 * S_MntMeatProducts + 
1.46955866272889 * S_MntSweetProducts + -0.34260315437319 * S_MntWines + -1.70693604004836 * 
S_MonthsAsCustomer + -0.4612555130737 * S_NumCatalogPurchases + 0.68491896063662 * 
S_NumDealsPurchases + 0.5386312048592 * S_NumDistPurchases + 1.28108942503912 * 
S_NumStorePurchases + -0.88282270505969 * S_NumWebPurchases + -0.66670958211416 * 
S_NumWebVisitsMonth + 0.94315921733739 * S_RFMstat + 0.70533705858561 * S_RMntFrq + 
0.23896687873405 * S_Recency + 0.66289635918858 * S_Teenhome ;
2333144   +   H1x2_1  = H1x2_1  +     0.22958861848016 * AcceptedCmp10
2333145   +          +    -1.11069938765475 * AcceptedCmp20  +     1.18563222829069 *
2333146   +        AcceptedCmp30  +    -0.97028253571173 * AcceptedCmp40
2333147   +          +     0.60850082670391 * AcceptedCmp50  +     0.31163990605418 *
2333148   +        Complain0  +     1.10957053966326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.22958861848016 * AcceptedCmp10 + -1.11069938765475 * 
AcceptedCmp20 + 1.18563222829069 * AcceptedCmp30 + -0.97028253571173 * AcceptedCmp40 + 
0.60850082670391 * AcceptedCmp50 + 0.31163990605418 * Complain0 + 1.10957053966326 * 
HigherEducationBinary0 ;
2333149   +   H1x2_2  = H1x2_2  +    -0.99409862826118 * AcceptedCmp10
2333150   +          +    -0.76360093699992 * AcceptedCmp20  +     0.82772534103696 *
2333151   +        AcceptedCmp30  +     1.74232000787449 * AcceptedCmp40
2333152   +          +    -1.37356239255127 * AcceptedCmp50  +      0.0919811154199 *
2333153   +        Complain0  +    -0.00220513515877 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.99409862826118 * AcceptedCmp10 + -0.76360093699992 
* AcceptedCmp20 + 0.82772534103696 * AcceptedCmp30 + 1.74232000787449 * AcceptedCmp40 + 
-1.37356239255127 * AcceptedCmp50 + 0.0919811154199 * Complain0 + -0.00220513515877 * 
HigherEducationBinary0 ;
2333154   +   H1x2_3  = H1x2_3  +    -0.21003647134105 * AcceptedCmp10
2333155   +          +    -0.08930317176477 * AcceptedCmp20  +    -0.39109673162041 *
2333156   +        AcceptedCmp30  +     1.14094450038946 * AcceptedCmp40
2333157   +          +     1.26041997788848 * AcceptedCmp50  +    -0.10972130900569 *
2333158   +        Complain0  +    -0.99352598480407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.21003647134105 * AcceptedCmp10 + -0.08930317176477 
* AcceptedCmp20 + -0.39109673162041 * AcceptedCmp30 + 1.14094450038946 * AcceptedCmp40 + 
1.26041997788848 * AcceptedCmp50 + -0.10972130900569 * Complain0 + -0.99352598480407 * 
HigherEducationBinary0 ;
2333159   +   H1x2_4  = H1x2_4  +     2.02630284432093 * AcceptedCmp10
2333160   +          +    -2.50721904229276 * AcceptedCmp20  +    -1.31026450397446 *
2333161   +        AcceptedCmp30  +    -0.83440880266914 * AcceptedCmp40
2333162   +          +     -0.0570899805015 * AcceptedCmp50  +    -0.55525351434733 *
2333163   +        Complain0  +     0.27306601694081 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 2.02630284432093 * AcceptedCmp10 + -2.50721904229276 * 
AcceptedCmp20 + -1.31026450397446 * AcceptedCmp30 + -0.83440880266914 * AcceptedCmp40 + 
-0.0570899805015 * AcceptedCmp50 + -0.55525351434733 * Complain0 + 0.27306601694081 * 
HigherEducationBinary0 ;
2333164   +   H1x2_5  = H1x2_5  +    -0.18595284227194 * AcceptedCmp10
2333165   +          +    -1.55973916517392 * AcceptedCmp20  +    -3.81563768970049 *
2333166   +        AcceptedCmp30  +    -0.09331430915239 * AcceptedCmp40
2333167   +          +     0.76128118177142 * AcceptedCmp50  +    -0.17283107047755 *
2333168   +        Complain0  +    -1.01028562804392 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.18595284227194 * AcceptedCmp10 + -1.55973916517392 
* AcceptedCmp20 + -3.81563768970049 * AcceptedCmp30 + -0.09331430915239 * AcceptedCmp40 + 
0.76128118177142 * AcceptedCmp50 + -0.17283107047755 * Complain0 + -1.01028562804392 * 
HigherEducationBinary0 ;
2333169   +   H1x2_6  = H1x2_6  +    -1.21475169836565 * AcceptedCmp10
2333170   +          +     0.28748729216575 * AcceptedCmp20  +     1.15908030413172 *
2333171   +        AcceptedCmp30  +    -0.05889528676549 * AcceptedCmp40
2333172   +          +    -0.41661363625562 * AcceptedCmp50  +    -0.77939130028952 *
2333173   +        Complain0  +     2.19510865765326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.21475169836565 * AcceptedCmp10 + 0.28748729216575 * 
AcceptedCmp20 + 1.15908030413172 * AcceptedCmp30 + -0.05889528676549 * AcceptedCmp40 + 
-0.41661363625562 * AcceptedCmp50 + -0.77939130028952 * Complain0 + 2.19510865765326 * 
HigherEducationBinary0 ;
2333174   +   H1x2_7  = H1x2_7  +     0.87360423179644 * AcceptedCmp10
2333175   +          +    -0.47867594186426 * AcceptedCmp20  +    -0.30325818223392 *
2333176   +        AcceptedCmp30  +    -0.96085556588297 * AcceptedCmp40
2333177   +          +    -0.19693158209969 * AcceptedCmp50  +    -0.73731792634553 *
2333178   +        Complain0  +    -1.10021678806679 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + 0.87360423179644 * AcceptedCmp10 + -0.47867594186426 * 
AcceptedCmp20 + -0.30325818223392 * AcceptedCmp30 + -0.96085556588297 * AcceptedCmp40 + 
-0.19693158209969 * AcceptedCmp50 + -0.73731792634553 * Complain0 + -1.10021678806679 * 
HigherEducationBinary0 ;
2333179   +   H1x2_1  = H1x2_1  +    -1.17876013389516 * Education2n_Cycle
2333180   +          +    -0.35670434275624 * EducationBasic  +    -0.12456502068616 *
2333181   +        EducationGraduation  +     -1.0620373133508 * EducationMaster
2333182   +          +    -3.97961426831865 * Marital_StatusDivorced
2333183   +          +     0.00932639813867 * Marital_StatusMarried
2333184   +          +     1.29310186574718 * Marital_StatusSingle
2333185   +          +     1.60940802221114 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.17876013389516 * Education2n_Cycle + 
-0.35670434275624 * EducationBasic + -0.12456502068616 * EducationGraduation + 
-1.0620373133508 * EducationMaster + -3.97961426831865 * Marital_StatusDivorced + 
0.00932639813867 * Marital_StatusMarried + 1.29310186574718 * Marital_StatusSingle + 
1.60940802221114 * Marital_StatusTogether ;
2333186   +   H1x2_2  = H1x2_2  +     0.58497813059595 * Education2n_Cycle
2333187   +          +     0.98038586431321 * EducationBasic  +    -0.20442806724521 *
2333188   +        EducationGraduation  +     0.64973046142001 * EducationMaster
2333189   +          +    -0.30358516578188 * Marital_StatusDivorced
2333190   +          +    -0.96176709360703 * Marital_StatusMarried
2333191   +          +     1.26977690921649 * Marital_StatusSingle
2333192   +          +     -0.6681544336237 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.58497813059595 * Education2n_Cycle + 
0.98038586431321 * EducationBasic + -0.20442806724521 * EducationGraduation + 0.64973046142001 
* EducationMaster + -0.30358516578188 * Marital_StatusDivorced + -0.96176709360703 * 
Marital_StatusMarried + 1.26977690921649 * Marital_StatusSingle + -0.6681544336237 * 
Marital_StatusTogether ;
2333193   +   H1x2_3  = H1x2_3  +     0.42123479646947 * Education2n_Cycle
2333194   +          +     0.22705854674045 * EducationBasic  +     0.34794003687348 *
2333195   +        EducationGraduation  +     0.18356390207843 * EducationMaster
2333196   +          +     0.55272671490757 * Marital_StatusDivorced
2333197   +          +      0.1499239288334 * Marital_StatusMarried
2333198   +          +    -0.46840941760604 * Marital_StatusSingle
2333199   +          +     0.93706218273755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.42123479646947 * Education2n_Cycle + 
0.22705854674045 * EducationBasic + 0.34794003687348 * EducationGraduation + 0.18356390207843 
* EducationMaster + 0.55272671490757 * Marital_StatusDivorced + 0.1499239288334 * 
Marital_StatusMarried + -0.46840941760604 * Marital_StatusSingle + 0.93706218273755 * 
Marital_StatusTogether ;
2333200   +   H1x2_4  = H1x2_4  +     0.85035585831723 * Education2n_Cycle
2333201   +          +    -0.70680576286167 * EducationBasic  +    -0.24487676912938 *
2333202   +        EducationGraduation  +    -0.33030970028481 * EducationMaster
2333203   +          +      -1.240735370138 * Marital_StatusDivorced
2333204   +          +    -1.20089294883599 * Marital_StatusMarried
2333205   +          +     0.57492674426149 * Marital_StatusSingle
2333206   +          +     1.44189292990255 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.85035585831723 * Education2n_Cycle + 
-0.70680576286167 * EducationBasic + -0.24487676912938 * EducationGraduation + 
-0.33030970028481 * EducationMaster + -1.240735370138 * Marital_StatusDivorced + 
-1.20089294883599 * Marital_StatusMarried + 0.57492674426149 * Marital_StatusSingle + 
1.44189292990255 * Marital_StatusTogether ;
2333207   +   H1x2_5  = H1x2_5  +    -0.62461434654579 * Education2n_Cycle
2333208   +          +    -0.34090423965869 * EducationBasic  +    -0.82493401834396 *
2333209   +        EducationGraduation  +    -1.09423426649553 * EducationMaster
2333210   +          +     1.05435442049802 * Marital_StatusDivorced
2333211   +          +      0.3571256349717 * Marital_StatusMarried
2333212   +          +    -0.44741267266578 * Marital_StatusSingle
2333213   +          +     0.02948931507994 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.62461434654579 * Education2n_Cycle + 
-0.34090423965869 * EducationBasic + -0.82493401834396 * EducationGraduation + 
-1.09423426649553 * EducationMaster + 1.05435442049802 * Marital_StatusDivorced + 
0.3571256349717 * Marital_StatusMarried + -0.44741267266578 * Marital_StatusSingle + 
0.02948931507994 * Marital_StatusTogether ;
2333214   +   H1x2_6  = H1x2_6  +     0.09620501635178 * Education2n_Cycle
2333215   +          +    -0.54617424401993 * EducationBasic  +    -0.43305038404558 *
2333216   +        EducationGraduation  +     0.05453229059502 * EducationMaster
2333217   +          +     2.06026721980778 * Marital_StatusDivorced
2333218   +          +    -0.49583258645166 * Marital_StatusMarried
2333219   +          +    -1.14824900824474 * Marital_StatusSingle
2333220   +          +     0.57690093967839 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + 0.09620501635178 * Education2n_Cycle + 
-0.54617424401993 * EducationBasic + -0.43305038404558 * EducationGraduation + 
0.05453229059502 * EducationMaster + 2.06026721980778 * Marital_StatusDivorced + 
-0.49583258645166 * Marital_StatusMarried + -1.14824900824474 * Marital_StatusSingle + 
0.57690093967839 * Marital_StatusTogether ;
2333221   +   H1x2_7  = H1x2_7  +    -0.31251046777442 * Education2n_Cycle
2333222   +          +    -1.69272922870259 * EducationBasic  +    -0.08682253496961 *
2333223   +        EducationGraduation  +     0.58241644186309 * EducationMaster
2333224   +          +     -1.1890908607447 * Marital_StatusDivorced
2333225   +          +    -0.46668809907123 * Marital_StatusMarried
2333226   +          +     1.20342564763422 * Marital_StatusSingle
2333227   +          +    -1.75740662969578 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + -0.31251046777442 * Education2n_Cycle + 
-1.69272922870259 * EducationBasic + -0.08682253496961 * EducationGraduation + 
0.58241644186309 * EducationMaster + -1.1890908607447 * Marital_StatusDivorced + 
-0.46668809907123 * Marital_StatusMarried + 1.20342564763422 * Marital_StatusSingle + 
-1.75740662969578 * Marital_StatusTogether ;
2333228   +   H1x2_1  =    -0.14973719401763 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.14973719401763 + H1x2_1 ;
2333229   +   H1x2_2  =    -0.56259582407931 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.56259582407931 + H1x2_2 ;
2333230   +   H1x2_3  =     0.42132483186492 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.42132483186492 + H1x2_3 ;
2333231   +   H1x2_4  =      1.1996209421335 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.1996209421335 + H1x2_4 ;
2333232   +   H1x2_5  =     0.95827018478011 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.95827018478011 + H1x2_5 ;
2333233   +   H1x2_6  =     1.88844492435344 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.88844492435344 + H1x2_6 ;
2333234   +   H1x2_7  =     0.77184516675485 + H1x2_7 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.77184516675485 + H1x2_7 ;
2333235   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2333236   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2333237   +   H1x2_1  = EXP(MIN(H1x2_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(H1x2_1 , _EXP_BAR));
2333238   +   H1x2_2  = EXP(MIN(H1x2_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(H1x2_2 , _EXP_BAR));
2333239   +   H1x2_3  = EXP(MIN(H1x2_3 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(MIN(H1x2_3 , _EXP_BAR));
2333240   +   H1x2_4  = EXP(MIN(H1x2_4 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(MIN(H1x2_4 , _EXP_BAR));
2333241   +   H1x2_5  = EXP(MIN(H1x2_5 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(MIN(H1x2_5 , _EXP_BAR));
2333242   +   H1x2_6  = EXP(MIN(H1x2_6 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(MIN(H1x2_6 , _EXP_BAR));
2333243   +   H1x2_7  = EXP(MIN(H1x2_7 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(MIN(H1x2_7 , _EXP_BAR));
2333244   +END;
MPRINT(EM_DIAGRAM):   END;
2333245   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2333246   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2333247   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2333248   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2333249   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2333250   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2333251   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2333252   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
2333253   +END;
MPRINT(EM_DIAGRAM):   END;
2333254   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2333255   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2333256   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2333257   +
2333258   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2333259   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2333260   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2333261   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2333262   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2333263   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2333264   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2333265   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2333266   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2333267   +end;
MPRINT(EM_DIAGRAM):   end;
2333268   +else do;
MPRINT(EM_DIAGRAM):   else do;
2333269   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2333270   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2333271   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2333272   +   end;
MPRINT(EM_DIAGRAM):   end;
2333273   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2333274   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2333275   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2333276   +   end;
MPRINT(EM_DIAGRAM):   end;
2333277   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2333278   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2333279   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2333280   +   end;
MPRINT(EM_DIAGRAM):   end;
2333281   +end;
MPRINT(EM_DIAGRAM):   end;
2333282   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2333283   +   P_DepVar1  =     0.10431866610268 * H1x1_1  +    -0.48100701431081 * H1x1_2
2333284   +          +      1.1561061025832 * H1x1_3  +    -1.23928879501664 * H1x1_4
2333285   +          +     1.22057275321508 * H1x1_5  +     0.21972347471711 * H1x1_6
2333286   +          +    -0.98998788335495 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.10431866610268 * H1x1_1 + -0.48100701431081 * H1x1_2 + 
1.1561061025832 * H1x1_3 + -1.23928879501664 * H1x1_4 + 1.22057275321508 * H1x1_5 + 
0.21972347471711 * H1x1_6 + -0.98998788335495 * H1x1_7 ;
2333287   +   P_DepVar1  = P_DepVar1  + -4.9985478923183E-10 * H1x2_1
2333288   +          +   2.7724573038604E-6 * H1x2_2  +  -3.3263781208921E-6 * H1x2_3
2333289   +          +     1.90169432265E-8 * H1x2_4  +  -9.7460294571708E-9 * H1x2_5
2333290   +          +  -2.0885179583168E-6 * H1x2_6  +    3.038660449943E-8 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -4.9985478923183E-10 * H1x2_1 + 
2.7724573038604E-6 * H1x2_2 + -3.3263781208921E-6 * H1x2_3 + 1.90169432265E-8 * H1x2_4 + 
-9.7460294571708E-9 * H1x2_5 + -2.0885179583168E-6 * H1x2_6 + 3.038660449943E-8 * H1x2_7 ;
2333291   +   P_DepVar1  =    -2.34500119066237 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.34500119066237 + P_DepVar1 ;
2333292   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2333293   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2333294   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2333295   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2333296   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2333297   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2333298   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2333299   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2333300   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2333301   +END;
MPRINT(EM_DIAGRAM):   END;
2333302   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2333303   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2333304   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2333305   +END;
MPRINT(EM_DIAGRAM):   END;
2333306   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2333307   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2333308   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2333309   +END;
MPRINT(EM_DIAGRAM):   END;
2333310   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2333311   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2333312   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2333313   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2333314   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2333315   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2333316   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2333317   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2333318   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2333319   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2333320   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2333321   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2333322   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2333323   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2333324   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2333325   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2333326   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2333327   +END;
MPRINT(EM_DIAGRAM):   END;
2333328   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2333329   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2333330   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2333331   +drop
2333332   +H1x1_1
2333333   +H1x1_2
2333334   +H1x1_3
2333335   +H1x1_4
2333336   +H1x1_5
2333337   +H1x1_6
2333338   +H1x1_7
2333339   +H1x2_1
2333340   +H1x2_2
2333341   +H1x2_3
2333342   +H1x2_4
2333343   +H1x2_5
2333344   +H1x2_6
2333345   +H1x2_7
2333346   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 H1x1_7 H1x2_1 H1x2_2 
H1x2_3 H1x2_4 H1x2_5 H1x2_6 H1x2_7 ;
2333347   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2333348   +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
2333349   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2333350   +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
2333351   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2333352   +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
2333353   +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
2333354   +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
2333355   +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
2333356   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2333357   +* Renaming Into variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural12;
2333358   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2333359   +length AutoNeural12_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural12_I_DepVar $32;
2333360   +drop AutoNeural12_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_I_DepVar;
2333361   +AutoNeural12_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural12_I_DepVar = I_DepVar;
2333362   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2333363   +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
2333364   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2333365   +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
2333366   +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
2333367   +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
2333368   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2333369   +* Ensmbl38: Voting to produce predicted target;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Voting to produce predicted target;
2333370   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2333371   +array Ensmbl38_post{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl38_post{2} _temporary_;
2333372   +array Ensmbl38_count{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl38_count{2} _temporary_;
2333373   +array Ensmbl38_level{2} $32 _temporary_ (
2333374   +"1"
2333375   +"0"
2333376   +);
MPRINT(EM_DIAGRAM):   array Ensmbl38_level{2} $32 _temporary_ ( "1" "0" );
2333377   +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
2333378   +Ensmbl38_post{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{i} = 0;
2333379   +Ensmbl38_count{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{i} = 0;
2333380   +end;
MPRINT(EM_DIAGRAM):   end;
2333381   +if AutoNeural6_I_DepVar = Ensmbl38_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural6_I_DepVar = Ensmbl38_level{1} then do;
2333382   +Ensmbl38_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{1} + 1;
2333383   +Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural6_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural6_P_DepVar1;
2333384   +end;
MPRINT(EM_DIAGRAM):   end;
2333385   +if AutoNeural7_I_DepVar = Ensmbl38_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural7_I_DepVar = Ensmbl38_level{1} then do;
2333386   +Ensmbl38_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{1} + 1;
2333387   +Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural7_P_DepVar1;
2333388   +end;
MPRINT(EM_DIAGRAM):   end;
2333389   +if AutoNeural8_I_DepVar = Ensmbl38_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural8_I_DepVar = Ensmbl38_level{1} then do;
2333390   +Ensmbl38_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{1} + 1;
2333391   +Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural8_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural8_P_DepVar1;
2333392   +end;
MPRINT(EM_DIAGRAM):   end;
2333393   +if AutoNeural10_I_DepVar = Ensmbl38_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural10_I_DepVar = Ensmbl38_level{1} then do;
2333394   +Ensmbl38_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{1} + 1;
2333395   +Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural10_P_DepVar1;
2333396   +end;
MPRINT(EM_DIAGRAM):   end;
2333397   +if AutoNeural9_I_DepVar = Ensmbl38_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural9_I_DepVar = Ensmbl38_level{1} then do;
2333398   +Ensmbl38_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{1} + 1;
2333399   +Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural9_P_DepVar1;
2333400   +end;
MPRINT(EM_DIAGRAM):   end;
2333401   +if AutoNeural11_I_DepVar = Ensmbl38_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural11_I_DepVar = Ensmbl38_level{1} then do;
2333402   +Ensmbl38_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{1} + 1;
2333403   +Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural11_P_DepVar1;
2333404   +end;
MPRINT(EM_DIAGRAM):   end;
2333405   +if AutoNeural12_I_DepVar = Ensmbl38_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural12_I_DepVar = Ensmbl38_level{1} then do;
2333406   +Ensmbl38_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{1} + 1;
2333407   +Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural12_P_DepVar1;
2333408   +end;
MPRINT(EM_DIAGRAM):   end;
2333409   +if AutoNeural6_I_DepVar = Ensmbl38_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural6_I_DepVar = Ensmbl38_level{2} then do;
2333410   +Ensmbl38_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{2} + 1;
2333411   +Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural6_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural6_P_DepVar0;
2333412   +end;
MPRINT(EM_DIAGRAM):   end;
2333413   +if AutoNeural7_I_DepVar = Ensmbl38_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural7_I_DepVar = Ensmbl38_level{2} then do;
2333414   +Ensmbl38_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{2} + 1;
2333415   +Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural7_P_DepVar0;
2333416   +end;
MPRINT(EM_DIAGRAM):   end;
2333417   +if AutoNeural8_I_DepVar = Ensmbl38_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural8_I_DepVar = Ensmbl38_level{2} then do;
2333418   +Ensmbl38_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{2} + 1;
2333419   +Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural8_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural8_P_DepVar0;
2333420   +end;
MPRINT(EM_DIAGRAM):   end;
2333421   +if AutoNeural10_I_DepVar = Ensmbl38_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural10_I_DepVar = Ensmbl38_level{2} then do;
2333422   +Ensmbl38_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{2} + 1;
2333423   +Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural10_P_DepVar0;
2333424   +end;
MPRINT(EM_DIAGRAM):   end;
2333425   +if AutoNeural9_I_DepVar = Ensmbl38_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural9_I_DepVar = Ensmbl38_level{2} then do;
2333426   +Ensmbl38_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{2} + 1;
2333427   +Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural9_P_DepVar0;
2333428   +end;
MPRINT(EM_DIAGRAM):   end;
2333429   +if AutoNeural11_I_DepVar = Ensmbl38_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural11_I_DepVar = Ensmbl38_level{2} then do;
2333430   +Ensmbl38_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{2} + 1;
2333431   +Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural11_P_DepVar0;
2333432   +end;
MPRINT(EM_DIAGRAM):   end;
2333433   +if AutoNeural12_I_DepVar = Ensmbl38_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural12_I_DepVar = Ensmbl38_level{2} then do;
2333434   +Ensmbl38_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{2} + 1;
2333435   +Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural12_P_DepVar0;
2333436   +end;
MPRINT(EM_DIAGRAM):   end;
2333437   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2333438   +* Ensmbl38: Determine Into Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Determine Into Variable;
2333439   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2333440   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
2333441   +drop i vote_count vote_post;
MPRINT(EM_DIAGRAM):   drop i vote_count vote_post;
2333442   +vote_count = max(
2333443   +Ensmbl38_count{1} ,
2333444   +Ensmbl38_count{2}
2333445   +);
MPRINT(EM_DIAGRAM):   vote_count = max( Ensmbl38_count{1} , Ensmbl38_count{2} );
2333446   +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
2333447   +if Ensmbl38_count{i}=vote_count and Ensmbl38_post{i}>vote_post then do;
MPRINT(EM_DIAGRAM):   if Ensmbl38_count{i}=vote_count and Ensmbl38_post{i}>vote_post then do;
2333448   +I_DepVar = Ensmbl38_level{i};
MPRINT(EM_DIAGRAM):   I_DepVar = Ensmbl38_level{i};
2333449   +vote_post = Ensmbl38_count{i};
MPRINT(EM_DIAGRAM):   vote_post = Ensmbl38_count{i};
2333450   +end;
MPRINT(EM_DIAGRAM):   end;
2333451   +end;
MPRINT(EM_DIAGRAM):   end;
2333452   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2333453   +* Ensmbl38: Compute posterior vars using models predicting the chosen level;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Compute posterior vars using models predicting the chosen 
level;
2333454   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2333455   +P_DepVar1 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
2333456   +P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2333457   +if I_DepVar = AutoNeural6_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural6_I_DepVar then do;
2333458   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural6_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural6_P_DepVar1;
2333459   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural6_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural6_P_DepVar0;
2333460   +end;
MPRINT(EM_DIAGRAM):   end;
2333461   +if I_DepVar = AutoNeural7_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural7_I_DepVar then do;
2333462   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural7_P_DepVar1;
2333463   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural7_P_DepVar0;
2333464   +end;
MPRINT(EM_DIAGRAM):   end;
2333465   +if I_DepVar = AutoNeural8_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural8_I_DepVar then do;
2333466   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural8_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural8_P_DepVar1;
2333467   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural8_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural8_P_DepVar0;
2333468   +end;
MPRINT(EM_DIAGRAM):   end;
2333469   +if I_DepVar = AutoNeural10_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural10_I_DepVar then do;
2333470   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural10_P_DepVar1;
2333471   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural10_P_DepVar0;
2333472   +end;
MPRINT(EM_DIAGRAM):   end;
2333473   +if I_DepVar = AutoNeural9_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural9_I_DepVar then do;
2333474   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural9_P_DepVar1;
2333475   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural9_P_DepVar0;
2333476   +end;
MPRINT(EM_DIAGRAM):   end;
2333477   +if I_DepVar = AutoNeural11_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural11_I_DepVar then do;
2333478   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural11_P_DepVar1;
2333479   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural11_P_DepVar0;
2333480   +end;
MPRINT(EM_DIAGRAM):   end;
2333481   +if I_DepVar = AutoNeural12_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural12_I_DepVar then do;
2333482   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural12_P_DepVar1;
2333483   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural12_P_DepVar0;
2333484   +end;
MPRINT(EM_DIAGRAM):   end;
2333485   +* Ensmbl38: Averaging posterior;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Averaging posterior;
2333486   +P_DepVar1 = P_DepVar1/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1/vote_count;
2333487   +P_DepVar0 = P_DepVar0/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0/vote_count;
2333488   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2333489   +* Ensmbl38: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Producing Unformatted variable;
2333490   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2333491   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
2333492   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
2333493   +else
2333494   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
2333495   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2333496   +* Ensmbl38: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Computing _WARN_ Variable;
2333497   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2333498   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2333499   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
2333500   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
2333501   +if index(AUTONEURAL6_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2333501  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2333502   +if index(AUTONEURAL6_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2333502  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2333503   +if index(AUTONEURAL6_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2333503  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2333504   +if index(AUTONEURAL6_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2333504  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2333505   +if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2333505  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2333506   +if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2333506  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2333507   +if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2333507  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2333508   +if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2333508  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2333509   +if index(AUTONEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2333509  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2333510   +if index(AUTONEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2333510  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2333511   +if index(AUTONEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2333511  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2333512   +if index(AUTONEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2333512  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2333513   +if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2333513  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2333514   +if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2333514  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2333515   +if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2333515  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2333516   +if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2333516  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2333517   +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2333517  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2333518   +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2333518  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2333519   +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2333519  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2333520   +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2333520  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2333521   +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2333521  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2333522   +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2333522  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2333523   +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2333523  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2333524   +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2333524  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2333525   +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2333525  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2333526   +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2333526  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2333527   +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2333527  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2333528   +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2333528  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2333529   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2333530   +* Ensmbl38: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Computing Residual Vars;
2333531   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2333532   +if
2333533   +F_DepVar NE '1'
2333534   +AND F_DepVar NE '0'
2333535   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
2333536   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2333537   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2333538   +end;
MPRINT(EM_DIAGRAM):   end;
2333539   +else do;
MPRINT(EM_DIAGRAM):   else do;
2333540   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
2333541   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
2333542   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
2333543   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
2333544   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
2333545   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
2333546   +END;
MPRINT(EM_DIAGRAM):   END;
2333547   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2333548    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL38_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL6_VALIDATE.VIEW used (Total process time):
      real time           0.21 seconds
      cpu time            0.23 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.22 seconds
      cpu time            0.23 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2333549    quit;
2333550    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl38_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl38_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl38_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl38_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl38_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
2333610    filename _pref
2333610  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural6\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural6\EMPUBLISHSCORE.sas";
2333611    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2333612    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural6\EMPUBLISHSCORE.sas.
2333613   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2333614   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2333615   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2333616   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2333617   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2333618   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2333619   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2333620   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2333621   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2333622   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2333623   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2333624   +LENGTH _WARN_ $4
2333625   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2333626   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2333627   +
2333628   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2333629   +
2333630   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2333631   +
2333632   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2333633   +
2333634   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2333635   +
2333636   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2333637   +
2333638   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2333639   +
2333640   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2333641   +
2333642   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2333643   +
2333644   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2333645   +
2333646   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2333647   +
2333648   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2333649   +
2333650   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2333651   +
2333652   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2333653   +
2333654   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2333655   +
2333656   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2333657   +
2333658   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2333659   +
2333660   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2333661   +
2333662   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2333663   +
2333664   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2333665   +
2333666   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2333667   +
2333668   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2333669   +
2333670   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2333671   +
2333672   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2333673   +
2333674   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2333675   +
2333676   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2333677   +
2333678   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2333679   +
2333680   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2333681   +
2333682   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2333683   +
2333684   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2333685   +
2333686   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2333687   +
2333688   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2333689   +
2333690   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2333691   +
2333692   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2333693   +
2333694   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2333695   +
2333696   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2333697   +
2333698   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2333699   +
2333700   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2333701   +
2333702   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2333703   +
2333704   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2333705   +
2333706   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2333707   +
2333708   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2333709   +
2333710   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2333711   +
2333712   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2333713   +
2333714   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2333715   +
2333716   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2333717   +
2333718   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2333719   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2333720   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2333721   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2333722   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2333723   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2333724   +end;
MPRINT(EM_DIAGRAM):   end;
2333725   +else do;
MPRINT(EM_DIAGRAM):   else do;
2333726   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2333727   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2333728   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2333729   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2333730   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2333731   +   end;
MPRINT(EM_DIAGRAM):   end;
2333732   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2333733   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2333734   +   end;
MPRINT(EM_DIAGRAM):   end;
2333735   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2333736   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2333737   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2333738   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2333739   +   end;
MPRINT(EM_DIAGRAM):   end;
2333740   +end;
MPRINT(EM_DIAGRAM):   end;
2333741   +
2333742   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2333743   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2333744   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2333745   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2333746   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2333747   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2333748   +end;
MPRINT(EM_DIAGRAM):   end;
2333749   +else do;
MPRINT(EM_DIAGRAM):   else do;
2333750   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2333751   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2333752   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2333753   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2333754   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2333755   +   end;
MPRINT(EM_DIAGRAM):   end;
2333756   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2333757   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2333758   +   end;
MPRINT(EM_DIAGRAM):   end;
2333759   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2333760   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2333761   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2333762   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2333763   +   end;
MPRINT(EM_DIAGRAM):   end;
2333764   +end;
MPRINT(EM_DIAGRAM):   end;
2333765   +
2333766   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2333767   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2333768   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2333769   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2333770   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2333771   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2333772   +end;
MPRINT(EM_DIAGRAM):   end;
2333773   +else do;
MPRINT(EM_DIAGRAM):   else do;
2333774   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2333775   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2333776   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2333777   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2333778   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2333779   +   end;
MPRINT(EM_DIAGRAM):   end;
2333780   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2333781   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2333782   +   end;
MPRINT(EM_DIAGRAM):   end;
2333783   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2333784   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2333785   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2333786   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2333787   +   end;
MPRINT(EM_DIAGRAM):   end;
2333788   +end;
MPRINT(EM_DIAGRAM):   end;
2333789   +
2333790   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2333791   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2333792   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2333793   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2333794   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2333795   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2333796   +end;
MPRINT(EM_DIAGRAM):   end;
2333797   +else do;
MPRINT(EM_DIAGRAM):   else do;
2333798   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2333799   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2333800   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2333801   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2333802   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2333803   +   end;
MPRINT(EM_DIAGRAM):   end;
2333804   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2333805   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2333806   +   end;
MPRINT(EM_DIAGRAM):   end;
2333807   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2333808   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2333809   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2333810   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2333811   +   end;
MPRINT(EM_DIAGRAM):   end;
2333812   +end;
MPRINT(EM_DIAGRAM):   end;
2333813   +
2333814   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2333815   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2333816   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2333817   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2333818   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2333819   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2333820   +end;
MPRINT(EM_DIAGRAM):   end;
2333821   +else do;
MPRINT(EM_DIAGRAM):   else do;
2333822   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2333823   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2333824   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2333825   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2333826   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2333827   +   end;
MPRINT(EM_DIAGRAM):   end;
2333828   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2333829   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2333830   +   end;
MPRINT(EM_DIAGRAM):   end;
2333831   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2333832   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2333833   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2333834   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2333835   +   end;
MPRINT(EM_DIAGRAM):   end;
2333836   +end;
MPRINT(EM_DIAGRAM):   end;
2333837   +
2333838   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2333839   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2333840   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2333841   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2333842   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2333843   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2333844   +end;
MPRINT(EM_DIAGRAM):   end;
2333845   +else do;
MPRINT(EM_DIAGRAM):   else do;
2333846   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2333847   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2333848   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2333849   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2333850   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2333851   +   end;
MPRINT(EM_DIAGRAM):   end;
2333852   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2333853   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2333854   +   end;
MPRINT(EM_DIAGRAM):   end;
2333855   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2333856   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2333857   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2333858   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2333859   +   end;
MPRINT(EM_DIAGRAM):   end;
2333860   +end;
MPRINT(EM_DIAGRAM):   end;
2333861   +
2333862   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2333863   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2333864   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2333865   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2333866   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2333867   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2333868   +end;
MPRINT(EM_DIAGRAM):   end;
2333869   +else do;
MPRINT(EM_DIAGRAM):   else do;
2333870   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2333871   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2333872   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2333873   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2333874   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2333875   +   end;
MPRINT(EM_DIAGRAM):   end;
2333876   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2333877   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2333878   +   end;
MPRINT(EM_DIAGRAM):   end;
2333879   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2333880   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2333881   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2333882   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2333883   +   end;
MPRINT(EM_DIAGRAM):   end;
2333884   +end;
MPRINT(EM_DIAGRAM):   end;
2333885   +
2333886   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2333887   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2333888   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2333889   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2333890   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2333891   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2333892   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2333893   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2333894   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2333895   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2333896   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2333897   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2333898   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2333899   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2333900   +end;
MPRINT(EM_DIAGRAM):   end;
2333901   +else do;
MPRINT(EM_DIAGRAM):   else do;
2333902   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2333903   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2333904   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2333905   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2333906   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2333907   +   end;
MPRINT(EM_DIAGRAM):   end;
2333908   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2333909   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2333910   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2333911   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2333912   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2333913   +   end;
MPRINT(EM_DIAGRAM):   end;
2333914   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2333915   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2333916   +   end;
MPRINT(EM_DIAGRAM):   end;
2333917   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2333918   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2333919   +   end;
MPRINT(EM_DIAGRAM):   end;
2333920   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2333921   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2333922   +   end;
MPRINT(EM_DIAGRAM):   end;
2333923   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2333924   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2333925   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2333926   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2333927   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2333928   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2333929   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2333930   +   end;
MPRINT(EM_DIAGRAM):   end;
2333931   +end;
MPRINT(EM_DIAGRAM):   end;
2333932   +
2333933   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2333934   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2333935   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2333936   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2333937   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2333938   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2333939   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2333940   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2333941   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2333942   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2333943   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2333944   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2333945   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2333946   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2333947   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2333948   +end;
MPRINT(EM_DIAGRAM):   end;
2333949   +else do;
MPRINT(EM_DIAGRAM):   else do;
2333950   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2333951   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2333952   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2333953   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2333954   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2333955   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2333956   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2333957   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2333958   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2333959   +         end;
MPRINT(EM_DIAGRAM):   end;
2333960   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2333961   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2333962   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2333963   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2333964   +            end;
MPRINT(EM_DIAGRAM):   end;
2333965   +         end;
MPRINT(EM_DIAGRAM):   end;
2333966   +      end;
MPRINT(EM_DIAGRAM):   end;
2333967   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2333968   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2333969   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2333970   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2333971   +         end;
MPRINT(EM_DIAGRAM):   end;
2333972   +      end;
MPRINT(EM_DIAGRAM):   end;
2333973   +   end;
MPRINT(EM_DIAGRAM):   end;
2333974   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2333975   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2333976   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2333977   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2333978   +      end;
MPRINT(EM_DIAGRAM):   end;
2333979   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2333980   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2333981   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2333982   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2333983   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2333984   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2333985   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2333986   +         end;
MPRINT(EM_DIAGRAM):   end;
2333987   +      end;
MPRINT(EM_DIAGRAM):   end;
2333988   +   end;
MPRINT(EM_DIAGRAM):   end;
2333989   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2333990   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2333991   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2333992   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2333993   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2333994   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2333995   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2333996   +   end;
MPRINT(EM_DIAGRAM):   end;
2333997   +end;
MPRINT(EM_DIAGRAM):   end;
2333998   +
2333999   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2334000   +*** Checking missing input Interval
2334001   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2334002   +
2334003   +IF NMISS(
2334004   +   AcceptedCmpTotal ,
2334005   +   Age ,
2334006   +   Frq ,
2334007   +   Income ,
2334008   +   Kidhome ,
2334009   +   Mnt ,
2334010   +   MntFishProducts ,
2334011   +   MntFruits ,
2334012   +   MntGoldProds ,
2334013   +   MntMeatProducts ,
2334014   +   MntSweetProducts ,
2334015   +   MntWines ,
2334016   +   MonthsAsCustomer ,
2334017   +   NumCatalogPurchases ,
2334018   +   NumDealsPurchases ,
2334019   +   NumDistPurchases ,
2334020   +   NumStorePurchases ,
2334021   +   NumWebPurchases ,
2334022   +   NumWebVisitsMonth ,
2334023   +   RFMstat ,
2334024   +   RMntFrq ,
2334025   +   Recency ,
2334026   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2334027   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2334028   +
2334029   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2334030   +END;
MPRINT(EM_DIAGRAM):   END;
2334031   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2334032   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2334033   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2334034   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2334035   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2334036   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2334037   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2334038   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2334039   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2334040   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2334041   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2334042   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2334043   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2334044   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2334045   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2334046   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2334047   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2334048   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2334049   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2334050   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2334051   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2334052   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2334053   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2334054   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2334055   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2334056   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2334057   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2334058   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2334059   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2334060   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2334061   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2334062   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2334063   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2334064   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2334065   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2334066   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2334067   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2334068   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2334069   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2334070   +END;
MPRINT(EM_DIAGRAM):   END;
2334071   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2334072   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2334073   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2334074   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2334075   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2334076   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2334077   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2334078   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2334079   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2334080   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2334081   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2334082   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2334083   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2334084   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2334085   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2334086   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2334087   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2334088   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2334089   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2334090   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2334091   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2334092   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2334093   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2334094   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2334095   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2334096   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2334097   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2334098   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2334099   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2334100   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2334101   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2334102   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2334103   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2334104   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2334105   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2334106   +   ELSE S_NumCatalogPurchases
2334107   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2334108   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2334109   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2334110   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2334111   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2334112   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2334113   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2334114   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2334115   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2334116   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2334117   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2334118   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2334119   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2334120   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2334121   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2334122   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2334123   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2334124   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2334125   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2334126   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2334127   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2334128   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2334129   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2334130   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2334131   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2334132   +END;
MPRINT(EM_DIAGRAM):   END;
2334133   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2334134   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2334135   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2334136   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2334137   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2334138   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2334139   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2334140   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2334141   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2334142   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2334143   +   H1x1_1  =    -0.00800383076247 * S_AcceptedCmpTotal
2334144   +          +     0.02761302021586 * S_Age  +     0.10595191274027 * S_Frq
2334145   +          +    -0.15720275096991 * S_Income  +     0.14522420813528 *
2334146   +        S_Kidhome  +    -0.14485367197729 * S_Mnt  +     0.10029542464177 *
2334147   +        S_MntFishProducts  +      0.0126489883955 * S_MntFruits
2334148   +          +    -0.01721251339827 * S_MntGoldProds  +    -0.69008250574088 *
2334149   +        S_MntMeatProducts  +     0.01018204164797 * S_MntSweetProducts
2334150   +          +     0.22039448854688 * S_MntWines  +     0.01531819489128 *
2334151   +        S_MonthsAsCustomer  +    -0.23161250514854 * S_NumCatalogPurchases
2334152   +          +    -0.20127545393212 * S_NumDealsPurchases
2334153   +          +     0.04506333103933 * S_NumDistPurchases
2334154   +          +     0.35249458492371 * S_NumStorePurchases
2334155   +          +     0.25004284340707 * S_NumWebPurchases
2334156   +          +    -0.53727251220752 * S_NumWebVisitsMonth
2334157   +          +    -0.05439428653958 * S_RFMstat  +     0.36751560031492 *
2334158   +        S_RMntFrq  +      0.5373510847225 * S_Recency
2334159   +          +     0.08757258535387 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.00800383076247 * S_AcceptedCmpTotal + 0.02761302021586 * 
S_Age + 0.10595191274027 * S_Frq + -0.15720275096991 * S_Income + 0.14522420813528 * S_Kidhome 
+ -0.14485367197729 * S_Mnt + 0.10029542464177 * S_MntFishProducts + 0.0126489883955 * 
S_MntFruits + -0.01721251339827 * S_MntGoldProds + -0.69008250574088 * S_MntMeatProducts + 
0.01018204164797 * S_MntSweetProducts + 0.22039448854688 * S_MntWines + 0.01531819489128 * 
S_MonthsAsCustomer + -0.23161250514854 * S_NumCatalogPurchases + -0.20127545393212 * 
S_NumDealsPurchases + 0.04506333103933 * S_NumDistPurchases + 0.35249458492371 * 
S_NumStorePurchases + 0.25004284340707 * S_NumWebPurchases + -0.53727251220752 * 
S_NumWebVisitsMonth + -0.05439428653958 * S_RFMstat + 0.36751560031492 * S_RMntFrq + 
0.5373510847225 * S_Recency + 0.08757258535387 * S_Teenhome ;
2334160   +   H1x1_1  = H1x1_1  +     0.21204360154837 * AcceptedCmp10
2334161   +          +     0.20766091429217 * AcceptedCmp20  +     0.20201307074488 *
2334162   +        AcceptedCmp30  +     0.26898383850722 * AcceptedCmp40
2334163   +          +     0.55154220854739 * AcceptedCmp50  +     0.13147328871299 *
2334164   +        Complain0  +    -0.02797177954188 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.21204360154837 * AcceptedCmp10 + 0.20766091429217 * 
AcceptedCmp20 + 0.20201307074488 * AcceptedCmp30 + 0.26898383850722 * AcceptedCmp40 + 
0.55154220854739 * AcceptedCmp50 + 0.13147328871299 * Complain0 + -0.02797177954188 * 
HigherEducationBinary0 ;
2334165   +   H1x1_1  = H1x1_1  +    -0.00959805163736 * Education2n_Cycle
2334166   +          +     0.37192717803938 * EducationBasic  +    -0.10342362068485 *
2334167   +        EducationGraduation  +    -0.13377682721092 * EducationMaster
2334168   +          +    -0.19452359839974 * Marital_StatusDivorced
2334169   +          +     0.32327870805716 * Marital_StatusMarried
2334170   +          +    -0.20770545592268 * Marital_StatusSingle
2334171   +          +     0.35618773017298 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00959805163736 * Education2n_Cycle + 
0.37192717803938 * EducationBasic + -0.10342362068485 * EducationGraduation + 
-0.13377682721092 * EducationMaster + -0.19452359839974 * Marital_StatusDivorced + 
0.32327870805716 * Marital_StatusMarried + -0.20770545592268 * Marital_StatusSingle + 
0.35618773017298 * Marital_StatusTogether ;
2334172   +   H1x1_1  =     0.87012150629431 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.87012150629431 + H1x1_1 ;
2334173   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2334174   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2334175   +   H1x1_1  = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
2334176   +END;
MPRINT(EM_DIAGRAM):   END;
2334177   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2334178   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2334179   +END;
MPRINT(EM_DIAGRAM):   END;
2334180   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2334181   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2334182   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2334183   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2334184   +   H1x2_1  =     0.92357456692651 * S_AcceptedCmpTotal
2334185   +          +    -0.00516549264504 * S_Age  +    -1.03043789382359 * S_Frq
2334186   +          +     0.78555631441048 * S_Income  +    -1.36329797235747 *
2334187   +        S_Kidhome  +    -0.77229288487872 * S_Mnt  +     1.27281095482218 *
2334188   +        S_MntFishProducts  +     0.04568599055132 * S_MntFruits
2334189   +          +    -0.13434867195633 * S_MntGoldProds  +    -1.95682488683295 *
2334190   +        S_MntMeatProducts  +     -0.0253141337078 * S_MntSweetProducts
2334191   +          +     0.67857436596482 * S_MntWines  +    -0.07247572940845 *
2334192   +        S_MonthsAsCustomer  +    -1.02814758425435 * S_NumCatalogPurchases
2334193   +          +    -0.02120959778153 * S_NumDealsPurchases
2334194   +          +     1.49013956394863 * S_NumDistPurchases
2334195   +          +    -0.96806240220463 * S_NumStorePurchases
2334196   +          +    -1.68330472453558 * S_NumWebPurchases
2334197   +          +     3.42976128164256 * S_NumWebVisitsMonth
2334198   +          +    -0.38912520446503 * S_RFMstat  +    -2.57487899031042 *
2334199   +        S_RMntFrq  +    -3.14923215912621 * S_Recency
2334200   +          +    -0.67635091810974 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.92357456692651 * S_AcceptedCmpTotal + -0.00516549264504 * 
S_Age + -1.03043789382359 * S_Frq + 0.78555631441048 * S_Income + -1.36329797235747 * 
S_Kidhome + -0.77229288487872 * S_Mnt + 1.27281095482218 * S_MntFishProducts + 
0.04568599055132 * S_MntFruits + -0.13434867195633 * S_MntGoldProds + -1.95682488683295 * 
S_MntMeatProducts + -0.0253141337078 * S_MntSweetProducts + 0.67857436596482 * S_MntWines + 
-0.07247572940845 * S_MonthsAsCustomer + -1.02814758425435 * S_NumCatalogPurchases + 
-0.02120959778153 * S_NumDealsPurchases + 1.49013956394863 * S_NumDistPurchases + 
-0.96806240220463 * S_NumStorePurchases + -1.68330472453558 * S_NumWebPurchases + 
3.42976128164256 * S_NumWebVisitsMonth + -0.38912520446503 * S_RFMstat + -2.57487899031042 * 
S_RMntFrq + -3.14923215912621 * S_Recency + -0.67635091810974 * S_Teenhome ;
2334201   +   H1x2_1  = H1x2_1  +    -0.18835638765595 * AcceptedCmp10
2334202   +          +     1.28752081945681 * AcceptedCmp20  +     -0.5515893923669 *
2334203   +        AcceptedCmp30  +    -0.82440763600043 * AcceptedCmp40
2334204   +          +     1.94503109075872 * AcceptedCmp50  +    -0.75977722298402 *
2334205   +        Complain0  +    -1.11349075129464 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.18835638765595 * AcceptedCmp10 + 1.28752081945681 * 
AcceptedCmp20 + -0.5515893923669 * AcceptedCmp30 + -0.82440763600043 * AcceptedCmp40 + 
1.94503109075872 * AcceptedCmp50 + -0.75977722298402 * Complain0 + -1.11349075129464 * 
HigherEducationBinary0 ;
2334206   +   H1x2_1  = H1x2_1  +     1.79843117215153 * Education2n_Cycle
2334207   +          +    -1.50428649925314 * EducationBasic  +    -0.32238897768725 *
2334208   +        EducationGraduation  +    -0.16909007224958 * EducationMaster
2334209   +          +      1.9815992681602 * Marital_StatusDivorced
2334210   +          +    -3.07893181570848 * Marital_StatusMarried
2334211   +          +     1.72965298244219 * Marital_StatusSingle
2334212   +          +    -3.17208781997524 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.79843117215153 * Education2n_Cycle + 
-1.50428649925314 * EducationBasic + -0.32238897768725 * EducationGraduation + 
-0.16909007224958 * EducationMaster + 1.9815992681602 * Marital_StatusDivorced + 
-3.07893181570848 * Marital_StatusMarried + 1.72965298244219 * Marital_StatusSingle + 
-3.17208781997524 * Marital_StatusTogether ;
2334213   +   H1x2_1  =     0.54729406730223 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.54729406730223 + H1x2_1 ;
2334214   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2334215   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2334216   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2334217   +   IF H1x2_1  < _REC_EPS AND H1x2_1  > - _REC_EPS THEN
2334218   +   H1x2_1  = H1x2_1  * H1x2_1 ;
MPRINT(EM_DIAGRAM):   IF H1x2_1 < _REC_EPS AND H1x2_1 > - _REC_EPS THEN H1x2_1 = H1x2_1 * 
H1x2_1 ;
2334219   +   ELSE H1x2_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x2_1 = _REC_EPS ;
2334220   +END;
MPRINT(EM_DIAGRAM):   END;
2334221   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2334222   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2334223   +END;
MPRINT(EM_DIAGRAM):   END;
2334224   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2334225   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2334226   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2334227   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2334228   +   H1x3_1  =     0.90092602642364 * S_AcceptedCmpTotal
2334229   +          +    -0.16291307307626 * S_Age  +    -0.40132431666712 * S_Frq
2334230   +          +    -0.77251140598484 * S_Income  +     0.02215214313934 *
2334231   +        S_Kidhome  +     0.13123074182657 * S_Mnt  +    -0.43664076061176 *
2334232   +        S_MntFishProducts  +    -1.64192761266072 * S_MntFruits
2334233   +          +    -1.54189230184745 * S_MntGoldProds  +     -0.4138869968665 *
2334234   +        S_MntMeatProducts  +      0.5773885392047 * S_MntSweetProducts
2334235   +          +     1.45077769194851 * S_MntWines  +      0.5855746168529 *
2334236   +        S_MonthsAsCustomer  +     0.10198319985004 * S_NumCatalogPurchases
2334237   +          +     -0.5334151509863 * S_NumDealsPurchases
2334238   +          +     0.40600458912114 * S_NumDistPurchases
2334239   +          +    -0.30674653528261 * S_NumStorePurchases
2334240   +          +     0.10785037433743 * S_NumWebPurchases
2334241   +          +     0.99701680073452 * S_NumWebVisitsMonth
2334242   +          +    -0.25371895811899 * S_RFMstat  +     2.19406614746442 *
2334243   +        S_RMntFrq  +      1.0786726340694 * S_Recency
2334244   +          +     0.64406049150007 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.90092602642364 * S_AcceptedCmpTotal + -0.16291307307626 * 
S_Age + -0.40132431666712 * S_Frq + -0.77251140598484 * S_Income + 0.02215214313934 * 
S_Kidhome + 0.13123074182657 * S_Mnt + -0.43664076061176 * S_MntFishProducts + 
-1.64192761266072 * S_MntFruits + -1.54189230184745 * S_MntGoldProds + -0.4138869968665 * 
S_MntMeatProducts + 0.5773885392047 * S_MntSweetProducts + 1.45077769194851 * S_MntWines + 
0.5855746168529 * S_MonthsAsCustomer + 0.10198319985004 * S_NumCatalogPurchases + 
-0.5334151509863 * S_NumDealsPurchases + 0.40600458912114 * S_NumDistPurchases + 
-0.30674653528261 * S_NumStorePurchases + 0.10785037433743 * S_NumWebPurchases + 
0.99701680073452 * S_NumWebVisitsMonth + -0.25371895811899 * S_RFMstat + 2.19406614746442 * 
S_RMntFrq + 1.0786726340694 * S_Recency + 0.64406049150007 * S_Teenhome ;
2334245   +   H1x3_1  = H1x3_1  +    -0.58424742605644 * AcceptedCmp10
2334246   +          +     -0.7436165858459 * AcceptedCmp20  +    -0.33959137246457 *
2334247   +        AcceptedCmp30  +     0.42726020731333 * AcceptedCmp40
2334248   +          +     2.23707409189181 * AcceptedCmp50  +     0.98135772482722 *
2334249   +        Complain0  +    -0.85818399669867 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.58424742605644 * AcceptedCmp10 + -0.7436165858459 * 
AcceptedCmp20 + -0.33959137246457 * AcceptedCmp30 + 0.42726020731333 * AcceptedCmp40 + 
2.23707409189181 * AcceptedCmp50 + 0.98135772482722 * Complain0 + -0.85818399669867 * 
HigherEducationBinary0 ;
2334250   +   H1x3_1  = H1x3_1  +    -0.89540752048995 * Education2n_Cycle
2334251   +          +     1.29513448243349 * EducationBasic  +    -1.47068621785539 *
2334252   +        EducationGraduation  +    -1.63362973413899 * EducationMaster
2334253   +          +    -0.72494401881341 * Marital_StatusDivorced
2334254   +          +    -0.82332231639631 * Marital_StatusMarried
2334255   +          +     -0.8863559011195 * Marital_StatusSingle
2334256   +          +     0.97129982315045 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.89540752048995 * Education2n_Cycle + 
1.29513448243349 * EducationBasic + -1.47068621785539 * EducationGraduation + 
-1.63362973413899 * EducationMaster + -0.72494401881341 * Marital_StatusDivorced + 
-0.82332231639631 * Marital_StatusMarried + -0.8863559011195 * Marital_StatusSingle + 
0.97129982315045 * Marital_StatusTogether ;
2334257   +   H1x3_1  =     0.55234573720932 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.55234573720932 + H1x3_1 ;
2334258   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2334259   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2334260   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2334261   +   IF H1x3_1  < _REC_EPS AND H1x3_1  > - _REC_EPS THEN
2334262   +   H1x3_1  = H1x3_1  * H1x3_1 ;
MPRINT(EM_DIAGRAM):   IF H1x3_1 < _REC_EPS AND H1x3_1 > - _REC_EPS THEN H1x3_1 = H1x3_1 * 
H1x3_1 ;
2334263   +   ELSE H1x3_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_1 = _REC_EPS ;
2334264   +END;
MPRINT(EM_DIAGRAM):   END;
2334265   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2334266   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2334267   +END;
MPRINT(EM_DIAGRAM):   END;
2334268   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2334269   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2334270   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2334271   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2334272   +   P_DepVar1  =     35.4482526843154 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 35.4482526843154 * H1x1_1 ;
2334273   +   P_DepVar1  = P_DepVar1  +    -0.08810161142704 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.08810161142704 * H1x2_1 ;
2334274   +   P_DepVar1  = P_DepVar1  +     0.02248060710303 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + 0.02248060710303 * H1x3_1 ;
2334275   +   P_DepVar1  =    -6.23004657634651 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.23004657634651 + P_DepVar1 ;
2334276   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2334277   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2334278   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2334279   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2334280   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2334281   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2334282   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2334283   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2334284   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2334285   +END;
MPRINT(EM_DIAGRAM):   END;
2334286   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2334287   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2334288   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2334289   +END;
MPRINT(EM_DIAGRAM):   END;
2334290   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2334291   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2334292   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2334293   +END;
MPRINT(EM_DIAGRAM):   END;
2334294   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2334295   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2334296   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2334297   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2334298   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2334299   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2334300   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2334301   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2334302   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2334303   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2334304   +END;
MPRINT(EM_DIAGRAM):   END;
2334305   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2334306   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2334307   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2334308   +drop
2334309   +H1x1_1
2334310   +H1x2_1
2334311   +H1x3_1
2334312   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x2_1 H1x3_1 ;
2334313   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2334314    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2334315    quit;
2334316    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2334317    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2334318    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2334319    retain ID 2 Node "AutoNeural6";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural6";
2334320    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2334321    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2506 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2506 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2334322    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2334323    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2334324    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2506 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2506 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2334325    proc sort data=EMWS8.AutoNeural6_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural6_variableset out=_temp2(keep=NAME 
CREATOR);
2334326    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2334327    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL6_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2334328    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2334329    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2334330    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2334331    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2334332    proc contents data=EMWS8.AutoNeural6_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural6_train out=_meta(keep=NAME) noprint;
2334333    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2334334    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2334335    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2334336    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2334337    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2334338    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2334339    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2334340    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2334341    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2334342    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2334342  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1495 rows and 5 columns.

2334343    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2334344    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2334345    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1495 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 1495 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2334346    filename _pref
2334346  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2334347    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2334348    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2334349   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2334350   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2334351   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2334352   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2334353   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2334354   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2334355    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2334356    quit;
2334357    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2334358    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2334359    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2334360    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2334361    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2334362    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2334363    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2334364    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2334365    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2334366    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2334367    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2334368    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2334369    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2334370    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2334371    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2334372    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2334373    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2334374    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2334375    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2334376    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2334377    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2334378    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2334379    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2334380    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2334381    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2334382    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2334383    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2334383  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2334384    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2334385    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2334386    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 1499 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2334387    filename _pref
2334387  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2334388    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2334389    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2334390   +
2334391   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2334392   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2334392  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2334393   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2334394   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2334395   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2334396   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2334397   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2334398    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2334399    quit;
2334400    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2334401    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2334402    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2334403    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2334404    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2334405    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2334406    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2334407    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2334408    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2334409    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2334410    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2334411    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2334412    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2334413    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2334414    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2334415    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2334416    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2334417    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2334418    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2334419    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2334420    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2334421    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2334422    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2334423    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2334424    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2334425    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2334426    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2334426  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2334427    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2334428    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2334429    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 1538 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2334430    filename _pref
2334430  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2334431    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2334432    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2334433   +
2334434   +
2334435   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2334436   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2334437   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2334438   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2334439   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2334440   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2334441   +
2334442   +
2334443   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2334444   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2334445   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2334446   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2334447   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2334448   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2334449   +
2334450   +
2334451   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2334452   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2334453   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2334454   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2334455   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2334456   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2334457   +
2334458   +
2334459   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2334460   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2334461   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2334462   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2334463   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2334464   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2334465   +
2334466   +
2334467   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2334468   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2334469   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2334470   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2334471   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2334472   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2334473   +
2334474   +
2334475   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2334476   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2334477   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2334478   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2334479   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2334480   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2334481   +
2334482   +
2334483   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2334484   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2334485   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2334486   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2334487   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2334488   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2334489   +
2334490   +
2334491   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2334492   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2334493   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2334494   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2334495   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2334496   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2334497   +if
2334498   +_FILTERNORM1 not in ( '.')
2334499   + and
2334500   +_FILTERNORM2 not in ( '.')
2334501   + and
2334502   +_FILTERNORM3 not in ( '.')
2334503   + and
2334504   +_FILTERNORM4 not in ( '.')
2334505   + and
2334506   +_FILTERNORM5 not in ( '.')
2334507   + and
2334508   +_FILTERNORM6 not in ( '.')
2334509   + and
2334510   +_FILTERNORM7 not in ( ' ')
2334511   + and
2334512   +_FILTERNORM8 not in ( ' ')
2334513   +and
2334514   +( Dt_Customer ne .)
2334515   +and ( Income ne . and (Income<=107000))
2334516   +and ( Kidhome ne .)
2334517   +and ( MntFishProducts ne .)
2334518   +and ( MntFruits ne .)
2334519   +and ( MntGoldProds ne .)
2334520   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2334521   +and ( MntSweetProducts ne .)
2334522   +and ( MntWines ne .)
2334523   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2334524   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2334525   +and ( NumStorePurchases ne .)
2334526   +and ( NumWebPurchases ne .)
2334527   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2334528   +and ( Recency ne .)
2334529   +and ( Teenhome ne .)
2334530   +and ( Year_Birth ne .)
2334531   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2334532   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2334533   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2334534   +end;
MPRINT(EM_DIAGRAM):   end;
2334535   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2334536   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2334537    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2334538    quit;
2334539    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2334540    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2334541    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2334542    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2334543    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2334544    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2334545    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2334546    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2334547    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2334548    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2334549    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2334550    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2334551    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2334552    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2334553    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2334554    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2334555    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2334556    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2334557    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2334558    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2334559    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2334560    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2334561    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2334562    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2334563    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2334564    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2334565    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2334565  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2334566    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2334567    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2334568    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 1604 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2334569    %macro varDept(fcmpdata=,id=);
2334570    %global nobs&id scoreFlag&id;
2334571    %let scoreFlag&id = 0;
2334572    %if &id=1 or ^&fcmpStart %then %do;
2334573    proc sort data=&fcmpdata out=_temp&id nodupkey;
2334574    by NAME;
2334575    where id=&id and LHS in( %let j=1;
2334576    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2334577    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2334578    "&var" %let j = %eval(&j+1);
2334579    %end;
2334580    );
2334581    run;
2334582    %let dsid = %sysfunc(open(_temp&id));
2334583    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2334584    %let dsid = %sysfunc(close(&dsid));
2334585    %if &&nobs&id %then %do;
2334586    %let scoreFlag&id = 1;
2334587    %let fcmpStart = 1;
2334588    %end;
2334589    %else %let fcmpStart = 0;
2334590    %end;
2334591    %else %do;
2334592    proc sort data=&fcmpdata out=_tempid;
2334593    where id=&id;
2334594    by LHS;
2334595    run;
2334596    %let dsid = %sysfunc(open(_tempid));
2334597    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2334598    %let dsid = %sysfunc(close(&dsid));
2334599    %if ^&&nobs&id %then %do;
2334600    proc datasets lib=work nolist;
2334601    delete _tempid;
2334602    run;
2334603    quit;
2334604    %end;
2334605    %else %do;
2334606    data _tempAll;
2334607    set %let j=%eval(&id-1);
2334608    %do x=1 %to &j;
2334609    %if &&nobs&x %then %do;
2334610    _temp&x %end;
2334611    %end;
2334612    ;
2334613    run;
2334614    proc sql;
2334615    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2334615  ! work._tempid p2 where p.name=p2.lhs;
2334616    quit;
2334617    data _temp&id;
2334618    set _temp&id;
2334619    where LHS ne '' and NAME ne '' and Node ne '';
2334620    run;
2334621    proc datasets lib=work nolist;
2334622    delete _tempAll;
2334623    run;
2334624    %let dsid = %sysfunc(open(_temp&id));
2334625    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2334626    %let dsid = %sysfunc(close(&dsid));
2334627    %if ^&&nobs&id %then %do;
2334628    proc datasets lib=work nolist;
2334629    delete _temp&id;
2334630    run;
2334631    quit;
2334632    %end;
2334633    %else %do;
2334634    %let scoreFlag&id = 1;
2334635    data _temp&id;
2334636    set _temp&id;
2334637    where LHS ne NAME and node ne '';
2334638    run;
2334639    %let dsid = %sysfunc(open(_temp&id));
2334640    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2334641    %let dsid = %sysfunc(close(&dsid));
2334642    %if ^&&nobs&id %then %do;
2334643    proc datasets lib=work nolist;
2334644    delete _temp&id;
2334645    run;
2334646    quit;
2334647    %end;
2334648    %else %do;
2334649    proc sort data=_temp&id nodupkey;
2334650    by LHS NAME;
2334651    run;
2334652    %end;
2334653    %end;
2334654    %end;
2334655    %end;
2334656    %mend varDept;
2334657    %macro optCode(outdata=fcmpdata);
2334658    %global fcmpStart;
2334659    %let fcmpStart = 0;
2334660    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2334661    %let NumNodes=9;
2334662    %do k=1 %to &NumNodes;
2334663    %vardept(fcmpdata=&outdata, id=&k);
2334664    %end;
2334665    %mend optCode;
2334666    %optcode(outData=EMWS8.Ensmbl38_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2334667    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2334668    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2334669    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2334670    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2334671    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2334672    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2334673    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2334674    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2334675    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2334676    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2334676  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

2334677    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2334678    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2334679    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2334680    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2334681    filename _pref
2334681  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas";
2334682    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2334683    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas.
2334684   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2334685   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2334686   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2334687   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2334688   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2334689   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2334690   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2334691   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2334692   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2334693   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2334694   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2334695   +LENGTH _WARN_ $4
2334696   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2334697   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2334698   +
2334699   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2334700   +
2334701   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2334702   +
2334703   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2334704   +
2334705   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2334706   +
2334707   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2334708   +
2334709   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2334710   +
2334711   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2334712   +
2334713   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2334714   +
2334715   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2334716   +
2334717   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2334718   +
2334719   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2334720   +
2334721   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2334722   +
2334723   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2334724   +
2334725   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2334726   +
2334727   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2334728   +
2334729   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2334730   +
2334731   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2334732   +
2334733   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2334734   +
2334735   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2334736   +
2334737   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2334738   +
2334739   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2334740   +
2334741   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2334742   +
2334743   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2334744   +
2334745   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2334746   +
2334747   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2334748   +
2334749   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2334750   +
2334751   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2334752   +
2334753   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2334754   +
2334755   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2334756   +
2334757   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2334758   +
2334759   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2334760   +
2334761   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2334762   +
2334763   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2334764   +
2334765   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2334766   +
2334767   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2334768   +
2334769   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2334770   +
2334771   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2334772   +
2334773   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2334774   +
2334775   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2334776   +
2334777   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2334778   +
2334779   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2334780   +
2334781   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2334782   +
2334783   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2334784   +
2334785   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2334786   +
2334787   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2334788   +
2334789   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2334790   +
2334791   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2334792   +
2334793   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2334794   +
2334795   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2334796   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2334797   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2334798   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2334799   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2334800   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2334801   +end;
MPRINT(EM_DIAGRAM):   end;
2334802   +else do;
MPRINT(EM_DIAGRAM):   else do;
2334803   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2334804   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2334805   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2334806   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2334807   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2334808   +   end;
MPRINT(EM_DIAGRAM):   end;
2334809   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2334810   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2334811   +   end;
MPRINT(EM_DIAGRAM):   end;
2334812   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2334813   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2334814   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2334815   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2334816   +   end;
MPRINT(EM_DIAGRAM):   end;
2334817   +end;
MPRINT(EM_DIAGRAM):   end;
2334818   +
2334819   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2334820   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2334821   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2334822   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2334823   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2334824   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2334825   +end;
MPRINT(EM_DIAGRAM):   end;
2334826   +else do;
MPRINT(EM_DIAGRAM):   else do;
2334827   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2334828   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2334829   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2334830   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2334831   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2334832   +   end;
MPRINT(EM_DIAGRAM):   end;
2334833   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2334834   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2334835   +   end;
MPRINT(EM_DIAGRAM):   end;
2334836   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2334837   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2334838   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2334839   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2334840   +   end;
MPRINT(EM_DIAGRAM):   end;
2334841   +end;
MPRINT(EM_DIAGRAM):   end;
2334842   +
2334843   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2334844   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2334845   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2334846   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2334847   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2334848   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2334849   +end;
MPRINT(EM_DIAGRAM):   end;
2334850   +else do;
MPRINT(EM_DIAGRAM):   else do;
2334851   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2334852   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2334853   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2334854   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2334855   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2334856   +   end;
MPRINT(EM_DIAGRAM):   end;
2334857   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2334858   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2334859   +   end;
MPRINT(EM_DIAGRAM):   end;
2334860   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2334861   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2334862   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2334863   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2334864   +   end;
MPRINT(EM_DIAGRAM):   end;
2334865   +end;
MPRINT(EM_DIAGRAM):   end;
2334866   +
2334867   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2334868   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2334869   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2334870   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2334871   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2334872   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2334873   +end;
MPRINT(EM_DIAGRAM):   end;
2334874   +else do;
MPRINT(EM_DIAGRAM):   else do;
2334875   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2334876   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2334877   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2334878   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2334879   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2334880   +   end;
MPRINT(EM_DIAGRAM):   end;
2334881   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2334882   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2334883   +   end;
MPRINT(EM_DIAGRAM):   end;
2334884   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2334885   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2334886   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2334887   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2334888   +   end;
MPRINT(EM_DIAGRAM):   end;
2334889   +end;
MPRINT(EM_DIAGRAM):   end;
2334890   +
2334891   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2334892   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2334893   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2334894   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2334895   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2334896   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2334897   +end;
MPRINT(EM_DIAGRAM):   end;
2334898   +else do;
MPRINT(EM_DIAGRAM):   else do;
2334899   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2334900   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2334901   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2334902   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2334903   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2334904   +   end;
MPRINT(EM_DIAGRAM):   end;
2334905   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2334906   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2334907   +   end;
MPRINT(EM_DIAGRAM):   end;
2334908   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2334909   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2334910   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2334911   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2334912   +   end;
MPRINT(EM_DIAGRAM):   end;
2334913   +end;
MPRINT(EM_DIAGRAM):   end;
2334914   +
2334915   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2334916   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2334917   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2334918   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2334919   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2334920   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2334921   +end;
MPRINT(EM_DIAGRAM):   end;
2334922   +else do;
MPRINT(EM_DIAGRAM):   else do;
2334923   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2334924   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2334925   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2334926   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2334927   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2334928   +   end;
MPRINT(EM_DIAGRAM):   end;
2334929   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2334930   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2334931   +   end;
MPRINT(EM_DIAGRAM):   end;
2334932   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2334933   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2334934   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2334935   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2334936   +   end;
MPRINT(EM_DIAGRAM):   end;
2334937   +end;
MPRINT(EM_DIAGRAM):   end;
2334938   +
2334939   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2334940   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2334941   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2334942   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2334943   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2334944   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2334945   +end;
MPRINT(EM_DIAGRAM):   end;
2334946   +else do;
MPRINT(EM_DIAGRAM):   else do;
2334947   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2334948   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2334949   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2334950   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2334951   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2334952   +   end;
MPRINT(EM_DIAGRAM):   end;
2334953   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2334954   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2334955   +   end;
MPRINT(EM_DIAGRAM):   end;
2334956   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2334957   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2334958   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2334959   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2334960   +   end;
MPRINT(EM_DIAGRAM):   end;
2334961   +end;
MPRINT(EM_DIAGRAM):   end;
2334962   +
2334963   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2334964   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2334965   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2334966   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2334967   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2334968   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2334969   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2334970   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2334971   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2334972   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2334973   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2334974   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2334975   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2334976   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2334977   +end;
MPRINT(EM_DIAGRAM):   end;
2334978   +else do;
MPRINT(EM_DIAGRAM):   else do;
2334979   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2334980   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2334981   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2334982   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2334983   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2334984   +   end;
MPRINT(EM_DIAGRAM):   end;
2334985   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2334986   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2334987   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2334988   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2334989   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2334990   +   end;
MPRINT(EM_DIAGRAM):   end;
2334991   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2334992   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2334993   +   end;
MPRINT(EM_DIAGRAM):   end;
2334994   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2334995   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2334996   +   end;
MPRINT(EM_DIAGRAM):   end;
2334997   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2334998   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2334999   +   end;
MPRINT(EM_DIAGRAM):   end;
2335000   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2335001   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2335002   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2335003   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2335004   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2335005   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2335006   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2335007   +   end;
MPRINT(EM_DIAGRAM):   end;
2335008   +end;
MPRINT(EM_DIAGRAM):   end;
2335009   +
2335010   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2335011   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2335012   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2335013   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2335014   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2335015   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2335016   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2335017   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2335018   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2335019   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2335020   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2335021   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2335022   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2335023   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2335024   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2335025   +end;
MPRINT(EM_DIAGRAM):   end;
2335026   +else do;
MPRINT(EM_DIAGRAM):   else do;
2335027   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2335028   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2335029   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2335030   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2335031   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2335032   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2335033   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2335034   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2335035   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2335036   +         end;
MPRINT(EM_DIAGRAM):   end;
2335037   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2335038   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2335039   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2335040   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2335041   +            end;
MPRINT(EM_DIAGRAM):   end;
2335042   +         end;
MPRINT(EM_DIAGRAM):   end;
2335043   +      end;
MPRINT(EM_DIAGRAM):   end;
2335044   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2335045   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2335046   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2335047   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2335048   +         end;
MPRINT(EM_DIAGRAM):   end;
2335049   +      end;
MPRINT(EM_DIAGRAM):   end;
2335050   +   end;
MPRINT(EM_DIAGRAM):   end;
2335051   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2335052   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2335053   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2335054   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2335055   +      end;
MPRINT(EM_DIAGRAM):   end;
2335056   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2335057   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2335058   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2335059   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2335060   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2335061   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2335062   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2335063   +         end;
MPRINT(EM_DIAGRAM):   end;
2335064   +      end;
MPRINT(EM_DIAGRAM):   end;
2335065   +   end;
MPRINT(EM_DIAGRAM):   end;
2335066   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2335067   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2335068   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2335069   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2335070   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2335071   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2335072   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2335073   +   end;
MPRINT(EM_DIAGRAM):   end;
2335074   +end;
MPRINT(EM_DIAGRAM):   end;
2335075   +
2335076   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2335077   +*** Checking missing input Interval
2335078   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2335079   +
2335080   +IF NMISS(
2335081   +   AcceptedCmpTotal ,
2335082   +   Age ,
2335083   +   Frq ,
2335084   +   Income ,
2335085   +   Kidhome ,
2335086   +   Mnt ,
2335087   +   MntFishProducts ,
2335088   +   MntFruits ,
2335089   +   MntGoldProds ,
2335090   +   MntMeatProducts ,
2335091   +   MntSweetProducts ,
2335092   +   MntWines ,
2335093   +   MonthsAsCustomer ,
2335094   +   NumCatalogPurchases ,
2335095   +   NumDealsPurchases ,
2335096   +   NumDistPurchases ,
2335097   +   NumStorePurchases ,
2335098   +   NumWebPurchases ,
2335099   +   NumWebVisitsMonth ,
2335100   +   RFMstat ,
2335101   +   RMntFrq ,
2335102   +   Recency ,
2335103   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2335104   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2335105   +
2335106   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2335107   +END;
MPRINT(EM_DIAGRAM):   END;
2335108   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2335109   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2335110   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2335111   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2335112   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2335113   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2335114   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2335115   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2335116   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2335117   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2335118   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2335119   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2335120   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2335121   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2335122   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2335123   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2335124   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2335125   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2335126   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2335127   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2335128   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2335129   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2335130   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2335131   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2335132   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2335133   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2335134   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2335135   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2335136   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2335137   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2335138   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2335139   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2335140   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2335141   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2335142   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2335143   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2335144   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2335145   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2335146   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2335147   +END;
MPRINT(EM_DIAGRAM):   END;
2335148   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2335149   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2335150   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2335151   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2335152   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2335153   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2335154   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2335155   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2335156   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2335157   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2335158   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2335159   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2335160   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2335161   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2335162   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2335163   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2335164   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2335165   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2335166   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2335167   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2335168   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2335169   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2335170   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2335171   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2335172   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2335173   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2335174   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2335175   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2335176   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2335177   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2335178   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2335179   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2335180   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2335181   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2335182   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2335183   +   ELSE S_NumCatalogPurchases
2335184   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2335185   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2335186   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2335187   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2335188   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2335189   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2335190   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2335191   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2335192   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2335193   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2335194   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2335195   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2335196   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2335197   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2335198   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2335199   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2335200   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2335201   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2335202   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2335203   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2335204   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2335205   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2335206   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2335207   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2335208   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2335209   +END;
MPRINT(EM_DIAGRAM):   END;
2335210   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2335211   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2335212   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2335213   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2335214   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2335215   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2335216   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2335217   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2335218   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2335219   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2335220   +   H1x1_1  =     0.26454269681311 * S_AcceptedCmpTotal
2335221   +          +    -0.01281904987956 * S_Age  +    -0.19309516267581 * S_Frq
2335222   +          +    -0.19077579202378 * S_Income  +      0.1806651018562 *
2335223   +        S_Kidhome  +    -0.31002612826472 * S_Mnt  +    -0.05901796512011 *
2335224   +        S_MntFishProducts  +    -0.03760930101165 * S_MntFruits
2335225   +          +     0.01720900715043 * S_MntGoldProds  +     0.21472292961422 *
2335226   +        S_MntMeatProducts  +    -0.02880706568684 * S_MntSweetProducts
2335227   +          +    -0.37993583170844 * S_MntWines  +    -0.00848444156361 *
2335228   +        S_MonthsAsCustomer  +     0.15939611818942 * S_NumCatalogPurchases
2335229   +          +     0.08390531145773 * S_NumDealsPurchases
2335230   +          +    -0.29505970645775 * S_NumDistPurchases
2335231   +          +    -0.13820571170194 * S_NumStorePurchases
2335232   +          +     0.11468011313368 * S_NumWebPurchases
2335233   +          +    -0.18421241371843 * S_NumWebVisitsMonth
2335234   +          +     0.11564064971509 * S_RFMstat  +    -0.02223928001432 *
2335235   +        S_RMntFrq  +     0.18022777532589 * S_Recency
2335236   +          +     0.14654831145379 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26454269681311 * S_AcceptedCmpTotal + -0.01281904987956 * 
S_Age + -0.19309516267581 * S_Frq + -0.19077579202378 * S_Income + 0.1806651018562 * S_Kidhome 
+ -0.31002612826472 * S_Mnt + -0.05901796512011 * S_MntFishProducts + -0.03760930101165 * 
S_MntFruits + 0.01720900715043 * S_MntGoldProds + 0.21472292961422 * S_MntMeatProducts + 
-0.02880706568684 * S_MntSweetProducts + -0.37993583170844 * S_MntWines + -0.00848444156361 * 
S_MonthsAsCustomer + 0.15939611818942 * S_NumCatalogPurchases + 0.08390531145773 * 
S_NumDealsPurchases + -0.29505970645775 * S_NumDistPurchases + -0.13820571170194 * 
S_NumStorePurchases + 0.11468011313368 * S_NumWebPurchases + -0.18421241371843 * 
S_NumWebVisitsMonth + 0.11564064971509 * S_RFMstat + -0.02223928001432 * S_RMntFrq + 
0.18022777532589 * S_Recency + 0.14654831145379 * S_Teenhome ;
2335237   +   H1x1_2  =     0.27055972468014 * S_AcceptedCmpTotal
2335238   +          +      0.0025862891193 * S_Age  +    -0.07147307366817 * S_Frq
2335239   +          +      0.1883776136263 * S_Income  +    -0.12712510891181 *
2335240   +        S_Kidhome  +    -0.42099927948686 * S_Mnt  +    -0.07047631817862 *
2335241   +        S_MntFishProducts  +    -0.06658475152878 * S_MntFruits
2335242   +          +     0.01943025682869 * S_MntGoldProds  +     0.29481794109465 *
2335243   +        S_MntMeatProducts  +    -0.06573502094591 * S_MntSweetProducts
2335244   +          +    -0.46266722725002 * S_MntWines  +    -0.00472333181469 *
2335245   +        S_MonthsAsCustomer  +     0.35081452017576 * S_NumCatalogPurchases
2335246   +          +     0.18009076035363 * S_NumDealsPurchases
2335247   +          +     0.03853861006587 * S_NumDistPurchases
2335248   +          +    -0.05118063952874 * S_NumStorePurchases
2335249   +          +    -0.03282286120473 * S_NumWebPurchases
2335250   +          +     0.31160900419026 * S_NumWebVisitsMonth
2335251   +          +     0.08027884378429 * S_RFMstat  +     0.39057239541393 *
2335252   +        S_RMntFrq  +    -0.34796767111274 * S_Recency
2335253   +          +    -0.12099758522271 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.27055972468014 * S_AcceptedCmpTotal + 0.0025862891193 * S_Age 
+ -0.07147307366817 * S_Frq + 0.1883776136263 * S_Income + -0.12712510891181 * S_Kidhome + 
-0.42099927948686 * S_Mnt + -0.07047631817862 * S_MntFishProducts + -0.06658475152878 * 
S_MntFruits + 0.01943025682869 * S_MntGoldProds + 0.29481794109465 * S_MntMeatProducts + 
-0.06573502094591 * S_MntSweetProducts + -0.46266722725002 * S_MntWines + -0.00472333181469 * 
S_MonthsAsCustomer + 0.35081452017576 * S_NumCatalogPurchases + 0.18009076035363 * 
S_NumDealsPurchases + 0.03853861006587 * S_NumDistPurchases + -0.05118063952874 * 
S_NumStorePurchases + -0.03282286120473 * S_NumWebPurchases + 0.31160900419026 * 
S_NumWebVisitsMonth + 0.08027884378429 * S_RFMstat + 0.39057239541393 * S_RMntFrq + 
-0.34796767111274 * S_Recency + -0.12099758522271 * S_Teenhome ;
2335254   +   H1x1_1  = H1x1_1  +     0.12539246465239 * AcceptedCmp10
2335255   +          +     0.38473652869745 * AcceptedCmp20  +     0.29820983391886 *
2335256   +        AcceptedCmp30  +     0.29085092779792 * AcceptedCmp40
2335257   +          +     0.18918195914981 * AcceptedCmp50  +    -0.26812516781697 *
2335258   +        Complain0  +    -0.08804110897148 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.12539246465239 * AcceptedCmp10 + 0.38473652869745 * 
AcceptedCmp20 + 0.29820983391886 * AcceptedCmp30 + 0.29085092779792 * AcceptedCmp40 + 
0.18918195914981 * AcceptedCmp50 + -0.26812516781697 * Complain0 + -0.08804110897148 * 
HigherEducationBinary0 ;
2335259   +   H1x1_2  = H1x1_2  +    -0.02312897825565 * AcceptedCmp10
2335260   +          +     0.03909481703523 * AcceptedCmp20  +     0.02531081539721 *
2335261   +        AcceptedCmp30  +     0.03109641300151 * AcceptedCmp40
2335262   +          +     0.01985718189621 * AcceptedCmp50  +     0.13425456375085 *
2335263   +        Complain0  +    -0.08222486590117 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.02312897825565 * AcceptedCmp10 + 0.03909481703523 * 
AcceptedCmp20 + 0.02531081539721 * AcceptedCmp30 + 0.03109641300151 * AcceptedCmp40 + 
0.01985718189621 * AcceptedCmp50 + 0.13425456375085 * Complain0 + -0.08222486590117 * 
HigherEducationBinary0 ;
2335264   +   H1x1_1  = H1x1_1  +    -0.01975862863669 * Education2n_Cycle
2335265   +          +     0.14654730697956 * EducationBasic  +    -0.00459515646452 *
2335266   +        EducationGraduation  +     0.01586948449127 * EducationMaster
2335267   +          +    -0.04750981393889 * Marital_StatusDivorced
2335268   +          +     0.28216925676677 * Marital_StatusMarried
2335269   +          +    -0.20757827413964 * Marital_StatusSingle
2335270   +          +     0.22622509024122 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.01975862863669 * Education2n_Cycle + 
0.14654730697956 * EducationBasic + -0.00459515646452 * EducationGraduation + 0.01586948449127 
* EducationMaster + -0.04750981393889 * Marital_StatusDivorced + 0.28216925676677 * 
Marital_StatusMarried + -0.20757827413964 * Marital_StatusSingle + 0.22622509024122 * 
Marital_StatusTogether ;
2335271   +   H1x1_2  = H1x1_2  +     0.12009608969049 * Education2n_Cycle
2335272   +          +     0.01793460710056 * EducationBasic  +    -0.04257710051346 *
2335273   +        EducationGraduation  +    -0.06975725710115 * EducationMaster
2335274   +          +     0.05981919620577 * Marital_StatusDivorced
2335275   +          +    -0.17161573846062 * Marital_StatusMarried
2335276   +          +     0.15869440681091 * Marital_StatusSingle
2335277   +          +    -0.13282372850158 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12009608969049 * Education2n_Cycle + 
0.01793460710056 * EducationBasic + -0.04257710051346 * EducationGraduation + 
-0.06975725710115 * EducationMaster + 0.05981919620577 * Marital_StatusDivorced + 
-0.17161573846062 * Marital_StatusMarried + 0.15869440681091 * Marital_StatusSingle + 
-0.13282372850158 * Marital_StatusTogether ;
2335278   +   H1x1_1  =     0.87962277715971 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.87962277715971 + H1x1_1 ;
2335279   +   H1x1_2  =    -0.62570339696782 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.62570339696782 + H1x1_2 ;
2335280   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
2335281   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
2335282   +END;
MPRINT(EM_DIAGRAM):   END;
2335283   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2335284   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2335285   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2335286   +END;
MPRINT(EM_DIAGRAM):   END;
2335287   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2335288   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2335289   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2335290   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2335291   +   H1x2_1  =      0.1719390672121 * S_AcceptedCmpTotal
2335292   +          +     0.23586839288361 * S_Age  +    -1.85384134180372 * S_Frq
2335293   +          +    -0.43561758063577 * S_Income  +     -2.5581498901473 *
2335294   +        S_Kidhome  +      1.7031888248428 * S_Mnt  +     0.84982621124736 *
2335295   +        S_MntFishProducts  +     0.25990173458485 * S_MntFruits
2335296   +          +    -2.80730469703961 * S_MntGoldProds  +     0.64923500711702 *
2335297   +        S_MntMeatProducts  +     0.27458645458502 * S_MntSweetProducts
2335298   +          +    -0.47723589182372 * S_MntWines  +    -0.66777488145507 *
2335299   +        S_MonthsAsCustomer  +    -0.46364414558282 * S_NumCatalogPurchases
2335300   +          +     0.00741910846933 * S_NumDealsPurchases
2335301   +          +       1.334289252268 * S_NumDistPurchases
2335302   +          +    -0.29851567180932 * S_NumStorePurchases
2335303   +          +    -0.52115313259666 * S_NumWebPurchases
2335304   +          +     0.93907168501909 * S_NumWebVisitsMonth
2335305   +          +    -0.26126881318451 * S_RFMstat  +     -1.3003763542929 *
2335306   +        S_RMntFrq  +    -0.12807368149309 * S_Recency
2335307   +          +    -0.21296116974623 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.1719390672121 * S_AcceptedCmpTotal + 0.23586839288361 * S_Age 
+ -1.85384134180372 * S_Frq + -0.43561758063577 * S_Income + -2.5581498901473 * S_Kidhome + 
1.7031888248428 * S_Mnt + 0.84982621124736 * S_MntFishProducts + 0.25990173458485 * 
S_MntFruits + -2.80730469703961 * S_MntGoldProds + 0.64923500711702 * S_MntMeatProducts + 
0.27458645458502 * S_MntSweetProducts + -0.47723589182372 * S_MntWines + -0.66777488145507 * 
S_MonthsAsCustomer + -0.46364414558282 * S_NumCatalogPurchases + 0.00741910846933 * 
S_NumDealsPurchases + 1.334289252268 * S_NumDistPurchases + -0.29851567180932 * 
S_NumStorePurchases + -0.52115313259666 * S_NumWebPurchases + 0.93907168501909 * 
S_NumWebVisitsMonth + -0.26126881318451 * S_RFMstat + -1.3003763542929 * S_RMntFrq + 
-0.12807368149309 * S_Recency + -0.21296116974623 * S_Teenhome ;
2335308   +   H1x2_2  =     0.30897763700303 * S_AcceptedCmpTotal
2335309   +          +    -0.77727886396317 * S_Age  +    -0.79298582494973 * S_Frq
2335310   +          +    -1.73199353738093 * S_Income  +     1.12984956989288 *
2335311   +        S_Kidhome  +    -1.36701096993984 * S_Mnt  +    -0.21063950702424 *
2335312   +        S_MntFishProducts  +    -0.20027336686257 * S_MntFruits
2335313   +          +    -0.06955810418489 * S_MntGoldProds  +     0.16672767423533 *
2335314   +        S_MntMeatProducts  +    -1.56675269740541 * S_MntSweetProducts
2335315   +          +     1.85366479127485 * S_MntWines  +    -0.58178621903094 *
2335316   +        S_MonthsAsCustomer  +     1.31024619253935 * S_NumCatalogPurchases
2335317   +          +     1.60427001186844 * S_NumDealsPurchases
2335318   +          +    -0.18447618033353 * S_NumDistPurchases
2335319   +          +    -1.29966073003539 * S_NumStorePurchases
2335320   +          +    -1.12373457341536 * S_NumWebPurchases
2335321   +          +     1.46099221440494 * S_NumWebVisitsMonth
2335322   +          +     0.17795038564406 * S_RFMstat  +    -0.82372068140832 *
2335323   +        S_RMntFrq  +      0.4480370534729 * S_Recency
2335324   +          +     0.19272737691538 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.30897763700303 * S_AcceptedCmpTotal + -0.77727886396317 * 
S_Age + -0.79298582494973 * S_Frq + -1.73199353738093 * S_Income + 1.12984956989288 * 
S_Kidhome + -1.36701096993984 * S_Mnt + -0.21063950702424 * S_MntFishProducts + 
-0.20027336686257 * S_MntFruits + -0.06955810418489 * S_MntGoldProds + 0.16672767423533 * 
S_MntMeatProducts + -1.56675269740541 * S_MntSweetProducts + 1.85366479127485 * S_MntWines + 
-0.58178621903094 * S_MonthsAsCustomer + 1.31024619253935 * S_NumCatalogPurchases + 
1.60427001186844 * S_NumDealsPurchases + -0.18447618033353 * S_NumDistPurchases + 
-1.29966073003539 * S_NumStorePurchases + -1.12373457341536 * S_NumWebPurchases + 
1.46099221440494 * S_NumWebVisitsMonth + 0.17795038564406 * S_RFMstat + -0.82372068140832 * 
S_RMntFrq + 0.4480370534729 * S_Recency + 0.19272737691538 * S_Teenhome ;
2335325   +   H1x2_1  = H1x2_1  +     -0.6569942252053 * AcceptedCmp10
2335326   +          +    -0.89152555599538 * AcceptedCmp20  +     1.00488730476017 *
2335327   +        AcceptedCmp30  +     0.34286042692068 * AcceptedCmp40
2335328   +          +    -1.19198820362508 * AcceptedCmp50  +    -0.86571531914686 *
2335329   +        Complain0  +     0.14303136037365 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.6569942252053 * AcceptedCmp10 + -0.89152555599538 * 
AcceptedCmp20 + 1.00488730476017 * AcceptedCmp30 + 0.34286042692068 * AcceptedCmp40 + 
-1.19198820362508 * AcceptedCmp50 + -0.86571531914686 * Complain0 + 0.14303136037365 * 
HigherEducationBinary0 ;
2335330   +   H1x2_2  = H1x2_2  +     1.79481763784518 * AcceptedCmp10
2335331   +          +    -2.85912280013336 * AcceptedCmp20  +     0.16890012708431 *
2335332   +        AcceptedCmp30  +     0.94639083182751 * AcceptedCmp40
2335333   +          +    -0.62141828005946 * AcceptedCmp50  +    -0.39098882491277 *
2335334   +        Complain0  +     0.85700787946581 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.79481763784518 * AcceptedCmp10 + -2.85912280013336 * 
AcceptedCmp20 + 0.16890012708431 * AcceptedCmp30 + 0.94639083182751 * AcceptedCmp40 + 
-0.62141828005946 * AcceptedCmp50 + -0.39098882491277 * Complain0 + 0.85700787946581 * 
HigherEducationBinary0 ;
2335335   +   H1x2_1  = H1x2_1  +      0.0737054452993 * Education2n_Cycle
2335336   +          +       0.362372261752 * EducationBasic  +      -1.485941295677 *
2335337   +        EducationGraduation  +    -0.81257694655594 * EducationMaster
2335338   +          +     0.59819559998538 * Marital_StatusDivorced
2335339   +          +     0.92957772553633 * Marital_StatusMarried
2335340   +          +    -1.11796266958894 * Marital_StatusSingle
2335341   +          +     -2.0576132087002 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.0737054452993 * Education2n_Cycle + 0.362372261752 * 
EducationBasic + -1.485941295677 * EducationGraduation + -0.81257694655594 * EducationMaster + 
0.59819559998538 * Marital_StatusDivorced + 0.92957772553633 * Marital_StatusMarried + 
-1.11796266958894 * Marital_StatusSingle + -2.0576132087002 * Marital_StatusTogether ;
2335342   +   H1x2_2  = H1x2_2  +    -1.10016528859962 * Education2n_Cycle
2335343   +          +    -1.46816646165468 * EducationBasic  +    -0.11241499152788 *
2335344   +        EducationGraduation  +    -0.65110715251273 * EducationMaster
2335345   +          +      1.0870909562212 * Marital_StatusDivorced
2335346   +          +     1.50333961797515 * Marital_StatusMarried
2335347   +          +    -1.41407780765932 * Marital_StatusSingle
2335348   +          +    -0.52528072358697 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.10016528859962 * Education2n_Cycle + 
-1.46816646165468 * EducationBasic + -0.11241499152788 * EducationGraduation + 
-0.65110715251273 * EducationMaster + 1.0870909562212 * Marital_StatusDivorced + 
1.50333961797515 * Marital_StatusMarried + -1.41407780765932 * Marital_StatusSingle + 
-0.52528072358697 * Marital_StatusTogether ;
2335349   +   H1x2_1  =     1.46376024534028 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.46376024534028 + H1x2_1 ;
2335350   +   H1x2_2  =    -0.21341526379366 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.21341526379366 + H1x2_2 ;
2335351   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2335352   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2335353   +   H1x2_1  = EXP(MIN(-0.5 * H1x2_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(-0.5 * H1x2_1 **2, _EXP_BAR));
2335354   +   H1x2_2  = EXP(MIN(-0.5 * H1x2_2 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(-0.5 * H1x2_2 **2, _EXP_BAR));
2335355   +END;
MPRINT(EM_DIAGRAM):   END;
2335356   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2335357   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2335358   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2335359   +END;
MPRINT(EM_DIAGRAM):   END;
2335360   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2335361   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2335362   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2335363   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2335364   +   H1x3_1  =     0.29299707972123 * S_AcceptedCmpTotal
2335365   +          +     1.39797329466471 * S_Age  +    -2.02673480388837 * S_Frq
2335366   +          +    -1.09682777516542 * S_Income  +    -1.22241109888643 *
2335367   +        S_Kidhome  +    -1.35766076466324 * S_Mnt  +    -2.90812690982576 *
2335368   +        S_MntFishProducts  +    -0.48174923069843 * S_MntFruits
2335369   +          +     1.57335575145195 * S_MntGoldProds  +    -0.55248873552176 *
2335370   +        S_MntMeatProducts  +     0.54536808091745 * S_MntSweetProducts
2335371   +          +    -0.41516162035296 * S_MntWines  +     0.07715050596116 *
2335372   +        S_MonthsAsCustomer  +    -2.18785324142159 * S_NumCatalogPurchases
2335373   +          +     -1.1174504455343 * S_NumDealsPurchases
2335374   +          +    -0.18561253113498 * S_NumDistPurchases
2335375   +          +    -0.35231054612792 * S_NumStorePurchases
2335376   +          +      0.9249490354172 * S_NumWebPurchases
2335377   +          +    -0.79868535147175 * S_NumWebVisitsMonth
2335378   +          +    -0.17158151681124 * S_RFMstat  +     -0.9870286843901 *
2335379   +        S_RMntFrq  +     0.62439123699986 * S_Recency
2335380   +          +    -0.45845377794308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.29299707972123 * S_AcceptedCmpTotal + 1.39797329466471 * 
S_Age + -2.02673480388837 * S_Frq + -1.09682777516542 * S_Income + -1.22241109888643 * 
S_Kidhome + -1.35766076466324 * S_Mnt + -2.90812690982576 * S_MntFishProducts + 
-0.48174923069843 * S_MntFruits + 1.57335575145195 * S_MntGoldProds + -0.55248873552176 * 
S_MntMeatProducts + 0.54536808091745 * S_MntSweetProducts + -0.41516162035296 * S_MntWines + 
0.07715050596116 * S_MonthsAsCustomer + -2.18785324142159 * S_NumCatalogPurchases + 
-1.1174504455343 * S_NumDealsPurchases + -0.18561253113498 * S_NumDistPurchases + 
-0.35231054612792 * S_NumStorePurchases + 0.9249490354172 * S_NumWebPurchases + 
-0.79868535147175 * S_NumWebVisitsMonth + -0.17158151681124 * S_RFMstat + -0.9870286843901 * 
S_RMntFrq + 0.62439123699986 * S_Recency + -0.45845377794308 * S_Teenhome ;
2335381   +   H1x3_2  =    -1.07483179793421 * S_AcceptedCmpTotal
2335382   +          +     1.03558600048684 * S_Age  +     1.11497695424161 * S_Frq
2335383   +          +     0.27297296926116 * S_Income  +     0.77036019999023 *
2335384   +        S_Kidhome  +     0.02567848304605 * S_Mnt  +     0.38661977628442 *
2335385   +        S_MntFishProducts  +    -0.36751750771945 * S_MntFruits
2335386   +          +     0.93924107558212 * S_MntGoldProds  +     0.93046859422523 *
2335387   +        S_MntMeatProducts  +    -0.46124679979068 * S_MntSweetProducts
2335388   +          +    -0.45348234529786 * S_MntWines  +     1.60057890623864 *
2335389   +        S_MonthsAsCustomer  +    -1.74657448073162 * S_NumCatalogPurchases
2335390   +          +     1.05434863590054 * S_NumDealsPurchases
2335391   +          +    -0.73255174632068 * S_NumDistPurchases
2335392   +          +     0.53949953455044 * S_NumStorePurchases
2335393   +          +    -0.61709467816649 * S_NumWebPurchases
2335394   +          +     1.36235282484348 * S_NumWebVisitsMonth
2335395   +          +     -0.0352720913953 * S_RFMstat  +     0.14001475375682 *
2335396   +        S_RMntFrq  +    -0.24276831608869 * S_Recency
2335397   +          +     0.09762798365722 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -1.07483179793421 * S_AcceptedCmpTotal + 1.03558600048684 * 
S_Age + 1.11497695424161 * S_Frq + 0.27297296926116 * S_Income + 0.77036019999023 * S_Kidhome 
+ 0.02567848304605 * S_Mnt + 0.38661977628442 * S_MntFishProducts + -0.36751750771945 * 
S_MntFruits + 0.93924107558212 * S_MntGoldProds + 0.93046859422523 * S_MntMeatProducts + 
-0.46124679979068 * S_MntSweetProducts + -0.45348234529786 * S_MntWines + 1.60057890623864 * 
S_MonthsAsCustomer + -1.74657448073162 * S_NumCatalogPurchases + 1.05434863590054 * 
S_NumDealsPurchases + -0.73255174632068 * S_NumDistPurchases + 0.53949953455044 * 
S_NumStorePurchases + -0.61709467816649 * S_NumWebPurchases + 1.36235282484348 * 
S_NumWebVisitsMonth + -0.0352720913953 * S_RFMstat + 0.14001475375682 * S_RMntFrq + 
-0.24276831608869 * S_Recency + 0.09762798365722 * S_Teenhome ;
2335398   +   H1x3_1  = H1x3_1  +    -0.94208577947628 * AcceptedCmp10
2335399   +          +     -0.5233017415423 * AcceptedCmp20  +    -0.76900164563331 *
2335400   +        AcceptedCmp30  +    -0.79512141055877 * AcceptedCmp40
2335401   +          +     0.20126599116957 * AcceptedCmp50  +    -0.43046555689873 *
2335402   +        Complain0  +     0.31565229685815 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.94208577947628 * AcceptedCmp10 + -0.5233017415423 * 
AcceptedCmp20 + -0.76900164563331 * AcceptedCmp30 + -0.79512141055877 * AcceptedCmp40 + 
0.20126599116957 * AcceptedCmp50 + -0.43046555689873 * Complain0 + 0.31565229685815 * 
HigherEducationBinary0 ;
2335403   +   H1x3_2  = H1x3_2  +    -1.24961064002454 * AcceptedCmp10
2335404   +          +    -0.89859693224833 * AcceptedCmp20  +     1.15884958881232 *
2335405   +        AcceptedCmp30  +     0.38250389164472 * AcceptedCmp40
2335406   +          +     0.47123004358879 * AcceptedCmp50  +     -2.1232679844098 *
2335407   +        Complain0  +     0.97226091069674 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -1.24961064002454 * AcceptedCmp10 + -0.89859693224833 
* AcceptedCmp20 + 1.15884958881232 * AcceptedCmp30 + 0.38250389164472 * AcceptedCmp40 + 
0.47123004358879 * AcceptedCmp50 + -2.1232679844098 * Complain0 + 0.97226091069674 * 
HigherEducationBinary0 ;
2335408   +   H1x3_1  = H1x3_1  +    -0.07500306665919 * Education2n_Cycle
2335409   +          +     0.04122924311058 * EducationBasic  +    -0.49410102102951 *
2335410   +        EducationGraduation  +    -0.45477734340809 * EducationMaster
2335411   +          +     0.22253248036322 * Marital_StatusDivorced
2335412   +          +    -1.72455332745001 * Marital_StatusMarried
2335413   +          +     0.57787272107232 * Marital_StatusSingle
2335414   +          +     0.16267074825086 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.07500306665919 * Education2n_Cycle + 
0.04122924311058 * EducationBasic + -0.49410102102951 * EducationGraduation + 
-0.45477734340809 * EducationMaster + 0.22253248036322 * Marital_StatusDivorced + 
-1.72455332745001 * Marital_StatusMarried + 0.57787272107232 * Marital_StatusSingle + 
0.16267074825086 * Marital_StatusTogether ;
2335415   +   H1x3_2  = H1x3_2  +    -0.21560233542581 * Education2n_Cycle
2335416   +          +    -0.36476815429069 * EducationBasic  +     1.63334881201349 *
2335417   +        EducationGraduation  +    -1.12620982139344 * EducationMaster
2335418   +          +     0.14637124403046 * Marital_StatusDivorced
2335419   +          +     0.18905186437528 * Marital_StatusMarried
2335420   +          +     0.00511958458521 * Marital_StatusSingle
2335421   +          +      -0.915980703129 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.21560233542581 * Education2n_Cycle + 
-0.36476815429069 * EducationBasic + 1.63334881201349 * EducationGraduation + 
-1.12620982139344 * EducationMaster + 0.14637124403046 * Marital_StatusDivorced + 
0.18905186437528 * Marital_StatusMarried + 0.00511958458521 * Marital_StatusSingle + 
-0.915980703129 * Marital_StatusTogether ;
2335422   +   H1x3_1  =     0.54853846322055 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.54853846322055 + H1x3_1 ;
2335423   +   H1x3_2  =     1.36395858099198 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.36395858099198 + H1x3_2 ;
2335424   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2335425   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2335426   +   H1x3_1  = EXP(MIN(H1x3_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(MIN(H1x3_1 , _EXP_BAR));
2335427   +   H1x3_2  = EXP(MIN(H1x3_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(MIN(H1x3_2 , _EXP_BAR));
2335428   +END;
MPRINT(EM_DIAGRAM):   END;
2335429   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2335430   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2335431   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2335432   +END;
MPRINT(EM_DIAGRAM):   END;
2335433   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2335434   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2335435   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2335436   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2335437   +   P_DepVar1  =    -10.6892993503201 * H1x1_1  +     16.2938756734008 * H1x1_2
2335438   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -10.6892993503201 * H1x1_1 + 16.2938756734008 * H1x1_2 ;
2335439   +   P_DepVar1  = P_DepVar1  +      1.2332183930826 * H1x2_1
2335440   +          +    -0.85206858106106 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + 1.2332183930826 * H1x2_1 + -0.85206858106106 * 
H1x2_2 ;
2335441   +   P_DepVar1  = P_DepVar1  +    -0.00087126688031 * H1x3_1
2335442   +          +    -0.00025812675645 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.00087126688031 * H1x3_1 + -0.00025812675645 * 
H1x3_2 ;
2335443   +   P_DepVar1  =     2.20710379818135 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.20710379818135 + P_DepVar1 ;
2335444   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2335445   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2335446   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2335447   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2335448   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2335449   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2335450   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2335451   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2335452   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2335453   +END;
MPRINT(EM_DIAGRAM):   END;
2335454   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2335455   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2335456   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2335457   +END;
MPRINT(EM_DIAGRAM):   END;
2335458   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2335459   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2335460   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2335461   +END;
MPRINT(EM_DIAGRAM):   END;
2335462   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2335463   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2335464   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2335465   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2335466   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2335467   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2335468   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2335469   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2335470   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2335471   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2335472   +END;
MPRINT(EM_DIAGRAM):   END;
2335473   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2335474   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2335475   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2335476   +drop
2335477   +H1x1_1
2335478   +H1x1_2
2335479   +H1x2_1
2335480   +H1x2_2
2335481   +H1x3_1
2335482   +H1x3_2
2335483   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x2_1 H1x2_2 H1x3_1 H1x3_2 ;
2335484   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2335485    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2335486    quit;
2335487    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2335488    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2335489    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2335490    retain ID 2 Node "AutoNeural7";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural7";
2335491    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2335492    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2931 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2931 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2335493    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2335494    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2335495    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2931 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2931 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2335496    proc sort data=EMWS8.AutoNeural7_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural7_variableset out=_temp2(keep=NAME 
CREATOR);
2335497    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2335498    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL7_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2335499    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2335500    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2335501    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2335502    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2335503    proc contents data=EMWS8.AutoNeural7_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural7_train out=_meta(keep=NAME) noprint;
2335504    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2335505    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2335506    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2335507    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2335508    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2335509    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2335510    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2335511    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2335512    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2335513    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2335513  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1623 rows and 5 columns.

2335514    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2335515    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2335516    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1623 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 1623 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2335517    filename _pref
2335517  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2335518    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2335519    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2335520   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2335521   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2335522   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2335523   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2335524   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2335525   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2335526    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2335527    quit;
2335528    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2335529    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2335530    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2335531    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2335532    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2335533    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2335534    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2335535    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2335536    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2335537    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2335538    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2335539    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2335540    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2335541    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2335542    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2335543    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2335544    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2335545    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2335546    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2335547    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2335548    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2335549    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2335550    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2335551    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2335552    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      
The SAS System


2335553    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2335554    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2335554  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2335555    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2335556    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2335557    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 1627 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2335558    filename _pref
2335558  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2335559    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2335560    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2335561   +
2335562   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2335563   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2335563  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2335564   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2335565   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2335566   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2335567   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2335568   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2335569    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2335570    quit;
2335571    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2335572    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2335573    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2335574    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2335575    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2335576    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2335577    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2335578    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2335579    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2335580    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2335581    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2335582    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2335583    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2335584    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2335585    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2335586    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2335587    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2335588    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2335589    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2335590    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2335591    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2335592    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2335593    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2335594    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2335595    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2335596    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2335597    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2335597  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2335598    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2335599    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2335600    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 1666 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2335601    filename _pref
2335601  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2335602    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2335603    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2335604   +
2335605   +
2335606   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2335607   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2335608   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2335609   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2335610   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2335611   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2335612   +
2335613   +
2335614   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2335615   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2335616   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2335617   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2335618   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2335619   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2335620   +
2335621   +
2335622   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2335623   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2335624   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2335625   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2335626   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2335627   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2335628   +
2335629   +
2335630   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2335631   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2335632   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2335633   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2335634   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2335635   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2335636   +
2335637   +
2335638   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2335639   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2335640   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2335641   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2335642   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2335643   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2335644   +
2335645   +
2335646   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2335647   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2335648   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2335649   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2335650   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2335651   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2335652   +
2335653   +
2335654   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2335655   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2335656   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2335657   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2335658   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2335659   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2335660   +
2335661   +
2335662   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2335663   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2335664   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2335665   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2335666   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2335667   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2335668   +if
2335669   +_FILTERNORM1 not in ( '.')
2335670   + and
2335671   +_FILTERNORM2 not in ( '.')
2335672   + and
2335673   +_FILTERNORM3 not in ( '.')
2335674   + and
2335675   +_FILTERNORM4 not in ( '.')
2335676   + and
2335677   +_FILTERNORM5 not in ( '.')
2335678   + and
2335679   +_FILTERNORM6 not in ( '.')
2335680   + and
2335681   +_FILTERNORM7 not in ( ' ')
2335682   + and
2335683   +_FILTERNORM8 not in ( ' ')
2335684   +and
2335685   +( Dt_Customer ne .)
2335686   +and ( Income ne . and (Income<=107000))
2335687   +and ( Kidhome ne .)
2335688   +and ( MntFishProducts ne .)
2335689   +and ( MntFruits ne .)
2335690   +and ( MntGoldProds ne .)
2335691   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2335692   +and ( MntSweetProducts ne .)
2335693   +and ( MntWines ne .)
2335694   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2335695   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2335696   +and ( NumStorePurchases ne .)
2335697   +and ( NumWebPurchases ne .)
2335698   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2335699   +and ( Recency ne .)
2335700   +and ( Teenhome ne .)
2335701   +and ( Year_Birth ne .)
2335702   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2335703   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2335704   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2335705   +end;
MPRINT(EM_DIAGRAM):   end;
2335706   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2335707   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2335708    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2335709    quit;
2335710    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2335711    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2335712    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2335713    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2335714    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2335715    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2335716    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2335717    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2335718    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2335719    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2335720    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2335721    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2335722    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2335723    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2335724    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2335725    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2335726    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2335727    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2335728    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2335729    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2335730    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2335731    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2335732    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2335733    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2335734    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2335735    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2335736    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2335736  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2335737    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2335738    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2335739    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 1732 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2335740    %macro varDept(fcmpdata=,id=);
2335741    %global nobs&id scoreFlag&id;
2335742    %let scoreFlag&id = 0;
2335743    %if &id=1 or ^&fcmpStart %then %do;
2335744    proc sort data=&fcmpdata out=_temp&id nodupkey;
2335745    by NAME;
2335746    where id=&id and LHS in( %let j=1;
2335747    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2335748    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2335749    "&var" %let j = %eval(&j+1);
2335750    %end;
2335751    );
2335752    run;
2335753    %let dsid = %sysfunc(open(_temp&id));
2335754    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2335755    %let dsid = %sysfunc(close(&dsid));
2335756    %if &&nobs&id %then %do;
2335757    %let scoreFlag&id = 1;
2335758    %let fcmpStart = 1;
2335759    %end;
2335760    %else %let fcmpStart = 0;
2335761    %end;
2335762    %else %do;
2335763    proc sort data=&fcmpdata out=_tempid;
2335764    where id=&id;
2335765    by LHS;
2335766    run;
2335767    %let dsid = %sysfunc(open(_tempid));
2335768    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2335769    %let dsid = %sysfunc(close(&dsid));
2335770    %if ^&&nobs&id %then %do;
2335771    proc datasets lib=work nolist;
2335772    delete _tempid;
2335773    run;
2335774    quit;
2335775    %end;
2335776    %else %do;
2335777    data _tempAll;
2335778    set %let j=%eval(&id-1);
2335779    %do x=1 %to &j;
2335780    %if &&nobs&x %then %do;
2335781    _temp&x %end;
2335782    %end;
2335783    ;
2335784    run;
2335785    proc sql;
2335786    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2335786  ! work._tempid p2 where p.name=p2.lhs;
2335787    quit;
2335788    data _temp&id;
2335789    set _temp&id;
2335790    where LHS ne '' and NAME ne '' and Node ne '';
2335791    run;
2335792    proc datasets lib=work nolist;
2335793    delete _tempAll;
2335794    run;
2335795    %let dsid = %sysfunc(open(_temp&id));
2335796    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2335797    %let dsid = %sysfunc(close(&dsid));
2335798    %if ^&&nobs&id %then %do;
2335799    proc datasets lib=work nolist;
2335800    delete _temp&id;
2335801    run;
2335802    quit;
2335803    %end;
2335804    %else %do;
2335805    %let scoreFlag&id = 1;
2335806    data _temp&id;
2335807    set _temp&id;
2335808    where LHS ne NAME and node ne '';
2335809    run;
2335810    %let dsid = %sysfunc(open(_temp&id));
2335811    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2335812    %let dsid = %sysfunc(close(&dsid));
2335813    %if ^&&nobs&id %then %do;
2335814    proc datasets lib=work nolist;
2335815    delete _temp&id;
2335816    run;
2335817    quit;
2335818    %end;
2335819    %else %do;
2335820    proc sort data=_temp&id nodupkey;
2335821    by LHS NAME;
2335822    run;
2335823    %end;
2335824    %end;
2335825    %end;
2335826    %end;
2335827    %mend varDept;
2335828    %macro optCode(outdata=fcmpdata);
2335829    %global fcmpStart;
2335830    %let fcmpStart = 0;
2335831    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2335832    %let NumNodes=9;
2335833    %do k=1 %to &NumNodes;
2335834    %vardept(fcmpdata=&outdata, id=&k);
2335835    %end;
2335836    %mend optCode;
2335837    %optcode(outData=EMWS8.Ensmbl38_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2335838    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2335839    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2335840    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2335841    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2335842    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2335843    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2335844    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2335845    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2335846    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2335847    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2335847  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

2335848    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2335849    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2335850    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2335851    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2335852    filename _pref
2335852  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural8\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural8\EMPUBLISHSCORE.sas";
2335853    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2335854    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural8\EMPUBLISHSCORE.sas.
2335855   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2335856   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2335857   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2335858   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2335859   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2335860   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2335861   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2335862   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2335863   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2335864   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2335865   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2335866   +LENGTH _WARN_ $4
2335867   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2335868   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2335869   +
2335870   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2335871   +
2335872   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2335873   +
2335874   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2335875   +
2335876   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2335877   +
2335878   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2335879   +
2335880   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2335881   +
2335882   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2335883   +
2335884   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2335885   +
2335886   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2335887   +
2335888   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2335889   +
2335890   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2335891   +
2335892   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2335893   +
2335894   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2335895   +
2335896   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2335897   +
2335898   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2335899   +
2335900   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2335901   +
2335902   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2335903   +
2335904   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2335905   +
2335906   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2335907   +
2335908   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2335909   +
2335910   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2335911   +
2335912   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2335913   +
2335914   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2335915   +
2335916   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2335917   +
2335918   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2335919   +
2335920   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2335921   +
2335922   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2335923   +
2335924   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2335925   +
2335926   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2335927   +
2335928   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2335929   +
2335930   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2335931   +
2335932   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2335933   +
2335934   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2335935   +
2335936   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2335937   +
2335938   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2335939   +
2335940   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2335941   +
2335942   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2335943   +
2335944   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2335945   +
2335946   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2335947   +
2335948   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2335949   +
2335950   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2335951   +
2335952   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2335953   +
2335954   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2335955   +
2335956   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2335957   +
2335958   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2335959   +
2335960   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2335961   +
2335962   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2335963   +
2335964   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2335965   +
2335966   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2335967   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2335968   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2335969   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2335970   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2335971   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2335972   +end;
MPRINT(EM_DIAGRAM):   end;
2335973   +else do;
MPRINT(EM_DIAGRAM):   else do;
2335974   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2335975   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2335976   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2335977   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2335978   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2335979   +   end;
MPRINT(EM_DIAGRAM):   end;
2335980   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2335981   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2335982   +   end;
MPRINT(EM_DIAGRAM):   end;
2335983   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2335984   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2335985   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2335986   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2335987   +   end;
MPRINT(EM_DIAGRAM):   end;
2335988   +end;
MPRINT(EM_DIAGRAM):   end;
2335989   +
2335990   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2335991   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2335992   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2335993   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2335994   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2335995   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2335996   +end;
MPRINT(EM_DIAGRAM):   end;
2335997   +else do;
MPRINT(EM_DIAGRAM):   else do;
2335998   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2335999   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2336000   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2336001   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2336002   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2336003   +   end;
MPRINT(EM_DIAGRAM):   end;
2336004   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2336005   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2336006   +   end;
MPRINT(EM_DIAGRAM):   end;
2336007   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2336008   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2336009   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2336010   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2336011   +   end;
MPRINT(EM_DIAGRAM):   end;
2336012   +end;
MPRINT(EM_DIAGRAM):   end;
2336013   +
2336014   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2336015   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2336016   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2336017   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2336018   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2336019   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2336020   +end;
MPRINT(EM_DIAGRAM):   end;
2336021   +else do;
MPRINT(EM_DIAGRAM):   else do;
2336022   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2336023   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2336024   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2336025   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2336026   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2336027   +   end;
MPRINT(EM_DIAGRAM):   end;
2336028   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2336029   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2336030   +   end;
MPRINT(EM_DIAGRAM):   end;
2336031   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2336032   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2336033   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2336034   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2336035   +   end;
MPRINT(EM_DIAGRAM):   end;
2336036   +end;
MPRINT(EM_DIAGRAM):   end;
2336037   +
2336038   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2336039   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2336040   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2336041   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2336042   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2336043   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2336044   +end;
MPRINT(EM_DIAGRAM):   end;
2336045   +else do;
MPRINT(EM_DIAGRAM):   else do;
2336046   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2336047   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2336048   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2336049   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2336050   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2336051   +   end;
MPRINT(EM_DIAGRAM):   end;
2336052   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2336053   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2336054   +   end;
MPRINT(EM_DIAGRAM):   end;
2336055   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2336056   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2336057   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2336058   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2336059   +   end;
MPRINT(EM_DIAGRAM):   end;
2336060   +end;
MPRINT(EM_DIAGRAM):   end;
2336061   +
2336062   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2336063   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2336064   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2336065   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2336066   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2336067   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2336068   +end;
MPRINT(EM_DIAGRAM):   end;
2336069   +else do;
MPRINT(EM_DIAGRAM):   else do;
2336070   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2336071   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2336072   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2336073   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2336074   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2336075   +   end;
MPRINT(EM_DIAGRAM):   end;
2336076   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2336077   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2336078   +   end;
MPRINT(EM_DIAGRAM):   end;
2336079   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2336080   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2336081   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2336082   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2336083   +   end;
MPRINT(EM_DIAGRAM):   end;
2336084   +end;
MPRINT(EM_DIAGRAM):   end;
2336085   +
2336086   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2336087   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2336088   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2336089   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2336090   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2336091   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2336092   +end;
MPRINT(EM_DIAGRAM):   end;
2336093   +else do;
MPRINT(EM_DIAGRAM):   else do;
2336094   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2336095   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2336096   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2336097   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2336098   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2336099   +   end;
MPRINT(EM_DIAGRAM):   end;
2336100   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2336101   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2336102   +   end;
MPRINT(EM_DIAGRAM):   end;
2336103   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2336104   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2336105   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2336106   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2336107   +   end;
MPRINT(EM_DIAGRAM):   end;
2336108   +end;
MPRINT(EM_DIAGRAM):   end;
2336109   +
2336110   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2336111   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2336112   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2336113   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2336114   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2336115   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2336116   +end;
MPRINT(EM_DIAGRAM):   end;
2336117   +else do;
MPRINT(EM_DIAGRAM):   else do;
2336118   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2336119   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2336120   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2336121   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2336122   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2336123   +   end;
MPRINT(EM_DIAGRAM):   end;
2336124   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2336125   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2336126   +   end;
MPRINT(EM_DIAGRAM):   end;
2336127   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2336128   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2336129   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2336130   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2336131   +   end;
MPRINT(EM_DIAGRAM):   end;
2336132   +end;
MPRINT(EM_DIAGRAM):   end;
2336133   +
2336134   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2336135   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2336136   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2336137   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2336138   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2336139   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2336140   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2336141   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2336142   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2336143   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2336144   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2336145   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2336146   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2336147   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2336148   +end;
MPRINT(EM_DIAGRAM):   end;
2336149   +else do;
MPRINT(EM_DIAGRAM):   else do;
2336150   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2336151   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2336152   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2336153   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2336154   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2336155   +   end;
MPRINT(EM_DIAGRAM):   end;
2336156   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2336157   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2336158   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2336159   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2336160   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2336161   +   end;
MPRINT(EM_DIAGRAM):   end;
2336162   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2336163   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2336164   +   end;
MPRINT(EM_DIAGRAM):   end;
2336165   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2336166   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2336167   +   end;
MPRINT(EM_DIAGRAM):   end;
2336168   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2336169   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2336170   +   end;
MPRINT(EM_DIAGRAM):   end;
2336171   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2336172   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2336173   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2336174   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2336175   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2336176   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2336177   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2336178   +   end;
MPRINT(EM_DIAGRAM):   end;
2336179   +end;
MPRINT(EM_DIAGRAM):   end;
2336180   +
2336181   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2336182   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2336183   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2336184   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2336185   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2336186   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2336187   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2336188   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2336189   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2336190   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2336191   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2336192   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2336193   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2336194   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2336195   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2336196   +end;
MPRINT(EM_DIAGRAM):   end;
2336197   +else do;
MPRINT(EM_DIAGRAM):   else do;
2336198   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2336199   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2336200   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2336201   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2336202   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2336203   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2336204   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2336205   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2336206   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2336207   +         end;
MPRINT(EM_DIAGRAM):   end;
2336208   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2336209   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2336210   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2336211   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2336212   +            end;
MPRINT(EM_DIAGRAM):   end;
2336213   +         end;
MPRINT(EM_DIAGRAM):   end;
2336214   +      end;
MPRINT(EM_DIAGRAM):   end;
2336215   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2336216   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2336217   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2336218   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2336219   +         end;
MPRINT(EM_DIAGRAM):   end;
2336220   +      end;
MPRINT(EM_DIAGRAM):   end;
2336221   +   end;
MPRINT(EM_DIAGRAM):   end;
2336222   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2336223   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2336224   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2336225   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2336226   +      end;
MPRINT(EM_DIAGRAM):   end;
2336227   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2336228   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2336229   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2336230   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2336231   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2336232   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2336233   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2336234   +         end;
MPRINT(EM_DIAGRAM):   end;
2336235   +      end;
MPRINT(EM_DIAGRAM):   end;
2336236   +   end;
MPRINT(EM_DIAGRAM):   end;
2336237   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2336238   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2336239   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2336240   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2336241   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2336242   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2336243   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2336244   +   end;
MPRINT(EM_DIAGRAM):   end;
2336245   +end;
MPRINT(EM_DIAGRAM):   end;
2336246   +
2336247   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2336248   +*** Checking missing input Interval
2336249   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2336250   +
2336251   +IF NMISS(
2336252   +   AcceptedCmpTotal ,
2336253   +   Age ,
2336254   +   Frq ,
2336255   +   Income ,
2336256   +   Kidhome ,
2336257   +   Mnt ,
2336258   +   MntFishProducts ,
2336259   +   MntFruits ,
2336260   +   MntGoldProds ,
2336261   +   MntMeatProducts ,
2336262   +   MntSweetProducts ,
2336263   +   MntWines ,
2336264   +   MonthsAsCustomer ,
2336265   +   NumCatalogPurchases ,
2336266   +   NumDealsPurchases ,
2336267   +   NumDistPurchases ,
2336268   +   NumStorePurchases ,
2336269   +   NumWebPurchases ,
2336270   +   NumWebVisitsMonth ,
2336271   +   RFMstat ,
2336272   +   RMntFrq ,
2336273   +   Recency ,
2336274   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2336275   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2336276   +
2336277   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2336278   +END;
MPRINT(EM_DIAGRAM):   END;
2336279   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2336280   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2336281   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2336282   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2336283   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2336284   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2336285   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2336286   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2336287   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2336288   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2336289   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2336290   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2336291   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2336292   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2336293   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2336294   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2336295   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2336296   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2336297   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2336298   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2336299   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2336300   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2336301   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2336302   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2336303   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2336304   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2336305   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2336306   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2336307   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2336308   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2336309   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2336310   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2336311   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2336312   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2336313   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2336314   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2336315   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2336316   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2336317   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2336318   +END;
MPRINT(EM_DIAGRAM):   END;
2336319   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2336320   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2336321   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2336322   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2336323   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2336324   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2336325   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2336326   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2336327   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2336328   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2336329   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2336330   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2336331   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2336332   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2336333   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2336334   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2336335   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2336336   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2336337   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2336338   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2336339   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2336340   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2336341   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2336342   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2336343   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2336344   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2336345   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2336346   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2336347   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2336348   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2336349   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2336350   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2336351   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2336352   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2336353   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2336354   +   ELSE S_NumCatalogPurchases
2336355   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2336356   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2336357   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2336358   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2336359   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2336360   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2336361   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2336362   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2336363   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2336364   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2336365   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2336366   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2336367   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2336368   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2336369   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2336370   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2336371   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2336372   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2336373   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2336374   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2336375   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2336376   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2336377   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2336378   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2336379   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2336380   +END;
MPRINT(EM_DIAGRAM):   END;
2336381   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2336382   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2336383   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2336384   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2336385   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2336386   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2336387   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2336388   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2336389   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2336390   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2336391   +   H1x1_1  =      1.2726802048269 * S_AcceptedCmpTotal
2336392   +          +    -0.02889982967357 * S_Age  +    -0.26165770909003 * S_Frq
2336393   +          +     0.19140564299867 * S_Income  +     0.30244335152969 *
2336394   +        S_Kidhome  +    -0.03391217967468 * S_Mnt  +    -0.99943007809307 *
2336395   +        S_MntFishProducts  +    -0.04374917285968 * S_MntFruits
2336396   +          +    -0.13546758294455 * S_MntGoldProds  +     3.59922243619013 *
2336397   +        S_MntMeatProducts  +    -0.10424531322566 * S_MntSweetProducts
2336398   +          +    -1.98884071414703 * S_MntWines  +     0.05310540691138 *
2336399   +        S_MonthsAsCustomer  +     0.58072892654416 * S_NumCatalogPurchases
2336400   +          +     0.30381426454211 * S_NumDealsPurchases
2336401   +          +     0.39966076372974 * S_NumDistPurchases
2336402   +          +    -0.58875986801139 * S_NumStorePurchases
2336403   +          +    -0.78850031558536 * S_NumWebPurchases
2336404   +          +     0.35182997415921 * S_NumWebVisitsMonth
2336405   +          +     1.51048129701176 * S_RFMstat  +     1.13354085492775 *
2336406   +        S_RMntFrq  +     -0.2185811652116 * S_Recency
2336407   +          +     0.01153374704027 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.2726802048269 * S_AcceptedCmpTotal + -0.02889982967357 * 
S_Age + -0.26165770909003 * S_Frq + 0.19140564299867 * S_Income + 0.30244335152969 * S_Kidhome 
+ -0.03391217967468 * S_Mnt + -0.99943007809307 * S_MntFishProducts + -0.04374917285968 * 
S_MntFruits + -0.13546758294455 * S_MntGoldProds + 3.59922243619013 * S_MntMeatProducts + 
-0.10424531322566 * S_MntSweetProducts + -1.98884071414703 * S_MntWines + 0.05310540691138 * 
S_MonthsAsCustomer + 0.58072892654416 * S_NumCatalogPurchases + 0.30381426454211 * 
S_NumDealsPurchases + 0.39966076372974 * S_NumDistPurchases + -0.58875986801139 * 
S_NumStorePurchases + -0.78850031558536 * S_NumWebPurchases + 0.35182997415921 * 
S_NumWebVisitsMonth + 1.51048129701176 * S_RFMstat + 1.13354085492775 * S_RMntFrq + 
-0.2185811652116 * S_Recency + 0.01153374704027 * S_Teenhome ;
2336408   +   H1x1_2  =     0.18093166280015 * S_AcceptedCmpTotal
2336409   +          +    -0.00677564787839 * S_Age  +    -0.21510325598577 * S_Frq
2336410   +          +     0.26314356814214 * S_Income  +    -0.30016454601651 *
2336411   +        S_Kidhome  +     -0.1410547608427 * S_Mnt  +    -0.04272369939478 *
2336412   +        S_MntFishProducts  +    -0.05622578678457 * S_MntFruits
2336413   +          +     0.04457230545618 * S_MntGoldProds  +     0.40709024692944 *
2336414   +        S_MntMeatProducts  +    -0.02989090770621 * S_MntSweetProducts
2336415   +          +    -0.18818656503765 * S_MntWines  +    -0.06237311646922 *
2336416   +        S_MonthsAsCustomer  +     0.39737856936198 * S_NumCatalogPurchases
2336417   +          +     0.33734772994048 * S_NumDealsPurchases
2336418   +          +     0.06152222921422 * S_NumDistPurchases
2336419   +          +    -0.32068333792942 * S_NumStorePurchases
2336420   +          +    -0.26971366415104 * S_NumWebPurchases
2336421   +          +     0.57693239481071 * S_NumWebVisitsMonth
2336422   +          +     0.01161324864777 * S_RFMstat  +     0.00311083015445 *
2336423   +        S_RMntFrq  +    -0.67669007299893 * S_Recency
2336424   +          +     -0.2298426154616 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.18093166280015 * S_AcceptedCmpTotal + -0.00677564787839 * 
S_Age + -0.21510325598577 * S_Frq + 0.26314356814214 * S_Income + -0.30016454601651 * 
S_Kidhome + -0.1410547608427 * S_Mnt + -0.04272369939478 * S_MntFishProducts + 
-0.05622578678457 * S_MntFruits + 0.04457230545618 * S_MntGoldProds + 0.40709024692944 * 
S_MntMeatProducts + -0.02989090770621 * S_MntSweetProducts + -0.18818656503765 * S_MntWines + 
-0.06237311646922 * S_MonthsAsCustomer + 0.39737856936198 * S_NumCatalogPurchases + 
0.33734772994048 * S_NumDealsPurchases + 0.06152222921422 * S_NumDistPurchases + 
-0.32068333792942 * S_NumStorePurchases + -0.26971366415104 * S_NumWebPurchases + 
0.57693239481071 * S_NumWebVisitsMonth + 0.01161324864777 * S_RFMstat + 0.00311083015445 * 
S_RMntFrq + -0.67669007299893 * S_Recency + -0.2298426154616 * S_Teenhome ;
2336425   +   H1x1_3  =    -0.09356212420726 * S_AcceptedCmpTotal
2336426   +          +    -0.01904617704654 * S_Age  +    -0.15700206132472 * S_Frq
2336427   +          +    -0.58483226627076 * S_Income  +     0.30001673574917 *
2336428   +        S_Kidhome  +    -0.19921492301896 * S_Mnt  +    -0.00125986769238 *
2336429   +        S_MntFishProducts  +     0.10195959942937 * S_MntFruits
2336430   +          +      0.0069592628978 * S_MntGoldProds  +     0.03606436199308 *
2336431   +        S_MntMeatProducts  +     0.11259135359155 * S_MntSweetProducts
2336432   +          +     0.05408818612126 * S_MntWines  +    -0.14024859528104 *
2336433   +        S_MonthsAsCustomer  +    -0.14071929240584 * S_NumCatalogPurchases
2336434   +          +     0.22142792900578 * S_NumDealsPurchases
2336435   +          +     -0.0291983445755 * S_NumDistPurchases
2336436   +          +     -0.1997372957954 * S_NumStorePurchases
2336437   +          +    -0.01286201468794 * S_NumWebPurchases
2336438   +          +    -0.35208468552742 * S_NumWebVisitsMonth
2336439   +          +     0.02982651364231 * S_RFMstat  +      0.0228316921695 *
2336440   +        S_RMntFrq  +      0.3930877517629 * S_Recency
2336441   +          +     0.28989829670594 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.09356212420726 * S_AcceptedCmpTotal + -0.01904617704654 * 
S_Age + -0.15700206132472 * S_Frq + -0.58483226627076 * S_Income + 0.30001673574917 * 
S_Kidhome + -0.19921492301896 * S_Mnt + -0.00125986769238 * S_MntFishProducts + 
0.10195959942937 * S_MntFruits + 0.0069592628978 * S_MntGoldProds + 0.03606436199308 * 
S_MntMeatProducts + 0.11259135359155 * S_MntSweetProducts + 0.05408818612126 * S_MntWines + 
-0.14024859528104 * S_MonthsAsCustomer + -0.14071929240584 * S_NumCatalogPurchases + 
0.22142792900578 * S_NumDealsPurchases + -0.0291983445755 * S_NumDistPurchases + 
-0.1997372957954 * S_NumStorePurchases + -0.01286201468794 * S_NumWebPurchases + 
-0.35208468552742 * S_NumWebVisitsMonth + 0.02982651364231 * S_RFMstat + 0.0228316921695 * 
S_RMntFrq + 0.3930877517629 * S_Recency + 0.28989829670594 * S_Teenhome ;
2336442   +   H1x1_1  = H1x1_1  +     0.03659432989123 * AcceptedCmp10
2336443   +          +    -0.12552546530316 * AcceptedCmp20  +     0.57200428680255 *
2336444   +        AcceptedCmp30  +      0.4327465126256 * AcceptedCmp40
2336445   +          +    -1.24484170256212 * AcceptedCmp50  +     0.21604379838869 *
2336446   +        Complain0  +    -0.14986629245585 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.03659432989123 * AcceptedCmp10 + -0.12552546530316 * 
AcceptedCmp20 + 0.57200428680255 * AcceptedCmp30 + 0.4327465126256 * AcceptedCmp40 + 
-1.24484170256212 * AcceptedCmp50 + 0.21604379838869 * Complain0 + -0.14986629245585 * 
HigherEducationBinary0 ;
2336447   +   H1x1_2  = H1x1_2  +    -0.13542589174402 * AcceptedCmp10
2336448   +          +    -0.19116289400292 * AcceptedCmp20  +    -0.10302282473135 *
2336449   +        AcceptedCmp30  +    -0.08705955845916 * AcceptedCmp40
2336450   +          +    -0.17435407626698 * AcceptedCmp50  +    -0.09781790399225 *
2336451   +        Complain0  +     0.02006296587353 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.13542589174402 * AcceptedCmp10 + -0.19116289400292 
* AcceptedCmp20 + -0.10302282473135 * AcceptedCmp30 + -0.08705955845916 * AcceptedCmp40 + 
-0.17435407626698 * AcceptedCmp50 + -0.09781790399225 * Complain0 + 0.02006296587353 * 
HigherEducationBinary0 ;
2336452   +   H1x1_3  = H1x1_3  +     0.08917557424765 * AcceptedCmp10
2336453   +          +    -0.00944366858806 * AcceptedCmp20  +     0.30527409248576 *
2336454   +        AcceptedCmp30  +     0.26823019920335 * AcceptedCmp40
2336455   +          +    -0.02131660897576 * AcceptedCmp50  +    -0.16243659451446 *
2336456   +        Complain0  +    -0.28227689084686 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.08917557424765 * AcceptedCmp10 + -0.00944366858806 * 
AcceptedCmp20 + 0.30527409248576 * AcceptedCmp30 + 0.26823019920335 * AcceptedCmp40 + 
-0.02131660897576 * AcceptedCmp50 + -0.16243659451446 * Complain0 + -0.28227689084686 * 
HigherEducationBinary0 ;
2336457   +   H1x1_1  = H1x1_1  +     0.12998959528304 * Education2n_Cycle
2336458   +          +     0.48334684246109 * EducationBasic  +    -0.07156918649895 *
2336459   +        EducationGraduation  +    -0.21017720550072 * EducationMaster
2336460   +          +    -0.22358326722482 * Marital_StatusDivorced
2336461   +          +     0.09394210085787 * Marital_StatusMarried
2336462   +          +    -0.10381546554982 * Marital_StatusSingle
2336463   +          +     0.05935260608375 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.12998959528304 * Education2n_Cycle + 
0.48334684246109 * EducationBasic + -0.07156918649895 * EducationGraduation + 
-0.21017720550072 * EducationMaster + -0.22358326722482 * Marital_StatusDivorced + 
0.09394210085787 * Marital_StatusMarried + -0.10381546554982 * Marital_StatusSingle + 
0.05935260608375 * Marital_StatusTogether ;
2336464   +   H1x1_2  = H1x1_2  +     0.02955854298839 * Education2n_Cycle
2336465   +          +    -0.13472200519398 * EducationBasic  +     0.01930622297518 *
2336466   +        EducationGraduation  +    -0.00188262361226 * EducationMaster
2336467   +          +     0.16606212232833 * Marital_StatusDivorced
2336468   +          +    -0.33252488631677 * Marital_StatusMarried
2336469   +          +     0.26735237322144 * Marital_StatusSingle
2336470   +          +    -0.37056611493683 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.02955854298839 * Education2n_Cycle + 
-0.13472200519398 * EducationBasic + 0.01930622297518 * EducationGraduation + 
-0.00188262361226 * EducationMaster + 0.16606212232833 * Marital_StatusDivorced + 
-0.33252488631677 * Marital_StatusMarried + 0.26735237322144 * Marital_StatusSingle + 
-0.37056611493683 * Marital_StatusTogether ;
2336471   +   H1x1_3  = H1x1_3  +     0.29085314695378 * Education2n_Cycle
2336472   +          +     -0.2177077392676 * EducationBasic  +    -0.12975750226767 *
2336473   +        EducationGraduation  +     0.12920694427876 * EducationMaster
2336474   +          +    -0.30275479651076 * Marital_StatusDivorced
2336475   +          +     0.50273719874035 * Marital_StatusMarried
2336476   +          +    -0.39588303956293 * Marital_StatusSingle
2336477   +          +     0.42028863850572 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.29085314695378 * Education2n_Cycle + 
-0.2177077392676 * EducationBasic + -0.12975750226767 * EducationGraduation + 0.12920694427876 
* EducationMaster + -0.30275479651076 * Marital_StatusDivorced + 0.50273719874035 * 
Marital_StatusMarried + -0.39588303956293 * Marital_StatusSingle + 0.42028863850572 * 
Marital_StatusTogether ;
2336478   +   H1x1_1  =     1.91295924572895 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.91295924572895 + H1x1_1 ;
2336479   +   H1x1_2  =    -1.21245226681055 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.21245226681055 + H1x1_2 ;
2336480   +   H1x1_3  =    -0.01609140135594 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.01609140135594 + H1x1_3 ;
2336481   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2336482   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2336483   +   H1x1_1  = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
2336484   +   H1x1_2  = EXP(MIN(-0.5 * H1x1_2 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(MIN(-0.5 * H1x1_2 **2, _EXP_BAR));
2336485   +   H1x1_3  = EXP(MIN(-0.5 * H1x1_3 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(MIN(-0.5 * H1x1_3 **2, _EXP_BAR));
2336486   +END;
MPRINT(EM_DIAGRAM):   END;
2336487   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2336488   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2336489   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2336490   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2336491   +END;
MPRINT(EM_DIAGRAM):   END;
2336492   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2336493   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2336494   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2336495   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2336496   +   H1x2_1  =     0.73632716677259 * S_AcceptedCmpTotal
2336497   +          +     -1.3452480925823 * S_Age  +    -0.77564767519981 * S_Frq
2336498   +          +    -0.06163854052357 * S_Income  +     1.82428003860444 *
2336499   +        S_Kidhome  +       0.661412748756 * S_Mnt  +      1.8826488743919 *
2336500   +        S_MntFishProducts  +    -0.21815276926728 * S_MntFruits
2336501   +          +     1.06597641654862 * S_MntGoldProds  +     0.13887400045643 *
2336502   +        S_MntMeatProducts  +    -0.62827157985225 * S_MntSweetProducts
2336503   +          +     1.70742231056065 * S_MntWines  +     0.52403167020638 *
2336504   +        S_MonthsAsCustomer  +    -2.99889150929209 * S_NumCatalogPurchases
2336505   +          +    -2.59470529821377 * S_NumDealsPurchases
2336506   +          +      0.7668756449818 * S_NumDistPurchases
2336507   +          +     0.61064641547208 * S_NumStorePurchases
2336508   +          +    -0.87106335660846 * S_NumWebPurchases
2336509   +          +      0.1188879348197 * S_NumWebVisitsMonth
2336510   +          +     0.89319669432194 * S_RFMstat  +       -0.45272285967 *
2336511   +        S_RMntFrq  +     -0.7210740986075 * S_Recency
2336512   +          +      0.7032117485114 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.73632716677259 * S_AcceptedCmpTotal + -1.3452480925823 * 
S_Age + -0.77564767519981 * S_Frq + -0.06163854052357 * S_Income + 1.82428003860444 * 
S_Kidhome + 0.661412748756 * S_Mnt + 1.8826488743919 * S_MntFishProducts + -0.21815276926728 * 
S_MntFruits + 1.06597641654862 * S_MntGoldProds + 0.13887400045643 * S_MntMeatProducts + 
-0.62827157985225 * S_MntSweetProducts + 1.70742231056065 * S_MntWines + 0.52403167020638 * 
S_MonthsAsCustomer + -2.99889150929209 * S_NumCatalogPurchases + -2.59470529821377 * 
S_NumDealsPurchases + 0.7668756449818 * S_NumDistPurchases + 0.61064641547208 * 
S_NumStorePurchases + -0.87106335660846 * S_NumWebPurchases + 0.1188879348197 * 
S_NumWebVisitsMonth + 0.89319669432194 * S_RFMstat + -0.45272285967 * S_RMntFrq + 
-0.7210740986075 * S_Recency + 0.7032117485114 * S_Teenhome ;
2336513   +   H1x2_2  =      0.5405970783297 * S_AcceptedCmpTotal
2336514   +          +     0.34103648596436 * S_Age  +    -1.00413619660059 * S_Frq
2336515   +          +     0.40958797602392 * S_Income  +    -0.94731216445533 *
2336516   +        S_Kidhome  +    -0.17755265939769 * S_Mnt  +    -0.88926202859892 *
2336517   +        S_MntFishProducts  +      0.6791087530674 * S_MntFruits
2336518   +          +     1.10836805118307 * S_MntGoldProds  +    -0.29462180872033 *
2336519   +        S_MntMeatProducts  +     2.21935054370304 * S_MntSweetProducts
2336520   +          +     1.41379847080743 * S_MntWines  +    -0.66077297246309 *
2336521   +        S_MonthsAsCustomer  +     0.91491641336561 * S_NumCatalogPurchases
2336522   +          +    -0.41834528691349 * S_NumDealsPurchases
2336523   +          +    -0.07802605490227 * S_NumDistPurchases
2336524   +          +    -0.62261476153139 * S_NumStorePurchases
2336525   +          +    -0.84011953180231 * S_NumWebPurchases
2336526   +          +     0.95169092183885 * S_NumWebVisitsMonth
2336527   +          +      0.4036735448902 * S_RFMstat  +     0.44620057959954 *
2336528   +        S_RMntFrq  +    -0.54980566705324 * S_Recency
2336529   +          +    -0.48914926560129 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.5405970783297 * S_AcceptedCmpTotal + 0.34103648596436 * S_Age 
+ -1.00413619660059 * S_Frq + 0.40958797602392 * S_Income + -0.94731216445533 * S_Kidhome + 
-0.17755265939769 * S_Mnt + -0.88926202859892 * S_MntFishProducts + 0.6791087530674 * 
S_MntFruits + 1.10836805118307 * S_MntGoldProds + -0.29462180872033 * S_MntMeatProducts + 
2.21935054370304 * S_MntSweetProducts + 1.41379847080743 * S_MntWines + -0.66077297246309 * 
S_MonthsAsCustomer + 0.91491641336561 * S_NumCatalogPurchases + -0.41834528691349 * 
S_NumDealsPurchases + -0.07802605490227 * S_NumDistPurchases + -0.62261476153139 * 
S_NumStorePurchases + -0.84011953180231 * S_NumWebPurchases + 0.95169092183885 * 
S_NumWebVisitsMonth + 0.4036735448902 * S_RFMstat + 0.44620057959954 * S_RMntFrq + 
-0.54980566705324 * S_Recency + -0.48914926560129 * S_Teenhome ;
2336530   +   H1x2_3  =    -0.10056833202616 * S_AcceptedCmpTotal
2336531   +          +    -3.35021911955911 * S_Age  +    -0.47433508394475 * S_Frq
2336532   +          +      0.2642483252057 * S_Income  +     0.20666167536737 *
2336533   +        S_Kidhome  +    -1.63711887449192 * S_Mnt  +    -0.02078521278323 *
2336534   +        S_MntFishProducts  +    -0.13356020799092 * S_MntFruits
2336535   +          +     0.03199170913357 * S_MntGoldProds  +     0.35859745927921 *
2336536   +        S_MntMeatProducts  +     1.28933517907056 * S_MntSweetProducts
2336537   +          +    -0.45266889039243 * S_MntWines  +    -0.03980312418999 *
2336538   +        S_MonthsAsCustomer  +     0.11407065408619 * S_NumCatalogPurchases
2336539   +          +     1.50811278700924 * S_NumDealsPurchases
2336540   +          +    -0.40025710583484 * S_NumDistPurchases
2336541   +          +     0.16539197954198 * S_NumStorePurchases
2336542   +          +    -1.50803186935431 * S_NumWebPurchases
2336543   +          +    -0.35788712697704 * S_NumWebVisitsMonth
2336544   +          +    -2.06761773527847 * S_RFMstat  +    -0.00353259675109 *
2336545   +        S_RMntFrq  +      0.4364156603095 * S_Recency
2336546   +          +    -0.44689366494665 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.10056833202616 * S_AcceptedCmpTotal + -3.35021911955911 * 
S_Age + -0.47433508394475 * S_Frq + 0.2642483252057 * S_Income + 0.20666167536737 * S_Kidhome 
+ -1.63711887449192 * S_Mnt + -0.02078521278323 * S_MntFishProducts + -0.13356020799092 * 
S_MntFruits + 0.03199170913357 * S_MntGoldProds + 0.35859745927921 * S_MntMeatProducts + 
1.28933517907056 * S_MntSweetProducts + -0.45266889039243 * S_MntWines + -0.03980312418999 * 
S_MonthsAsCustomer + 0.11407065408619 * S_NumCatalogPurchases + 1.50811278700924 * 
S_NumDealsPurchases + -0.40025710583484 * S_NumDistPurchases + 0.16539197954198 * 
S_NumStorePurchases + -1.50803186935431 * S_NumWebPurchases + -0.35788712697704 * 
S_NumWebVisitsMonth + -2.06761773527847 * S_RFMstat + -0.00353259675109 * S_RMntFrq + 
0.4364156603095 * S_Recency + -0.44689366494665 * S_Teenhome ;
2336547   +   H1x2_1  = H1x2_1  +     1.19862785990255 * AcceptedCmp10
2336548   +          +    -0.56777088839338 * AcceptedCmp20  +    -0.20982687937883 *
2336549   +        AcceptedCmp30  +     0.23051157512105 * AcceptedCmp40
2336550   +          +    -1.16625535461103 * AcceptedCmp50  +    -0.03987377830172 *
2336551   +        Complain0  +    -1.17553145310278 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.19862785990255 * AcceptedCmp10 + -0.56777088839338 * 
AcceptedCmp20 + -0.20982687937883 * AcceptedCmp30 + 0.23051157512105 * AcceptedCmp40 + 
-1.16625535461103 * AcceptedCmp50 + -0.03987377830172 * Complain0 + -1.17553145310278 * 
HigherEducationBinary0 ;
2336552   +   H1x2_2  = H1x2_2  +    -1.37553391657098 * AcceptedCmp10
2336553   +          +    -0.49489986415129 * AcceptedCmp20  +     0.84075258232812 *
2336554   +        AcceptedCmp30  +     0.31883526052436 * AcceptedCmp40
2336555   +          +    -0.41245383847025 * AcceptedCmp50  +     0.75603245683628 *
2336556   +        Complain0  +    -2.07732119239317 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.37553391657098 * AcceptedCmp10 + -0.49489986415129 
* AcceptedCmp20 + 0.84075258232812 * AcceptedCmp30 + 0.31883526052436 * AcceptedCmp40 + 
-0.41245383847025 * AcceptedCmp50 + 0.75603245683628 * Complain0 + -2.07732119239317 * 
HigherEducationBinary0 ;
2336557   +   H1x2_3  = H1x2_3  +     0.94876862525586 * AcceptedCmp10
2336558   +          +     0.79245605062261 * AcceptedCmp20  +     1.18614024465163 *
2336559   +        AcceptedCmp30  +    -0.24348380736895 * AcceptedCmp40
2336560   +          +     0.63374252730038 * AcceptedCmp50  +     0.36777527794452 *
2336561   +        Complain0  +    -0.07746344015306 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.94876862525586 * AcceptedCmp10 + 0.79245605062261 * 
AcceptedCmp20 + 1.18614024465163 * AcceptedCmp30 + -0.24348380736895 * AcceptedCmp40 + 
0.63374252730038 * AcceptedCmp50 + 0.36777527794452 * Complain0 + -0.07746344015306 * 
HigherEducationBinary0 ;
2336562   +   H1x2_1  = H1x2_1  +     1.73012058377195 * Education2n_Cycle
2336563   +          +     2.12295803973544 * EducationBasic  +     0.36945596974292 *
2336564   +        EducationGraduation  +    -1.22675967760612 * EducationMaster
2336565   +          +    -0.48199299977856 * Marital_StatusDivorced
2336566   +          +    -1.61546983135535 * Marital_StatusMarried
2336567   +          +     1.25890289649165 * Marital_StatusSingle
2336568   +          +    -0.35805098686637 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.73012058377195 * Education2n_Cycle + 
2.12295803973544 * EducationBasic + 0.36945596974292 * EducationGraduation + -1.22675967760612 
* EducationMaster + -0.48199299977856 * Marital_StatusDivorced + -1.61546983135535 * 
Marital_StatusMarried + 1.25890289649165 * Marital_StatusSingle + -0.35805098686637 * 
Marital_StatusTogether ;
2336569   +   H1x2_2  = H1x2_2  +    -1.04319773106255 * Education2n_Cycle
2336570   +          +    -1.20017517243416 * EducationBasic  +    -0.21851017334559 *
2336571   +        EducationGraduation  +     0.54918303984069 * EducationMaster
2336572   +          +    -0.69719138781358 * Marital_StatusDivorced
2336573   +          +     0.26964883367384 * Marital_StatusMarried
2336574   +          +      0.4656663467381 * Marital_StatusSingle
2336575   +          +    -0.38324848670979 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.04319773106255 * Education2n_Cycle + 
-1.20017517243416 * EducationBasic + -0.21851017334559 * EducationGraduation + 
0.54918303984069 * EducationMaster + -0.69719138781358 * Marital_StatusDivorced + 
0.26964883367384 * Marital_StatusMarried + 0.4656663467381 * Marital_StatusSingle + 
-0.38324848670979 * Marital_StatusTogether ;
2336576   +   H1x2_3  = H1x2_3  +     0.26572249637491 * Education2n_Cycle
2336577   +          +     1.36865822272368 * EducationBasic  +     0.26769702437041 *
2336578   +        EducationGraduation  +    -0.57748542336591 * EducationMaster
2336579   +          +     1.40407968804704 * Marital_StatusDivorced
2336580   +          +    -1.35468203106214 * Marital_StatusMarried
2336581   +          +      1.0644996414042 * Marital_StatusSingle
2336582   +          +    -0.68198832748724 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.26572249637491 * Education2n_Cycle + 
1.36865822272368 * EducationBasic + 0.26769702437041 * EducationGraduation + -0.57748542336591 
* EducationMaster + 1.40407968804704 * Marital_StatusDivorced + -1.35468203106214 * 
Marital_StatusMarried + 1.0644996414042 * Marital_StatusSingle + -0.68198832748724 * 
Marital_StatusTogether ;
2336583   +   H1x2_1  =     1.72650566457008 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.72650566457008 + H1x2_1 ;
2336584   +   H1x2_2  =     -1.0113179577999 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.0113179577999 + H1x2_2 ;
2336585   +   H1x2_3  =     0.14003924400021 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.14003924400021 + H1x2_3 ;
2336586   +   H1x2_1  = SIN(H1x2_1 );
MPRINT(EM_DIAGRAM):   H1x2_1 = SIN(H1x2_1 );
2336587   +   H1x2_2  = SIN(H1x2_2 );
MPRINT(EM_DIAGRAM):   H1x2_2 = SIN(H1x2_2 );
2336588   +   H1x2_3  = SIN(H1x2_3 );
MPRINT(EM_DIAGRAM):   H1x2_3 = SIN(H1x2_3 );
2336589   +END;
MPRINT(EM_DIAGRAM):   END;
2336590   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2336591   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2336592   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2336593   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2336594   +END;
MPRINT(EM_DIAGRAM):   END;
2336595   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2336596   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2336597   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2336598   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2336599   +   P_DepVar1  =    -7.62079794803554 * H1x1_1  +     13.7007341613959 * H1x1_2
2336600   +          +    -6.77882452096978 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -7.62079794803554 * H1x1_1 + 13.7007341613959 * H1x1_2 + 
-6.77882452096978 * H1x1_3 ;
2336601   +   P_DepVar1  = P_DepVar1  +    -0.44850093089338 * H1x2_1
2336602   +          +    -1.24228597291063 * H1x2_2  +     1.00075465600952 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.44850093089338 * H1x2_1 + -1.24228597291063 * 
H1x2_2 + 1.00075465600952 * H1x2_3 ;
2336603   +   P_DepVar1  =    -2.26198805619545 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.26198805619545 + P_DepVar1 ;
2336604   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2336605   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2336606   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2336607   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2336608   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2336609   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2336610   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2336611   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2336612   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2336613   +END;
MPRINT(EM_DIAGRAM):   END;
2336614   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2336615   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2336616   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2336617   +END;
MPRINT(EM_DIAGRAM):   END;
2336618   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2336619   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2336620   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2336621   +END;
MPRINT(EM_DIAGRAM):   END;
2336622   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2336623   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2336624   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2336625   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2336626   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2336627   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2336628   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2336629   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2336630   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2336631   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2336632   +END;
MPRINT(EM_DIAGRAM):   END;
2336633   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2336634   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2336635   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2336636   +drop
2336637   +H1x1_1
2336638   +H1x1_2
2336639   +H1x1_3
2336640   +H1x2_1
2336641   +H1x2_2
2336642   +H1x2_3
2336643   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x2_1 H1x2_2 H1x2_3 ;
2336644   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2336645    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2336646    quit;
2336647    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2336648    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2336649    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2336650    retain ID 2 Node "AutoNeural8";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural8";
2336651    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2336652    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2929 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2929 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2336653    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2336654    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2336655    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2929 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2929 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2336656    proc sort data=EMWS8.AutoNeural8_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural8_variableset out=_temp2(keep=NAME 
CREATOR);
2336657    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2336658    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL8_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2336659    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2336660    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2336661    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2336662    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2336663    proc contents data=EMWS8.AutoNeural8_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural8_train out=_meta(keep=NAME) noprint;
2336664    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2336665    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2336666    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2336667    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2336668    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2336669    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2336670    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2336671    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2336672    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2336673    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2336673  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1623 rows and 5 columns.

2336674    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2336675    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2336676    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1623 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 1623 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2336677    filename _pref
2336677  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2336678    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2336679    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2336680   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2336681   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2336682   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2336683   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2336684   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2336685   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2336686    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2336687    quit;
2336688    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2336689    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2336690    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2336691    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2336692    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2336693    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2336694    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2336695    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2336696    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2336697    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2336698    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2336699    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2336700    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2336701    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2336702    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2336703    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2336704    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2336705    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2336706    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2336707    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2336708    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2336709    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2336710    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2336711    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2336712    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2336713    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2336714    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2336714  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2336715    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2336716    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2336717    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 1627 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2336718    filename _pref
2336718  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2336719    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2336720    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2336721   +
2336722   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2336723   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2336723  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2336724   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2336725   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2336726   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2336727   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2336728   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2336729    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2336730    quit;
2336731    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2336732    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2336733    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2336734    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2336735    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2336736    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2336737    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2336738    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2336739    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2336740    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2336741    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2336742    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2336743    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2336744    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2336745    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2336746    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2336747    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2336748    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2336749    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2336750    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2336751    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2336752    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2336753    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2336754    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2336755    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2336756    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2336757    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2336757  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2336758    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2336759    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2336760    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 1666 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2336761    filename _pref
2336761  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2336762    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2336763    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2336764   +
2336765   +
2336766   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2336767   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2336768   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2336769   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2336770   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2336771   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2336772   +
2336773   +
2336774   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2336775   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2336776   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2336777   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2336778   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2336779   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2336780   +
2336781   +
2336782   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2336783   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2336784   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2336785   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2336786   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2336787   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2336788   +
2336789   +
2336790   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2336791   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2336792   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2336793   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2336794   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2336795   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2336796   +
2336797   +
2336798   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2336799   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2336800   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2336801   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2336802   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2336803   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2336804   +
2336805   +
2336806   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2336807   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2336808   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2336809   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2336810   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2336811   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2336812   +
2336813   +
2336814   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2336815   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2336816   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2336817   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2336818   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2336819   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2336820   +
2336821   +
2336822   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2336823   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2336824   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2336825   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2336826   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2336827   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2336828   +if
2336829   +_FILTERNORM1 not in ( '.')
2336830   + and
2336831   +_FILTERNORM2 not in ( '.')
2336832   + and
2336833   +_FILTERNORM3 not in ( '.')
2336834   + and
2336835   +_FILTERNORM4 not in ( '.')
2336836   + and
2336837   +_FILTERNORM5 not in ( '.')
2336838   + and
2336839   +_FILTERNORM6 not in ( '.')
2336840   + and
2336841   +_FILTERNORM7 not in ( ' ')
2336842   + and
2336843   +_FILTERNORM8 not in ( ' ')
2336844   +and
2336845   +( Dt_Customer ne .)
2336846   +and ( Income ne . and (Income<=107000))
2336847   +and ( Kidhome ne .)
2336848   +and ( MntFishProducts ne .)
2336849   +and ( MntFruits ne .)
2336850   +and ( MntGoldProds ne .)
2336851   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2336852   +and ( MntSweetProducts ne .)
2336853   +and ( MntWines ne .)
2336854   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2336855   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2336856   +and ( NumStorePurchases ne .)
2336857   +and ( NumWebPurchases ne .)
2336858   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2336859   +and ( Recency ne .)
2336860   +and ( Teenhome ne .)
2336861   +and ( Year_Birth ne .)
2336862   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2336863   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2336864   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2336865   +end;
MPRINT(EM_DIAGRAM):   end;
2336866   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2336867   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2336868    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2336869    quit;
2336870    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2336871    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2336872    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2336873    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2336874    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2336875    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2336876    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2336877    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2336878    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2336879    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2336880    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2336881    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2336882    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2336883    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2336884    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2336885    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2336886    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2336887    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2336888    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2336889    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2336890    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2336891    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2336892    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2336893    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2336894    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2336895    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2336896    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2336896  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2336897    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2336898    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2336899    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 1732 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2336900    %macro varDept(fcmpdata=,id=);
2336901    %global nobs&id scoreFlag&id;
2336902    %let scoreFlag&id = 0;
2336903    %if &id=1 or ^&fcmpStart %then %do;
2336904    proc sort data=&fcmpdata out=_temp&id nodupkey;
2336905    by NAME;
2336906    where id=&id and LHS in( %let j=1;
2336907    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2336908    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2336909    "&var" %let j = %eval(&j+1);
2336910    %end;
2336911    );
2336912    run;
2336913    %let dsid = %sysfunc(open(_temp&id));
2336914    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2336915    %let dsid = %sysfunc(close(&dsid));
2336916    %if &&nobs&id %then %do;
2336917    %let scoreFlag&id = 1;
2336918    %let fcmpStart = 1;
2336919    %end;
2336920    %else %let fcmpStart = 0;
2336921    %end;
2336922    %else %do;
2336923    proc sort data=&fcmpdata out=_tempid;
2336924    where id=&id;
2336925    by LHS;
2336926    run;
2336927    %let dsid = %sysfunc(open(_tempid));
2336928    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2336929    %let dsid = %sysfunc(close(&dsid));
2336930    %if ^&&nobs&id %then %do;
2336931    proc datasets lib=work nolist;
2336932    delete _tempid;
2336933    run;
2336934    quit;
2336935    %end;
2336936    %else %do;
2336937    data _tempAll;
2336938    set %let j=%eval(&id-1);
2336939    %do x=1 %to &j;
2336940    %if &&nobs&x %then %do;
2336941    _temp&x %end;
2336942    %end;
2336943    ;
2336944    run;
2336945    proc sql;
2336946    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2336946  ! work._tempid p2 where p.name=p2.lhs;
2336947    quit;
2336948    data _temp&id;
2336949    set _temp&id;
2336950    where LHS ne '' and NAME ne '' and Node ne '';
2336951    run;
2336952    proc datasets lib=work nolist;
2336953    delete _tempAll;
2336954    run;
2336955    %let dsid = %sysfunc(open(_temp&id));
2336956    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2336957    %let dsid = %sysfunc(close(&dsid));
2336958    %if ^&&nobs&id %then %do;
2336959    proc datasets lib=work nolist;
2336960    delete _temp&id;
2336961    run;
2336962    quit;
2336963    %end;
2336964    %else %do;
2336965    %let scoreFlag&id = 1;
2336966    data _temp&id;
2336967    set _temp&id;
2336968    where LHS ne NAME and node ne '';
2336969    run;
2336970    %let dsid = %sysfunc(open(_temp&id));
2336971    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2336972    %let dsid = %sysfunc(close(&dsid));
2336973    %if ^&&nobs&id %then %do;
2336974    proc datasets lib=work nolist;
2336975    delete _temp&id;
2336976    run;
2336977    quit;
2336978    %end;
2336979    %else %do;
2336980    proc sort data=_temp&id nodupkey;
2336981    by LHS NAME;
2336982    run;
2336983    %end;
2336984    %end;
2336985    %end;
2336986    %end;
2336987    %mend varDept;
2336988    %macro optCode(outdata=fcmpdata);
2336989    %global fcmpStart;
2336990    %let fcmpStart = 0;
2336991    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2336992    %let NumNodes=9;
2336993    %do k=1 %to &NumNodes;
2336994    %vardept(fcmpdata=&outdata, id=&k);
2336995    %end;
2336996    %mend optCode;
2336997    %optcode(outData=EMWS8.Ensmbl38_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2336998    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2336999    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2337000    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2337001    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2337002    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2337003    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2337004    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2337005    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2337006    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2337007    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2337007  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

2337008    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2337009    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2337010    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2337011    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2337012    filename _pref
2337012  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMPUBLISHSCORE.sas";
2337013    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2337014    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMPUBLISHSCORE.sas.
2337015   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2337016   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2337017   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2337018   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2337019   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2337020   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2337021   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2337022   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2337023   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2337024   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2337025   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2337026   +LENGTH _WARN_ $4
2337027   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2337028   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2337029   +
2337030   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2337031   +
2337032   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2337033   +
2337034   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2337035   +
2337036   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2337037   +
2337038   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2337039   +
2337040   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2337041   +
2337042   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2337043   +
2337044   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2337045   +
2337046   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2337047   +
2337048   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2337049   +
2337050   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2337051   +
2337052   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2337053   +
2337054   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2337055   +
2337056   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2337057   +
2337058   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2337059   +
2337060   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2337061   +
2337062   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2337063   +
2337064   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2337065   +
2337066   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2337067   +
2337068   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2337069   +
2337070   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2337071   +
2337072   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2337073   +
2337074   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2337075   +
2337076   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2337077   +
2337078   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2337079   +
2337080   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2337081   +
2337082   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2337083   +
2337084   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2337085   +
2337086   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2337087   +
2337088   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2337089   +
2337090   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2337091   +
2337092   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2337093   +
2337094   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2337095   +
2337096   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2337097   +
2337098   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2337099   +
2337100   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2337101   +
2337102   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2337103   +
2337104   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2337105   +
2337106   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2337107   +
2337108   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2337109   +
2337110   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2337111   +
2337112   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2337113   +
2337114   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2337115   +
2337116   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2337117   +
2337118   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2337119   +
2337120   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2337121   +
2337122   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2337123   +
2337124   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2337125   +
2337126   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2337127   +
2337128   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
2337129   +
2337130   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
2337131   +
2337132   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
2337133   +
2337134   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2337135   +
2337136   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2337137   +
2337138   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2337139   +
2337140   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2337141   +
2337142   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2337143   +
2337144   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2337145   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2337146   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2337147   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2337148   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2337149   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2337150   +end;
MPRINT(EM_DIAGRAM):   end;
2337151   +else do;
MPRINT(EM_DIAGRAM):   else do;
2337152   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2337153   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2337154   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2337155   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2337156   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2337157   +   end;
MPRINT(EM_DIAGRAM):   end;
2337158   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2337159   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2337160   +   end;
MPRINT(EM_DIAGRAM):   end;
2337161   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2337162   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2337163   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2337164   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2337165   +   end;
MPRINT(EM_DIAGRAM):   end;
2337166   +end;
MPRINT(EM_DIAGRAM):   end;
2337167   +
2337168   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2337169   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2337170   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2337171   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2337172   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2337173   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2337174   +end;
MPRINT(EM_DIAGRAM):   end;
2337175   +else do;
MPRINT(EM_DIAGRAM):   else do;
2337176   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2337177   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2337178   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2337179   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2337180   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2337181   +   end;
MPRINT(EM_DIAGRAM):   end;
2337182   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2337183   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2337184   +   end;
MPRINT(EM_DIAGRAM):   end;
2337185   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2337186   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2337187   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2337188   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2337189   +   end;
MPRINT(EM_DIAGRAM):   end;
2337190   +end;
MPRINT(EM_DIAGRAM):   end;
2337191   +
2337192   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2337193   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2337194   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2337195   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2337196   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2337197   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2337198   +end;
MPRINT(EM_DIAGRAM):   end;
2337199   +else do;
MPRINT(EM_DIAGRAM):   else do;
2337200   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2337201   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2337202   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2337203   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2337204   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2337205   +   end;
MPRINT(EM_DIAGRAM):   end;
2337206   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2337207   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2337208   +   end;
MPRINT(EM_DIAGRAM):   end;
2337209   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2337210   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2337211   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2337212   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2337213   +   end;
MPRINT(EM_DIAGRAM):   end;
2337214   +end;
MPRINT(EM_DIAGRAM):   end;
2337215   +
2337216   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2337217   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2337218   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2337219   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2337220   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2337221   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2337222   +end;
MPRINT(EM_DIAGRAM):   end;
2337223   +else do;
MPRINT(EM_DIAGRAM):   else do;
2337224   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2337225   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2337226   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2337227   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2337228   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2337229   +   end;
MPRINT(EM_DIAGRAM):   end;
2337230   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2337231   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2337232   +   end;
MPRINT(EM_DIAGRAM):   end;
2337233   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2337234   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2337235   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2337236   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2337237   +   end;
MPRINT(EM_DIAGRAM):   end;
2337238   +end;
MPRINT(EM_DIAGRAM):   end;
2337239   +
2337240   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2337241   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2337242   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2337243   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2337244   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2337245   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2337246   +end;
MPRINT(EM_DIAGRAM):   end;
2337247   +else do;
MPRINT(EM_DIAGRAM):   else do;
2337248   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2337249   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2337250   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2337251   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2337252   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2337253   +   end;
MPRINT(EM_DIAGRAM):   end;
2337254   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2337255   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2337256   +   end;
MPRINT(EM_DIAGRAM):   end;
2337257   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2337258   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2337259   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2337260   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2337261   +   end;
MPRINT(EM_DIAGRAM):   end;
2337262   +end;
MPRINT(EM_DIAGRAM):   end;
2337263   +
2337264   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2337265   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2337266   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2337267   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2337268   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2337269   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2337270   +end;
MPRINT(EM_DIAGRAM):   end;
2337271   +else do;
MPRINT(EM_DIAGRAM):   else do;
2337272   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2337273   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2337274   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2337275   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2337276   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2337277   +   end;
MPRINT(EM_DIAGRAM):   end;
2337278   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2337279   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2337280   +   end;
MPRINT(EM_DIAGRAM):   end;
2337281   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2337282   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2337283   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2337284   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2337285   +   end;
MPRINT(EM_DIAGRAM):   end;
2337286   +end;
MPRINT(EM_DIAGRAM):   end;
2337287   +
2337288   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2337289   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2337290   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2337291   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2337292   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2337293   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2337294   +end;
MPRINT(EM_DIAGRAM):   end;
2337295   +else do;
MPRINT(EM_DIAGRAM):   else do;
2337296   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2337297   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2337298   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2337299   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2337300   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2337301   +   end;
MPRINT(EM_DIAGRAM):   end;
2337302   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2337303   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2337304   +   end;
MPRINT(EM_DIAGRAM):   end;
2337305   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2337306   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2337307   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2337308   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2337309   +   end;
MPRINT(EM_DIAGRAM):   end;
2337310   +end;
MPRINT(EM_DIAGRAM):   end;
2337311   +
2337312   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2337313   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2337314   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2337315   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2337316   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2337317   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2337318   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2337319   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2337320   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2337321   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2337322   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2337323   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2337324   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2337325   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2337326   +end;
MPRINT(EM_DIAGRAM):   end;
2337327   +else do;
MPRINT(EM_DIAGRAM):   else do;
2337328   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2337329   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2337330   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2337331   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2337332   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2337333   +   end;
MPRINT(EM_DIAGRAM):   end;
2337334   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2337335   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2337336   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2337337   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2337338   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2337339   +   end;
MPRINT(EM_DIAGRAM):   end;
2337340   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2337341   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2337342   +   end;
MPRINT(EM_DIAGRAM):   end;
2337343   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2337344   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2337345   +   end;
MPRINT(EM_DIAGRAM):   end;
2337346   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2337347   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2337348   +   end;
MPRINT(EM_DIAGRAM):   end;
2337349   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2337350   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2337351   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2337352   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2337353   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2337354   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2337355   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2337356   +   end;
MPRINT(EM_DIAGRAM):   end;
2337357   +end;
MPRINT(EM_DIAGRAM):   end;
2337358   +
2337359   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2337360   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2337361   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2337362   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2337363   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2337364   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2337365   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2337366   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2337367   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2337368   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2337369   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2337370   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2337371   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2337372   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2337373   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2337374   +end;
MPRINT(EM_DIAGRAM):   end;
2337375   +else do;
MPRINT(EM_DIAGRAM):   else do;
2337376   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2337377   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2337378   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2337379   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2337380   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2337381   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2337382   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2337383   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2337384   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2337385   +         end;
MPRINT(EM_DIAGRAM):   end;
2337386   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2337387   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2337388   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2337389   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2337390   +            end;
MPRINT(EM_DIAGRAM):   end;
2337391   +         end;
MPRINT(EM_DIAGRAM):   end;
2337392   +      end;
MPRINT(EM_DIAGRAM):   end;
2337393   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2337394   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2337395   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2337396   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2337397   +         end;
MPRINT(EM_DIAGRAM):   end;
2337398   +      end;
MPRINT(EM_DIAGRAM):   end;
2337399   +   end;
MPRINT(EM_DIAGRAM):   end;
2337400   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2337401   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2337402   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2337403   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2337404   +      end;
MPRINT(EM_DIAGRAM):   end;
2337405   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2337406   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2337407   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2337408   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2337409   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2337410   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2337411   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2337412   +         end;
MPRINT(EM_DIAGRAM):   end;
2337413   +      end;
MPRINT(EM_DIAGRAM):   end;
2337414   +   end;
MPRINT(EM_DIAGRAM):   end;
2337415   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2337416   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2337417   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2337418   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2337419   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2337420   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2337421   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2337422   +   end;
MPRINT(EM_DIAGRAM):   end;
2337423   +end;
MPRINT(EM_DIAGRAM):   end;
2337424   +
2337425   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2337426   +*** Checking missing input Interval
2337427   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2337428   +
2337429   +IF NMISS(
2337430   +   AcceptedCmpTotal ,
2337431   +   Age ,
2337432   +   Frq ,
2337433   +   Income ,
2337434   +   Kidhome ,
2337435   +   Mnt ,
2337436   +   MntFishProducts ,
2337437   +   MntFruits ,
2337438   +   MntGoldProds ,
2337439   +   MntMeatProducts ,
2337440   +   MntSweetProducts ,
2337441   +   MntWines ,
2337442   +   MonthsAsCustomer ,
2337443   +   NumCatalogPurchases ,
2337444   +   NumDealsPurchases ,
2337445   +   NumDistPurchases ,
2337446   +   NumStorePurchases ,
2337447   +   NumWebPurchases ,
2337448   +   NumWebVisitsMonth ,
2337449   +   RFMstat ,
2337450   +   RMntFrq ,
2337451   +   Recency ,
2337452   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2337453   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2337454   +
2337455   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2337456   +END;
MPRINT(EM_DIAGRAM):   END;
2337457   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2337458   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2337459   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2337460   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2337461   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2337462   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2337463   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2337464   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2337465   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2337466   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2337467   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2337468   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2337469   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2337470   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2337471   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2337472   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2337473   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2337474   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2337475   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2337476   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2337477   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2337478   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2337479   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2337480   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2337481   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2337482   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2337483   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2337484   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2337485   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2337486   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2337487   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2337488   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2337489   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2337490   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2337491   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2337492   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2337493   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2337494   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2337495   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2337496   +END;
MPRINT(EM_DIAGRAM):   END;
2337497   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2337498   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2337499   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2337500   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2337501   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2337502   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2337503   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2337504   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2337505   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2337506   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2337507   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2337508   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2337509   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2337510   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2337511   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2337512   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2337513   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2337514   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2337515   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2337516   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2337517   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2337518   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2337519   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2337520   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2337521   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2337522   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2337523   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2337524   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2337525   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2337526   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2337527   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2337528   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2337529   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2337530   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2337531   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2337532   +   ELSE S_NumCatalogPurchases
2337533   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2337534   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2337535   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2337536   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2337537   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2337538   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2337539   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2337540   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2337541   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2337542   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2337543   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2337544   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2337545   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2337546   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2337547   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2337548   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2337549   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2337550   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2337551   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2337552   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2337553   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2337554   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2337555   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2337556   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2337557   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2337558   +END;
MPRINT(EM_DIAGRAM):   END;
2337559   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2337560   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2337561   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2337562   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2337563   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2337564   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2337565   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2337566   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2337567   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2337568   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2337569   +   H1x1_1  =     -1.5235159368138 * S_AcceptedCmpTotal
2337570   +          +     0.13941271308016 * S_Age  +    -0.84765157270503 * S_Frq
2337571   +          +    -0.89386555046676 * S_Income  +     1.62709236629244 *
2337572   +        S_Kidhome  +    -1.21416429819342 * S_Mnt  +    -1.95640488965637 *
2337573   +        S_MntFishProducts  +    -0.08621024993404 * S_MntFruits
2337574   +          +    -0.38536990009586 * S_MntGoldProds  +     3.12553097304637 *
2337575   +        S_MntMeatProducts  +    -2.50680711036653 * S_MntSweetProducts
2337576   +          +    -3.77770073626477 * S_MntWines  +     0.39118206604766 *
2337577   +        S_MonthsAsCustomer  +     1.80485993754239 * S_NumCatalogPurchases
2337578   +          +     3.21215425524619 * S_NumDealsPurchases
2337579   +          +     0.08695198777156 * S_NumDistPurchases
2337580   +          +    -2.58697971128295 * S_NumStorePurchases
2337581   +          +    -0.44431924796059 * S_NumWebPurchases
2337582   +          +     -1.4492698984921 * S_NumWebVisitsMonth
2337583   +          +     2.16652214648037 * S_RFMstat  +    -0.48027961131639 *
2337584   +        S_RMntFrq  +    -0.27206877070748 * S_Recency
2337585   +          +    -0.34774852853763 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.5235159368138 * S_AcceptedCmpTotal + 0.13941271308016 * 
S_Age + -0.84765157270503 * S_Frq + -0.89386555046676 * S_Income + 1.62709236629244 * 
S_Kidhome + -1.21416429819342 * S_Mnt + -1.95640488965637 * S_MntFishProducts + 
-0.08621024993404 * S_MntFruits + -0.38536990009586 * S_MntGoldProds + 3.12553097304637 * 
S_MntMeatProducts + -2.50680711036653 * S_MntSweetProducts + -3.77770073626477 * S_MntWines + 
0.39118206604766 * S_MonthsAsCustomer + 1.80485993754239 * S_NumCatalogPurchases + 
3.21215425524619 * S_NumDealsPurchases + 0.08695198777156 * S_NumDistPurchases + 
-2.58697971128295 * S_NumStorePurchases + -0.44431924796059 * S_NumWebPurchases + 
-1.4492698984921 * S_NumWebVisitsMonth + 2.16652214648037 * S_RFMstat + -0.48027961131639 * 
S_RMntFrq + -0.27206877070748 * S_Recency + -0.34774852853763 * S_Teenhome ;
2337586   +   H1x1_2  =     -0.5665707820209 * S_AcceptedCmpTotal
2337587   +          +    -1.33582859121223 * S_Age  +     0.90483024742522 * S_Frq
2337588   +          +    -2.00588558815165 * S_Income  +      3.0373198083895 *
2337589   +        S_Kidhome  +      0.4356905004225 * S_Mnt  +     0.19619626354366 *
2337590   +        S_MntFishProducts  +    -1.09111340184132 * S_MntFruits
2337591   +          +     0.36844676336289 * S_MntGoldProds  +    -2.23832561375429 *
2337592   +        S_MntMeatProducts  +    -0.18280081530069 * S_MntSweetProducts
2337593   +          +     2.11599309139107 * S_MntWines  +     0.68147940490709 *
2337594   +        S_MonthsAsCustomer  +    -0.73940648599397 * S_NumCatalogPurchases
2337595   +          +    -0.83844506398484 * S_NumDealsPurchases
2337596   +          +     0.60831936516804 * S_NumDistPurchases
2337597   +          +     1.79084087761626 * S_NumStorePurchases
2337598   +          +     1.17119196356453 * S_NumWebPurchases
2337599   +          +    -3.63586683518718 * S_NumWebVisitsMonth
2337600   +          +     0.60521990735996 * S_RFMstat  +     0.56036381019221 *
2337601   +        S_RMntFrq  +     3.84599118896159 * S_Recency
2337602   +          +     2.42091939246471 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5665707820209 * S_AcceptedCmpTotal + -1.33582859121223 * 
S_Age + 0.90483024742522 * S_Frq + -2.00588558815165 * S_Income + 3.0373198083895 * S_Kidhome 
+ 0.4356905004225 * S_Mnt + 0.19619626354366 * S_MntFishProducts + -1.09111340184132 * 
S_MntFruits + 0.36844676336289 * S_MntGoldProds + -2.23832561375429 * S_MntMeatProducts + 
-0.18280081530069 * S_MntSweetProducts + 2.11599309139107 * S_MntWines + 0.68147940490709 * 
S_MonthsAsCustomer + -0.73940648599397 * S_NumCatalogPurchases + -0.83844506398484 * 
S_NumDealsPurchases + 0.60831936516804 * S_NumDistPurchases + 1.79084087761626 * 
S_NumStorePurchases + 1.17119196356453 * S_NumWebPurchases + -3.63586683518718 * 
S_NumWebVisitsMonth + 0.60521990735996 * S_RFMstat + 0.56036381019221 * S_RMntFrq + 
3.84599118896159 * S_Recency + 2.42091939246471 * S_Teenhome ;
2337603   +   H1x1_3  =    -2.34864034635966 * S_AcceptedCmpTotal
2337604   +          +     0.38417502023066 * S_Age  +     0.18241442054661 * S_Frq
2337605   +          +    -0.36643054878492 * S_Income  +    -0.01464967964014 *
2337606   +        S_Kidhome  +     0.13084033882631 * S_Mnt  +     1.43066752801424 *
2337607   +        S_MntFishProducts  +     0.30678881611098 * S_MntFruits
2337608   +          +    -0.35038082288662 * S_MntGoldProds  +    -6.79650673935808 *
2337609   +        S_MntMeatProducts  +    -0.35154740308081 * S_MntSweetProducts
2337610   +          +     4.53406963590593 * S_MntWines  +     0.35082802515055 *
2337611   +        S_MonthsAsCustomer  +    -1.62489937965567 * S_NumCatalogPurchases
2337612   +          +    -0.31484031572628 * S_NumDealsPurchases
2337613   +          +    -0.18273941035679 * S_NumDistPurchases
2337614   +          +     0.99501789733882 * S_NumStorePurchases
2337615   +          +     1.32014078829379 * S_NumWebPurchases
2337616   +          +    -1.34393498450215 * S_NumWebVisitsMonth
2337617   +          +    -0.93549119966022 * S_RFMstat  +    -1.74825390192193 *
2337618   +        S_RMntFrq  +     0.84406941726743 * S_Recency
2337619   +          +     -0.5004540381333 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.34864034635966 * S_AcceptedCmpTotal + 0.38417502023066 * 
S_Age + 0.18241442054661 * S_Frq + -0.36643054878492 * S_Income + -0.01464967964014 * 
S_Kidhome + 0.13084033882631 * S_Mnt + 1.43066752801424 * S_MntFishProducts + 0.30678881611098 
* S_MntFruits + -0.35038082288662 * S_MntGoldProds + -6.79650673935808 * S_MntMeatProducts + 
-0.35154740308081 * S_MntSweetProducts + 4.53406963590593 * S_MntWines + 0.35082802515055 * 
S_MonthsAsCustomer + -1.62489937965567 * S_NumCatalogPurchases + -0.31484031572628 * 
S_NumDealsPurchases + -0.18273941035679 * S_NumDistPurchases + 0.99501789733882 * 
S_NumStorePurchases + 1.32014078829379 * S_NumWebPurchases + -1.34393498450215 * 
S_NumWebVisitsMonth + -0.93549119966022 * S_RFMstat + -1.74825390192193 * S_RMntFrq + 
0.84406941726743 * S_Recency + -0.5004540381333 * S_Teenhome ;
2337620   +   H1x1_4  =     0.46772023050431 * S_AcceptedCmpTotal
2337621   +          +    -0.64609651992636 * S_Age  +     0.65433283816167 * S_Frq
2337622   +          +     0.97922442633265 * S_Income  +    -0.37705204232056 *
2337623   +        S_Kidhome  +     0.00937752600299 * S_Mnt  +     -0.6082843846013 *
2337624   +        S_MntFishProducts  +     -0.6227107898918 * S_MntFruits
2337625   +          +      0.0291421224006 * S_MntGoldProds  +     1.09748402313736 *
2337626   +        S_MntMeatProducts  +     0.00604619863622 * S_MntSweetProducts
2337627   +          +    -0.74684537570529 * S_MntWines  +    -0.00266569003481 *
2337628   +        S_MonthsAsCustomer  +     2.01081657735872 * S_NumCatalogPurchases
2337629   +          +     1.19658719134196 * S_NumDealsPurchases
2337630   +          +     0.87478204472986 * S_NumDistPurchases
2337631   +          +    -0.20635856288784 * S_NumStorePurchases
2337632   +          +    -0.89927356974242 * S_NumWebPurchases
2337633   +          +     2.92285244132576 * S_NumWebVisitsMonth
2337634   +          +    -0.10913907245142 * S_RFMstat  +     1.64233441899256 *
2337635   +        S_RMntFrq  +    -3.64945971202322 * S_Recency
2337636   +          +    -1.78841346993558 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46772023050431 * S_AcceptedCmpTotal + -0.64609651992636 * 
S_Age + 0.65433283816167 * S_Frq + 0.97922442633265 * S_Income + -0.37705204232056 * S_Kidhome 
+ 0.00937752600299 * S_Mnt + -0.6082843846013 * S_MntFishProducts + -0.6227107898918 * 
S_MntFruits + 0.0291421224006 * S_MntGoldProds + 1.09748402313736 * S_MntMeatProducts + 
0.00604619863622 * S_MntSweetProducts + -0.74684537570529 * S_MntWines + -0.00266569003481 * 
S_MonthsAsCustomer + 2.01081657735872 * S_NumCatalogPurchases + 1.19658719134196 * 
S_NumDealsPurchases + 0.87478204472986 * S_NumDistPurchases + -0.20635856288784 * 
S_NumStorePurchases + -0.89927356974242 * S_NumWebPurchases + 2.92285244132576 * 
S_NumWebVisitsMonth + -0.10913907245142 * S_RFMstat + 1.64233441899256 * S_RMntFrq + 
-3.64945971202322 * S_Recency + -1.78841346993558 * S_Teenhome ;
2337637   +   H1x1_5  =    -1.22491918863941 * S_AcceptedCmpTotal
2337638   +          +     0.16201659993217 * S_Age  +     0.17189537824457 * S_Frq
2337639   +          +    -0.87922900323563 * S_Income  +    -0.79268410231108 *
2337640   +        S_Kidhome  +     0.62793961676074 * S_Mnt  +     0.20877761882787 *
2337641   +        S_MntFishProducts  +     0.99367872286661 * S_MntFruits
2337642   +          +     -0.4347564565882 * S_MntGoldProds  +    -0.16203279329295 *
2337643   +        S_MntMeatProducts  +     0.81409215344356 * S_MntSweetProducts
2337644   +          +     1.33482971563984 * S_MntWines  +    -1.17441882196058 *
2337645   +        S_MonthsAsCustomer  +    -1.72330829533107 * S_NumCatalogPurchases
2337646   +          +       -2.32617124568 * S_NumDealsPurchases
2337647   +          +    -0.56589187730672 * S_NumDistPurchases
2337648   +          +     1.07062299863482 * S_NumStorePurchases
2337649   +          +     0.30077273739578 * S_NumWebPurchases
2337650   +          +    -1.67745421915317 * S_NumWebVisitsMonth
2337651   +          +      0.0530074713265 * S_RFMstat  +    -0.55969729655382 *
2337652   +        S_RMntFrq  +     1.32196704233234 * S_Recency
2337653   +          +     1.05470622089613 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.22491918863941 * S_AcceptedCmpTotal + 0.16201659993217 * 
S_Age + 0.17189537824457 * S_Frq + -0.87922900323563 * S_Income + -0.79268410231108 * 
S_Kidhome + 0.62793961676074 * S_Mnt + 0.20877761882787 * S_MntFishProducts + 0.99367872286661 
* S_MntFruits + -0.4347564565882 * S_MntGoldProds + -0.16203279329295 * S_MntMeatProducts + 
0.81409215344356 * S_MntSweetProducts + 1.33482971563984 * S_MntWines + -1.17441882196058 * 
S_MonthsAsCustomer + -1.72330829533107 * S_NumCatalogPurchases + -2.32617124568 * 
S_NumDealsPurchases + -0.56589187730672 * S_NumDistPurchases + 1.07062299863482 * 
S_NumStorePurchases + 0.30077273739578 * S_NumWebPurchases + -1.67745421915317 * 
S_NumWebVisitsMonth + 0.0530074713265 * S_RFMstat + -0.55969729655382 * S_RMntFrq + 
1.32196704233234 * S_Recency + 1.05470622089613 * S_Teenhome ;
2337654   +   H1x1_1  = H1x1_1  +     0.19875423759582 * AcceptedCmp10
2337655   +          +    -1.84163905120352 * AcceptedCmp20  +    -1.63149345314696 *
2337656   +        AcceptedCmp30  +    -1.52652349127913 * AcceptedCmp40
2337657   +          +    -0.97663634905647 * AcceptedCmp50  +    -0.94352222509088 *
2337658   +        Complain0  +    -0.63297203617355 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.19875423759582 * AcceptedCmp10 + -1.84163905120352 * 
AcceptedCmp20 + -1.63149345314696 * AcceptedCmp30 + -1.52652349127913 * AcceptedCmp40 + 
-0.97663634905647 * AcceptedCmp50 + -0.94352222509088 * Complain0 + -0.63297203617355 * 
HigherEducationBinary0 ;
2337659   +   H1x1_2  = H1x1_2  +      0.0505791781839 * AcceptedCmp10
2337660   +          +    -0.19407965320143 * AcceptedCmp20  +     0.35537657271506 *
2337661   +        AcceptedCmp30  +    -0.84577216347728 * AcceptedCmp40
2337662   +          +     1.73085566880686 * AcceptedCmp50  +     0.05800586053869 *
2337663   +        Complain0  +    -0.62505561129469 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0505791781839 * AcceptedCmp10 + -0.19407965320143 * 
AcceptedCmp20 + 0.35537657271506 * AcceptedCmp30 + -0.84577216347728 * AcceptedCmp40 + 
1.73085566880686 * AcceptedCmp50 + 0.05800586053869 * Complain0 + -0.62505561129469 * 
HigherEducationBinary0 ;
2337664   +   H1x1_3  = H1x1_3  +     0.54825581966403 * AcceptedCmp10
2337665   +          +     -0.0966204838125 * AcceptedCmp20  +    -1.31707923763053 *
2337666   +        AcceptedCmp30  +    -1.21021077486757 * AcceptedCmp40
2337667   +          +     3.29102250037389 * AcceptedCmp50  +    -0.16383687725206 *
2337668   +        Complain0  +     0.00651446514934 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.54825581966403 * AcceptedCmp10 + -0.0966204838125 * 
AcceptedCmp20 + -1.31707923763053 * AcceptedCmp30 + -1.21021077486757 * AcceptedCmp40 + 
3.29102250037389 * AcceptedCmp50 + -0.16383687725206 * Complain0 + 0.00651446514934 * 
HigherEducationBinary0 ;
2337669   +   H1x1_4  = H1x1_4  +    -1.18573650260336 * AcceptedCmp10
2337670   +          +    -1.73968979068234 * AcceptedCmp20  +    -1.31277698137778 *
2337671   +        AcceptedCmp30  +    -1.74346538593922 * AcceptedCmp40
2337672   +          +    -0.72543919818299 * AcceptedCmp50  +    -0.06328353200384 *
2337673   +        Complain0  +     0.74828735398796 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.18573650260336 * AcceptedCmp10 + -1.73968979068234 
* AcceptedCmp20 + -1.31277698137778 * AcceptedCmp30 + -1.74346538593922 * AcceptedCmp40 + 
-0.72543919818299 * AcceptedCmp50 + -0.06328353200384 * Complain0 + 0.74828735398796 * 
HigherEducationBinary0 ;
2337674   +   H1x1_5  = H1x1_5  +    -0.19622185523754 * AcceptedCmp10
2337675   +          +     -0.4643498903813 * AcceptedCmp20  +     0.69293644934542 *
2337676   +        AcceptedCmp30  +     0.23077838801355 * AcceptedCmp40
2337677   +          +     0.53061813608476 * AcceptedCmp50  +    -0.56870999936869 *
2337678   +        Complain0  +      0.5917990310858 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.19622185523754 * AcceptedCmp10 + -0.4643498903813 * 
AcceptedCmp20 + 0.69293644934542 * AcceptedCmp30 + 0.23077838801355 * AcceptedCmp40 + 
0.53061813608476 * AcceptedCmp50 + -0.56870999936869 * Complain0 + 0.5917990310858 * 
HigherEducationBinary0 ;
2337679   +   H1x1_1  = H1x1_1  +     1.01422000032629 * Education2n_Cycle
2337680   +          +    -0.77619298826287 * EducationBasic  +     0.35633748974614 *
2337681   +        EducationGraduation  +     0.98491516107588 * EducationMaster
2337682   +          +    -0.27797737429678 * Marital_StatusDivorced
2337683   +          +    -0.08137635862327 * Marital_StatusMarried
2337684   +          +     0.06275411820495 * Marital_StatusSingle
2337685   +          +    -0.19979743343415 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.01422000032629 * Education2n_Cycle + 
-0.77619298826287 * EducationBasic + 0.35633748974614 * EducationGraduation + 0.98491516107588 
* EducationMaster + -0.27797737429678 * Marital_StatusDivorced + -0.08137635862327 * 
Marital_StatusMarried + 0.06275411820495 * Marital_StatusSingle + -0.19979743343415 * 
Marital_StatusTogether ;
2337686   +   H1x1_2  = H1x1_2  +    -0.66224206017124 * Education2n_Cycle
2337687   +          +     0.80729589186486 * EducationBasic  +     0.75931615755998 *
2337688   +        EducationGraduation  +    -0.05470462753112 * EducationMaster
2337689   +          +     0.05151426841441 * Marital_StatusDivorced
2337690   +          +     1.19165082030442 * Marital_StatusMarried
2337691   +          +    -1.08257080662611 * Marital_StatusSingle
2337692   +          +     0.13534863375625 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.66224206017124 * Education2n_Cycle + 
0.80729589186486 * EducationBasic + 0.75931615755998 * EducationGraduation + -0.05470462753112 
* EducationMaster + 0.05151426841441 * Marital_StatusDivorced + 1.19165082030442 * 
Marital_StatusMarried + -1.08257080662611 * Marital_StatusSingle + 0.13534863375625 * 
Marital_StatusTogether ;
2337693   +   H1x1_3  = H1x1_3  +     0.20065577451105 * Education2n_Cycle
2337694   +          +    -0.14205714608311 * EducationBasic  +    -0.07077711368393 *
2337695   +        EducationGraduation  +     0.40262329710793 * EducationMaster
2337696   +          +      0.0238206459022 * Marital_StatusDivorced
2337697   +          +     -0.4653244204261 * Marital_StatusMarried
2337698   +          +     0.13051613619882 * Marital_StatusSingle
2337699   +          +    -0.35951366919755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.20065577451105 * Education2n_Cycle + 
-0.14205714608311 * EducationBasic + -0.07077711368393 * EducationGraduation + 
0.40262329710793 * EducationMaster + 0.0238206459022 * Marital_StatusDivorced + 
-0.4653244204261 * Marital_StatusMarried + 0.13051613619882 * Marital_StatusSingle + 
-0.35951366919755 * Marital_StatusTogether ;
2337700   +   H1x1_4  = H1x1_4  +     -0.8555672630555 * Education2n_Cycle
2337701   +          +     0.58439980233621 * EducationBasic  +     0.04784356342853 *
2337702   +        EducationGraduation  +    -0.79764992264249 * EducationMaster
2337703   +          +     -0.7449356409222 * Marital_StatusDivorced
2337704   +          +    -1.46604673521535 * Marital_StatusMarried
2337705   +          +     0.74484771688818 * Marital_StatusSingle
2337706   +          +    -1.91273009779071 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.8555672630555 * Education2n_Cycle + 
0.58439980233621 * EducationBasic + 0.04784356342853 * EducationGraduation + -0.79764992264249 
* EducationMaster + -0.7449356409222 * Marital_StatusDivorced + -1.46604673521535 * 
Marital_StatusMarried + 0.74484771688818 * Marital_StatusSingle + -1.91273009779071 * 
Marital_StatusTogether ;
2337707   +   H1x1_5  = H1x1_5  +    -0.45561096683674 * Education2n_Cycle
2337708   +          +    -0.08389156101858 * EducationBasic  +    -1.24281299616343 *
2337709   +        EducationGraduation  +    -0.00999807517226 * EducationMaster
2337710   +          +    -3.68044980584423 * Marital_StatusDivorced
2337711   +          +     3.14587407902338 * Marital_StatusMarried
2337712   +          +    -2.66118132753024 * Marital_StatusSingle
2337713   +          +     3.50991640149914 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.45561096683674 * Education2n_Cycle + 
-0.08389156101858 * EducationBasic + -1.24281299616343 * EducationGraduation + 
-0.00999807517226 * EducationMaster + -3.68044980584423 * Marital_StatusDivorced + 
3.14587407902338 * Marital_StatusMarried + -2.66118132753024 * Marital_StatusSingle + 
3.50991640149914 * Marital_StatusTogether ;
2337714   +   H1x1_1  =    -2.87464368543529 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.87464368543529 + H1x1_1 ;
2337715   +   H1x1_2  =     0.69745433976458 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.69745433976458 + H1x1_2 ;
2337716   +   H1x1_3  =    -0.71895677211617 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.71895677211617 + H1x1_3 ;
2337717   +   H1x1_4  =    -3.07619671976178 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.07619671976178 + H1x1_4 ;
2337718   +   H1x1_5  =    -1.74345318000473 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.74345318000473 + H1x1_5 ;
2337719   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2337720   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2337721   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2337722   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
2337723   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
2337724   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
2337725   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
2337726   +END;
MPRINT(EM_DIAGRAM):   END;
2337727   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2337728   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2337729   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2337730   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2337731   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2337732   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2337733   +END;
MPRINT(EM_DIAGRAM):   END;
2337734   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2337735   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2337736   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2337737   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2337738   +   H1x2_1  =     0.02206354442682 * S_AcceptedCmpTotal
2337739   +          +    -1.34753268833642 * S_Age  +    -2.08377331969695 * S_Frq
2337740   +          +    -1.39854535380539 * S_Income  +     2.13620611759545 *
2337741   +        S_Kidhome  +    -1.50515365217324 * S_Mnt  +     0.85499321862984 *
2337742   +        S_MntFishProducts  +    -1.17732452790345 * S_MntFruits
2337743   +          +     1.52355640622249 * S_MntGoldProds  +     1.31854239360457 *
2337744   +        S_MntMeatProducts  +    -0.03265851293389 * S_MntSweetProducts
2337745   +          +     2.18666242847435 * S_MntWines  +     0.08246249957908 *
2337746   +        S_MonthsAsCustomer  +    -1.06901902236609 * S_NumCatalogPurchases
2337747   +          +     0.89261880438741 * S_NumDealsPurchases
2337748   +          +    -1.61647413199892 * S_NumDistPurchases
2337749   +          +    -0.56304669045195 * S_NumStorePurchases
2337750   +          +      0.7766837080945 * S_NumWebPurchases
2337751   +          +     -2.2953497398902 * S_NumWebVisitsMonth
2337752   +          +    -3.34547809243199 * S_RFMstat  +     0.07311937799261 *
2337753   +        S_RMntFrq  +     -0.5786489917247 * S_Recency
2337754   +          +    -1.06532056361117 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.02206354442682 * S_AcceptedCmpTotal + -1.34753268833642 * 
S_Age + -2.08377331969695 * S_Frq + -1.39854535380539 * S_Income + 2.13620611759545 * 
S_Kidhome + -1.50515365217324 * S_Mnt + 0.85499321862984 * S_MntFishProducts + 
-1.17732452790345 * S_MntFruits + 1.52355640622249 * S_MntGoldProds + 1.31854239360457 * 
S_MntMeatProducts + -0.03265851293389 * S_MntSweetProducts + 2.18666242847435 * S_MntWines + 
0.08246249957908 * S_MonthsAsCustomer + -1.06901902236609 * S_NumCatalogPurchases + 
0.89261880438741 * S_NumDealsPurchases + -1.61647413199892 * S_NumDistPurchases + 
-0.56304669045195 * S_NumStorePurchases + 0.7766837080945 * S_NumWebPurchases + 
-2.2953497398902 * S_NumWebVisitsMonth + -3.34547809243199 * S_RFMstat + 0.07311937799261 * 
S_RMntFrq + -0.5786489917247 * S_Recency + -1.06532056361117 * S_Teenhome ;
2337755   +   H1x2_2  =      0.0341880757331 * S_AcceptedCmpTotal
2337756   +          +     0.72034771315738 * S_Age  +     0.64155966340389 * S_Frq
2337757   +          +    -1.06570008729492 * S_Income  +    -1.84532938869849 *
2337758   +        S_Kidhome  +     0.94433555965982 * S_Mnt  +     1.23831916074831 *
2337759   +        S_MntFishProducts  +     1.33415870886475 * S_MntFruits
2337760   +          +    -0.51253922893993 * S_MntGoldProds  +     0.02241594009025 *
2337761   +        S_MntMeatProducts  +     -1.2811169586741 * S_MntSweetProducts
2337762   +          +     1.96686773881953 * S_MntWines  +     1.44655944802715 *
2337763   +        S_MonthsAsCustomer  +    -1.18627316384798 * S_NumCatalogPurchases
2337764   +          +     1.02431289724643 * S_NumDealsPurchases
2337765   +          +    -0.90960173637405 * S_NumDistPurchases
2337766   +          +     1.24283490404772 * S_NumStorePurchases
2337767   +          +     1.23072413154592 * S_NumWebPurchases
2337768   +          +    -0.21533378473931 * S_NumWebVisitsMonth
2337769   +          +     1.26438704884008 * S_RFMstat  +      0.0014042871018 *
2337770   +        S_RMntFrq  +     0.32357651423135 * S_Recency
2337771   +          +    -0.49834512433407 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.0341880757331 * S_AcceptedCmpTotal + 0.72034771315738 * S_Age 
+ 0.64155966340389 * S_Frq + -1.06570008729492 * S_Income + -1.84532938869849 * S_Kidhome + 
0.94433555965982 * S_Mnt + 1.23831916074831 * S_MntFishProducts + 1.33415870886475 * 
S_MntFruits + -0.51253922893993 * S_MntGoldProds + 0.02241594009025 * S_MntMeatProducts + 
-1.2811169586741 * S_MntSweetProducts + 1.96686773881953 * S_MntWines + 1.44655944802715 * 
S_MonthsAsCustomer + -1.18627316384798 * S_NumCatalogPurchases + 1.02431289724643 * 
S_NumDealsPurchases + -0.90960173637405 * S_NumDistPurchases + 1.24283490404772 * 
S_NumStorePurchases + 1.23072413154592 * S_NumWebPurchases + -0.21533378473931 * 
S_NumWebVisitsMonth + 1.26438704884008 * S_RFMstat + 0.0014042871018 * S_RMntFrq + 
0.32357651423135 * S_Recency + -0.49834512433407 * S_Teenhome ;
2337772   +   H1x2_3  =    -0.57066024275015 * S_AcceptedCmpTotal
2337773   +          +     0.16615358153136 * S_Age  +    -0.60017461612499 * S_Frq
2337774   +          +    -0.21195793925019 * S_Income  +    -0.36049126996499 *
2337775   +        S_Kidhome  +     0.97458542661118 * S_Mnt  +     0.62279162661518 *
2337776   +        S_MntFishProducts  +    -0.44715765367363 * S_MntFruits
2337777   +          +     0.91519163455361 * S_MntGoldProds  +     1.07312113398768 *
2337778   +        S_MntMeatProducts  +    -1.61967017526055 * S_MntSweetProducts
2337779   +          +    -1.88327677412185 * S_MntWines  +    -1.67067768979245 *
2337780   +        S_MonthsAsCustomer  +    -0.64725516463464 * S_NumCatalogPurchases
2337781   +          +    -0.26249596122198 * S_NumDealsPurchases
2337782   +          +    -0.63328519804758 * S_NumDistPurchases
2337783   +          +    -0.88467503575886 * S_NumStorePurchases
2337784   +          +    -0.83120537310738 * S_NumWebPurchases
2337785   +          +     1.40072282351719 * S_NumWebVisitsMonth
2337786   +          +     1.42591300760984 * S_RFMstat  +     1.93593865100837 *
2337787   +        S_RMntFrq  +     -1.2794275536508 * S_Recency
2337788   +          +    -0.78582664529339 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.57066024275015 * S_AcceptedCmpTotal + 0.16615358153136 * 
S_Age + -0.60017461612499 * S_Frq + -0.21195793925019 * S_Income + -0.36049126996499 * 
S_Kidhome + 0.97458542661118 * S_Mnt + 0.62279162661518 * S_MntFishProducts + 
-0.44715765367363 * S_MntFruits + 0.91519163455361 * S_MntGoldProds + 1.07312113398768 * 
S_MntMeatProducts + -1.61967017526055 * S_MntSweetProducts + -1.88327677412185 * S_MntWines + 
-1.67067768979245 * S_MonthsAsCustomer + -0.64725516463464 * S_NumCatalogPurchases + 
-0.26249596122198 * S_NumDealsPurchases + -0.63328519804758 * S_NumDistPurchases + 
-0.88467503575886 * S_NumStorePurchases + -0.83120537310738 * S_NumWebPurchases + 
1.40072282351719 * S_NumWebVisitsMonth + 1.42591300760984 * S_RFMstat + 1.93593865100837 * 
S_RMntFrq + -1.2794275536508 * S_Recency + -0.78582664529339 * S_Teenhome ;
2337789   +   H1x2_4  =     0.70159995537759 * S_AcceptedCmpTotal
2337790   +          +    -0.70199351793792 * S_Age  +     1.63573967285806 * S_Frq
2337791   +          +     -0.1930098634567 * S_Income  +    -0.43173926207337 *
2337792   +        S_Kidhome  +    -0.45239271926178 * S_Mnt  +    -0.14139816383874 *
2337793   +        S_MntFishProducts  +    -0.70568635660703 * S_MntFruits
2337794   +          +     1.68796268038024 * S_MntGoldProds  +     0.80481626355934 *
2337795   +        S_MntMeatProducts  +     0.29831384975096 * S_MntSweetProducts
2337796   +          +    -0.50792336172825 * S_MntWines  +     0.80425149159678 *
2337797   +        S_MonthsAsCustomer  +    -2.26171302044375 * S_NumCatalogPurchases
2337798   +          +     1.30167361451945 * S_NumDealsPurchases
2337799   +          +     1.45457613716235 * S_NumDistPurchases
2337800   +          +    -0.40226463685252 * S_NumStorePurchases
2337801   +          +     0.36369161683572 * S_NumWebPurchases
2337802   +          +    -2.65684851610403 * S_NumWebVisitsMonth
2337803   +          +    -1.14810413235545 * S_RFMstat  +       1.291857215261 *
2337804   +        S_RMntFrq  +     1.36572595403825 * S_Recency
2337805   +          +    -0.54958418574963 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.70159995537759 * S_AcceptedCmpTotal + -0.70199351793792 * 
S_Age + 1.63573967285806 * S_Frq + -0.1930098634567 * S_Income + -0.43173926207337 * S_Kidhome 
+ -0.45239271926178 * S_Mnt + -0.14139816383874 * S_MntFishProducts + -0.70568635660703 * 
S_MntFruits + 1.68796268038024 * S_MntGoldProds + 0.80481626355934 * S_MntMeatProducts + 
0.29831384975096 * S_MntSweetProducts + -0.50792336172825 * S_MntWines + 0.80425149159678 * 
S_MonthsAsCustomer + -2.26171302044375 * S_NumCatalogPurchases + 1.30167361451945 * 
S_NumDealsPurchases + 1.45457613716235 * S_NumDistPurchases + -0.40226463685252 * 
S_NumStorePurchases + 0.36369161683572 * S_NumWebPurchases + -2.65684851610403 * 
S_NumWebVisitsMonth + -1.14810413235545 * S_RFMstat + 1.291857215261 * S_RMntFrq + 
1.36572595403825 * S_Recency + -0.54958418574963 * S_Teenhome ;
2337806   +   H1x2_5  =    -1.00456225444665 * S_AcceptedCmpTotal
2337807   +          +     0.19033874303798 * S_Age  +    -0.62578451616415 * S_Frq
2337808   +          +    -0.96647190269426 * S_Income  +     1.77002676974464 *
2337809   +        S_Kidhome  +    -0.53816249322166 * S_Mnt  +     0.21322270253871 *
2337810   +        S_MntFishProducts  +     0.84210241961105 * S_MntFruits
2337811   +          +     0.44153678515007 * S_MntGoldProds  +    -0.23120999196747 *
2337812   +        S_MntMeatProducts  +     0.62950730283125 * S_MntSweetProducts
2337813   +          +    -0.64043011108056 * S_MntWines  +    -2.74922907599662 *
2337814   +        S_MonthsAsCustomer  +     0.67939322758717 * S_NumCatalogPurchases
2337815   +          +    -0.54572162665338 * S_NumDealsPurchases
2337816   +          +      0.9607390449318 * S_NumDistPurchases
2337817   +          +    -0.03259470545754 * S_NumStorePurchases
2337818   +          +     0.19202241423412 * S_NumWebPurchases
2337819   +          +     0.61085831658456 * S_NumWebVisitsMonth
2337820   +          +    -0.08582160429243 * S_RFMstat  +     1.73862452808565 *
2337821   +        S_RMntFrq  +    -0.01216476188714 * S_Recency
2337822   +          +     -0.3304403270473 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.00456225444665 * S_AcceptedCmpTotal + 0.19033874303798 * 
S_Age + -0.62578451616415 * S_Frq + -0.96647190269426 * S_Income + 1.77002676974464 * 
S_Kidhome + -0.53816249322166 * S_Mnt + 0.21322270253871 * S_MntFishProducts + 
0.84210241961105 * S_MntFruits + 0.44153678515007 * S_MntGoldProds + -0.23120999196747 * 
S_MntMeatProducts + 0.62950730283125 * S_MntSweetProducts + -0.64043011108056 * S_MntWines + 
-2.74922907599662 * S_MonthsAsCustomer + 0.67939322758717 * S_NumCatalogPurchases + 
-0.54572162665338 * S_NumDealsPurchases + 0.9607390449318 * S_NumDistPurchases + 
-0.03259470545754 * S_NumStorePurchases + 0.19202241423412 * S_NumWebPurchases + 
0.61085831658456 * S_NumWebVisitsMonth + -0.08582160429243 * S_RFMstat + 1.73862452808565 * 
S_RMntFrq + -0.01216476188714 * S_Recency + -0.3304403270473 * S_Teenhome ;
2337823   +   H1x2_1  = H1x2_1  +     0.83453601566539 * AcceptedCmp10
2337824   +          +     0.59109136511077 * AcceptedCmp20  +     -0.9669340701943 *
2337825   +        AcceptedCmp30  +    -2.31468262956126 * AcceptedCmp40
2337826   +          +    -0.76277791850069 * AcceptedCmp50  +     0.30895289981412 *
2337827   +        Complain0  +       0.147233855837 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.83453601566539 * AcceptedCmp10 + 0.59109136511077 * 
AcceptedCmp20 + -0.9669340701943 * AcceptedCmp30 + -2.31468262956126 * AcceptedCmp40 + 
-0.76277791850069 * AcceptedCmp50 + 0.30895289981412 * Complain0 + 0.147233855837 * 
HigherEducationBinary0 ;
2337828   +   H1x2_2  = H1x2_2  +     0.42789425545567 * AcceptedCmp10
2337829   +          +     0.08505833889085 * AcceptedCmp20  +    -1.15112188313855 *
2337830   +        AcceptedCmp30  +    -1.24362486486214 * AcceptedCmp40
2337831   +          +     0.04131419116048 * AcceptedCmp50  +    -0.45255799355317 *
2337832   +        Complain0  +    -0.32616423192953 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.42789425545567 * AcceptedCmp10 + 0.08505833889085 * 
AcceptedCmp20 + -1.15112188313855 * AcceptedCmp30 + -1.24362486486214 * AcceptedCmp40 + 
0.04131419116048 * AcceptedCmp50 + -0.45255799355317 * Complain0 + -0.32616423192953 * 
HigherEducationBinary0 ;
2337833   +   H1x2_3  = H1x2_3  +    -0.03136360497649 * AcceptedCmp10
2337834   +          +     0.33867713207886 * AcceptedCmp20  +     0.05809342990544 *
2337835   +        AcceptedCmp30  +    -0.06416815079894 * AcceptedCmp40
2337836   +          +     1.14617960682421 * AcceptedCmp50  +    -0.82461320336041 *
2337837   +        Complain0  +     0.58944444655621 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.03136360497649 * AcceptedCmp10 + 0.33867713207886 * 
AcceptedCmp20 + 0.05809342990544 * AcceptedCmp30 + -0.06416815079894 * AcceptedCmp40 + 
1.14617960682421 * AcceptedCmp50 + -0.82461320336041 * Complain0 + 0.58944444655621 * 
HigherEducationBinary0 ;
2337838   +   H1x2_4  = H1x2_4  +    -1.12705500616438 * AcceptedCmp10
2337839   +          +      0.0487863004734 * AcceptedCmp20  +     1.30229008593765 *
2337840   +        AcceptedCmp30  +      0.1726718549662 * AcceptedCmp40
2337841   +          +     0.68443569845295 * AcceptedCmp50  +     2.39733248962228 *
2337842   +        Complain0  +      -0.620937291929 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.12705500616438 * AcceptedCmp10 + 0.0487863004734 * 
AcceptedCmp20 + 1.30229008593765 * AcceptedCmp30 + 0.1726718549662 * AcceptedCmp40 + 
0.68443569845295 * AcceptedCmp50 + 2.39733248962228 * Complain0 + -0.620937291929 * 
HigherEducationBinary0 ;
2337843   +   H1x2_5  = H1x2_5  +     1.42400460803453 * AcceptedCmp10
2337844   +          +    -1.22361480936625 * AcceptedCmp20  +     1.31090186367202 *
2337845   +        AcceptedCmp30  +    -1.40343404818254 * AcceptedCmp40
2337846   +          +    -0.57377230862494 * AcceptedCmp50  +     0.58622740778295 *
2337847   +        Complain0  +    -0.83222074319962 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.42400460803453 * AcceptedCmp10 + -1.22361480936625 * 
AcceptedCmp20 + 1.31090186367202 * AcceptedCmp30 + -1.40343404818254 * AcceptedCmp40 + 
-0.57377230862494 * AcceptedCmp50 + 0.58622740778295 * Complain0 + -0.83222074319962 * 
HigherEducationBinary0 ;
2337848   +   H1x2_1  = H1x2_1  +     1.56508379719546 * Education2n_Cycle
2337849   +          +     0.52302987210661 * EducationBasic  +     -0.0570045326497 *
2337850   +        EducationGraduation  +    -0.01838790774804 * EducationMaster
2337851   +          +    -2.32430245081383 * Marital_StatusDivorced
2337852   +          +    -0.09815511356796 * Marital_StatusMarried
2337853   +          +     0.13075504294551 * Marital_StatusSingle
2337854   +          +     -0.0278875765201 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.56508379719546 * Education2n_Cycle + 
0.52302987210661 * EducationBasic + -0.0570045326497 * EducationGraduation + -0.01838790774804 
* EducationMaster + -2.32430245081383 * Marital_StatusDivorced + -0.09815511356796 * 
Marital_StatusMarried + 0.13075504294551 * Marital_StatusSingle + -0.0278875765201 * 
Marital_StatusTogether ;
2337855   +   H1x2_2  = H1x2_2  +    -0.85592920992847 * Education2n_Cycle
2337856   +          +     0.93272618259957 * EducationBasic  +     0.48987674771079 *
2337857   +        EducationGraduation  +    -1.12454002820451 * EducationMaster
2337858   +          +    -0.65574603869224 * Marital_StatusDivorced
2337859   +          +     1.54672472575294 * Marital_StatusMarried
2337860   +          +    -1.59817602340208 * Marital_StatusSingle
2337861   +          +     1.94381954546813 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.85592920992847 * Education2n_Cycle + 
0.93272618259957 * EducationBasic + 0.48987674771079 * EducationGraduation + -1.12454002820451 
* EducationMaster + -0.65574603869224 * Marital_StatusDivorced + 1.54672472575294 * 
Marital_StatusMarried + -1.59817602340208 * Marital_StatusSingle + 1.94381954546813 * 
Marital_StatusTogether ;
2337862   +   H1x2_3  = H1x2_3  +     0.37093371596523 * Education2n_Cycle
2337863   +          +    -2.05531065359129 * EducationBasic  +     1.16090743585078 *
2337864   +        EducationGraduation  +     0.87547303889444 * EducationMaster
2337865   +          +    -0.50911604604781 * Marital_StatusDivorced
2337866   +          +     0.30403066135719 * Marital_StatusMarried
2337867   +          +      0.1026950879545 * Marital_StatusSingle
2337868   +          +     0.01000166524405 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.37093371596523 * Education2n_Cycle + 
-2.05531065359129 * EducationBasic + 1.16090743585078 * EducationGraduation + 0.87547303889444 
* EducationMaster + -0.50911604604781 * Marital_StatusDivorced + 0.30403066135719 * 
Marital_StatusMarried + 0.1026950879545 * Marital_StatusSingle + 0.01000166524405 * 
Marital_StatusTogether ;
2337869   +   H1x2_4  = H1x2_4  +     1.28509086202466 * Education2n_Cycle
2337870   +          +     0.07860157688162 * EducationBasic  +     0.24607672351689 *
2337871   +        EducationGraduation  +    -0.06009602645566 * EducationMaster
2337872   +          +     1.07371507133318 * Marital_StatusDivorced
2337873   +          +    -0.07097334129051 * Marital_StatusMarried
2337874   +          +    -0.48339718568621 * Marital_StatusSingle
2337875   +          +    -0.08900780355835 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.28509086202466 * Education2n_Cycle + 
0.07860157688162 * EducationBasic + 0.24607672351689 * EducationGraduation + -0.06009602645566 
* EducationMaster + 1.07371507133318 * Marital_StatusDivorced + -0.07097334129051 * 
Marital_StatusMarried + -0.48339718568621 * Marital_StatusSingle + -0.08900780355835 * 
Marital_StatusTogether ;
2337876   +   H1x2_5  = H1x2_5  +    -1.08109633810919 * Education2n_Cycle
2337877   +          +    -0.54966585100103 * EducationBasic  +      0.5388683065169 *
2337878   +        EducationGraduation  +     0.46960055830119 * EducationMaster
2337879   +          +     1.04342893515504 * Marital_StatusDivorced
2337880   +          +     1.16171312085032 * Marital_StatusMarried
2337881   +          +    -0.30201646939913 * Marital_StatusSingle
2337882   +          +     1.84122645884771 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -1.08109633810919 * Education2n_Cycle + 
-0.54966585100103 * EducationBasic + 0.5388683065169 * EducationGraduation + 0.46960055830119 
* EducationMaster + 1.04342893515504 * Marital_StatusDivorced + 1.16171312085032 * 
Marital_StatusMarried + -0.30201646939913 * Marital_StatusSingle + 1.84122645884771 * 
Marital_StatusTogether ;
2337883   +   H1x2_1  =     1.56970796025332 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.56970796025332 + H1x2_1 ;
2337884   +   H1x2_2  =    -0.11766478836824 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.11766478836824 + H1x2_2 ;
2337885   +   H1x2_3  =    -2.78218653641036 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -2.78218653641036 + H1x2_3 ;
2337886   +   H1x2_4  =     0.51979515224467 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.51979515224467 + H1x2_4 ;
2337887   +   H1x2_5  =     -0.4635890987824 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.4635890987824 + H1x2_5 ;
2337888   +END;
MPRINT(EM_DIAGRAM):   END;
2337889   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2337890   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2337891   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2337892   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2337893   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2337894   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2337895   +END;
MPRINT(EM_DIAGRAM):   END;
2337896   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2337897   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2337898   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2337899   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2337900   +   H1x3_1  =     0.04411772880581 * S_AcceptedCmpTotal
2337901   +          +    -1.62725197326682 * S_Age  +    -1.99668213406033 * S_Frq
2337902   +          +     -1.2265241921112 * S_Income  +     1.99702869958035 *
2337903   +        S_Kidhome  +    -1.46762539068512 * S_Mnt  +     0.97784534044189 *
2337904   +        S_MntFishProducts  +    -1.07945265688497 * S_MntFruits
2337905   +          +     2.09306294956674 * S_MntGoldProds  +     1.46219664114361 *
2337906   +        S_MntMeatProducts  +     0.10961158671991 * S_MntSweetProducts
2337907   +          +     2.03040669273977 * S_MntWines  +     0.16536646017211 *
2337908   +        S_MonthsAsCustomer  +    -0.88077951545076 * S_NumCatalogPurchases
2337909   +          +     1.32256781010645 * S_NumDealsPurchases
2337910   +          +    -1.43015438973619 * S_NumDistPurchases
2337911   +          +    -0.63489289584421 * S_NumStorePurchases
2337912   +          +     0.90508699686841 * S_NumWebPurchases
2337913   +          +    -2.24234858061014 * S_NumWebVisitsMonth
2337914   +          +     -2.9988027991146 * S_RFMstat  +     0.35987461993699 *
2337915   +        S_RMntFrq  +    -1.09317668626142 * S_Recency
2337916   +          +    -1.09925349438658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.04411772880581 * S_AcceptedCmpTotal + -1.62725197326682 * 
S_Age + -1.99668213406033 * S_Frq + -1.2265241921112 * S_Income + 1.99702869958035 * S_Kidhome 
+ -1.46762539068512 * S_Mnt + 0.97784534044189 * S_MntFishProducts + -1.07945265688497 * 
S_MntFruits + 2.09306294956674 * S_MntGoldProds + 1.46219664114361 * S_MntMeatProducts + 
0.10961158671991 * S_MntSweetProducts + 2.03040669273977 * S_MntWines + 0.16536646017211 * 
S_MonthsAsCustomer + -0.88077951545076 * S_NumCatalogPurchases + 1.32256781010645 * 
S_NumDealsPurchases + -1.43015438973619 * S_NumDistPurchases + -0.63489289584421 * 
S_NumStorePurchases + 0.90508699686841 * S_NumWebPurchases + -2.24234858061014 * 
S_NumWebVisitsMonth + -2.9988027991146 * S_RFMstat + 0.35987461993699 * S_RMntFrq + 
-1.09317668626142 * S_Recency + -1.09925349438658 * S_Teenhome ;
2337917   +   H1x3_2  =     0.10522923391314 * S_AcceptedCmpTotal
2337918   +          +     0.68417479453112 * S_Age  +     0.46966162186743 * S_Frq
2337919   +          +    -1.21537535753115 * S_Income  +    -1.87423294109672 *
2337920   +        S_Kidhome  +     0.76913864731495 * S_Mnt  +     1.08535778796502 *
2337921   +        S_MntFishProducts  +     1.27743864099826 * S_MntFruits
2337922   +          +     -0.3186089651882 * S_MntGoldProds  +    -0.00224333051647 *
2337923   +        S_MntMeatProducts  +    -1.28169616734092 * S_MntSweetProducts
2337924   +          +     1.67350500234032 * S_MntWines  +     1.09584504562467 *
2337925   +        S_MonthsAsCustomer  +    -1.45467876727494 * S_NumCatalogPurchases
2337926   +          +     0.85965187264096 * S_NumDealsPurchases
2337927   +          +    -1.15239933286756 * S_NumDistPurchases
2337928   +          +     1.20800889102387 * S_NumStorePurchases
2337929   +          +     1.08790389130242 * S_NumWebPurchases
2337930   +          +    -0.13665551161149 * S_NumWebVisitsMonth
2337931   +          +     1.02103499612659 * S_RFMstat  +    -0.12980097143044 *
2337932   +        S_RMntFrq  +     0.65854311654256 * S_Recency
2337933   +          +    -0.60999209572192 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.10522923391314 * S_AcceptedCmpTotal + 0.68417479453112 * 
S_Age + 0.46966162186743 * S_Frq + -1.21537535753115 * S_Income + -1.87423294109672 * 
S_Kidhome + 0.76913864731495 * S_Mnt + 1.08535778796502 * S_MntFishProducts + 1.27743864099826 
* S_MntFruits + -0.3186089651882 * S_MntGoldProds + -0.00224333051647 * S_MntMeatProducts + 
-1.28169616734092 * S_MntSweetProducts + 1.67350500234032 * S_MntWines + 1.09584504562467 * 
S_MonthsAsCustomer + -1.45467876727494 * S_NumCatalogPurchases + 0.85965187264096 * 
S_NumDealsPurchases + -1.15239933286756 * S_NumDistPurchases + 1.20800889102387 * 
S_NumStorePurchases + 1.08790389130242 * S_NumWebPurchases + -0.13665551161149 * 
S_NumWebVisitsMonth + 1.02103499612659 * S_RFMstat + -0.12980097143044 * S_RMntFrq + 
0.65854311654256 * S_Recency + -0.60999209572192 * S_Teenhome ;
2337934   +   H1x3_3  =    -0.72575004293074 * S_AcceptedCmpTotal
2337935   +          +     0.34932839743259 * S_Age  +     -0.2673460618328 * S_Frq
2337936   +          +     0.25743187687481 * S_Income  +    -0.02172890929346 *
2337937   +        S_Kidhome  +     1.21785656626837 * S_Mnt  +     0.37454359336223 *
2337938   +        S_MntFishProducts  +    -0.32600053706408 * S_MntFruits
2337939   +          +     0.57807148940534 * S_MntGoldProds  +     1.14736546512366 *
2337940   +        S_MntMeatProducts  +    -1.41517082393978 * S_MntSweetProducts
2337941   +          +    -1.44899595080061 * S_MntWines  +    -1.45520867126531 *
2337942   +        S_MonthsAsCustomer  +    -0.33372174099196 * S_NumCatalogPurchases
2337943   +          +     -0.5767607129654 * S_NumDealsPurchases
2337944   +          +     -0.2643921429796 * S_NumDistPurchases
2337945   +          +    -0.67417489911206 * S_NumStorePurchases
2337946   +          +    -0.51423877684891 * S_NumWebPurchases
2337947   +          +     1.40328299605176 * S_NumWebVisitsMonth
2337948   +          +     1.35588787174957 * S_RFMstat  +     1.98416436137119 *
2337949   +        S_RMntFrq  +     -0.8447362450681 * S_Recency
2337950   +          +    -1.04372961736437 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.72575004293074 * S_AcceptedCmpTotal + 0.34932839743259 * 
S_Age + -0.2673460618328 * S_Frq + 0.25743187687481 * S_Income + -0.02172890929346 * S_Kidhome 
+ 1.21785656626837 * S_Mnt + 0.37454359336223 * S_MntFishProducts + -0.32600053706408 * 
S_MntFruits + 0.57807148940534 * S_MntGoldProds + 1.14736546512366 * S_MntMeatProducts + 
-1.41517082393978 * S_MntSweetProducts + -1.44899595080061 * S_MntWines + -1.45520867126531 * 
S_MonthsAsCustomer + -0.33372174099196 * S_NumCatalogPurchases + -0.5767607129654 * 
S_NumDealsPurchases + -0.2643921429796 * S_NumDistPurchases + -0.67417489911206 * 
S_NumStorePurchases + -0.51423877684891 * S_NumWebPurchases + 1.40328299605176 * 
S_NumWebVisitsMonth + 1.35588787174957 * S_RFMstat + 1.98416436137119 * S_RMntFrq + 
-0.8447362450681 * S_Recency + -1.04372961736437 * S_Teenhome ;
2337951   +   H1x3_4  =     0.05745684959388 * S_AcceptedCmpTotal
2337952   +          +    -0.71077680161454 * S_Age  +      1.4854566142375 * S_Frq
2337953   +          +    -0.32870416928843 * S_Income  +    -0.24944295149087 *
2337954   +        S_Kidhome  +     -0.8312409740431 * S_Mnt  +    -0.09638646505384 *
2337955   +        S_MntFishProducts  +    -0.86550491354678 * S_MntFruits
2337956   +          +     1.46902858697296 * S_MntGoldProds  +      0.3661164136841 *
2337957   +        S_MntMeatProducts  +     0.43108270077708 * S_MntSweetProducts
2337958   +          +    -0.87140466249616 * S_MntWines  +     0.17511224898094 *
2337959   +        S_MonthsAsCustomer  +    -2.66256923117027 * S_NumCatalogPurchases
2337960   +          +      1.2821617657076 * S_NumDealsPurchases
2337961   +          +     1.26584115202735 * S_NumDistPurchases
2337962   +          +    -0.46597664211833 * S_NumStorePurchases
2337963   +          +     0.45652363472866 * S_NumWebPurchases
2337964   +          +    -2.66296112021252 * S_NumWebVisitsMonth
2337965   +          +    -0.86670667018974 * S_RFMstat  +     0.60866041131732 *
2337966   +        S_RMntFrq  +     1.31886754707923 * S_Recency
2337967   +          +    -0.09949653139413 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.05745684959388 * S_AcceptedCmpTotal + -0.71077680161454 * 
S_Age + 1.4854566142375 * S_Frq + -0.32870416928843 * S_Income + -0.24944295149087 * S_Kidhome 
+ -0.8312409740431 * S_Mnt + -0.09638646505384 * S_MntFishProducts + -0.86550491354678 * 
S_MntFruits + 1.46902858697296 * S_MntGoldProds + 0.3661164136841 * S_MntMeatProducts + 
0.43108270077708 * S_MntSweetProducts + -0.87140466249616 * S_MntWines + 0.17511224898094 * 
S_MonthsAsCustomer + -2.66256923117027 * S_NumCatalogPurchases + 1.2821617657076 * 
S_NumDealsPurchases + 1.26584115202735 * S_NumDistPurchases + -0.46597664211833 * 
S_NumStorePurchases + 0.45652363472866 * S_NumWebPurchases + -2.66296112021252 * 
S_NumWebVisitsMonth + -0.86670667018974 * S_RFMstat + 0.60866041131732 * S_RMntFrq + 
1.31886754707923 * S_Recency + -0.09949653139413 * S_Teenhome ;
2337968   +   H1x3_5  =    -0.66850525418144 * S_AcceptedCmpTotal
2337969   +          +     0.14331320698516 * S_Age  +    -0.82708146094779 * S_Frq
2337970   +          +    -0.95718847240937 * S_Income  +     1.37375648833049 *
2337971   +        S_Kidhome  +    -0.48314397401233 * S_Mnt  +     0.07047324834759 *
2337972   +        S_MntFishProducts  +     0.86114312801139 * S_MntFruits
2337973   +          +     0.54573348379533 * S_MntGoldProds  +    -0.05966372249273 *
2337974   +        S_MntMeatProducts  +     0.47275063848217 * S_MntSweetProducts
2337975   +          +    -0.62962007155261 * S_MntWines  +    -2.38081462831488 *
2337976   +        S_MonthsAsCustomer  +     0.56594272689824 * S_NumCatalogPurchases
2337977   +          +    -0.85162564171681 * S_NumDealsPurchases
2337978   +          +     0.64631099667221 * S_NumDistPurchases
2337979   +          +    -0.03081963858636 * S_NumStorePurchases
2337980   +          +    -0.24124717624664 * S_NumWebPurchases
2337981   +          +     0.56425980772372 * S_NumWebVisitsMonth
2337982   +          +    -0.32254616624678 * S_RFMstat  +     1.84875225899832 *
2337983   +        S_RMntFrq  +     0.08133312388911 * S_Recency
2337984   +          +    -0.19004451996479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.66850525418144 * S_AcceptedCmpTotal + 0.14331320698516 * 
S_Age + -0.82708146094779 * S_Frq + -0.95718847240937 * S_Income + 1.37375648833049 * 
S_Kidhome + -0.48314397401233 * S_Mnt + 0.07047324834759 * S_MntFishProducts + 
0.86114312801139 * S_MntFruits + 0.54573348379533 * S_MntGoldProds + -0.05966372249273 * 
S_MntMeatProducts + 0.47275063848217 * S_MntSweetProducts + -0.62962007155261 * S_MntWines + 
-2.38081462831488 * S_MonthsAsCustomer + 0.56594272689824 * S_NumCatalogPurchases + 
-0.85162564171681 * S_NumDealsPurchases + 0.64631099667221 * S_NumDistPurchases + 
-0.03081963858636 * S_NumStorePurchases + -0.24124717624664 * S_NumWebPurchases + 
0.56425980772372 * S_NumWebVisitsMonth + -0.32254616624678 * S_RFMstat + 1.84875225899832 * 
S_RMntFrq + 0.08133312388911 * S_Recency + -0.19004451996479 * S_Teenhome ;
2337985   +   H1x3_1  = H1x3_1  +     1.03487942320068 * AcceptedCmp10
2337986   +          +     0.77723443135875 * AcceptedCmp20  +    -1.04686858569959 *
2337987   +        AcceptedCmp30  +    -1.87852311800194 * AcceptedCmp40
2337988   +          +    -0.69838759011672 * AcceptedCmp50  +     0.50242045854463 *
2337989   +        Complain0  +    -0.13339808164255 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.03487942320068 * AcceptedCmp10 + 0.77723443135875 * 
AcceptedCmp20 + -1.04686858569959 * AcceptedCmp30 + -1.87852311800194 * AcceptedCmp40 + 
-0.69838759011672 * AcceptedCmp50 + 0.50242045854463 * Complain0 + -0.13339808164255 * 
HigherEducationBinary0 ;
2337990   +   H1x3_2  = H1x3_2  +     0.39887299789564 * AcceptedCmp10
2337991   +          +     0.12293700562648 * AcceptedCmp20  +    -1.41656670681309 *
2337992   +        AcceptedCmp30  +    -1.04607557362847 * AcceptedCmp40
2337993   +          +     0.02824649030864 * AcceptedCmp50  +    -0.46581865837196 *
2337994   +        Complain0  +    -0.45913631308543 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.39887299789564 * AcceptedCmp10 + 0.12293700562648 * 
AcceptedCmp20 + -1.41656670681309 * AcceptedCmp30 + -1.04607557362847 * AcceptedCmp40 + 
0.02824649030864 * AcceptedCmp50 + -0.46581865837196 * Complain0 + -0.45913631308543 * 
HigherEducationBinary0 ;
2337995   +   H1x3_3  = H1x3_3  +     0.20672868292414 * AcceptedCmp10
2337996   +          +     0.52082182457868 * AcceptedCmp20  +     0.54911826263592 *
2337997   +        AcceptedCmp30  +    -0.02400616289922 * AcceptedCmp40
2337998   +          +     1.22209744911863 * AcceptedCmp50  +    -0.68243413694538 *
2337999   +        Complain0  +     0.15620895311704 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.20672868292414 * AcceptedCmp10 + 0.52082182457868 * 
AcceptedCmp20 + 0.54911826263592 * AcceptedCmp30 + -0.02400616289922 * AcceptedCmp40 + 
1.22209744911863 * AcceptedCmp50 + -0.68243413694538 * Complain0 + 0.15620895311704 * 
HigherEducationBinary0 ;
2338000   +   H1x3_4  = H1x3_4  +    -0.88269820758187 * AcceptedCmp10
2338001   +          +    -0.19276892535938 * AcceptedCmp20  +     1.26789056018511 *
2338002   +        AcceptedCmp30  +     0.04396979158385 * AcceptedCmp40
2338003   +          +     0.54194186871284 * AcceptedCmp50  +     2.07766091697967 *
2338004   +        Complain0  +    -0.43514178858246 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.88269820758187 * AcceptedCmp10 + -0.19276892535938 
* AcceptedCmp20 + 1.26789056018511 * AcceptedCmp30 + 0.04396979158385 * AcceptedCmp40 + 
0.54194186871284 * AcceptedCmp50 + 2.07766091697967 * Complain0 + -0.43514178858246 * 
HigherEducationBinary0 ;
2338005   +   H1x3_5  = H1x3_5  +     1.04303179873707 * AcceptedCmp10
2338006   +          +    -1.29742389809739 * AcceptedCmp20  +     1.21708533617895 *
2338007   +        AcceptedCmp30  +    -1.47807634614974 * AcceptedCmp40
2338008   +          +     -0.7694244559597 * AcceptedCmp50  +     0.51798162453723 *
2338009   +        Complain0  +    -0.95513113905832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 1.04303179873707 * AcceptedCmp10 + -1.29742389809739 * 
AcceptedCmp20 + 1.21708533617895 * AcceptedCmp30 + -1.47807634614974 * AcceptedCmp40 + 
-0.7694244559597 * AcceptedCmp50 + 0.51798162453723 * Complain0 + -0.95513113905832 * 
HigherEducationBinary0 ;
2338010   +   H1x3_1  = H1x3_1  +     1.27822716215014 * Education2n_Cycle
2338011   +          +     0.45900505383383 * EducationBasic  +    -0.35822992758656 *
2338012   +        EducationGraduation  +     0.05949934527868 * EducationMaster
2338013   +          +    -2.49973437075558 * Marital_StatusDivorced
2338014   +          +    -0.18076948182574 * Marital_StatusMarried
2338015   +          +     0.13498525495231 * Marital_StatusSingle
2338016   +          +    -0.02365465636052 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.27822716215014 * Education2n_Cycle + 
0.45900505383383 * EducationBasic + -0.35822992758656 * EducationGraduation + 0.05949934527868 
* EducationMaster + -2.49973437075558 * Marital_StatusDivorced + -0.18076948182574 * 
Marital_StatusMarried + 0.13498525495231 * Marital_StatusSingle + -0.02365465636052 * 
Marital_StatusTogether ;
2338017   +   H1x3_2  = H1x3_2  +    -1.14981446246051 * Education2n_Cycle
2338018   +          +     0.68006996858541 * EducationBasic  +    -0.06493857044709 *
2338019   +        EducationGraduation  +    -1.22462805502453 * EducationMaster
2338020   +          +       -0.59463732835 * Marital_StatusDivorced
2338021   +          +     1.37741332427598 * Marital_StatusMarried
2338022   +          +     -1.5833455713231 * Marital_StatusSingle
2338023   +          +     1.79205360628448 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -1.14981446246051 * Education2n_Cycle + 
0.68006996858541 * EducationBasic + -0.06493857044709 * EducationGraduation + 
-1.22462805502453 * EducationMaster + -0.59463732835 * Marital_StatusDivorced + 
1.37741332427598 * Marital_StatusMarried + -1.5833455713231 * Marital_StatusSingle + 
1.79205360628448 * Marital_StatusTogether ;
2338024   +   H1x3_3  = H1x3_3  +     0.17779609626753 * Education2n_Cycle
2338025   +          +    -2.22704675950779 * EducationBasic  +     1.30292325944162 *
2338026   +        EducationGraduation  +     0.68083131423474 * EducationMaster
2338027   +          +    -0.44569556289443 * Marital_StatusDivorced
2338028   +          +     0.29918053103557 * Marital_StatusMarried
2338029   +          +    -0.10337314064224 * Marital_StatusSingle
2338030   +          +     0.04054221993299 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.17779609626753 * Education2n_Cycle + 
-2.22704675950779 * EducationBasic + 1.30292325944162 * EducationGraduation + 0.68083131423474 
* EducationMaster + -0.44569556289443 * Marital_StatusDivorced + 0.29918053103557 * 
Marital_StatusMarried + -0.10337314064224 * Marital_StatusSingle + 0.04054221993299 * 
Marital_StatusTogether ;
2338031   +   H1x3_4  = H1x3_4  +     1.16412985277542 * Education2n_Cycle
2338032   +          +     0.18806330813344 * EducationBasic  +     0.00212145829045 *
2338033   +        EducationGraduation  +     0.00087354662697 * EducationMaster
2338034   +          +     1.13881957277462 * Marital_StatusDivorced
2338035   +          +    -0.35849807146313 * Marital_StatusMarried
2338036   +          +    -0.22168731316885 * Marital_StatusSingle
2338037   +          +    -0.22672306263461 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 1.16412985277542 * Education2n_Cycle + 
0.18806330813344 * EducationBasic + 0.00212145829045 * EducationGraduation + 0.00087354662697 
* EducationMaster + 1.13881957277462 * Marital_StatusDivorced + -0.35849807146313 * 
Marital_StatusMarried + -0.22168731316885 * Marital_StatusSingle + -0.22672306263461 * 
Marital_StatusTogether ;
2338038   +   H1x3_5  = H1x3_5  +    -1.25195599938207 * Education2n_Cycle
2338039   +          +    -0.60946428681789 * EducationBasic  +     0.39993500009227 *
2338040   +        EducationGraduation  +     0.43730905987249 * EducationMaster
2338041   +          +     1.10774969923269 * Marital_StatusDivorced
2338042   +          +     1.08409594073043 * Marital_StatusMarried
2338043   +          +    -0.33145048007894 * Marital_StatusSingle
2338044   +          +     1.68703837664761 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.25195599938207 * Education2n_Cycle + 
-0.60946428681789 * EducationBasic + 0.39993500009227 * EducationGraduation + 0.43730905987249 
* EducationMaster + 1.10774969923269 * Marital_StatusDivorced + 1.08409594073043 * 
Marital_StatusMarried + -0.33145048007894 * Marital_StatusSingle + 1.68703837664761 * 
Marital_StatusTogether ;
2338045   +   H1x3_1  =     1.76093149538288 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.76093149538288 + H1x3_1 ;
2338046   +   H1x3_2  =    -0.11243980195421 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.11243980195421 + H1x3_2 ;
2338047   +   H1x3_3  =    -2.59474781862449 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -2.59474781862449 + H1x3_3 ;
2338048   +   H1x3_4  =     0.25376473610258 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.25376473610258 + H1x3_4 ;
2338049   +   H1x3_5  =    -0.54808648261397 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.54808648261397 + H1x3_5 ;
2338050   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2338051   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2338052   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2338053   +   IF H1x3_1  < _REC_EPS AND H1x3_1  > - _REC_EPS THEN
2338054   +   H1x3_1  = H1x3_1  * H1x3_1 ;
MPRINT(EM_DIAGRAM):   IF H1x3_1 < _REC_EPS AND H1x3_1 > - _REC_EPS THEN H1x3_1 = H1x3_1 * 
H1x3_1 ;
2338055   +   ELSE H1x3_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_1 = _REC_EPS ;
2338056   +   IF H1x3_2  < _REC_EPS AND H1x3_2  > - _REC_EPS THEN
2338057   +   H1x3_2  = H1x3_2  * H1x3_2 ;
MPRINT(EM_DIAGRAM):   IF H1x3_2 < _REC_EPS AND H1x3_2 > - _REC_EPS THEN H1x3_2 = H1x3_2 * 
H1x3_2 ;
2338058   +   ELSE H1x3_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_2 = _REC_EPS ;
2338059   +   IF H1x3_3  < _REC_EPS AND H1x3_3  > - _REC_EPS THEN
2338060   +   H1x3_3  = H1x3_3  * H1x3_3 ;
MPRINT(EM_DIAGRAM):   IF H1x3_3 < _REC_EPS AND H1x3_3 > - _REC_EPS THEN H1x3_3 = H1x3_3 * 
H1x3_3 ;
2338061   +   ELSE H1x3_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_3 = _REC_EPS ;
2338062   +   IF H1x3_4  < _REC_EPS AND H1x3_4  > - _REC_EPS THEN
2338063   +   H1x3_4  = H1x3_4  * H1x3_4 ;
MPRINT(EM_DIAGRAM):   IF H1x3_4 < _REC_EPS AND H1x3_4 > - _REC_EPS THEN H1x3_4 = H1x3_4 * 
H1x3_4 ;
2338064   +   ELSE H1x3_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_4 = _REC_EPS ;
2338065   +   IF H1x3_5  < _REC_EPS AND H1x3_5  > - _REC_EPS THEN
2338066   +   H1x3_5  = H1x3_5  * H1x3_5 ;
MPRINT(EM_DIAGRAM):   IF H1x3_5 < _REC_EPS AND H1x3_5 > - _REC_EPS THEN H1x3_5 = H1x3_5 * 
H1x3_5 ;
2338067   +   ELSE H1x3_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_5 = _REC_EPS ;
2338068   +END;
MPRINT(EM_DIAGRAM):   END;
2338069   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2338070   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2338071   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2338072   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
2338073   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
2338074   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
2338075   +END;
MPRINT(EM_DIAGRAM):   END;
2338076   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2338077   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2338078   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2338079   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2338080   +   P_DepVar1  =     12.3694111963696 * H1x1_1  +     -9.1014019341077 * H1x1_2
2338081   +          +    -14.9093780045901 * H1x1_3  +     25.4505756686259 * H1x1_4
2338082   +          +    -13.3798044908382 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 12.3694111963696 * H1x1_1 + -9.1014019341077 * H1x1_2 + 
-14.9093780045901 * H1x1_3 + 25.4505756686259 * H1x1_4 + -13.3798044908382 * H1x1_5 ;
2338083   +   P_DepVar1  = P_DepVar1  +     -0.2373753683635 * H1x2_1
2338084   +          +    -0.03661175538589 * H1x2_2  +     0.29534813812803 * H1x2_3
2338085   +          +     0.11908166898588 * H1x2_4  +      -0.241544638637 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.2373753683635 * H1x2_1 + -0.03661175538589 * 
H1x2_2 + 0.29534813812803 * H1x2_3 + 0.11908166898588 * H1x2_4 + -0.241544638637 * H1x2_5 ;
2338086   +   P_DepVar1  = P_DepVar1  +    -0.00276620815201 * H1x3_1
2338087   +          +     0.00487849269566 * H1x3_2  +     0.01323887261394 * H1x3_3
2338088   +          +     -0.0271389925801 * H1x3_4  +     0.00026595473892 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.00276620815201 * H1x3_1 + 0.00487849269566 * 
H1x3_2 + 0.01323887261394 * H1x3_3 + -0.0271389925801 * H1x3_4 + 0.00026595473892 * H1x3_5 ;
2338089   +   P_DepVar1  =      4.0541137239843 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.0541137239843 + P_DepVar1 ;
2338090   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2338091   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2338092   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2338093   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2338094   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2338095   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2338096   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2338097   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2338098   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2338099   +END;
MPRINT(EM_DIAGRAM):   END;
2338100   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2338101   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2338102   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2338103   +END;
MPRINT(EM_DIAGRAM):   END;
2338104   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2338105   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2338106   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2338107   +END;
MPRINT(EM_DIAGRAM):   END;
2338108   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2338109   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2338110   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2338111   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2338112   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2338113   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2338114   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2338115   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2338116   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2338117   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2338118   +END;
MPRINT(EM_DIAGRAM):   END;
2338119   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2338120   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2338121   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2338122   +drop
2338123   +H1x1_1
2338124   +H1x1_2
2338125   +H1x1_3
2338126   +H1x1_4
2338127   +H1x1_5
2338128   +H1x2_1
2338129   +H1x2_2
2338130   +H1x2_3
2338131   +H1x2_4
2338132   +H1x2_5
2338133   +H1x3_1
2338134   +H1x3_2
2338135   +H1x3_3
2338136   +H1x3_4
2338137   +H1x3_5
2338138   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x2_1 H1x2_2 H1x2_3 H1x2_4 
H1x2_5 H1x3_1 H1x3_2 H1x3_3 H1x3_4 H1x3_5 ;
2338139   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2338140    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2338141    quit;
2338142    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2338143    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2338144    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2338145    retain ID 2 Node "AutoNeural10";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural10";
2338146    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2338147    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4614 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4614 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2338148    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2338149    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2338150    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4614 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4614 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2338151    proc sort data=EMWS8.AutoNeural10_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural10_variableset out=_temp2(keep=NAME 
CREATOR);
2338152    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2338153    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL10_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2338154    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2338155    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2338156    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2338157    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2338158    proc contents data=EMWS8.AutoNeural10_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural10_train out=_meta(keep=NAME) noprint;
2338159    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2338160    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2338161    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2338162    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2338163    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2338164    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2338165    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2338166    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2338167    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2338168    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2338168  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 2263 rows and 5 columns.

2338169    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2338170    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2338171    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 2263 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 2263 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2338172    filename _pref
2338172  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2338173    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2338174    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2338175   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2338176   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2338177   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2338178   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2338179   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2338180   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2338181    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2338182    quit;
2338183    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2338184    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2338185    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2338186    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2338187    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2338188    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2338189    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2338190    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2338191    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2338192    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2338193    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2338194    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2338195    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2338196    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2338197    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2338198    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2338199    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2338200    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2338201    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2338202    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2338203    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2338204    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2338205    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2338206    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2338207    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2338208    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2338209    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2338209  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2338210    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2338211    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2338212    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 2267 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2338213    filename _pref
2338213  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2338214    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2338215    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2338216   +
2338217   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2338218   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2338218  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2338219   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2338220   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2338221   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2338222   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2338223   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2338224    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2338225    quit;
2338226    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2338227    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2338228    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2338229    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2338230    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2338231    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2338232    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2338233    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2338234    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2338235    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2338236    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2338237    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2338238    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2338239    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2338240    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2338241    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2338242    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2338243    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2338244    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2338245    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2338246    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2338247    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2338248    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2338249    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2338250    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2338251    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2338252    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2338252  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2338253    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2338254    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2338255    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 2306 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2338256    filename _pref
2338256  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2338257    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2338258    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2338259   +
2338260   +
2338261   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2338262   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2338263   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2338264   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2338265   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2338266   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2338267   +
2338268   +
2338269   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2338270   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2338271   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2338272   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2338273   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2338274   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2338275   +
2338276   +
2338277   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2338278   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2338279   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2338280   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2338281   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2338282   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2338283   +
2338284   +
2338285   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2338286   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2338287   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2338288   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2338289   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2338290   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2338291   +
2338292   +
2338293   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2338294   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2338295   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2338296   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2338297   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2338298   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2338299   +
2338300   +
2338301   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2338302   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2338303   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2338304   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2338305   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2338306   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2338307   +
2338308   +
2338309   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2338310   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2338311   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2338312   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2338313   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2338314   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2338315   +
2338316   +
2338317   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2338318   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2338319   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2338320   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2338321   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2338322   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2338323   +if
2338324   +_FILTERNORM1 not in ( '.')
2338325   + and
2338326   +_FILTERNORM2 not in ( '.')
2338327   + and
2338328   +_FILTERNORM3 not in ( '.')
2338329   + and
2338330   +_FILTERNORM4 not in ( '.')
2338331   + and
2338332   +_FILTERNORM5 not in ( '.')
2338333   + and
2338334   +_FILTERNORM6 not in ( '.')
2338335   + and
2338336   +_FILTERNORM7 not in ( ' ')
2338337   + and
2338338   +_FILTERNORM8 not in ( ' ')
2338339   +and
2338340   +( Dt_Customer ne .)
2338341   +and ( Income ne . and (Income<=107000))
2338342   +and ( Kidhome ne .)
2338343   +and ( MntFishProducts ne .)
2338344   +and ( MntFruits ne .)
2338345   +and ( MntGoldProds ne .)
2338346   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2338347   +and ( MntSweetProducts ne .)
2338348   +and ( MntWines ne .)
2338349   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2338350   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2338351   +and ( NumStorePurchases ne .)
2338352   +and ( NumWebPurchases ne .)
2338353   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2338354   +and ( Recency ne .)
2338355   +and ( Teenhome ne .)
2338356   +and ( Year_Birth ne .)
2338357   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2338358   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2338359   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2338360   +end;
MPRINT(EM_DIAGRAM):   end;
2338361   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2338362   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2338363    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2338364    quit;
2338365    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2338366    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2338367    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2338368    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2338369    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2338370    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2338371    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2338372    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2338373    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2338374    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2338375    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2338376    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2338377    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2338378    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2338379    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2338380    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2338381    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2338382    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2338383    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2338384    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2338385    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2338386    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2338387    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2338388    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2338389    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2338390    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2338391    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2338391  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2338392    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2338393    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2338394    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 2372 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2338395    %macro varDept(fcmpdata=,id=);
2338396    %global nobs&id scoreFlag&id;
2338397    %let scoreFlag&id = 0;
2338398    %if &id=1 or ^&fcmpStart %then %do;
2338399    proc sort data=&fcmpdata out=_temp&id nodupkey;
2338400    by NAME;
2338401    where id=&id and LHS in( %let j=1;
2338402    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2338403    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2338404    "&var" %let j = %eval(&j+1);
2338405    %end;
2338406    );
2338407    run;
2338408    %let dsid = %sysfunc(open(_temp&id));
2338409    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2338410    %let dsid = %sysfunc(close(&dsid));
2338411    %if &&nobs&id %then %do;
2338412    %let scoreFlag&id = 1;
2338413    %let fcmpStart = 1;
2338414    %end;
2338415    %else %let fcmpStart = 0;
2338416    %end;
2338417    %else %do;
2338418    proc sort data=&fcmpdata out=_tempid;
2338419    where id=&id;
2338420    by LHS;
2338421    run;
2338422    %let dsid = %sysfunc(open(_tempid));
2338423    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2338424    %let dsid = %sysfunc(close(&dsid));
2338425    %if ^&&nobs&id %then %do;
2338426    proc datasets lib=work nolist;
2338427    delete _tempid;
2338428    run;
2338429    quit;
2338430    %end;
2338431    %else %do;
2338432    data _tempAll;
2338433    set %let j=%eval(&id-1);
2338434    %do x=1 %to &j;
2338435    %if &&nobs&x %then %do;
2338436    _temp&x %end;
2338437    %end;
2338438    ;
2338439    run;
2338440    proc sql;
2338441    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2338441  ! work._tempid p2 where p.name=p2.lhs;
2338442    quit;
2338443    data _temp&id;
2338444    set _temp&id;
2338445    where LHS ne '' and NAME ne '' and Node ne '';
2338446    run;
2338447    proc datasets lib=work nolist;
2338448    delete _tempAll;
2338449    run;
2338450    %let dsid = %sysfunc(open(_temp&id));
2338451    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2338452    %let dsid = %sysfunc(close(&dsid));
2338453    %if ^&&nobs&id %then %do;
2338454    proc datasets lib=work nolist;
2338455    delete _temp&id;
2338456    run;
2338457    quit;
2338458    %end;
2338459    %else %do;
2338460    %let scoreFlag&id = 1;
2338461    data _temp&id;
2338462    set _temp&id;
2338463    where LHS ne NAME and node ne '';
2338464    run;
2338465    %let dsid = %sysfunc(open(_temp&id));
2338466    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2338467    %let dsid = %sysfunc(close(&dsid));
2338468    %if ^&&nobs&id %then %do;
2338469    proc datasets lib=work nolist;
2338470    delete _temp&id;
2338471    run;
2338472    quit;
2338473    %end;
2338474    %else %do;
2338475    proc sort data=_temp&id nodupkey;
2338476    by LHS NAME;
2338477    run;
2338478    %end;
2338479    %end;
2338480    %end;
2338481    %end;
2338482    %mend varDept;
2338483    %macro optCode(outdata=fcmpdata);
2338484    %global fcmpStart;
2338485    %let fcmpStart = 0;
2338486    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2338487    %let NumNodes=9;
2338488    %do k=1 %to &NumNodes;
2338489    %vardept(fcmpdata=&outdata, id=&k);
2338490    %end;
2338491    %mend optCode;
2338492    %optcode(outData=EMWS8.Ensmbl38_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2338493    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2338494    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2338495    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2338496    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2338497    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2338498    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2338499    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2338500    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2338501    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2338502    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2338502  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

2338503    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

2338504    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2338505    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2338506    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2338507    filename _pref
2338507  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
2338508    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2338509    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas.
2338510   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2338511   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2338512   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2338513   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2338514   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2338515   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2338516   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2338517   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2338518   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2338519   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2338520   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2338521   +LENGTH _WARN_ $4
2338522   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2338523   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2338524   +
2338525   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2338526   +
2338527   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2338528   +
2338529   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2338530   +
2338531   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2338532   +
2338533   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2338534   +
2338535   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2338536   +
2338537   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2338538   +
2338539   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2338540   +
2338541   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2338542   +
2338543   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2338544   +
2338545   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2338546   +
2338547   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2338548   +
2338549   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2338550   +
2338551   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2338552   +
2338553   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2338554   +
2338555   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2338556   +
2338557   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2338558   +
2338559   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2338560   +
2338561   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2338562   +
2338563   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2338564   +
2338565   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2338566   +
2338567   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2338568   +
2338569   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2338570   +
2338571   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2338572   +
2338573   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2338574   +
2338575   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2338576   +
2338577   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2338578   +
2338579   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2338580   +
2338581   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2338582   +
2338583   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2338584   +
2338585   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2338586   +
2338587   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2338588   +
2338589   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2338590   +
2338591   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2338592   +
2338593   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2338594   +
2338595   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2338596   +
2338597   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2338598   +
2338599   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2338600   +
2338601   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2338602   +
2338603   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2338604   +
2338605   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2338606   +
2338607   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2338608   +
2338609   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2338610   +
2338611   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2338612   +
2338613   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2338614   +
2338615   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2338616   +
2338617   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2338618   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2338619   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2338620   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2338621   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2338622   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2338623   +end;
MPRINT(EM_DIAGRAM):   end;
2338624   +else do;
MPRINT(EM_DIAGRAM):   else do;
2338625   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2338626   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2338627   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2338628   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2338629   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2338630   +   end;
MPRINT(EM_DIAGRAM):   end;
2338631   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2338632   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2338633   +   end;
MPRINT(EM_DIAGRAM):   end;
2338634   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2338635   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2338636   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2338637   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2338638   +   end;
MPRINT(EM_DIAGRAM):   end;
2338639   +end;
MPRINT(EM_DIAGRAM):   end;
2338640   +
2338641   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2338642   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2338643   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2338644   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2338645   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2338646   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2338647   +end;
MPRINT(EM_DIAGRAM):   end;
2338648   +else do;
MPRINT(EM_DIAGRAM):   else do;
2338649   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2338650   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2338651   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2338652   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2338653   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2338654   +   end;
MPRINT(EM_DIAGRAM):   end;
2338655   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2338656   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2338657   +   end;
MPRINT(EM_DIAGRAM):   end;
2338658   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2338659   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2338660   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2338661   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2338662   +   end;
MPRINT(EM_DIAGRAM):   end;
2338663   +end;
MPRINT(EM_DIAGRAM):   end;
2338664   +
2338665   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2338666   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2338667   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2338668   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2338669   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2338670   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2338671   +end;
MPRINT(EM_DIAGRAM):   end;
2338672   +else do;
MPRINT(EM_DIAGRAM):   else do;
2338673   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2338674   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2338675   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2338676   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2338677   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2338678   +   end;
MPRINT(EM_DIAGRAM):   end;
2338679   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2338680   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2338681   +   end;
MPRINT(EM_DIAGRAM):   end;
2338682   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2338683   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2338684   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2338685   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2338686   +   end;
MPRINT(EM_DIAGRAM):   end;
2338687   +end;
MPRINT(EM_DIAGRAM):   end;
2338688   +
2338689   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2338690   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2338691   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2338692   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2338693   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2338694   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2338695   +end;
MPRINT(EM_DIAGRAM):   end;
2338696   +else do;
MPRINT(EM_DIAGRAM):   else do;
2338697   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2338698   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2338699   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2338700   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2338701   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2338702   +   end;
MPRINT(EM_DIAGRAM):   end;
2338703   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2338704   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2338705   +   end;
MPRINT(EM_DIAGRAM):   end;
2338706   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2338707   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2338708   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2338709   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2338710   +   end;
MPRINT(EM_DIAGRAM):   end;
2338711   +end;
MPRINT(EM_DIAGRAM):   end;
2338712   +
2338713   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2338714   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2338715   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2338716   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2338717   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2338718   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2338719   +end;
MPRINT(EM_DIAGRAM):   end;
2338720   +else do;
MPRINT(EM_DIAGRAM):   else do;
2338721   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2338722   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2338723   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2338724   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2338725   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2338726   +   end;
MPRINT(EM_DIAGRAM):   end;
2338727   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2338728   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2338729   +   end;
MPRINT(EM_DIAGRAM):   end;
2338730   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2338731   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2338732   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2338733   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2338734   +   end;
MPRINT(EM_DIAGRAM):   end;
2338735   +end;
MPRINT(EM_DIAGRAM):   end;
2338736   +
2338737   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2338738   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2338739   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2338740   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2338741   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2338742   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2338743   +end;
MPRINT(EM_DIAGRAM):   end;
2338744   +else do;
MPRINT(EM_DIAGRAM):   else do;
2338745   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2338746   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2338747   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2338748   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2338749   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2338750   +   end;
MPRINT(EM_DIAGRAM):   end;
2338751   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2338752   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2338753   +   end;
MPRINT(EM_DIAGRAM):   end;
2338754   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2338755   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2338756   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2338757   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2338758   +   end;
MPRINT(EM_DIAGRAM):   end;
2338759   +end;
MPRINT(EM_DIAGRAM):   end;
2338760   +
2338761   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2338762   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2338763   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2338764   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2338765   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2338766   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2338767   +end;
MPRINT(EM_DIAGRAM):   end;
2338768   +else do;
MPRINT(EM_DIAGRAM):   else do;
2338769   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2338770   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2338771   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2338772   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2338773   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2338774   +   end;
MPRINT(EM_DIAGRAM):   end;
2338775   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2338776   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2338777   +   end;
MPRINT(EM_DIAGRAM):   end;
2338778   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2338779   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2338780   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2338781   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2338782   +   end;
MPRINT(EM_DIAGRAM):   end;
2338783   +end;
MPRINT(EM_DIAGRAM):   end;
2338784   +
2338785   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2338786   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2338787   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2338788   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2338789   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2338790   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2338791   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2338792   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2338793   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2338794   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2338795   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2338796   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2338797   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2338798   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2338799   +end;
MPRINT(EM_DIAGRAM):   end;
2338800   +else do;
MPRINT(EM_DIAGRAM):   else do;
2338801   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2338802   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2338803   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2338804   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2338805   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2338806   +   end;
MPRINT(EM_DIAGRAM):   end;
2338807   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2338808   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2338809   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2338810   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2338811   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2338812   +   end;
MPRINT(EM_DIAGRAM):   end;
2338813   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2338814   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2338815   +   end;
MPRINT(EM_DIAGRAM):   end;
2338816   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2338817   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2338818   +   end;
MPRINT(EM_DIAGRAM):   end;
2338819   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2338820   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2338821   +   end;
MPRINT(EM_DIAGRAM):   end;
2338822   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2338823   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2338824   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2338825   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2338826   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2338827   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2338828   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2338829   +   end;
MPRINT(EM_DIAGRAM):   end;
2338830   +end;
MPRINT(EM_DIAGRAM):   end;
2338831   +
2338832   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2338833   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2338834   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2338835   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2338836   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2338837   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2338838   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2338839   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2338840   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2338841   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2338842   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2338843   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2338844   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2338845   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2338846   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2338847   +end;
MPRINT(EM_DIAGRAM):   end;
2338848   +else do;
MPRINT(EM_DIAGRAM):   else do;
2338849   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2338850   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2338851   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2338852   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2338853   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2338854   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2338855   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2338856   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2338857   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2338858   +         end;
MPRINT(EM_DIAGRAM):   end;
2338859   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2338860   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2338861   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2338862   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2338863   +            end;
MPRINT(EM_DIAGRAM):   end;
2338864   +         end;
MPRINT(EM_DIAGRAM):   end;
2338865   +      end;
MPRINT(EM_DIAGRAM):   end;
2338866   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2338867   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2338868   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2338869   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2338870   +         end;
MPRINT(EM_DIAGRAM):   end;
2338871   +      end;
MPRINT(EM_DIAGRAM):   end;
2338872   +   end;
MPRINT(EM_DIAGRAM):   end;
2338873   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2338874   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2338875   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2338876   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2338877   +      end;
MPRINT(EM_DIAGRAM):   end;
2338878   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2338879   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2338880   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2338881   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2338882   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2338883   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2338884   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2338885   +         end;
MPRINT(EM_DIAGRAM):   end;
2338886   +      end;
MPRINT(EM_DIAGRAM):   end;
2338887   +   end;
MPRINT(EM_DIAGRAM):   end;
2338888   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2338889   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2338890   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2338891   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2338892   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2338893   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2338894   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2338895   +   end;
MPRINT(EM_DIAGRAM):   end;
2338896   +end;
MPRINT(EM_DIAGRAM):   end;
2338897   +
2338898   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2338899   +*** Checking missing input Interval
2338900   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2338901   +
2338902   +IF NMISS(
2338903   +   AcceptedCmpTotal ,
2338904   +   Age ,
2338905   +   Frq ,
2338906   +   Income ,
2338907   +   Kidhome ,
2338908   +   Mnt ,
2338909   +   MntFishProducts ,
2338910   +   MntFruits ,
2338911   +   MntGoldProds ,
2338912   +   MntMeatProducts ,
2338913   +   MntSweetProducts ,
2338914   +   MntWines ,
2338915   +   MonthsAsCustomer ,
2338916   +   NumCatalogPurchases ,
2338917   +   NumDealsPurchases ,
2338918   +   NumDistPurchases ,
2338919   +   NumStorePurchases ,
2338920   +   NumWebPurchases ,
2338921   +   NumWebVisitsMonth ,
2338922   +   RFMstat ,
2338923   +   RMntFrq ,
2338924   +   Recency ,
2338925   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2338926   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2338927   +
2338928   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2338929   +END;
MPRINT(EM_DIAGRAM):   END;
2338930   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2338931   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2338932   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2338933   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2338934   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2338935   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2338936   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2338937   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2338938   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2338939   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2338940   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2338941   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2338942   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2338943   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2338944   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2338945   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2338946   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2338947   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2338948   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2338949   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2338950   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2338951   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2338952   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2338953   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2338954   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2338955   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2338956   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2338957   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2338958   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2338959   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2338960   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2338961   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2338962   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2338963   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2338964   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2338965   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2338966   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2338967   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2338968   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2338969   +END;
MPRINT(EM_DIAGRAM):   END;
2338970   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2338971   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2338972   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2338973   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2338974   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2338975   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2338976   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2338977   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2338978   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2338979   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2338980   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2338981   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2338982   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2338983   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2338984   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2338985   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2338986   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2338987   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2338988   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2338989   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2338990   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2338991   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2338992   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2338993   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2338994   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2338995   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2338996   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2338997   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2338998   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2338999   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2339000   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2339001   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2339002   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2339003   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2339004   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2339005   +   ELSE S_NumCatalogPurchases
2339006   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2339007   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2339008   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2339009   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2339010   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2339011   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2339012   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2339013   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2339014   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2339015   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2339016   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2339017   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2339018   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2339019   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2339020   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2339021   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2339022   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2339023   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2339024   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2339025   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2339026   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2339027   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2339028   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2339029   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2339030   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2339031   +END;
MPRINT(EM_DIAGRAM):   END;
2339032   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2339033   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2339034   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2339035   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2339036   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2339037   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2339038   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2339039   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2339040   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2339041   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2339042   +   H1x1_1  =     -0.7790327388408 * S_AcceptedCmpTotal
2339043   +          +     0.32193739579856 * S_Age  +    -0.43875684835169 * S_Frq
2339044   +          +     0.13013240455049 * S_Income  +    -0.74127716462976 *
2339045   +        S_Kidhome  +    -0.86416600561474 * S_Mnt  +     0.94819226754442 *
2339046   +        S_MntFishProducts  +     0.15895119408799 * S_MntFruits
2339047   +          +     0.03658391935071 * S_MntGoldProds  +    -3.75052142292398 *
2339048   +        S_MntMeatProducts  +    -0.22192220883538 * S_MntSweetProducts
2339049   +          +     0.80534656860633 * S_MntWines  +     0.16144794241259 *
2339050   +        S_MonthsAsCustomer  +    -1.53040364803625 * S_NumCatalogPurchases
2339051   +          +    -1.09856598010056 * S_NumDealsPurchases
2339052   +          +    -0.10571850472514 * S_NumDistPurchases
2339053   +          +     0.11898210654227 * S_NumStorePurchases
2339054   +          +      0.5984912060231 * S_NumWebPurchases
2339055   +          +     0.78592531126942 * S_NumWebVisitsMonth
2339056   +          +    -0.50004686386273 * S_RFMstat  +     0.40804018151571 *
2339057   +        S_RMntFrq  +    -0.94753260620308 * S_Recency
2339058   +          +    -0.49604118088328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.7790327388408 * S_AcceptedCmpTotal + 0.32193739579856 * 
S_Age + -0.43875684835169 * S_Frq + 0.13013240455049 * S_Income + -0.74127716462976 * 
S_Kidhome + -0.86416600561474 * S_Mnt + 0.94819226754442 * S_MntFishProducts + 
0.15895119408799 * S_MntFruits + 0.03658391935071 * S_MntGoldProds + -3.75052142292398 * 
S_MntMeatProducts + -0.22192220883538 * S_MntSweetProducts + 0.80534656860633 * S_MntWines + 
0.16144794241259 * S_MonthsAsCustomer + -1.53040364803625 * S_NumCatalogPurchases + 
-1.09856598010056 * S_NumDealsPurchases + -0.10571850472514 * S_NumDistPurchases + 
0.11898210654227 * S_NumStorePurchases + 0.5984912060231 * S_NumWebPurchases + 
0.78592531126942 * S_NumWebVisitsMonth + -0.50004686386273 * S_RFMstat + 0.40804018151571 * 
S_RMntFrq + -0.94753260620308 * S_Recency + -0.49604118088328 * S_Teenhome ;
2339059   +   H1x1_2  =    -0.22226926295489 * S_AcceptedCmpTotal
2339060   +          +     0.08523894206962 * S_Age  +    -0.13010378102207 * S_Frq
2339061   +          +    -0.61810906923536 * S_Income  +     0.26583917928045 *
2339062   +        S_Kidhome  +     0.57213479787981 * S_Mnt  +    -0.58077613046442 *
2339063   +        S_MntFishProducts  +      0.1530301493776 * S_MntFruits
2339064   +          +      0.4586167382631 * S_MntGoldProds  +     1.40179051129147 *
2339065   +        S_MntMeatProducts  +      0.0231413770297 * S_MntSweetProducts
2339066   +          +    -0.08483682112771 * S_MntWines  +     0.22891006905064 *
2339067   +        S_MonthsAsCustomer  +    -1.21866617917435 * S_NumCatalogPurchases
2339068   +          +    -0.84042044250624 * S_NumDealsPurchases
2339069   +          +    -0.10246261015488 * S_NumDistPurchases
2339070   +          +     0.06886149708824 * S_NumStorePurchases
2339071   +          +     0.63156910388199 * S_NumWebPurchases
2339072   +          +    -1.33032061845311 * S_NumWebVisitsMonth
2339073   +          +     0.51240040684649 * S_RFMstat  +     0.77604047421115 *
2339074   +        S_RMntFrq  +     1.27964260226958 * S_Recency
2339075   +          +     0.12022076571016 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22226926295489 * S_AcceptedCmpTotal + 0.08523894206962 * 
S_Age + -0.13010378102207 * S_Frq + -0.61810906923536 * S_Income + 0.26583917928045 * 
S_Kidhome + 0.57213479787981 * S_Mnt + -0.58077613046442 * S_MntFishProducts + 0.1530301493776 
* S_MntFruits + 0.4586167382631 * S_MntGoldProds + 1.40179051129147 * S_MntMeatProducts + 
0.0231413770297 * S_MntSweetProducts + -0.08483682112771 * S_MntWines + 0.22891006905064 * 
S_MonthsAsCustomer + -1.21866617917435 * S_NumCatalogPurchases + -0.84042044250624 * 
S_NumDealsPurchases + -0.10246261015488 * S_NumDistPurchases + 0.06886149708824 * 
S_NumStorePurchases + 0.63156910388199 * S_NumWebPurchases + -1.33032061845311 * 
S_NumWebVisitsMonth + 0.51240040684649 * S_RFMstat + 0.77604047421115 * S_RMntFrq + 
1.27964260226958 * S_Recency + 0.12022076571016 * S_Teenhome ;
2339076   +   H1x1_3  =     1.19879097976404 * S_AcceptedCmpTotal
2339077   +          +     0.14973951999399 * S_Age  +    -0.90630756390399 * S_Frq
2339078   +          +     0.64934241358682 * S_Income  +    -0.66249532206724 *
2339079   +        S_Kidhome  +     0.54195490560813 * S_Mnt  +    -0.58497380565417 *
2339080   +        S_MntFishProducts  +     0.12409202833851 * S_MntFruits
2339081   +          +     0.44480061346561 * S_MntGoldProds  +     3.27513201048136 *
2339082   +        S_MntMeatProducts  +     -0.1256493054184 * S_MntSweetProducts
2339083   +          +    -0.56080685022301 * S_MntWines  +     0.08633469383177 *
2339084   +        S_MonthsAsCustomer  +     0.45482673505107 * S_NumCatalogPurchases
2339085   +          +     0.45393712455366 * S_NumDealsPurchases
2339086   +          +    -0.25292198053552 * S_NumDistPurchases
2339087   +          +    -1.35582215064749 * S_NumStorePurchases
2339088   +          +    -0.83132202302639 * S_NumWebPurchases
2339089   +          +     1.87116225272678 * S_NumWebVisitsMonth
2339090   +          +     0.39564162951481 * S_RFMstat  +    -1.08810221295144 *
2339091   +        S_RMntFrq  +    -2.07407859514648 * S_Recency
2339092   +          +     -0.6849099475723 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.19879097976404 * S_AcceptedCmpTotal + 0.14973951999399 * 
S_Age + -0.90630756390399 * S_Frq + 0.64934241358682 * S_Income + -0.66249532206724 * 
S_Kidhome + 0.54195490560813 * S_Mnt + -0.58497380565417 * S_MntFishProducts + 
0.12409202833851 * S_MntFruits + 0.44480061346561 * S_MntGoldProds + 3.27513201048136 * 
S_MntMeatProducts + -0.1256493054184 * S_MntSweetProducts + -0.56080685022301 * S_MntWines + 
0.08633469383177 * S_MonthsAsCustomer + 0.45482673505107 * S_NumCatalogPurchases + 
0.45393712455366 * S_NumDealsPurchases + -0.25292198053552 * S_NumDistPurchases + 
-1.35582215064749 * S_NumStorePurchases + -0.83132202302639 * S_NumWebPurchases + 
1.87116225272678 * S_NumWebVisitsMonth + 0.39564162951481 * S_RFMstat + -1.08810221295144 * 
S_RMntFrq + -2.07407859514648 * S_Recency + -0.6849099475723 * S_Teenhome ;
2339093   +   H1x1_1  = H1x1_1  +     0.81075414854045 * AcceptedCmp10
2339094   +          +    -0.33403710427327 * AcceptedCmp20  +    -0.62242387435975 *
2339095   +        AcceptedCmp30  +    -0.89439410552439 * AcceptedCmp40
2339096   +          +     0.77335976756467 * AcceptedCmp50  +    -0.08825784612626 *
2339097   +        Complain0  +      0.3404395194267 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.81075414854045 * AcceptedCmp10 + -0.33403710427327 * 
AcceptedCmp20 + -0.62242387435975 * AcceptedCmp30 + -0.89439410552439 * AcceptedCmp40 + 
0.77335976756467 * AcceptedCmp50 + -0.08825784612626 * Complain0 + 0.3404395194267 * 
HigherEducationBinary0 ;
2339098   +   H1x1_2  = H1x1_2  +    -0.16741179709566 * AcceptedCmp10
2339099   +          +    -0.53751033948061 * AcceptedCmp20  +     0.80285496945068 *
2339100   +        AcceptedCmp30  +     0.39379279966091 * AcceptedCmp40
2339101   +          +    -1.40366799083237 * AcceptedCmp50  +     -0.4265482924132 *
2339102   +        Complain0  +     0.37272103593422 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.16741179709566 * AcceptedCmp10 + -0.53751033948061 
* AcceptedCmp20 + 0.80285496945068 * AcceptedCmp30 + 0.39379279966091 * AcceptedCmp40 + 
-1.40366799083237 * AcceptedCmp50 + -0.4265482924132 * Complain0 + 0.37272103593422 * 
HigherEducationBinary0 ;
2339103   +   H1x1_3  = H1x1_3  +    -0.19417657656326 * AcceptedCmp10
2339104   +          +    -0.06547746897317 * AcceptedCmp20  +     0.21980739904513 *
2339105   +        AcceptedCmp30  +    -0.19452210052301 * AcceptedCmp40
2339106   +          +    -2.02403282278574 * AcceptedCmp50  +    -0.18250261144524 *
2339107   +        Complain0  +     0.34168103813312 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.19417657656326 * AcceptedCmp10 + -0.06547746897317 
* AcceptedCmp20 + 0.21980739904513 * AcceptedCmp30 + -0.19452210052301 * AcceptedCmp40 + 
-2.02403282278574 * AcceptedCmp50 + -0.18250261144524 * Complain0 + 0.34168103813312 * 
HigherEducationBinary0 ;
2339108   +   H1x1_1  = H1x1_1  +    -0.03956789621002 * Education2n_Cycle
2339109   +          +    -0.38372374638888 * EducationBasic  +     -0.4178927802606 *
2339110   +        EducationGraduation  +    -0.61278625923288 * EducationMaster
2339111   +          +      0.4695898100094 * Marital_StatusDivorced
2339112   +          +    -0.52137742289262 * Marital_StatusMarried
2339113   +          +    -0.32382086914936 * Marital_StatusSingle
2339114   +          +    -0.66163012672344 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03956789621002 * Education2n_Cycle + 
-0.38372374638888 * EducationBasic + -0.4178927802606 * EducationGraduation + 
-0.61278625923288 * EducationMaster + 0.4695898100094 * Marital_StatusDivorced + 
-0.52137742289262 * Marital_StatusMarried + -0.32382086914936 * Marital_StatusSingle + 
-0.66163012672344 * Marital_StatusTogether ;
2339115   +   H1x1_2  = H1x1_2  +    -0.25832319223886 * Education2n_Cycle
2339116   +          +     0.05602860720141 * EducationBasic  +    -0.86282852488383 *
2339117   +        EducationGraduation  +     0.18916317018059 * EducationMaster
2339118   +          +    -1.04858218653238 * Marital_StatusDivorced
2339119   +          +     2.41098335093061 * Marital_StatusMarried
2339120   +          +    -1.94696044861334 * Marital_StatusSingle
2339121   +          +     2.16021514856437 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.25832319223886 * Education2n_Cycle + 
0.05602860720141 * EducationBasic + -0.86282852488383 * EducationGraduation + 0.18916317018059 
* EducationMaster + -1.04858218653238 * Marital_StatusDivorced + 2.41098335093061 * 
Marital_StatusMarried + -1.94696044861334 * Marital_StatusSingle + 2.16021514856437 * 
Marital_StatusTogether ;
2339122   +   H1x1_3  = H1x1_3  +    -0.05351872242069 * Education2n_Cycle
2339123   +          +    -0.56850783552841 * EducationBasic  +    -0.14880907057098 *
2339124   +        EducationGraduation  +    -0.32850851013319 * EducationMaster
2339125   +          +     0.42964114177062 * Marital_StatusDivorced
2339126   +          +    -0.38607635605816 * Marital_StatusMarried
2339127   +          +    -0.02157405407852 * Marital_StatusSingle
2339128   +          +    -0.59995619744527 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.05351872242069 * Education2n_Cycle + 
-0.56850783552841 * EducationBasic + -0.14880907057098 * EducationGraduation + 
-0.32850851013319 * EducationMaster + 0.42964114177062 * Marital_StatusDivorced + 
-0.38607635605816 * Marital_StatusMarried + -0.02157405407852 * Marital_StatusSingle + 
-0.59995619744527 * Marital_StatusTogether ;
2339129   +   H1x1_1  =    -0.53239337390307 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53239337390307 + H1x1_1 ;
2339130   +   H1x1_2  =     0.99428677123948 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.99428677123948 + H1x1_2 ;
2339131   +   H1x1_3  =       1.835877082844 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.835877082844 + H1x1_3 ;
2339132   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
2339133   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
2339134   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2339135   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2339136   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2339137   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2339138   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2339139   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2339140   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2339141   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2339142   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2339143   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2339144   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2339145   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2339146   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2339147   +END;
MPRINT(EM_DIAGRAM):   END;
2339148   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2339149   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2339150   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2339151   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2339152   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2339153   +END;
MPRINT(EM_DIAGRAM):   END;
2339154   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2339155   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2339156   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2339157   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2339158   +   P_DepVar1  =    -3.41904253756965 * H1x1_1  +    -7.11204151517034 * H1x1_2
2339159   +          +     10.7909509395818 * H1x1_3  +    -2.20432578352426 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.41904253756965 * H1x1_1 + -7.11204151517034 * H1x1_2 + 
10.7909509395818 * H1x1_3 + -2.20432578352426 * H1x1_4 ;
2339160   +   P_DepVar1  =    -3.66951098257489 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.66951098257489 + P_DepVar1 ;
2339161   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2339162   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2339163   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2339164   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2339165   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2339166   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2339167   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2339168   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2339169   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2339170   +END;
MPRINT(EM_DIAGRAM):   END;
2339171   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2339172   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2339173   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2339174   +END;
MPRINT(EM_DIAGRAM):   END;
2339175   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2339176   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2339177   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2339178   +END;
MPRINT(EM_DIAGRAM):   END;
2339179   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2339180   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2339181   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2339182   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2339183   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2339184   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2339185   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2339186   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2339187   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2339188   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2339189   +END;
MPRINT(EM_DIAGRAM):   END;
2339190   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2339191   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2339192   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2339193   +drop
2339194   +H1x1_1
2339195   +H1x1_2
2339196   +H1x1_3
2339197   +H1x1_4
2339198   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 ;
2339199   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2339200    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2339201    quit;
2339202    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2339203    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2339204    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2339205    retain ID 2 Node "AutoNeural9";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural9";
2339206    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2339207    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2339208    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2339209    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2339210    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2339211    proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME 
CREATOR);
2339212    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2339213    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL9_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2339214    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2339215    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2339216    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2339217    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2339218    proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
2339219    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2339220    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2339221    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2339222    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2339223    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2339224    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2339225    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2339226    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2339227    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2339228    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2339228  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1479 rows and 5 columns.

2339229    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2339230    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2339231    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1479 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 1479 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2339232    filename _pref
2339232  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2339233    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2339234    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2339235   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2339236   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2339237   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2339238   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2339239   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2339240   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2339241    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2339242    quit;
2339243    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2339244    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2339245    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2339246    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2339247    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2339248    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2339249    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2339250    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2339251    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2339252    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2339253    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2339254    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2339255    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2339256    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2339257    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2339258    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2339259    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2339260    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2339261    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2339262    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2339263    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2339264    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2339265    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2339266    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2339267    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2339268    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2339269    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2339269  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2339270    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2339271    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2339272    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 1483 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2339273    filename _pref
2339273  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2339274    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2339275    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2339276   +
2339277   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2339278   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2339278  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2339279   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2339280   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2339281   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2339282   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2339283   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2339284    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2339285    quit;
2339286    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2339287    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2339288    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2339289    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2339290    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2339291    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2339292    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2339293    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2339294    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2339295    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2339296    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2339297    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2339298    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2339299    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2339300    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2339301    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2339302    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2339303    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2339304    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2339305    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2339306    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2339307    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2339308    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2339309    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2339310    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2339311    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2339312    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2339312  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2339313    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2339314    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2339315    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 1522 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2339316    filename _pref
2339316  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2339317    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2339318    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2339319   +
2339320   +
2339321   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2339322   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2339323   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2339324   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2339325   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2339326   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2339327   +
2339328   +
2339329   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2339330   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2339331   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2339332   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2339333   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2339334   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2339335   +
2339336   +
2339337   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2339338   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2339339   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2339340   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2339341   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2339342   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2339343   +
2339344   +
2339345   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2339346   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2339347   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2339348   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2339349   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2339350   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2339351   +
2339352   +
2339353   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2339354   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2339355   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2339356   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2339357   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2339358   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2339359   +
2339360   +
2339361   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2339362   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2339363   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2339364   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2339365   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2339366   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2339367   +
2339368   +
2339369   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2339370   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2339371   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2339372   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2339373   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2339374   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2339375   +
2339376   +
2339377   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2339378   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2339379   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2339380   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2339381   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2339382   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2339383   +if
2339384   +_FILTERNORM1 not in ( '.')
2339385   + and
2339386   +_FILTERNORM2 not in ( '.')
2339387   + and
2339388   +_FILTERNORM3 not in ( '.')
2339389   + and
2339390   +_FILTERNORM4 not in ( '.')
2339391   + and
2339392   +_FILTERNORM5 not in ( '.')
2339393   + and
2339394   +_FILTERNORM6 not in ( '.')
2339395   + and
2339396   +_FILTERNORM7 not in ( ' ')
2339397   + and
2339398   +_FILTERNORM8 not in ( ' ')
2339399   +and
2339400   +( Dt_Customer ne .)
2339401   +and ( Income ne . and (Income<=107000))
2339402   +and ( Kidhome ne .)
2339403   +and ( MntFishProducts ne .)
2339404   +and ( MntFruits ne .)
2339405   +and ( MntGoldProds ne .)
2339406   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2339407   +and ( MntSweetProducts ne .)
2339408   +and ( MntWines ne .)
2339409   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2339410   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2339411   +and ( NumStorePurchases ne .)
2339412   +and ( NumWebPurchases ne .)
2339413   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2339414   +and ( Recency ne .)
2339415   +and ( Teenhome ne .)
2339416   +and ( Year_Birth ne .)
2339417   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2339418   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2339419   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2339420   +end;
MPRINT(EM_DIAGRAM):   end;
2339421   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2339422   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2339423    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2339424    quit;
2339425    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2339426    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2339427    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2339428    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2339429    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2339430    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2339431    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2339432    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2339433    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2339434    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2339435    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2339436    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2339437    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2339438    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2339439    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2339440    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2339441    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2339442    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2339443    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2339444    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2339445    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2339446    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2339447    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2339448    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2339449    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2339450    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2339451    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2339451  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2339452    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2339453    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2339454    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 1588 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2339455    %macro varDept(fcmpdata=,id=);
2339456    %global nobs&id scoreFlag&id;
2339457    %let scoreFlag&id = 0;
2339458    %if &id=1 or ^&fcmpStart %then %do;
2339459    proc sort data=&fcmpdata out=_temp&id nodupkey;
2339460    by NAME;
2339461    where id=&id and LHS in( %let j=1;
2339462    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2339463    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2339464    "&var" %let j = %eval(&j+1);
2339465    %end;
2339466    );
2339467    run;
2339468    %let dsid = %sysfunc(open(_temp&id));
2339469    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2339470    %let dsid = %sysfunc(close(&dsid));
2339471    %if &&nobs&id %then %do;
2339472    %let scoreFlag&id = 1;
2339473    %let fcmpStart = 1;
2339474    %end;
2339475    %else %let fcmpStart = 0;
2339476    %end;
2339477    %else %do;
2339478    proc sort data=&fcmpdata out=_tempid;
2339479    where id=&id;
2339480    by LHS;
2339481    run;
2339482    %let dsid = %sysfunc(open(_tempid));
2339483    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2339484    %let dsid = %sysfunc(close(&dsid));
2339485    %if ^&&nobs&id %then %do;
2339486    proc datasets lib=work nolist;
2339487    delete _tempid;
2339488    run;
2339489    quit;
2339490    %end;
2339491    %else %do;
2339492    data _tempAll;
2339493    set %let j=%eval(&id-1);
2339494    %do x=1 %to &j;
2339495    %if &&nobs&x %then %do;
2339496    _temp&x %end;
2339497    %end;
2339498    ;
2339499    run;
2339500    proc sql;
2339501    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2339501  ! work._tempid p2 where p.name=p2.lhs;
2339502    quit;
2339503    data _temp&id;
2339504    set _temp&id;
2339505    where LHS ne '' and NAME ne '' and Node ne '';
2339506    run;
2339507    proc datasets lib=work nolist;
2339508    delete _tempAll;
2339509    run;
2339510    %let dsid = %sysfunc(open(_temp&id));
2339511    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2339512    %let dsid = %sysfunc(close(&dsid));
2339513    %if ^&&nobs&id %then %do;
2339514    proc datasets lib=work nolist;
2339515    delete _temp&id;
2339516    run;
2339517    quit;
2339518    %end;
2339519    %else %do;
2339520    %let scoreFlag&id = 1;
2339521    data _temp&id;
2339522    set _temp&id;
2339523    where LHS ne NAME and node ne '';
2339524    run;
2339525    %let dsid = %sysfunc(open(_temp&id));
2339526    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2339527    %let dsid = %sysfunc(close(&dsid));
2339528    %if ^&&nobs&id %then %do;
2339529    proc datasets lib=work nolist;
2339530    delete _temp&id;
2339531    run;
2339532    quit;
2339533    %end;
2339534    %else %do;
2339535    proc sort data=_temp&id nodupkey;
2339536    by LHS NAME;
2339537    run;
2339538    %end;
2339539    %end;
2339540    %end;
2339541    %end;
2339542    %mend varDept;
2339543    %macro optCode(outdata=fcmpdata);
2339544    %global fcmpStart;
2339545    %let fcmpStart = 0;
2339546    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2339547    %let NumNodes=9;
2339548    %do k=1 %to &NumNodes;
2339549    %vardept(fcmpdata=&outdata, id=&k);
2339550    %end;
2339551    %mend optCode;
2339552    %optcode(outData=EMWS8.Ensmbl38_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2339553    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2339554    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2339555    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2339556    run;
MPRINT(EM_DIAGRAM):   run;
The SAS System


NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2339557    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2339558    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2339559    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2339560    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2339561    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2339562    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2339562  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

2339563    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2339564    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2339565    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2339566    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2339567    filename _pref
2339567  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
2339568    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2339569    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas.
2339570   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2339571   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2339572   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2339573   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2339574   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2339575   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2339576   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2339577   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2339578   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2339579   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2339580   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2339581   +LENGTH _WARN_ $4
2339582   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2339583   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2339584   +
2339585   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2339586   +
2339587   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2339588   +
2339589   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2339590   +
2339591   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2339592   +
2339593   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2339594   +
2339595   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2339596   +
2339597   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2339598   +
2339599   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2339600   +
2339601   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2339602   +
2339603   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2339604   +
2339605   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2339606   +
2339607   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2339608   +
2339609   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2339610   +
2339611   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2339612   +
2339613   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2339614   +
2339615   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2339616   +
2339617   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2339618   +
2339619   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2339620   +
2339621   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2339622   +
2339623   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2339624   +
2339625   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2339626   +
2339627   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2339628   +
2339629   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2339630   +
2339631   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2339632   +
2339633   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2339634   +
2339635   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2339636   +
2339637   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2339638   +
2339639   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2339640   +
2339641   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2339642   +
2339643   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2339644   +
2339645   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2339646   +
2339647   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2339648   +
2339649   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2339650   +
2339651   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2339652   +
2339653   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2339654   +
2339655   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2339656   +
2339657   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2339658   +
2339659   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2339660   +
2339661   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2339662   +
2339663   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2339664   +
2339665   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2339666   +
2339667   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2339668   +
2339669   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2339670   +
2339671   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2339672   +
2339673   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2339674   +
2339675   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2339676   +
2339677   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2339678   +
2339679   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2339680   +
2339681   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2339682   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2339683   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2339684   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2339685   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2339686   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2339687   +end;
MPRINT(EM_DIAGRAM):   end;
2339688   +else do;
MPRINT(EM_DIAGRAM):   else do;
2339689   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2339690   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2339691   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2339692   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2339693   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2339694   +   end;
MPRINT(EM_DIAGRAM):   end;
2339695   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2339696   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2339697   +   end;
MPRINT(EM_DIAGRAM):   end;
2339698   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2339699   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2339700   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2339701   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2339702   +   end;
MPRINT(EM_DIAGRAM):   end;
2339703   +end;
MPRINT(EM_DIAGRAM):   end;
2339704   +
2339705   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2339706   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2339707   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2339708   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2339709   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2339710   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2339711   +end;
MPRINT(EM_DIAGRAM):   end;
2339712   +else do;
MPRINT(EM_DIAGRAM):   else do;
2339713   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2339714   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2339715   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2339716   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2339717   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2339718   +   end;
MPRINT(EM_DIAGRAM):   end;
2339719   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2339720   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2339721   +   end;
MPRINT(EM_DIAGRAM):   end;
2339722   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2339723   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2339724   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2339725   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2339726   +   end;
MPRINT(EM_DIAGRAM):   end;
2339727   +end;
MPRINT(EM_DIAGRAM):   end;
2339728   +
2339729   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2339730   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2339731   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2339732   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2339733   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2339734   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2339735   +end;
MPRINT(EM_DIAGRAM):   end;
2339736   +else do;
MPRINT(EM_DIAGRAM):   else do;
2339737   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2339738   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2339739   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2339740   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2339741   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2339742   +   end;
MPRINT(EM_DIAGRAM):   end;
2339743   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2339744   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2339745   +   end;
MPRINT(EM_DIAGRAM):   end;
2339746   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2339747   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2339748   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2339749   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2339750   +   end;
MPRINT(EM_DIAGRAM):   end;
2339751   +end;
MPRINT(EM_DIAGRAM):   end;
2339752   +
2339753   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2339754   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2339755   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2339756   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2339757   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2339758   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2339759   +end;
MPRINT(EM_DIAGRAM):   end;
2339760   +else do;
MPRINT(EM_DIAGRAM):   else do;
2339761   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2339762   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2339763   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2339764   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2339765   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2339766   +   end;
MPRINT(EM_DIAGRAM):   end;
2339767   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2339768   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2339769   +   end;
MPRINT(EM_DIAGRAM):   end;
2339770   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2339771   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2339772   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2339773   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2339774   +   end;
MPRINT(EM_DIAGRAM):   end;
2339775   +end;
MPRINT(EM_DIAGRAM):   end;
2339776   +
2339777   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2339778   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2339779   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2339780   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2339781   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2339782   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2339783   +end;
MPRINT(EM_DIAGRAM):   end;
2339784   +else do;
MPRINT(EM_DIAGRAM):   else do;
2339785   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2339786   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2339787   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2339788   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2339789   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2339790   +   end;
MPRINT(EM_DIAGRAM):   end;
2339791   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2339792   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2339793   +   end;
MPRINT(EM_DIAGRAM):   end;
2339794   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2339795   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2339796   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2339797   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2339798   +   end;
MPRINT(EM_DIAGRAM):   end;
2339799   +end;
MPRINT(EM_DIAGRAM):   end;
2339800   +
2339801   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2339802   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2339803   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2339804   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2339805   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2339806   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2339807   +end;
MPRINT(EM_DIAGRAM):   end;
2339808   +else do;
MPRINT(EM_DIAGRAM):   else do;
2339809   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2339810   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2339811   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2339812   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2339813   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2339814   +   end;
MPRINT(EM_DIAGRAM):   end;
2339815   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2339816   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2339817   +   end;
MPRINT(EM_DIAGRAM):   end;
2339818   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2339819   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2339820   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2339821   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2339822   +   end;
MPRINT(EM_DIAGRAM):   end;
2339823   +end;
MPRINT(EM_DIAGRAM):   end;
2339824   +
2339825   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2339826   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2339827   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2339828   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2339829   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2339830   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2339831   +end;
MPRINT(EM_DIAGRAM):   end;
2339832   +else do;
MPRINT(EM_DIAGRAM):   else do;
2339833   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2339834   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2339835   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2339836   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2339837   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2339838   +   end;
MPRINT(EM_DIAGRAM):   end;
2339839   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2339840   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2339841   +   end;
MPRINT(EM_DIAGRAM):   end;
2339842   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2339843   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2339844   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2339845   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2339846   +   end;
MPRINT(EM_DIAGRAM):   end;
2339847   +end;
MPRINT(EM_DIAGRAM):   end;
2339848   +
2339849   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2339850   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2339851   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2339852   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2339853   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2339854   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2339855   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2339856   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2339857   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2339858   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2339859   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2339860   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2339861   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2339862   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2339863   +end;
MPRINT(EM_DIAGRAM):   end;
2339864   +else do;
MPRINT(EM_DIAGRAM):   else do;
2339865   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2339866   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2339867   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2339868   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2339869   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2339870   +   end;
MPRINT(EM_DIAGRAM):   end;
2339871   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2339872   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2339873   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2339874   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2339875   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2339876   +   end;
MPRINT(EM_DIAGRAM):   end;
2339877   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2339878   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2339879   +   end;
MPRINT(EM_DIAGRAM):   end;
2339880   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2339881   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2339882   +   end;
MPRINT(EM_DIAGRAM):   end;
2339883   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2339884   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2339885   +   end;
MPRINT(EM_DIAGRAM):   end;
2339886   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2339887   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2339888   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2339889   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2339890   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2339891   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2339892   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2339893   +   end;
MPRINT(EM_DIAGRAM):   end;
2339894   +end;
MPRINT(EM_DIAGRAM):   end;
2339895   +
2339896   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2339897   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2339898   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2339899   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2339900   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2339901   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2339902   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2339903   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2339904   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2339905   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2339906   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2339907   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2339908   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2339909   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2339910   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2339911   +end;
MPRINT(EM_DIAGRAM):   end;
2339912   +else do;
MPRINT(EM_DIAGRAM):   else do;
2339913   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2339914   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2339915   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2339916   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2339917   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2339918   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2339919   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2339920   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2339921   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2339922   +         end;
MPRINT(EM_DIAGRAM):   end;
2339923   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2339924   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2339925   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2339926   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2339927   +            end;
MPRINT(EM_DIAGRAM):   end;
2339928   +         end;
MPRINT(EM_DIAGRAM):   end;
2339929   +      end;
MPRINT(EM_DIAGRAM):   end;
2339930   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2339931   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2339932   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2339933   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2339934   +         end;
MPRINT(EM_DIAGRAM):   end;
2339935   +      end;
MPRINT(EM_DIAGRAM):   end;
2339936   +   end;
MPRINT(EM_DIAGRAM):   end;
2339937   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2339938   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2339939   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2339940   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2339941   +      end;
MPRINT(EM_DIAGRAM):   end;
2339942   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2339943   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2339944   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2339945   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2339946   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2339947   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2339948   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2339949   +         end;
MPRINT(EM_DIAGRAM):   end;
2339950   +      end;
MPRINT(EM_DIAGRAM):   end;
2339951   +   end;
MPRINT(EM_DIAGRAM):   end;
2339952   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2339953   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2339954   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2339955   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2339956   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2339957   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2339958   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2339959   +   end;
MPRINT(EM_DIAGRAM):   end;
2339960   +end;
MPRINT(EM_DIAGRAM):   end;
2339961   +
2339962   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2339963   +*** Checking missing input Interval
2339964   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2339965   +
2339966   +IF NMISS(
2339967   +   AcceptedCmpTotal ,
2339968   +   Age ,
2339969   +   Frq ,
2339970   +   Income ,
2339971   +   Kidhome ,
2339972   +   Mnt ,
2339973   +   MntFishProducts ,
2339974   +   MntFruits ,
2339975   +   MntGoldProds ,
2339976   +   MntMeatProducts ,
2339977   +   MntSweetProducts ,
2339978   +   MntWines ,
2339979   +   MonthsAsCustomer ,
2339980   +   NumCatalogPurchases ,
2339981   +   NumDealsPurchases ,
2339982   +   NumDistPurchases ,
2339983   +   NumStorePurchases ,
2339984   +   NumWebPurchases ,
2339985   +   NumWebVisitsMonth ,
2339986   +   RFMstat ,
2339987   +   RMntFrq ,
2339988   +   Recency ,
2339989   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2339990   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2339991   +
2339992   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2339993   +END;
MPRINT(EM_DIAGRAM):   END;
2339994   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2339995   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2339996   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2339997   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2339998   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2339999   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2340000   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2340001   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2340002   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2340003   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2340004   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2340005   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2340006   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2340007   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2340008   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2340009   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2340010   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2340011   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2340012   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2340013   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2340014   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2340015   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2340016   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2340017   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2340018   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2340019   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2340020   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2340021   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2340022   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2340023   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2340024   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2340025   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2340026   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2340027   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2340028   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2340029   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2340030   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2340031   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2340032   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2340033   +END;
MPRINT(EM_DIAGRAM):   END;
2340034   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2340035   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2340036   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2340037   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2340038   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2340039   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2340040   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2340041   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2340042   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2340043   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2340044   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2340045   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2340046   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2340047   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2340048   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2340049   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2340050   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2340051   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2340052   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2340053   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2340054   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2340055   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2340056   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2340057   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2340058   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2340059   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2340060   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2340061   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2340062   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2340063   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2340064   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2340065   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2340066   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2340067   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2340068   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2340069   +   ELSE S_NumCatalogPurchases
2340070   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2340071   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2340072   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2340073   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2340074   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2340075   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2340076   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2340077   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2340078   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2340079   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2340080   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2340081   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2340082   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2340083   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2340084   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2340085   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2340086   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2340087   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2340088   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2340089   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2340090   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2340091   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2340092   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2340093   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2340094   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2340095   +END;
MPRINT(EM_DIAGRAM):   END;
2340096   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2340097   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2340098   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2340099   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2340100   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2340101   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2340102   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2340103   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2340104   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2340105   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2340106   +   H1x1_1  =     0.08465472857554 * S_AcceptedCmpTotal
2340107   +          +     0.23104131534618 * S_Age  +     0.27646175976509 * S_Frq
2340108   +          +     0.45938840681203 * S_Income  +     0.09814900830666 *
2340109   +        S_Kidhome  +     0.23249430277518 * S_Mnt  +    -0.51905493105122 *
2340110   +        S_MntFishProducts  +    -0.07604226481078 * S_MntFruits
2340111   +          +     0.10100393832157 * S_MntGoldProds  +     1.56159221713858 *
2340112   +        S_MntMeatProducts  +     0.12166799382268 * S_MntSweetProducts
2340113   +          +    -0.63388816790524 * S_MntWines  +     0.00878303775585 *
2340114   +        S_MonthsAsCustomer  +     0.01990411233136 * S_NumCatalogPurchases
2340115   +          +     0.19770934886328 * S_NumDealsPurchases
2340116   +          +      0.0515215988111 * S_NumDistPurchases
2340117   +          +    -0.34569346346089 * S_NumStorePurchases
2340118   +          +    -0.27122293596124 * S_NumWebPurchases
2340119   +          +    -0.17061565609755 * S_NumWebVisitsMonth
2340120   +          +      0.1271178187502 * S_RFMstat  +     0.38306508975954 *
2340121   +        S_RMntFrq  +     0.05823588653853 * S_Recency
2340122   +          +    -0.03760117378617 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.08465472857554 * S_AcceptedCmpTotal + 0.23104131534618 * 
S_Age + 0.27646175976509 * S_Frq + 0.45938840681203 * S_Income + 0.09814900830666 * S_Kidhome 
+ 0.23249430277518 * S_Mnt + -0.51905493105122 * S_MntFishProducts + -0.07604226481078 * 
S_MntFruits + 0.10100393832157 * S_MntGoldProds + 1.56159221713858 * S_MntMeatProducts + 
0.12166799382268 * S_MntSweetProducts + -0.63388816790524 * S_MntWines + 0.00878303775585 * 
S_MonthsAsCustomer + 0.01990411233136 * S_NumCatalogPurchases + 0.19770934886328 * 
S_NumDealsPurchases + 0.0515215988111 * S_NumDistPurchases + -0.34569346346089 * 
S_NumStorePurchases + -0.27122293596124 * S_NumWebPurchases + -0.17061565609755 * 
S_NumWebVisitsMonth + 0.1271178187502 * S_RFMstat + 0.38306508975954 * S_RMntFrq + 
0.05823588653853 * S_Recency + -0.03760117378617 * S_Teenhome ;
2340123   +   H1x1_2  =     0.16564144258189 * S_AcceptedCmpTotal
2340124   +          +    -0.18930338067433 * S_Age  +    -0.23013558761757 * S_Frq
2340125   +          +     -0.1347135122598 * S_Income  +     0.04776498811407 *
2340126   +        S_Kidhome  +    -0.14940302068852 * S_Mnt  +    -0.13108691405604 *
2340127   +        S_MntFishProducts  +    -0.02561341150704 * S_MntFruits
2340128   +          +    -0.02022222891948 * S_MntGoldProds  +     0.80867688993093 *
2340129   +        S_MntMeatProducts  +    -0.08374488783635 * S_MntSweetProducts
2340130   +          +     -0.6719369441832 * S_MntWines  +    -0.14760035685198 *
2340131   +        S_MonthsAsCustomer  +      0.4007376271331 * S_NumCatalogPurchases
2340132   +          +     0.54308887602031 * S_NumDealsPurchases
2340133   +          +    -0.22507315320192 * S_NumDistPurchases
2340134   +          +    -0.79861387328361 * S_NumStorePurchases
2340135   +          +    -0.45467494002747 * S_NumWebPurchases
2340136   +          +      0.2119048824613 * S_NumWebVisitsMonth
2340137   +          +     0.30167662748678 * S_RFMstat  +     0.10712110659027 *
2340138   +        S_RMntFrq  +    -0.03061918029089 * S_Recency
2340139   +          +    -0.06096313113607 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.16564144258189 * S_AcceptedCmpTotal + -0.18930338067433 * 
S_Age + -0.23013558761757 * S_Frq + -0.1347135122598 * S_Income + 0.04776498811407 * S_Kidhome 
+ -0.14940302068852 * S_Mnt + -0.13108691405604 * S_MntFishProducts + -0.02561341150704 * 
S_MntFruits + -0.02022222891948 * S_MntGoldProds + 0.80867688993093 * S_MntMeatProducts + 
-0.08374488783635 * S_MntSweetProducts + -0.6719369441832 * S_MntWines + -0.14760035685198 * 
S_MonthsAsCustomer + 0.4007376271331 * S_NumCatalogPurchases + 0.54308887602031 * 
S_NumDealsPurchases + -0.22507315320192 * S_NumDistPurchases + -0.79861387328361 * 
S_NumStorePurchases + -0.45467494002747 * S_NumWebPurchases + 0.2119048824613 * 
S_NumWebVisitsMonth + 0.30167662748678 * S_RFMstat + 0.10712110659027 * S_RMntFrq + 
-0.03061918029089 * S_Recency + -0.06096313113607 * S_Teenhome ;
2340140   +   H1x1_3  =     0.02674875562898 * S_AcceptedCmpTotal
2340141   +          +    -0.19731891748843 * S_Age  +    -0.00753784701259 * S_Frq
2340142   +          +    -0.31764694608254 * S_Income  +     0.49525183733398 *
2340143   +        S_Kidhome  +     0.24623619243686 * S_Mnt  +     0.25904859702044 *
2340144   +        S_MntFishProducts  +     0.26153358982994 * S_MntFruits
2340145   +          +    -0.07223707213485 * S_MntGoldProds  +    -0.15192960471493 *
2340146   +        S_MntMeatProducts  +     0.08241128624385 * S_MntSweetProducts
2340147   +          +     0.62479763709054 * S_MntWines  +     0.03593742779349 *
2340148   +        S_MonthsAsCustomer  +     0.00825730323418 * S_NumCatalogPurchases
2340149   +          +     -0.0771083149302 * S_NumDealsPurchases
2340150   +          +     0.03403621221162 * S_NumDistPurchases
2340151   +          +     0.61303946422025 * S_NumStorePurchases
2340152   +          +     0.27126793634053 * S_NumWebPurchases
2340153   +          +     -0.9769688424222 * S_NumWebVisitsMonth
2340154   +          +     0.08832170040425 * S_RFMstat  +     0.13241491054212 *
2340155   +        S_RMntFrq  +     0.94872655811163 * S_Recency
2340156   +          +     0.22002222738147 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.02674875562898 * S_AcceptedCmpTotal + -0.19731891748843 * 
S_Age + -0.00753784701259 * S_Frq + -0.31764694608254 * S_Income + 0.49525183733398 * 
S_Kidhome + 0.24623619243686 * S_Mnt + 0.25904859702044 * S_MntFishProducts + 0.26153358982994 
* S_MntFruits + -0.07223707213485 * S_MntGoldProds + -0.15192960471493 * S_MntMeatProducts + 
0.08241128624385 * S_MntSweetProducts + 0.62479763709054 * S_MntWines + 0.03593742779349 * 
S_MonthsAsCustomer + 0.00825730323418 * S_NumCatalogPurchases + -0.0771083149302 * 
S_NumDealsPurchases + 0.03403621221162 * S_NumDistPurchases + 0.61303946422025 * 
S_NumStorePurchases + 0.27126793634053 * S_NumWebPurchases + -0.9769688424222 * 
S_NumWebVisitsMonth + 0.08832170040425 * S_RFMstat + 0.13241491054212 * S_RMntFrq + 
0.94872655811163 * S_Recency + 0.22002222738147 * S_Teenhome ;
2340157   +   H1x1_4  =     0.46328587348713 * S_AcceptedCmpTotal
2340158   +          +      -0.306946385792 * S_Age  +    -0.24247964225191 * S_Frq
2340159   +          +    -0.42968609314513 * S_Income  +    -0.08934431746158 *
2340160   +        S_Kidhome  +     0.15972194979558 * S_Mnt  +    -0.22174909818279 *
2340161   +        S_MntFishProducts  +    -0.23755215058744 * S_MntFruits
2340162   +          +      -0.124789433808 * S_MntGoldProds  +     0.50040173514144 *
2340163   +        S_MntMeatProducts  +     0.02850063230459 * S_MntSweetProducts
2340164   +          +     0.13427582671876 * S_MntWines  +     0.25569886862761 *
2340165   +        S_MonthsAsCustomer  +     0.34004201732149 * S_NumCatalogPurchases
2340166   +          +     0.29894603062327 * S_NumDealsPurchases
2340167   +          +     0.07614620530875 * S_NumDistPurchases
2340168   +          +     0.15402335009896 * S_NumStorePurchases
2340169   +          +     0.10615749096863 * S_NumWebPurchases
2340170   +          +     0.41962286816879 * S_NumWebVisitsMonth
2340171   +          +     0.00203630873093 * S_RFMstat  +     0.04736976805951 *
2340172   +        S_RMntFrq  +    -0.84751074132422 * S_Recency
2340173   +          +      0.2189023557249 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46328587348713 * S_AcceptedCmpTotal + -0.306946385792 * S_Age 
+ -0.24247964225191 * S_Frq + -0.42968609314513 * S_Income + -0.08934431746158 * S_Kidhome + 
0.15972194979558 * S_Mnt + -0.22174909818279 * S_MntFishProducts + -0.23755215058744 * 
S_MntFruits + -0.124789433808 * S_MntGoldProds + 0.50040173514144 * S_MntMeatProducts + 
0.02850063230459 * S_MntSweetProducts + 0.13427582671876 * S_MntWines + 0.25569886862761 * 
S_MonthsAsCustomer + 0.34004201732149 * S_NumCatalogPurchases + 0.29894603062327 * 
S_NumDealsPurchases + 0.07614620530875 * S_NumDistPurchases + 0.15402335009896 * 
S_NumStorePurchases + 0.10615749096863 * S_NumWebPurchases + 0.41962286816879 * 
S_NumWebVisitsMonth + 0.00203630873093 * S_RFMstat + 0.04736976805951 * S_RMntFrq + 
-0.84751074132422 * S_Recency + 0.2189023557249 * S_Teenhome ;
2340174   +   H1x1_5  =    -0.32353341757368 * S_AcceptedCmpTotal
2340175   +          +     0.03233494925748 * S_Age  +    -0.21296093282526 * S_Frq
2340176   +          +    -0.33919081075007 * S_Income  +     0.08771362671573 *
2340177   +        S_Kidhome  +    -0.10797068838726 * S_Mnt  +    -0.19736358637985 *
2340178   +        S_MntFishProducts  +    -0.19679917231132 * S_MntFruits
2340179   +          +     0.07502386205588 * S_MntGoldProds  +    -0.50948750987247 *
2340180   +        S_MntMeatProducts  +     0.00413757018488 * S_MntSweetProducts
2340181   +          +      0.0788538305785 * S_MntWines  +    -0.02917052455021 *
2340182   +        S_MonthsAsCustomer  +    -0.53933514609821 * S_NumCatalogPurchases
2340183   +          +     0.14392502416642 * S_NumDealsPurchases
2340184   +          +    -0.10026304978633 * S_NumDistPurchases
2340185   +          +     -0.0588453022746 * S_NumStorePurchases
2340186   +          +     0.24799398610395 * S_NumWebPurchases
2340187   +          +    -0.52695548549717 * S_NumWebVisitsMonth
2340188   +          +     0.01855620452049 * S_RFMstat  +    -0.00189170766477 *
2340189   +        S_RMntFrq  +     0.51841177421912 * S_Recency
2340190   +          +     0.31491299720207 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.32353341757368 * S_AcceptedCmpTotal + 0.03233494925748 * 
S_Age + -0.21296093282526 * S_Frq + -0.33919081075007 * S_Income + 0.08771362671573 * 
S_Kidhome + -0.10797068838726 * S_Mnt + -0.19736358637985 * S_MntFishProducts + 
-0.19679917231132 * S_MntFruits + 0.07502386205588 * S_MntGoldProds + -0.50948750987247 * 
S_MntMeatProducts + 0.00413757018488 * S_MntSweetProducts + 0.0788538305785 * S_MntWines + 
-0.02917052455021 * S_MonthsAsCustomer + -0.53933514609821 * S_NumCatalogPurchases + 
0.14392502416642 * S_NumDealsPurchases + -0.10026304978633 * S_NumDistPurchases + 
-0.0588453022746 * S_NumStorePurchases + 0.24799398610395 * S_NumWebPurchases + 
-0.52695548549717 * S_NumWebVisitsMonth + 0.01855620452049 * S_RFMstat + -0.00189170766477 * 
S_RMntFrq + 0.51841177421912 * S_Recency + 0.31491299720207 * S_Teenhome ;
2340191   +   H1x1_6  =     -0.2113594539647 * S_AcceptedCmpTotal
2340192   +          +     -0.1052829531896 * S_Age  +     0.30802959734964 * S_Frq
2340193   +          +    -0.03112570586685 * S_Income  +     0.19129661263247 *
2340194   +        S_Kidhome  +     0.00533736622639 * S_Mnt  +    -0.06112703732925 *
2340195   +        S_MntFishProducts  +    -0.15875686512247 * S_MntFruits
2340196   +          +    -0.08040179272112 * S_MntGoldProds  +    -0.14462087536907 *
2340197   +        S_MntMeatProducts  +     0.21353582706121 * S_MntSweetProducts
2340198   +          +    -0.30180630737612 * S_MntWines  +    -0.11825033043182 *
2340199   +        S_MonthsAsCustomer  +     -0.2917393256645 * S_NumCatalogPurchases
2340200   +          +     0.08149600854964 * S_NumDealsPurchases
2340201   +          +     0.16873541613513 * S_NumDistPurchases
2340202   +          +    -0.20437343413446 * S_NumStorePurchases
2340203   +          +     -0.1671107527288 * S_NumWebPurchases
2340204   +          +     0.03677043100993 * S_NumWebVisitsMonth
2340205   +          +      0.0240516540488 * S_RFMstat  +     0.06155030856383 *
2340206   +        S_RMntFrq  +    -0.28802122451372 * S_Recency
2340207   +          +     0.06998878697307 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.2113594539647 * S_AcceptedCmpTotal + -0.1052829531896 * 
S_Age + 0.30802959734964 * S_Frq + -0.03112570586685 * S_Income + 0.19129661263247 * S_Kidhome 
+ 0.00533736622639 * S_Mnt + -0.06112703732925 * S_MntFishProducts + -0.15875686512247 * 
S_MntFruits + -0.08040179272112 * S_MntGoldProds + -0.14462087536907 * S_MntMeatProducts + 
0.21353582706121 * S_MntSweetProducts + -0.30180630737612 * S_MntWines + -0.11825033043182 * 
S_MonthsAsCustomer + -0.2917393256645 * S_NumCatalogPurchases + 0.08149600854964 * 
S_NumDealsPurchases + 0.16873541613513 * S_NumDistPurchases + -0.20437343413446 * 
S_NumStorePurchases + -0.1671107527288 * S_NumWebPurchases + 0.03677043100993 * 
S_NumWebVisitsMonth + 0.0240516540488 * S_RFMstat + 0.06155030856383 * S_RMntFrq + 
-0.28802122451372 * S_Recency + 0.06998878697307 * S_Teenhome ;
2340208   +   H1x1_1  = H1x1_1  +    -0.33641509021082 * AcceptedCmp10
2340209   +          +     0.03092292109435 * AcceptedCmp20  +    -0.23551187181907 *
2340210   +        AcceptedCmp30  +    -0.06694400005185 * AcceptedCmp40
2340211   +          +    -0.14203506237074 * AcceptedCmp50  +    -0.25866390496966 *
2340212   +        Complain0  +     0.19505921178308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.33641509021082 * AcceptedCmp10 + 0.03092292109435 * 
AcceptedCmp20 + -0.23551187181907 * AcceptedCmp30 + -0.06694400005185 * AcceptedCmp40 + 
-0.14203506237074 * AcceptedCmp50 + -0.25866390496966 * Complain0 + 0.19505921178308 * 
HigherEducationBinary0 ;
2340213   +   H1x1_2  = H1x1_2  +     0.09937599707203 * AcceptedCmp10
2340214   +          +     0.03831208573575 * AcceptedCmp20  +     0.39683693019758 *
2340215   +        AcceptedCmp30  +     0.37006277175295 * AcceptedCmp40
2340216   +          +     0.21293419476895 * AcceptedCmp50  +     0.15528568367473 *
2340217   +        Complain0  +    -0.30210013299822 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.09937599707203 * AcceptedCmp10 + 0.03831208573575 * 
AcceptedCmp20 + 0.39683693019758 * AcceptedCmp30 + 0.37006277175295 * AcceptedCmp40 + 
0.21293419476895 * AcceptedCmp50 + 0.15528568367473 * Complain0 + -0.30210013299822 * 
HigherEducationBinary0 ;
2340218   +   H1x1_3  = H1x1_3  +     0.29891621770856 * AcceptedCmp10
2340219   +          +     0.64938384482014 * AcceptedCmp20  +     0.44997242602142 *
2340220   +        AcceptedCmp30  +       0.479093722666 * AcceptedCmp40
2340221   +          +     0.50957180373919 * AcceptedCmp50  +     0.27833535432461 *
2340222   +        Complain0  +    -0.20383534906723 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.29891621770856 * AcceptedCmp10 + 0.64938384482014 * 
AcceptedCmp20 + 0.44997242602142 * AcceptedCmp30 + 0.479093722666 * AcceptedCmp40 + 
0.50957180373919 * AcceptedCmp50 + 0.27833535432461 * Complain0 + -0.20383534906723 * 
HigherEducationBinary0 ;
2340223   +   H1x1_4  = H1x1_4  +    -0.26872515586946 * AcceptedCmp10
2340224   +          +    -0.24299337381911 * AcceptedCmp20  +    -0.01147155911926 *
2340225   +        AcceptedCmp30  +     -0.3056041277894 * AcceptedCmp40
2340226   +          +    -0.05496409609003 * AcceptedCmp50  +     0.07858238173893 *
2340227   +        Complain0  +     0.05721550070076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26872515586946 * AcceptedCmp10 + -0.24299337381911 
* AcceptedCmp20 + -0.01147155911926 * AcceptedCmp30 + -0.3056041277894 * AcceptedCmp40 + 
-0.05496409609003 * AcceptedCmp50 + 0.07858238173893 * Complain0 + 0.05721550070076 * 
HigherEducationBinary0 ;
2340228   +   H1x1_5  = H1x1_5  +    -0.14067626649899 * AcceptedCmp10
2340229   +          +    -0.30627802828357 * AcceptedCmp20  +     0.05057942365592 *
2340230   +        AcceptedCmp30  +    -0.10378506600459 * AcceptedCmp40
2340231   +          +     0.07479232390108 * AcceptedCmp50  +     0.07252750671496 *
2340232   +        Complain0  +     0.11114854035831 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.14067626649899 * AcceptedCmp10 + -0.30627802828357 
* AcceptedCmp20 + 0.05057942365592 * AcceptedCmp30 + -0.10378506600459 * AcceptedCmp40 + 
0.07479232390108 * AcceptedCmp50 + 0.07252750671496 * Complain0 + 0.11114854035831 * 
HigherEducationBinary0 ;
2340233   +   H1x1_6  = H1x1_6  +    -0.25806332334976 * AcceptedCmp10
2340234   +          +     0.03944021903138 * AcceptedCmp20  +    -0.08792206887119 *
2340235   +        AcceptedCmp30  +    -0.24631282865199 * AcceptedCmp40
2340236   +          +    -0.06123991538969 * AcceptedCmp50  +    -0.03114784375357 *
2340237   +        Complain0  +    -0.25204544481193 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.25806332334976 * AcceptedCmp10 + 0.03944021903138 * 
AcceptedCmp20 + -0.08792206887119 * AcceptedCmp30 + -0.24631282865199 * AcceptedCmp40 + 
-0.06123991538969 * AcceptedCmp50 + -0.03114784375357 * Complain0 + -0.25204544481193 * 
HigherEducationBinary0 ;
2340238   +   H1x1_1  = H1x1_1  +      0.2972170984261 * Education2n_Cycle
2340239   +          +     0.01651368568996 * EducationBasic  +     -0.1186055936649 *
2340240   +        EducationGraduation  +      0.0228208538951 * EducationMaster
2340241   +          +    -0.31045295887604 * Marital_StatusDivorced
2340242   +          +    -0.01109401001539 * Marital_StatusMarried
2340243   +          +     0.01325135981025 * Marital_StatusSingle
2340244   +          +     0.16609357475978 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.2972170984261 * Education2n_Cycle + 0.01651368568996 
* EducationBasic + -0.1186055936649 * EducationGraduation + 0.0228208538951 * EducationMaster 
+ -0.31045295887604 * Marital_StatusDivorced + -0.01109401001539 * Marital_StatusMarried + 
0.01325135981025 * Marital_StatusSingle + 0.16609357475978 * Marital_StatusTogether ;
2340245   +   H1x1_2  = H1x1_2  +    -0.07095220065018 * Education2n_Cycle
2340246   +          +    -0.23491732567608 * EducationBasic  +     0.20187086452315 *
2340247   +        EducationGraduation  +     0.07524128723108 * EducationMaster
2340248   +          +     0.02275101861599 * Marital_StatusDivorced
2340249   +          +     0.20271548664903 * Marital_StatusMarried
2340250   +          +    -0.12132069210718 * Marital_StatusSingle
2340251   +          +     0.00085090729385 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.07095220065018 * Education2n_Cycle + 
-0.23491732567608 * EducationBasic + 0.20187086452315 * EducationGraduation + 0.07524128723108 
* EducationMaster + 0.02275101861599 * Marital_StatusDivorced + 0.20271548664903 * 
Marital_StatusMarried + -0.12132069210718 * Marital_StatusSingle + 0.00085090729385 * 
Marital_StatusTogether ;
2340252   +   H1x1_3  = H1x1_3  +    -0.02268297689573 * Education2n_Cycle
2340253   +          +     0.06359770535369 * EducationBasic  +     -0.1194001280088 *
2340254   +        EducationGraduation  +     0.17299848976308 * EducationMaster
2340255   +          +     -0.4992959703281 * Marital_StatusDivorced
2340256   +          +     0.62071659624138 * Marital_StatusMarried
2340257   +          +    -0.21776202274494 * Marital_StatusSingle
2340258   +          +     0.54712874598141 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.02268297689573 * Education2n_Cycle + 
0.06359770535369 * EducationBasic + -0.1194001280088 * EducationGraduation + 0.17299848976308 
* EducationMaster + -0.4992959703281 * Marital_StatusDivorced + 0.62071659624138 * 
Marital_StatusMarried + -0.21776202274494 * Marital_StatusSingle + 0.54712874598141 * 
Marital_StatusTogether ;
2340259   +   H1x1_4  = H1x1_4  +    -0.17773353520266 * Education2n_Cycle
2340260   +          +     0.17998728120628 * EducationBasic  +    -0.00324602612825 *
2340261   +        EducationGraduation  +    -0.22448876765089 * EducationMaster
2340262   +          +     0.05626212670587 * Marital_StatusDivorced
2340263   +          +     0.14353891364597 * Marital_StatusMarried
2340264   +          +    -0.29006765622997 * Marital_StatusSingle
2340265   +          +     0.05503638282535 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.17773353520266 * Education2n_Cycle + 
0.17998728120628 * EducationBasic + -0.00324602612825 * EducationGraduation + 
-0.22448876765089 * EducationMaster + 0.05626212670587 * Marital_StatusDivorced + 
0.14353891364597 * Marital_StatusMarried + -0.29006765622997 * Marital_StatusSingle + 
0.05503638282535 * Marital_StatusTogether ;
2340266   +   H1x1_5  = H1x1_5  +     0.06634316870499 * Education2n_Cycle
2340267   +          +    -0.36153880127411 * EducationBasic  +     0.23023144658635 *
2340268   +        EducationGraduation  +    -0.06568730318683 * EducationMaster
2340269   +          +    -0.21206913700604 * Marital_StatusDivorced
2340270   +          +     0.58790643614629 * Marital_StatusMarried
2340271   +          +    -0.65995982578062 * Marital_StatusSingle
2340272   +          +     0.49642503732428 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.06634316870499 * Education2n_Cycle + 
-0.36153880127411 * EducationBasic + 0.23023144658635 * EducationGraduation + 
-0.06568730318683 * EducationMaster + -0.21206913700604 * Marital_StatusDivorced + 
0.58790643614629 * Marital_StatusMarried + -0.65995982578062 * Marital_StatusSingle + 
0.49642503732428 * Marital_StatusTogether ;
2340273   +   H1x1_6  = H1x1_6  +     0.16504024096118 * Education2n_Cycle
2340274   +          +     0.11925867171875 * EducationBasic  +    -0.04213907014732 *
2340275   +        EducationGraduation  +    -0.21389968555475 * EducationMaster
2340276   +          +    -0.05047370516008 * Marital_StatusDivorced
2340277   +          +    -0.23139090963669 * Marital_StatusMarried
2340278   +          +     0.04816197463249 * Marital_StatusSingle
2340279   +          +     0.04977890114896 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16504024096118 * Education2n_Cycle + 
0.11925867171875 * EducationBasic + -0.04213907014732 * EducationGraduation + 
-0.21389968555475 * EducationMaster + -0.05047370516008 * Marital_StatusDivorced + 
-0.23139090963669 * Marital_StatusMarried + 0.04816197463249 * Marital_StatusSingle + 
0.04977890114896 * Marital_StatusTogether ;
2340280   +   H1x1_1  =    -1.90576647346127 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.90576647346127 + H1x1_1 ;
2340281   +   H1x1_2  =     0.32295787429294 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.32295787429294 + H1x1_2 ;
2340282   +   H1x1_3  =     0.75117643107919 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.75117643107919 + H1x1_3 ;
2340283   +   H1x1_4  =      1.2336762751587 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.2336762751587 + H1x1_4 ;
2340284   +   H1x1_5  =    -0.97062317465491 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.97062317465491 + H1x1_5 ;
2340285   +   H1x1_6  =    -1.15756803634408 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.15756803634408 + H1x1_6 ;
2340286   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2340287   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2340288   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2340289   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2340290   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 * 
H1x1_1 ;
2340291   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2340292   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2340293   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 * 
H1x1_2 ;
2340294   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2340295   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2340296   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 * 
H1x1_3 ;
2340297   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2340298   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2340299   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 * 
H1x1_4 ;
2340300   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2340301   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2340302   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 * 
H1x1_5 ;
2340303   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2340304   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2340305   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 * 
H1x1_6 ;
2340306   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2340307   +END;
MPRINT(EM_DIAGRAM):   END;
2340308   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2340309   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2340310   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2340311   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2340312   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2340313   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2340314   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2340315   +END;
MPRINT(EM_DIAGRAM):   END;
2340316   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2340317   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2340318   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2340319   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2340320   +   P_DepVar1  =    -0.99830813428318 * H1x1_1  +     1.33495006526712 * H1x1_2
2340321   +          +    -1.37942150026657 * H1x1_3  +     1.22714974922576 * H1x1_4
2340322   +          +     1.73375794385595 * H1x1_5  +     -0.0100306049679 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.99830813428318 * H1x1_1 + 1.33495006526712 * H1x1_2 + 
-1.37942150026657 * H1x1_3 + 1.22714974922576 * H1x1_4 + 1.73375794385595 * H1x1_5 + 
-0.0100306049679 * H1x1_6 ;
2340323   +   P_DepVar1  =    -1.90393999986167 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.90393999986167 + P_DepVar1 ;
2340324   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2340325   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2340326   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2340327   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2340328   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2340329   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2340330   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2340331   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2340332   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2340333   +END;
MPRINT(EM_DIAGRAM):   END;
2340334   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2340335   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2340336   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2340337   +END;
MPRINT(EM_DIAGRAM):   END;
2340338   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2340339   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2340340   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2340341   +END;
MPRINT(EM_DIAGRAM):   END;
2340342   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2340343   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2340344   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2340345   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2340346   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2340347   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2340348   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2340349   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2340350   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2340351   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2340352   +END;
MPRINT(EM_DIAGRAM):   END;
2340353   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2340354   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2340355   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2340356   +drop
2340357   +H1x1_1
2340358   +H1x1_2
2340359   +H1x1_3
2340360   +H1x1_4
2340361   +H1x1_5
2340362   +H1x1_6
2340363   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 ;
2340364   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2340365    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2340366    quit;
2340367    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2340368    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2340369    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2340370    retain ID 2 Node "AutoNeural11";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural11";
2340371    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2340372    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2995 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2995 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2340373    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2340374    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2340375    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2995 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2995 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2340376    proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME 
CREATOR);
2340377    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2340378    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL11_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2340379    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2340380    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2340381    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2340382    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2340383    proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
2340384    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2340385    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2340386    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2340387    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2340388    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2340389    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2340390    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2340391    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2340392    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2340393    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2340393  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1655 rows and 5 columns.

2340394    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2340395    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2340396    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1655 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 1655 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2340397    filename _pref
2340397  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2340398    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2340399    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2340400   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2340401   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2340402   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2340403   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2340404   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2340405   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2340406    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2340407    quit;
2340408    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2340409    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2340410    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2340411    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2340412    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2340413    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2340414    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2340415    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2340416    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2340417    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2340418    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2340419    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2340420    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2340421    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2340422    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2340423    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2340424    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2340425    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2340426    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2340427    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2340428    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2340429    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2340430    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2340431    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2340432    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2340433    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2340434    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2340434  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2340435    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2340436    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2340437    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 1659 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2340438    filename _pref
2340438  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2340439    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2340440    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2340441   +
2340442   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2340443   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2340443  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2340444   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2340445   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2340446   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2340447   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2340448   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2340449    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2340450    quit;
2340451    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2340452    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2340453    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2340454    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2340455    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2340456    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2340457    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2340458    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2340459    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2340460    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2340461    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2340462    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2340463    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2340464    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2340465    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2340466    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2340467    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2340468    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2340469    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2340470    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2340471    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2340472    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2340473    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2340474    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2340475    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2340476    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2340477    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2340477  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2340478    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2340479    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2340480    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 1698 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2340481    filename _pref
2340481  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2340482    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2340483    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2340484   +
2340485   +
2340486   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2340487   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2340488   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2340489   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2340490   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2340491   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2340492   +
2340493   +
2340494   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2340495   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2340496   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2340497   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2340498   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2340499   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2340500   +
2340501   +
2340502   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2340503   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2340504   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2340505   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2340506   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2340507   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2340508   +
2340509   +
2340510   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2340511   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2340512   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2340513   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2340514   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2340515   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2340516   +
2340517   +
2340518   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2340519   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2340520   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2340521   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2340522   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2340523   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2340524   +
2340525   +
2340526   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2340527   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2340528   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2340529   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2340530   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2340531   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2340532   +
2340533   +
2340534   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2340535   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2340536   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2340537   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2340538   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2340539   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2340540   +
2340541   +
2340542   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2340543   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2340544   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2340545   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2340546   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2340547   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2340548   +if
2340549   +_FILTERNORM1 not in ( '.')
2340550   + and
2340551   +_FILTERNORM2 not in ( '.')
2340552   + and
2340553   +_FILTERNORM3 not in ( '.')
2340554   + and
2340555   +_FILTERNORM4 not in ( '.')
2340556   + and
2340557   +_FILTERNORM5 not in ( '.')
2340558   + and
2340559   +_FILTERNORM6 not in ( '.')
2340560   + and
2340561   +_FILTERNORM7 not in ( ' ')
2340562   + and
2340563   +_FILTERNORM8 not in ( ' ')
2340564   +and
2340565   +( Dt_Customer ne .)
2340566   +and ( Income ne . and (Income<=107000))
2340567   +and ( Kidhome ne .)
2340568   +and ( MntFishProducts ne .)
2340569   +and ( MntFruits ne .)
2340570   +and ( MntGoldProds ne .)
2340571   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2340572   +and ( MntSweetProducts ne .)
2340573   +and ( MntWines ne .)
2340574   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2340575   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2340576   +and ( NumStorePurchases ne .)
2340577   +and ( NumWebPurchases ne .)
2340578   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2340579   +and ( Recency ne .)
2340580   +and ( Teenhome ne .)
2340581   +and ( Year_Birth ne .)
2340582   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2340583   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2340584   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2340585   +end;
MPRINT(EM_DIAGRAM):   end;
2340586   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2340587   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2340588    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2340589    quit;
2340590    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2340591    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2340592    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2340593    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2340594    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2340595    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2340596    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2340597    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2340598    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2340599    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2340600    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2340601    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2340602    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2340603    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2340604    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2340605    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2340606    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2340607    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2340608    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2340609    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2340610    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2340611    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2340612    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2340613    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2340614    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2340615    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2340616    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2340616  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2340617    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2340618    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2340619    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 1764 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2340620    %macro varDept(fcmpdata=,id=);
2340621    %global nobs&id scoreFlag&id;
2340622    %let scoreFlag&id = 0;
2340623    %if &id=1 or ^&fcmpStart %then %do;
2340624    proc sort data=&fcmpdata out=_temp&id nodupkey;
2340625    by NAME;
2340626    where id=&id and LHS in( %let j=1;
2340627    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2340628    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2340629    "&var" %let j = %eval(&j+1);
2340630    %end;
2340631    );
2340632    run;
2340633    %let dsid = %sysfunc(open(_temp&id));
2340634    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2340635    %let dsid = %sysfunc(close(&dsid));
2340636    %if &&nobs&id %then %do;
2340637    %let scoreFlag&id = 1;
2340638    %let fcmpStart = 1;
2340639    %end;
2340640    %else %let fcmpStart = 0;
2340641    %end;
2340642    %else %do;
2340643    proc sort data=&fcmpdata out=_tempid;
2340644    where id=&id;
2340645    by LHS;
2340646    run;
2340647    %let dsid = %sysfunc(open(_tempid));
2340648    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2340649    %let dsid = %sysfunc(close(&dsid));
2340650    %if ^&&nobs&id %then %do;
2340651    proc datasets lib=work nolist;
2340652    delete _tempid;
2340653    run;
2340654    quit;
2340655    %end;
2340656    %else %do;
2340657    data _tempAll;
2340658    set %let j=%eval(&id-1);
2340659    %do x=1 %to &j;
2340660    %if &&nobs&x %then %do;
2340661    _temp&x %end;
2340662    %end;
2340663    ;
2340664    run;
2340665    proc sql;
2340666    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2340666  ! work._tempid p2 where p.name=p2.lhs;
2340667    quit;
2340668    data _temp&id;
2340669    set _temp&id;
2340670    where LHS ne '' and NAME ne '' and Node ne '';
2340671    run;
2340672    proc datasets lib=work nolist;
2340673    delete _tempAll;
2340674    run;
2340675    %let dsid = %sysfunc(open(_temp&id));
2340676    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2340677    %let dsid = %sysfunc(close(&dsid));
2340678    %if ^&&nobs&id %then %do;
2340679    proc datasets lib=work nolist;
2340680    delete _temp&id;
2340681    run;
2340682    quit;
2340683    %end;
2340684    %else %do;
2340685    %let scoreFlag&id = 1;
2340686    data _temp&id;
2340687    set _temp&id;
2340688    where LHS ne NAME and node ne '';
2340689    run;
2340690    %let dsid = %sysfunc(open(_temp&id));
2340691    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2340692    %let dsid = %sysfunc(close(&dsid));
2340693    %if ^&&nobs&id %then %do;
2340694    proc datasets lib=work nolist;
2340695    delete _temp&id;
2340696    run;
2340697    quit;
2340698    %end;
2340699    %else %do;
2340700    proc sort data=_temp&id nodupkey;
2340701    by LHS NAME;
2340702    run;
2340703    %end;
2340704    %end;
2340705    %end;
2340706    %end;
2340707    %mend varDept;
2340708    %macro optCode(outdata=fcmpdata);
2340709    %global fcmpStart;
2340710    %let fcmpStart = 0;
2340711    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2340712    %let NumNodes=9;
2340713    %do k=1 %to &NumNodes;
2340714    %vardept(fcmpdata=&outdata, id=&k);
2340715    %end;
2340716    %mend optCode;
2340717    %optcode(outData=EMWS8.Ensmbl38_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.38 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2340718    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2340719    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2340720    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2340721    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2340722    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2340723    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2340724    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2340725    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2340726    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2340727    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2340727  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

2340728    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2340729    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2340730    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2340731    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2340732    filename _pref
2340732  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
2340733    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2340734    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas.
2340735   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2340736   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2340737   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2340738   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2340739   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2340740   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2340741   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2340742   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2340743   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2340744   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2340745   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2340746   +LENGTH _WARN_ $4
2340747   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2340748   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2340749   +
2340750   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2340751   +
2340752   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2340753   +
2340754   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2340755   +
2340756   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2340757   +
2340758   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2340759   +
2340760   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2340761   +
2340762   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2340763   +
2340764   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2340765   +
2340766   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2340767   +
2340768   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2340769   +
2340770   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2340771   +
2340772   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2340773   +
2340774   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2340775   +
2340776   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2340777   +
2340778   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2340779   +
2340780   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2340781   +
2340782   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2340783   +
2340784   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2340785   +
2340786   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2340787   +
2340788   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2340789   +
2340790   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2340791   +
2340792   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2340793   +
2340794   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2340795   +
2340796   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2340797   +
2340798   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2340799   +
2340800   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2340801   +
2340802   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2340803   +
2340804   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2340805   +
2340806   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2340807   +
2340808   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2340809   +
2340810   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2340811   +
2340812   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2340813   +
2340814   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2340815   +
2340816   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2340817   +
2340818   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2340819   +
2340820   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2340821   +
2340822   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2340823   +
2340824   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2340825   +
2340826   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2340827   +
2340828   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2340829   +
2340830   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2340831   +
2340832   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2340833   +
2340834   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2340835   +
2340836   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
2340837   +
2340838   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2340839   +
2340840   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2340841   +
2340842   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2340843   +
2340844   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2340845   +
2340846   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2340847   +
2340848   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2340849   +
2340850   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
2340851   +
2340852   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2340853   +
2340854   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2340855   +
2340856   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2340857   +
2340858   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2340859   +
2340860   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2340861   +
2340862   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2340863   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2340864   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2340865   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2340866   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2340867   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2340868   +end;
MPRINT(EM_DIAGRAM):   end;
2340869   +else do;
MPRINT(EM_DIAGRAM):   else do;
2340870   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2340871   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2340872   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2340873   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2340874   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2340875   +   end;
MPRINT(EM_DIAGRAM):   end;
2340876   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2340877   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2340878   +   end;
MPRINT(EM_DIAGRAM):   end;
2340879   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2340880   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2340881   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2340882   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2340883   +   end;
MPRINT(EM_DIAGRAM):   end;
2340884   +end;
MPRINT(EM_DIAGRAM):   end;
2340885   +
2340886   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2340887   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2340888   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2340889   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2340890   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2340891   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2340892   +end;
MPRINT(EM_DIAGRAM):   end;
2340893   +else do;
MPRINT(EM_DIAGRAM):   else do;
2340894   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2340895   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2340896   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2340897   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2340898   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2340899   +   end;
MPRINT(EM_DIAGRAM):   end;
2340900   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2340901   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2340902   +   end;
MPRINT(EM_DIAGRAM):   end;
2340903   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2340904   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2340905   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2340906   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2340907   +   end;
MPRINT(EM_DIAGRAM):   end;
2340908   +end;
MPRINT(EM_DIAGRAM):   end;
2340909   +
2340910   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2340911   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2340912   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2340913   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2340914   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2340915   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2340916   +end;
MPRINT(EM_DIAGRAM):   end;
2340917   +else do;
MPRINT(EM_DIAGRAM):   else do;
2340918   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2340919   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2340920   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2340921   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2340922   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2340923   +   end;
MPRINT(EM_DIAGRAM):   end;
2340924   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2340925   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2340926   +   end;
MPRINT(EM_DIAGRAM):   end;
2340927   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2340928   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2340929   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2340930   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2340931   +   end;
MPRINT(EM_DIAGRAM):   end;
2340932   +end;
MPRINT(EM_DIAGRAM):   end;
2340933   +
2340934   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2340935   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2340936   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2340937   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2340938   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2340939   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2340940   +end;
MPRINT(EM_DIAGRAM):   end;
2340941   +else do;
MPRINT(EM_DIAGRAM):   else do;
2340942   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2340943   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2340944   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2340945   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2340946   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2340947   +   end;
MPRINT(EM_DIAGRAM):   end;
2340948   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2340949   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2340950   +   end;
MPRINT(EM_DIAGRAM):   end;
2340951   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2340952   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2340953   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2340954   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2340955   +   end;
MPRINT(EM_DIAGRAM):   end;
2340956   +end;
MPRINT(EM_DIAGRAM):   end;
2340957   +
2340958   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2340959   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2340960   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2340961   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2340962   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2340963   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2340964   +end;
MPRINT(EM_DIAGRAM):   end;
2340965   +else do;
MPRINT(EM_DIAGRAM):   else do;
2340966   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2340967   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2340968   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2340969   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2340970   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2340971   +   end;
MPRINT(EM_DIAGRAM):   end;
2340972   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2340973   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2340974   +   end;
MPRINT(EM_DIAGRAM):   end;
2340975   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2340976   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2340977   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2340978   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2340979   +   end;
MPRINT(EM_DIAGRAM):   end;
2340980   +end;
MPRINT(EM_DIAGRAM):   end;
2340981   +
2340982   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2340983   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2340984   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2340985   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2340986   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2340987   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2340988   +end;
MPRINT(EM_DIAGRAM):   end;
2340989   +else do;
MPRINT(EM_DIAGRAM):   else do;
2340990   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2340991   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2340992   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2340993   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2340994   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2340995   +   end;
MPRINT(EM_DIAGRAM):   end;
2340996   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2340997   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2340998   +   end;
MPRINT(EM_DIAGRAM):   end;
2340999   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2341000   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2341001   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2341002   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2341003   +   end;
MPRINT(EM_DIAGRAM):   end;
2341004   +end;
MPRINT(EM_DIAGRAM):   end;
2341005   +
2341006   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2341007   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2341008   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2341009   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2341010   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2341011   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2341012   +end;
MPRINT(EM_DIAGRAM):   end;
2341013   +else do;
MPRINT(EM_DIAGRAM):   else do;
2341014   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2341015   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2341016   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2341017   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2341018   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2341019   +   end;
MPRINT(EM_DIAGRAM):   end;
2341020   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2341021   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2341022   +   end;
MPRINT(EM_DIAGRAM):   end;
2341023   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2341024   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2341025   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2341026   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2341027   +   end;
MPRINT(EM_DIAGRAM):   end;
2341028   +end;
MPRINT(EM_DIAGRAM):   end;
2341029   +
2341030   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2341031   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2341032   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2341033   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2341034   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2341035   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2341036   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2341037   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2341038   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2341039   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2341040   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2341041   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2341042   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2341043   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2341044   +end;
MPRINT(EM_DIAGRAM):   end;
2341045   +else do;
MPRINT(EM_DIAGRAM):   else do;
2341046   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2341047   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2341048   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2341049   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2341050   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2341051   +   end;
MPRINT(EM_DIAGRAM):   end;
2341052   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2341053   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2341054   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2341055   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2341056   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2341057   +   end;
MPRINT(EM_DIAGRAM):   end;
2341058   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2341059   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2341060   +   end;
MPRINT(EM_DIAGRAM):   end;
2341061   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2341062   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2341063   +   end;
MPRINT(EM_DIAGRAM):   end;
2341064   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2341065   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2341066   +   end;
MPRINT(EM_DIAGRAM):   end;
2341067   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2341068   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2341069   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2341070   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2341071   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2341072   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2341073   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2341074   +   end;
MPRINT(EM_DIAGRAM):   end;
2341075   +end;
MPRINT(EM_DIAGRAM):   end;
2341076   +
2341077   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2341078   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2341079   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2341080   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2341081   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2341082   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2341083   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2341084   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2341085   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2341086   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2341087   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2341088   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2341089   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2341090   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2341091   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2341092   +end;
MPRINT(EM_DIAGRAM):   end;
2341093   +else do;
MPRINT(EM_DIAGRAM):   else do;
2341094   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2341095   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2341096   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2341097   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2341098   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2341099   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2341100   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2341101   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2341102   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2341103   +         end;
MPRINT(EM_DIAGRAM):   end;
2341104   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2341105   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2341106   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2341107   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2341108   +            end;
MPRINT(EM_DIAGRAM):   end;
2341109   +         end;
MPRINT(EM_DIAGRAM):   end;
2341110   +      end;
MPRINT(EM_DIAGRAM):   end;
2341111   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2341112   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2341113   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2341114   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2341115   +         end;
MPRINT(EM_DIAGRAM):   end;
2341116   +      end;
MPRINT(EM_DIAGRAM):   end;
2341117   +   end;
MPRINT(EM_DIAGRAM):   end;
2341118   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2341119   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2341120   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2341121   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2341122   +      end;
MPRINT(EM_DIAGRAM):   end;
2341123   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2341124   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2341125   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2341126   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2341127   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2341128   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2341129   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2341130   +         end;
MPRINT(EM_DIAGRAM):   end;
2341131   +      end;
MPRINT(EM_DIAGRAM):   end;
2341132   +   end;
MPRINT(EM_DIAGRAM):   end;
2341133   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2341134   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2341135   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2341136   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2341137   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2341138   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2341139   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2341140   +   end;
MPRINT(EM_DIAGRAM):   end;
2341141   +end;
MPRINT(EM_DIAGRAM):   end;
2341142   +
2341143   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2341144   +*** Checking missing input Interval
2341145   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2341146   +
2341147   +IF NMISS(
2341148   +   AcceptedCmpTotal ,
2341149   +   Age ,
2341150   +   Frq ,
2341151   +   Income ,
2341152   +   Kidhome ,
2341153   +   Mnt ,
2341154   +   MntFishProducts ,
2341155   +   MntFruits ,
2341156   +   MntGoldProds ,
2341157   +   MntMeatProducts ,
2341158   +   MntSweetProducts ,
2341159   +   MntWines ,
2341160   +   MonthsAsCustomer ,
2341161   +   NumCatalogPurchases ,
2341162   +   NumDealsPurchases ,
2341163   +   NumDistPurchases ,
2341164   +   NumStorePurchases ,
2341165   +   NumWebPurchases ,
2341166   +   NumWebVisitsMonth ,
2341167   +   RFMstat ,
2341168   +   RMntFrq ,
2341169   +   Recency ,
2341170   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2341171   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2341172   +
2341173   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2341174   +END;
MPRINT(EM_DIAGRAM):   END;
2341175   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2341176   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2341177   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2341178   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2341179   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2341180   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2341181   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2341182   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2341183   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2341184   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2341185   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2341186   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2341187   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2341188   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2341189   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2341190   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2341191   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2341192   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2341193   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2341194   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2341195   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2341196   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2341197   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2341198   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2341199   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2341200   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2341201   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2341202   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2341203   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2341204   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2341205   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2341206   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2341207   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2341208   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2341209   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2341210   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2341211   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2341212   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2341213   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2341214   +END;
MPRINT(EM_DIAGRAM):   END;
2341215   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2341216   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2341217   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2341218   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2341219   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2341220   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2341221   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2341222   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2341223   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2341224   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2341225   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2341226   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2341227   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2341228   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2341229   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2341230   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2341231   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2341232   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2341233   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2341234   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2341235   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2341236   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2341237   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2341238   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2341239   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2341240   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2341241   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2341242   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2341243   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2341244   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2341245   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2341246   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2341247   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2341248   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2341249   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2341250   +   ELSE S_NumCatalogPurchases
2341251   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2341252   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2341253   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2341254   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2341255   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2341256   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2341257   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2341258   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2341259   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2341260   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2341261   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2341262   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2341263   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2341264   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2341265   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2341266   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2341267   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2341268   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2341269   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2341270   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2341271   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2341272   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2341273   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2341274   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2341275   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2341276   +END;
MPRINT(EM_DIAGRAM):   END;
2341277   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2341278   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2341279   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2341280   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2341281   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2341282   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2341283   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2341284   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2341285   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2341286   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2341287   +   H1x1_1  =    -0.08478534961354 * S_AcceptedCmpTotal
2341288   +          +     0.21528166003219 * S_Age  +    -0.16079737422774 * S_Frq
2341289   +          +     0.04922044955183 * S_Income  +     0.06245849112135 *
2341290   +        S_Kidhome  +    -0.12820970008154 * S_Mnt  +    -0.00676959308959 *
2341291   +        S_MntFishProducts  +    -0.20367403957375 * S_MntFruits
2341292   +          +    -0.06459558558968 * S_MntGoldProds  +     0.01557669100416 *
2341293   +        S_MntMeatProducts  +    -0.16342003924117 * S_MntSweetProducts
2341294   +          +     0.34676276369853 * S_MntWines  +    -0.08454570225616 *
2341295   +        S_MonthsAsCustomer  +    -0.00318885387905 * S_NumCatalogPurchases
2341296   +          +      0.1112677116841 * S_NumDealsPurchases
2341297   +          +     0.01563584187072 * S_NumDistPurchases
2341298   +          +     0.19193969522995 * S_NumStorePurchases
2341299   +          +      0.3133556199984 * S_NumWebPurchases
2341300   +          +    -0.21884874785716 * S_NumWebVisitsMonth
2341301   +          +     0.08478875792216 * S_RFMstat  +     0.05964414665285 *
2341302   +        S_RMntFrq  +    -0.12595000497726 * S_Recency
2341303   +          +     -0.1238719414537 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.08478534961354 * S_AcceptedCmpTotal + 0.21528166003219 * 
S_Age + -0.16079737422774 * S_Frq + 0.04922044955183 * S_Income + 0.06245849112135 * S_Kidhome 
+ -0.12820970008154 * S_Mnt + -0.00676959308959 * S_MntFishProducts + -0.20367403957375 * 
S_MntFruits + -0.06459558558968 * S_MntGoldProds + 0.01557669100416 * S_MntMeatProducts + 
-0.16342003924117 * S_MntSweetProducts + 0.34676276369853 * S_MntWines + -0.08454570225616 * 
S_MonthsAsCustomer + -0.00318885387905 * S_NumCatalogPurchases + 0.1112677116841 * 
S_NumDealsPurchases + 0.01563584187072 * S_NumDistPurchases + 0.19193969522995 * 
S_NumStorePurchases + 0.3133556199984 * S_NumWebPurchases + -0.21884874785716 * 
S_NumWebVisitsMonth + 0.08478875792216 * S_RFMstat + 0.05964414665285 * S_RMntFrq + 
-0.12595000497726 * S_Recency + -0.1238719414537 * S_Teenhome ;
2341304   +   H1x1_2  =     0.20807487357943 * S_AcceptedCmpTotal
2341305   +          +    -0.27223051908987 * S_Age  +     0.28649391533674 * S_Frq
2341306   +          +     0.46493719675068 * S_Income  +     0.10180542910079 *
2341307   +        S_Kidhome  +    -0.19573056673819 * S_Mnt  +    -0.05332725327514 *
2341308   +        S_MntFishProducts  +    -0.28610692329433 * S_MntFruits
2341309   +          +    -0.13417237194849 * S_MntGoldProds  +     0.45697707494335 *
2341310   +        S_MntMeatProducts  +    -0.28280545785477 * S_MntSweetProducts
2341311   +          +    -0.13234920069688 * S_MntWines  +     -0.2710938018651 *
2341312   +        S_MonthsAsCustomer  +     0.31174284041905 * S_NumCatalogPurchases
2341313   +          +     0.30225032753275 * S_NumDealsPurchases
2341314   +          +     0.33833359923595 * S_NumDistPurchases
2341315   +          +    -0.20255599575849 * S_NumStorePurchases
2341316   +          +    -0.12040071168942 * S_NumWebPurchases
2341317   +          +    -0.12407090307061 * S_NumWebVisitsMonth
2341318   +          +    -0.05688936259515 * S_RFMstat  +     0.15514736649245 *
2341319   +        S_RMntFrq  +     0.00838555462657 * S_Recency
2341320   +          +     0.04609426861136 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.20807487357943 * S_AcceptedCmpTotal + -0.27223051908987 * 
S_Age + 0.28649391533674 * S_Frq + 0.46493719675068 * S_Income + 0.10180542910079 * S_Kidhome 
+ -0.19573056673819 * S_Mnt + -0.05332725327514 * S_MntFishProducts + -0.28610692329433 * 
S_MntFruits + -0.13417237194849 * S_MntGoldProds + 0.45697707494335 * S_MntMeatProducts + 
-0.28280545785477 * S_MntSweetProducts + -0.13234920069688 * S_MntWines + -0.2710938018651 * 
S_MonthsAsCustomer + 0.31174284041905 * S_NumCatalogPurchases + 0.30225032753275 * 
S_NumDealsPurchases + 0.33833359923595 * S_NumDistPurchases + -0.20255599575849 * 
S_NumStorePurchases + -0.12040071168942 * S_NumWebPurchases + -0.12407090307061 * 
S_NumWebVisitsMonth + -0.05688936259515 * S_RFMstat + 0.15514736649245 * S_RMntFrq + 
0.00838555462657 * S_Recency + 0.04609426861136 * S_Teenhome ;
2341321   +   H1x1_3  =    -0.30541463116928 * S_AcceptedCmpTotal
2341322   +          +    -0.01746117216025 * S_Age  +    -0.44156473334329 * S_Frq
2341323   +          +    -0.51952426304193 * S_Income  +     0.20419921255777 *
2341324   +        S_Kidhome  +    -0.18174316707953 * S_Mnt  +    -0.03813675536406 *
2341325   +        S_MntFishProducts  +     -0.0959023413712 * S_MntFruits
2341326   +          +     0.12724081783278 * S_MntGoldProds  +    -0.07639148541426 *
2341327   +        S_MntMeatProducts  +     -0.0797214413833 * S_MntSweetProducts
2341328   +          +    -0.57705931875808 * S_MntWines  +    -0.12638551201991 *
2341329   +        S_MonthsAsCustomer  +    -0.21854676704549 * S_NumCatalogPurchases
2341330   +          +     0.16792903091627 * S_NumDealsPurchases
2341331   +          +    -0.37408945626745 * S_NumDistPurchases
2341332   +          +    -0.18067262995566 * S_NumStorePurchases
2341333   +          +     0.21192146789881 * S_NumWebPurchases
2341334   +          +    -0.23547702310669 * S_NumWebVisitsMonth
2341335   +          +    -0.02272089758813 * S_RFMstat  +    -0.16409330281075 *
2341336   +        S_RMntFrq  +     0.45021846112946 * S_Recency
2341337   +          +     0.32988735727394 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.30541463116928 * S_AcceptedCmpTotal + -0.01746117216025 * 
S_Age + -0.44156473334329 * S_Frq + -0.51952426304193 * S_Income + 0.20419921255777 * 
S_Kidhome + -0.18174316707953 * S_Mnt + -0.03813675536406 * S_MntFishProducts + 
-0.0959023413712 * S_MntFruits + 0.12724081783278 * S_MntGoldProds + -0.07639148541426 * 
S_MntMeatProducts + -0.0797214413833 * S_MntSweetProducts + -0.57705931875808 * S_MntWines + 
-0.12638551201991 * S_MonthsAsCustomer + -0.21854676704549 * S_NumCatalogPurchases + 
0.16792903091627 * S_NumDealsPurchases + -0.37408945626745 * S_NumDistPurchases + 
-0.18067262995566 * S_NumStorePurchases + 0.21192146789881 * S_NumWebPurchases + 
-0.23547702310669 * S_NumWebVisitsMonth + -0.02272089758813 * S_RFMstat + -0.16409330281075 * 
S_RMntFrq + 0.45021846112946 * S_Recency + 0.32988735727394 * S_Teenhome ;
2341338   +   H1x1_4  =     0.05205198916717 * S_AcceptedCmpTotal
2341339   +          +     0.25568653619739 * S_Age  +    -0.31037252146959 * S_Frq
2341340   +          +     0.42636025358982 * S_Income  +    -0.24453708980866 *
2341341   +        S_Kidhome  +    -0.07832530945892 * S_Mnt  +    -0.48332124476182 *
2341342   +        S_MntFishProducts  +    -0.13932879119138 * S_MntFruits
2341343   +          +      0.1984121566988 * S_MntGoldProds  +     1.14965897015972 *
2341344   +        S_MntMeatProducts  +     0.07027485457428 * S_MntSweetProducts
2341345   +          +    -0.56598097754046 * S_MntWines  +     0.07317190938075 *
2341346   +        S_MonthsAsCustomer  +       0.075756987983 * S_NumCatalogPurchases
2341347   +          +     0.29407429399136 * S_NumDealsPurchases
2341348   +          +     0.01610745252195 * S_NumDistPurchases
2341349   +          +    -0.17767939085628 * S_NumStorePurchases
2341350   +          +    -0.15168958538637 * S_NumWebPurchases
2341351   +          +     0.17433622143988 * S_NumWebVisitsMonth
2341352   +          +     0.11635602973993 * S_RFMstat  +     0.32632751843433 *
2341353   +        S_RMntFrq  +    -0.24758483374458 * S_Recency
2341354   +          +    -0.31468291567479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.05205198916717 * S_AcceptedCmpTotal + 0.25568653619739 * 
S_Age + -0.31037252146959 * S_Frq + 0.42636025358982 * S_Income + -0.24453708980866 * 
S_Kidhome + -0.07832530945892 * S_Mnt + -0.48332124476182 * S_MntFishProducts + 
-0.13932879119138 * S_MntFruits + 0.1984121566988 * S_MntGoldProds + 1.14965897015972 * 
S_MntMeatProducts + 0.07027485457428 * S_MntSweetProducts + -0.56598097754046 * S_MntWines + 
0.07317190938075 * S_MonthsAsCustomer + 0.075756987983 * S_NumCatalogPurchases + 
0.29407429399136 * S_NumDealsPurchases + 0.01610745252195 * S_NumDistPurchases + 
-0.17767939085628 * S_NumStorePurchases + -0.15168958538637 * S_NumWebPurchases + 
0.17433622143988 * S_NumWebVisitsMonth + 0.11635602973993 * S_RFMstat + 0.32632751843433 * 
S_RMntFrq + -0.24758483374458 * S_Recency + -0.31468291567479 * S_Teenhome ;
2341355   +   H1x1_5  =    -0.59657492903543 * S_AcceptedCmpTotal
2341356   +          +     0.23513672763458 * S_Age  +    -0.14882104210954 * S_Frq
2341357   +          +    -0.07762660201035 * S_Income  +     0.01424651904783 *
2341358   +        S_Kidhome  +     0.18748607813081 * S_Mnt  +     0.11088464897095 *
2341359   +        S_MntFishProducts  +    -0.10064450211557 * S_MntFruits
2341360   +          +     0.11161391354421 * S_MntGoldProds  +    -1.36345407290644 *
2341361   +        S_MntMeatProducts  +     0.04868729717044 * S_MntSweetProducts
2341362   +          +     0.80284342329654 * S_MntWines  +     -0.0179539622492 *
2341363   +        S_MonthsAsCustomer  +    -0.60051908798715 * S_NumCatalogPurchases
2341364   +          +    -0.37976451362108 * S_NumDealsPurchases
2341365   +          +    -0.17027731520801 * S_NumDistPurchases
2341366   +          +     0.59849493667087 * S_NumStorePurchases
2341367   +          +     0.65481480560301 * S_NumWebPurchases
2341368   +          +    -0.68253224576609 * S_NumWebVisitsMonth
2341369   +          +    -0.16723490165629 * S_RFMstat  +    -0.10533797887644 *
2341370   +        S_RMntFrq  +     0.81382723915873 * S_Recency
2341371   +          +     0.06049401205856 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.59657492903543 * S_AcceptedCmpTotal + 0.23513672763458 * 
S_Age + -0.14882104210954 * S_Frq + -0.07762660201035 * S_Income + 0.01424651904783 * 
S_Kidhome + 0.18748607813081 * S_Mnt + 0.11088464897095 * S_MntFishProducts + 
-0.10064450211557 * S_MntFruits + 0.11161391354421 * S_MntGoldProds + -1.36345407290644 * 
S_MntMeatProducts + 0.04868729717044 * S_MntSweetProducts + 0.80284342329654 * S_MntWines + 
-0.0179539622492 * S_MonthsAsCustomer + -0.60051908798715 * S_NumCatalogPurchases + 
-0.37976451362108 * S_NumDealsPurchases + -0.17027731520801 * S_NumDistPurchases + 
0.59849493667087 * S_NumStorePurchases + 0.65481480560301 * S_NumWebPurchases + 
-0.68253224576609 * S_NumWebVisitsMonth + -0.16723490165629 * S_RFMstat + -0.10533797887644 * 
S_RMntFrq + 0.81382723915873 * S_Recency + 0.06049401205856 * S_Teenhome ;
2341372   +   H1x1_6  =    -0.07547841798202 * S_AcceptedCmpTotal
2341373   +          +     0.22445278254589 * S_Age  +    -0.26357481075143 * S_Frq
2341374   +          +     0.06894154144261 * S_Income  +     0.20713236126681 *
2341375   +        S_Kidhome  +    -0.14103612934526 * S_Mnt  +     0.36334508557452 *
2341376   +        S_MntFishProducts  +    -0.20862425337296 * S_MntFruits
2341377   +          +    -0.29089690099273 * S_MntGoldProds  +     0.11336893090527 *
2341378   +        S_MntMeatProducts  +    -0.13547374281924 * S_MntSweetProducts
2341379   +          +     0.02228828195539 * S_MntWines  +    -0.19257650420334 *
2341380   +        S_MonthsAsCustomer  +      0.1365526319824 * S_NumCatalogPurchases
2341381   +          +    -0.07686699131623 * S_NumDealsPurchases
2341382   +          +    -0.07220460738926 * S_NumDistPurchases
2341383   +          +    -0.06554027468389 * S_NumStorePurchases
2341384   +          +     0.10422838158001 * S_NumWebPurchases
2341385   +          +    -0.03858550147892 * S_NumWebVisitsMonth
2341386   +          +    -0.06397448441373 * S_RFMstat  +     0.21747838287147 *
2341387   +        S_RMntFrq  +     0.24839313159913 * S_Recency
2341388   +          +    -0.06317317698653 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.07547841798202 * S_AcceptedCmpTotal + 0.22445278254589 * 
S_Age + -0.26357481075143 * S_Frq + 0.06894154144261 * S_Income + 0.20713236126681 * S_Kidhome 
+ -0.14103612934526 * S_Mnt + 0.36334508557452 * S_MntFishProducts + -0.20862425337296 * 
S_MntFruits + -0.29089690099273 * S_MntGoldProds + 0.11336893090527 * S_MntMeatProducts + 
-0.13547374281924 * S_MntSweetProducts + 0.02228828195539 * S_MntWines + -0.19257650420334 * 
S_MonthsAsCustomer + 0.1365526319824 * S_NumCatalogPurchases + -0.07686699131623 * 
S_NumDealsPurchases + -0.07220460738926 * S_NumDistPurchases + -0.06554027468389 * 
S_NumStorePurchases + 0.10422838158001 * S_NumWebPurchases + -0.03858550147892 * 
S_NumWebVisitsMonth + -0.06397448441373 * S_RFMstat + 0.21747838287147 * S_RMntFrq + 
0.24839313159913 * S_Recency + -0.06317317698653 * S_Teenhome ;
2341389   +   H1x1_7  =    -0.08604903695444 * S_AcceptedCmpTotal
2341390   +          +    -0.14807437541992 * S_Age  +     0.01466157584549 * S_Frq
2341391   +          +    -0.09883966180507 * S_Income  +     0.51992566778352 *
2341392   +        S_Kidhome  +     0.29795006703636 * S_Mnt  +    -0.08922020500011 *
2341393   +        S_MntFishProducts  +     0.19836834402079 * S_MntFruits
2341394   +          +    -0.11292241468378 * S_MntGoldProds  +       0.584464452194 *
2341395   +        S_MntMeatProducts  +     0.22625326024073 * S_MntSweetProducts
2341396   +          +     0.24074129944382 * S_MntWines  +     0.13538906557527 *
2341397   +        S_MonthsAsCustomer  +    -0.01228250248922 * S_NumCatalogPurchases
2341398   +          +    -0.07920122387563 * S_NumDealsPurchases
2341399   +          +      0.3649244061347 * S_NumDistPurchases
2341400   +          +     0.36475853688403 * S_NumStorePurchases
2341401   +          +     0.02153991404063 * S_NumWebPurchases
2341402   +          +    -0.94080669139388 * S_NumWebVisitsMonth
2341403   +          +     0.24853677977494 * S_RFMstat  +     0.37015183933951 *
2341404   +        S_RMntFrq  +      0.6724157721663 * S_Recency
2341405   +          +      0.1615471643866 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_7 = -0.08604903695444 * S_AcceptedCmpTotal + -0.14807437541992 * 
S_Age + 0.01466157584549 * S_Frq + -0.09883966180507 * S_Income + 0.51992566778352 * S_Kidhome 
+ 0.29795006703636 * S_Mnt + -0.08922020500011 * S_MntFishProducts + 0.19836834402079 * 
S_MntFruits + -0.11292241468378 * S_MntGoldProds + 0.584464452194 * S_MntMeatProducts + 
0.22625326024073 * S_MntSweetProducts + 0.24074129944382 * S_MntWines + 0.13538906557527 * 
S_MonthsAsCustomer + -0.01228250248922 * S_NumCatalogPurchases + -0.07920122387563 * 
S_NumDealsPurchases + 0.3649244061347 * S_NumDistPurchases + 0.36475853688403 * 
S_NumStorePurchases + 0.02153991404063 * S_NumWebPurchases + -0.94080669139388 * 
S_NumWebVisitsMonth + 0.24853677977494 * S_RFMstat + 0.37015183933951 * S_RMntFrq + 
0.6724157721663 * S_Recency + 0.1615471643866 * S_Teenhome ;
2341406   +   H1x1_1  = H1x1_1  +     0.04431608362128 * AcceptedCmp10
2341407   +          +       0.145592087795 * AcceptedCmp20  +    -0.18972867139938 *
2341408   +        AcceptedCmp30  +     0.11297731320888 * AcceptedCmp40
2341409   +          +     0.15203974410995 * AcceptedCmp50  +     0.05130421316428 *
2341410   +        Complain0  +     0.33576036450343 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.04431608362128 * AcceptedCmp10 + 0.145592087795 * 
AcceptedCmp20 + -0.18972867139938 * AcceptedCmp30 + 0.11297731320888 * AcceptedCmp40 + 
0.15203974410995 * AcceptedCmp50 + 0.05130421316428 * Complain0 + 0.33576036450343 * 
HigherEducationBinary0 ;
2341411   +   H1x1_2  = H1x1_2  +    -0.05495742609855 * AcceptedCmp10
2341412   +          +    -0.08873650760176 * AcceptedCmp20  +    -0.16380549867313 *
2341413   +        AcceptedCmp30  +    -0.24495261884932 * AcceptedCmp40
2341414   +          +    -0.22199506896148 * AcceptedCmp50  +       0.149484615172 *
2341415   +        Complain0  +     0.01091791142552 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.05495742609855 * AcceptedCmp10 + -0.08873650760176 
* AcceptedCmp20 + -0.16380549867313 * AcceptedCmp30 + -0.24495261884932 * AcceptedCmp40 + 
-0.22199506896148 * AcceptedCmp50 + 0.149484615172 * Complain0 + 0.01091791142552 * 
HigherEducationBinary0 ;
2341416   +   H1x1_3  = H1x1_3  +     0.03473702421341 * AcceptedCmp10
2341417   +          +    -0.11226718065217 * AcceptedCmp20  +     0.19024579384296 *
2341418   +        AcceptedCmp30  +     0.15478548865598 * AcceptedCmp40
2341419   +          +     0.15222823671897 * AcceptedCmp50  +     0.07713012834947 *
2341420   +        Complain0  +    -0.18741708707661 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.03473702421341 * AcceptedCmp10 + -0.11226718065217 * 
AcceptedCmp20 + 0.19024579384296 * AcceptedCmp30 + 0.15478548865598 * AcceptedCmp40 + 
0.15222823671897 * AcceptedCmp50 + 0.07713012834947 * Complain0 + -0.18741708707661 * 
HigherEducationBinary0 ;
2341421   +   H1x1_4  = H1x1_4  +    -0.25622127302429 * AcceptedCmp10
2341422   +          +    -0.39059103518073 * AcceptedCmp20  +    -0.29716603631807 *
2341423   +        AcceptedCmp30  +    -0.20875694971526 * AcceptedCmp40
2341424   +          +    -0.35128787139073 * AcceptedCmp50  +    -0.28848733462386 *
2341425   +        Complain0  +      0.4276503747649 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.25622127302429 * AcceptedCmp10 + -0.39059103518073 
* AcceptedCmp20 + -0.29716603631807 * AcceptedCmp30 + -0.20875694971526 * AcceptedCmp40 + 
-0.35128787139073 * AcceptedCmp50 + -0.28848733462386 * Complain0 + 0.4276503747649 * 
HigherEducationBinary0 ;
2341426   +   H1x1_5  = H1x1_5  +    -0.06574875851088 * AcceptedCmp10
2341427   +          +    -0.27375195259265 * AcceptedCmp20  +     -0.2740681662293 *
2341428   +        AcceptedCmp30  +    -0.14697156898736 * AcceptedCmp40
2341429   +          +     0.17684649468835 * AcceptedCmp50  +    -0.09979172944646 *
2341430   +        Complain0  +     0.38986664202197 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.06574875851088 * AcceptedCmp10 + -0.27375195259265 
* AcceptedCmp20 + -0.2740681662293 * AcceptedCmp30 + -0.14697156898736 * AcceptedCmp40 + 
0.17684649468835 * AcceptedCmp50 + -0.09979172944646 * Complain0 + 0.38986664202197 * 
HigherEducationBinary0 ;
2341431   +   H1x1_6  = H1x1_6  +     0.08696678529441 * AcceptedCmp10
2341432   +          +     0.09467543942215 * AcceptedCmp20  +     0.04586779705477 *
2341433   +        AcceptedCmp30  +    -0.12591921836379 * AcceptedCmp40
2341434   +          +     0.20150138392895 * AcceptedCmp50  +     0.27764282700214 *
2341435   +        Complain0  +     0.13985738522066 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.08696678529441 * AcceptedCmp10 + 0.09467543942215 * 
AcceptedCmp20 + 0.04586779705477 * AcceptedCmp30 + -0.12591921836379 * AcceptedCmp40 + 
0.20150138392895 * AcceptedCmp50 + 0.27764282700214 * Complain0 + 0.13985738522066 * 
HigherEducationBinary0 ;
2341436   +   H1x1_7  = H1x1_7  +    -0.10455069401218 * AcceptedCmp10
2341437   +          +      0.1311831941372 * AcceptedCmp20  +     0.17844209104604 *
2341438   +        AcceptedCmp30  +     0.19406707592815 * AcceptedCmp40
2341439   +          +    -0.00068155012319 * AcceptedCmp50  +     0.13245364846536 *
2341440   +        Complain0  +    -0.05165256160872 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + -0.10455069401218 * AcceptedCmp10 + 0.1311831941372 * 
AcceptedCmp20 + 0.17844209104604 * AcceptedCmp30 + 0.19406707592815 * AcceptedCmp40 + 
-0.00068155012319 * AcceptedCmp50 + 0.13245364846536 * Complain0 + -0.05165256160872 * 
HigherEducationBinary0 ;
2341441   +   H1x1_1  = H1x1_1  +     0.28967939808759 * Education2n_Cycle
2341442   +          +    -0.15795056374781 * EducationBasic  +    -0.00649803471307 *
2341443   +        EducationGraduation  +     0.19520715924532 * EducationMaster
2341444   +          +     0.07744097241553 * Marital_StatusDivorced
2341445   +          +     -0.0247463100385 * Marital_StatusMarried
2341446   +          +     0.05804915234573 * Marital_StatusSingle
2341447   +          +    -0.08320125047871 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.28967939808759 * Education2n_Cycle + 
-0.15795056374781 * EducationBasic + -0.00649803471307 * EducationGraduation + 
0.19520715924532 * EducationMaster + 0.07744097241553 * Marital_StatusDivorced + 
-0.0247463100385 * Marital_StatusMarried + 0.05804915234573 * Marital_StatusSingle + 
-0.08320125047871 * Marital_StatusTogether ;
2341448   +   H1x1_2  = H1x1_2  +     0.12524444422085 * Education2n_Cycle
2341449   +          +    -0.30278286924729 * EducationBasic  +     0.37480827366421 *
2341450   +        EducationGraduation  +     0.34209136290694 * EducationMaster
2341451   +          +     0.01390668926269 * Marital_StatusDivorced
2341452   +          +     0.01136282152074 * Marital_StatusMarried
2341453   +          +     0.12450246418789 * Marital_StatusSingle
2341454   +          +     -0.1576148519872 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12524444422085 * Education2n_Cycle + 
-0.30278286924729 * EducationBasic + 0.37480827366421 * EducationGraduation + 0.34209136290694 
* EducationMaster + 0.01390668926269 * Marital_StatusDivorced + 0.01136282152074 * 
Marital_StatusMarried + 0.12450246418789 * Marital_StatusSingle + -0.1576148519872 * 
Marital_StatusTogether ;
2341455   +   H1x1_3  = H1x1_3  +    -0.14589041643593 * Education2n_Cycle
2341456   +          +    -0.15691118816463 * EducationBasic  +      0.1993616073183 *
2341457   +        EducationGraduation  +     0.02862010255145 * EducationMaster
2341458   +          +    -0.19133456931879 * Marital_StatusDivorced
2341459   +          +     0.56263566654996 * Marital_StatusMarried
2341460   +          +    -0.42172822038882 * Marital_StatusSingle
2341461   +          +     0.42023140643292 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14589041643593 * Education2n_Cycle + 
-0.15691118816463 * EducationBasic + 0.1993616073183 * EducationGraduation + 0.02862010255145 
* EducationMaster + -0.19133456931879 * Marital_StatusDivorced + 0.56263566654996 * 
Marital_StatusMarried + -0.42172822038882 * Marital_StatusSingle + 0.42023140643292 * 
Marital_StatusTogether ;
2341462   +   H1x1_4  = H1x1_4  +     0.10038585978656 * Education2n_Cycle
2341463   +          +    -0.11388609002984 * EducationBasic  +    -0.14980553500983 *
2341464   +        EducationGraduation  +    -0.07646595330369 * EducationMaster
2341465   +          +    -0.19871205065609 * Marital_StatusDivorced
2341466   +          +    -0.14730795681603 * Marital_StatusMarried
2341467   +          +     0.05055432510362 * Marital_StatusSingle
2341468   +          +     0.06558965292395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.10038585978656 * Education2n_Cycle + 
-0.11388609002984 * EducationBasic + -0.14980553500983 * EducationGraduation + 
-0.07646595330369 * EducationMaster + -0.19871205065609 * Marital_StatusDivorced + 
-0.14730795681603 * Marital_StatusMarried + 0.05055432510362 * Marital_StatusSingle + 
0.06558965292395 * Marital_StatusTogether ;
2341469   +   H1x1_5  = H1x1_5  +      0.0015835307855 * Education2n_Cycle
2341470   +          +    -0.22658746797638 * EducationBasic  +    -0.03445982386977 *
2341471   +        EducationGraduation  +     0.11375378192685 * EducationMaster
2341472   +          +    -0.35623807358995 * Marital_StatusDivorced
2341473   +          +     0.30324726283965 * Marital_StatusMarried
2341474   +          +    -0.18561093467927 * Marital_StatusSingle
2341475   +          +       0.395424582152 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0015835307855 * Education2n_Cycle + 
-0.22658746797638 * EducationBasic + -0.03445982386977 * EducationGraduation + 
0.11375378192685 * EducationMaster + -0.35623807358995 * Marital_StatusDivorced + 
0.30324726283965 * Marital_StatusMarried + -0.18561093467927 * Marital_StatusSingle + 
0.395424582152 * Marital_StatusTogether ;
2341476   +   H1x1_6  = H1x1_6  +    -0.23751822587858 * Education2n_Cycle
2341477   +          +    -0.01687300040825 * EducationBasic  +     0.23236967703011 *
2341478   +        EducationGraduation  +      0.0725289831541 * EducationMaster
2341479   +          +     0.11581014663368 * Marital_StatusDivorced
2341480   +          +    -0.31070638037659 * Marital_StatusMarried
2341481   +          +     0.17131747253949 * Marital_StatusSingle
2341482   +          +    -0.19314955966476 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.23751822587858 * Education2n_Cycle + 
-0.01687300040825 * EducationBasic + 0.23236967703011 * EducationGraduation + 0.0725289831541 
* EducationMaster + 0.11581014663368 * Marital_StatusDivorced + -0.31070638037659 * 
Marital_StatusMarried + 0.17131747253949 * Marital_StatusSingle + -0.19314955966476 * 
Marital_StatusTogether ;
2341483   +   H1x1_7  = H1x1_7  +     0.00103693282479 * Education2n_Cycle
2341484   +          +     0.12608909598752 * EducationBasic  +     -0.2366673091666 *
2341485   +        EducationGraduation  +     0.24413217290922 * EducationMaster
2341486   +          +    -0.42450599871892 * Marital_StatusDivorced
2341487   +          +     0.48162905075885 * Marital_StatusMarried
2341488   +          +    -0.26618507749283 * Marital_StatusSingle
2341489   +          +     0.38053668740338 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + 0.00103693282479 * Education2n_Cycle + 
0.12608909598752 * EducationBasic + -0.2366673091666 * EducationGraduation + 0.24413217290922 
* EducationMaster + -0.42450599871892 * Marital_StatusDivorced + 0.48162905075885 * 
Marital_StatusMarried + -0.26618507749283 * Marital_StatusSingle + 0.38053668740338 * 
Marital_StatusTogether ;
2341490   +   H1x1_1  =     0.12149136705075 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.12149136705075 + H1x1_1 ;
2341491   +   H1x1_2  =    -0.97489696657001 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.97489696657001 + H1x1_2 ;
2341492   +   H1x1_3  =    -0.70605220802968 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.70605220802968 + H1x1_3 ;
2341493   +   H1x1_4  =    -1.07783206982379 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.07783206982379 + H1x1_4 ;
2341494   +   H1x1_5  =    -1.00400706261511 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.00400706261511 + H1x1_5 ;
2341495   +   H1x1_6  =     0.22600488314839 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.22600488314839 + H1x1_6 ;
2341496   +   H1x1_7  =     1.55642446968077 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.55642446968077 + H1x1_7 ;
2341497   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2341498   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2341499   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2341500   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2341501   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 * 
H1x1_1 ;
2341502   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2341503   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2341504   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 * 
H1x1_2 ;
2341505   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2341506   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2341507   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 * 
H1x1_3 ;
2341508   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2341509   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2341510   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 * 
H1x1_4 ;
2341511   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2341512   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2341513   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 * 
H1x1_5 ;
2341514   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2341515   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2341516   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 * 
H1x1_6 ;
2341517   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2341518   +   IF H1x1_7  < _REC_EPS AND H1x1_7  > - _REC_EPS THEN
2341519   +   H1x1_7  = H1x1_7  * H1x1_7 ;
MPRINT(EM_DIAGRAM):   IF H1x1_7 < _REC_EPS AND H1x1_7 > - _REC_EPS THEN H1x1_7 = H1x1_7 * 
H1x1_7 ;
2341520   +   ELSE H1x1_7  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_7 = _REC_EPS ;
2341521   +END;
MPRINT(EM_DIAGRAM):   END;
2341522   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2341523   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2341524   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2341525   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2341526   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2341527   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2341528   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2341529   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
2341530   +END;
MPRINT(EM_DIAGRAM):   END;
2341531   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2341532   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2341533   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2341534   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2341535   +   H1x2_1  =    -1.36226288448745 * S_AcceptedCmpTotal
2341536   +          +     -1.3328616352886 * S_Age  +     1.25346137866034 * S_Frq
2341537   +          +    -1.21746243786295 * S_Income  +     2.83911738158074 *
2341538   +        S_Kidhome  +    -0.60784009102409 * S_Mnt  +     1.57752173634223 *
2341539   +        S_MntFishProducts  +    -0.26776567401075 * S_MntFruits
2341540   +          +     1.09584731081081 * S_MntGoldProds  +     1.22333044103532 *
2341541   +        S_MntMeatProducts  +     0.42827942745016 * S_MntSweetProducts
2341542   +          +     0.67813472792448 * S_MntWines  +     0.56816492004798 *
2341543   +        S_MonthsAsCustomer  +     0.58113470399079 * S_NumCatalogPurchases
2341544   +          +     1.96719021971894 * S_NumDealsPurchases
2341545   +          +    -0.44535354794671 * S_NumDistPurchases
2341546   +          +    -0.54827762736866 * S_NumStorePurchases
2341547   +          +     1.02703310241897 * S_NumWebPurchases
2341548   +          +    -0.12526997502601 * S_NumWebVisitsMonth
2341549   +          +    -0.55803926383776 * S_RFMstat  +     0.01819380776809 *
2341550   +        S_RMntFrq  +       0.651688575044 * S_Recency
2341551   +          +     1.58682398186611 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.36226288448745 * S_AcceptedCmpTotal + -1.3328616352886 * 
S_Age + 1.25346137866034 * S_Frq + -1.21746243786295 * S_Income + 2.83911738158074 * S_Kidhome 
+ -0.60784009102409 * S_Mnt + 1.57752173634223 * S_MntFishProducts + -0.26776567401075 * 
S_MntFruits + 1.09584731081081 * S_MntGoldProds + 1.22333044103532 * S_MntMeatProducts + 
0.42827942745016 * S_MntSweetProducts + 0.67813472792448 * S_MntWines + 0.56816492004798 * 
S_MonthsAsCustomer + 0.58113470399079 * S_NumCatalogPurchases + 1.96719021971894 * 
S_NumDealsPurchases + -0.44535354794671 * S_NumDistPurchases + -0.54827762736866 * 
S_NumStorePurchases + 1.02703310241897 * S_NumWebPurchases + -0.12526997502601 * 
S_NumWebVisitsMonth + -0.55803926383776 * S_RFMstat + 0.01819380776809 * S_RMntFrq + 
0.651688575044 * S_Recency + 1.58682398186611 * S_Teenhome ;
2341552   +   H1x2_2  =    -0.38064507857029 * S_AcceptedCmpTotal
2341553   +          +    -0.49661801158351 * S_Age  +    -0.89589399799916 * S_Frq
2341554   +          +     -0.0121499288597 * S_Income  +    -0.48023022827846 *
2341555   +        S_Kidhome  +     -0.5183846206029 * S_Mnt  +    -3.13913899012334 *
2341556   +        S_MntFishProducts  +    -2.07291335687615 * S_MntFruits
2341557   +          +     0.51019753905662 * S_MntGoldProds  +     0.11458666377917 *
2341558   +        S_MntMeatProducts  +     -1.8499241966205 * S_MntSweetProducts
2341559   +          +     0.23160544044172 * S_MntWines  +    -0.48210626907943 *
2341560   +        S_MonthsAsCustomer  +     0.15500845227752 * S_NumCatalogPurchases
2341561   +          +     1.34659447971131 * S_NumDealsPurchases
2341562   +          +    -0.51624251310423 * S_NumDistPurchases
2341563   +          +      -1.283121574848 * S_NumStorePurchases
2341564   +          +    -1.83517806228926 * S_NumWebPurchases
2341565   +          +     0.51321339475285 * S_NumWebVisitsMonth
2341566   +          +    -1.86431704283342 * S_RFMstat  +    -1.52065204326569 *
2341567   +        S_RMntFrq  +    -0.33186055095462 * S_Recency
2341568   +          +    -0.49524729407054 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.38064507857029 * S_AcceptedCmpTotal + -0.49661801158351 * 
S_Age + -0.89589399799916 * S_Frq + -0.0121499288597 * S_Income + -0.48023022827846 * 
S_Kidhome + -0.5183846206029 * S_Mnt + -3.13913899012334 * S_MntFishProducts + 
-2.07291335687615 * S_MntFruits + 0.51019753905662 * S_MntGoldProds + 0.11458666377917 * 
S_MntMeatProducts + -1.8499241966205 * S_MntSweetProducts + 0.23160544044172 * S_MntWines + 
-0.48210626907943 * S_MonthsAsCustomer + 0.15500845227752 * S_NumCatalogPurchases + 
1.34659447971131 * S_NumDealsPurchases + -0.51624251310423 * S_NumDistPurchases + 
-1.283121574848 * S_NumStorePurchases + -1.83517806228926 * S_NumWebPurchases + 
0.51321339475285 * S_NumWebVisitsMonth + -1.86431704283342 * S_RFMstat + -1.52065204326569 * 
S_RMntFrq + -0.33186055095462 * S_Recency + -0.49524729407054 * S_Teenhome ;
2341569   +   H1x2_3  =    -0.75774003934728 * S_AcceptedCmpTotal
2341570   +          +    -0.85312030825337 * S_Age  +    -0.01726294458221 * S_Frq
2341571   +          +     0.58598267983786 * S_Income  +     1.30497766805554 *
2341572   +        S_Kidhome  +    -0.84214135491022 * S_Mnt  +     0.55305862453787 *
2341573   +        S_MntFishProducts  +      0.6488663613899 * S_MntFruits
2341574   +          +    -0.83189439197558 * S_MntGoldProds  +    -0.07500050412653 *
2341575   +        S_MntMeatProducts  +    -0.06401928810253 * S_MntSweetProducts
2341576   +          +      0.5940135658334 * S_MntWines  +    -0.04573352455984 *
2341577   +        S_MonthsAsCustomer  +    -1.53610650634069 * S_NumCatalogPurchases
2341578   +          +     0.67492297345004 * S_NumDealsPurchases
2341579   +          +    -0.40437875375926 * S_NumDistPurchases
2341580   +          +     0.36322603681545 * S_NumStorePurchases
2341581   +          +    -1.15315070635524 * S_NumWebPurchases
2341582   +          +     1.20707272201156 * S_NumWebVisitsMonth
2341583   +          +     0.12192566357285 * S_RFMstat  +    -0.46711219170047 *
2341584   +        S_RMntFrq  +     1.89703582493259 * S_Recency
2341585   +          +     1.07511942237188 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.75774003934728 * S_AcceptedCmpTotal + -0.85312030825337 * 
S_Age + -0.01726294458221 * S_Frq + 0.58598267983786 * S_Income + 1.30497766805554 * S_Kidhome 
+ -0.84214135491022 * S_Mnt + 0.55305862453787 * S_MntFishProducts + 0.6488663613899 * 
S_MntFruits + -0.83189439197558 * S_MntGoldProds + -0.07500050412653 * S_MntMeatProducts + 
-0.06401928810253 * S_MntSweetProducts + 0.5940135658334 * S_MntWines + -0.04573352455984 * 
S_MonthsAsCustomer + -1.53610650634069 * S_NumCatalogPurchases + 0.67492297345004 * 
S_NumDealsPurchases + -0.40437875375926 * S_NumDistPurchases + 0.36322603681545 * 
S_NumStorePurchases + -1.15315070635524 * S_NumWebPurchases + 1.20707272201156 * 
S_NumWebVisitsMonth + 0.12192566357285 * S_RFMstat + -0.46711219170047 * S_RMntFrq + 
1.89703582493259 * S_Recency + 1.07511942237188 * S_Teenhome ;
2341586   +   H1x2_4  =     0.62123819069495 * S_AcceptedCmpTotal
2341587   +          +     0.03399237520702 * S_Age  +    -0.01971421795338 * S_Frq
2341588   +          +    -0.54728266919056 * S_Income  +     -0.4634195771237 *
2341589   +        S_Kidhome  +    -1.19055247712911 * S_Mnt  +      1.4307770729159 *
2341590   +        S_MntFishProducts  +    -0.83895281276374 * S_MntFruits
2341591   +          +    -0.48578798244317 * S_MntGoldProds  +     -0.2846617807101 *
2341592   +        S_MntMeatProducts  +     0.70721686533987 * S_MntSweetProducts
2341593   +          +     1.32824513551741 * S_MntWines  +    -0.62654342755965 *
2341594   +        S_MonthsAsCustomer  +    -0.97245161056543 * S_NumCatalogPurchases
2341595   +          +    -0.41427983342148 * S_NumDealsPurchases
2341596   +          +    -0.22714305629205 * S_NumDistPurchases
2341597   +          +    -0.78763182048862 * S_NumStorePurchases
2341598   +          +    -0.26669253451501 * S_NumWebPurchases
2341599   +          +    -0.79601078616342 * S_NumWebVisitsMonth
2341600   +          +    -0.03863278696502 * S_RFMstat  +     0.95011556103056 *
2341601   +        S_RMntFrq  +     0.57184629262878 * S_Recency
2341602   +          +    -0.21560478702461 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.62123819069495 * S_AcceptedCmpTotal + 0.03399237520702 * 
S_Age + -0.01971421795338 * S_Frq + -0.54728266919056 * S_Income + -0.4634195771237 * 
S_Kidhome + -1.19055247712911 * S_Mnt + 1.4307770729159 * S_MntFishProducts + 
-0.83895281276374 * S_MntFruits + -0.48578798244317 * S_MntGoldProds + -0.2846617807101 * 
S_MntMeatProducts + 0.70721686533987 * S_MntSweetProducts + 1.32824513551741 * S_MntWines + 
-0.62654342755965 * S_MonthsAsCustomer + -0.97245161056543 * S_NumCatalogPurchases + 
-0.41427983342148 * S_NumDealsPurchases + -0.22714305629205 * S_NumDistPurchases + 
-0.78763182048862 * S_NumStorePurchases + -0.26669253451501 * S_NumWebPurchases + 
-0.79601078616342 * S_NumWebVisitsMonth + -0.03863278696502 * S_RFMstat + 0.95011556103056 * 
S_RMntFrq + 0.57184629262878 * S_Recency + -0.21560478702461 * S_Teenhome ;
2341603   +   H1x2_5  =     1.47906557745075 * S_AcceptedCmpTotal
2341604   +          +    -0.31060566334198 * S_Age  +     0.56472424389718 * S_Frq
2341605   +          +     2.16541682726249 * S_Income  +    -0.34119803841059 *
2341606   +        S_Kidhome  +    -0.53783050542796 * S_Mnt  +     0.54954821448236 *
2341607   +        S_MntFishProducts  +    -0.48449918837838 * S_MntFruits
2341608   +          +     0.29783052620672 * S_MntGoldProds  +    -0.15068954343013 *
2341609   +        S_MntMeatProducts  +     0.12733251381761 * S_MntSweetProducts
2341610   +          +    -2.46709166794296 * S_MntWines  +     -1.2011286508879 *
2341611   +        S_MonthsAsCustomer  +    -0.88194814936932 * S_NumCatalogPurchases
2341612   +          +      0.7697882092212 * S_NumDealsPurchases
2341613   +          +     0.51864835453056 * S_NumDistPurchases
2341614   +          +    -1.18320366630444 * S_NumStorePurchases
2341615   +          +     -0.6608394639529 * S_NumWebPurchases
2341616   +          +    -0.03948137707769 * S_NumWebVisitsMonth
2341617   +          +     1.01076462488608 * S_RFMstat  +    -0.91562280329354 *
2341618   +        S_RMntFrq  +    -1.07576669501238 * S_Recency
2341619   +          +     -0.5946628412106 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.47906557745075 * S_AcceptedCmpTotal + -0.31060566334198 * 
S_Age + 0.56472424389718 * S_Frq + 2.16541682726249 * S_Income + -0.34119803841059 * S_Kidhome 
+ -0.53783050542796 * S_Mnt + 0.54954821448236 * S_MntFishProducts + -0.48449918837838 * 
S_MntFruits + 0.29783052620672 * S_MntGoldProds + -0.15068954343013 * S_MntMeatProducts + 
0.12733251381761 * S_MntSweetProducts + -2.46709166794296 * S_MntWines + -1.2011286508879 * 
S_MonthsAsCustomer + -0.88194814936932 * S_NumCatalogPurchases + 0.7697882092212 * 
S_NumDealsPurchases + 0.51864835453056 * S_NumDistPurchases + -1.18320366630444 * 
S_NumStorePurchases + -0.6608394639529 * S_NumWebPurchases + -0.03948137707769 * 
S_NumWebVisitsMonth + 1.01076462488608 * S_RFMstat + -0.91562280329354 * S_RMntFrq + 
-1.07576669501238 * S_Recency + -0.5946628412106 * S_Teenhome ;
2341620   +   H1x2_6  =     0.42130900994246 * S_AcceptedCmpTotal
2341621   +          +     1.64256522546546 * S_Age  +    -0.31822237495441 * S_Frq
2341622   +          +     0.39698710846967 * S_Income  +    -1.30075584525681 *
2341623   +        S_Kidhome  +    -1.74733472316294 * S_Mnt  +    -1.04423575539078 *
2341624   +        S_MntFishProducts  +     0.28025913700744 * S_MntFruits
2341625   +          +     0.92062413073229 * S_MntGoldProds  +     0.38487452173084 *
2341626   +        S_MntMeatProducts  +     2.15808673418264 * S_MntSweetProducts
2341627   +          +     -0.5364274323591 * S_MntWines  +     0.64447858852609 *
2341628   +        S_MonthsAsCustomer  +     0.33683873873337 * S_NumCatalogPurchases
2341629   +          +     1.45707983202269 * S_NumDealsPurchases
2341630   +          +     0.83341887728641 * S_NumDistPurchases
2341631   +          +    -0.36664450469423 * S_NumStorePurchases
2341632   +          +     0.63911579043339 * S_NumWebPurchases
2341633   +          +     0.67144790303554 * S_NumWebVisitsMonth
2341634   +          +    -0.22124390112376 * S_RFMstat  +     1.72222071547971 *
2341635   +        S_RMntFrq  +    -0.02323382627271 * S_Recency
2341636   +          +    -0.09494567508522 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0.42130900994246 * S_AcceptedCmpTotal + 1.64256522546546 * 
S_Age + -0.31822237495441 * S_Frq + 0.39698710846967 * S_Income + -1.30075584525681 * 
S_Kidhome + -1.74733472316294 * S_Mnt + -1.04423575539078 * S_MntFishProducts + 
0.28025913700744 * S_MntFruits + 0.92062413073229 * S_MntGoldProds + 0.38487452173084 * 
S_MntMeatProducts + 2.15808673418264 * S_MntSweetProducts + -0.5364274323591 * S_MntWines + 
0.64447858852609 * S_MonthsAsCustomer + 0.33683873873337 * S_NumCatalogPurchases + 
1.45707983202269 * S_NumDealsPurchases + 0.83341887728641 * S_NumDistPurchases + 
-0.36664450469423 * S_NumStorePurchases + 0.63911579043339 * S_NumWebPurchases + 
0.67144790303554 * S_NumWebVisitsMonth + -0.22124390112376 * S_RFMstat + 1.72222071547971 * 
S_RMntFrq + -0.02323382627271 * S_Recency + -0.09494567508522 * S_Teenhome ;
2341637   +   H1x2_7  =      0.0903330772553 * S_AcceptedCmpTotal
2341638   +          +     0.13217959089196 * S_Age  +     0.93600629225871 * S_Frq
2341639   +          +     1.23765169211392 * S_Income  +     1.27732984858098 *
2341640   +        S_Kidhome  +     1.54889765360944 * S_Mnt  +     0.84618173514761 *
2341641   +        S_MntFishProducts  +    -0.32044356786958 * S_MntFruits
2341642   +          +    -0.26357995597029 * S_MntGoldProds  +     0.53649229087334 *
2341643   +        S_MntMeatProducts  +     1.46955866272889 * S_MntSweetProducts
2341644   +          +    -0.34260315437319 * S_MntWines  +    -1.70693604004836 *
2341645   +        S_MonthsAsCustomer  +     -0.4612555130737 * S_NumCatalogPurchases
2341646   +          +     0.68491896063662 * S_NumDealsPurchases
2341647   +          +      0.5386312048592 * S_NumDistPurchases
2341648   +          +     1.28108942503912 * S_NumStorePurchases
2341649   +          +    -0.88282270505969 * S_NumWebPurchases
2341650   +          +    -0.66670958211416 * S_NumWebVisitsMonth
2341651   +          +     0.94315921733739 * S_RFMstat  +     0.70533705858561 *
2341652   +        S_RMntFrq  +     0.23896687873405 * S_Recency
2341653   +          +     0.66289635918858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.0903330772553 * S_AcceptedCmpTotal + 0.13217959089196 * S_Age 
+ 0.93600629225871 * S_Frq + 1.23765169211392 * S_Income + 1.27732984858098 * S_Kidhome + 
1.54889765360944 * S_Mnt + 0.84618173514761 * S_MntFishProducts + -0.32044356786958 * 
S_MntFruits + -0.26357995597029 * S_MntGoldProds + 0.53649229087334 * S_MntMeatProducts + 
1.46955866272889 * S_MntSweetProducts + -0.34260315437319 * S_MntWines + -1.70693604004836 * 
S_MonthsAsCustomer + -0.4612555130737 * S_NumCatalogPurchases + 0.68491896063662 * 
S_NumDealsPurchases + 0.5386312048592 * S_NumDistPurchases + 1.28108942503912 * 
S_NumStorePurchases + -0.88282270505969 * S_NumWebPurchases + -0.66670958211416 * 
S_NumWebVisitsMonth + 0.94315921733739 * S_RFMstat + 0.70533705858561 * S_RMntFrq + 
0.23896687873405 * S_Recency + 0.66289635918858 * S_Teenhome ;
2341654   +   H1x2_1  = H1x2_1  +     0.22958861848016 * AcceptedCmp10
2341655   +          +    -1.11069938765475 * AcceptedCmp20  +     1.18563222829069 *
2341656   +        AcceptedCmp30  +    -0.97028253571173 * AcceptedCmp40
2341657   +          +     0.60850082670391 * AcceptedCmp50  +     0.31163990605418 *
2341658   +        Complain0  +     1.10957053966326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.22958861848016 * AcceptedCmp10 + -1.11069938765475 * 
AcceptedCmp20 + 1.18563222829069 * AcceptedCmp30 + -0.97028253571173 * AcceptedCmp40 + 
0.60850082670391 * AcceptedCmp50 + 0.31163990605418 * Complain0 + 1.10957053966326 * 
HigherEducationBinary0 ;
2341659   +   H1x2_2  = H1x2_2  +    -0.99409862826118 * AcceptedCmp10
2341660   +          +    -0.76360093699992 * AcceptedCmp20  +     0.82772534103696 *
2341661   +        AcceptedCmp30  +     1.74232000787449 * AcceptedCmp40
2341662   +          +    -1.37356239255127 * AcceptedCmp50  +      0.0919811154199 *
2341663   +        Complain0  +    -0.00220513515877 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.99409862826118 * AcceptedCmp10 + -0.76360093699992 
* AcceptedCmp20 + 0.82772534103696 * AcceptedCmp30 + 1.74232000787449 * AcceptedCmp40 + 
-1.37356239255127 * AcceptedCmp50 + 0.0919811154199 * Complain0 + -0.00220513515877 * 
HigherEducationBinary0 ;
2341664   +   H1x2_3  = H1x2_3  +    -0.21003647134105 * AcceptedCmp10
2341665   +          +    -0.08930317176477 * AcceptedCmp20  +    -0.39109673162041 *
2341666   +        AcceptedCmp30  +     1.14094450038946 * AcceptedCmp40
2341667   +          +     1.26041997788848 * AcceptedCmp50  +    -0.10972130900569 *
2341668   +        Complain0  +    -0.99352598480407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.21003647134105 * AcceptedCmp10 + -0.08930317176477 
* AcceptedCmp20 + -0.39109673162041 * AcceptedCmp30 + 1.14094450038946 * AcceptedCmp40 + 
1.26041997788848 * AcceptedCmp50 + -0.10972130900569 * Complain0 + -0.99352598480407 * 
HigherEducationBinary0 ;
2341669   +   H1x2_4  = H1x2_4  +     2.02630284432093 * AcceptedCmp10
2341670   +          +    -2.50721904229276 * AcceptedCmp20  +    -1.31026450397446 *
2341671   +        AcceptedCmp30  +    -0.83440880266914 * AcceptedCmp40
2341672   +          +     -0.0570899805015 * AcceptedCmp50  +    -0.55525351434733 *
2341673   +        Complain0  +     0.27306601694081 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 2.02630284432093 * AcceptedCmp10 + -2.50721904229276 * 
AcceptedCmp20 + -1.31026450397446 * AcceptedCmp30 + -0.83440880266914 * AcceptedCmp40 + 
-0.0570899805015 * AcceptedCmp50 + -0.55525351434733 * Complain0 + 0.27306601694081 * 
HigherEducationBinary0 ;
2341674   +   H1x2_5  = H1x2_5  +    -0.18595284227194 * AcceptedCmp10
2341675   +          +    -1.55973916517392 * AcceptedCmp20  +    -3.81563768970049 *
2341676   +        AcceptedCmp30  +    -0.09331430915239 * AcceptedCmp40
2341677   +          +     0.76128118177142 * AcceptedCmp50  +    -0.17283107047755 *
2341678   +        Complain0  +    -1.01028562804392 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.18595284227194 * AcceptedCmp10 + -1.55973916517392 
* AcceptedCmp20 + -3.81563768970049 * AcceptedCmp30 + -0.09331430915239 * AcceptedCmp40 + 
0.76128118177142 * AcceptedCmp50 + -0.17283107047755 * Complain0 + -1.01028562804392 * 
HigherEducationBinary0 ;
2341679   +   H1x2_6  = H1x2_6  +    -1.21475169836565 * AcceptedCmp10
2341680   +          +     0.28748729216575 * AcceptedCmp20  +     1.15908030413172 *
2341681   +        AcceptedCmp30  +    -0.05889528676549 * AcceptedCmp40
2341682   +          +    -0.41661363625562 * AcceptedCmp50  +    -0.77939130028952 *
2341683   +        Complain0  +     2.19510865765326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.21475169836565 * AcceptedCmp10 + 0.28748729216575 * 
AcceptedCmp20 + 1.15908030413172 * AcceptedCmp30 + -0.05889528676549 * AcceptedCmp40 + 
-0.41661363625562 * AcceptedCmp50 + -0.77939130028952 * Complain0 + 2.19510865765326 * 
HigherEducationBinary0 ;
2341684   +   H1x2_7  = H1x2_7  +     0.87360423179644 * AcceptedCmp10
2341685   +          +    -0.47867594186426 * AcceptedCmp20  +    -0.30325818223392 *
2341686   +        AcceptedCmp30  +    -0.96085556588297 * AcceptedCmp40
2341687   +          +    -0.19693158209969 * AcceptedCmp50  +    -0.73731792634553 *
2341688   +        Complain0  +    -1.10021678806679 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + 0.87360423179644 * AcceptedCmp10 + -0.47867594186426 * 
AcceptedCmp20 + -0.30325818223392 * AcceptedCmp30 + -0.96085556588297 * AcceptedCmp40 + 
-0.19693158209969 * AcceptedCmp50 + -0.73731792634553 * Complain0 + -1.10021678806679 * 
HigherEducationBinary0 ;
2341689   +   H1x2_1  = H1x2_1  +    -1.17876013389516 * Education2n_Cycle
2341690   +          +    -0.35670434275624 * EducationBasic  +    -0.12456502068616 *
2341691   +        EducationGraduation  +     -1.0620373133508 * EducationMaster
2341692   +          +    -3.97961426831865 * Marital_StatusDivorced
2341693   +          +     0.00932639813867 * Marital_StatusMarried
2341694   +          +     1.29310186574718 * Marital_StatusSingle
2341695   +          +     1.60940802221114 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.17876013389516 * Education2n_Cycle + 
-0.35670434275624 * EducationBasic + -0.12456502068616 * EducationGraduation + 
-1.0620373133508 * EducationMaster + -3.97961426831865 * Marital_StatusDivorced + 
0.00932639813867 * Marital_StatusMarried + 1.29310186574718 * Marital_StatusSingle + 
1.60940802221114 * Marital_StatusTogether ;
2341696   +   H1x2_2  = H1x2_2  +     0.58497813059595 * Education2n_Cycle
2341697   +          +     0.98038586431321 * EducationBasic  +    -0.20442806724521 *
2341698   +        EducationGraduation  +     0.64973046142001 * EducationMaster
2341699   +          +    -0.30358516578188 * Marital_StatusDivorced
2341700   +          +    -0.96176709360703 * Marital_StatusMarried
2341701   +          +     1.26977690921649 * Marital_StatusSingle
2341702   +          +     -0.6681544336237 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.58497813059595 * Education2n_Cycle + 
0.98038586431321 * EducationBasic + -0.20442806724521 * EducationGraduation + 0.64973046142001 
* EducationMaster + -0.30358516578188 * Marital_StatusDivorced + -0.96176709360703 * 
Marital_StatusMarried + 1.26977690921649 * Marital_StatusSingle + -0.6681544336237 * 
Marital_StatusTogether ;
2341703   +   H1x2_3  = H1x2_3  +     0.42123479646947 * Education2n_Cycle
2341704   +          +     0.22705854674045 * EducationBasic  +     0.34794003687348 *
2341705   +        EducationGraduation  +     0.18356390207843 * EducationMaster
2341706   +          +     0.55272671490757 * Marital_StatusDivorced
2341707   +          +      0.1499239288334 * Marital_StatusMarried
2341708   +          +    -0.46840941760604 * Marital_StatusSingle
2341709   +          +     0.93706218273755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.42123479646947 * Education2n_Cycle + 
0.22705854674045 * EducationBasic + 0.34794003687348 * EducationGraduation + 0.18356390207843 
* EducationMaster + 0.55272671490757 * Marital_StatusDivorced + 0.1499239288334 * 
Marital_StatusMarried + -0.46840941760604 * Marital_StatusSingle + 0.93706218273755 * 
Marital_StatusTogether ;
2341710   +   H1x2_4  = H1x2_4  +     0.85035585831723 * Education2n_Cycle
2341711   +          +    -0.70680576286167 * EducationBasic  +    -0.24487676912938 *
2341712   +        EducationGraduation  +    -0.33030970028481 * EducationMaster
2341713   +          +      -1.240735370138 * Marital_StatusDivorced
2341714   +          +    -1.20089294883599 * Marital_StatusMarried
2341715   +          +     0.57492674426149 * Marital_StatusSingle
2341716   +          +     1.44189292990255 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.85035585831723 * Education2n_Cycle + 
-0.70680576286167 * EducationBasic + -0.24487676912938 * EducationGraduation + 
-0.33030970028481 * EducationMaster + -1.240735370138 * Marital_StatusDivorced + 
-1.20089294883599 * Marital_StatusMarried + 0.57492674426149 * Marital_StatusSingle + 
1.44189292990255 * Marital_StatusTogether ;
2341717   +   H1x2_5  = H1x2_5  +    -0.62461434654579 * Education2n_Cycle
2341718   +          +    -0.34090423965869 * EducationBasic  +    -0.82493401834396 *
2341719   +        EducationGraduation  +    -1.09423426649553 * EducationMaster
2341720   +          +     1.05435442049802 * Marital_StatusDivorced
2341721   +          +      0.3571256349717 * Marital_StatusMarried
2341722   +          +    -0.44741267266578 * Marital_StatusSingle
2341723   +          +     0.02948931507994 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.62461434654579 * Education2n_Cycle + 
-0.34090423965869 * EducationBasic + -0.82493401834396 * EducationGraduation + 
-1.09423426649553 * EducationMaster + 1.05435442049802 * Marital_StatusDivorced + 
0.3571256349717 * Marital_StatusMarried + -0.44741267266578 * Marital_StatusSingle + 
0.02948931507994 * Marital_StatusTogether ;
2341724   +   H1x2_6  = H1x2_6  +     0.09620501635178 * Education2n_Cycle
2341725   +          +    -0.54617424401993 * EducationBasic  +    -0.43305038404558 *
2341726   +        EducationGraduation  +     0.05453229059502 * EducationMaster
2341727   +          +     2.06026721980778 * Marital_StatusDivorced
2341728   +          +    -0.49583258645166 * Marital_StatusMarried
2341729   +          +    -1.14824900824474 * Marital_StatusSingle
2341730   +          +     0.57690093967839 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + 0.09620501635178 * Education2n_Cycle + 
-0.54617424401993 * EducationBasic + -0.43305038404558 * EducationGraduation + 
0.05453229059502 * EducationMaster + 2.06026721980778 * Marital_StatusDivorced + 
-0.49583258645166 * Marital_StatusMarried + -1.14824900824474 * Marital_StatusSingle + 
0.57690093967839 * Marital_StatusTogether ;
2341731   +   H1x2_7  = H1x2_7  +    -0.31251046777442 * Education2n_Cycle
2341732   +          +    -1.69272922870259 * EducationBasic  +    -0.08682253496961 *
2341733   +        EducationGraduation  +     0.58241644186309 * EducationMaster
2341734   +          +     -1.1890908607447 * Marital_StatusDivorced
2341735   +          +    -0.46668809907123 * Marital_StatusMarried
2341736   +          +     1.20342564763422 * Marital_StatusSingle
2341737   +          +    -1.75740662969578 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + -0.31251046777442 * Education2n_Cycle + 
-1.69272922870259 * EducationBasic + -0.08682253496961 * EducationGraduation + 
0.58241644186309 * EducationMaster + -1.1890908607447 * Marital_StatusDivorced + 
-0.46668809907123 * Marital_StatusMarried + 1.20342564763422 * Marital_StatusSingle + 
-1.75740662969578 * Marital_StatusTogether ;
2341738   +   H1x2_1  =    -0.14973719401763 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.14973719401763 + H1x2_1 ;
2341739   +   H1x2_2  =    -0.56259582407931 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.56259582407931 + H1x2_2 ;
2341740   +   H1x2_3  =     0.42132483186492 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.42132483186492 + H1x2_3 ;
2341741   +   H1x2_4  =      1.1996209421335 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.1996209421335 + H1x2_4 ;
2341742   +   H1x2_5  =     0.95827018478011 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.95827018478011 + H1x2_5 ;
2341743   +   H1x2_6  =     1.88844492435344 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.88844492435344 + H1x2_6 ;
2341744   +   H1x2_7  =     0.77184516675485 + H1x2_7 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.77184516675485 + H1x2_7 ;
2341745   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2341746   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2341747   +   H1x2_1  = EXP(MIN(H1x2_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(H1x2_1 , _EXP_BAR));
2341748   +   H1x2_2  = EXP(MIN(H1x2_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(H1x2_2 , _EXP_BAR));
2341749   +   H1x2_3  = EXP(MIN(H1x2_3 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(MIN(H1x2_3 , _EXP_BAR));
2341750   +   H1x2_4  = EXP(MIN(H1x2_4 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(MIN(H1x2_4 , _EXP_BAR));
2341751   +   H1x2_5  = EXP(MIN(H1x2_5 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(MIN(H1x2_5 , _EXP_BAR));
2341752   +   H1x2_6  = EXP(MIN(H1x2_6 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(MIN(H1x2_6 , _EXP_BAR));
2341753   +   H1x2_7  = EXP(MIN(H1x2_7 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(MIN(H1x2_7 , _EXP_BAR));
2341754   +END;
MPRINT(EM_DIAGRAM):   END;
2341755   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2341756   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2341757   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2341758   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2341759   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2341760   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2341761   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2341762   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
2341763   +END;
MPRINT(EM_DIAGRAM):   END;
2341764   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2341765   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2341766   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2341767   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2341768   +   P_DepVar1  =     0.10431866610268 * H1x1_1  +    -0.48100701431081 * H1x1_2
2341769   +          +      1.1561061025832 * H1x1_3  +    -1.23928879501664 * H1x1_4
2341770   +          +     1.22057275321508 * H1x1_5  +     0.21972347471711 * H1x1_6
2341771   +          +    -0.98998788335495 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.10431866610268 * H1x1_1 + -0.48100701431081 * H1x1_2 + 
1.1561061025832 * H1x1_3 + -1.23928879501664 * H1x1_4 + 1.22057275321508 * H1x1_5 + 
0.21972347471711 * H1x1_6 + -0.98998788335495 * H1x1_7 ;
2341772   +   P_DepVar1  = P_DepVar1  + -4.9985478923183E-10 * H1x2_1
2341773   +          +   2.7724573038604E-6 * H1x2_2  +  -3.3263781208921E-6 * H1x2_3
2341774   +          +     1.90169432265E-8 * H1x2_4  +  -9.7460294571708E-9 * H1x2_5
2341775   +          +  -2.0885179583168E-6 * H1x2_6  +    3.038660449943E-8 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -4.9985478923183E-10 * H1x2_1 + 
2.7724573038604E-6 * H1x2_2 + -3.3263781208921E-6 * H1x2_3 + 1.90169432265E-8 * H1x2_4 + 
-9.7460294571708E-9 * H1x2_5 + -2.0885179583168E-6 * H1x2_6 + 3.038660449943E-8 * H1x2_7 ;
2341776   +   P_DepVar1  =    -2.34500119066237 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.34500119066237 + P_DepVar1 ;
2341777   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2341778   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2341779   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2341780   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2341781   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2341782   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2341783   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2341784   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2341785   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2341786   +END;
MPRINT(EM_DIAGRAM):   END;
2341787   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2341788   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2341789   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2341790   +END;
MPRINT(EM_DIAGRAM):   END;
2341791   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2341792   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2341793   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2341794   +END;
MPRINT(EM_DIAGRAM):   END;
2341795   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2341796   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2341797   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2341798   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2341799   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2341800   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2341801   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2341802   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2341803   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2341804   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2341805   +END;
MPRINT(EM_DIAGRAM):   END;
2341806   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2341807   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2341808   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2341809   +drop
2341810   +H1x1_1
2341811   +H1x1_2
2341812   +H1x1_3
2341813   +H1x1_4
2341814   +H1x1_5
2341815   +H1x1_6
2341816   +H1x1_7
2341817   +H1x2_1
2341818   +H1x2_2
2341819   +H1x2_3
2341820   +H1x2_4
2341821   +H1x2_5
2341822   +H1x2_6
2341823   +H1x2_7
2341824   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 H1x1_7 H1x2_1 H1x2_2 
H1x2_3 H1x2_4 H1x2_5 H1x2_6 H1x2_7 ;
2341825   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2341826    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2341827    quit;
2341828    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2341829    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2341830    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2341831    retain ID 2 Node "AutoNeural12";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural12";
2341832    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2341833    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4452 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4452 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2341834    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2341835    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2341836    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4452 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4452 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2341837    proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME 
CREATOR);
2341838    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2341839    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL12_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2341840    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2341841    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2341842    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2341843    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2341844    proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
2341845    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2341846    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2341847    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2341848    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2341849    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2341850    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2341851    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2341852    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2341853    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2341854    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2341854  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 2199 rows and 5 columns.

2341855    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2341856    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2341857    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 2199 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 2199 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2341858    filename _pref
2341858  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2341859    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2341860    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2341861   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2341862   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2341863   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2341864   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2341865   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2341866   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2341867    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2341868    quit;
2341869    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2341870    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2341871    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2341872    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2341873    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2341874    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2341875    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2341876    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2341877    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2341878    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2341879    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2341880    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2341881    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2341882    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2341883    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2341884    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2341885    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2341886    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2341887    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2341888    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2341889    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2341890    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2341891    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2341892    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2341893    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2341894    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2341895    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2341895  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2341896    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2341897    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2341898    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 2203 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2341899    filename _pref
2341899  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2341900    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2341901    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2341902   +
2341903   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2341904   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2341904  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2341905   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2341906   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2341907   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2341908   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2341909   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2341910    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2341911    quit;
2341912    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2341913    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2341914    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2341915    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2341916    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2341917    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2341918    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2341919    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2341920    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2341921    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2341922    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2341923    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2341924    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2341925    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2341926    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2341927    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2341928    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2341929    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2341930    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2341931    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2341932    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2341933    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2341934    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2341935    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2341936    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2341937    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2341938    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2341938  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2341939    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2341940    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2341941    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 2242 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2341942    filename _pref
2341942  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2341943    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2341944    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2341945   +
2341946   +
2341947   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2341948   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2341949   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2341950   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2341951   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2341952   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2341953   +
2341954   +
2341955   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2341956   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2341957   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2341958   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2341959   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2341960   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2341961   +
2341962   +
2341963   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2341964   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2341965   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2341966   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2341967   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2341968   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2341969   +
2341970   +
2341971   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2341972   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2341973   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2341974   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2341975   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2341976   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2341977   +
2341978   +
2341979   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2341980   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2341981   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2341982   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2341983   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2341984   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2341985   +
2341986   +
2341987   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2341988   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2341989   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2341990   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2341991   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2341992   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2341993   +
2341994   +
2341995   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2341996   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2341997   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2341998   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2341999   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2342000   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2342001   +
2342002   +
2342003   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2342004   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2342005   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2342006   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2342007   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2342008   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2342009   +if
2342010   +_FILTERNORM1 not in ( '.')
2342011   + and
2342012   +_FILTERNORM2 not in ( '.')
2342013   + and
2342014   +_FILTERNORM3 not in ( '.')
2342015   + and
2342016   +_FILTERNORM4 not in ( '.')
2342017   + and
2342018   +_FILTERNORM5 not in ( '.')
2342019   + and
2342020   +_FILTERNORM6 not in ( '.')
2342021   + and
2342022   +_FILTERNORM7 not in ( ' ')
2342023   + and
2342024   +_FILTERNORM8 not in ( ' ')
2342025   +and
2342026   +( Dt_Customer ne .)
2342027   +and ( Income ne . and (Income<=107000))
2342028   +and ( Kidhome ne .)
2342029   +and ( MntFishProducts ne .)
2342030   +and ( MntFruits ne .)
2342031   +and ( MntGoldProds ne .)
2342032   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2342033   +and ( MntSweetProducts ne .)
2342034   +and ( MntWines ne .)
2342035   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2342036   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2342037   +and ( NumStorePurchases ne .)
2342038   +and ( NumWebPurchases ne .)
2342039   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2342040   +and ( Recency ne .)
2342041   +and ( Teenhome ne .)
2342042   +and ( Year_Birth ne .)
2342043   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2342044   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2342045   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2342046   +end;
MPRINT(EM_DIAGRAM):   end;
2342047   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2342048   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2342049    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2342050    quit;
2342051    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2342052    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2342053    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2342054    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2342055    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2342056    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2342057    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2342058    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2342059    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2342060    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2342061    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2342062    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2342063    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2342064    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2342065    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2342066    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2342067    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2342068    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2342069    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2342070    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2342071    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2342072    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2342073    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2342074    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2342075    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2342076    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2342077    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2342077  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2342078    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2342079    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2342080    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 2308 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2342081    %macro varDept(fcmpdata=,id=);
2342082    %global nobs&id scoreFlag&id;
2342083    %let scoreFlag&id = 0;
2342084    %if &id=1 or ^&fcmpStart %then %do;
2342085    proc sort data=&fcmpdata out=_temp&id nodupkey;
2342086    by NAME;
2342087    where id=&id and LHS in( %let j=1;
2342088    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2342089    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2342090    "&var" %let j = %eval(&j+1);
2342091    %end;
2342092    );
2342093    run;
2342094    %let dsid = %sysfunc(open(_temp&id));
2342095    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2342096    %let dsid = %sysfunc(close(&dsid));
2342097    %if &&nobs&id %then %do;
2342098    %let scoreFlag&id = 1;
2342099    %let fcmpStart = 1;
2342100    %end;
2342101    %else %let fcmpStart = 0;
2342102    %end;
2342103    %else %do;
2342104    proc sort data=&fcmpdata out=_tempid;
2342105    where id=&id;
2342106    by LHS;
2342107    run;
2342108    %let dsid = %sysfunc(open(_tempid));
2342109    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2342110    %let dsid = %sysfunc(close(&dsid));
2342111    %if ^&&nobs&id %then %do;
2342112    proc datasets lib=work nolist;
2342113    delete _tempid;
2342114    run;
2342115    quit;
2342116    %end;
2342117    %else %do;
2342118    data _tempAll;
2342119    set %let j=%eval(&id-1);
2342120    %do x=1 %to &j;
2342121    %if &&nobs&x %then %do;
2342122    _temp&x %end;
2342123    %end;
2342124    ;
2342125    run;
2342126    proc sql;
2342127    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2342127  ! work._tempid p2 where p.name=p2.lhs;
2342128    quit;
2342129    data _temp&id;
2342130    set _temp&id;
2342131    where LHS ne '' and NAME ne '' and Node ne '';
2342132    run;
2342133    proc datasets lib=work nolist;
2342134    delete _tempAll;
2342135    run;
2342136    %let dsid = %sysfunc(open(_temp&id));
2342137    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2342138    %let dsid = %sysfunc(close(&dsid));
2342139    %if ^&&nobs&id %then %do;
2342140    proc datasets lib=work nolist;
2342141    delete _temp&id;
2342142    run;
2342143    quit;
2342144    %end;
2342145    %else %do;
2342146    %let scoreFlag&id = 1;
2342147    data _temp&id;
2342148    set _temp&id;
2342149    where LHS ne NAME and node ne '';
2342150    run;
2342151    %let dsid = %sysfunc(open(_temp&id));
2342152    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2342153    %let dsid = %sysfunc(close(&dsid));
2342154    %if ^&&nobs&id %then %do;
2342155    proc datasets lib=work nolist;
2342156    delete _temp&id;
2342157    run;
2342158    quit;
2342159    %end;
2342160    %else %do;
2342161    proc sort data=_temp&id nodupkey;
2342162    by LHS NAME;
2342163    run;
2342164    %end;
2342165    %end;
2342166    %end;
2342167    %end;
2342168    %mend varDept;
2342169    %macro optCode(outdata=fcmpdata);
2342170    %global fcmpStart;
2342171    %let fcmpStart = 0;
2342172    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2342173    %let NumNodes=9;
2342174    %do k=1 %to &NumNodes;
2342175    %vardept(fcmpdata=&outdata, id=&k);
2342176    %end;
2342177    %mend optCode;
2342178    %optcode(outData=EMWS8.Ensmbl38_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2342179    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2342180    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2342181    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2342182    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2342183    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2342184    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2342185    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2342186    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2342187    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2342188    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2342188  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

2342189    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2342190    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2342191    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2342192    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2342193    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2342194    * Ensmbl38: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Computing metadata for TRAIN data;
2342195    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL38_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl38\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl38_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl38_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl38_TRAIN out=WORK.M1YA2XGL noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1YA2XGL;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1YA2XGL(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1YA2XGL;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1YA2XGL;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0TC2KJX NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0TC2KJX;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0TC2KJX;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M38XQIDI(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0TC2KJX;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0TC2KJX;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0TC2KJX;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0TC2KJX;
MPRINT(EMADVISECOLUMNS):   set WORK.M0TC2KJX;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural6_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural6_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl38_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl38";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl38";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl38";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl38";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl38";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl38";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl38";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl38";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl38";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl38";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" 
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl38";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
2342515    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
2342516    set EMWS8.Ensmbl38_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl38_EMINFO;
2342517    where DATA='Ensmbl38' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl38' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
2342518    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_EMINFO.
      WHERE (DATA='Ensmbl38') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2342519    data EMWS8.Ensmbl38_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl38_EMINFO;
2342520    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
2342521    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
2342522    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL38_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
2342526    run;
2342527    data EMWS8.Ensmbl38_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl38_EMINFO;
2342528    set EMWS8.Ensmbl38_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl38_EMINFO WORK.MODELTEMP_INFO;
2342529    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL38_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL38_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2342530    proc sort data = EMWS8.Ensmbl38_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl38_EMINFO NOTHREADS;
2342531    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2342532    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL38_EMINFO.
NOTE: The data set EMWS8.ENSMBL38_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2342533    proc sort data = EMWS8.AutoNeural6_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural6_EMINFO OUT=WORK.SORTEDEMINFO 
NOTHREADS;
2342534    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2342535    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.AUTONEURAL6_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2342536    proc sort data = EMWS8.Ensmbl38_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl38_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
2342537    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2342538    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL38_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2342539    data EMWS8.Ensmbl38_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl38_EMINFO;
2342540    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
2342541    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2342542    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL38_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2342543    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
2342544    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
2342545    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
2342546    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

NOTE: View EMWS8.ENSMBL38_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
NOTE: View EMWS8.ENSMBL38_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
