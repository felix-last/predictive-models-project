MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.35 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                11.35 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2JEVUXL 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl38\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2JEVUXL new;
MPRINT(EM_DIAGRAM):   run;
4131048    filename emflow
4131048  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl38\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl38\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Scoring AUTONEURAL6_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4131049    *------------------------------------------------------------*;
4131050    * Ensmbl38: Scoring AUTONEURAL6_TRAIN data;
4131051    *------------------------------------------------------------*;
4131052    data EMWS8.Ensmbl38_TRAIN
4131053    / view=EMWS8.Ensmbl38_TRAIN
4131054    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl38_TRAIN / view=EMWS8.Ensmbl38_TRAIN ;
4131055    set EMWS8.AutoNeural6_TRAIN
4131056    ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural6_TRAIN ;
4131057    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl38\EMFLOWSCORE.sas.
4131058   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4131059   +* Ensmbl38: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Combine model for DepVar;
4131060   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4131061   +* Ensmbl38: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Scoring Code of model 1 of 7;
4131062   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4131063   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4131064   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
4131065   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
4131066   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
4131067   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4131068   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4131069   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
4131070   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
4131071   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
4131072   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4131073   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4131074   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
4131075   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
4131076   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
4131077   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4131078   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4131079   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
4131080   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
4131081   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
4131082   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4131083   +
4131084   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
4131085   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
4131085  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
4131086   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
4131087   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
4131088   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
4131089   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
4131090   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
4131091   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4131092   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
4131093   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
4131094   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
4131095   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4131096   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4131097   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
4131098   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4131099   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
4131100   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
4131101   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
4131102   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4131103   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
4131104   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
4131105   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
4131106   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4131107   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4131108   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
4131109   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
4131110   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
4131111   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4131112   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4131113   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
4131114   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
4131115   +* NODE: AutoNeural6;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural6;
4131116   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4131117   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4131118   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4131119   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4131120   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4131121   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4131122   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4131123   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4131124   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4131125   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4131126   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4131127   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4131128   +LENGTH _WARN_ $4
4131129   +      F_DepVar  $ 12
4131130   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
4131131   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4131132   +
4131133   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4131134   +
4131135   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4131136   +
4131137   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4131138   +
4131139   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4131140   +
4131141   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4131142   +
4131143   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4131144   +
4131145   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4131146   +
4131147   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4131148   +
4131149   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4131150   +
4131151   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4131152   +
4131153   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4131154   +
4131155   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4131156   +
4131157   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4131158   +
4131159   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4131160   +
4131161   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4131162   +
4131163   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4131164   +
4131165   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4131166   +
4131167   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4131168   +
4131169   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4131170   +
4131171   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4131172   +
4131173   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4131174   +
4131175   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4131176   +
4131177   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4131178   +
4131179   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4131180   +
4131181   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4131182   +
4131183   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4131184   +
4131185   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4131186   +
4131187   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4131188   +
4131189   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4131190   +
4131191   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4131192   +
4131193   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4131194   +
4131195   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4131196   +
4131197   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4131198   +
4131199   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4131200   +
4131201   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4131202   +
4131203   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4131204   +
The SAS System

4131205   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4131206   +
4131207   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4131208   +
4131209   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
4131210   +
4131211   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
4131212   +
4131213   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
4131214   +
4131215   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
4131216   +
4131217   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
4131218   +
4131219   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4131220   +
4131221   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4131222   +
4131223   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4131224   +
4131225   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4131226   +
4131227   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
4131228   +
4131229   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4131230   +
4131231   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
4131232   +
4131233   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4131234   +
4131235   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4131236   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4131237   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4131238   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4131239   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4131240   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4131241   +end;
MPRINT(EM_DIAGRAM):   end;
4131242   +else do;
MPRINT(EM_DIAGRAM):   else do;
4131243   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4131244   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4131245   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4131246   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4131247   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4131248   +   end;
MPRINT(EM_DIAGRAM):   end;
4131249   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4131250   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4131251   +   end;
MPRINT(EM_DIAGRAM):   end;
4131252   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4131253   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4131254   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4131255   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4131256   +   end;
MPRINT(EM_DIAGRAM):   end;
4131257   +end;
MPRINT(EM_DIAGRAM):   end;
4131258   +
4131259   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4131260   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4131261   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4131262   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4131263   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4131264   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4131265   +end;
MPRINT(EM_DIAGRAM):   end;
4131266   +else do;
MPRINT(EM_DIAGRAM):   else do;
4131267   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4131268   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4131269   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4131270   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4131271   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4131272   +   end;
MPRINT(EM_DIAGRAM):   end;
4131273   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4131274   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4131275   +   end;
MPRINT(EM_DIAGRAM):   end;
4131276   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4131277   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4131278   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4131279   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4131280   +   end;
MPRINT(EM_DIAGRAM):   end;
4131281   +end;
MPRINT(EM_DIAGRAM):   end;
4131282   +
4131283   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4131284   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4131285   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4131286   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4131287   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4131288   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4131289   +end;
MPRINT(EM_DIAGRAM):   end;
4131290   +else do;
MPRINT(EM_DIAGRAM):   else do;
4131291   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4131292   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4131293   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4131294   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4131295   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4131296   +   end;
MPRINT(EM_DIAGRAM):   end;
4131297   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4131298   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4131299   +   end;
MPRINT(EM_DIAGRAM):   end;
4131300   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4131301   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4131302   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4131303   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4131304   +   end;
MPRINT(EM_DIAGRAM):   end;
4131305   +end;
MPRINT(EM_DIAGRAM):   end;
4131306   +
4131307   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4131308   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4131309   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4131310   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4131311   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4131312   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4131313   +end;
MPRINT(EM_DIAGRAM):   end;
4131314   +else do;
MPRINT(EM_DIAGRAM):   else do;
4131315   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4131316   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4131317   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4131318   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4131319   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4131320   +   end;
MPRINT(EM_DIAGRAM):   end;
4131321   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4131322   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4131323   +   end;
MPRINT(EM_DIAGRAM):   end;
4131324   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4131325   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4131326   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4131327   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4131328   +   end;
MPRINT(EM_DIAGRAM):   end;
4131329   +end;
MPRINT(EM_DIAGRAM):   end;
4131330   +
4131331   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4131332   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4131333   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4131334   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4131335   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4131336   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4131337   +end;
MPRINT(EM_DIAGRAM):   end;
4131338   +else do;
MPRINT(EM_DIAGRAM):   else do;
4131339   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4131340   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4131341   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4131342   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4131343   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4131344   +   end;
MPRINT(EM_DIAGRAM):   end;
4131345   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4131346   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4131347   +   end;
MPRINT(EM_DIAGRAM):   end;
4131348   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4131349   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4131350   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4131351   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4131352   +   end;
MPRINT(EM_DIAGRAM):   end;
4131353   +end;
MPRINT(EM_DIAGRAM):   end;
4131354   +
4131355   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4131356   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4131357   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4131358   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4131359   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4131360   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4131361   +end;
MPRINT(EM_DIAGRAM):   end;
4131362   +else do;
MPRINT(EM_DIAGRAM):   else do;
4131363   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4131364   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4131365   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4131366   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4131367   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4131368   +   end;
MPRINT(EM_DIAGRAM):   end;
4131369   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4131370   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4131371   +   end;
MPRINT(EM_DIAGRAM):   end;
4131372   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4131373   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4131374   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4131375   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4131376   +   end;
MPRINT(EM_DIAGRAM):   end;
4131377   +end;
MPRINT(EM_DIAGRAM):   end;
4131378   +
4131379   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4131380   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4131381   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4131382   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4131383   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4131384   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4131385   +end;
MPRINT(EM_DIAGRAM):   end;
4131386   +else do;
MPRINT(EM_DIAGRAM):   else do;
4131387   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4131388   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4131389   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4131390   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4131391   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4131392   +   end;
MPRINT(EM_DIAGRAM):   end;
4131393   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4131394   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4131395   +   end;
MPRINT(EM_DIAGRAM):   end;
4131396   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4131397   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4131398   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4131399   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4131400   +   end;
MPRINT(EM_DIAGRAM):   end;
4131401   +end;
MPRINT(EM_DIAGRAM):   end;
4131402   +
4131403   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4131404   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
4131405   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4131406   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4131407   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4131408   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4131409   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4131410   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4131411   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4131412   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4131413   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4131414   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4131415   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4131416   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4131417   +end;
MPRINT(EM_DIAGRAM):   end;
4131418   +else do;
MPRINT(EM_DIAGRAM):   else do;
4131419   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4131420   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4131421   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4131422   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4131423   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4131424   +   end;
MPRINT(EM_DIAGRAM):   end;
4131425   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4131426   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4131427   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4131428   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4131429   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4131430   +   end;
MPRINT(EM_DIAGRAM):   end;
4131431   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4131432   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4131433   +   end;
MPRINT(EM_DIAGRAM):   end;
4131434   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4131435   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4131436   +   end;
MPRINT(EM_DIAGRAM):   end;
4131437   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4131438   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4131439   +   end;
MPRINT(EM_DIAGRAM):   end;
4131440   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4131441   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4131442   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4131443   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4131444   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4131445   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4131446   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4131447   +   end;
MPRINT(EM_DIAGRAM):   end;
4131448   +end;
MPRINT(EM_DIAGRAM):   end;
4131449   +
4131450   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4131451   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4131452   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
4131453   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4131454   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4131455   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4131456   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4131457   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4131458   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4131459   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4131460   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4131461   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4131462   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4131463   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4131464   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4131465   +end;
MPRINT(EM_DIAGRAM):   end;
4131466   +else do;
MPRINT(EM_DIAGRAM):   else do;
4131467   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4131468   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4131469   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4131470   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4131471   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4131472   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4131473   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4131474   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4131475   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4131476   +         end;
MPRINT(EM_DIAGRAM):   end;
4131477   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4131478   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4131479   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4131480   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4131481   +            end;
MPRINT(EM_DIAGRAM):   end;
4131482   +         end;
MPRINT(EM_DIAGRAM):   end;
4131483   +      end;
MPRINT(EM_DIAGRAM):   end;
4131484   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4131485   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4131486   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4131487   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4131488   +         end;
MPRINT(EM_DIAGRAM):   end;
4131489   +      end;
MPRINT(EM_DIAGRAM):   end;
4131490   +   end;
MPRINT(EM_DIAGRAM):   end;
4131491   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4131492   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4131493   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4131494   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4131495   +      end;
MPRINT(EM_DIAGRAM):   end;
4131496   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4131497   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4131498   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4131499   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4131500   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4131501   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4131502   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4131503   +         end;
MPRINT(EM_DIAGRAM):   end;
4131504   +      end;
MPRINT(EM_DIAGRAM):   end;
4131505   +   end;
MPRINT(EM_DIAGRAM):   end;
4131506   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4131507   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4131508   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4131509   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4131510   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4131511   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4131512   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4131513   +   end;
MPRINT(EM_DIAGRAM):   end;
4131514   +end;
MPRINT(EM_DIAGRAM):   end;
4131515   +
4131516   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4131517   +*** Checking missing input Interval
4131518   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4131519   +
4131520   +IF NMISS(
4131521   +   AcceptedCmpTotal ,
4131522   +   Age ,
4131523   +   Frq ,
4131524   +   Income ,
4131525   +   Kidhome ,
4131526   +   Mnt ,
4131527   +   MntFishProducts ,
4131528   +   MntFruits ,
4131529   +   MntGoldProds ,
4131530   +   MntMeatProducts ,
4131531   +   MntSweetProducts ,
4131532   +   MntWines ,
4131533   +   MonthsAsCustomer ,
4131534   +   NumCatalogPurchases ,
4131535   +   NumDealsPurchases ,
4131536   +   NumDistPurchases ,
4131537   +   NumStorePurchases ,
4131538   +   NumWebPurchases ,
4131539   +   NumWebVisitsMonth ,
4131540   +   RFMstat ,
4131541   +   RMntFrq ,
4131542   +   Recency ,
4131543   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
4131544   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4131545   +
4131546   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4131547   +END;
MPRINT(EM_DIAGRAM):   END;
4131548   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4131549   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4131550   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4131551   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4131552   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4131553   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
4131554   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4131555   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4131556   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4131557   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4131558   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4131559   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4131560   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
4131561   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4131562   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4131563   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4131564   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4131565   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
4131566   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4131567   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
4131568   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4131569   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4131570   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
4131571   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4131572   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
4131573   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4131574   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
4131575   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4131576   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
4131577   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4131578   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
4131579   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4131580   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
4131581   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4131582   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
4131583   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4131584   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4131585   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4131586   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4131587   +END;
MPRINT(EM_DIAGRAM):   END;
4131588   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4131589   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4131590   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4131591   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
4131592   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4131593   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4131594   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4131595   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4131596   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4131597   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4131598   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4131599   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4131600   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4131601   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4131602   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4131603   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4131604   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
4131605   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4131606   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4131607   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4131608   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4131609   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4131610   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
4131611   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4131612   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4131613   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
4131614   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4131615   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4131616   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
4131617   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4131618   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4131619   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4131620   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4131621   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
4131622   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4131623   +   ELSE S_NumCatalogPurchases
4131624   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4131625   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
4131626   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4131627   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4131628   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
4131629   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4131630   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4131631   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
4131632   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4131633   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4131634   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
4131635   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4131636   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4131637   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
4131638   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4131639   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4131640   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
4131641   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4131642   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4131643   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4131644   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4131645   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4131646   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4131647   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4131648   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4131649   +END;
MPRINT(EM_DIAGRAM):   END;
4131650   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4131651   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4131652   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4131653   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4131654   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4131655   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4131656   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4131657   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4131658   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4131659   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4131660   +   H1x1_1  =    -0.39626020371997 * S_AcceptedCmpTotal
4131661   +          +    -0.01816056663075 * S_Age  +    -0.00460254268687 * S_Frq
4131662   +          +     -0.6298818722064 * S_Income  +      0.8900929150705 *
4131663   +        S_Kidhome  +     0.05998375535947 * S_Mnt  +     0.08478552461574 *
4131664   +        S_MntFishProducts  +     0.07285521492122 * S_MntFruits
4131665   +          +     0.02425299634788 * S_MntGoldProds  +    -0.41076383325238 *
4131666   +        S_MntMeatProducts  +     0.07871852129826 * S_MntSweetProducts
4131667   +          +     0.41538830130195 * S_MntWines  +    -0.05328800798119 *
4131668   +        S_MonthsAsCustomer  +    -0.40684432921987 * S_NumCatalogPurchases
4131669   +          +     -0.4295354470932 * S_NumDealsPurchases
4131670   +          +    -0.08226280459837 * S_NumDistPurchases
4131671   +          +      0.2932815275833 * S_NumStorePurchases
4131672   +          +     0.19049189042599 * S_NumWebPurchases
4131673   +          +    -0.98799339280673 * S_NumWebVisitsMonth
4131674   +          +     0.11260673669543 * S_RFMstat  +     0.13635890961985 *
4131675   +        S_RMntFrq  +     1.04348870032296 * S_Recency
4131676   +          +     0.52611148815102 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.39626020371997 * S_AcceptedCmpTotal + -0.01816056663075 * 
S_Age + -0.00460254268687 * S_Frq + -0.6298818722064 * S_Income + 0.8900929150705 * S_Kidhome 
+ 0.05998375535947 * S_Mnt + 0.08478552461574 * S_MntFishProducts + 0.07285521492122 * 
S_MntFruits + 0.02425299634788 * S_MntGoldProds + -0.41076383325238 * S_MntMeatProducts + 
0.07871852129826 * S_MntSweetProducts + 0.41538830130195 * S_MntWines + -0.05328800798119 * 
S_MonthsAsCustomer + -0.40684432921987 * S_NumCatalogPurchases + -0.4295354470932 * 
S_NumDealsPurchases + -0.08226280459837 * S_NumDistPurchases + 0.2932815275833 * 
S_NumStorePurchases + 0.19049189042599 * S_NumWebPurchases + -0.98799339280673 * 
S_NumWebVisitsMonth + 0.11260673669543 * S_RFMstat + 0.13635890961985 * S_RMntFrq + 
1.04348870032296 * S_Recency + 0.52611148815102 * S_Teenhome ;
4131677   +   H1x1_1  = H1x1_1  +     0.15790711928997 * AcceptedCmp10
4131678   +          +     0.06783787806396 * AcceptedCmp20  +     0.41565774195293 *
4131679   +        AcceptedCmp30  +     0.30916570020187 * AcceptedCmp40
4131680   +          +     0.01958247067826 * AcceptedCmp50  +    -0.22124142064002 *
4131681   +        Complain0  +    -0.10489638586177 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.15790711928997 * AcceptedCmp10 + 0.06783787806396 * 
AcceptedCmp20 + 0.41565774195293 * AcceptedCmp30 + 0.30916570020187 * AcceptedCmp40 + 
0.01958247067826 * AcceptedCmp50 + -0.22124142064002 * Complain0 + -0.10489638586177 * 
HigherEducationBinary0 ;
4131682   +   H1x1_1  = H1x1_1  +    -0.08125710121444 * Education2n_Cycle
4131683   +          +     0.43870916958611 * EducationBasic  +     0.00821874857942 *
4131684   +        EducationGraduation  +    -0.06446100461656 * EducationMaster
4131685   +          +    -0.78551174413278 * Marital_StatusDivorced
4131686   +          +     1.14162836709205 * Marital_StatusMarried
4131687   +          +    -0.85471695548675 * Marital_StatusSingle
4131688   +          +     1.26505259752775 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.08125710121444 * Education2n_Cycle + 
0.43870916958611 * EducationBasic + 0.00821874857942 * EducationGraduation + -0.06446100461656 
* EducationMaster + -0.78551174413278 * Marital_StatusDivorced + 1.14162836709205 * 
Marital_StatusMarried + -0.85471695548675 * Marital_StatusSingle + 1.26505259752775 * 
Marital_StatusTogether ;
4131689   +   H1x1_1  =     0.64210847429525 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.64210847429525 + H1x1_1 ;
4131690   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4131691   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4131692   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
4131693   +END;
MPRINT(EM_DIAGRAM):   END;
4131694   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4131695   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4131696   +END;
MPRINT(EM_DIAGRAM):   END;
4131697   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4131698   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
4131699   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4131700   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4131701   +   H1x2_1  =     1.91116996820275 * S_AcceptedCmpTotal
4131702   +          +    -0.04565000095235 * S_Age  +    -1.63806233692285 * S_Frq
4131703   +          +    -0.15095439296545 * S_Income  +     0.02267703582625 *
4131704   +        S_Kidhome  +     2.48236777474814 * S_Mnt  +    -1.42112052837665 *
4131705   +        S_MntFishProducts  +    -0.11955588126018 * S_MntFruits
4131706   +          +     0.13658953936605 * S_MntGoldProds  +     4.97158775763288 *
4131707   +        S_MntMeatProducts  +    -0.28267341074908 * S_MntSweetProducts
4131708   +          +    -1.82601506972813 * S_MntWines  +    -0.19812697196432 *
4131709   +        S_MonthsAsCustomer  +     0.19332662253824 * S_NumCatalogPurchases
4131710   +          +      0.1710743409836 * S_NumDealsPurchases
4131711   +          +     1.10019178495427 * S_NumDistPurchases
4131712   +          +     0.06701301620472 * S_NumStorePurchases
4131713   +          +    -1.47240374003368 * S_NumWebPurchases
4131714   +          +     0.38443387640949 * S_NumWebVisitsMonth
4131715   +          +      2.0027113997702 * S_RFMstat  +    -0.21911959624222 *
4131716   +        S_RMntFrq  +    -0.01383257292281 * S_Recency
4131717   +          +     0.06197183036374 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.91116996820275 * S_AcceptedCmpTotal + -0.04565000095235 * 
S_Age + -1.63806233692285 * S_Frq + -0.15095439296545 * S_Income + 0.02267703582625 * 
S_Kidhome + 2.48236777474814 * S_Mnt + -1.42112052837665 * S_MntFishProducts + 
-0.11955588126018 * S_MntFruits + 0.13658953936605 * S_MntGoldProds + 4.97158775763288 * 
S_MntMeatProducts + -0.28267341074908 * S_MntSweetProducts + -1.82601506972813 * S_MntWines + 
-0.19812697196432 * S_MonthsAsCustomer + 0.19332662253824 * S_NumCatalogPurchases + 
0.1710743409836 * S_NumDealsPurchases + 1.10019178495427 * S_NumDistPurchases + 
0.06701301620472 * S_NumStorePurchases + -1.47240374003368 * S_NumWebPurchases + 
0.38443387640949 * S_NumWebVisitsMonth + 2.0027113997702 * S_RFMstat + -0.21911959624222 * 
S_RMntFrq + -0.01383257292281 * S_Recency + 0.06197183036374 * S_Teenhome ;
4131718   +   H1x2_1  = H1x2_1  +    -2.19426751676022 * AcceptedCmp10
4131719   +          +     1.23153389834213 * AcceptedCmp20  +     1.52112605411294 *
4131720   +        AcceptedCmp30  +     1.24421666042028 * AcceptedCmp40
4131721   +          +    -1.01515793855275 * AcceptedCmp50  +    -0.37077318076551 *
4131722   +        Complain0  +    -0.60160682289549 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -2.19426751676022 * AcceptedCmp10 + 1.23153389834213 * 
AcceptedCmp20 + 1.52112605411294 * AcceptedCmp30 + 1.24421666042028 * AcceptedCmp40 + 
-1.01515793855275 * AcceptedCmp50 + -0.37077318076551 * Complain0 + -0.60160682289549 * 
HigherEducationBinary0 ;
4131723   +   H1x2_1  = H1x2_1  +     0.86205864289563 * Education2n_Cycle
4131724   +          +     1.36125955589945 * EducationBasic  +    -0.53843321813375 *
4131725   +        EducationGraduation  +    -0.84396607413409 * EducationMaster
4131726   +          +    -0.36835980184757 * Marital_StatusDivorced
4131727   +          +     0.71718933679692 * Marital_StatusMarried
4131728   +          +    -0.35767236657055 * Marital_StatusSingle
4131729   +          +     0.87230634846649 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.86205864289563 * Education2n_Cycle + 
1.36125955589945 * EducationBasic + -0.53843321813375 * EducationGraduation + 
-0.84396607413409 * EducationMaster + -0.36835980184757 * Marital_StatusDivorced + 
0.71718933679692 * Marital_StatusMarried + -0.35767236657055 * Marital_StatusSingle + 
0.87230634846649 * Marital_StatusTogether ;
4131730   +   H1x2_1  =     1.98030145519039 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.98030145519039 + H1x2_1 ;
4131731   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4131732   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4131733   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
4131734   +END;
MPRINT(EM_DIAGRAM):   END;
4131735   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4131736   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
4131737   +END;
MPRINT(EM_DIAGRAM):   END;
4131738   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4131739   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
4131740   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4131741   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4131742   +   H1x3_1  =     0.59484084506505 * S_AcceptedCmpTotal
4131743   +          +    -0.09107168455833 * S_Age  +      0.5281685679707 * S_Frq
4131744   +          +     1.27295894323816 * S_Income  +    -2.21965206319903 *
4131745   +        S_Kidhome  +     1.64535832697746 * S_Mnt  +    -0.35647765898878 *
4131746   +        S_MntFishProducts  +       0.702900738572 * S_MntFruits
4131747   +          +    -0.05421413002638 * S_MntGoldProds  +     0.35353806013819 *
4131748   +        S_MntMeatProducts  +     0.63868155719201 * S_MntSweetProducts
4131749   +          +     1.59716770369014 * S_MntWines  +    -0.38061815224137 *
4131750   +        S_MonthsAsCustomer  +     0.32358812228632 * S_NumCatalogPurchases
4131751   +          +    -1.99858075809796 * S_NumDealsPurchases
4131752   +          +    -0.37353682448701 * S_NumDistPurchases
4131753   +          +     1.16275863071649 * S_NumStorePurchases
4131754   +          +       -0.75936809253 * S_NumWebPurchases
4131755   +          +     2.17936226306026 * S_NumWebVisitsMonth
4131756   +          +    -0.05766019409404 * S_RFMstat  +      0.2675872238222 *
4131757   +        S_RMntFrq  +    -1.06566929523903 * S_Recency
4131758   +          +    -0.66606032905738 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.59484084506505 * S_AcceptedCmpTotal + -0.09107168455833 * 
S_Age + 0.5281685679707 * S_Frq + 1.27295894323816 * S_Income + -2.21965206319903 * S_Kidhome 
+ 1.64535832697746 * S_Mnt + -0.35647765898878 * S_MntFishProducts + 0.702900738572 * 
S_MntFruits + -0.05421413002638 * S_MntGoldProds + 0.35353806013819 * S_MntMeatProducts + 
0.63868155719201 * S_MntSweetProducts + 1.59716770369014 * S_MntWines + -0.38061815224137 * 
S_MonthsAsCustomer + 0.32358812228632 * S_NumCatalogPurchases + -1.99858075809796 * 
S_NumDealsPurchases + -0.37353682448701 * S_NumDistPurchases + 1.16275863071649 * 
S_NumStorePurchases + -0.75936809253 * S_NumWebPurchases + 2.17936226306026 * 
S_NumWebVisitsMonth + -0.05766019409404 * S_RFMstat + 0.2675872238222 * S_RMntFrq + 
-1.06566929523903 * S_Recency + -0.66606032905738 * S_Teenhome ;
4131759   +   H1x3_1  = H1x3_1  +     1.65955888726121 * AcceptedCmp10
4131760   +          +     0.45373706627481 * AcceptedCmp20  +     0.01398492780843 *
4131761   +        AcceptedCmp30  +    -0.89333296822402 * AcceptedCmp40
4131762   +          +     1.13510555884717 * AcceptedCmp50  +        0.34540948822 *
4131763   +        Complain0  +     0.74321002714269 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.65955888726121 * AcceptedCmp10 + 0.45373706627481 * 
AcceptedCmp20 + 0.01398492780843 * AcceptedCmp30 + -0.89333296822402 * AcceptedCmp40 + 
1.13510555884717 * AcceptedCmp50 + 0.34540948822 * Complain0 + 0.74321002714269 * 
HigherEducationBinary0 ;
4131764   +   H1x3_1  = H1x3_1  +    -0.23607197367978 * Education2n_Cycle
4131765   +          +     0.42497173199023 * EducationBasic  +      0.1600632419786 *
4131766   +        EducationGraduation  +    -0.90489876056203 * EducationMaster
4131767   +          +     0.60036315441483 * Marital_StatusDivorced
4131768   +          +    -0.94084946353672 * Marital_StatusMarried
4131769   +          +     0.34594388147374 * Marital_StatusSingle
4131770   +          +    -0.32507682638228 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.23607197367978 * Education2n_Cycle + 
0.42497173199023 * EducationBasic + 0.1600632419786 * EducationGraduation + -0.90489876056203 
* EducationMaster + 0.60036315441483 * Marital_StatusDivorced + -0.94084946353672 * 
Marital_StatusMarried + 0.34594388147374 * Marital_StatusSingle + -0.32507682638228 * 
Marital_StatusTogether ;
4131771   +   H1x3_1  =     1.88038507544103 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.88038507544103 + H1x3_1 ;
4131772   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4131773   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4131774   +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
4131775   +END;
MPRINT(EM_DIAGRAM):   END;
4131776   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4131777   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
4131778   +END;
MPRINT(EM_DIAGRAM):   END;
4131779   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4131780   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
4131781   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4131782   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4131783   +   H2x1_1  =     -3.6827854279321 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -3.6827854279321 * H1x1_1 ;
4131784   +   H2x1_1  = H2x1_1  +     3.64439382550131 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 3.64439382550131 * H1x2_1 ;
4131785   +   H2x1_1  = H2x1_1  +    -2.48816241593271 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.48816241593271 * H1x3_1 ;
4131786   +   H2x1_1  =     -2.2078830840961 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -2.2078830840961 + H2x1_1 ;
4131787   +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
4131788   +END;
MPRINT(EM_DIAGRAM):   END;
4131789   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4131790   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
4131791   +END;
MPRINT(EM_DIAGRAM):   END;
4131792   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4131793   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
4131794   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4131795   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4131796   +   H2x2_1  =     -1.6139108987075 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -1.6139108987075 * H1x1_1 ;
4131797   +   H2x2_1  = H2x2_1  +     1.98688988318911 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 1.98688988318911 * H1x2_1 ;
4131798   +   H2x2_1  = H2x2_1  +    -1.34935271176056 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.34935271176056 * H1x3_1 ;
4131799   +   H2x2_1  =    -2.69383672527368 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -2.69383672527368 + H2x2_1 ;
4131800   +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
4131801   +END;
MPRINT(EM_DIAGRAM):   END;
4131802   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4131803   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
4131804   +END;
MPRINT(EM_DIAGRAM):   END;
4131805   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4131806   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
4131807   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4131808   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4131809   +   H3x1_1  =     5.76336982853197 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 5.76336982853197 * H2x1_1 ;
4131810   +   H3x1_1  = H3x1_1  +     3.27853184608173 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 3.27853184608173 * H2x2_1 ;
4131811   +   H3x1_1  =     0.79036126364677 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.79036126364677 + H3x1_1 ;
4131812   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4131813   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4131814   +   H3x1_1  = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
4131815   +END;
MPRINT(EM_DIAGRAM):   END;
4131816   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4131817   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
4131818   +END;
MPRINT(EM_DIAGRAM):   END;
4131819   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4131820   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4131821   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4131822   +
4131823   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
4131824   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
4131825   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4131826   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
4131827   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
4131828   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4131829   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
4131830   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4131831   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4131832   +end;
MPRINT(EM_DIAGRAM):   end;
4131833   +else do;
MPRINT(EM_DIAGRAM):   else do;
4131834   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
4131835   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
4131836   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
4131837   +   end;
MPRINT(EM_DIAGRAM):   end;
4131838   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
4131839   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
4131840   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
4131841   +   end;
MPRINT(EM_DIAGRAM):   end;
4131842   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4131843   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4131844   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4131845   +   end;
MPRINT(EM_DIAGRAM):   end;
4131846   +end;
MPRINT(EM_DIAGRAM):   end;
4131847   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4131848   +   P_DepVar1  =    -9.42523861508231 * H3x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.42523861508231 * H3x1_1 ;
4131849   +   P_DepVar1  =     7.36639958607287 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.36639958607287 + P_DepVar1 ;
4131850   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4131851   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4131852   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4131853   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4131854   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4131855   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4131856   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4131857   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4131858   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4131859   +END;
MPRINT(EM_DIAGRAM):   END;
4131860   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4131861   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4131862   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4131863   +END;
MPRINT(EM_DIAGRAM):   END;
4131864   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4131865   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4131866   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4131867   +END;
MPRINT(EM_DIAGRAM):   END;
4131868   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
4131869   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
4131870   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
4131871   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
4131872   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
4131873   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
4131874   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
4131875   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4131876   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4131877   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4131878   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4131879   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4131880   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4131881   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4131882   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4131883   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4131884   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4131885   +END;
MPRINT(EM_DIAGRAM):   END;
4131886   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4131887   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4131888   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4131889   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
4131890   +* Renaming variables for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural6;
4131891   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4131892   +* Renaming Posterior variables for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural6;
4131893   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4131894   +drop AutoNeural6_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_P_DepVar1;
4131895   +AutoNeural6_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural6_P_DepVar1 = P_DepVar1;
4131896   +drop AutoNeural6_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_P_DepVar0;
4131897   +AutoNeural6_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural6_P_DepVar0 = P_DepVar0;
4131898   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4131899   +* Renaming Into variables for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural6;
4131900   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4131901   +length AutoNeural6_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural6_I_DepVar $32;
4131902   +drop AutoNeural6_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_I_DepVar;
4131903   +AutoNeural6_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural6_I_DepVar = I_DepVar;
4131904   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4131905   +* Renaming _WARN_ variable for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural6;
4131906   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4131907   +length AutoNeural6_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural6_WARN_ $4;
4131908   +drop AutoNeural6_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_WARN_;
4131909   +AutoNeural6_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural6_WARN_ = _WARN_;
4131910   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4131911   +* Ensmbl38: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Scoring Code of model 2 of 7;
4131912   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4131913   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4131914   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
4131915   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
4131916   +* NODE: AutoNeural7;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural7;
4131917   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4131918   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4131919   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4131920   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4131921   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4131922   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4131923   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4131924   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4131925   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4131926   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4131927   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4131928   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4131929   +LENGTH _WARN_ $4
4131930   +      F_DepVar  $ 12
4131931   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
4131932   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4131933   +
4131934   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4131935   +
4131936   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4131937   +
4131938   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4131939   +
4131940   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4131941   +
4131942   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4131943   +
4131944   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4131945   +
4131946   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4131947   +
4131948   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4131949   +
4131950   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4131951   +
4131952   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4131953   +
4131954   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4131955   +
4131956   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4131957   +
4131958   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4131959   +
4131960   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4131961   +
4131962   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4131963   +
4131964   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4131965   +
4131966   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4131967   +
4131968   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4131969   +
4131970   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4131971   +
4131972   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4131973   +
4131974   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4131975   +
4131976   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4131977   +
4131978   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4131979   +
4131980   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4131981   +
4131982   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4131983   +
4131984   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4131985   +
4131986   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4131987   +
4131988   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4131989   +
4131990   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4131991   +
4131992   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4131993   +
4131994   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4131995   +
4131996   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4131997   +
4131998   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4131999   +
4132000   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4132001   +
4132002   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4132003   +
4132004   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4132005   +
4132006   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4132007   +
4132008   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4132009   +
4132010   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4132011   +
4132012   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4132013   +
4132014   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4132015   +
4132016   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4132017   +
4132018   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4132019   +
4132020   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
4132021   +
4132022   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4132023   +
4132024   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
4132025   +
4132026   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4132027   +
4132028   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4132029   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4132030   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4132031   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4132032   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4132033   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4132034   +end;
MPRINT(EM_DIAGRAM):   end;
4132035   +else do;
MPRINT(EM_DIAGRAM):   else do;
4132036   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4132037   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4132038   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4132039   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4132040   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4132041   +   end;
MPRINT(EM_DIAGRAM):   end;
4132042   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4132043   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4132044   +   end;
MPRINT(EM_DIAGRAM):   end;
4132045   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4132046   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4132047   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4132048   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4132049   +   end;
MPRINT(EM_DIAGRAM):   end;
4132050   +end;
MPRINT(EM_DIAGRAM):   end;
4132051   +
4132052   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4132053   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4132054   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4132055   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4132056   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4132057   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4132058   +end;
MPRINT(EM_DIAGRAM):   end;
4132059   +else do;
MPRINT(EM_DIAGRAM):   else do;
4132060   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4132061   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4132062   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4132063   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4132064   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4132065   +   end;
MPRINT(EM_DIAGRAM):   end;
4132066   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4132067   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4132068   +   end;
MPRINT(EM_DIAGRAM):   end;
4132069   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4132070   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4132071   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4132072   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4132073   +   end;
MPRINT(EM_DIAGRAM):   end;
4132074   +end;
MPRINT(EM_DIAGRAM):   end;
4132075   +
4132076   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4132077   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4132078   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4132079   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4132080   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4132081   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4132082   +end;
MPRINT(EM_DIAGRAM):   end;
4132083   +else do;
MPRINT(EM_DIAGRAM):   else do;
4132084   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4132085   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4132086   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4132087   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4132088   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4132089   +   end;
MPRINT(EM_DIAGRAM):   end;
4132090   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4132091   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4132092   +   end;
MPRINT(EM_DIAGRAM):   end;
4132093   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4132094   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4132095   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4132096   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4132097   +   end;
MPRINT(EM_DIAGRAM):   end;
4132098   +end;
MPRINT(EM_DIAGRAM):   end;
4132099   +
4132100   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4132101   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4132102   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4132103   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4132104   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4132105   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4132106   +end;
MPRINT(EM_DIAGRAM):   end;
4132107   +else do;
MPRINT(EM_DIAGRAM):   else do;
4132108   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4132109   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4132110   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4132111   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4132112   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4132113   +   end;
MPRINT(EM_DIAGRAM):   end;
4132114   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4132115   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4132116   +   end;
MPRINT(EM_DIAGRAM):   end;
4132117   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4132118   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4132119   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4132120   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4132121   +   end;
MPRINT(EM_DIAGRAM):   end;
4132122   +end;
MPRINT(EM_DIAGRAM):   end;
4132123   +
4132124   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4132125   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4132126   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4132127   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4132128   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4132129   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4132130   +end;
MPRINT(EM_DIAGRAM):   end;
4132131   +else do;
MPRINT(EM_DIAGRAM):   else do;
4132132   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4132133   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4132134   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4132135   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4132136   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4132137   +   end;
MPRINT(EM_DIAGRAM):   end;
4132138   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4132139   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4132140   +   end;
MPRINT(EM_DIAGRAM):   end;
4132141   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4132142   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4132143   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4132144   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4132145   +   end;
MPRINT(EM_DIAGRAM):   end;
4132146   +end;
MPRINT(EM_DIAGRAM):   end;
4132147   +
4132148   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4132149   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4132150   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4132151   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4132152   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4132153   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4132154   +end;
MPRINT(EM_DIAGRAM):   end;
4132155   +else do;
MPRINT(EM_DIAGRAM):   else do;
4132156   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4132157   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4132158   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4132159   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4132160   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4132161   +   end;
MPRINT(EM_DIAGRAM):   end;
4132162   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4132163   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4132164   +   end;
MPRINT(EM_DIAGRAM):   end;
4132165   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4132166   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4132167   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4132168   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4132169   +   end;
MPRINT(EM_DIAGRAM):   end;
4132170   +end;
MPRINT(EM_DIAGRAM):   end;
4132171   +
4132172   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4132173   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4132174   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4132175   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4132176   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4132177   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4132178   +end;
MPRINT(EM_DIAGRAM):   end;
4132179   +else do;
MPRINT(EM_DIAGRAM):   else do;
4132180   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4132181   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4132182   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4132183   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4132184   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4132185   +   end;
MPRINT(EM_DIAGRAM):   end;
4132186   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4132187   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4132188   +   end;
MPRINT(EM_DIAGRAM):   end;
4132189   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4132190   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4132191   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4132192   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4132193   +   end;
MPRINT(EM_DIAGRAM):   end;
4132194   +end;
MPRINT(EM_DIAGRAM):   end;
4132195   +
4132196   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4132197   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
4132198   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4132199   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4132200   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4132201   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4132202   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4132203   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4132204   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4132205   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4132206   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4132207   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4132208   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4132209   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4132210   +end;
MPRINT(EM_DIAGRAM):   end;
4132211   +else do;
MPRINT(EM_DIAGRAM):   else do;
4132212   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4132213   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4132214   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4132215   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4132216   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4132217   +   end;
MPRINT(EM_DIAGRAM):   end;
4132218   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4132219   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4132220   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4132221   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4132222   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4132223   +   end;
MPRINT(EM_DIAGRAM):   end;
4132224   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4132225   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4132226   +   end;
MPRINT(EM_DIAGRAM):   end;
4132227   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4132228   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4132229   +   end;
MPRINT(EM_DIAGRAM):   end;
4132230   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4132231   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4132232   +   end;
MPRINT(EM_DIAGRAM):   end;
4132233   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4132234   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4132235   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4132236   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4132237   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4132238   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4132239   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4132240   +   end;
MPRINT(EM_DIAGRAM):   end;
4132241   +end;
MPRINT(EM_DIAGRAM):   end;
4132242   +
4132243   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4132244   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4132245   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
4132246   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4132247   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4132248   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4132249   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4132250   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4132251   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4132252   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4132253   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4132254   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4132255   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4132256   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4132257   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4132258   +end;
MPRINT(EM_DIAGRAM):   end;
4132259   +else do;
MPRINT(EM_DIAGRAM):   else do;
4132260   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4132261   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4132262   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4132263   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4132264   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4132265   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4132266   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4132267   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4132268   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4132269   +         end;
MPRINT(EM_DIAGRAM):   end;
4132270   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4132271   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4132272   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4132273   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4132274   +            end;
MPRINT(EM_DIAGRAM):   end;
4132275   +         end;
MPRINT(EM_DIAGRAM):   end;
4132276   +      end;
MPRINT(EM_DIAGRAM):   end;
4132277   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4132278   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4132279   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4132280   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4132281   +         end;
MPRINT(EM_DIAGRAM):   end;
4132282   +      end;
MPRINT(EM_DIAGRAM):   end;
4132283   +   end;
MPRINT(EM_DIAGRAM):   end;
4132284   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4132285   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4132286   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4132287   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4132288   +      end;
MPRINT(EM_DIAGRAM):   end;
4132289   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4132290   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4132291   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4132292   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4132293   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4132294   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4132295   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4132296   +         end;
MPRINT(EM_DIAGRAM):   end;
4132297   +      end;
MPRINT(EM_DIAGRAM):   end;
4132298   +   end;
MPRINT(EM_DIAGRAM):   end;
4132299   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4132300   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4132301   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4132302   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4132303   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4132304   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4132305   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4132306   +   end;
MPRINT(EM_DIAGRAM):   end;
4132307   +end;
MPRINT(EM_DIAGRAM):   end;
4132308   +
4132309   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4132310   +*** Checking missing input Interval
4132311   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4132312   +
4132313   +IF NMISS(
4132314   +   AcceptedCmpTotal ,
4132315   +   Age ,
4132316   +   Frq ,
4132317   +   Income ,
4132318   +   Kidhome ,
4132319   +   Mnt ,
4132320   +   MntFishProducts ,
4132321   +   MntFruits ,
4132322   +   MntGoldProds ,
4132323   +   MntMeatProducts ,
4132324   +   MntSweetProducts ,
4132325   +   MntWines ,
4132326   +   MonthsAsCustomer ,
4132327   +   NumCatalogPurchases ,
4132328   +   NumDealsPurchases ,
4132329   +   NumDistPurchases ,
4132330   +   NumStorePurchases ,
4132331   +   NumWebPurchases ,
4132332   +   NumWebVisitsMonth ,
4132333   +   RFMstat ,
4132334   +   RMntFrq ,
4132335   +   Recency ,
4132336   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
4132337   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4132338   +
4132339   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4132340   +END;
MPRINT(EM_DIAGRAM):   END;
4132341   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4132342   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4132343   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4132344   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4132345   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4132346   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
4132347   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4132348   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4132349   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4132350   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4132351   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4132352   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4132353   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
4132354   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4132355   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4132356   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4132357   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4132358   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
4132359   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4132360   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
4132361   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4132362   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4132363   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
4132364   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4132365   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
4132366   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4132367   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
4132368   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4132369   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
4132370   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4132371   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
4132372   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4132373   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
4132374   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4132375   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
4132376   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4132377   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4132378   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4132379   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4132380   +END;
MPRINT(EM_DIAGRAM):   END;
4132381   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4132382   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4132383   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4132384   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
4132385   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4132386   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4132387   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4132388   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4132389   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4132390   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4132391   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4132392   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4132393   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4132394   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4132395   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4132396   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4132397   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
4132398   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4132399   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4132400   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4132401   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4132402   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4132403   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
4132404   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4132405   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4132406   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
4132407   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4132408   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4132409   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
4132410   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4132411   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4132412   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4132413   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4132414   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
4132415   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4132416   +   ELSE S_NumCatalogPurchases
4132417   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4132418   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
4132419   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4132420   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4132421   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
4132422   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4132423   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4132424   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
4132425   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4132426   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4132427   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
4132428   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4132429   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4132430   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
4132431   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4132432   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4132433   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
4132434   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4132435   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4132436   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4132437   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4132438   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4132439   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4132440   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4132441   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4132442   +END;
MPRINT(EM_DIAGRAM):   END;
4132443   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4132444   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4132445   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4132446   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4132447   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4132448   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4132449   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4132450   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4132451   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4132452   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4132453   +   H1x1_1  =     0.26227897937716 * S_AcceptedCmpTotal
4132454   +          +     -0.0155758157867 * S_Age  +    -0.20268934440257 * S_Frq
4132455   +          +    -0.18529976542103 * S_Income  +     0.18038928903961 *
4132456   +        S_Kidhome  +    -0.28961354349068 * S_Mnt  +    -0.05151010840858 *
4132457   +        S_MntFishProducts  +    -0.03759341636928 * S_MntFruits
4132458   +          +     0.01305575717465 * S_MntGoldProds  +     0.24307680778257 *
4132459   +        S_MntMeatProducts  +    -0.02893363709307 * S_MntSweetProducts
4132460   +          +    -0.35324697751403 * S_MntWines  +    -0.00781254837323 *
4132461   +        S_MonthsAsCustomer  +     0.15222992290422 * S_NumCatalogPurchases
4132462   +          +     0.09708841024031 * S_NumDealsPurchases
4132463   +          +    -0.29075561032014 * S_NumDistPurchases
4132464   +          +    -0.14495394259873 * S_NumStorePurchases
4132465   +          +     0.11890705145732 * S_NumWebPurchases
4132466   +          +    -0.16954189911344 * S_NumWebVisitsMonth
4132467   +          +     0.12377939462638 * S_RFMstat  +    -0.05870604523801 *
4132468   +        S_RMntFrq  +     0.17150719398884 * S_Recency
4132469   +          +     0.13642607109645 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26227897937716 * S_AcceptedCmpTotal + -0.0155758157867 * 
S_Age + -0.20268934440257 * S_Frq + -0.18529976542103 * S_Income + 0.18038928903961 * 
S_Kidhome + -0.28961354349068 * S_Mnt + -0.05151010840858 * S_MntFishProducts + 
-0.03759341636928 * S_MntFruits + 0.01305575717465 * S_MntGoldProds + 0.24307680778257 * 
S_MntMeatProducts + -0.02893363709307 * S_MntSweetProducts + -0.35324697751403 * S_MntWines + 
-0.00781254837323 * S_MonthsAsCustomer + 0.15222992290422 * S_NumCatalogPurchases + 
0.09708841024031 * S_NumDealsPurchases + -0.29075561032014 * S_NumDistPurchases + 
-0.14495394259873 * S_NumStorePurchases + 0.11890705145732 * S_NumWebPurchases + 
-0.16954189911344 * S_NumWebVisitsMonth + 0.12377939462638 * S_RFMstat + -0.05870604523801 * 
S_RMntFrq + 0.17150719398884 * S_Recency + 0.13642607109645 * S_Teenhome ;
4132470   +   H1x1_2  =     0.26173967942961 * S_AcceptedCmpTotal
4132471   +          +    -0.00424968908882 * S_Age  +    -0.07102902276221 * S_Frq
4132472   +          +     0.17373040625452 * S_Income  +    -0.12612693849717 *
4132473   +        S_Kidhome  +    -0.40114393645566 * S_Mnt  +    -0.06800009910731 *
4132474   +        S_MntFishProducts  +    -0.06681994193124 * S_MntFruits
4132475   +          +     0.00602505287702 * S_MntGoldProds  +     0.29533767747106 *
4132476   +        S_MntMeatProducts  +    -0.06832235425976 * S_MntSweetProducts
4132477   +          +    -0.44970327281811 * S_MntWines  +    -0.01061648191158 *
4132478   +        S_MonthsAsCustomer  +      0.3402332775449 * S_NumCatalogPurchases
4132479   +          +     0.16274478997892 * S_NumDealsPurchases
4132480   +          +     0.03966958784582 * S_NumDistPurchases
4132481   +          +    -0.04714110726598 * S_NumStorePurchases
4132482   +          +    -0.02124229528082 * S_NumWebPurchases
4132483   +          +     0.29753299776832 * S_NumWebVisitsMonth
4132484   +          +     0.08114418100212 * S_RFMstat  +     0.39051989081881 *
4132485   +        S_RMntFrq  +     -0.3340129986623 * S_Recency
4132486   +          +    -0.11108871458308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.26173967942961 * S_AcceptedCmpTotal + -0.00424968908882 * 
S_Age + -0.07102902276221 * S_Frq + 0.17373040625452 * S_Income + -0.12612693849717 * 
S_Kidhome + -0.40114393645566 * S_Mnt + -0.06800009910731 * S_MntFishProducts + 
-0.06681994193124 * S_MntFruits + 0.00602505287702 * S_MntGoldProds + 0.29533767747106 * 
S_MntMeatProducts + -0.06832235425976 * S_MntSweetProducts + -0.44970327281811 * S_MntWines + 
-0.01061648191158 * S_MonthsAsCustomer + 0.3402332775449 * S_NumCatalogPurchases + 
0.16274478997892 * S_NumDealsPurchases + 0.03966958784582 * S_NumDistPurchases + 
-0.04714110726598 * S_NumStorePurchases + -0.02124229528082 * S_NumWebPurchases + 
0.29753299776832 * S_NumWebVisitsMonth + 0.08114418100212 * S_RFMstat + 0.39051989081881 * 
S_RMntFrq + -0.3340129986623 * S_Recency + -0.11108871458308 * S_Teenhome ;
4132487   +   H1x1_1  = H1x1_1  +      0.1756873442571 * AcceptedCmp10
4132488   +          +     0.31180024044306 * AcceptedCmp20  +     0.29619883713337 *
4132489   +        AcceptedCmp30  +     0.30154500722412 * AcceptedCmp40
4132490   +          +     0.19297823461379 * AcceptedCmp50  +     -0.2612666063344 *
4132491   +        Complain0  +    -0.07979877068908 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.1756873442571 * AcceptedCmp10 + 0.31180024044306 * 
AcceptedCmp20 + 0.29619883713337 * AcceptedCmp30 + 0.30154500722412 * AcceptedCmp40 + 
0.19297823461379 * AcceptedCmp50 + -0.2612666063344 * Complain0 + -0.07979877068908 * 
HigherEducationBinary0 ;
4132492   +   H1x1_2  = H1x1_2  +      0.0093987850789 * AcceptedCmp10
4132493   +          +     0.01121417299451 * AcceptedCmp20  +     0.02978720081114 *
4132494   +        AcceptedCmp30  +     0.03675035164823 * AcceptedCmp40
4132495   +          +      0.0326403700043 * AcceptedCmp50  +     0.12620299225555 *
4132496   +        Complain0  +    -0.08132205666396 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0093987850789 * AcceptedCmp10 + 0.01121417299451 * 
AcceptedCmp20 + 0.02978720081114 * AcceptedCmp30 + 0.03675035164823 * AcceptedCmp40 + 
0.0326403700043 * AcceptedCmp50 + 0.12620299225555 * Complain0 + -0.08132205666396 * 
HigherEducationBinary0 ;
4132497   +   H1x1_1  = H1x1_1  +    -0.03360721558666 * Education2n_Cycle
4132498   +          +     0.15032252273168 * EducationBasic  +    -0.00292639237041 *
4132499   +        EducationGraduation  +     0.00619669837452 * EducationMaster
4132500   +          +    -0.05037639679806 * Marital_StatusDivorced
4132501   +          +     0.28781968727878 * Marital_StatusMarried
4132502   +          +    -0.20382417074384 * Marital_StatusSingle
4132503   +          +     0.20088888064707 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03360721558666 * Education2n_Cycle + 
0.15032252273168 * EducationBasic + -0.00292639237041 * EducationGraduation + 0.00619669837452 
* EducationMaster + -0.05037639679806 * Marital_StatusDivorced + 0.28781968727878 * 
Marital_StatusMarried + -0.20382417074384 * Marital_StatusSingle + 0.20088888064707 * 
Marital_StatusTogether ;
4132504   +   H1x1_2  = H1x1_2  +     0.12543856607452 * Education2n_Cycle
4132505   +          +      0.0095562801112 * EducationBasic  +    -0.04438983662274 *
4132506   +        EducationGraduation  +    -0.06952670554019 * EducationMaster
4132507   +          +     0.06970969219123 * Marital_StatusDivorced
4132508   +          +    -0.15787475744986 * Marital_StatusMarried
4132509   +          +     0.14345344072192 * Marital_StatusSingle
4132510   +          +    -0.12758942067533 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12543856607452 * Education2n_Cycle + 0.0095562801112 
* EducationBasic + -0.04438983662274 * EducationGraduation + -0.06952670554019 * 
EducationMaster + 0.06970969219123 * Marital_StatusDivorced + -0.15787475744986 * 
Marital_StatusMarried + 0.14345344072192 * Marital_StatusSingle + -0.12758942067533 * 
Marital_StatusTogether ;
4132511   +   H1x1_1  =     0.90517220350758 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.90517220350758 + H1x1_1 ;
4132512   +   H1x1_2  =    -0.60383186342134 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.60383186342134 + H1x1_2 ;
4132513   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
4132514   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
4132515   +END;
MPRINT(EM_DIAGRAM):   END;
4132516   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4132517   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4132518   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4132519   +END;
MPRINT(EM_DIAGRAM):   END;
4132520   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4132521   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4132522   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4132523   +
4132524   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
4132525   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
4132526   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4132527   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
4132528   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
4132529   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4132530   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
4132531   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4132532   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4132533   +end;
MPRINT(EM_DIAGRAM):   end;
4132534   +else do;
MPRINT(EM_DIAGRAM):   else do;
4132535   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
4132536   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
4132537   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
4132538   +   end;
MPRINT(EM_DIAGRAM):   end;
4132539   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
4132540   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
4132541   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
4132542   +   end;
MPRINT(EM_DIAGRAM):   end;
4132543   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4132544   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4132545   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4132546   +   end;
MPRINT(EM_DIAGRAM):   end;
4132547   +end;
MPRINT(EM_DIAGRAM):   end;
4132548   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4132549   +   P_DepVar1  =     -11.151440981908 * H1x1_1  +     16.6040498320868 * H1x1_2
4132550   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -11.151440981908 * H1x1_1 + 16.6040498320868 * H1x1_2 ;
4132551   +   P_DepVar1  =     2.38025141404985 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.38025141404985 + P_DepVar1 ;
4132552   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4132553   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4132554   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4132555   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4132556   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4132557   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4132558   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4132559   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4132560   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4132561   +END;
MPRINT(EM_DIAGRAM):   END;
4132562   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4132563   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4132564   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4132565   +END;
MPRINT(EM_DIAGRAM):   END;
4132566   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4132567   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4132568   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4132569   +END;
MPRINT(EM_DIAGRAM):   END;
4132570   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
4132571   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
4132572   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
4132573   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
4132574   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
4132575   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
4132576   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
4132577   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4132578   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4132579   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4132580   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4132581   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4132582   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4132583   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4132584   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4132585   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4132586   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4132587   +END;
MPRINT(EM_DIAGRAM):   END;
4132588   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4132589   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4132590   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4132591   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
4132592   +* Renaming variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural7;
4132593   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4132594   +* Renaming Posterior variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural7;
4132595   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4132596   +drop AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar1;
4132597   +AutoNeural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar1 = P_DepVar1;
4132598   +drop AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar0;
4132599   +AutoNeural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar0 = P_DepVar0;
4132600   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4132601   +* Renaming Into variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural7;
4132602   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4132603   +length AutoNeural7_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural7_I_DepVar $32;
4132604   +drop AutoNeural7_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_I_DepVar;
4132605   +AutoNeural7_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural7_I_DepVar = I_DepVar;
4132606   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4132607   +* Renaming _WARN_ variable for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural7;
4132608   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4132609   +length AutoNeural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural7_WARN_ $4;
4132610   +drop AutoNeural7_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_WARN_;
4132611   +AutoNeural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural7_WARN_ = _WARN_;
4132612   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4132613   +* Ensmbl38: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Scoring Code of model 3 of 7;
4132614   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4132615   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4132616   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
4132617   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
4132618   +* NODE: AutoNeural8;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural8;
4132619   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4132620   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4132621   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4132622   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4132623   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4132624   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4132625   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4132626   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4132627   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4132628   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4132629   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4132630   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4132631   +LENGTH _WARN_ $4
4132632   +      F_DepVar  $ 12
4132633   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
4132634   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4132635   +
4132636   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4132637   +
4132638   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4132639   +
4132640   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4132641   +
4132642   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4132643   +
4132644   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4132645   +
4132646   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4132647   +
4132648   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4132649   +
4132650   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4132651   +
4132652   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4132653   +
4132654   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4132655   +
4132656   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4132657   +
4132658   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4132659   +
4132660   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4132661   +
4132662   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4132663   +
4132664   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4132665   +
4132666   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4132667   +
4132668   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4132669   +
4132670   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4132671   +
4132672   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4132673   +
4132674   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4132675   +
4132676   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4132677   +
4132678   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4132679   +
4132680   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4132681   +
4132682   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4132683   +
4132684   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4132685   +
4132686   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4132687   +
4132688   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4132689   +
4132690   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4132691   +
4132692   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4132693   +
4132694   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4132695   +
4132696   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4132697   +
4132698   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4132699   +
4132700   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4132701   +
4132702   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4132703   +
4132704   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4132705   +
4132706   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4132707   +
4132708   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4132709   +
4132710   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4132711   +
4132712   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4132713   +
4132714   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
4132715   +
4132716   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
4132717   +
4132718   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
4132719   +
4132720   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
4132721   +
4132722   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
4132723   +
4132724   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
4132725   +
4132726   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
4132727   +
4132728   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4132729   +
4132730   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4132731   +
4132732   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4132733   +
4132734   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4132735   +
4132736   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
4132737   +
4132738   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4132739   +
4132740   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
4132741   +
4132742   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4132743   +
4132744   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4132745   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4132746   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4132747   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4132748   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4132749   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4132750   +end;
MPRINT(EM_DIAGRAM):   end;
4132751   +else do;
MPRINT(EM_DIAGRAM):   else do;
4132752   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4132753   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4132754   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4132755   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4132756   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4132757   +   end;
MPRINT(EM_DIAGRAM):   end;
4132758   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4132759   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4132760   +   end;
MPRINT(EM_DIAGRAM):   end;
4132761   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4132762   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4132763   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4132764   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4132765   +   end;
MPRINT(EM_DIAGRAM):   end;
4132766   +end;
MPRINT(EM_DIAGRAM):   end;
4132767   +
4132768   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4132769   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4132770   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4132771   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4132772   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4132773   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4132774   +end;
MPRINT(EM_DIAGRAM):   end;
4132775   +else do;
MPRINT(EM_DIAGRAM):   else do;
4132776   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4132777   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4132778   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4132779   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4132780   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4132781   +   end;
MPRINT(EM_DIAGRAM):   end;
4132782   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4132783   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4132784   +   end;
MPRINT(EM_DIAGRAM):   end;
4132785   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4132786   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4132787   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4132788   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4132789   +   end;
MPRINT(EM_DIAGRAM):   end;
4132790   +end;
MPRINT(EM_DIAGRAM):   end;
4132791   +
4132792   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4132793   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4132794   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4132795   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4132796   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4132797   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4132798   +end;
MPRINT(EM_DIAGRAM):   end;
4132799   +else do;
MPRINT(EM_DIAGRAM):   else do;
4132800   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4132801   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4132802   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4132803   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4132804   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4132805   +   end;
MPRINT(EM_DIAGRAM):   end;
4132806   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4132807   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4132808   +   end;
MPRINT(EM_DIAGRAM):   end;
4132809   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4132810   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4132811   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4132812   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4132813   +   end;
MPRINT(EM_DIAGRAM):   end;
4132814   +end;
MPRINT(EM_DIAGRAM):   end;
4132815   +
4132816   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4132817   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4132818   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4132819   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4132820   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4132821   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4132822   +end;
MPRINT(EM_DIAGRAM):   end;
4132823   +else do;
MPRINT(EM_DIAGRAM):   else do;
4132824   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4132825   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4132826   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4132827   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4132828   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4132829   +   end;
MPRINT(EM_DIAGRAM):   end;
4132830   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4132831   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4132832   +   end;
MPRINT(EM_DIAGRAM):   end;
4132833   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4132834   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4132835   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4132836   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4132837   +   end;
MPRINT(EM_DIAGRAM):   end;
4132838   +end;
MPRINT(EM_DIAGRAM):   end;
4132839   +
4132840   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4132841   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4132842   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4132843   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4132844   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4132845   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4132846   +end;
MPRINT(EM_DIAGRAM):   end;
4132847   +else do;
MPRINT(EM_DIAGRAM):   else do;
4132848   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4132849   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4132850   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4132851   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4132852   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4132853   +   end;
MPRINT(EM_DIAGRAM):   end;
4132854   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4132855   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4132856   +   end;
MPRINT(EM_DIAGRAM):   end;
4132857   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4132858   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4132859   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4132860   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4132861   +   end;
MPRINT(EM_DIAGRAM):   end;
4132862   +end;
MPRINT(EM_DIAGRAM):   end;
4132863   +
4132864   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4132865   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4132866   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4132867   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4132868   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4132869   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4132870   +end;
MPRINT(EM_DIAGRAM):   end;
4132871   +else do;
MPRINT(EM_DIAGRAM):   else do;
4132872   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4132873   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4132874   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4132875   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4132876   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4132877   +   end;
MPRINT(EM_DIAGRAM):   end;
4132878   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4132879   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4132880   +   end;
MPRINT(EM_DIAGRAM):   end;
4132881   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4132882   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4132883   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4132884   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4132885   +   end;
MPRINT(EM_DIAGRAM):   end;
4132886   +end;
MPRINT(EM_DIAGRAM):   end;
4132887   +
4132888   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4132889   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4132890   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4132891   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4132892   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4132893   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4132894   +end;
MPRINT(EM_DIAGRAM):   end;
4132895   +else do;
MPRINT(EM_DIAGRAM):   else do;
4132896   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4132897   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4132898   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4132899   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4132900   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4132901   +   end;
MPRINT(EM_DIAGRAM):   end;
4132902   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4132903   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4132904   +   end;
MPRINT(EM_DIAGRAM):   end;
4132905   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4132906   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4132907   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4132908   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4132909   +   end;
MPRINT(EM_DIAGRAM):   end;
4132910   +end;
MPRINT(EM_DIAGRAM):   end;
4132911   +
4132912   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4132913   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
4132914   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4132915   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4132916   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4132917   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4132918   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4132919   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4132920   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4132921   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4132922   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4132923   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4132924   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4132925   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4132926   +end;
MPRINT(EM_DIAGRAM):   end;
4132927   +else do;
MPRINT(EM_DIAGRAM):   else do;
4132928   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4132929   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4132930   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4132931   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4132932   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4132933   +   end;
MPRINT(EM_DIAGRAM):   end;
4132934   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4132935   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4132936   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4132937   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4132938   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4132939   +   end;
MPRINT(EM_DIAGRAM):   end;
4132940   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4132941   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4132942   +   end;
MPRINT(EM_DIAGRAM):   end;
4132943   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4132944   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4132945   +   end;
MPRINT(EM_DIAGRAM):   end;
4132946   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4132947   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4132948   +   end;
MPRINT(EM_DIAGRAM):   end;
4132949   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4132950   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4132951   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4132952   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4132953   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4132954   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4132955   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4132956   +   end;
MPRINT(EM_DIAGRAM):   end;
4132957   +end;
MPRINT(EM_DIAGRAM):   end;
4132958   +
4132959   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4132960   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4132961   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
4132962   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4132963   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4132964   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4132965   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4132966   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4132967   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4132968   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4132969   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4132970   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4132971   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4132972   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4132973   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4132974   +end;
MPRINT(EM_DIAGRAM):   end;
4132975   +else do;
MPRINT(EM_DIAGRAM):   else do;
4132976   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4132977   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4132978   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4132979   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4132980   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4132981   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4132982   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4132983   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4132984   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4132985   +         end;
MPRINT(EM_DIAGRAM):   end;
4132986   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4132987   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4132988   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4132989   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4132990   +            end;
MPRINT(EM_DIAGRAM):   end;
4132991   +         end;
MPRINT(EM_DIAGRAM):   end;
4132992   +      end;
MPRINT(EM_DIAGRAM):   end;
4132993   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4132994   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4132995   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4132996   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4132997   +         end;
MPRINT(EM_DIAGRAM):   end;
4132998   +      end;
MPRINT(EM_DIAGRAM):   end;
4132999   +   end;
MPRINT(EM_DIAGRAM):   end;
4133000   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4133001   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4133002   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4133003   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4133004   +      end;
MPRINT(EM_DIAGRAM):   end;
4133005   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4133006   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4133007   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4133008   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4133009   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4133010   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4133011   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4133012   +         end;
MPRINT(EM_DIAGRAM):   end;
4133013   +      end;
MPRINT(EM_DIAGRAM):   end;
4133014   +   end;
MPRINT(EM_DIAGRAM):   end;
4133015   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4133016   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4133017   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4133018   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4133019   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4133020   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4133021   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4133022   +   end;
MPRINT(EM_DIAGRAM):   end;
4133023   +end;
MPRINT(EM_DIAGRAM):   end;
4133024   +
4133025   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4133026   +*** Checking missing input Interval
4133027   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4133028   +
4133029   +IF NMISS(
4133030   +   AcceptedCmpTotal ,
4133031   +   Age ,
4133032   +   Frq ,
4133033   +   Income ,
4133034   +   Kidhome ,
4133035   +   Mnt ,
4133036   +   MntFishProducts ,
4133037   +   MntFruits ,
4133038   +   MntGoldProds ,
4133039   +   MntMeatProducts ,
4133040   +   MntSweetProducts ,
4133041   +   MntWines ,
4133042   +   MonthsAsCustomer ,
4133043   +   NumCatalogPurchases ,
4133044   +   NumDealsPurchases ,
4133045   +   NumDistPurchases ,
4133046   +   NumStorePurchases ,
4133047   +   NumWebPurchases ,
4133048   +   NumWebVisitsMonth ,
4133049   +   RFMstat ,
4133050   +   RMntFrq ,
4133051   +   Recency ,
4133052   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
4133053   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4133054   +
4133055   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4133056   +END;
MPRINT(EM_DIAGRAM):   END;
4133057   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4133058   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4133059   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4133060   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4133061   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4133062   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
4133063   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4133064   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4133065   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4133066   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4133067   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4133068   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4133069   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
4133070   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4133071   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4133072   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4133073   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4133074   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
4133075   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4133076   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
4133077   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4133078   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4133079   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
4133080   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4133081   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
4133082   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4133083   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
4133084   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4133085   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
4133086   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4133087   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
4133088   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4133089   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
4133090   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4133091   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
4133092   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4133093   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4133094   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4133095   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4133096   +END;
MPRINT(EM_DIAGRAM):   END;
4133097   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4133098   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4133099   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4133100   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
4133101   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4133102   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4133103   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4133104   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4133105   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4133106   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4133107   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4133108   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4133109   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4133110   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4133111   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4133112   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4133113   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
4133114   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4133115   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4133116   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4133117   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4133118   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4133119   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
4133120   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4133121   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4133122   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
4133123   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4133124   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4133125   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
4133126   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4133127   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4133128   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4133129   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4133130   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
4133131   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4133132   +   ELSE S_NumCatalogPurchases
4133133   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4133134   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
4133135   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4133136   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4133137   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
4133138   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4133139   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4133140   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
4133141   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4133142   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4133143   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
4133144   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4133145   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4133146   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
4133147   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4133148   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4133149   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
4133150   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4133151   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4133152   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4133153   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4133154   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4133155   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4133156   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4133157   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4133158   +END;
MPRINT(EM_DIAGRAM):   END;
4133159   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4133160   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4133161   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4133162   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4133163   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4133164   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4133165   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4133166   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4133167   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4133168   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4133169   +   H1x1_1  =    -1.49223555176068 * S_AcceptedCmpTotal
4133170   +          +    -0.32281831453238 * S_Age  +     0.28120825505194 * S_Frq
4133171   +          +    -0.39842787806973 * S_Income  +     0.36430856665979 *
4133172   +        S_Kidhome  +    -0.25637228568962 * S_Mnt  +     0.24110438184349 *
4133173   +        S_MntFishProducts  +     0.13701085804118 * S_MntFruits
4133174   +          +     0.11223882829002 * S_MntGoldProds  +     -1.6663458930199 *
4133175   +        S_MntMeatProducts  +      0.0702185455839 * S_MntSweetProducts
4133176   +          +    -0.01371828795287 * S_MntWines  +    -0.15983998015164 *
4133177   +        S_MonthsAsCustomer  +    -0.71296831037224 * S_NumCatalogPurchases
4133178   +          +     0.76573417773216 * S_NumDealsPurchases
4133179   +          +     0.22648400529885 * S_NumDistPurchases
4133180   +          +     1.21720286527592 * S_NumStorePurchases
4133181   +          +     0.60948566229097 * S_NumWebPurchases
4133182   +          +    -2.18126452011089 * S_NumWebVisitsMonth
4133183   +          +     0.32447158734618 * S_RFMstat  +     2.09718739448286 *
4133184   +        S_RMntFrq  +     2.00816730203973 * S_Recency
4133185   +          +     0.71721312404607 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.49223555176068 * S_AcceptedCmpTotal + -0.32281831453238 * 
S_Age + 0.28120825505194 * S_Frq + -0.39842787806973 * S_Income + 0.36430856665979 * S_Kidhome 
+ -0.25637228568962 * S_Mnt + 0.24110438184349 * S_MntFishProducts + 0.13701085804118 * 
S_MntFruits + 0.11223882829002 * S_MntGoldProds + -1.6663458930199 * S_MntMeatProducts + 
0.0702185455839 * S_MntSweetProducts + -0.01371828795287 * S_MntWines + -0.15983998015164 * 
S_MonthsAsCustomer + -0.71296831037224 * S_NumCatalogPurchases + 0.76573417773216 * 
S_NumDealsPurchases + 0.22648400529885 * S_NumDistPurchases + 1.21720286527592 * 
S_NumStorePurchases + 0.60948566229097 * S_NumWebPurchases + -2.18126452011089 * 
S_NumWebVisitsMonth + 0.32447158734618 * S_RFMstat + 2.09718739448286 * S_RMntFrq + 
2.00816730203973 * S_Recency + 0.71721312404607 * S_Teenhome ;
4133186   +   H1x1_2  =    -3.95102659899455 * S_AcceptedCmpTotal
4133187   +          +    -0.08322758955502 * S_Age  +     0.48219484564503 * S_Frq
4133188   +          +    -0.47312016087921 * S_Income  +    -0.28936610485406 *
4133189   +        S_Kidhome  +    -1.88029814405677 * S_Mnt  +     1.82010433926021 *
4133190   +        S_MntFishProducts  +     0.24350362722041 * S_MntFruits
4133191   +          +     -0.0982980353358 * S_MntGoldProds  +     -8.1095841881459 *
4133192   +        S_MntMeatProducts  +    -0.08364558784797 * S_MntSweetProducts
4133193   +          +     2.19205303691707 * S_MntWines  +    -0.00045011863954 *
4133194   +        S_MonthsAsCustomer  +    -1.63167878295586 * S_NumCatalogPurchases
4133195   +          +    -1.52828428070828 * S_NumDealsPurchases
4133196   +          +    -0.01775178145113 * S_NumDistPurchases
4133197   +          +     1.11531198663491 * S_NumStorePurchases
4133198   +          +     1.79501098452904 * S_NumWebPurchases
4133199   +          +     -0.7392686013605 * S_NumWebVisitsMonth
4133200   +          +    -1.44559350209967 * S_RFMstat  +     1.21221378487873 *
4133201   +        S_RMntFrq  +     0.68917175969495 * S_Recency
4133202   +          +      0.3873784466888 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -3.95102659899455 * S_AcceptedCmpTotal + -0.08322758955502 * 
S_Age + 0.48219484564503 * S_Frq + -0.47312016087921 * S_Income + -0.28936610485406 * 
S_Kidhome + -1.88029814405677 * S_Mnt + 1.82010433926021 * S_MntFishProducts + 
0.24350362722041 * S_MntFruits + -0.0982980353358 * S_MntGoldProds + -8.1095841881459 * 
S_MntMeatProducts + -0.08364558784797 * S_MntSweetProducts + 2.19205303691707 * S_MntWines + 
-0.00045011863954 * S_MonthsAsCustomer + -1.63167878295586 * S_NumCatalogPurchases + 
-1.52828428070828 * S_NumDealsPurchases + -0.01775178145113 * S_NumDistPurchases + 
1.11531198663491 * S_NumStorePurchases + 1.79501098452904 * S_NumWebPurchases + 
-0.7392686013605 * S_NumWebVisitsMonth + -1.44559350209967 * S_RFMstat + 1.21221378487873 * 
S_RMntFrq + 0.68917175969495 * S_Recency + 0.3873784466888 * S_Teenhome ;
4133203   +   H1x1_1  = H1x1_1  +    -0.51533233697482 * AcceptedCmp10
4133204   +          +    -0.34752733433815 * AcceptedCmp20  +     0.22125035216356 *
4133205   +        AcceptedCmp30  +     0.05379844837275 * AcceptedCmp40
4133206   +          +    -0.20445562216782 * AcceptedCmp50  +    -0.30276475879877 *
4133207   +        Complain0  +     0.06619165480602 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.51533233697482 * AcceptedCmp10 + -0.34752733433815 
* AcceptedCmp20 + 0.22125035216356 * AcceptedCmp30 + 0.05379844837275 * AcceptedCmp40 + 
-0.20445562216782 * AcceptedCmp50 + -0.30276475879877 * Complain0 + 0.06619165480602 * 
HigherEducationBinary0 ;
4133208   +   H1x1_2  = H1x1_2  +     4.56470093348771 * AcceptedCmp10
4133209   +          +    -2.57910461209778 * AcceptedCmp20  +     -2.5693819769014 *
4133210   +        AcceptedCmp30  +    -1.94278577333227 * AcceptedCmp40
4133211   +          +     2.05860438228037 * AcceptedCmp50  +     0.25089930568051 *
4133212   +        Complain0  +      0.2603214054608 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 4.56470093348771 * AcceptedCmp10 + -2.57910461209778 * 
AcceptedCmp20 + -2.5693819769014 * AcceptedCmp30 + -1.94278577333227 * AcceptedCmp40 + 
2.05860438228037 * AcceptedCmp50 + 0.25089930568051 * Complain0 + 0.2603214054608 * 
HigherEducationBinary0 ;
4133213   +   H1x1_1  = H1x1_1  +    -0.49828378489244 * Education2n_Cycle
4133214   +          +     0.39089624737534 * EducationBasic  +    -0.48226710339977 *
4133215   +        EducationGraduation  +    -0.06304916771632 * EducationMaster
4133216   +          +    -1.56926331102732 * Marital_StatusDivorced
4133217   +          +     2.38562782588323 * Marital_StatusMarried
4133218   +          +    -1.91012008029228 * Marital_StatusSingle
4133219   +          +     2.35299228753934 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.49828378489244 * Education2n_Cycle + 
0.39089624737534 * EducationBasic + -0.48226710339977 * EducationGraduation + 
-0.06304916771632 * EducationMaster + -1.56926331102732 * Marital_StatusDivorced + 
2.38562782588323 * Marital_StatusMarried + -1.91012008029228 * Marital_StatusSingle + 
2.35299228753934 * Marital_StatusTogether ;
4133220   +   H1x1_2  = H1x1_2  +    -0.32482988110182 * Education2n_Cycle
4133221   +          +    -0.31705264382373 * EducationBasic  +    -0.14073222836204 *
4133222   +        EducationGraduation  +    -0.14552128560395 * EducationMaster
4133223   +          +     0.39329538853368 * Marital_StatusDivorced
4133224   +          +       0.055543492668 * Marital_StatusMarried
4133225   +          +    -0.36260663573441 * Marital_StatusSingle
4133226   +          +     0.16563783024817 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.32482988110182 * Education2n_Cycle + 
-0.31705264382373 * EducationBasic + -0.14073222836204 * EducationGraduation + 
-0.14552128560395 * EducationMaster + 0.39329538853368 * Marital_StatusDivorced + 
0.055543492668 * Marital_StatusMarried + -0.36260663573441 * Marital_StatusSingle + 
0.16563783024817 * Marital_StatusTogether ;
4133227   +   H1x1_1  =     0.82901515254061 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.82901515254061 + H1x1_1 ;
4133228   +   H1x1_2  =     -1.6113683532078 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.6113683532078 + H1x1_2 ;
4133229   +   H1x1_3  = 0;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0;
4133230   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
4133231   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4133232   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
4133233   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
4133234   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
4133235   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
4133236   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
4133237   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
4133238   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
4133239   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
4133240   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
4133241   +END;
MPRINT(EM_DIAGRAM):   END;
4133242   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4133243   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4133244   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4133245   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
4133246   +END;
MPRINT(EM_DIAGRAM):   END;
4133247   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4133248   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
4133249   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4133250   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4133251   +   H1x2_1  =     -1.1749963769098 * S_AcceptedCmpTotal
4133252   +          +      0.0835452152484 * S_Age  +     0.29627839234992 * S_Frq
4133253   +          +    -0.11493797334082 * S_Income  +    -1.11510356366657 *
4133254   +        S_Kidhome  +     0.18185063757674 * S_Mnt  +    -0.17631127507692 *
4133255   +        S_MntFishProducts  +     1.24365107847098 * S_MntFruits
4133256   +          +     0.16504711681039 * S_MntGoldProds  +     0.99592906524599 *
4133257   +        S_MntMeatProducts  +     0.07387543627707 * S_MntSweetProducts
4133258   +          +    -0.00693664828192 * S_MntWines  +    -0.14413765189074 *
4133259   +        S_MonthsAsCustomer  +    -0.36632511301344 * S_NumCatalogPurchases
4133260   +          +    -0.41717905931734 * S_NumDealsPurchases
4133261   +          +    -0.48750443671176 * S_NumDistPurchases
4133262   +          +      1.9775770151507 * S_NumStorePurchases
4133263   +          +    -0.43534422425416 * S_NumWebPurchases
4133264   +          +    -1.48049451059329 * S_NumWebVisitsMonth
4133265   +          +     1.55056718888347 * S_RFMstat  +    -1.96774244937803 *
4133266   +        S_RMntFrq  +     -1.0977291490167 * S_Recency
4133267   +          +    -1.73756201871547 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.1749963769098 * S_AcceptedCmpTotal + 0.0835452152484 * S_Age 
+ 0.29627839234992 * S_Frq + -0.11493797334082 * S_Income + -1.11510356366657 * S_Kidhome + 
0.18185063757674 * S_Mnt + -0.17631127507692 * S_MntFishProducts + 1.24365107847098 * 
S_MntFruits + 0.16504711681039 * S_MntGoldProds + 0.99592906524599 * S_MntMeatProducts + 
0.07387543627707 * S_MntSweetProducts + -0.00693664828192 * S_MntWines + -0.14413765189074 * 
S_MonthsAsCustomer + -0.36632511301344 * S_NumCatalogPurchases + -0.41717905931734 * 
S_NumDealsPurchases + -0.48750443671176 * S_NumDistPurchases + 1.9775770151507 * 
S_NumStorePurchases + -0.43534422425416 * S_NumWebPurchases + -1.48049451059329 * 
S_NumWebVisitsMonth + 1.55056718888347 * S_RFMstat + -1.96774244937803 * S_RMntFrq + 
-1.0977291490167 * S_Recency + -1.73756201871547 * S_Teenhome ;
4133268   +   H1x2_2  =     0.87479703138918 * S_AcceptedCmpTotal
4133269   +          +    -0.61917505429247 * S_Age  +     0.18385580137989 * S_Frq
4133270   +          +     0.30709491132909 * S_Income  +      1.6244568354812 *
4133271   +        S_Kidhome  +     0.77673205123801 * S_Mnt  +    -0.00950889578201 *
4133272   +        S_MntFishProducts  +    -0.47007254592819 * S_MntFruits
4133273   +          +      0.6454406759241 * S_MntGoldProds  +     0.78795218230384 *
4133274   +        S_MntMeatProducts  +    -1.18230648640376 * S_MntSweetProducts
4133275   +          +     1.41552316954503 * S_MntWines  +    -0.46565264346633 *
4133276   +        S_MonthsAsCustomer  +     0.48368171409283 * S_NumCatalogPurchases
4133277   +          +     0.76267091632012 * S_NumDealsPurchases
4133278   +          +     1.55118513069849 * S_NumDistPurchases
4133279   +          +       1.649962776028 * S_NumStorePurchases
4133280   +          +    -0.27453335733875 * S_NumWebPurchases
4133281   +          +     0.26599210649756 * S_NumWebVisitsMonth
4133282   +          +     0.00143802909271 * S_RFMstat  +    -0.62161550917558 *
4133283   +        S_RMntFrq  +    -0.60215803586133 * S_Recency
4133284   +          +     0.22509643762583 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.87479703138918 * S_AcceptedCmpTotal + -0.61917505429247 * 
S_Age + 0.18385580137989 * S_Frq + 0.30709491132909 * S_Income + 1.6244568354812 * S_Kidhome + 
0.77673205123801 * S_Mnt + -0.00950889578201 * S_MntFishProducts + -0.47007254592819 * 
S_MntFruits + 0.6454406759241 * S_MntGoldProds + 0.78795218230384 * S_MntMeatProducts + 
-1.18230648640376 * S_MntSweetProducts + 1.41552316954503 * S_MntWines + -0.46565264346633 * 
S_MonthsAsCustomer + 0.48368171409283 * S_NumCatalogPurchases + 0.76267091632012 * 
S_NumDealsPurchases + 1.55118513069849 * S_NumDistPurchases + 1.649962776028 * 
S_NumStorePurchases + -0.27453335733875 * S_NumWebPurchases + 0.26599210649756 * 
S_NumWebVisitsMonth + 0.00143802909271 * S_RFMstat + -0.62161550917558 * S_RMntFrq + 
-0.60215803586133 * S_Recency + 0.22509643762583 * S_Teenhome ;
4133285   +   H1x2_1  = H1x2_1  +    -0.22417594551449 * AcceptedCmp10
4133286   +          +    -0.55200708632393 * AcceptedCmp20  +     1.04226929662396 *
4133287   +        AcceptedCmp30  +    -0.43983724759528 * AcceptedCmp40
4133288   +          +    -0.97319667842772 * AcceptedCmp50  +     2.14592283316473 *
4133289   +        Complain0  +     0.00148996042832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.22417594551449 * AcceptedCmp10 + -0.55200708632393 
* AcceptedCmp20 + 1.04226929662396 * AcceptedCmp30 + -0.43983724759528 * AcceptedCmp40 + 
-0.97319667842772 * AcceptedCmp50 + 2.14592283316473 * Complain0 + 0.00148996042832 * 
HigherEducationBinary0 ;
4133290   +   H1x2_2  = H1x2_2  +     1.02054806337451 * AcceptedCmp10
4133291   +          +      2.0527957252179 * AcceptedCmp20  +     0.15243342547701 *
4133292   +        AcceptedCmp30  +    -2.55108921567655 * AcceptedCmp40
4133293   +          +    -0.66084381908537 * AcceptedCmp50  +    -0.15574677370344 *
4133294   +        Complain0  +    -0.89833811964409 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.02054806337451 * AcceptedCmp10 + 2.0527957252179 * 
AcceptedCmp20 + 0.15243342547701 * AcceptedCmp30 + -2.55108921567655 * AcceptedCmp40 + 
-0.66084381908537 * AcceptedCmp50 + -0.15574677370344 * Complain0 + -0.89833811964409 * 
HigherEducationBinary0 ;
4133295   +   H1x2_1  = H1x2_1  +     0.47883438771897 * Education2n_Cycle
4133296   +          +     1.28689916550347 * EducationBasic  +    -1.05405263417007 *
4133297   +        EducationGraduation  +     0.24617525366101 * EducationMaster
4133298   +          +    -1.84502099308633 * Marital_StatusDivorced
4133299   +          +     0.16524535969204 * Marital_StatusMarried
4133300   +          +     0.01375012857393 * Marital_StatusSingle
4133301   +          +     0.33752759564982 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.47883438771897 * Education2n_Cycle + 
1.28689916550347 * EducationBasic + -1.05405263417007 * EducationGraduation + 0.24617525366101 
* EducationMaster + -1.84502099308633 * Marital_StatusDivorced + 0.16524535969204 * 
Marital_StatusMarried + 0.01375012857393 * Marital_StatusSingle + 0.33752759564982 * 
Marital_StatusTogether ;
4133302   +   H1x2_2  = H1x2_2  +     -0.4088130246632 * Education2n_Cycle
4133303   +          +    -0.51383473075458 * EducationBasic  +     0.81399641406825 *
4133304   +        EducationGraduation  +      0.6427794380992 * EducationMaster
4133305   +          +     0.18210930140238 * Marital_StatusDivorced
4133306   +          +    -1.49615662968181 * Marital_StatusMarried
4133307   +          +     1.61043484549536 * Marital_StatusSingle
4133308   +          +    -1.22593755313209 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.4088130246632 * Education2n_Cycle + 
-0.51383473075458 * EducationBasic + 0.81399641406825 * EducationGraduation + 0.6427794380992 
* EducationMaster + 0.18210930140238 * Marital_StatusDivorced + -1.49615662968181 * 
Marital_StatusMarried + 1.61043484549536 * Marital_StatusSingle + -1.22593755313209 * 
Marital_StatusTogether ;
4133309   +   H1x2_1  =    -1.87516498734281 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.87516498734281 + H1x2_1 ;
4133310   +   H1x2_2  =     -1.2865444436051 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.2865444436051 + H1x2_2 ;
4133311   +   H1x2_3  = 0;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0;
4133312   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 );
4133313   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4133314   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
4133315   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
4133316   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
4133317   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
4133318   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
4133319   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
4133320   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
4133321   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
4133322   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
4133323   +END;
MPRINT(EM_DIAGRAM):   END;
4133324   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4133325   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
4133326   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
4133327   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
4133328   +END;
MPRINT(EM_DIAGRAM):   END;
4133329   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4133330   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
4133331   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4133332   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4133333   +   H2x1_1  =     1.23576217175305 * H1x1_1  +     4.19315123860009 * H1x1_2
4133334   +          +    -3.85498900364115 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.23576217175305 * H1x1_1 + 4.19315123860009 * H1x1_2 + 
-3.85498900364115 * H1x1_3 ;
4133335   +   H2x1_2  =        0.24209158888 * H1x1_1  +     0.59735252655183 * H1x1_2
4133336   +          +     1.27545750114528 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0.24209158888 * H1x1_1 + 0.59735252655183 * H1x1_2 + 
1.27545750114528 * H1x1_3 ;
4133337   +   H2x1_3  =     1.36411346566831 * H1x1_1  +     4.19709046572946 * H1x1_2
4133338   +          +    -4.50940237896172 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.36411346566831 * H1x1_1 + 4.19709046572946 * H1x1_2 + 
-4.50940237896172 * H1x1_3 ;
4133339   +   H2x1_1  = H2x1_1  +     0.65417285199474 * H1x2_1
4133340   +          +      2.5072311354855 * H1x2_2  +     -2.0438449895367 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.65417285199474 * H1x2_1 + 2.5072311354855 * H1x2_2 + 
-2.0438449895367 * H1x2_3 ;
4133341   +   H2x1_2  = H2x1_2  +      0.4352357645315 * H1x2_1
4133342   +          +     -0.9643467516424 * H1x2_2  +     0.46452403975724 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.4352357645315 * H1x2_1 + -0.9643467516424 * H1x2_2 + 
0.46452403975724 * H1x2_3 ;
4133343   +   H2x1_3  = H2x1_3  +     0.13671643242806 * H1x2_1
4133344   +          +     1.59797252596846 * H1x2_2  +    -2.67821815632058 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.13671643242806 * H1x2_1 + 1.59797252596846 * H1x2_2 
+ -2.67821815632058 * H1x2_3 ;
4133345   +   H2x1_1  =     0.15805888658617 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.15805888658617 + H2x1_1 ;
4133346   +   H2x1_2  =     1.42566993600015 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.42566993600015 + H2x1_2 ;
4133347   +   H2x1_3  =     1.00076706282181 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.00076706282181 + H2x1_3 ;
4133348   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4133349   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4133350   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
4133351   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
4133352   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
4133353   +END;
MPRINT(EM_DIAGRAM):   END;
4133354   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4133355   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
4133356   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
4133357   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
4133358   +END;
MPRINT(EM_DIAGRAM):   END;
4133359   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4133360   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4133361   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4133362   +
4133363   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
4133364   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
4133365   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4133366   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
4133367   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
4133368   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4133369   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
4133370   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4133371   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4133372   +end;
MPRINT(EM_DIAGRAM):   end;
4133373   +else do;
MPRINT(EM_DIAGRAM):   else do;
4133374   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
4133375   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
4133376   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
4133377   +   end;
MPRINT(EM_DIAGRAM):   end;
4133378   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
4133379   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
4133380   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
4133381   +   end;
MPRINT(EM_DIAGRAM):   end;
4133382   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4133383   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4133384   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4133385   +   end;
MPRINT(EM_DIAGRAM):   end;
4133386   +end;
MPRINT(EM_DIAGRAM):   end;
4133387   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4133388   +   P_DepVar1  =    -6.91101516234847 * H2x1_1  +     1.76281132920385 * H2x1_2
4133389   +          +     -7.2624751055034 * H2x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.91101516234847 * H2x1_1 + 1.76281132920385 * H2x1_2 + 
-7.2624751055034 * H2x1_3 ;
4133390   +   P_DepVar1  =     -0.0724356806648 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.0724356806648 + P_DepVar1 ;
4133391   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4133392   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4133393   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4133394   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4133395   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4133396   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4133397   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4133398   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4133399   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4133400   +END;
MPRINT(EM_DIAGRAM):   END;
4133401   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4133402   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4133403   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4133404   +END;
MPRINT(EM_DIAGRAM):   END;
4133405   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4133406   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4133407   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4133408   +END;
MPRINT(EM_DIAGRAM):   END;
4133409   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
4133410   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
4133411   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
4133412   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
4133413   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
4133414   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
4133415   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
4133416   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4133417   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4133418   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4133419   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4133420   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4133421   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4133422   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4133423   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4133424   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4133425   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4133426   +END;
MPRINT(EM_DIAGRAM):   END;
4133427   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4133428   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4133429   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4133430   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
4133431   +* Renaming variables for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural8;
4133432   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4133433   +* Renaming Posterior variables for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural8;
4133434   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4133435   +drop AutoNeural8_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_P_DepVar1;
4133436   +AutoNeural8_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural8_P_DepVar1 = P_DepVar1;
4133437   +drop AutoNeural8_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_P_DepVar0;
4133438   +AutoNeural8_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural8_P_DepVar0 = P_DepVar0;
4133439   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4133440   +* Renaming Into variables for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural8;
4133441   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4133442   +length AutoNeural8_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural8_I_DepVar $32;
4133443   +drop AutoNeural8_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_I_DepVar;
4133444   +AutoNeural8_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural8_I_DepVar = I_DepVar;
4133445   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4133446   +* Renaming _WARN_ variable for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural8;
4133447   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4133448   +length AutoNeural8_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural8_WARN_ $4;
4133449   +drop AutoNeural8_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_WARN_;
4133450   +AutoNeural8_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural8_WARN_ = _WARN_;
4133451   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4133452   +* Ensmbl38: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Scoring Code of model 4 of 7;
4133453   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4133454   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4133455   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
4133456   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
4133457   +* NODE: AutoNeural10;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural10;
4133458   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4133459   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4133460   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4133461   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4133462   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4133463   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4133464   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4133465   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4133466   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4133467   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4133468   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4133469   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4133470   +LENGTH _WARN_ $4
4133471   +      F_DepVar  $ 12
4133472   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
4133473   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4133474   +
4133475   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4133476   +
4133477   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4133478   +
4133479   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4133480   +
4133481   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4133482   +
4133483   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4133484   +
4133485   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4133486   +
4133487   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4133488   +
4133489   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4133490   +
4133491   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4133492   +
4133493   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4133494   +
4133495   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4133496   +
4133497   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4133498   +
4133499   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4133500   +
4133501   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4133502   +
4133503   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4133504   +
4133505   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4133506   +
4133507   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4133508   +
4133509   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4133510   +
4133511   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4133512   +
4133513   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4133514   +
4133515   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4133516   +
4133517   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4133518   +
4133519   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4133520   +
4133521   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4133522   +
4133523   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4133524   +
4133525   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4133526   +
4133527   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4133528   +
4133529   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4133530   +
4133531   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4133532   +
4133533   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4133534   +
4133535   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4133536   +
4133537   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4133538   +
4133539   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4133540   +
4133541   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4133542   +
4133543   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4133544   +
4133545   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4133546   +
4133547   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4133548   +
4133549   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4133550   +
4133551   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4133552   +
4133553   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
4133554   +
4133555   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
4133556   +
4133557   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
4133558   +
4133559   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
4133560   +
4133561   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
4133562   +
4133563   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
4133564   +
4133565   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
4133566   +
4133567   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
4133568   +
4133569   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
4133570   +
4133571   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
4133572   +
4133573   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
4133574   +
4133575   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
4133576   +
4133577   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
4133578   +
4133579   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
4133580   +
4133581   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
4133582   +
4133583   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
4133584   +
4133585   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
4133586   +
4133587   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
4133588   +
4133589   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
4133590   +
4133591   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
4133592   +
4133593   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
4133594   +
4133595   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
4133596   +
4133597   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
4133598   +
4133599   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
4133600   +
4133601   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
4133602   +
4133603   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
4133604   +
4133605   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
4133606   +
4133607   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
4133608   +
4133609   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4133610   +
4133611   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4133612   +
4133613   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4133614   +
4133615   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4133616   +
4133617   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
4133618   +
4133619   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4133620   +
4133621   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
4133622   +
4133623   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4133624   +
4133625   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4133626   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4133627   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4133628   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4133629   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4133630   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4133631   +end;
MPRINT(EM_DIAGRAM):   end;
4133632   +else do;
MPRINT(EM_DIAGRAM):   else do;
4133633   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4133634   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4133635   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4133636   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4133637   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4133638   +   end;
MPRINT(EM_DIAGRAM):   end;
4133639   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4133640   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4133641   +   end;
MPRINT(EM_DIAGRAM):   end;
4133642   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4133643   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4133644   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4133645   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4133646   +   end;
MPRINT(EM_DIAGRAM):   end;
4133647   +end;
MPRINT(EM_DIAGRAM):   end;
4133648   +
4133649   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4133650   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4133651   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4133652   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4133653   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4133654   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4133655   +end;
MPRINT(EM_DIAGRAM):   end;
4133656   +else do;
MPRINT(EM_DIAGRAM):   else do;
4133657   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4133658   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4133659   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4133660   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4133661   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4133662   +   end;
MPRINT(EM_DIAGRAM):   end;
4133663   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4133664   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4133665   +   end;
MPRINT(EM_DIAGRAM):   end;
4133666   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4133667   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4133668   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4133669   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4133670   +   end;
MPRINT(EM_DIAGRAM):   end;
4133671   +end;
MPRINT(EM_DIAGRAM):   end;
4133672   +
4133673   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4133674   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4133675   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4133676   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4133677   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4133678   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4133679   +end;
MPRINT(EM_DIAGRAM):   end;
4133680   +else do;
MPRINT(EM_DIAGRAM):   else do;
4133681   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4133682   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4133683   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4133684   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4133685   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4133686   +   end;
MPRINT(EM_DIAGRAM):   end;
4133687   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4133688   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4133689   +   end;
MPRINT(EM_DIAGRAM):   end;
4133690   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4133691   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4133692   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4133693   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4133694   +   end;
MPRINT(EM_DIAGRAM):   end;
4133695   +end;
MPRINT(EM_DIAGRAM):   end;
4133696   +
4133697   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4133698   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4133699   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4133700   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4133701   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4133702   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4133703   +end;
MPRINT(EM_DIAGRAM):   end;
4133704   +else do;
MPRINT(EM_DIAGRAM):   else do;
4133705   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4133706   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4133707   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4133708   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4133709   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4133710   +   end;
MPRINT(EM_DIAGRAM):   end;
4133711   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4133712   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4133713   +   end;
MPRINT(EM_DIAGRAM):   end;
4133714   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4133715   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4133716   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4133717   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4133718   +   end;
MPRINT(EM_DIAGRAM):   end;
4133719   +end;
MPRINT(EM_DIAGRAM):   end;
4133720   +
4133721   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4133722   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4133723   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4133724   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4133725   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4133726   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4133727   +end;
MPRINT(EM_DIAGRAM):   end;
4133728   +else do;
MPRINT(EM_DIAGRAM):   else do;
4133729   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4133730   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4133731   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4133732   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4133733   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4133734   +   end;
MPRINT(EM_DIAGRAM):   end;
4133735   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4133736   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4133737   +   end;
MPRINT(EM_DIAGRAM):   end;
4133738   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4133739   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4133740   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4133741   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4133742   +   end;
MPRINT(EM_DIAGRAM):   end;
4133743   +end;
MPRINT(EM_DIAGRAM):   end;
4133744   +
4133745   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4133746   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4133747   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4133748   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4133749   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4133750   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4133751   +end;
MPRINT(EM_DIAGRAM):   end;
4133752   +else do;
MPRINT(EM_DIAGRAM):   else do;
4133753   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4133754   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4133755   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4133756   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4133757   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4133758   +   end;
MPRINT(EM_DIAGRAM):   end;
4133759   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4133760   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4133761   +   end;
MPRINT(EM_DIAGRAM):   end;
4133762   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4133763   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4133764   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4133765   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4133766   +   end;
MPRINT(EM_DIAGRAM):   end;
4133767   +end;
MPRINT(EM_DIAGRAM):   end;
4133768   +
4133769   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4133770   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4133771   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4133772   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4133773   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4133774   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4133775   +end;
MPRINT(EM_DIAGRAM):   end;
4133776   +else do;
MPRINT(EM_DIAGRAM):   else do;
4133777   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4133778   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4133779   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4133780   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4133781   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4133782   +   end;
MPRINT(EM_DIAGRAM):   end;
4133783   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4133784   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4133785   +   end;
MPRINT(EM_DIAGRAM):   end;
4133786   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4133787   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4133788   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4133789   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4133790   +   end;
MPRINT(EM_DIAGRAM):   end;
4133791   +end;
MPRINT(EM_DIAGRAM):   end;
4133792   +
4133793   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4133794   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
4133795   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4133796   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4133797   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4133798   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4133799   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4133800   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4133801   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4133802   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4133803   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4133804   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4133805   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4133806   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4133807   +end;
MPRINT(EM_DIAGRAM):   end;
4133808   +else do;
MPRINT(EM_DIAGRAM):   else do;
4133809   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4133810   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4133811   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4133812   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4133813   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4133814   +   end;
MPRINT(EM_DIAGRAM):   end;
4133815   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4133816   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4133817   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4133818   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4133819   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4133820   +   end;
MPRINT(EM_DIAGRAM):   end;
4133821   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4133822   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4133823   +   end;
MPRINT(EM_DIAGRAM):   end;
4133824   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4133825   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4133826   +   end;
MPRINT(EM_DIAGRAM):   end;
4133827   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4133828   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4133829   +   end;
MPRINT(EM_DIAGRAM):   end;
4133830   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4133831   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4133832   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4133833   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4133834   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4133835   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4133836   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4133837   +   end;
MPRINT(EM_DIAGRAM):   end;
4133838   +end;
MPRINT(EM_DIAGRAM):   end;
4133839   +
4133840   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4133841   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4133842   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
4133843   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4133844   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4133845   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4133846   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4133847   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4133848   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4133849   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4133850   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4133851   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4133852   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4133853   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4133854   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4133855   +end;
MPRINT(EM_DIAGRAM):   end;
4133856   +else do;
MPRINT(EM_DIAGRAM):   else do;
4133857   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4133858   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4133859   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4133860   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4133861   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4133862   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4133863   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4133864   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4133865   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4133866   +         end;
MPRINT(EM_DIAGRAM):   end;
4133867   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4133868   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4133869   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4133870   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4133871   +            end;
MPRINT(EM_DIAGRAM):   end;
4133872   +         end;
MPRINT(EM_DIAGRAM):   end;
4133873   +      end;
MPRINT(EM_DIAGRAM):   end;
4133874   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4133875   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4133876   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4133877   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4133878   +         end;
MPRINT(EM_DIAGRAM):   end;
4133879   +      end;
MPRINT(EM_DIAGRAM):   end;
4133880   +   end;
MPRINT(EM_DIAGRAM):   end;
4133881   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4133882   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4133883   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4133884   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4133885   +      end;
MPRINT(EM_DIAGRAM):   end;
4133886   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4133887   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4133888   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4133889   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4133890   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4133891   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4133892   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4133893   +         end;
MPRINT(EM_DIAGRAM):   end;
4133894   +      end;
MPRINT(EM_DIAGRAM):   end;
4133895   +   end;
MPRINT(EM_DIAGRAM):   end;
4133896   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4133897   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4133898   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4133899   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4133900   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4133901   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4133902   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4133903   +   end;
MPRINT(EM_DIAGRAM):   end;
4133904   +end;
MPRINT(EM_DIAGRAM):   end;
4133905   +
4133906   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4133907   +*** Checking missing input Interval
4133908   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4133909   +
4133910   +IF NMISS(
4133911   +   AcceptedCmpTotal ,
4133912   +   Age ,
4133913   +   Frq ,
4133914   +   Income ,
4133915   +   Kidhome ,
4133916   +   Mnt ,
4133917   +   MntFishProducts ,
4133918   +   MntFruits ,
4133919   +   MntGoldProds ,
4133920   +   MntMeatProducts ,
4133921   +   MntSweetProducts ,
4133922   +   MntWines ,
4133923   +   MonthsAsCustomer ,
4133924   +   NumCatalogPurchases ,
4133925   +   NumDealsPurchases ,
4133926   +   NumDistPurchases ,
4133927   +   NumStorePurchases ,
4133928   +   NumWebPurchases ,
4133929   +   NumWebVisitsMonth ,
4133930   +   RFMstat ,
4133931   +   RMntFrq ,
4133932   +   Recency ,
4133933   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
4133934   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4133935   +
4133936   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4133937   +END;
MPRINT(EM_DIAGRAM):   END;
4133938   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4133939   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4133940   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4133941   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4133942   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4133943   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
4133944   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4133945   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4133946   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4133947   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4133948   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4133949   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4133950   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
4133951   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4133952   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4133953   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4133954   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4133955   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
4133956   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4133957   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
4133958   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4133959   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4133960   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
4133961   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4133962   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
4133963   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4133964   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
4133965   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4133966   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
4133967   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4133968   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
4133969   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4133970   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
4133971   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4133972   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
4133973   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4133974   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4133975   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4133976   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4133977   +END;
MPRINT(EM_DIAGRAM):   END;
4133978   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4133979   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4133980   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4133981   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
4133982   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4133983   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4133984   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4133985   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4133986   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4133987   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4133988   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4133989   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4133990   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4133991   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4133992   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4133993   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4133994   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
4133995   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4133996   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4133997   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4133998   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4133999   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4134000   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
4134001   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4134002   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4134003   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
4134004   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4134005   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4134006   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
4134007   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4134008   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4134009   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4134010   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4134011   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
4134012   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4134013   +   ELSE S_NumCatalogPurchases
4134014   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4134015   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
4134016   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4134017   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4134018   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
4134019   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4134020   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4134021   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
4134022   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4134023   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4134024   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
4134025   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4134026   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4134027   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
4134028   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4134029   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4134030   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
4134031   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4134032   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4134033   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4134034   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4134035   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4134036   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4134037   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4134038   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4134039   +END;
MPRINT(EM_DIAGRAM):   END;
4134040   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4134041   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4134042   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4134043   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4134044   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4134045   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4134046   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4134047   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4134048   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4134049   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4134050   +   H1x1_1  =     -1.6780441789215 * S_AcceptedCmpTotal
4134051   +          +     0.45385980917029 * S_Age  +    -0.71899650455913 * S_Frq
4134052   +          +    -1.93679506571805 * S_Income  +     1.56925991391051 *
4134053   +        S_Kidhome  +    -1.47175189232318 * S_Mnt  +    -2.23220260217222 *
4134054   +        S_MntFishProducts  +    -0.27017202076253 * S_MntFruits
4134055   +          +    -0.33562096740259 * S_MntGoldProds  +     3.61472960640287 *
4134056   +        S_MntMeatProducts  +    -2.85576251647297 * S_MntSweetProducts
4134057   +          +     -4.4467685903527 * S_MntWines  +     0.38963757858628 *
4134058   +        S_MonthsAsCustomer  +     1.66666181194027 * S_NumCatalogPurchases
4134059   +          +     3.45371614080196 * S_NumDealsPurchases
4134060   +          +     0.19118374544537 * S_NumDistPurchases
4134061   +          +    -2.45138001446793 * S_NumStorePurchases
4134062   +          +    -0.11424280244155 * S_NumWebPurchases
4134063   +          +    -2.31770357716565 * S_NumWebVisitsMonth
4134064   +          +     2.81643889601936 * S_RFMstat  +    -1.04896006701534 *
4134065   +        S_RMntFrq  +     0.26870809438679 * S_Recency
4134066   +          +    -0.26422448158811 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.6780441789215 * S_AcceptedCmpTotal + 0.45385980917029 * 
S_Age + -0.71899650455913 * S_Frq + -1.93679506571805 * S_Income + 1.56925991391051 * 
S_Kidhome + -1.47175189232318 * S_Mnt + -2.23220260217222 * S_MntFishProducts + 
-0.27017202076253 * S_MntFruits + -0.33562096740259 * S_MntGoldProds + 3.61472960640287 * 
S_MntMeatProducts + -2.85576251647297 * S_MntSweetProducts + -4.4467685903527 * S_MntWines + 
0.38963757858628 * S_MonthsAsCustomer + 1.66666181194027 * S_NumCatalogPurchases + 
3.45371614080196 * S_NumDealsPurchases + 0.19118374544537 * S_NumDistPurchases + 
-2.45138001446793 * S_NumStorePurchases + -0.11424280244155 * S_NumWebPurchases + 
-2.31770357716565 * S_NumWebVisitsMonth + 2.81643889601936 * S_RFMstat + -1.04896006701534 * 
S_RMntFrq + 0.26870809438679 * S_Recency + -0.26422448158811 * S_Teenhome ;
4134067   +   H1x1_2  =    -0.85648293000641 * S_AcceptedCmpTotal
4134068   +          +    -1.65647402725291 * S_Age  +     1.01151947076788 * S_Frq
4134069   +          +    -2.30217634682957 * S_Income  +     3.64198249916211 *
4134070   +        S_Kidhome  +     0.20767518788666 * S_Mnt  +     0.16841756532554 *
4134071   +        S_MntFishProducts  +      -1.068506425921 * S_MntFruits
4134072   +          +     0.58318801939162 * S_MntGoldProds  +    -2.31777049056548 *
4134073   +        S_MntMeatProducts  +     0.23759430399811 * S_MntSweetProducts
4134074   +          +      1.6840332285232 * S_MntWines  +     1.02971381781013 *
4134075   +        S_MonthsAsCustomer  +    -0.67962580165124 * S_NumCatalogPurchases
4134076   +          +    -1.28390925647659 * S_NumDealsPurchases
4134077   +          +     0.82669177239926 * S_NumDistPurchases
4134078   +          +     1.71678585204511 * S_NumStorePurchases
4134079   +          +     1.49226295608046 * S_NumWebPurchases
4134080   +          +     -4.0105103018388 * S_NumWebVisitsMonth
4134081   +          +     0.59909792991084 * S_RFMstat  +     1.07820515361554 *
4134082   +        S_RMntFrq  +     4.74241121363086 * S_Recency
4134083   +          +     3.02084642655958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.85648293000641 * S_AcceptedCmpTotal + -1.65647402725291 * 
S_Age + 1.01151947076788 * S_Frq + -2.30217634682957 * S_Income + 3.64198249916211 * S_Kidhome 
+ 0.20767518788666 * S_Mnt + 0.16841756532554 * S_MntFishProducts + -1.068506425921 * 
S_MntFruits + 0.58318801939162 * S_MntGoldProds + -2.31777049056548 * S_MntMeatProducts + 
0.23759430399811 * S_MntSweetProducts + 1.6840332285232 * S_MntWines + 1.02971381781013 * 
S_MonthsAsCustomer + -0.67962580165124 * S_NumCatalogPurchases + -1.28390925647659 * 
S_NumDealsPurchases + 0.82669177239926 * S_NumDistPurchases + 1.71678585204511 * 
S_NumStorePurchases + 1.49226295608046 * S_NumWebPurchases + -4.0105103018388 * 
S_NumWebVisitsMonth + 0.59909792991084 * S_RFMstat + 1.07820515361554 * S_RMntFrq + 
4.74241121363086 * S_Recency + 3.02084642655958 * S_Teenhome ;
4134084   +   H1x1_3  =    -2.68802949086986 * S_AcceptedCmpTotal
4134085   +          +     0.32408799976195 * S_Age  +     0.22616656573012 * S_Frq
4134086   +          +     -0.4811040196236 * S_Income  +     0.01554228937278 *
4134087   +        S_Kidhome  +    -0.00131538598753 * S_Mnt  +     1.89942488016409 *
4134088   +        S_MntFishProducts  +     0.56303548397494 * S_MntFruits
4134089   +          +    -0.15594598286956 * S_MntGoldProds  +    -7.89542322794989 *
4134090   +        S_MntMeatProducts  +    -0.27122492647076 * S_MntSweetProducts
4134091   +          +     4.85572438492582 * S_MntWines  +     0.12362243863555 *
4134092   +        S_MonthsAsCustomer  +    -1.47960473675934 * S_NumCatalogPurchases
4134093   +          +     0.22958626391725 * S_NumDealsPurchases
4134094   +          +    -0.02046515813996 * S_NumDistPurchases
4134095   +          +      0.8618502050837 * S_NumStorePurchases
4134096   +          +     1.45175370326009 * S_NumWebPurchases
4134097   +          +    -0.86122442436156 * S_NumWebVisitsMonth
4134098   +          +    -0.99643351802143 * S_RFMstat  +    -1.65762265567389 *
4134099   +        S_RMntFrq  +    -0.08202178452839 * S_Recency
4134100   +          +    -0.62066116666102 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.68802949086986 * S_AcceptedCmpTotal + 0.32408799976195 * 
S_Age + 0.22616656573012 * S_Frq + -0.4811040196236 * S_Income + 0.01554228937278 * S_Kidhome 
+ -0.00131538598753 * S_Mnt + 1.89942488016409 * S_MntFishProducts + 0.56303548397494 * 
S_MntFruits + -0.15594598286956 * S_MntGoldProds + -7.89542322794989 * S_MntMeatProducts + 
-0.27122492647076 * S_MntSweetProducts + 4.85572438492582 * S_MntWines + 0.12362243863555 * 
S_MonthsAsCustomer + -1.47960473675934 * S_NumCatalogPurchases + 0.22958626391725 * 
S_NumDealsPurchases + -0.02046515813996 * S_NumDistPurchases + 0.8618502050837 * 
S_NumStorePurchases + 1.45175370326009 * S_NumWebPurchases + -0.86122442436156 * 
S_NumWebVisitsMonth + -0.99643351802143 * S_RFMstat + -1.65762265567389 * S_RMntFrq + 
-0.08202178452839 * S_Recency + -0.62066116666102 * S_Teenhome ;
4134101   +   H1x1_4  =     0.45192233004895 * S_AcceptedCmpTotal
4134102   +          +    -0.94676544762121 * S_Age  +     0.73809341266988 * S_Frq
4134103   +          +     0.72277799278136 * S_Income  +    -0.12970804152173 *
4134104   +        S_Kidhome  +     0.01052564540044 * S_Mnt  +    -0.48321452967118 *
4134105   +        S_MntFishProducts  +    -0.41471448831942 * S_MntFruits
4134106   +          +     0.04381334765674 * S_MntGoldProds  +     0.92594151100538 *
4134107   +        S_MntMeatProducts  +     0.29845970530397 * S_MntSweetProducts
4134108   +          +    -0.71535779454556 * S_MntWines  +     0.00059837351168 *
4134109   +        S_MonthsAsCustomer  +     2.23353511013288 * S_NumCatalogPurchases
4134110   +          +     1.25310034610344 * S_NumDealsPurchases
4134111   +          +     0.92141098602176 * S_NumDistPurchases
4134112   +          +    -0.08806509391473 * S_NumStorePurchases
4134113   +          +     -1.0533787624668 * S_NumWebPurchases
4134114   +          +     3.07050739830585 * S_NumWebVisitsMonth
4134115   +          +    -0.05671059637078 * S_RFMstat  +     1.73621676609839 *
4134116   +        S_RMntFrq  +     -3.8741602707981 * S_Recency
4134117   +          +    -2.06796290973426 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.45192233004895 * S_AcceptedCmpTotal + -0.94676544762121 * 
S_Age + 0.73809341266988 * S_Frq + 0.72277799278136 * S_Income + -0.12970804152173 * S_Kidhome 
+ 0.01052564540044 * S_Mnt + -0.48321452967118 * S_MntFishProducts + -0.41471448831942 * 
S_MntFruits + 0.04381334765674 * S_MntGoldProds + 0.92594151100538 * S_MntMeatProducts + 
0.29845970530397 * S_MntSweetProducts + -0.71535779454556 * S_MntWines + 0.00059837351168 * 
S_MonthsAsCustomer + 2.23353511013288 * S_NumCatalogPurchases + 1.25310034610344 * 
S_NumDealsPurchases + 0.92141098602176 * S_NumDistPurchases + -0.08806509391473 * 
S_NumStorePurchases + -1.0533787624668 * S_NumWebPurchases + 3.07050739830585 * 
S_NumWebVisitsMonth + -0.05671059637078 * S_RFMstat + 1.73621676609839 * S_RMntFrq + 
-3.8741602707981 * S_Recency + -2.06796290973426 * S_Teenhome ;
4134118   +   H1x1_5  =    -1.36121985595495 * S_AcceptedCmpTotal
4134119   +          +     0.05422070059006 * S_Age  +     0.27495083329116 * S_Frq
4134120   +          +     -0.9677209394449 * S_Income  +    -1.13619168708067 *
4134121   +        S_Kidhome  +     0.62918569209141 * S_Mnt  +     0.37160756976122 *
4134122   +        S_MntFishProducts  +     0.88680401337821 * S_MntFruits
4134123   +          +    -0.36100921959604 * S_MntGoldProds  +    -0.35574990334834 *
4134124   +        S_MntMeatProducts  +     0.82389188555236 * S_MntSweetProducts
4134125   +          +     1.43496434553922 * S_MntWines  +    -1.46335376005851 *
4134126   +        S_MonthsAsCustomer  +    -1.84942841156411 * S_NumCatalogPurchases
4134127   +          +    -1.68259553608287 * S_NumDealsPurchases
4134128   +          +    -0.53835572290445 * S_NumDistPurchases
4134129   +          +     1.25833922835446 * S_NumStorePurchases
4134130   +          +     0.48300830623998 * S_NumWebPurchases
4134131   +          +    -2.20119275236582 * S_NumWebVisitsMonth
4134132   +          +     -0.2397284702987 * S_RFMstat  +    -0.71924218175088 *
4134133   +        S_RMntFrq  +     0.35692712879409 * S_Recency
4134134   +          +     0.77122286526706 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.36121985595495 * S_AcceptedCmpTotal + 0.05422070059006 * 
S_Age + 0.27495083329116 * S_Frq + -0.9677209394449 * S_Income + -1.13619168708067 * S_Kidhome 
+ 0.62918569209141 * S_Mnt + 0.37160756976122 * S_MntFishProducts + 0.88680401337821 * 
S_MntFruits + -0.36100921959604 * S_MntGoldProds + -0.35574990334834 * S_MntMeatProducts + 
0.82389188555236 * S_MntSweetProducts + 1.43496434553922 * S_MntWines + -1.46335376005851 * 
S_MonthsAsCustomer + -1.84942841156411 * S_NumCatalogPurchases + -1.68259553608287 * 
S_NumDealsPurchases + -0.53835572290445 * S_NumDistPurchases + 1.25833922835446 * 
S_NumStorePurchases + 0.48300830623998 * S_NumWebPurchases + -2.20119275236582 * 
S_NumWebVisitsMonth + -0.2397284702987 * S_RFMstat + -0.71924218175088 * S_RMntFrq + 
0.35692712879409 * S_Recency + 0.77122286526706 * S_Teenhome ;
4134135   +   H1x1_1  = H1x1_1  +     0.07301304241545 * AcceptedCmp10
4134136   +          +    -1.95730125129608 * AcceptedCmp20  +    -1.38342161079442 *
4134137   +        AcceptedCmp30  +    -1.49080889719345 * AcceptedCmp40
4134138   +          +    -1.07381857035964 * AcceptedCmp50  +    -1.39161532835475 *
4134139   +        Complain0  +    -0.48833832833721 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.07301304241545 * AcceptedCmp10 + -1.95730125129608 * 
AcceptedCmp20 + -1.38342161079442 * AcceptedCmp30 + -1.49080889719345 * AcceptedCmp40 + 
-1.07381857035964 * AcceptedCmp50 + -1.39161532835475 * Complain0 + -0.48833832833721 * 
HigherEducationBinary0 ;
4134140   +   H1x1_2  = H1x1_2  +     0.38934062747222 * AcceptedCmp10
4134141   +          +    -0.32259780417284 * AcceptedCmp20  +     0.51602852076334 *
4134142   +        AcceptedCmp30  +    -0.70838948180655 * AcceptedCmp40
4134143   +          +     1.29066052659113 * AcceptedCmp50  +      0.1004848714971 *
4134144   +        Complain0  +    -0.73386392383925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.38934062747222 * AcceptedCmp10 + -0.32259780417284 * 
AcceptedCmp20 + 0.51602852076334 * AcceptedCmp30 + -0.70838948180655 * AcceptedCmp40 + 
1.29066052659113 * AcceptedCmp50 + 0.1004848714971 * Complain0 + -0.73386392383925 * 
HigherEducationBinary0 ;
4134145   +   H1x1_3  = H1x1_3  +     0.34219997086576 * AcceptedCmp10
4134146   +          +    -0.12311182470953 * AcceptedCmp20  +     -2.0600710888874 *
4134147   +        AcceptedCmp30  +      -1.904294485826 * AcceptedCmp40
4134148   +          +     3.36424449872952 * AcceptedCmp50  +    -0.25078238709812 *
4134149   +        Complain0  +    -0.08077684854733 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.34219997086576 * AcceptedCmp10 + -0.12311182470953 * 
AcceptedCmp20 + -2.0600710888874 * AcceptedCmp30 + -1.904294485826 * AcceptedCmp40 + 
3.36424449872952 * AcceptedCmp50 + -0.25078238709812 * Complain0 + -0.08077684854733 * 
HigherEducationBinary0 ;
4134150   +   H1x1_4  = H1x1_4  +    -1.12501407155309 * AcceptedCmp10
4134151   +          +    -1.58866249671355 * AcceptedCmp20  +    -1.72881548820716 *
4134152   +        AcceptedCmp30  +      -2.214698125839 * AcceptedCmp40
4134153   +          +    -0.62635613939269 * AcceptedCmp50  +      0.0150779868394 *
4134154   +        Complain0  +     1.03338023365724 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.12501407155309 * AcceptedCmp10 + -1.58866249671355 
* AcceptedCmp20 + -1.72881548820716 * AcceptedCmp30 + -2.214698125839 * AcceptedCmp40 + 
-0.62635613939269 * AcceptedCmp50 + 0.0150779868394 * Complain0 + 1.03338023365724 * 
HigherEducationBinary0 ;
4134155   +   H1x1_5  = H1x1_5  +    -0.26508589111781 * AcceptedCmp10
4134156   +          +    -0.40912292690255 * AcceptedCmp20  +     0.75389762391096 *
4134157   +        AcceptedCmp30  +     0.41336953757691 * AcceptedCmp40
4134158   +          +     0.15346623431804 * AcceptedCmp50  +    -0.57037201584293 *
4134159   +        Complain0  +     0.77009921064044 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.26508589111781 * AcceptedCmp10 + -0.40912292690255 
* AcceptedCmp20 + 0.75389762391096 * AcceptedCmp30 + 0.41336953757691 * AcceptedCmp40 + 
0.15346623431804 * AcceptedCmp50 + -0.57037201584293 * Complain0 + 0.77009921064044 * 
HigherEducationBinary0 ;
4134160   +   H1x1_1  = H1x1_1  +      1.0009305049246 * Education2n_Cycle
4134161   +          +     -0.4613305087931 * EducationBasic  +      0.3758596828746 *
4134162   +        EducationGraduation  +     1.25189584055994 * EducationMaster
4134163   +          +     0.26230568150721 * Marital_StatusDivorced
4134164   +          +     0.27563523967756 * Marital_StatusMarried
4134165   +          +     0.54464481618478 * Marital_StatusSingle
4134166   +          +    -0.59728882722473 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.0009305049246 * Education2n_Cycle + -0.4613305087931 
* EducationBasic + 0.3758596828746 * EducationGraduation + 1.25189584055994 * EducationMaster 
+ 0.26230568150721 * Marital_StatusDivorced + 0.27563523967756 * Marital_StatusMarried + 
0.54464481618478 * Marital_StatusSingle + -0.59728882722473 * Marital_StatusTogether ;
4134167   +   H1x1_2  = H1x1_2  +    -0.67268966683928 * Education2n_Cycle
4134168   +          +     1.13837889947773 * EducationBasic  +     1.04211010190617 *
4134169   +        EducationGraduation  +     0.29772013614284 * EducationMaster
4134170   +          +    -0.06750661313108 * Marital_StatusDivorced
4134171   +          +     1.48628445854207 * Marital_StatusMarried
4134172   +          +    -0.52197797291165 * Marital_StatusSingle
4134173   +          +     0.26825188905773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.67268966683928 * Education2n_Cycle + 
1.13837889947773 * EducationBasic + 1.04211010190617 * EducationGraduation + 0.29772013614284 
* EducationMaster + -0.06750661313108 * Marital_StatusDivorced + 1.48628445854207 * 
Marital_StatusMarried + -0.52197797291165 * Marital_StatusSingle + 0.26825188905773 * 
Marital_StatusTogether ;
4134174   +   H1x1_3  = H1x1_3  +     0.15872794306716 * Education2n_Cycle
4134175   +          +     -0.2621450786439 * EducationBasic  +      -0.141563901063 *
4134176   +        EducationGraduation  +     0.45665087056809 * EducationMaster
4134177   +          +     0.03219453957597 * Marital_StatusDivorced
4134178   +          +    -0.73835008216677 * Marital_StatusMarried
4134179   +          +     0.11212575818086 * Marital_StatusSingle
4134180   +          +    -0.43478073380625 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.15872794306716 * Education2n_Cycle + 
-0.2621450786439 * EducationBasic + -0.141563901063 * EducationGraduation + 0.45665087056809 * 
EducationMaster + 0.03219453957597 * Marital_StatusDivorced + -0.73835008216677 * 
Marital_StatusMarried + 0.11212575818086 * Marital_StatusSingle + -0.43478073380625 * 
Marital_StatusTogether ;
4134181   +   H1x1_4  = H1x1_4  +    -0.76014837933596 * Education2n_Cycle
4134182   +          +     0.81014096036717 * EducationBasic  +     0.41200440507889 *
4134183   +        EducationGraduation  +    -1.00228990059701 * EducationMaster
4134184   +          +    -0.95055539413405 * Marital_StatusDivorced
4134185   +          +    -1.65922419336067 * Marital_StatusMarried
4134186   +          +     0.78727538125107 * Marital_StatusSingle
4134187   +          +    -2.04820355088009 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.76014837933596 * Education2n_Cycle + 
0.81014096036717 * EducationBasic + 0.41200440507889 * EducationGraduation + -1.00228990059701 
* EducationMaster + -0.95055539413405 * Marital_StatusDivorced + -1.65922419336067 * 
Marital_StatusMarried + 0.78727538125107 * Marital_StatusSingle + -2.04820355088009 * 
Marital_StatusTogether ;
4134188   +   H1x1_5  = H1x1_5  +    -0.28767104655135 * Education2n_Cycle
4134189   +          +     0.23294407135706 * EducationBasic  +    -1.19680108607997 *
4134190   +        EducationGraduation  +     0.46710355433642 * EducationMaster
4134191   +          +     -4.1747415035634 * Marital_StatusDivorced
4134192   +          +     3.61194282451968 * Marital_StatusMarried
4134193   +          +     -3.2800495365546 * Marital_StatusSingle
4134194   +          +     4.03496183640024 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.28767104655135 * Education2n_Cycle + 
0.23294407135706 * EducationBasic + -1.19680108607997 * EducationGraduation + 0.46710355433642 
* EducationMaster + -4.1747415035634 * Marital_StatusDivorced + 3.61194282451968 * 
Marital_StatusMarried + -3.2800495365546 * Marital_StatusSingle + 4.03496183640024 * 
Marital_StatusTogether ;
4134195   +   H1x1_1  =    -2.93438581065873 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.93438581065873 + H1x1_1 ;
4134196   +   H1x1_2  =     0.62443347607569 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.62443347607569 + H1x1_2 ;
4134197   +   H1x1_3  =    -1.18755793198513 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.18755793198513 + H1x1_3 ;
4134198   +   H1x1_4  =    -3.21278432238831 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.21278432238831 + H1x1_4 ;
4134199   +   H1x1_5  =    -1.81875492018044 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.81875492018044 + H1x1_5 ;
4134200   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4134201   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4134202   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
4134203   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
4134204   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
4134205   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
4134206   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
4134207   +END;
MPRINT(EM_DIAGRAM):   END;
4134208   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4134209   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4134210   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4134211   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
4134212   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
4134213   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
4134214   +END;
MPRINT(EM_DIAGRAM):   END;
4134215   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4134216   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
4134217   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4134218   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4134219   +   H1x2_1  =    -0.54874145972704 * S_AcceptedCmpTotal
4134220   +          +    -1.96729802286214 * S_Age  +     0.48476252791598 * S_Frq
4134221   +          +    -0.22341551246937 * S_Income  +      0.5578096957255 *
4134222   +        S_Kidhome  +     0.02626802496223 * S_Mnt  +     0.45412544568839 *
4134223   +        S_MntFishProducts  +     1.01144979259918 * S_MntFruits
4134224   +          +     0.10684155186482 * S_MntGoldProds  +    -0.28941930881694 *
4134225   +        S_MntMeatProducts  +    -1.28044699620063 * S_MntSweetProducts
4134226   +          +     0.01381215802108 * S_MntWines  +    -0.10048261914477 *
4134227   +        S_MonthsAsCustomer  +     2.77259931235269 * S_NumCatalogPurchases
4134228   +          +     1.29727972396867 * S_NumDealsPurchases
4134229   +          +     -0.4796144286007 * S_NumDistPurchases
4134230   +          +     0.88365985808591 * S_NumStorePurchases
4134231   +          +     0.68522096892804 * S_NumWebPurchases
4134232   +          +     0.54931043107798 * S_NumWebVisitsMonth
4134233   +          +     0.54113568533807 * S_RFMstat  +    -1.25421061779043 *
4134234   +        S_RMntFrq  +     2.35704770144328 * S_Recency
4134235   +          +     0.71039073076168 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.54874145972704 * S_AcceptedCmpTotal + -1.96729802286214 * 
S_Age + 0.48476252791598 * S_Frq + -0.22341551246937 * S_Income + 0.5578096957255 * S_Kidhome 
+ 0.02626802496223 * S_Mnt + 0.45412544568839 * S_MntFishProducts + 1.01144979259918 * 
S_MntFruits + 0.10684155186482 * S_MntGoldProds + -0.28941930881694 * S_MntMeatProducts + 
-1.28044699620063 * S_MntSweetProducts + 0.01381215802108 * S_MntWines + -0.10048261914477 * 
S_MonthsAsCustomer + 2.77259931235269 * S_NumCatalogPurchases + 1.29727972396867 * 
S_NumDealsPurchases + -0.4796144286007 * S_NumDistPurchases + 0.88365985808591 * 
S_NumStorePurchases + 0.68522096892804 * S_NumWebPurchases + 0.54931043107798 * 
S_NumWebVisitsMonth + 0.54113568533807 * S_RFMstat + -1.25421061779043 * S_RMntFrq + 
2.35704770144328 * S_Recency + 0.71039073076168 * S_Teenhome ;
4134236   +   H1x2_2  =    -0.87761654715429 * S_AcceptedCmpTotal
4134237   +          +     0.35157201280883 * S_Age  +    -0.52499399345006 * S_Frq
4134238   +          +    -0.18535763866989 * S_Income  +    -2.37902660986953 *
4134239   +        S_Kidhome  +     0.91895423997679 * S_Mnt  +     0.25609945459048 *
4134240   +        S_MntFishProducts  +    -0.81235755934506 * S_MntFruits
4134241   +          +     0.52120923975997 * S_MntGoldProds  +    -0.44372337811583 *
4134242   +        S_MntMeatProducts  +     0.44948834045992 * S_MntSweetProducts
4134243   +          +     -1.0932771504262 * S_MntWines  +     0.50602262267579 *
4134244   +        S_MonthsAsCustomer  +     1.56553203254999 * S_NumCatalogPurchases
4134245   +          +     0.26997834581422 * S_NumDealsPurchases
4134246   +          +      1.4974894627406 * S_NumDistPurchases
4134247   +          +     0.20577850505638 * S_NumStorePurchases
4134248   +          +     0.67578530037026 * S_NumWebPurchases
4134249   +          +     1.48893165613941 * S_NumWebVisitsMonth
4134250   +          +     0.13287732996796 * S_RFMstat  +     0.56918286957798 *
4134251   +        S_RMntFrq  +    -1.40718347701522 * S_Recency
4134252   +          +    -1.45355422903931 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.87761654715429 * S_AcceptedCmpTotal + 0.35157201280883 * 
S_Age + -0.52499399345006 * S_Frq + -0.18535763866989 * S_Income + -2.37902660986953 * 
S_Kidhome + 0.91895423997679 * S_Mnt + 0.25609945459048 * S_MntFishProducts + 
-0.81235755934506 * S_MntFruits + 0.52120923975997 * S_MntGoldProds + -0.44372337811583 * 
S_MntMeatProducts + 0.44948834045992 * S_MntSweetProducts + -1.0932771504262 * S_MntWines + 
0.50602262267579 * S_MonthsAsCustomer + 1.56553203254999 * S_NumCatalogPurchases + 
0.26997834581422 * S_NumDealsPurchases + 1.4974894627406 * S_NumDistPurchases + 
0.20577850505638 * S_NumStorePurchases + 0.67578530037026 * S_NumWebPurchases + 
1.48893165613941 * S_NumWebVisitsMonth + 0.13287732996796 * S_RFMstat + 0.56918286957798 * 
S_RMntFrq + -1.40718347701522 * S_Recency + -1.45355422903931 * S_Teenhome ;
4134253   +   H1x2_3  =    -0.04229252175967 * S_AcceptedCmpTotal
4134254   +          +    -0.15725101559927 * S_Age  +      2.0258984610186 * S_Frq
4134255   +          +     0.68410444381038 * S_Income  +     0.69019962444573 *
4134256   +        S_Kidhome  +    -0.34233922017925 * S_Mnt  +     1.55352897772997 *
4134257   +        S_MntFishProducts  +    -0.76176236164027 * S_MntFruits
4134258   +          +    -1.16754517357962 * S_MntGoldProds  +     1.24350326644835 *
4134259   +        S_MntMeatProducts  +    -0.81282451423383 * S_MntSweetProducts
4134260   +          +      0.7172672745995 * S_MntWines  +     1.13255065624057 *
4134261   +        S_MonthsAsCustomer  +    -0.07781573365472 * S_NumCatalogPurchases
4134262   +          +    -0.75474919633886 * S_NumDealsPurchases
4134263   +          +     2.21872386475638 * S_NumDistPurchases
4134264   +          +    -0.36191460108989 * S_NumStorePurchases
4134265   +          +     0.03160010932412 * S_NumWebPurchases
4134266   +          +     0.00984650739909 * S_NumWebVisitsMonth
4134267   +          +     0.89037882953417 * S_RFMstat  +    -1.05136047825247 *
4134268   +        S_RMntFrq  +     0.97890474913417 * S_Recency
4134269   +          +     1.27657797009328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.04229252175967 * S_AcceptedCmpTotal + -0.15725101559927 * 
S_Age + 2.0258984610186 * S_Frq + 0.68410444381038 * S_Income + 0.69019962444573 * S_Kidhome + 
-0.34233922017925 * S_Mnt + 1.55352897772997 * S_MntFishProducts + -0.76176236164027 * 
S_MntFruits + -1.16754517357962 * S_MntGoldProds + 1.24350326644835 * S_MntMeatProducts + 
-0.81282451423383 * S_MntSweetProducts + 0.7172672745995 * S_MntWines + 1.13255065624057 * 
S_MonthsAsCustomer + -0.07781573365472 * S_NumCatalogPurchases + -0.75474919633886 * 
S_NumDealsPurchases + 2.21872386475638 * S_NumDistPurchases + -0.36191460108989 * 
S_NumStorePurchases + 0.03160010932412 * S_NumWebPurchases + 0.00984650739909 * 
S_NumWebVisitsMonth + 0.89037882953417 * S_RFMstat + -1.05136047825247 * S_RMntFrq + 
0.97890474913417 * S_Recency + 1.27657797009328 * S_Teenhome ;
4134270   +   H1x2_4  =    -1.09473986244398 * S_AcceptedCmpTotal
4134271   +          +     0.02292759635423 * S_Age  +     -1.7109267909752 * S_Frq
4134272   +          +    -1.43383040360225 * S_Income  +    -1.57934610129188 *
4134273   +        S_Kidhome  +      0.1051214240099 * S_Mnt  +     0.97936539268931 *
4134274   +        S_MntFishProducts  +    -0.59583313648658 * S_MntFruits
4134275   +          +     1.51886505753921 * S_MntGoldProds  +    -0.32475169924002 *
4134276   +        S_MntMeatProducts  +     2.41110603237098 * S_MntSweetProducts
4134277   +          +    -0.31356867592074 * S_MntWines  +    -0.46746195334785 *
4134278   +        S_MonthsAsCustomer  +      1.2175994058873 * S_NumCatalogPurchases
4134279   +          +    -1.12057357865269 * S_NumDealsPurchases
4134280   +          +    -0.70841760614521 * S_NumDistPurchases
4134281   +          +    -1.39174816270404 * S_NumStorePurchases
4134282   +          +    -1.62343249380806 * S_NumWebPurchases
4134283   +          +    -0.73097954508465 * S_NumWebVisitsMonth
4134284   +          +    -3.00146168388145 * S_RFMstat  +     0.52793752800199 *
4134285   +        S_RMntFrq  +    -1.13585643618227 * S_Recency
4134286   +          +    -0.84809590269062 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.09473986244398 * S_AcceptedCmpTotal + 0.02292759635423 * 
S_Age + -1.7109267909752 * S_Frq + -1.43383040360225 * S_Income + -1.57934610129188 * 
S_Kidhome + 0.1051214240099 * S_Mnt + 0.97936539268931 * S_MntFishProducts + -0.59583313648658 
* S_MntFruits + 1.51886505753921 * S_MntGoldProds + -0.32475169924002 * S_MntMeatProducts + 
2.41110603237098 * S_MntSweetProducts + -0.31356867592074 * S_MntWines + -0.46746195334785 * 
S_MonthsAsCustomer + 1.2175994058873 * S_NumCatalogPurchases + -1.12057357865269 * 
S_NumDealsPurchases + -0.70841760614521 * S_NumDistPurchases + -1.39174816270404 * 
S_NumStorePurchases + -1.62343249380806 * S_NumWebPurchases + -0.73097954508465 * 
S_NumWebVisitsMonth + -3.00146168388145 * S_RFMstat + 0.52793752800199 * S_RMntFrq + 
-1.13585643618227 * S_Recency + -0.84809590269062 * S_Teenhome ;
4134287   +   H1x2_5  =    -0.76941479017685 * S_AcceptedCmpTotal
4134288   +          +    -0.80197055800099 * S_Age  +    -0.33523741625948 * S_Frq
4134289   +          +     0.67386262421365 * S_Income  +     1.52003240833706 *
4134290   +        S_Kidhome  +     0.14459028288037 * S_Mnt  +     0.39874528164598 *
4134291   +        S_MntFishProducts  +    -1.59397070226712 * S_MntFruits
4134292   +          +     0.78518859165099 * S_MntGoldProds  +     0.48003679676647 *
4134293   +        S_MntMeatProducts  +    -0.17657709565986 * S_MntSweetProducts
4134294   +          +    -0.79155200251992 * S_MntWines  +     0.27335896970236 *
4134295   +        S_MonthsAsCustomer  +     1.70502645622852 * S_NumCatalogPurchases
4134296   +          +     0.66880481485557 * S_NumDealsPurchases
4134297   +          +     0.69540174544859 * S_NumDistPurchases
4134298   +          +     1.68246546921736 * S_NumStorePurchases
4134299   +          +     1.85958176898295 * S_NumWebPurchases
4134300   +          +    -0.23815810306565 * S_NumWebVisitsMonth
4134301   +          +    -1.93291997626659 * S_RFMstat  +     0.44532152898673 *
4134302   +        S_RMntFrq  +    -2.12360922264332 * S_Recency
4134303   +          +     0.99915338747458 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.76941479017685 * S_AcceptedCmpTotal + -0.80197055800099 * 
S_Age + -0.33523741625948 * S_Frq + 0.67386262421365 * S_Income + 1.52003240833706 * S_Kidhome 
+ 0.14459028288037 * S_Mnt + 0.39874528164598 * S_MntFishProducts + -1.59397070226712 * 
S_MntFruits + 0.78518859165099 * S_MntGoldProds + 0.48003679676647 * S_MntMeatProducts + 
-0.17657709565986 * S_MntSweetProducts + -0.79155200251992 * S_MntWines + 0.27335896970236 * 
S_MonthsAsCustomer + 1.70502645622852 * S_NumCatalogPurchases + 0.66880481485557 * 
S_NumDealsPurchases + 0.69540174544859 * S_NumDistPurchases + 1.68246546921736 * 
S_NumStorePurchases + 1.85958176898295 * S_NumWebPurchases + -0.23815810306565 * 
S_NumWebVisitsMonth + -1.93291997626659 * S_RFMstat + 0.44532152898673 * S_RMntFrq + 
-2.12360922264332 * S_Recency + 0.99915338747458 * S_Teenhome ;
4134304   +   H1x2_1  = H1x2_1  +    -0.34162163066653 * AcceptedCmp10
4134305   +          +    -1.63962075993761 * AcceptedCmp20  +    -0.15621537766672 *
4134306   +        AcceptedCmp30  +      -0.732967936338 * AcceptedCmp40
4134307   +          +    -0.89574320220152 * AcceptedCmp50  +    -1.65404732277767 *
4134308   +        Complain0  +     0.39810242344925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.34162163066653 * AcceptedCmp10 + -1.63962075993761 
* AcceptedCmp20 + -0.15621537766672 * AcceptedCmp30 + -0.732967936338 * AcceptedCmp40 + 
-0.89574320220152 * AcceptedCmp50 + -1.65404732277767 * Complain0 + 0.39810242344925 * 
HigherEducationBinary0 ;
4134309   +   H1x2_2  = H1x2_2  +     1.20749893379181 * AcceptedCmp10
4134310   +          +     0.74035850461127 * AcceptedCmp20  +    -0.57598323268755 *
4134311   +        AcceptedCmp30  +      0.2507562576407 * AcceptedCmp40
4134312   +          +    -1.65954337863227 * AcceptedCmp50  +    -0.36715622527216 *
4134313   +        Complain0  +    -0.80760857638242 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.20749893379181 * AcceptedCmp10 + 0.74035850461127 * 
AcceptedCmp20 + -0.57598323268755 * AcceptedCmp30 + 0.2507562576407 * AcceptedCmp40 + 
-1.65954337863227 * AcceptedCmp50 + -0.36715622527216 * Complain0 + -0.80760857638242 * 
HigherEducationBinary0 ;
4134314   +   H1x2_3  = H1x2_3  +      0.1125551214626 * AcceptedCmp10
4134315   +          +      0.9256532360503 * AcceptedCmp20  +    -0.66171851987996 *
4134316   +        AcceptedCmp30  +     1.38941609616943 * AcceptedCmp40
4134317   +          +    -0.12600029950267 * AcceptedCmp50  +     1.77872255302987 *
4134318   +        Complain0  +     0.92261637863861 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.1125551214626 * AcceptedCmp10 + 0.9256532360503 * 
AcceptedCmp20 + -0.66171851987996 * AcceptedCmp30 + 1.38941609616943 * AcceptedCmp40 + 
-0.12600029950267 * AcceptedCmp50 + 1.77872255302987 * Complain0 + 0.92261637863861 * 
HigherEducationBinary0 ;
4134319   +   H1x2_4  = H1x2_4  +     1.15541901435911 * AcceptedCmp10
4134320   +          +     0.29649422640031 * AcceptedCmp20  +     0.39809722545141 *
4134321   +        AcceptedCmp30  +    -0.33350815656019 * AcceptedCmp40
4134322   +          +    -0.67932033799188 * AcceptedCmp50  +     0.37378775543802 *
4134323   +        Complain0  +    -0.42273281355142 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.15541901435911 * AcceptedCmp10 + 0.29649422640031 * 
AcceptedCmp20 + 0.39809722545141 * AcceptedCmp30 + -0.33350815656019 * AcceptedCmp40 + 
-0.67932033799188 * AcceptedCmp50 + 0.37378775543802 * Complain0 + -0.42273281355142 * 
HigherEducationBinary0 ;
4134324   +   H1x2_5  = H1x2_5  +     0.42070748083274 * AcceptedCmp10
4134325   +          +     0.35338291913326 * AcceptedCmp20  +    -0.47257467834599 *
4134326   +        AcceptedCmp30  +     1.53611423156071 * AcceptedCmp40
4134327   +          +    -1.33360798584085 * AcceptedCmp50  +    -1.44352278404761 *
4134328   +        Complain0  +    -0.33674466205114 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.42070748083274 * AcceptedCmp10 + 0.35338291913326 * 
AcceptedCmp20 + -0.47257467834599 * AcceptedCmp30 + 1.53611423156071 * AcceptedCmp40 + 
-1.33360798584085 * AcceptedCmp50 + -1.44352278404761 * Complain0 + -0.33674466205114 * 
HigherEducationBinary0 ;
4134329   +   H1x2_1  = H1x2_1  +     0.60843711339598 * Education2n_Cycle
4134330   +          +     -0.2612316425128 * EducationBasic  +     0.53215140077355 *
4134331   +        EducationGraduation  +     0.32623787352656 * EducationMaster
4134332   +          +      0.2766977476799 * Marital_StatusDivorced
4134333   +          +     0.99585126449473 * Marital_StatusMarried
4134334   +          +    -0.71244490682808 * Marital_StatusSingle
4134335   +          +     0.05234471555621 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.60843711339598 * Education2n_Cycle + 
-0.2612316425128 * EducationBasic + 0.53215140077355 * EducationGraduation + 0.32623787352656 
* EducationMaster + 0.2766977476799 * Marital_StatusDivorced + 0.99585126449473 * 
Marital_StatusMarried + -0.71244490682808 * Marital_StatusSingle + 0.05234471555621 * 
Marital_StatusTogether ;
4134336   +   H1x2_2  = H1x2_2  +    -1.37916273373311 * Education2n_Cycle
4134337   +          +     0.16982792088728 * EducationBasic  +     0.00814910507718 *
4134338   +        EducationGraduation  +     0.47239961039918 * EducationMaster
4134339   +          +     0.04724779113048 * Marital_StatusDivorced
4134340   +          +    -0.80186231440666 * Marital_StatusMarried
4134341   +          +    -0.02226793584171 * Marital_StatusSingle
4134342   +          +     1.15827064756189 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.37916273373311 * Education2n_Cycle + 
0.16982792088728 * EducationBasic + 0.00814910507718 * EducationGraduation + 0.47239961039918 
* EducationMaster + 0.04724779113048 * Marital_StatusDivorced + -0.80186231440666 * 
Marital_StatusMarried + -0.02226793584171 * Marital_StatusSingle + 1.15827064756189 * 
Marital_StatusTogether ;
4134343   +   H1x2_3  = H1x2_3  +    -0.24428291102209 * Education2n_Cycle
4134344   +          +    -0.11697967041189 * EducationBasic  +    -1.11774839931933 *
4134345   +        EducationGraduation  +     0.41284540548646 * EducationMaster
4134346   +          +     0.28206835683721 * Marital_StatusDivorced
4134347   +          +     0.46500886756532 * Marital_StatusMarried
4134348   +          +     0.35327545255503 * Marital_StatusSingle
4134349   +          +     0.58394650567036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.24428291102209 * Education2n_Cycle + 
-0.11697967041189 * EducationBasic + -1.11774839931933 * EducationGraduation + 
0.41284540548646 * EducationMaster + 0.28206835683721 * Marital_StatusDivorced + 
0.46500886756532 * Marital_StatusMarried + 0.35327545255503 * Marital_StatusSingle + 
0.58394650567036 * Marital_StatusTogether ;
4134350   +   H1x2_4  = H1x2_4  +    -0.41547462236128 * Education2n_Cycle
4134351   +          +     1.13629818238321 * EducationBasic  +     0.25034344652006 *
4134352   +        EducationGraduation  +    -0.29812527209479 * EducationMaster
4134353   +          +     1.22291788006392 * Marital_StatusDivorced
4134354   +          +    -2.27040720272432 * Marital_StatusMarried
4134355   +          +     1.13606780043773 * Marital_StatusSingle
4134356   +          +    -1.07606142589696 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.41547462236128 * Education2n_Cycle + 
1.13629818238321 * EducationBasic + 0.25034344652006 * EducationGraduation + -0.29812527209479 
* EducationMaster + 1.22291788006392 * Marital_StatusDivorced + -2.27040720272432 * 
Marital_StatusMarried + 1.13606780043773 * Marital_StatusSingle + -1.07606142589696 * 
Marital_StatusTogether ;
4134357   +   H1x2_5  = H1x2_5  +     1.12913918872999 * Education2n_Cycle
4134358   +          +     1.23833680718071 * EducationBasic  +     1.02294394812757 *
4134359   +        EducationGraduation  +      0.4909097120378 * EducationMaster
4134360   +          +     -0.3999800759199 * Marital_StatusDivorced
4134361   +          +    -0.40978271635345 * Marital_StatusMarried
4134362   +          +    -0.55524279444227 * Marital_StatusSingle
4134363   +          +    -0.84395633194091 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.12913918872999 * Education2n_Cycle + 
1.23833680718071 * EducationBasic + 1.02294394812757 * EducationGraduation + 0.4909097120378 * 
EducationMaster + -0.3999800759199 * Marital_StatusDivorced + -0.40978271635345 * 
Marital_StatusMarried + -0.55524279444227 * Marital_StatusSingle + -0.84395633194091 * 
Marital_StatusTogether ;
4134364   +   H1x2_1  =    -0.65400470626386 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.65400470626386 + H1x2_1 ;
4134365   +   H1x2_2  =    -0.07530883721979 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.07530883721979 + H1x2_2 ;
4134366   +   H1x2_3  =      -0.290996947172 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.290996947172 + H1x2_3 ;
4134367   +   H1x2_4  =    -0.89461283774487 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.89461283774487 + H1x2_4 ;
4134368   +   H1x2_5  =    -0.37171981998051 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.37171981998051 + H1x2_5 ;
4134369   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4134370   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4134371   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
4134372   +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
4134373   +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
4134374   +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
4134375   +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
4134376   +END;
MPRINT(EM_DIAGRAM):   END;
4134377   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4134378   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
4134379   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
4134380   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
4134381   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
4134382   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
4134383   +END;
MPRINT(EM_DIAGRAM):   END;
4134384   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4134385   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
4134386   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4134387   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4134388   +   H1x3_1  =     0.02034446400728 * S_AcceptedCmpTotal
4134389   +          +    -0.93561297099295 * S_Age  +     0.49066734733476 * S_Frq
4134390   +          +    -1.34856771280634 * S_Income  +     1.35662384709137 *
4134391   +        S_Kidhome  +    -0.02206222240953 * S_Mnt  +     0.42162640035912 *
4134392   +        S_MntFishProducts  +      1.4724867503467 * S_MntFruits
4134393   +          +    -0.51460401528507 * S_MntGoldProds  +       0.958125893994 *
4134394   +        S_MntMeatProducts  +     0.57113865733502 * S_MntSweetProducts
4134395   +          +    -1.00744287646761 * S_MntWines  +     0.17043433169038 *
4134396   +        S_MonthsAsCustomer  +     1.69277828985001 * S_NumCatalogPurchases
4134397   +          +     0.15783958682465 * S_NumDealsPurchases
4134398   +          +     1.52124708558457 * S_NumDistPurchases
4134399   +          +     -1.3804418313581 * S_NumStorePurchases
4134400   +          +    -1.29570111649272 * S_NumWebPurchases
4134401   +          +    -0.64280706056547 * S_NumWebVisitsMonth
4134402   +          +    -1.20774016698707 * S_RFMstat  +    -0.44623204790714 *
4134403   +        S_RMntFrq  +    -0.06726660535826 * S_Recency
4134404   +          +    -0.73266660753354 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.02034446400728 * S_AcceptedCmpTotal + -0.93561297099295 * 
S_Age + 0.49066734733476 * S_Frq + -1.34856771280634 * S_Income + 1.35662384709137 * S_Kidhome 
+ -0.02206222240953 * S_Mnt + 0.42162640035912 * S_MntFishProducts + 1.4724867503467 * 
S_MntFruits + -0.51460401528507 * S_MntGoldProds + 0.958125893994 * S_MntMeatProducts + 
0.57113865733502 * S_MntSweetProducts + -1.00744287646761 * S_MntWines + 0.17043433169038 * 
S_MonthsAsCustomer + 1.69277828985001 * S_NumCatalogPurchases + 0.15783958682465 * 
S_NumDealsPurchases + 1.52124708558457 * S_NumDistPurchases + -1.3804418313581 * 
S_NumStorePurchases + -1.29570111649272 * S_NumWebPurchases + -0.64280706056547 * 
S_NumWebVisitsMonth + -1.20774016698707 * S_RFMstat + -0.44623204790714 * S_RMntFrq + 
-0.06726660535826 * S_Recency + -0.73266660753354 * S_Teenhome ;
4134405   +   H1x3_2  =     0.05576327437156 * S_AcceptedCmpTotal
4134406   +          +    -0.09670418926268 * S_Age  +     0.70499031549942 * S_Frq
4134407   +          +     0.26184897891893 * S_Income  +    -1.14390972062773 *
4134408   +        S_Kidhome  +     -0.0692794596346 * S_Mnt  +     0.38520399298269 *
4134409   +        S_MntFishProducts  +     0.23416686193508 * S_MntFruits
4134410   +          +     0.54961704765881 * S_MntGoldProds  +     1.00350256670809 *
4134411   +        S_MntMeatProducts  +    -0.03432942277526 * S_MntSweetProducts
4134412   +          +    -0.79877133727616 * S_MntWines  +    -2.29194848128805 *
4134413   +        S_MonthsAsCustomer  +    -0.38950356087292 * S_NumCatalogPurchases
4134414   +          +     0.12337111358286 * S_NumDealsPurchases
4134415   +          +     -2.3848926094027 * S_NumDistPurchases
4134416   +          +    -1.20666646996433 * S_NumStorePurchases
4134417   +          +     0.89549302881365 * S_NumWebPurchases
4134418   +          +     0.95359042569947 * S_NumWebVisitsMonth
4134419   +          +    -0.41458051201542 * S_RFMstat  +    -2.05830783255089 *
4134420   +        S_RMntFrq  +     0.17682790616815 * S_Recency
4134421   +          +     0.20329199183726 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.05576327437156 * S_AcceptedCmpTotal + -0.09670418926268 * 
S_Age + 0.70499031549942 * S_Frq + 0.26184897891893 * S_Income + -1.14390972062773 * S_Kidhome 
+ -0.0692794596346 * S_Mnt + 0.38520399298269 * S_MntFishProducts + 0.23416686193508 * 
S_MntFruits + 0.54961704765881 * S_MntGoldProds + 1.00350256670809 * S_MntMeatProducts + 
-0.03432942277526 * S_MntSweetProducts + -0.79877133727616 * S_MntWines + -2.29194848128805 * 
S_MonthsAsCustomer + -0.38950356087292 * S_NumCatalogPurchases + 0.12337111358286 * 
S_NumDealsPurchases + -2.3848926094027 * S_NumDistPurchases + -1.20666646996433 * 
S_NumStorePurchases + 0.89549302881365 * S_NumWebPurchases + 0.95359042569947 * 
S_NumWebVisitsMonth + -0.41458051201542 * S_RFMstat + -2.05830783255089 * S_RMntFrq + 
0.17682790616815 * S_Recency + 0.20329199183726 * S_Teenhome ;
4134422   +   H1x3_3  =     0.56145399373835 * S_AcceptedCmpTotal
4134423   +          +     -0.0607922137813 * S_Age  +    -0.72333515266618 * S_Frq
4134424   +          +     1.00319702869592 * S_Income  +    -0.98265416539823 *
4134425   +        S_Kidhome  +      0.0683081611036 * S_Mnt  +     0.53609800817402 *
4134426   +        S_MntFishProducts  +     2.04360526983241 * S_MntFruits
4134427   +          +    -0.71698041504305 * S_MntGoldProds  +     -0.0344399486348 *
4134428   +        S_MntMeatProducts  +     0.33812230317499 * S_MntSweetProducts
4134429   +          +     1.06616289880664 * S_MntWines  +     0.61567483782422 *
4134430   +        S_MonthsAsCustomer  +      0.1468959674594 * S_NumCatalogPurchases
4134431   +          +    -1.05383642674948 * S_NumDealsPurchases
4134432   +          +     1.71861984509369 * S_NumDistPurchases
4134433   +          +     1.47595181536047 * S_NumStorePurchases
4134434   +          +    -1.64165005491178 * S_NumWebPurchases
4134435   +          +    -2.35130004742828 * S_NumWebVisitsMonth
4134436   +          +      1.0733561716985 * S_RFMstat  +     1.11931629246452 *
4134437   +        S_RMntFrq  +    -1.27356615687944 * S_Recency
4134438   +          +     0.38980214209917 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.56145399373835 * S_AcceptedCmpTotal + -0.0607922137813 * 
S_Age + -0.72333515266618 * S_Frq + 1.00319702869592 * S_Income + -0.98265416539823 * 
S_Kidhome + 0.0683081611036 * S_Mnt + 0.53609800817402 * S_MntFishProducts + 2.04360526983241 
* S_MntFruits + -0.71698041504305 * S_MntGoldProds + -0.0344399486348 * S_MntMeatProducts + 
0.33812230317499 * S_MntSweetProducts + 1.06616289880664 * S_MntWines + 0.61567483782422 * 
S_MonthsAsCustomer + 0.1468959674594 * S_NumCatalogPurchases + -1.05383642674948 * 
S_NumDealsPurchases + 1.71861984509369 * S_NumDistPurchases + 1.47595181536047 * 
S_NumStorePurchases + -1.64165005491178 * S_NumWebPurchases + -2.35130004742828 * 
S_NumWebVisitsMonth + 1.0733561716985 * S_RFMstat + 1.11931629246452 * S_RMntFrq + 
-1.27356615687944 * S_Recency + 0.38980214209917 * S_Teenhome ;
4134439   +   H1x3_4  =    -1.87202109167616 * S_AcceptedCmpTotal
4134440   +          +     0.55536174675106 * S_Age  +     1.30133566520787 * S_Frq
4134441   +          +     1.18618986686496 * S_Income  +      0.7889264950743 *
4134442   +        S_Kidhome  +     0.52573653297629 * S_Mnt  +    -0.46151505202831 *
4134443   +        S_MntFishProducts  +     0.87196199131075 * S_MntFruits
4134444   +          +    -1.42881514301194 * S_MntGoldProds  +     0.75395204572369 *
4134445   +        S_MntMeatProducts  +    -1.86940235435459 * S_MntSweetProducts
4134446   +          +    -0.16531589560603 * S_MntWines  +     0.80429494629006 *
4134447   +        S_MonthsAsCustomer  +     2.07324775707635 * S_NumCatalogPurchases
4134448   +          +     0.13347794794222 * S_NumDealsPurchases
4134449   +          +     0.30533639886561 * S_NumDistPurchases
4134450   +          +     1.63892955540526 * S_NumStorePurchases
4134451   +          +     0.43734586516446 * S_NumWebPurchases
4134452   +          +     1.79260779802864 * S_NumWebVisitsMonth
4134453   +          +     2.03019700767877 * S_RFMstat  +    -0.36302320348133 *
4134454   +        S_RMntFrq  +    -0.32271271703746 * S_Recency
4134455   +          +     1.03191552613762 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -1.87202109167616 * S_AcceptedCmpTotal + 0.55536174675106 * 
S_Age + 1.30133566520787 * S_Frq + 1.18618986686496 * S_Income + 0.7889264950743 * S_Kidhome + 
0.52573653297629 * S_Mnt + -0.46151505202831 * S_MntFishProducts + 0.87196199131075 * 
S_MntFruits + -1.42881514301194 * S_MntGoldProds + 0.75395204572369 * S_MntMeatProducts + 
-1.86940235435459 * S_MntSweetProducts + -0.16531589560603 * S_MntWines + 0.80429494629006 * 
S_MonthsAsCustomer + 2.07324775707635 * S_NumCatalogPurchases + 0.13347794794222 * 
S_NumDealsPurchases + 0.30533639886561 * S_NumDistPurchases + 1.63892955540526 * 
S_NumStorePurchases + 0.43734586516446 * S_NumWebPurchases + 1.79260779802864 * 
S_NumWebVisitsMonth + 2.03019700767877 * S_RFMstat + -0.36302320348133 * S_RMntFrq + 
-0.32271271703746 * S_Recency + 1.03191552613762 * S_Teenhome ;
4134456   +   H1x3_5  =     0.20857223520727 * S_AcceptedCmpTotal
4134457   +          +    -0.20096771162452 * S_Age  +     0.34962532991985 * S_Frq
4134458   +          +     1.37548654455856 * S_Income  +     1.56421861140197 *
4134459   +        S_Kidhome  +    -1.14534324749928 * S_Mnt  +     1.19456381083083 *
4134460   +        S_MntFishProducts  +     0.66027175430916 * S_MntFruits
4134461   +          +    -0.93198171949009 * S_MntGoldProds  +    -0.72464830253528 *
4134462   +        S_MntMeatProducts  +     1.02487566206095 * S_MntSweetProducts
4134463   +          +     1.05601020947303 * S_MntWines  +     2.31580499448269 *
4134464   +        S_MonthsAsCustomer  +    -0.72019418879499 * S_NumCatalogPurchases
4134465   +          +     1.64209094349557 * S_NumDealsPurchases
4134466   +          +    -0.38876870460627 * S_NumDistPurchases
4134467   +          +    -0.48559309584971 * S_NumStorePurchases
4134468   +          +     0.21254626353218 * S_NumWebPurchases
4134469   +          +    -0.71484448532542 * S_NumWebVisitsMonth
4134470   +          +     0.02349535084994 * S_RFMstat  +    -0.16176132186427 *
4134471   +        S_RMntFrq  +     0.44893411588775 * S_Recency
4134472   +          +      0.2652212690846 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.20857223520727 * S_AcceptedCmpTotal + -0.20096771162452 * 
S_Age + 0.34962532991985 * S_Frq + 1.37548654455856 * S_Income + 1.56421861140197 * S_Kidhome 
+ -1.14534324749928 * S_Mnt + 1.19456381083083 * S_MntFishProducts + 0.66027175430916 * 
S_MntFruits + -0.93198171949009 * S_MntGoldProds + -0.72464830253528 * S_MntMeatProducts + 
1.02487566206095 * S_MntSweetProducts + 1.05601020947303 * S_MntWines + 2.31580499448269 * 
S_MonthsAsCustomer + -0.72019418879499 * S_NumCatalogPurchases + 1.64209094349557 * 
S_NumDealsPurchases + -0.38876870460627 * S_NumDistPurchases + -0.48559309584971 * 
S_NumStorePurchases + 0.21254626353218 * S_NumWebPurchases + -0.71484448532542 * 
S_NumWebVisitsMonth + 0.02349535084994 * S_RFMstat + -0.16176132186427 * S_RMntFrq + 
0.44893411588775 * S_Recency + 0.2652212690846 * S_Teenhome ;
4134473   +   H1x3_1  = H1x3_1  +    -1.35842958516566 * AcceptedCmp10
4134474   +          +     0.34594436457216 * AcceptedCmp20  +      0.3640777110552 *
4134475   +        AcceptedCmp30  +    -2.65231594293215 * AcceptedCmp40
4134476   +          +    -0.32594395344101 * AcceptedCmp50  +    -0.20731631969028 *
4134477   +        Complain0  +    -0.37562812451995 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -1.35842958516566 * AcceptedCmp10 + 0.34594436457216 * 
AcceptedCmp20 + 0.3640777110552 * AcceptedCmp30 + -2.65231594293215 * AcceptedCmp40 + 
-0.32594395344101 * AcceptedCmp50 + -0.20731631969028 * Complain0 + -0.37562812451995 * 
HigherEducationBinary0 ;
4134478   +   H1x3_2  = H1x3_2  +    -0.29516697471591 * AcceptedCmp10
4134479   +          +     0.12160626453607 * AcceptedCmp20  +    -0.19673071668839 *
4134480   +        AcceptedCmp30  +      0.9679629348873 * AcceptedCmp40
4134481   +          +     0.27607865991675 * AcceptedCmp50  +     0.34210605810889 *
4134482   +        Complain0  +    -0.91955372970801 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.29516697471591 * AcceptedCmp10 + 0.12160626453607 * 
AcceptedCmp20 + -0.19673071668839 * AcceptedCmp30 + 0.9679629348873 * AcceptedCmp40 + 
0.27607865991675 * AcceptedCmp50 + 0.34210605810889 * Complain0 + -0.91955372970801 * 
HigherEducationBinary0 ;
4134483   +   H1x3_3  = H1x3_3  +    -0.64048354977116 * AcceptedCmp10
4134484   +          +     0.71632378156708 * AcceptedCmp20  +     1.49620826236085 *
4134485   +        AcceptedCmp30  +    -0.41927727863342 * AcceptedCmp40
4134486   +          +    -0.74518887123144 * AcceptedCmp50  +     -0.5653895859863 *
4134487   +        Complain0  +     0.49026807979832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.64048354977116 * AcceptedCmp10 + 0.71632378156708 * 
AcceptedCmp20 + 1.49620826236085 * AcceptedCmp30 + -0.41927727863342 * AcceptedCmp40 + 
-0.74518887123144 * AcceptedCmp50 + -0.5653895859863 * Complain0 + 0.49026807979832 * 
HigherEducationBinary0 ;
4134488   +   H1x3_4  = H1x3_4  +    -0.39456977652419 * AcceptedCmp10
4134489   +          +    -0.35607374401334 * AcceptedCmp20  +     0.25403314478809 *
4134490   +        AcceptedCmp30  +    -1.26365534513909 * AcceptedCmp40
4134491   +          +    -0.93574993035227 * AcceptedCmp50  +    -0.01475423275475 *
4134492   +        Complain0  +     0.99152563511102 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.39456977652419 * AcceptedCmp10 + -0.35607374401334 
* AcceptedCmp20 + 0.25403314478809 * AcceptedCmp30 + -1.26365534513909 * AcceptedCmp40 + 
-0.93574993035227 * AcceptedCmp50 + -0.01475423275475 * Complain0 + 0.99152563511102 * 
HigherEducationBinary0 ;
4134493   +   H1x3_5  = H1x3_5  +    -1.26373480748972 * AcceptedCmp10
4134494   +          +     0.14485593883591 * AcceptedCmp20  +     -0.0764980824216 *
4134495   +        AcceptedCmp30  +    -1.03297576023738 * AcceptedCmp40
4134496   +          +    -1.10199278454673 * AcceptedCmp50  +     0.92040879426753 *
4134497   +        Complain0  +     0.19845951543481 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.26373480748972 * AcceptedCmp10 + 0.14485593883591 * 
AcceptedCmp20 + -0.0764980824216 * AcceptedCmp30 + -1.03297576023738 * AcceptedCmp40 + 
-1.10199278454673 * AcceptedCmp50 + 0.92040879426753 * Complain0 + 0.19845951543481 * 
HigherEducationBinary0 ;
4134498   +   H1x3_1  = H1x3_1  +     0.21888802927361 * Education2n_Cycle
4134499   +          +    -1.88729117459232 * EducationBasic  +    -0.23163049582765 *
4134500   +        EducationGraduation  +     0.46887304015863 * EducationMaster
4134501   +          +     1.33953173091973 * Marital_StatusDivorced
4134502   +          +    -0.26253208073262 * Marital_StatusMarried
4134503   +          +    -0.00960552682431 * Marital_StatusSingle
4134504   +          +     1.02851334153667 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.21888802927361 * Education2n_Cycle + 
-1.88729117459232 * EducationBasic + -0.23163049582765 * EducationGraduation + 
0.46887304015863 * EducationMaster + 1.33953173091973 * Marital_StatusDivorced + 
-0.26253208073262 * Marital_StatusMarried + -0.00960552682431 * Marital_StatusSingle + 
1.02851334153667 * Marital_StatusTogether ;
4134505   +   H1x3_2  = H1x3_2  +     2.36701652448958 * Education2n_Cycle
4134506   +          +     0.64894060487321 * EducationBasic  +     -1.2851019467738 *
4134507   +        EducationGraduation  +     1.05325310300372 * EducationMaster
4134508   +          +     1.43150850334311 * Marital_StatusDivorced
4134509   +          +    -0.69239127844934 * Marital_StatusMarried
4134510   +          +     2.08477562471559 * Marital_StatusSingle
4134511   +          +    -1.55945531486837 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 2.36701652448958 * Education2n_Cycle + 
0.64894060487321 * EducationBasic + -1.2851019467738 * EducationGraduation + 1.05325310300372 
* EducationMaster + 1.43150850334311 * Marital_StatusDivorced + -0.69239127844934 * 
Marital_StatusMarried + 2.08477562471559 * Marital_StatusSingle + -1.55945531486837 * 
Marital_StatusTogether ;
4134512   +   H1x3_3  = H1x3_3  +    -0.07588279976612 * Education2n_Cycle
4134513   +          +    -1.60804492005984 * EducationBasic  +     0.15348594453976 *
4134514   +        EducationGraduation  +     1.80436924796338 * EducationMaster
4134515   +          +     1.08387556786168 * Marital_StatusDivorced
4134516   +          +      1.0283506000217 * Marital_StatusMarried
4134517   +          +    -0.87069431107983 * Marital_StatusSingle
4134518   +          +    -0.04455113729262 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.07588279976612 * Education2n_Cycle + 
-1.60804492005984 * EducationBasic + 0.15348594453976 * EducationGraduation + 1.80436924796338 
* EducationMaster + 1.08387556786168 * Marital_StatusDivorced + 1.0283506000217 * 
Marital_StatusMarried + -0.87069431107983 * Marital_StatusSingle + -0.04455113729262 * 
Marital_StatusTogether ;
4134519   +   H1x3_4  = H1x3_4  +    -0.24072826180906 * Education2n_Cycle
4134520   +          +     0.56372511932643 * EducationBasic  +    -1.72914870390939 *
4134521   +        EducationGraduation  +    -1.53859265107051 * EducationMaster
4134522   +          +      -1.347780188307 * Marital_StatusDivorced
4134523   +          +    -0.53911983240372 * Marital_StatusMarried
4134524   +          +     0.22083074159185 * Marital_StatusSingle
4134525   +          +     0.46023807391468 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.24072826180906 * Education2n_Cycle + 
0.56372511932643 * EducationBasic + -1.72914870390939 * EducationGraduation + 
-1.53859265107051 * EducationMaster + -1.347780188307 * Marital_StatusDivorced + 
-0.53911983240372 * Marital_StatusMarried + 0.22083074159185 * Marital_StatusSingle + 
0.46023807391468 * Marital_StatusTogether ;
4134526   +   H1x3_5  = H1x3_5  +    -0.72917301249658 * Education2n_Cycle
4134527   +          +     0.78780526232794 * EducationBasic  +     0.22244378874589 *
4134528   +        EducationGraduation  +      1.6087631135774 * EducationMaster
4134529   +          +     1.46582538311384 * Marital_StatusDivorced
4134530   +          +     0.05256161016002 * Marital_StatusMarried
4134531   +          +    -1.21402967626877 * Marital_StatusSingle
4134532   +          +     0.88645860928281 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -0.72917301249658 * Education2n_Cycle + 
0.78780526232794 * EducationBasic + 0.22244378874589 * EducationGraduation + 1.6087631135774 * 
EducationMaster + 1.46582538311384 * Marital_StatusDivorced + 0.05256161016002 * 
Marital_StatusMarried + -1.21402967626877 * Marital_StatusSingle + 0.88645860928281 * 
Marital_StatusTogether ;
4134533   +   H1x3_1  =     0.88456831875399 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.88456831875399 + H1x3_1 ;
4134534   +   H1x3_2  =    -0.97118571845853 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.97118571845853 + H1x3_2 ;
4134535   +   H1x3_3  =    -0.79264210370105 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.79264210370105 + H1x3_3 ;
4134536   +   H1x3_4  =     0.02838267530757 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.02838267530757 + H1x3_4 ;
4134537   +   H1x3_5  =      0.6575544901332 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.6575544901332 + H1x3_5 ;
4134538   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4134539   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4134540   +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
4134541   +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
4134542   +   H1x3_3  = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_3 = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
4134543   +   H1x3_4  = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
4134544   +   H1x3_5  = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_5 = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
4134545   +END;
MPRINT(EM_DIAGRAM):   END;
4134546   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4134547   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
4134548   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
4134549   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
4134550   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
4134551   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
4134552   +END;
MPRINT(EM_DIAGRAM):   END;
4134553   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4134554   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
4134555   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4134556   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4134557   +   H2x1_1  =    -0.87888588976745 * H1x1_1  +     2.90335871970001 * H1x1_2
4134558   +          +     3.56892082037266 * H1x1_3  +    -2.73992780705083 * H1x1_4
4134559   +          +     1.85087845133324 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.87888588976745 * H1x1_1 + 2.90335871970001 * H1x1_2 + 
3.56892082037266 * H1x1_3 + -2.73992780705083 * H1x1_4 + 1.85087845133324 * H1x1_5 ;
4134560   +   H2x1_2  =    -0.58574259841126 * H1x1_1  +    -0.21734849016798 * H1x1_2
4134561   +          +    -0.25911074181081 * H1x1_3  +    -0.42608313525243 * H1x1_4
4134562   +          +      0.0572264965726 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.58574259841126 * H1x1_1 + -0.21734849016798 * H1x1_2 + 
-0.25911074181081 * H1x1_3 + -0.42608313525243 * H1x1_4 + 0.0572264965726 * H1x1_5 ;
4134563   +   H2x1_3  =     -3.4245103090892 * H1x1_1  +     2.39148442791109 * H1x1_2
4134564   +          +     2.40633993926864 * H1x1_3  +    -0.39116314741561 * H1x1_4
4134565   +          +     1.55940137045446 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -3.4245103090892 * H1x1_1 + 2.39148442791109 * H1x1_2 + 
2.40633993926864 * H1x1_3 + -0.39116314741561 * H1x1_4 + 1.55940137045446 * H1x1_5 ;
4134566   +   H2x1_4  =     4.40552826823228 * H1x1_1  +    -2.22667369285426 * H1x1_2
4134567   +          +    -4.36956996992936 * H1x1_3  +     5.07833758885145 * H1x1_4
4134568   +          +    -3.71745000855391 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 4.40552826823228 * H1x1_1 + -2.22667369285426 * H1x1_2 + 
-4.36956996992936 * H1x1_3 + 5.07833758885145 * H1x1_4 + -3.71745000855391 * H1x1_5 ;
4134569   +   H2x1_1  = H2x1_1  +     2.57417055243767 * H1x2_1
4134570   +          +     0.83648749576123 * H1x2_2  +     0.89390090173338 * H1x2_3
4134571   +          +     0.64981014833304 * H1x2_4  +    -0.52148329192172 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 2.57417055243767 * H1x2_1 + 0.83648749576123 * H1x2_2 
+ 0.89390090173338 * H1x2_3 + 0.64981014833304 * H1x2_4 + -0.52148329192172 * H1x2_5 ;
4134572   +   H2x1_2  = H2x1_2  +      0.0180888989385 * H1x2_1
4134573   +          +    -0.80823823488019 * H1x2_2  +    -0.28763491232907 * H1x2_3
4134574   +          +     0.25846928082637 * H1x2_4  +    -0.90191452174928 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.0180888989385 * H1x2_1 + -0.80823823488019 * H1x2_2 
+ -0.28763491232907 * H1x2_3 + 0.25846928082637 * H1x2_4 + -0.90191452174928 * H1x2_5 ;
4134575   +   H2x1_3  = H2x1_3  +     1.14009879940491 * H1x2_1
4134576   +          +    -0.40787680915084 * H1x2_2  +     0.07284828777988 * H1x2_3
4134577   +          +     0.36049016529857 * H1x2_4  +    -1.18138631855392 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.14009879940491 * H1x2_1 + -0.40787680915084 * H1x2_2 
+ 0.07284828777988 * H1x2_3 + 0.36049016529857 * H1x2_4 + -1.18138631855392 * H1x2_5 ;
4134578   +   H2x1_4  = H2x1_4  +     -0.1178430666715 * H1x2_1
4134579   +          +     2.09065650924536 * H1x2_2  +     1.04148055725421 * H1x2_3
4134580   +          +     0.02606984862898 * H1x2_4  +     0.31973150706209 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.1178430666715 * H1x2_1 + 2.09065650924536 * H1x2_2 
+ 1.04148055725421 * H1x2_3 + 0.02606984862898 * H1x2_4 + 0.31973150706209 * H1x2_5 ;
4134581   +   H2x1_1  = H2x1_1  +     0.37589541636702 * H1x3_1
4134582   +          +    -1.02452495514201 * H1x3_2  +     0.44765211805329 * H1x3_3
4134583   +          +    -1.35647342372032 * H1x3_4  +     -0.6490399229487 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.37589541636702 * H1x3_1 + -1.02452495514201 * H1x3_2 
+ 0.44765211805329 * H1x3_3 + -1.35647342372032 * H1x3_4 + -0.6490399229487 * H1x3_5 ;
4134584   +   H2x1_2  = H2x1_2  +      -1.910747593267 * H1x3_1
4134585   +          +     1.91313714874593 * H1x3_2  +     0.89010950185557 * H1x3_3
4134586   +          +     1.16258612173237 * H1x3_4  +     0.67062728470341 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.910747593267 * H1x3_1 + 1.91313714874593 * H1x3_2 + 
0.89010950185557 * H1x3_3 + 1.16258612173237 * H1x3_4 + 0.67062728470341 * H1x3_5 ;
4134587   +   H2x1_3  = H2x1_3  +    -0.61933600446437 * H1x3_1
4134588   +          +     1.71790550668732 * H1x3_2  +     0.54214423164791 * H1x3_3
4134589   +          +     1.23934237110052 * H1x3_4  +     -0.5426823885329 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.61933600446437 * H1x3_1 + 1.71790550668732 * H1x3_2 
+ 0.54214423164791 * H1x3_3 + 1.23934237110052 * H1x3_4 + -0.5426823885329 * H1x3_5 ;
4134590   +   H2x1_4  = H2x1_4  +     0.63501991890118 * H1x3_1
4134591   +          +     0.52608732282548 * H1x3_2  +     1.05849455171994 * H1x3_3
4134592   +          +    -0.10988994454917 * H1x3_4  +     -0.4296682351699 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.63501991890118 * H1x3_1 + 0.52608732282548 * H1x3_2 
+ 1.05849455171994 * H1x3_3 + -0.10988994454917 * H1x3_4 + -0.4296682351699 * H1x3_5 ;
4134593   +   H2x1_1  =     1.65760855975376 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.65760855975376 + H2x1_1 ;
4134594   +   H2x1_2  =    -1.48092067999918 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.48092067999918 + H2x1_2 ;
4134595   +   H2x1_3  =     0.34293203475136 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.34293203475136 + H2x1_3 ;
4134596   +   H2x1_4  =     2.26730807690838 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.26730807690838 + H2x1_4 ;
4134597   +   H2x1_5  = 0;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0;
4134598   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 );
4134599   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4134600   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
4134601   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
4134602   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
4134603   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
4134604   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
4134605   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
4134606   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
4134607   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
4134608   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
4134609   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
4134610   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
4134611   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
4134612   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
4134613   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
4134614   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
4134615   +END;
MPRINT(EM_DIAGRAM):   END;
4134616   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4134617   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
4134618   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
4134619   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
4134620   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
4134621   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
4134622   +END;
MPRINT(EM_DIAGRAM):   END;
4134623   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4134624   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
4134625   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4134626   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4134627   +   H2x2_1  =     0.35487648363729 * H1x1_1  +    -1.23352844324567 * H1x1_2
4134628   +          +      0.4867158313468 * H1x1_3  +    -1.47292809903753 * H1x1_4
4134629   +          +    -1.00833023262854 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.35487648363729 * H1x1_1 + -1.23352844324567 * H1x1_2 + 
0.4867158313468 * H1x1_3 + -1.47292809903753 * H1x1_4 + -1.00833023262854 * H1x1_5 ;
4134630   +   H2x2_2  =     1.32087363094324 * H1x1_1  +     0.82502983555141 * H1x1_2
4134631   +          +    -0.68621854188154 * H1x1_3  +     1.98219533394448 * H1x1_4
4134632   +          +     0.24099626891211 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.32087363094324 * H1x1_1 + 0.82502983555141 * H1x1_2 + 
-0.68621854188154 * H1x1_3 + 1.98219533394448 * H1x1_4 + 0.24099626891211 * H1x1_5 ;
4134633   +   H2x2_3  =     1.19516705715854 * H1x1_1  +    -0.20476587977538 * H1x1_2
4134634   +          +    -2.69435199012833 * H1x1_3  +      1.1085509496662 * H1x1_4
4134635   +          +    -0.95845782501191 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.19516705715854 * H1x1_1 + -0.20476587977538 * H1x1_2 + 
-2.69435199012833 * H1x1_3 + 1.1085509496662 * H1x1_4 + -0.95845782501191 * H1x1_5 ;
4134636   +   H2x2_4  =     0.80435775915951 * H1x1_1  +     1.81751702761299 * H1x1_2
4134637   +          +     0.07722876002556 * H1x1_3  +    -0.41957373993392 * H1x1_4
4134638   +          +    -1.39341356039439 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.80435775915951 * H1x1_1 + 1.81751702761299 * H1x1_2 + 
0.07722876002556 * H1x1_3 + -0.41957373993392 * H1x1_4 + -1.39341356039439 * H1x1_5 ;
4134639   +   H2x2_1  = H2x2_1  +     0.84230993439042 * H1x2_1
4134640   +          +      1.4931541058726 * H1x2_2  +     0.29113033361443 * H1x2_3
4134641   +          +     0.58117372781043 * H1x2_4  +     0.21183820652904 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.84230993439042 * H1x2_1 + 1.4931541058726 * H1x2_2 + 
0.29113033361443 * H1x2_3 + 0.58117372781043 * H1x2_4 + 0.21183820652904 * H1x2_5 ;
4134642   +   H2x2_2  = H2x2_2  +     0.27560928585641 * H1x2_1
4134643   +          +     1.00352880610395 * H1x2_2  +     1.86342723621296 * H1x2_3
4134644   +          +     0.68698974361713 * H1x2_4  +     1.62443344475228 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.27560928585641 * H1x2_1 + 1.00352880610395 * H1x2_2 
+ 1.86342723621296 * H1x2_3 + 0.68698974361713 * H1x2_4 + 1.62443344475228 * H1x2_5 ;
4134645   +   H2x2_3  = H2x2_3  +     0.59362453125998 * H1x2_1
4134646   +          +     2.21434215943762 * H1x2_2  +     0.00697391860503 * H1x2_3
4134647   +          +     0.52298455671378 * H1x2_4  +    -1.36319907473823 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.59362453125998 * H1x2_1 + 2.21434215943762 * H1x2_2 
+ 0.00697391860503 * H1x2_3 + 0.52298455671378 * H1x2_4 + -1.36319907473823 * H1x2_5 ;
4134648   +   H2x2_4  = H2x2_4  +     0.87949581153547 * H1x2_1
4134649   +          +     0.52867495476492 * H1x2_2  +    -0.30823702050003 * H1x2_3
4134650   +          +     1.30732992472712 * H1x2_4  +    -0.93335113891701 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.87949581153547 * H1x2_1 + 0.52867495476492 * H1x2_2 
+ -0.30823702050003 * H1x2_3 + 1.30732992472712 * H1x2_4 + -0.93335113891701 * H1x2_5 ;
4134651   +   H2x2_1  = H2x2_1  +    -0.18546949662618 * H1x3_1
4134652   +          +     0.12449215628678 * H1x3_2  +    -0.06904718348363 * H1x3_3
4134653   +          +     1.64236464165721 * H1x3_4  +      0.6073731959408 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.18546949662618 * H1x3_1 + 0.12449215628678 * H1x3_2 
+ -0.06904718348363 * H1x3_3 + 1.64236464165721 * H1x3_4 + 0.6073731959408 * H1x3_5 ;
4134654   +   H2x2_2  = H2x2_2  +    -0.65604349417832 * H1x3_1
4134655   +          +    -0.36719791640957 * H1x3_2  +     0.13320126120657 * H1x3_3
4134656   +          +     0.18159276955134 * H1x3_4  +     2.58327741985853 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.65604349417832 * H1x3_1 + -0.36719791640957 * 
H1x3_2 + 0.13320126120657 * H1x3_3 + 0.18159276955134 * H1x3_4 + 2.58327741985853 * H1x3_5 ;
4134657   +   H2x2_3  = H2x2_3  +     0.91638163706166 * H1x3_1
4134658   +          +    -0.47067218080648 * H1x3_2  +    -1.48968450897101 * H1x3_3
4134659   +          +     1.31187282169231 * H1x3_4  +     -0.2874693423684 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.91638163706166 * H1x3_1 + -0.47067218080648 * H1x3_2 
+ -1.48968450897101 * H1x3_3 + 1.31187282169231 * H1x3_4 + -0.2874693423684 * H1x3_5 ;
4134660   +   H2x2_4  = H2x2_4  +     0.53560065193109 * H1x3_1
4134661   +          +    -1.15405943087628 * H1x3_2  +     0.12331054856276 * H1x3_3
4134662   +          +     -1.4665768024733 * H1x3_4  +    -0.08015819920106 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.53560065193109 * H1x3_1 + -1.15405943087628 * H1x3_2 
+ 0.12331054856276 * H1x3_3 + -1.4665768024733 * H1x3_4 + -0.08015819920106 * H1x3_5 ;
4134663   +   H2x2_1  =     1.14294113680807 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.14294113680807 + H2x2_1 ;
4134664   +   H2x2_2  =     0.23029998902452 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.23029998902452 + H2x2_2 ;
4134665   +   H2x2_3  =     0.09214575938404 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.09214575938404 + H2x2_3 ;
4134666   +   H2x2_4  =    -1.18247593420886 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -1.18247593420886 + H2x2_4 ;
4134667   +   H2x2_5  = 0;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0;
4134668   +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 );
4134669   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4134670   +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
4134671   +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
4134672   +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
4134673   +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
4134674   +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
4134675   +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
4134676   +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
4134677   +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
4134678   +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
4134679   +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
4134680   +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
4134681   +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
4134682   +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
4134683   +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
4134684   +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
4134685   +END;
MPRINT(EM_DIAGRAM):   END;
4134686   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4134687   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
4134688   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
4134689   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
4134690   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
4134691   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
4134692   +END;
MPRINT(EM_DIAGRAM):   END;
4134693   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4134694   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
4134695   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4134696   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4134697   +   H3x1_1  =     0.38781845364667 * H2x1_1  +    -1.29333236344932 * H2x1_2
4134698   +          +    -0.39452648844304 * H2x1_3  +    -1.74269898056816 * H2x1_4
4134699   +          +     0.80663208970159 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.38781845364667 * H2x1_1 + -1.29333236344932 * H2x1_2 + 
-0.39452648844304 * H2x1_3 + -1.74269898056816 * H2x1_4 + 0.80663208970159 * H2x1_5 ;
4134700   +   H3x1_2  =     3.42138045838852 * H2x1_1  +    -2.53755815247586 * H2x1_2
4134701   +          +     1.21718290783021 * H2x1_3  +    -5.59742312960418 * H2x1_4
4134702   +          +     0.93331767575635 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 3.42138045838852 * H2x1_1 + -2.53755815247586 * H2x1_2 + 
1.21718290783021 * H2x1_3 + -5.59742312960418 * H2x1_4 + 0.93331767575635 * H2x1_5 ;
4134703   +   H3x1_3  =      0.3066875685513 * H2x1_1  +     0.06212172151661 * H2x1_2
4134704   +          +     0.54975837436313 * H2x1_3  +    -2.01758242649336 * H2x1_4
4134705   +          +     -1.5405169528484 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.3066875685513 * H2x1_1 + 0.06212172151661 * H2x1_2 + 
0.54975837436313 * H2x1_3 + -2.01758242649336 * H2x1_4 + -1.5405169528484 * H2x1_5 ;
4134706   +   H3x1_4  =     0.75238654454663 * H2x1_1  +      0.8605688517794 * H2x1_2
4134707   +          +    -1.18675726977521 * H2x1_3  +    -0.23106123144614 * H2x1_4
4134708   +          +    -0.26022301590207 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.75238654454663 * H2x1_1 + 0.8605688517794 * H2x1_2 + 
-1.18675726977521 * H2x1_3 + -0.23106123144614 * H2x1_4 + -0.26022301590207 * H2x1_5 ;
4134709   +   H3x1_1  = H3x1_1  +     -1.9857802180333 * H2x2_1
4134710   +          +    -1.83746541265988 * H2x2_2  +    -0.19991218509663 * H2x2_3
4134711   +          +    -1.16358880876987 * H2x2_4  +     0.72072728861384 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -1.9857802180333 * H2x2_1 + -1.83746541265988 * H2x2_2 
+ -0.19991218509663 * H2x2_3 + -1.16358880876987 * H2x2_4 + 0.72072728861384 * H2x2_5 ;
4134712   +   H3x1_2  = H3x1_2  +     0.96937540396367 * H2x2_1
4134713   +          +    -0.36649624165623 * H2x2_2  +     0.89618563330616 * H2x2_3
4134714   +          +    -0.84224721075989 * H2x2_4  +     0.43309698013395 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.96937540396367 * H2x2_1 + -0.36649624165623 * H2x2_2 
+ 0.89618563330616 * H2x2_3 + -0.84224721075989 * H2x2_4 + 0.43309698013395 * H2x2_5 ;
4134715   +   H3x1_3  = H3x1_3  +    -0.90225214765586 * H2x2_1
4134716   +          +     0.02136319386846 * H2x2_2  +    -0.46868394918483 * H2x2_3
4134717   +          +     0.56005845701528 * H2x2_4  +     -1.2510120440755 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.90225214765586 * H2x2_1 + 0.02136319386846 * H2x2_2 
+ -0.46868394918483 * H2x2_3 + 0.56005845701528 * H2x2_4 + -1.2510120440755 * H2x2_5 ;
4134718   +   H3x1_4  = H3x1_4  +    -0.50993520854009 * H2x2_1
4134719   +          +    -2.07093806498525 * H2x2_2  +      0.4129198676448 * H2x2_3
4134720   +          +     0.26049404756746 * H2x2_4  +     2.51376895456424 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + -0.50993520854009 * H2x2_1 + -2.07093806498525 * 
H2x2_2 + 0.4129198676448 * H2x2_3 + 0.26049404756746 * H2x2_4 + 2.51376895456424 * H2x2_5 ;
4134721   +   H3x1_1  =    -0.83299285935592 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.83299285935592 + H3x1_1 ;
4134722   +   H3x1_2  =     1.30330978853872 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 1.30330978853872 + H3x1_2 ;
4134723   +   H3x1_3  =    -2.12788819064089 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -2.12788819064089 + H3x1_3 ;
4134724   +   H3x1_4  =    -2.20240058017016 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -2.20240058017016 + H3x1_4 ;
4134725   +   H3x1_5  = 0;
MPRINT(EM_DIAGRAM):   H3x1_5 = 0;
4134726   +   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 );
4134727   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4134728   +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
4134729   +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
4134730   +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
4134731   +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
4134732   +   H3x1_3  = EXP(H3x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_3 = EXP(H3x1_3 - _MAX_);
4134733   +   _SUM_ = _SUM_ + H3x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_3 ;
4134734   +   H3x1_4  = EXP(H3x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_4 = EXP(H3x1_4 - _MAX_);
4134735   +   _SUM_ = _SUM_ + H3x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_4 ;
4134736   +   H3x1_5  = EXP(H3x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_5 = EXP(H3x1_5 - _MAX_);
4134737   +   _SUM_ = _SUM_ + H3x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_5 ;
4134738   +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
4134739   +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
4134740   +   H3x1_3  = H3x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 / _SUM_;
4134741   +   H3x1_4  = H3x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 / _SUM_;
4134742   +   H3x1_5  = H3x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 / _SUM_;
4134743   +END;
MPRINT(EM_DIAGRAM):   END;
4134744   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4134745   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
4134746   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
4134747   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
4134748   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
4134749   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
4134750   +END;
MPRINT(EM_DIAGRAM):   END;
4134751   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4134752   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4134753   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4134754   +
4134755   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
4134756   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
4134757   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4134758   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
4134759   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
4134760   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4134761   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
4134762   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4134763   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4134764   +end;
MPRINT(EM_DIAGRAM):   end;
4134765   +else do;
MPRINT(EM_DIAGRAM):   else do;
4134766   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
4134767   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
4134768   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
4134769   +   end;
MPRINT(EM_DIAGRAM):   end;
4134770   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
4134771   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
4134772   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
4134773   +   end;
MPRINT(EM_DIAGRAM):   end;
4134774   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4134775   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4134776   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4134777   +   end;
MPRINT(EM_DIAGRAM):   end;
4134778   +end;
MPRINT(EM_DIAGRAM):   end;
4134779   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4134780   +   P_DepVar1  =     0.02793808059597 * H3x1_1  +    -8.41365271594755 * H3x1_2
4134781   +          +    -0.18933524733979 * H3x1_3  +     1.61020422729446 * H3x1_4
4134782   +          +     7.51494112828021 * H3x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.02793808059597 * H3x1_1 + -8.41365271594755 * H3x1_2 + 
-0.18933524733979 * H3x1_3 + 1.61020422729446 * H3x1_4 + 7.51494112828021 * H3x1_5 ;
4134783   +   P_DepVar1  =     0.83962115399384 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.83962115399384 + P_DepVar1 ;
4134784   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4134785   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4134786   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4134787   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4134788   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4134789   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4134790   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4134791   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4134792   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4134793   +END;
MPRINT(EM_DIAGRAM):   END;
4134794   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4134795   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4134796   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4134797   +END;
MPRINT(EM_DIAGRAM):   END;
4134798   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4134799   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4134800   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4134801   +END;
MPRINT(EM_DIAGRAM):   END;
4134802   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
4134803   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
4134804   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
4134805   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
4134806   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
4134807   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
4134808   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
4134809   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4134810   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4134811   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4134812   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4134813   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4134814   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4134815   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4134816   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4134817   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4134818   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4134819   +END;
MPRINT(EM_DIAGRAM):   END;
4134820   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4134821   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4134822   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4134823   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
4134824   +* Renaming variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural10;
4134825   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4134826   +* Renaming Posterior variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural10;
4134827   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4134828   +drop AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar1;
4134829   +AutoNeural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar1 = P_DepVar1;
4134830   +drop AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar0;
4134831   +AutoNeural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar0 = P_DepVar0;
4134832   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4134833   +* Renaming Into variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural10;
4134834   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4134835   +length AutoNeural10_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural10_I_DepVar $32;
4134836   +drop AutoNeural10_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_I_DepVar;
4134837   +AutoNeural10_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural10_I_DepVar = I_DepVar;
4134838   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4134839   +* Renaming _WARN_ variable for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural10;
4134840   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4134841   +length AutoNeural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural10_WARN_ $4;
4134842   +drop AutoNeural10_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_WARN_;
4134843   +AutoNeural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural10_WARN_ = _WARN_;
4134844   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4134845   +* Ensmbl38: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Scoring Code of model 5 of 7;
4134846   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4134847   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4134848   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
4134849   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
4134850   +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
4134851   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4134852   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4134853   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4134854   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4134855   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4134856   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4134857   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4134858   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4134859   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4134860   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4134861   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4134862   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4134863   +LENGTH _WARN_ $4
4134864   +      F_DepVar  $ 12
4134865   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
4134866   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4134867   +
4134868   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4134869   +
4134870   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4134871   +
4134872   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4134873   +
4134874   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4134875   +
4134876   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4134877   +
4134878   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4134879   +
4134880   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4134881   +
4134882   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4134883   +
4134884   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4134885   +
4134886   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4134887   +
4134888   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4134889   +
4134890   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4134891   +
4134892   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4134893   +
4134894   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4134895   +
4134896   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4134897   +
4134898   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4134899   +
4134900   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4134901   +
4134902   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4134903   +
4134904   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4134905   +
4134906   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4134907   +
4134908   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4134909   +
4134910   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4134911   +
4134912   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4134913   +
4134914   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4134915   +
4134916   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4134917   +
4134918   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4134919   +
4134920   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4134921   +
4134922   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4134923   +
4134924   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4134925   +
4134926   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4134927   +
4134928   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4134929   +
4134930   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4134931   +
4134932   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4134933   +
4134934   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4134935   +
4134936   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4134937   +
4134938   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4134939   +
4134940   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4134941   +
4134942   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4134943   +
4134944   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4134945   +
4134946   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
4134947   +
4134948   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
4134949   +
4134950   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4134951   +
4134952   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4134953   +
4134954   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4134955   +
4134956   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4134957   +
4134958   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
4134959   +
4134960   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4134961   +
4134962   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
4134963   +
4134964   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4134965   +
4134966   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4134967   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4134968   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4134969   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4134970   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4134971   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4134972   +end;
MPRINT(EM_DIAGRAM):   end;
4134973   +else do;
MPRINT(EM_DIAGRAM):   else do;
4134974   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4134975   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4134976   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4134977   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4134978   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4134979   +   end;
MPRINT(EM_DIAGRAM):   end;
4134980   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4134981   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4134982   +   end;
MPRINT(EM_DIAGRAM):   end;
4134983   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4134984   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4134985   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4134986   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4134987   +   end;
MPRINT(EM_DIAGRAM):   end;
4134988   +end;
MPRINT(EM_DIAGRAM):   end;
4134989   +
4134990   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4134991   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4134992   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4134993   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4134994   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4134995   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4134996   +end;
MPRINT(EM_DIAGRAM):   end;
4134997   +else do;
MPRINT(EM_DIAGRAM):   else do;
4134998   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4134999   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4135000   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4135001   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4135002   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4135003   +   end;
MPRINT(EM_DIAGRAM):   end;
4135004   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4135005   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4135006   +   end;
MPRINT(EM_DIAGRAM):   end;
4135007   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4135008   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4135009   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4135010   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4135011   +   end;
MPRINT(EM_DIAGRAM):   end;
4135012   +end;
MPRINT(EM_DIAGRAM):   end;
4135013   +
4135014   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4135015   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4135016   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4135017   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4135018   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4135019   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4135020   +end;
MPRINT(EM_DIAGRAM):   end;
4135021   +else do;
MPRINT(EM_DIAGRAM):   else do;
4135022   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4135023   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4135024   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4135025   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4135026   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4135027   +   end;
MPRINT(EM_DIAGRAM):   end;
4135028   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4135029   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4135030   +   end;
MPRINT(EM_DIAGRAM):   end;
4135031   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4135032   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4135033   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4135034   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4135035   +   end;
MPRINT(EM_DIAGRAM):   end;
4135036   +end;
MPRINT(EM_DIAGRAM):   end;
4135037   +
4135038   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4135039   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4135040   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4135041   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4135042   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4135043   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4135044   +end;
MPRINT(EM_DIAGRAM):   end;
4135045   +else do;
MPRINT(EM_DIAGRAM):   else do;
4135046   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4135047   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4135048   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4135049   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4135050   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4135051   +   end;
MPRINT(EM_DIAGRAM):   end;
4135052   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4135053   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4135054   +   end;
MPRINT(EM_DIAGRAM):   end;
4135055   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4135056   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4135057   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4135058   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4135059   +   end;
MPRINT(EM_DIAGRAM):   end;
4135060   +end;
MPRINT(EM_DIAGRAM):   end;
4135061   +
4135062   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4135063   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4135064   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4135065   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4135066   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4135067   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4135068   +end;
MPRINT(EM_DIAGRAM):   end;
4135069   +else do;
MPRINT(EM_DIAGRAM):   else do;
4135070   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4135071   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4135072   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4135073   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4135074   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4135075   +   end;
MPRINT(EM_DIAGRAM):   end;
4135076   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4135077   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4135078   +   end;
MPRINT(EM_DIAGRAM):   end;
4135079   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4135080   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4135081   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4135082   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4135083   +   end;
MPRINT(EM_DIAGRAM):   end;
4135084   +end;
MPRINT(EM_DIAGRAM):   end;
4135085   +
4135086   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4135087   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4135088   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4135089   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4135090   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4135091   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4135092   +end;
MPRINT(EM_DIAGRAM):   end;
4135093   +else do;
MPRINT(EM_DIAGRAM):   else do;
4135094   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4135095   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4135096   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4135097   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4135098   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4135099   +   end;
MPRINT(EM_DIAGRAM):   end;
4135100   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4135101   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4135102   +   end;
MPRINT(EM_DIAGRAM):   end;
4135103   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4135104   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4135105   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4135106   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4135107   +   end;
MPRINT(EM_DIAGRAM):   end;
4135108   +end;
MPRINT(EM_DIAGRAM):   end;
4135109   +
4135110   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4135111   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4135112   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4135113   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4135114   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4135115   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4135116   +end;
MPRINT(EM_DIAGRAM):   end;
4135117   +else do;
MPRINT(EM_DIAGRAM):   else do;
4135118   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4135119   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4135120   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4135121   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4135122   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4135123   +   end;
MPRINT(EM_DIAGRAM):   end;
4135124   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4135125   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4135126   +   end;
MPRINT(EM_DIAGRAM):   end;
4135127   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4135128   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4135129   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4135130   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4135131   +   end;
MPRINT(EM_DIAGRAM):   end;
4135132   +end;
MPRINT(EM_DIAGRAM):   end;
4135133   +
4135134   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4135135   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
4135136   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4135137   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4135138   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4135139   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4135140   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4135141   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4135142   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4135143   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4135144   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4135145   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4135146   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4135147   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4135148   +end;
MPRINT(EM_DIAGRAM):   end;
4135149   +else do;
MPRINT(EM_DIAGRAM):   else do;
4135150   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4135151   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4135152   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4135153   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4135154   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4135155   +   end;
MPRINT(EM_DIAGRAM):   end;
4135156   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4135157   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4135158   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4135159   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4135160   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4135161   +   end;
MPRINT(EM_DIAGRAM):   end;
4135162   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4135163   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4135164   +   end;
MPRINT(EM_DIAGRAM):   end;
4135165   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4135166   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4135167   +   end;
MPRINT(EM_DIAGRAM):   end;
4135168   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4135169   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4135170   +   end;
MPRINT(EM_DIAGRAM):   end;
4135171   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4135172   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4135173   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4135174   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4135175   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4135176   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4135177   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4135178   +   end;
MPRINT(EM_DIAGRAM):   end;
4135179   +end;
MPRINT(EM_DIAGRAM):   end;
4135180   +
4135181   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4135182   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4135183   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
4135184   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4135185   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4135186   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4135187   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4135188   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4135189   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4135190   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4135191   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4135192   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4135193   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4135194   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4135195   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4135196   +end;
MPRINT(EM_DIAGRAM):   end;
4135197   +else do;
MPRINT(EM_DIAGRAM):   else do;
4135198   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4135199   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4135200   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4135201   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4135202   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4135203   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4135204   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4135205   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4135206   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4135207   +         end;
MPRINT(EM_DIAGRAM):   end;
4135208   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4135209   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4135210   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4135211   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4135212   +            end;
MPRINT(EM_DIAGRAM):   end;
4135213   +         end;
MPRINT(EM_DIAGRAM):   end;
4135214   +      end;
MPRINT(EM_DIAGRAM):   end;
4135215   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4135216   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4135217   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4135218   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4135219   +         end;
MPRINT(EM_DIAGRAM):   end;
4135220   +      end;
MPRINT(EM_DIAGRAM):   end;
4135221   +   end;
MPRINT(EM_DIAGRAM):   end;
4135222   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4135223   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4135224   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4135225   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4135226   +      end;
MPRINT(EM_DIAGRAM):   end;
4135227   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4135228   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4135229   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4135230   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4135231   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4135232   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4135233   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4135234   +         end;
MPRINT(EM_DIAGRAM):   end;
4135235   +      end;
MPRINT(EM_DIAGRAM):   end;
4135236   +   end;
MPRINT(EM_DIAGRAM):   end;
4135237   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4135238   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4135239   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4135240   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4135241   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4135242   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4135243   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4135244   +   end;
MPRINT(EM_DIAGRAM):   end;
4135245   +end;
MPRINT(EM_DIAGRAM):   end;
4135246   +
4135247   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4135248   +*** Checking missing input Interval
4135249   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4135250   +
4135251   +IF NMISS(
4135252   +   AcceptedCmpTotal ,
4135253   +   Age ,
4135254   +   Frq ,
4135255   +   Income ,
4135256   +   Kidhome ,
4135257   +   Mnt ,
4135258   +   MntFishProducts ,
4135259   +   MntFruits ,
4135260   +   MntGoldProds ,
4135261   +   MntMeatProducts ,
4135262   +   MntSweetProducts ,
4135263   +   MntWines ,
4135264   +   MonthsAsCustomer ,
4135265   +   NumCatalogPurchases ,
4135266   +   NumDealsPurchases ,
4135267   +   NumDistPurchases ,
4135268   +   NumStorePurchases ,
4135269   +   NumWebPurchases ,
4135270   +   NumWebVisitsMonth ,
4135271   +   RFMstat ,
4135272   +   RMntFrq ,
4135273   +   Recency ,
4135274   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
4135275   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4135276   +
4135277   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4135278   +END;
MPRINT(EM_DIAGRAM):   END;
4135279   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4135280   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4135281   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4135282   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4135283   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4135284   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
4135285   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4135286   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4135287   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4135288   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4135289   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4135290   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4135291   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
4135292   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4135293   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4135294   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4135295   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4135296   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
4135297   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4135298   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
4135299   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4135300   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4135301   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
4135302   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4135303   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
4135304   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4135305   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
4135306   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4135307   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
4135308   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4135309   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
4135310   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4135311   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
4135312   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4135313   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
4135314   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4135315   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4135316   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4135317   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4135318   +END;
MPRINT(EM_DIAGRAM):   END;
4135319   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4135320   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4135321   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4135322   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
4135323   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4135324   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4135325   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4135326   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4135327   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4135328   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4135329   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4135330   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4135331   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4135332   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4135333   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4135334   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4135335   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
4135336   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4135337   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4135338   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4135339   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4135340   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4135341   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
4135342   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4135343   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4135344   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
4135345   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4135346   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4135347   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
4135348   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4135349   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4135350   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4135351   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4135352   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
4135353   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4135354   +   ELSE S_NumCatalogPurchases
4135355   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4135356   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
4135357   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4135358   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4135359   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
4135360   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4135361   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4135362   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
4135363   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4135364   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4135365   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
4135366   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4135367   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4135368   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
4135369   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4135370   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4135371   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
4135372   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4135373   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4135374   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4135375   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4135376   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4135377   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4135378   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4135379   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4135380   +END;
MPRINT(EM_DIAGRAM):   END;
4135381   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4135382   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4135383   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4135384   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4135385   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4135386   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4135387   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4135388   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4135389   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4135390   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4135391   +   H1x1_1  =    -1.01373445510498 * S_AcceptedCmpTotal
4135392   +          +     0.33447979473871 * S_Age  +    -0.49864038088294 * S_Frq
4135393   +          +     0.31694253224638 * S_Income  +    -0.88502516255759 *
4135394   +        S_Kidhome  +    -0.95839165156922 * S_Mnt  +     1.08690890979971 *
4135395   +        S_MntFishProducts  +     0.21350737967446 * S_MntFruits
4135396   +          +     0.07347211887091 * S_MntGoldProds  +    -4.25839540508751 *
4135397   +        S_MntMeatProducts  +    -0.18409636621761 * S_MntSweetProducts
4135398   +          +     0.92254071667819 * S_MntWines  +     0.17286447654032 *
4135399   +        S_MonthsAsCustomer  +    -1.64446119745791 * S_NumCatalogPurchases
4135400   +          +    -1.14704878034134 * S_NumDealsPurchases
4135401   +          +    -0.17763404274659 * S_NumDistPurchases
4135402   +          +     0.08894400267969 * S_NumStorePurchases
4135403   +          +     0.59283747891957 * S_NumWebPurchases
4135404   +          +     0.85268274682505 * S_NumWebVisitsMonth
4135405   +          +    -0.43035426151546 * S_RFMstat  +     0.52915289749814 *
4135406   +        S_RMntFrq  +    -1.22871580072103 * S_Recency
4135407   +          +    -0.42049179704691 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.01373445510498 * S_AcceptedCmpTotal + 0.33447979473871 * 
S_Age + -0.49864038088294 * S_Frq + 0.31694253224638 * S_Income + -0.88502516255759 * 
S_Kidhome + -0.95839165156922 * S_Mnt + 1.08690890979971 * S_MntFishProducts + 
0.21350737967446 * S_MntFruits + 0.07347211887091 * S_MntGoldProds + -4.25839540508751 * 
S_MntMeatProducts + -0.18409636621761 * S_MntSweetProducts + 0.92254071667819 * S_MntWines + 
0.17286447654032 * S_MonthsAsCustomer + -1.64446119745791 * S_NumCatalogPurchases + 
-1.14704878034134 * S_NumDealsPurchases + -0.17763404274659 * S_NumDistPurchases + 
0.08894400267969 * S_NumStorePurchases + 0.59283747891957 * S_NumWebPurchases + 
0.85268274682505 * S_NumWebVisitsMonth + -0.43035426151546 * S_RFMstat + 0.52915289749814 * 
S_RMntFrq + -1.22871580072103 * S_Recency + -0.42049179704691 * S_Teenhome ;
4135408   +   H1x1_2  =    -0.17196520392875 * S_AcceptedCmpTotal
4135409   +          +     0.09368836975829 * S_Age  +     -0.2079821803313 * S_Frq
4135410   +          +    -0.59508480939905 * S_Income  +     0.34485068405931 *
4135411   +        S_Kidhome  +     0.68503953220301 * S_Mnt  +    -0.41832366462675 *
4135412   +        S_MntFishProducts  +      0.3374808822635 * S_MntFruits
4135413   +          +     0.41521872138137 * S_MntGoldProds  +     1.55234986522641 *
4135414   +        S_MntMeatProducts  +     0.17336981388128 * S_MntSweetProducts
4135415   +          +    -0.03736062165339 * S_MntWines  +     0.20414742233604 *
4135416   +        S_MonthsAsCustomer  +    -1.29756795361717 * S_NumCatalogPurchases
4135417   +          +    -0.80841566068716 * S_NumDealsPurchases
4135418   +          +    -0.17995640033768 * S_NumDistPurchases
4135419   +          +     0.00713417460936 * S_NumStorePurchases
4135420   +          +     0.57881024323076 * S_NumWebPurchases
4135421   +          +    -1.35134224257365 * S_NumWebVisitsMonth
4135422   +          +     0.63440441349443 * S_RFMstat  +      0.7029589919795 *
4135423   +        S_RMntFrq  +     1.16978656262499 * S_Recency
4135424   +          +     0.22916564304766 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.17196520392875 * S_AcceptedCmpTotal + 0.09368836975829 * 
S_Age + -0.2079821803313 * S_Frq + -0.59508480939905 * S_Income + 0.34485068405931 * S_Kidhome 
+ 0.68503953220301 * S_Mnt + -0.41832366462675 * S_MntFishProducts + 0.3374808822635 * 
S_MntFruits + 0.41521872138137 * S_MntGoldProds + 1.55234986522641 * S_MntMeatProducts + 
0.17336981388128 * S_MntSweetProducts + -0.03736062165339 * S_MntWines + 0.20414742233604 * 
S_MonthsAsCustomer + -1.29756795361717 * S_NumCatalogPurchases + -0.80841566068716 * 
S_NumDealsPurchases + -0.17995640033768 * S_NumDistPurchases + 0.00713417460936 * 
S_NumStorePurchases + 0.57881024323076 * S_NumWebPurchases + -1.35134224257365 * 
S_NumWebVisitsMonth + 0.63440441349443 * S_RFMstat + 0.7029589919795 * S_RMntFrq + 
1.16978656262499 * S_Recency + 0.22916564304766 * S_Teenhome ;
4135425   +   H1x1_3  =     1.25968793568007 * S_AcceptedCmpTotal
4135426   +          +     0.16058002256905 * S_Age  +    -1.00283978743671 * S_Frq
4135427   +          +     0.80202770811665 * S_Income  +     -0.7384690128283 *
4135428   +        S_Kidhome  +      0.6320116033322 * S_Mnt  +    -0.48862240567237 *
4135429   +        S_MntFishProducts  +     0.26477442063044 * S_MntFruits
4135430   +          +       0.434753861356 * S_MntGoldProds  +     3.54637875222405 *
4135431   +        S_MntMeatProducts  +    -0.09532877173293 * S_MntSweetProducts
4135432   +          +    -0.60614222423624 * S_MntWines  +     0.06807192728487 *
4135433   +        S_MonthsAsCustomer  +     0.45280110551612 * S_NumCatalogPurchases
4135434   +          +     0.57891364118717 * S_NumDealsPurchases
4135435   +          +    -0.31024556838688 * S_NumDistPurchases
4135436   +          +    -1.48708542986704 * S_NumStorePurchases
4135437   +          +    -0.93009875249206 * S_NumWebPurchases
4135438   +          +     2.01900039122935 * S_NumWebVisitsMonth
4135439   +          +     0.50006472616383 * S_RFMstat  +    -1.16854599018819 *
4135440   +        S_RMntFrq  +    -2.30414631760388 * S_Recency
4135441   +          +    -0.64226055895142 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.25968793568007 * S_AcceptedCmpTotal + 0.16058002256905 * 
S_Age + -1.00283978743671 * S_Frq + 0.80202770811665 * S_Income + -0.7384690128283 * S_Kidhome 
+ 0.6320116033322 * S_Mnt + -0.48862240567237 * S_MntFishProducts + 0.26477442063044 * 
S_MntFruits + 0.434753861356 * S_MntGoldProds + 3.54637875222405 * S_MntMeatProducts + 
-0.09532877173293 * S_MntSweetProducts + -0.60614222423624 * S_MntWines + 0.06807192728487 * 
S_MonthsAsCustomer + 0.45280110551612 * S_NumCatalogPurchases + 0.57891364118717 * 
S_NumDealsPurchases + -0.31024556838688 * S_NumDistPurchases + -1.48708542986704 * 
S_NumStorePurchases + -0.93009875249206 * S_NumWebPurchases + 2.01900039122935 * 
S_NumWebVisitsMonth + 0.50006472616383 * S_RFMstat + -1.16854599018819 * S_RMntFrq + 
-2.30414631760388 * S_Recency + -0.64226055895142 * S_Teenhome ;
4135442   +   H1x1_1  = H1x1_1  +     0.90039925512906 * AcceptedCmp10
4135443   +          +    -0.47386683647261 * AcceptedCmp20  +    -0.71163968851557 *
4135444   +        AcceptedCmp30  +    -1.10005761198573 * AcceptedCmp40
4135445   +          +     0.81604940024858 * AcceptedCmp50  +    -0.03266697009221 *
4135446   +        Complain0  +     0.45877513475435 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.90039925512906 * AcceptedCmp10 + -0.47386683647261 * 
AcceptedCmp20 + -0.71163968851557 * AcceptedCmp30 + -1.10005761198573 * AcceptedCmp40 + 
0.81604940024858 * AcceptedCmp50 + -0.03266697009221 * Complain0 + 0.45877513475435 * 
HigherEducationBinary0 ;
4135447   +   H1x1_2  = H1x1_2  +    -0.09498245462104 * AcceptedCmp10
4135448   +          +     -0.5878058848086 * AcceptedCmp20  +     1.08802173663414 *
4135449   +        AcceptedCmp30  +      0.4681907014168 * AcceptedCmp40
4135450   +          +    -1.71290692396514 * AcceptedCmp50  +    -0.47229847844337 *
4135451   +        Complain0  +     0.41790693564846 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.09498245462104 * AcceptedCmp10 + -0.5878058848086 * 
AcceptedCmp20 + 1.08802173663414 * AcceptedCmp30 + 0.4681907014168 * AcceptedCmp40 + 
-1.71290692396514 * AcceptedCmp50 + -0.47229847844337 * Complain0 + 0.41790693564846 * 
HigherEducationBinary0 ;
4135452   +   H1x1_3  = H1x1_3  +    -0.14466250407205 * AcceptedCmp10
4135453   +          +    -0.05281153450358 * AcceptedCmp20  +     0.30771572513376 *
4135454   +        AcceptedCmp30  +    -0.25237634767535 * AcceptedCmp40
4135455   +          +    -2.36680490171638 * AcceptedCmp50  +    -0.12273085838026 *
4135456   +        Complain0  +     0.40951032893236 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14466250407205 * AcceptedCmp10 + -0.05281153450358 
* AcceptedCmp20 + 0.30771572513376 * AcceptedCmp30 + -0.25237634767535 * AcceptedCmp40 + 
-2.36680490171638 * AcceptedCmp50 + -0.12273085838026 * Complain0 + 0.40951032893236 * 
HigherEducationBinary0 ;
4135457   +   H1x1_1  = H1x1_1  +    -0.00834762223325 * Education2n_Cycle
4135458   +          +    -0.42766880626216 * EducationBasic  +    -0.47517247816239 *
4135459   +        EducationGraduation  +    -0.68730596079478 * EducationMaster
4135460   +          +     0.55883606830033 * Marital_StatusDivorced
4135461   +          +    -0.54530037567066 * Marital_StatusMarried
4135462   +          +    -0.52994736075753 * Marital_StatusSingle
4135463   +          +    -0.53882341831078 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00834762223325 * Education2n_Cycle + 
-0.42766880626216 * EducationBasic + -0.47517247816239 * EducationGraduation + 
-0.68730596079478 * EducationMaster + 0.55883606830033 * Marital_StatusDivorced + 
-0.54530037567066 * Marital_StatusMarried + -0.52994736075753 * Marital_StatusSingle + 
-0.53882341831078 * Marital_StatusTogether ;
4135464   +   H1x1_2  = H1x1_2  +    -0.22709215793074 * Education2n_Cycle
4135465   +          +     0.07643166113928 * EducationBasic  +    -0.97269335071824 *
4135466   +        EducationGraduation  +     0.31201349236277 * EducationMaster
4135467   +          +    -1.07368484057033 * Marital_StatusDivorced
4135468   +          +     2.73313504711262 * Marital_StatusMarried
4135469   +          +    -2.18530462876058 * Marital_StatusSingle
4135470   +          +     2.38158278480467 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.22709215793074 * Education2n_Cycle + 
0.07643166113928 * EducationBasic + -0.97269335071824 * EducationGraduation + 0.31201349236277 
* EducationMaster + -1.07368484057033 * Marital_StatusDivorced + 2.73313504711262 * 
Marital_StatusMarried + -2.18530462876058 * Marital_StatusSingle + 2.38158278480467 * 
Marital_StatusTogether ;
4135471   +   H1x1_3  = H1x1_3  +     0.04453578767387 * Education2n_Cycle
4135472   +          +    -0.65383041132508 * EducationBasic  +    -0.17789960866108 *
4135473   +        EducationGraduation  +    -0.35544166792219 * EducationMaster
4135474   +          +     0.49993144243043 * Marital_StatusDivorced
4135475   +          +    -0.38953339116829 * Marital_StatusMarried
4135476   +          +    -0.10836287319942 * Marital_StatusSingle
4135477   +          +    -0.42049990939036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.04453578767387 * Education2n_Cycle + 
-0.65383041132508 * EducationBasic + -0.17789960866108 * EducationGraduation + 
-0.35544166792219 * EducationMaster + 0.49993144243043 * Marital_StatusDivorced + 
-0.38953339116829 * Marital_StatusMarried + -0.10836287319942 * Marital_StatusSingle + 
-0.42049990939036 * Marital_StatusTogether ;
4135478   +   H1x1_1  =    -0.67322256806566 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.67322256806566 + H1x1_1 ;
4135479   +   H1x1_2  =     1.02621981675321 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.02621981675321 + H1x1_2 ;
4135480   +   H1x1_3  =     1.79721701815172 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.79721701815172 + H1x1_3 ;
4135481   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
4135482   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
4135483   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4135484   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
4135485   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
4135486   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
4135487   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
4135488   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
4135489   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
4135490   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
4135491   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
4135492   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
4135493   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
4135494   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
4135495   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
4135496   +END;
MPRINT(EM_DIAGRAM):   END;
4135497   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4135498   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4135499   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4135500   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
4135501   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
4135502   +END;
MPRINT(EM_DIAGRAM):   END;
4135503   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4135504   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4135505   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4135506   +
4135507   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
4135508   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
4135509   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4135510   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
4135511   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
4135512   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4135513   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
4135514   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4135515   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4135516   +end;
MPRINT(EM_DIAGRAM):   end;
4135517   +else do;
MPRINT(EM_DIAGRAM):   else do;
4135518   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
4135519   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
4135520   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
4135521   +   end;
MPRINT(EM_DIAGRAM):   end;
4135522   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
4135523   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
4135524   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
4135525   +   end;
MPRINT(EM_DIAGRAM):   end;
4135526   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4135527   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4135528   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4135529   +   end;
MPRINT(EM_DIAGRAM):   end;
4135530   +end;
MPRINT(EM_DIAGRAM):   end;
4135531   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4135532   +   P_DepVar1  =    -3.84261611144245 * H1x1_1  +    -7.15065431642895 * H1x1_2
4135533   +          +       11.29639646928 * H1x1_3  +    -2.12563351481128 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.84261611144245 * H1x1_1 + -7.15065431642895 * H1x1_2 + 
11.29639646928 * H1x1_3 + -2.12563351481128 * H1x1_4 ;
4135534   +   P_DepVar1  =    -3.54755955929493 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.54755955929493 + P_DepVar1 ;
4135535   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4135536   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4135537   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4135538   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4135539   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4135540   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4135541   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4135542   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4135543   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4135544   +END;
MPRINT(EM_DIAGRAM):   END;
4135545   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4135546   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4135547   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4135548   +END;
MPRINT(EM_DIAGRAM):   END;
4135549   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4135550   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4135551   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4135552   +END;
MPRINT(EM_DIAGRAM):   END;
4135553   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
4135554   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
4135555   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
4135556   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
4135557   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
4135558   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
4135559   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
4135560   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4135561   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4135562   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4135563   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4135564   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4135565   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4135566   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4135567   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4135568   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4135569   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4135570   +END;
MPRINT(EM_DIAGRAM):   END;
4135571   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4135572   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4135573   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4135574   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
4135575   +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
4135576   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4135577   +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
4135578   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4135579   +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
4135580   +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
4135581   +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
4135582   +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
4135583   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4135584   +* Renaming Into variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural9;
4135585   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4135586   +length AutoNeural9_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural9_I_DepVar $32;
4135587   +drop AutoNeural9_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_I_DepVar;
4135588   +AutoNeural9_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural9_I_DepVar = I_DepVar;
4135589   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4135590   +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
4135591   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4135592   +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
4135593   +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
4135594   +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
4135595   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4135596   +* Ensmbl38: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Scoring Code of model 6 of 7;
4135597   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4135598   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4135599   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
4135600   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
4135601   +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
4135602   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4135603   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4135604   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4135605   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4135606   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4135607   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4135608   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4135609   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4135610   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4135611   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4135612   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4135613   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4135614   +LENGTH _WARN_ $4
4135615   +      F_DepVar  $ 12
4135616   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
4135617   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4135618   +
4135619   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4135620   +
4135621   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4135622   +
4135623   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4135624   +
4135625   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4135626   +
4135627   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4135628   +
4135629   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4135630   +
4135631   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4135632   +
4135633   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4135634   +
4135635   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4135636   +
4135637   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4135638   +
4135639   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4135640   +
4135641   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4135642   +
4135643   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4135644   +
4135645   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4135646   +
4135647   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4135648   +
4135649   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4135650   +
4135651   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4135652   +
4135653   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4135654   +
4135655   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4135656   +
4135657   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4135658   +
4135659   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4135660   +
4135661   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4135662   +
4135663   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4135664   +
4135665   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4135666   +
4135667   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4135668   +
4135669   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4135670   +
4135671   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4135672   +
4135673   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4135674   +
4135675   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4135676   +
4135677   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4135678   +
4135679   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4135680   +
4135681   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4135682   +
4135683   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4135684   +
4135685   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4135686   +
4135687   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4135688   +
4135689   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4135690   +
4135691   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4135692   +
4135693   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4135694   +
4135695   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4135696   +
4135697   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
4135698   +
4135699   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
4135700   +
4135701   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
4135702   +
4135703   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
4135704   +
4135705   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
4135706   +
4135707   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
4135708   +
4135709   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
4135710   +
4135711   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
4135712   +
4135713   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
4135714   +
4135715   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
4135716   +
4135717   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
4135718   +
4135719   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
4135720   +
4135721   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
4135722   +
4135723   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
4135724   +
4135725   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
4135726   +
4135727   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
4135728   +
4135729   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4135730   +
4135731   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4135732   +
4135733   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4135734   +
4135735   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4135736   +
4135737   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
4135738   +
4135739   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4135740   +
4135741   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
4135742   +
4135743   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4135744   +
4135745   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4135746   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4135747   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4135748   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4135749   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4135750   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4135751   +end;
MPRINT(EM_DIAGRAM):   end;
4135752   +else do;
MPRINT(EM_DIAGRAM):   else do;
4135753   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4135754   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4135755   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4135756   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4135757   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4135758   +   end;
MPRINT(EM_DIAGRAM):   end;
4135759   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4135760   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4135761   +   end;
MPRINT(EM_DIAGRAM):   end;
4135762   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4135763   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4135764   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4135765   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4135766   +   end;
MPRINT(EM_DIAGRAM):   end;
4135767   +end;
MPRINT(EM_DIAGRAM):   end;
4135768   +
4135769   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4135770   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4135771   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4135772   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4135773   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4135774   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4135775   +end;
MPRINT(EM_DIAGRAM):   end;
4135776   +else do;
MPRINT(EM_DIAGRAM):   else do;
4135777   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4135778   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4135779   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4135780   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4135781   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4135782   +   end;
MPRINT(EM_DIAGRAM):   end;
4135783   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4135784   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4135785   +   end;
MPRINT(EM_DIAGRAM):   end;
4135786   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4135787   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4135788   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4135789   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4135790   +   end;
MPRINT(EM_DIAGRAM):   end;
4135791   +end;
MPRINT(EM_DIAGRAM):   end;
4135792   +
4135793   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4135794   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4135795   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4135796   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4135797   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4135798   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4135799   +end;
MPRINT(EM_DIAGRAM):   end;
4135800   +else do;
MPRINT(EM_DIAGRAM):   else do;
4135801   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4135802   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4135803   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4135804   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4135805   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4135806   +   end;
MPRINT(EM_DIAGRAM):   end;
4135807   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4135808   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4135809   +   end;
MPRINT(EM_DIAGRAM):   end;
4135810   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4135811   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4135812   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4135813   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4135814   +   end;
MPRINT(EM_DIAGRAM):   end;
4135815   +end;
MPRINT(EM_DIAGRAM):   end;
4135816   +
4135817   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4135818   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4135819   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4135820   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4135821   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4135822   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4135823   +end;
MPRINT(EM_DIAGRAM):   end;
4135824   +else do;
MPRINT(EM_DIAGRAM):   else do;
4135825   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4135826   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4135827   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4135828   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4135829   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4135830   +   end;
MPRINT(EM_DIAGRAM):   end;
4135831   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4135832   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4135833   +   end;
MPRINT(EM_DIAGRAM):   end;
4135834   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4135835   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4135836   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4135837   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4135838   +   end;
MPRINT(EM_DIAGRAM):   end;
4135839   +end;
MPRINT(EM_DIAGRAM):   end;
4135840   +
4135841   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4135842   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4135843   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4135844   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4135845   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4135846   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4135847   +end;
MPRINT(EM_DIAGRAM):   end;
4135848   +else do;
MPRINT(EM_DIAGRAM):   else do;
4135849   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4135850   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4135851   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4135852   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4135853   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4135854   +   end;
MPRINT(EM_DIAGRAM):   end;
4135855   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4135856   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4135857   +   end;
MPRINT(EM_DIAGRAM):   end;
4135858   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4135859   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4135860   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4135861   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4135862   +   end;
MPRINT(EM_DIAGRAM):   end;
4135863   +end;
MPRINT(EM_DIAGRAM):   end;
4135864   +
4135865   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4135866   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4135867   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4135868   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4135869   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4135870   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4135871   +end;
MPRINT(EM_DIAGRAM):   end;
4135872   +else do;
MPRINT(EM_DIAGRAM):   else do;
4135873   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4135874   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4135875   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4135876   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4135877   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4135878   +   end;
MPRINT(EM_DIAGRAM):   end;
4135879   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4135880   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4135881   +   end;
MPRINT(EM_DIAGRAM):   end;
4135882   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4135883   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4135884   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4135885   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4135886   +   end;
MPRINT(EM_DIAGRAM):   end;
4135887   +end;
MPRINT(EM_DIAGRAM):   end;
4135888   +
4135889   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4135890   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4135891   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4135892   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4135893   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4135894   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4135895   +end;
MPRINT(EM_DIAGRAM):   end;
4135896   +else do;
MPRINT(EM_DIAGRAM):   else do;
4135897   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4135898   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4135899   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4135900   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4135901   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4135902   +   end;
MPRINT(EM_DIAGRAM):   end;
4135903   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4135904   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4135905   +   end;
MPRINT(EM_DIAGRAM):   end;
4135906   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4135907   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4135908   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4135909   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4135910   +   end;
MPRINT(EM_DIAGRAM):   end;
4135911   +end;
MPRINT(EM_DIAGRAM):   end;
4135912   +
4135913   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4135914   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
4135915   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4135916   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4135917   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4135918   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4135919   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4135920   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4135921   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4135922   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4135923   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4135924   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4135925   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4135926   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4135927   +end;
MPRINT(EM_DIAGRAM):   end;
4135928   +else do;
MPRINT(EM_DIAGRAM):   else do;
4135929   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4135930   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4135931   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4135932   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4135933   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4135934   +   end;
MPRINT(EM_DIAGRAM):   end;
4135935   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4135936   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4135937   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4135938   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4135939   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4135940   +   end;
MPRINT(EM_DIAGRAM):   end;
4135941   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4135942   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4135943   +   end;
MPRINT(EM_DIAGRAM):   end;
4135944   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4135945   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4135946   +   end;
MPRINT(EM_DIAGRAM):   end;
4135947   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4135948   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4135949   +   end;
MPRINT(EM_DIAGRAM):   end;
4135950   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4135951   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4135952   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4135953   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4135954   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4135955   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4135956   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4135957   +   end;
MPRINT(EM_DIAGRAM):   end;
4135958   +end;
MPRINT(EM_DIAGRAM):   end;
4135959   +
4135960   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4135961   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4135962   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
4135963   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4135964   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4135965   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4135966   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4135967   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4135968   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4135969   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4135970   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4135971   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4135972   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4135973   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4135974   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4135975   +end;
MPRINT(EM_DIAGRAM):   end;
4135976   +else do;
MPRINT(EM_DIAGRAM):   else do;
4135977   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4135978   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4135979   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4135980   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4135981   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4135982   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4135983   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4135984   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4135985   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4135986   +         end;
MPRINT(EM_DIAGRAM):   end;
4135987   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4135988   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4135989   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4135990   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4135991   +            end;
MPRINT(EM_DIAGRAM):   end;
4135992   +         end;
MPRINT(EM_DIAGRAM):   end;
4135993   +      end;
MPRINT(EM_DIAGRAM):   end;
4135994   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4135995   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4135996   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4135997   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4135998   +         end;
MPRINT(EM_DIAGRAM):   end;
4135999   +      end;
MPRINT(EM_DIAGRAM):   end;
4136000   +   end;
MPRINT(EM_DIAGRAM):   end;
4136001   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4136002   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4136003   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4136004   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4136005   +      end;
MPRINT(EM_DIAGRAM):   end;
4136006   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4136007   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4136008   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4136009   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4136010   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4136011   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4136012   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4136013   +         end;
MPRINT(EM_DIAGRAM):   end;
4136014   +      end;
MPRINT(EM_DIAGRAM):   end;
4136015   +   end;
MPRINT(EM_DIAGRAM):   end;
4136016   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4136017   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4136018   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4136019   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4136020   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4136021   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4136022   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4136023   +   end;
MPRINT(EM_DIAGRAM):   end;
4136024   +end;
MPRINT(EM_DIAGRAM):   end;
4136025   +
4136026   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4136027   +*** Checking missing input Interval
4136028   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4136029   +
4136030   +IF NMISS(
4136031   +   AcceptedCmpTotal ,
4136032   +   Age ,
4136033   +   Frq ,
4136034   +   Income ,
4136035   +   Kidhome ,
4136036   +   Mnt ,
4136037   +   MntFishProducts ,
4136038   +   MntFruits ,
4136039   +   MntGoldProds ,
4136040   +   MntMeatProducts ,
4136041   +   MntSweetProducts ,
4136042   +   MntWines ,
4136043   +   MonthsAsCustomer ,
4136044   +   NumCatalogPurchases ,
4136045   +   NumDealsPurchases ,
4136046   +   NumDistPurchases ,
4136047   +   NumStorePurchases ,
4136048   +   NumWebPurchases ,
4136049   +   NumWebVisitsMonth ,
4136050   +   RFMstat ,
4136051   +   RMntFrq ,
4136052   +   Recency ,
4136053   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
4136054   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4136055   +
4136056   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4136057   +END;
MPRINT(EM_DIAGRAM):   END;
4136058   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4136059   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4136060   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4136061   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4136062   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4136063   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
4136064   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4136065   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4136066   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4136067   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4136068   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4136069   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4136070   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
4136071   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4136072   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4136073   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4136074   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4136075   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
4136076   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4136077   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
4136078   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4136079   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4136080   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
4136081   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4136082   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
4136083   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4136084   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
4136085   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4136086   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
4136087   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4136088   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
4136089   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4136090   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
4136091   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4136092   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
4136093   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4136094   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4136095   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4136096   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4136097   +END;
MPRINT(EM_DIAGRAM):   END;
4136098   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4136099   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4136100   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4136101   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
4136102   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4136103   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4136104   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4136105   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4136106   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4136107   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4136108   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4136109   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4136110   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4136111   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4136112   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4136113   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4136114   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
4136115   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4136116   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4136117   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4136118   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4136119   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4136120   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
4136121   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4136122   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4136123   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
4136124   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4136125   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4136126   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
4136127   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4136128   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4136129   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4136130   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4136131   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
4136132   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4136133   +   ELSE S_NumCatalogPurchases
4136134   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4136135   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
4136136   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4136137   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4136138   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
4136139   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4136140   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4136141   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
4136142   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4136143   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4136144   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
4136145   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4136146   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4136147   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
4136148   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4136149   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4136150   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
4136151   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4136152   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4136153   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4136154   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4136155   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4136156   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4136157   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4136158   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4136159   +END;
MPRINT(EM_DIAGRAM):   END;
4136160   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4136161   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4136162   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4136163   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4136164   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4136165   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4136166   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4136167   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4136168   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4136169   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4136170   +   H1x1_1  =    -0.26269469382558 * S_AcceptedCmpTotal
4136171   +          +    -0.06270768091854 * S_Age  +    -0.71225988503068 * S_Frq
4136172   +          +    -0.19030550341755 * S_Income  +    -0.74001834753219 *
4136173   +        S_Kidhome  +    -0.80050230513362 * S_Mnt  +    -0.70546855957287 *
4136174   +        S_MntFishProducts  +    -0.57876563074872 * S_MntFruits
4136175   +          +    -0.00210300489306 * S_MntGoldProds  +     2.60078237485589 *
4136176   +        S_MntMeatProducts  +     -0.9886407516441 * S_MntSweetProducts
4136177   +          +    -2.97488547819955 * S_MntWines  +    -0.61277940059348 *
4136178   +        S_MonthsAsCustomer  +    -0.00096247683063 * S_NumCatalogPurchases
4136179   +          +     0.89422627895323 * S_NumDealsPurchases
4136180   +          +    -0.13304125929765 * S_NumDistPurchases
4136181   +          +    -1.04568442570811 * S_NumStorePurchases
4136182   +          +    -0.28677765126751 * S_NumWebPurchases
4136183   +          +      1.2327638737509 * S_NumWebVisitsMonth
4136184   +          +     0.67421347247009 * S_RFMstat  +     -0.6166808079836 *
4136185   +        S_RMntFrq  +    -0.86930969765816 * S_Recency
4136186   +          +     0.33815651609216 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.26269469382558 * S_AcceptedCmpTotal + -0.06270768091854 * 
S_Age + -0.71225988503068 * S_Frq + -0.19030550341755 * S_Income + -0.74001834753219 * 
S_Kidhome + -0.80050230513362 * S_Mnt + -0.70546855957287 * S_MntFishProducts + 
-0.57876563074872 * S_MntFruits + -0.00210300489306 * S_MntGoldProds + 2.60078237485589 * 
S_MntMeatProducts + -0.9886407516441 * S_MntSweetProducts + -2.97488547819955 * S_MntWines + 
-0.61277940059348 * S_MonthsAsCustomer + -0.00096247683063 * S_NumCatalogPurchases + 
0.89422627895323 * S_NumDealsPurchases + -0.13304125929765 * S_NumDistPurchases + 
-1.04568442570811 * S_NumStorePurchases + -0.28677765126751 * S_NumWebPurchases + 
1.2327638737509 * S_NumWebVisitsMonth + 0.67421347247009 * S_RFMstat + -0.6166808079836 * 
S_RMntFrq + -0.86930969765816 * S_Recency + 0.33815651609216 * S_Teenhome ;
4136187   +   H1x1_2  =     0.55568777293496 * S_AcceptedCmpTotal
4136188   +          +     0.80213442721076 * S_Age  +     0.34635060456486 * S_Frq
4136189   +          +    -0.74174636901916 * S_Income  +    -0.01217809906509 *
4136190   +        S_Kidhome  +     0.26876993353057 * S_Mnt  +     0.04779395124841 *
4136191   +        S_MntFishProducts  +    -0.48668668697685 * S_MntFruits
4136192   +          +    -0.53984501210781 * S_MntGoldProds  +     2.66892669248667 *
4136193   +        S_MntMeatProducts  +     0.48696031818599 * S_MntSweetProducts
4136194   +          +    -1.59625933837852 * S_MntWines  +     0.06275925418664 *
4136195   +        S_MonthsAsCustomer  +     0.97240339275782 * S_NumCatalogPurchases
4136196   +          +     0.04224590196535 * S_NumDealsPurchases
4136197   +          +     0.76554742700113 * S_NumDistPurchases
4136198   +          +    -0.49155496870812 * S_NumStorePurchases
4136199   +          +     0.59606812744403 * S_NumWebPurchases
4136200   +          +     1.86809286276405 * S_NumWebVisitsMonth
4136201   +          +    -0.40257502974261 * S_RFMstat  +    -1.46120938073597 *
4136202   +        S_RMntFrq  +    -2.09222283465666 * S_Recency
4136203   +          +    -0.29369632363913 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.55568777293496 * S_AcceptedCmpTotal + 0.80213442721076 * 
S_Age + 0.34635060456486 * S_Frq + -0.74174636901916 * S_Income + -0.01217809906509 * 
S_Kidhome + 0.26876993353057 * S_Mnt + 0.04779395124841 * S_MntFishProducts + 
-0.48668668697685 * S_MntFruits + -0.53984501210781 * S_MntGoldProds + 2.66892669248667 * 
S_MntMeatProducts + 0.48696031818599 * S_MntSweetProducts + -1.59625933837852 * S_MntWines + 
0.06275925418664 * S_MonthsAsCustomer + 0.97240339275782 * S_NumCatalogPurchases + 
0.04224590196535 * S_NumDealsPurchases + 0.76554742700113 * S_NumDistPurchases + 
-0.49155496870812 * S_NumStorePurchases + 0.59606812744403 * S_NumWebPurchases + 
1.86809286276405 * S_NumWebVisitsMonth + -0.40257502974261 * S_RFMstat + -1.46120938073597 * 
S_RMntFrq + -2.09222283465666 * S_Recency + -0.29369632363913 * S_Teenhome ;
4136204   +   H1x1_3  =    -1.40689454675752 * S_AcceptedCmpTotal
4136205   +          +     0.22713382517751 * S_Age  +     0.51688429566863 * S_Frq
4136206   +          +    -0.07045670111356 * S_Income  +     1.10344455539307 *
4136207   +        S_Kidhome  +     0.24846532877416 * S_Mnt  +       0.663861249099 *
4136208   +        S_MntFishProducts  +     0.91527393572467 * S_MntFruits
4136209   +          +    -0.30189545909263 * S_MntGoldProds  +    -0.72774030731928 *
4136210   +        S_MntMeatProducts  +     0.66425565932635 * S_MntSweetProducts
4136211   +          +     0.55381627079618 * S_MntWines  +      0.6475533846661 *
4136212   +        S_MonthsAsCustomer  +    -1.28926334887526 * S_NumCatalogPurchases
4136213   +          +    -0.04866536993486 * S_NumDealsPurchases
4136214   +          +    -0.53535979020214 * S_NumDistPurchases
4136215   +          +     2.20634071253676 * S_NumStorePurchases
4136216   +          +      0.6164564989007 * S_NumWebPurchases
4136217   +          +    -0.43396314395263 * S_NumWebVisitsMonth
4136218   +          +     0.05322242552204 * S_RFMstat  +     0.56410623855957 *
4136219   +        S_RMntFrq  +     2.37293441098349 * S_Recency
4136220   +          +     1.20608077690677 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.40689454675752 * S_AcceptedCmpTotal + 0.22713382517751 * 
S_Age + 0.51688429566863 * S_Frq + -0.07045670111356 * S_Income + 1.10344455539307 * S_Kidhome 
+ 0.24846532877416 * S_Mnt + 0.663861249099 * S_MntFishProducts + 0.91527393572467 * 
S_MntFruits + -0.30189545909263 * S_MntGoldProds + -0.72774030731928 * S_MntMeatProducts + 
0.66425565932635 * S_MntSweetProducts + 0.55381627079618 * S_MntWines + 0.6475533846661 * 
S_MonthsAsCustomer + -1.28926334887526 * S_NumCatalogPurchases + -0.04866536993486 * 
S_NumDealsPurchases + -0.53535979020214 * S_NumDistPurchases + 2.20634071253676 * 
S_NumStorePurchases + 0.6164564989007 * S_NumWebPurchases + -0.43396314395263 * 
S_NumWebVisitsMonth + 0.05322242552204 * S_RFMstat + 0.56410623855957 * S_RMntFrq + 
2.37293441098349 * S_Recency + 1.20608077690677 * S_Teenhome ;
4136221   +   H1x1_4  =      0.8853369558336 * S_AcceptedCmpTotal
4136222   +          +    -0.02447538128281 * S_Age  +    -0.42850426895609 * S_Frq
4136223   +          +     2.31972189756282 * S_Income  +    -1.82782672643583 *
4136224   +        S_Kidhome  +     -0.0790436830894 * S_Mnt  +     0.24407556387791 *
4136225   +        S_MntFishProducts  +     0.21000125209328 * S_MntFruits
4136226   +          +     -0.0538417400508 * S_MntGoldProds  +     0.76422967678518 *
4136227   +        S_MntMeatProducts  +     0.14352092131967 * S_MntSweetProducts
4136228   +          +    -0.47732426074136 * S_MntWines  +      0.2881736828404 *
4136229   +        S_MonthsAsCustomer  +     1.08614742409725 * S_NumCatalogPurchases
4136230   +          +     1.37461255707863 * S_NumDealsPurchases
4136231   +          +    -0.17684775000818 * S_NumDistPurchases
4136232   +          +    -0.62755623855535 * S_NumStorePurchases
4136233   +          +    -1.46551649022657 * S_NumWebPurchases
4136234   +          +     3.35784247878638 * S_NumWebVisitsMonth
4136235   +          +      0.0205421093374 * S_RFMstat  +     0.02151146396087 *
4136236   +        S_RMntFrq  +    -2.61971612923471 * S_Recency
4136237   +          +    -1.74888814570254 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.8853369558336 * S_AcceptedCmpTotal + -0.02447538128281 * 
S_Age + -0.42850426895609 * S_Frq + 2.31972189756282 * S_Income + -1.82782672643583 * 
S_Kidhome + -0.0790436830894 * S_Mnt + 0.24407556387791 * S_MntFishProducts + 0.21000125209328 
* S_MntFruits + -0.0538417400508 * S_MntGoldProds + 0.76422967678518 * S_MntMeatProducts + 
0.14352092131967 * S_MntSweetProducts + -0.47732426074136 * S_MntWines + 0.2881736828404 * 
S_MonthsAsCustomer + 1.08614742409725 * S_NumCatalogPurchases + 1.37461255707863 * 
S_NumDealsPurchases + -0.17684775000818 * S_NumDistPurchases + -0.62755623855535 * 
S_NumStorePurchases + -1.46551649022657 * S_NumWebPurchases + 3.35784247878638 * 
S_NumWebVisitsMonth + 0.0205421093374 * S_RFMstat + 0.02151146396087 * S_RMntFrq + 
-2.61971612923471 * S_Recency + -1.74888814570254 * S_Teenhome ;
4136238   +   H1x1_5  =    -1.18321492018094 * S_AcceptedCmpTotal
4136239   +          +    -0.08221927436186 * S_Age  +    -0.42965792034093 * S_Frq
4136240   +          +    -0.82515640369651 * S_Income  +     -0.7955159282868 *
4136241   +        S_Kidhome  +    -0.24623211609742 * S_Mnt  +     1.14929640730402 *
4136242   +        S_MntFishProducts  +     0.37195406994279 * S_MntFruits
4136243   +          +    -0.11860313293867 * S_MntGoldProds  +     -5.1642360901608 *
4136244   +        S_MntMeatProducts  +     0.30315380386519 * S_MntSweetProducts
4136245   +          +     2.66130913318508 * S_MntWines  +    -0.35226665860471 *
4136246   +        S_MonthsAsCustomer  +    -1.90883979010829 * S_NumCatalogPurchases
4136247   +          +    -0.76256677907121 * S_NumDealsPurchases
4136248   +          +    -0.31591571751692 * S_NumDistPurchases
4136249   +          +      0.0506832614089 * S_NumStorePurchases
4136250   +          +      1.4636796923764 * S_NumWebPurchases
4136251   +          +     0.37743519705036 * S_NumWebVisitsMonth
4136252   +          +    -0.69857477383618 * S_RFMstat  +    -0.87851464788137 *
4136253   +        S_RMntFrq  +     0.16854775832723 * S_Recency
4136254   +          +     0.71697705359003 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.18321492018094 * S_AcceptedCmpTotal + -0.08221927436186 * 
S_Age + -0.42965792034093 * S_Frq + -0.82515640369651 * S_Income + -0.7955159282868 * 
S_Kidhome + -0.24623211609742 * S_Mnt + 1.14929640730402 * S_MntFishProducts + 
0.37195406994279 * S_MntFruits + -0.11860313293867 * S_MntGoldProds + -5.1642360901608 * 
S_MntMeatProducts + 0.30315380386519 * S_MntSweetProducts + 2.66130913318508 * S_MntWines + 
-0.35226665860471 * S_MonthsAsCustomer + -1.90883979010829 * S_NumCatalogPurchases + 
-0.76256677907121 * S_NumDealsPurchases + -0.31591571751692 * S_NumDistPurchases + 
0.0506832614089 * S_NumStorePurchases + 1.4636796923764 * S_NumWebPurchases + 0.37743519705036 
* S_NumWebVisitsMonth + -0.69857477383618 * S_RFMstat + -0.87851464788137 * S_RMntFrq + 
0.16854775832723 * S_Recency + 0.71697705359003 * S_Teenhome ;
4136255   +   H1x1_1  = H1x1_1  +    -0.36100598335798 * AcceptedCmp10
4136256   +          +    -0.80162089620833 * AcceptedCmp20  +    -0.32871385645151 *
4136257   +        AcceptedCmp30  +     0.06493645215559 * AcceptedCmp40
4136258   +          +    -0.79430619699627 * AcceptedCmp50  +    -0.55522128705257 *
4136259   +        Complain0  +    -0.30966226382805 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.36100598335798 * AcceptedCmp10 + -0.80162089620833 
* AcceptedCmp20 + -0.32871385645151 * AcceptedCmp30 + 0.06493645215559 * AcceptedCmp40 + 
-0.79430619699627 * AcceptedCmp50 + -0.55522128705257 * Complain0 + -0.30966226382805 * 
HigherEducationBinary0 ;
4136260   +   H1x1_2  = H1x1_2  +    -0.55315398954303 * AcceptedCmp10
4136261   +          +    -0.74882192477453 * AcceptedCmp20  +    -1.00393247543385 *
4136262   +        AcceptedCmp30  +    -0.99157595784247 * AcceptedCmp40
4136263   +          +     -1.3196947648703 * AcceptedCmp50  +    -0.00342039619706 *
4136264   +        Complain0  +     2.02148667926607 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.55315398954303 * AcceptedCmp10 + -0.74882192477453 
* AcceptedCmp20 + -1.00393247543385 * AcceptedCmp30 + -0.99157595784247 * AcceptedCmp40 + 
-1.3196947648703 * AcceptedCmp50 + -0.00342039619706 * Complain0 + 2.02148667926607 * 
HigherEducationBinary0 ;
4136265   +   H1x1_3  = H1x1_3  +    -1.34147425697576 * AcceptedCmp10
4136266   +          +     0.73907016980814 * AcceptedCmp20  +     0.73398008116032 *
4136267   +        AcceptedCmp30  +     0.96308137699431 * AcceptedCmp40
4136268   +          +     0.35561099349684 * AcceptedCmp50  +    -0.31219143781741 *
4136269   +        Complain0  +     0.90693629583865 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -1.34147425697576 * AcceptedCmp10 + 0.73907016980814 * 
AcceptedCmp20 + 0.73398008116032 * AcceptedCmp30 + 0.96308137699431 * AcceptedCmp40 + 
0.35561099349684 * AcceptedCmp50 + -0.31219143781741 * Complain0 + 0.90693629583865 * 
HigherEducationBinary0 ;
4136270   +   H1x1_4  = H1x1_4  +    -0.50580436048114 * AcceptedCmp10
4136271   +          +    -1.02093523515462 * AcceptedCmp20  +    -0.61029325985231 *
4136272   +        AcceptedCmp30  +    -0.73402161144066 * AcceptedCmp40
4136273   +          +      0.1698155397807 * AcceptedCmp50  +    -0.01243044321253 *
4136274   +        Complain0  +    -0.47467816438005 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.50580436048114 * AcceptedCmp10 + -1.02093523515462 
* AcceptedCmp20 + -0.61029325985231 * AcceptedCmp30 + -0.73402161144066 * AcceptedCmp40 + 
0.1698155397807 * AcceptedCmp50 + -0.01243044321253 * Complain0 + -0.47467816438005 * 
HigherEducationBinary0 ;
4136275   +   H1x1_5  = H1x1_5  +     1.58877963639512 * AcceptedCmp10
4136276   +          +     0.71974146614964 * AcceptedCmp20  +    -0.38703518473707 *
4136277   +        AcceptedCmp30  +     0.18491867078918 * AcceptedCmp40
4136278   +          +     0.72124299050214 * AcceptedCmp50  +    -0.27317285634323 *
4136279   +        Complain0  +      0.1433377302902 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.58877963639512 * AcceptedCmp10 + 0.71974146614964 * 
AcceptedCmp20 + -0.38703518473707 * AcceptedCmp30 + 0.18491867078918 * AcceptedCmp40 + 
0.72124299050214 * AcceptedCmp50 + -0.27317285634323 * Complain0 + 0.1433377302902 * 
HigherEducationBinary0 ;
4136280   +   H1x1_1  = H1x1_1  +     0.29126191890253 * Education2n_Cycle
4136281   +          +    -0.73322213407659 * EducationBasic  +     0.33134572731882 *
4136282   +        EducationGraduation  +    -0.37141290775302 * EducationMaster
4136283   +          +     0.68641668264565 * Marital_StatusDivorced
4136284   +          +    -0.81586871439732 * Marital_StatusMarried
4136285   +          +     0.63758920518451 * Marital_StatusSingle
4136286   +          +    -1.07300023346175 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.29126191890253 * Education2n_Cycle + 
-0.73322213407659 * EducationBasic + 0.33134572731882 * EducationGraduation + 
-0.37141290775302 * EducationMaster + 0.68641668264565 * Marital_StatusDivorced + 
-0.81586871439732 * Marital_StatusMarried + 0.63758920518451 * Marital_StatusSingle + 
-1.07300023346175 * Marital_StatusTogether ;
4136287   +   H1x1_2  = H1x1_2  +     0.43078991783629 * Education2n_Cycle
4136288   +          +      0.6169213563952 * EducationBasic  +    -0.30246389091319 *
4136289   +        EducationGraduation  +     -0.4412391934844 * EducationMaster
4136290   +          +     0.05137560133238 * Marital_StatusDivorced
4136291   +          +    -2.24401993266209 * Marital_StatusMarried
4136292   +          +     1.57359386216115 * Marital_StatusSingle
4136293   +          +    -1.81897019215773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.43078991783629 * Education2n_Cycle + 0.6169213563952 
* EducationBasic + -0.30246389091319 * EducationGraduation + -0.4412391934844 * 
EducationMaster + 0.05137560133238 * Marital_StatusDivorced + -2.24401993266209 * 
Marital_StatusMarried + 1.57359386216115 * Marital_StatusSingle + -1.81897019215773 * 
Marital_StatusTogether ;
4136294   +   H1x1_3  = H1x1_3  +     0.59284950139581 * Education2n_Cycle
4136295   +          +     0.47333255206751 * EducationBasic  +     0.43514421192824 *
4136296   +        EducationGraduation  +     0.61492669859334 * EducationMaster
4136297   +          +     -1.0649987815942 * Marital_StatusDivorced
4136298   +          +     0.76065111692388 * Marital_StatusMarried
4136299   +          +    -0.21694149754801 * Marital_StatusSingle
4136300   +          +     1.64182073896148 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.59284950139581 * Education2n_Cycle + 
0.47333255206751 * EducationBasic + 0.43514421192824 * EducationGraduation + 0.61492669859334 
* EducationMaster + -1.0649987815942 * Marital_StatusDivorced + 0.76065111692388 * 
Marital_StatusMarried + -0.21694149754801 * Marital_StatusSingle + 1.64182073896148 * 
Marital_StatusTogether ;
4136301   +   H1x1_4  = H1x1_4  +    -0.77613125849075 * Education2n_Cycle
4136302   +          +     0.26238013539868 * EducationBasic  +    -0.05526420132276 *
4136303   +        EducationGraduation  +     0.04208620358211 * EducationMaster
4136304   +          +     2.02155453548328 * Marital_StatusDivorced
4136305   +          +    -2.60190649735306 * Marital_StatusMarried
4136306   +          +     1.09149388354927 * Marital_StatusSingle
4136307   +          +    -1.15248770613963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.77613125849075 * Education2n_Cycle + 
0.26238013539868 * EducationBasic + -0.05526420132276 * EducationGraduation + 0.04208620358211 
* EducationMaster + 2.02155453548328 * Marital_StatusDivorced + -2.60190649735306 * 
Marital_StatusMarried + 1.09149388354927 * Marital_StatusSingle + -1.15248770613963 * 
Marital_StatusTogether ;
4136308   +   H1x1_5  = H1x1_5  +    -0.03512618332303 * Education2n_Cycle
4136309   +          +    -0.14907811224838 * EducationBasic  +     0.24885029294709 *
4136310   +        EducationGraduation  +    -0.60853091001689 * EducationMaster
4136311   +          +     0.66315970650309 * Marital_StatusDivorced
4136312   +          +    -1.20476729758152 * Marital_StatusMarried
4136313   +          +     0.56175027826397 * Marital_StatusSingle
4136314   +          +    -1.12798745445913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.03512618332303 * Education2n_Cycle + 
-0.14907811224838 * EducationBasic + 0.24885029294709 * EducationGraduation + 
-0.60853091001689 * EducationMaster + 0.66315970650309 * Marital_StatusDivorced + 
-1.20476729758152 * Marital_StatusMarried + 0.56175027826397 * Marital_StatusSingle + 
-1.12798745445913 * Marital_StatusTogether ;
4136315   +   H1x1_1  =      0.8264813299799 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.8264813299799 + H1x1_1 ;
4136316   +   H1x1_2  =     1.35924705880418 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.35924705880418 + H1x1_2 ;
4136317   +   H1x1_3  =    -0.31074016443189 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31074016443189 + H1x1_3 ;
4136318   +   H1x1_4  =    -1.37395810355475 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.37395810355475 + H1x1_4 ;
4136319   +   H1x1_5  =    -0.62889533479826 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.62889533479826 + H1x1_5 ;
4136320   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
4136321   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
4136322   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4136323   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
4136324   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
4136325   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
4136326   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
4136327   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
4136328   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
4136329   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
4136330   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
4136331   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
4136332   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
4136333   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
4136334   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
4136335   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
4136336   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
4136337   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
4136338   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
4136339   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
4136340   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
4136341   +END;
MPRINT(EM_DIAGRAM):   END;
4136342   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4136343   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4136344   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4136345   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
4136346   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
4136347   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
4136348   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
4136349   +END;
MPRINT(EM_DIAGRAM):   END;
4136350   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4136351   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
4136352   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4136353   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4136354   +   H1x2_1  =     0.56269814727649 * S_AcceptedCmpTotal
4136355   +          +    -0.56663088753275 * S_Age  +    -0.08799157593784 * S_Frq
4136356   +          +      0.8158986182256 * S_Income  +     0.25081960997161 *
4136357   +        S_Kidhome  +    -0.53258140179906 * S_Mnt  +     0.15843644803762 *
4136358   +        S_MntFishProducts  +    -0.87373368590299 * S_MntFruits
4136359   +          +     0.02807252984992 * S_MntGoldProds  +     1.41661611364623 *
4136360   +        S_MntMeatProducts  +     1.22431140889383 * S_MntSweetProducts
4136361   +          +    -0.25451913627032 * S_MntWines  +     0.13515407201266 *
4136362   +        S_MonthsAsCustomer  +     1.28583120667445 * S_NumCatalogPurchases
4136363   +          +     1.50005927423985 * S_NumDealsPurchases
4136364   +          +      0.5590536933569 * S_NumDistPurchases
4136365   +          +    -0.61757824339318 * S_NumStorePurchases
4136366   +          +     0.37259686538158 * S_NumWebPurchases
4136367   +          +     2.59725437895564 * S_NumWebVisitsMonth
4136368   +          +     1.61096386499852 * S_RFMstat  +      0.6096177019772 *
4136369   +        S_RMntFrq  +    -2.38795796980324 * S_Recency
4136370   +          +    -0.31987414022375 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.56269814727649 * S_AcceptedCmpTotal + -0.56663088753275 * 
S_Age + -0.08799157593784 * S_Frq + 0.8158986182256 * S_Income + 0.25081960997161 * S_Kidhome 
+ -0.53258140179906 * S_Mnt + 0.15843644803762 * S_MntFishProducts + -0.87373368590299 * 
S_MntFruits + 0.02807252984992 * S_MntGoldProds + 1.41661611364623 * S_MntMeatProducts + 
1.22431140889383 * S_MntSweetProducts + -0.25451913627032 * S_MntWines + 0.13515407201266 * 
S_MonthsAsCustomer + 1.28583120667445 * S_NumCatalogPurchases + 1.50005927423985 * 
S_NumDealsPurchases + 0.5590536933569 * S_NumDistPurchases + -0.61757824339318 * 
S_NumStorePurchases + 0.37259686538158 * S_NumWebPurchases + 2.59725437895564 * 
S_NumWebVisitsMonth + 1.61096386499852 * S_RFMstat + 0.6096177019772 * S_RMntFrq + 
-2.38795796980324 * S_Recency + -0.31987414022375 * S_Teenhome ;
4136371   +   H1x2_2  =    -1.93801069736585 * S_AcceptedCmpTotal
4136372   +          +     1.10394781020217 * S_Age  +    -0.47335296021798 * S_Frq
4136373   +          +    -1.34212492602253 * S_Income  +    -1.34380793722996 *
4136374   +        S_Kidhome  +      0.9110881410704 * S_Mnt  +    -2.21001317666388 *
4136375   +        S_MntFishProducts  +     0.73821267564247 * S_MntFruits
4136376   +          +     0.16536006752146 * S_MntGoldProds  +     0.03402222784641 *
4136377   +        S_MntMeatProducts  +     0.96043668102736 * S_MntSweetProducts
4136378   +          +    -1.40670343451334 * S_MntWines  +     0.81378739821838 *
4136379   +        S_MonthsAsCustomer  +    -0.45596935664336 * S_NumCatalogPurchases
4136380   +          +    -0.09282222088797 * S_NumDealsPurchases
4136381   +          +     0.10726247938321 * S_NumDistPurchases
4136382   +          +     -1.1235971458527 * S_NumStorePurchases
4136383   +          +    -0.78304387839877 * S_NumWebPurchases
4136384   +          +    -0.44139243179956 * S_NumWebVisitsMonth
4136385   +          +    -0.00027499457791 * S_RFMstat  +    -0.71480759211982 *
4136386   +        S_RMntFrq  +     2.19072220135069 * S_Recency
4136387   +          +    -0.32246312005896 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.93801069736585 * S_AcceptedCmpTotal + 1.10394781020217 * 
S_Age + -0.47335296021798 * S_Frq + -1.34212492602253 * S_Income + -1.34380793722996 * 
S_Kidhome + 0.9110881410704 * S_Mnt + -2.21001317666388 * S_MntFishProducts + 0.73821267564247 
* S_MntFruits + 0.16536006752146 * S_MntGoldProds + 0.03402222784641 * S_MntMeatProducts + 
0.96043668102736 * S_MntSweetProducts + -1.40670343451334 * S_MntWines + 0.81378739821838 * 
S_MonthsAsCustomer + -0.45596935664336 * S_NumCatalogPurchases + -0.09282222088797 * 
S_NumDealsPurchases + 0.10726247938321 * S_NumDistPurchases + -1.1235971458527 * 
S_NumStorePurchases + -0.78304387839877 * S_NumWebPurchases + -0.44139243179956 * 
S_NumWebVisitsMonth + -0.00027499457791 * S_RFMstat + -0.71480759211982 * S_RMntFrq + 
2.19072220135069 * S_Recency + -0.32246312005896 * S_Teenhome ;
4136388   +   H1x2_3  =    -0.33286965179681 * S_AcceptedCmpTotal
4136389   +          +     0.25643420238739 * S_Age  +     1.78251276306291 * S_Frq
4136390   +          +     0.42668628662657 * S_Income  +    -0.44555069154972 *
4136391   +        S_Kidhome  +     0.99430376599176 * S_Mnt  +     0.37152911215285 *
4136392   +        S_MntFishProducts  +    -1.00181313725345 * S_MntFruits
4136393   +          +    -1.88393479121141 * S_MntGoldProds  +    -1.71643056154209 *
4136394   +        S_MntMeatProducts  +    -0.69325136508245 * S_MntSweetProducts
4136395   +          +     0.36062578298416 * S_MntWines  +    -1.43361051175418 *
4136396   +        S_MonthsAsCustomer  +     0.92624996511804 * S_NumCatalogPurchases
4136397   +          +     0.35349185459988 * S_NumDealsPurchases
4136398   +          +     0.06853677714859 * S_NumDistPurchases
4136399   +          +    -1.47546012999338 * S_NumStorePurchases
4136400   +          +     0.20926435398916 * S_NumWebPurchases
4136401   +          +    -1.00535683639093 * S_NumWebVisitsMonth
4136402   +          +     0.39738023685345 * S_RFMstat  +     0.54359550262445 *
4136403   +        S_RMntFrq  +    -1.59138379954757 * S_Recency
4136404   +          +    -0.72224029606658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.33286965179681 * S_AcceptedCmpTotal + 0.25643420238739 * 
S_Age + 1.78251276306291 * S_Frq + 0.42668628662657 * S_Income + -0.44555069154972 * S_Kidhome 
+ 0.99430376599176 * S_Mnt + 0.37152911215285 * S_MntFishProducts + -1.00181313725345 * 
S_MntFruits + -1.88393479121141 * S_MntGoldProds + -1.71643056154209 * S_MntMeatProducts + 
-0.69325136508245 * S_MntSweetProducts + 0.36062578298416 * S_MntWines + -1.43361051175418 * 
S_MonthsAsCustomer + 0.92624996511804 * S_NumCatalogPurchases + 0.35349185459988 * 
S_NumDealsPurchases + 0.06853677714859 * S_NumDistPurchases + -1.47546012999338 * 
S_NumStorePurchases + 0.20926435398916 * S_NumWebPurchases + -1.00535683639093 * 
S_NumWebVisitsMonth + 0.39738023685345 * S_RFMstat + 0.54359550262445 * S_RMntFrq + 
-1.59138379954757 * S_Recency + -0.72224029606658 * S_Teenhome ;
4136405   +   H1x2_4  =     -0.0656876758781 * S_AcceptedCmpTotal
4136406   +          +    -0.38220805193452 * S_Age  +    -0.62740801625755 * S_Frq
4136407   +          +     0.62992117571672 * S_Income  +      1.6289723191423 *
4136408   +        S_Kidhome  +     0.37209535830613 * S_Mnt  +     0.55983487785376 *
4136409   +        S_MntFishProducts  +    -2.12992009015736 * S_MntFruits
4136410   +          +    -0.38291517806426 * S_MntGoldProds  +    -1.36584955015054 *
4136411   +        S_MntMeatProducts  +     0.60790195398286 * S_MntSweetProducts
4136412   +          +     2.43674403604903 * S_MntWines  +     -0.0680555682506 *
4136413   +        S_MonthsAsCustomer  +    -0.38141588539042 * S_NumCatalogPurchases
4136414   +          +      0.3873586120272 * S_NumDealsPurchases
4136415   +          +     0.25911651157596 * S_NumDistPurchases
4136416   +          +     1.58922489084287 * S_NumStorePurchases
4136417   +          +     0.49041797743368 * S_NumWebPurchases
4136418   +          +     -1.5425586871929 * S_NumWebVisitsMonth
4136419   +          +    -0.68794085469802 * S_RFMstat  +     1.43555366196783 *
4136420   +        S_RMntFrq  +     1.03099569333498 * S_Recency
4136421   +          +    -0.33160793159803 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.0656876758781 * S_AcceptedCmpTotal + -0.38220805193452 * 
S_Age + -0.62740801625755 * S_Frq + 0.62992117571672 * S_Income + 1.6289723191423 * S_Kidhome 
+ 0.37209535830613 * S_Mnt + 0.55983487785376 * S_MntFishProducts + -2.12992009015736 * 
S_MntFruits + -0.38291517806426 * S_MntGoldProds + -1.36584955015054 * S_MntMeatProducts + 
0.60790195398286 * S_MntSweetProducts + 2.43674403604903 * S_MntWines + -0.0680555682506 * 
S_MonthsAsCustomer + -0.38141588539042 * S_NumCatalogPurchases + 0.3873586120272 * 
S_NumDealsPurchases + 0.25911651157596 * S_NumDistPurchases + 1.58922489084287 * 
S_NumStorePurchases + 0.49041797743368 * S_NumWebPurchases + -1.5425586871929 * 
S_NumWebVisitsMonth + -0.68794085469802 * S_RFMstat + 1.43555366196783 * S_RMntFrq + 
1.03099569333498 * S_Recency + -0.33160793159803 * S_Teenhome ;
4136422   +   H1x2_5  =      1.1619646008295 * S_AcceptedCmpTotal
4136423   +          +     -1.1099918698895 * S_Age  +     1.07090049938562 * S_Frq
4136424   +          +     0.68405730495336 * S_Income  +     0.10310173850527 *
4136425   +        S_Kidhome  +    -0.20536085581003 * S_Mnt  +    -0.13505440333321 *
4136426   +        S_MntFishProducts  +      0.7330354505267 * S_MntFruits
4136427   +          +    -0.09266368133722 * S_MntGoldProds  +     0.11251229112529 *
4136428   +        S_MntMeatProducts  +     0.93293215365852 * S_MntSweetProducts
4136429   +          +    -0.30739945619686 * S_MntWines  +     1.60111236559554 *
4136430   +        S_MonthsAsCustomer  +    -0.55541485540949 * S_NumCatalogPurchases
4136431   +          +    -0.60830880287865 * S_NumDealsPurchases
4136432   +          +      0.0745331267194 * S_NumDistPurchases
4136433   +          +    -1.39472448256952 * S_NumStorePurchases
4136434   +          +     1.95372179969087 * S_NumWebPurchases
4136435   +          +    -0.63307356390404 * S_NumWebVisitsMonth
4136436   +          +    -1.45142676869601 * S_RFMstat  +    -0.89091053567015 *
4136437   +        S_RMntFrq  +    -0.29197897313114 * S_Recency
4136438   +          +     0.02610681671236 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.1619646008295 * S_AcceptedCmpTotal + -1.1099918698895 * S_Age 
+ 1.07090049938562 * S_Frq + 0.68405730495336 * S_Income + 0.10310173850527 * S_Kidhome + 
-0.20536085581003 * S_Mnt + -0.13505440333321 * S_MntFishProducts + 0.7330354505267 * 
S_MntFruits + -0.09266368133722 * S_MntGoldProds + 0.11251229112529 * S_MntMeatProducts + 
0.93293215365852 * S_MntSweetProducts + -0.30739945619686 * S_MntWines + 1.60111236559554 * 
S_MonthsAsCustomer + -0.55541485540949 * S_NumCatalogPurchases + -0.60830880287865 * 
S_NumDealsPurchases + 0.0745331267194 * S_NumDistPurchases + -1.39472448256952 * 
S_NumStorePurchases + 1.95372179969087 * S_NumWebPurchases + -0.63307356390404 * 
S_NumWebVisitsMonth + -1.45142676869601 * S_RFMstat + -0.89091053567015 * S_RMntFrq + 
-0.29197897313114 * S_Recency + 0.02610681671236 * S_Teenhome ;
4136439   +   H1x2_1  = H1x2_1  +    -0.60663534965526 * AcceptedCmp10
4136440   +          +     0.86940361180064 * AcceptedCmp20  +     1.96097801395475 *
4136441   +        AcceptedCmp30  +    -0.07604718607607 * AcceptedCmp40
4136442   +          +    -2.82012437662904 * AcceptedCmp50  +     2.92223307409835 *
4136443   +        Complain0  +      0.7388639458943 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.60663534965526 * AcceptedCmp10 + 0.86940361180064 * 
AcceptedCmp20 + 1.96097801395475 * AcceptedCmp30 + -0.07604718607607 * AcceptedCmp40 + 
-2.82012437662904 * AcceptedCmp50 + 2.92223307409835 * Complain0 + 0.7388639458943 * 
HigherEducationBinary0 ;
4136444   +   H1x2_2  = H1x2_2  +    -0.44975979140124 * AcceptedCmp10
4136445   +          +    -0.14894854897951 * AcceptedCmp20  +     1.05214102326393 *
4136446   +        AcceptedCmp30  +    -0.24568060312448 * AcceptedCmp40
4136447   +          +    -0.32148548771167 * AcceptedCmp50  +    -0.06212131202705 *
4136448   +        Complain0  +    -1.15456299494407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.44975979140124 * AcceptedCmp10 + -0.14894854897951 
* AcceptedCmp20 + 1.05214102326393 * AcceptedCmp30 + -0.24568060312448 * AcceptedCmp40 + 
-0.32148548771167 * AcceptedCmp50 + -0.06212131202705 * Complain0 + -1.15456299494407 * 
HigherEducationBinary0 ;
4136449   +   H1x2_3  = H1x2_3  +     0.05559829595526 * AcceptedCmp10
4136450   +          +    -0.79357273390501 * AcceptedCmp20  +     1.19638475921939 *
4136451   +        AcceptedCmp30  +     -0.4185483500346 * AcceptedCmp40
4136452   +          +     1.62070541716774 * AcceptedCmp50  +     0.42618871432227 *
4136453   +        Complain0  +    -1.31545071935076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.05559829595526 * AcceptedCmp10 + -0.79357273390501 * 
AcceptedCmp20 + 1.19638475921939 * AcceptedCmp30 + -0.4185483500346 * AcceptedCmp40 + 
1.62070541716774 * AcceptedCmp50 + 0.42618871432227 * Complain0 + -1.31545071935076 * 
HigherEducationBinary0 ;
4136454   +   H1x2_4  = H1x2_4  +     0.79295384489774 * AcceptedCmp10
4136455   +          +    -1.12840237512106 * AcceptedCmp20  +     1.32129555401653 *
4136456   +        AcceptedCmp30  +    -0.25952521594596 * AcceptedCmp40
4136457   +          +     0.80872302488736 * AcceptedCmp50  +     1.00677398871609 *
4136458   +        Complain0  +    -0.40309387727555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.79295384489774 * AcceptedCmp10 + -1.12840237512106 * 
AcceptedCmp20 + 1.32129555401653 * AcceptedCmp30 + -0.25952521594596 * AcceptedCmp40 + 
0.80872302488736 * AcceptedCmp50 + 1.00677398871609 * Complain0 + -0.40309387727555 * 
HigherEducationBinary0 ;
4136459   +   H1x2_5  = H1x2_5  +     0.27407087260629 * AcceptedCmp10
4136460   +          +    -1.62993283587806 * AcceptedCmp20  +     -0.7976151702219 *
4136461   +        AcceptedCmp30  +    -1.43236001965205 * AcceptedCmp40
4136462   +          +     0.31785497417833 * AcceptedCmp50  +     -0.4935881696628 *
4136463   +        Complain0  +    -0.90101154412077 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.27407087260629 * AcceptedCmp10 + -1.62993283587806 * 
AcceptedCmp20 + -0.7976151702219 * AcceptedCmp30 + -1.43236001965205 * AcceptedCmp40 + 
0.31785497417833 * AcceptedCmp50 + -0.4935881696628 * Complain0 + -0.90101154412077 * 
HigherEducationBinary0 ;
4136464   +   H1x2_1  = H1x2_1  +    -0.42532202605687 * Education2n_Cycle
4136465   +          +     0.05209663685716 * EducationBasic  +     1.32477268007154 *
4136466   +        EducationGraduation  +    -1.16900224373137 * EducationMaster
4136467   +          +    -1.33377871643323 * Marital_StatusDivorced
4136468   +          +    -0.87184228840898 * Marital_StatusMarried
4136469   +          +     1.41223186340257 * Marital_StatusSingle
4136470   +          +     0.26542930660962 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.42532202605687 * Education2n_Cycle + 
0.05209663685716 * EducationBasic + 1.32477268007154 * EducationGraduation + -1.16900224373137 
* EducationMaster + -1.33377871643323 * Marital_StatusDivorced + -0.87184228840898 * 
Marital_StatusMarried + 1.41223186340257 * Marital_StatusSingle + 0.26542930660962 * 
Marital_StatusTogether ;
4136471   +   H1x2_2  = H1x2_2  +     0.31980851177227 * Education2n_Cycle
4136472   +          +     1.82629979795037 * EducationBasic  +     0.59482979766527 *
4136473   +        EducationGraduation  +     0.38341272155343 * EducationMaster
4136474   +          +    -0.21479890935233 * Marital_StatusDivorced
4136475   +          +     -0.0025459519579 * Marital_StatusMarried
4136476   +          +     1.33900491702264 * Marital_StatusSingle
4136477   +          +     0.31338385402434 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.31980851177227 * Education2n_Cycle + 
1.82629979795037 * EducationBasic + 0.59482979766527 * EducationGraduation + 0.38341272155343 
* EducationMaster + -0.21479890935233 * Marital_StatusDivorced + -0.0025459519579 * 
Marital_StatusMarried + 1.33900491702264 * Marital_StatusSingle + 0.31338385402434 * 
Marital_StatusTogether ;
4136478   +   H1x2_3  = H1x2_3  +     -1.1277686958847 * Education2n_Cycle
4136479   +          +    -0.32701971979058 * EducationBasic  +      0.4361680205519 *
4136480   +        EducationGraduation  +     0.60739269725685 * EducationMaster
4136481   +          +    -0.38307267471999 * Marital_StatusDivorced
4136482   +          +     0.97088969451415 * Marital_StatusMarried
4136483   +          +    -0.28578224473381 * Marital_StatusSingle
4136484   +          +     0.16178086683874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.1277686958847 * Education2n_Cycle + 
-0.32701971979058 * EducationBasic + 0.4361680205519 * EducationGraduation + 0.60739269725685 
* EducationMaster + -0.38307267471999 * Marital_StatusDivorced + 0.97088969451415 * 
Marital_StatusMarried + -0.28578224473381 * Marital_StatusSingle + 0.16178086683874 * 
Marital_StatusTogether ;
4136485   +   H1x2_4  = H1x2_4  +    -1.21481485652985 * Education2n_Cycle
4136486   +          +    -0.30231261977781 * EducationBasic  +     0.33993210461674 *
4136487   +        EducationGraduation  +     0.14160673378252 * EducationMaster
4136488   +          +    -1.42229401093569 * Marital_StatusDivorced
4136489   +          +      0.7234508382397 * Marital_StatusMarried
4136490   +          +    -0.29062202974628 * Marital_StatusSingle
4136491   +          +     1.00102560376832 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.21481485652985 * Education2n_Cycle + 
-0.30231261977781 * EducationBasic + 0.33993210461674 * EducationGraduation + 0.14160673378252 
* EducationMaster + -1.42229401093569 * Marital_StatusDivorced + 0.7234508382397 * 
Marital_StatusMarried + -0.29062202974628 * Marital_StatusSingle + 1.00102560376832 * 
Marital_StatusTogether ;
4136492   +   H1x2_5  = H1x2_5  +     0.47313927233084 * Education2n_Cycle
4136493   +          +     0.53675687099431 * EducationBasic  +    -0.75029054398953 *
4136494   +        EducationGraduation  +     -0.7118631990538 * EducationMaster
4136495   +          +    -0.99067637207205 * Marital_StatusDivorced
4136496   +          +    -0.50245902142079 * Marital_StatusMarried
4136497   +          +     0.54214494533793 * Marital_StatusSingle
4136498   +          +    -1.90023876403873 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.47313927233084 * Education2n_Cycle + 
0.53675687099431 * EducationBasic + -0.75029054398953 * EducationGraduation + -0.7118631990538 
* EducationMaster + -0.99067637207205 * Marital_StatusDivorced + -0.50245902142079 * 
Marital_StatusMarried + 0.54214494533793 * Marital_StatusSingle + -1.90023876403873 * 
Marital_StatusTogether ;
4136499   +   H1x2_1  =    -0.76220110175787 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.76220110175787 + H1x2_1 ;
4136500   +   H1x2_2  =     0.33238308796509 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.33238308796509 + H1x2_2 ;
4136501   +   H1x2_3  =    -1.79229186263718 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.79229186263718 + H1x2_3 ;
4136502   +   H1x2_4  =     2.90076107393596 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 2.90076107393596 + H1x2_4 ;
4136503   +   H1x2_5  =    -1.75965576502183 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.75965576502183 + H1x2_5 ;
4136504   +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
4136505   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
4136506   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4136507   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
4136508   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
4136509   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
4136510   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
4136511   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
4136512   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
4136513   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
4136514   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
4136515   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
4136516   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
4136517   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
4136518   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
4136519   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
4136520   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
4136521   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
4136522   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
4136523   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
4136524   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
4136525   +END;
MPRINT(EM_DIAGRAM):   END;
4136526   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4136527   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
4136528   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
4136529   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
4136530   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
4136531   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
4136532   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
4136533   +END;
MPRINT(EM_DIAGRAM):   END;
4136534   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4136535   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
4136536   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4136537   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4136538   +   H2x1_1  =       1.974359971482 * H1x1_1  +     2.56630185065386 * H1x1_2
4136539   +          +    -2.09978917716486 * H1x1_3  +      2.5733942680354 * H1x1_4
4136540   +          +    -3.36902992698085 * H1x1_5  +    -2.45757278280195 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.974359971482 * H1x1_1 + 2.56630185065386 * H1x1_2 + 
-2.09978917716486 * H1x1_3 + 2.5733942680354 * H1x1_4 + -3.36902992698085 * H1x1_5 + 
-2.45757278280195 * H1x1_6 ;
4136541   +   H2x1_2  =    -0.31797232371002 * H1x1_1  +     1.40395330167402 * H1x1_2
4136542   +          +     1.81616324109762 * H1x1_3  +     1.53849589982775 * H1x1_4
4136543   +          +    -0.63132385856109 * H1x1_5  +    -2.28426391810485 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.31797232371002 * H1x1_1 + 1.40395330167402 * H1x1_2 + 
1.81616324109762 * H1x1_3 + 1.53849589982775 * H1x1_4 + -0.63132385856109 * H1x1_5 + 
-2.28426391810485 * H1x1_6 ;
4136544   +   H2x1_3  =    -1.34821716876354 * H1x1_1  +    -1.59136815069547 * H1x1_2
4136545   +          +     1.51830421093731 * H1x1_3  +     0.25947292816575 * H1x1_4
4136546   +          +     0.68626537551183 * H1x1_5  +     0.08021226539433 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.34821716876354 * H1x1_1 + -1.59136815069547 * H1x1_2 + 
1.51830421093731 * H1x1_3 + 0.25947292816575 * H1x1_4 + 0.68626537551183 * H1x1_5 + 
0.08021226539433 * H1x1_6 ;
4136547   +   H2x1_4  =     1.81371453071507 * H1x1_1  +     2.86509325576366 * H1x1_2
4136548   +          +    -2.51923468751378 * H1x1_3  +     3.48823967488449 * H1x1_4
4136549   +          +    -1.98439811139438 * H1x1_5  +    -1.35359233519863 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.81371453071507 * H1x1_1 + 2.86509325576366 * H1x1_2 + 
-2.51923468751378 * H1x1_3 + 3.48823967488449 * H1x1_4 + -1.98439811139438 * H1x1_5 + 
-1.35359233519863 * H1x1_6 ;
4136550   +   H2x1_5  =     2.41779243188377 * H1x1_1  +     2.38684872287302 * H1x1_2
4136551   +          +    -2.38697428830295 * H1x1_3  +     3.64463866412774 * H1x1_4
4136552   +          +    -6.25925640356471 * H1x1_5  +    -2.41187367604766 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.41779243188377 * H1x1_1 + 2.38684872287302 * H1x1_2 + 
-2.38697428830295 * H1x1_3 + 3.64463866412774 * H1x1_4 + -6.25925640356471 * H1x1_5 + 
-2.41187367604766 * H1x1_6 ;
4136553   +   H2x1_6  =    -0.72042650045348 * H1x1_1  +      0.1896194130913 * H1x1_2
4136554   +          +     0.90899894568677 * H1x1_3  +    -1.82868335056689 * H1x1_4
4136555   +          +     0.25430380699211 * H1x1_5  +     0.21617396847163 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.72042650045348 * H1x1_1 + 0.1896194130913 * H1x1_2 + 
0.90899894568677 * H1x1_3 + -1.82868335056689 * H1x1_4 + 0.25430380699211 * H1x1_5 + 
0.21617396847163 * H1x1_6 ;
4136556   +   H2x1_1  = H2x1_1  +     1.25654059966646 * H1x2_1
4136557   +          +     1.54802434303135 * H1x2_2  +     -0.8831980397117 * H1x2_3
4136558   +          +    -0.06778839937099 * H1x2_4  +      0.5440972304381 * H1x2_5
4136559   +          +      0.2606136576082 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.25654059966646 * H1x2_1 + 1.54802434303135 * H1x2_2 
+ -0.8831980397117 * H1x2_3 + -0.06778839937099 * H1x2_4 + 0.5440972304381 * H1x2_5 + 
0.2606136576082 * H1x2_6 ;
4136560   +   H2x1_2  = H2x1_2  +      1.1804478706954 * H1x2_1
4136561   +          +    -1.54526687654235 * H1x2_2  +    -1.84586479319799 * H1x2_3
4136562   +          +     1.53060510120437 * H1x2_4  +     1.17038673632413 * H1x2_5
4136563   +          +    -0.33816948355449 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.1804478706954 * H1x2_1 + -1.54526687654235 * H1x2_2 
+ -1.84586479319799 * H1x2_3 + 1.53060510120437 * H1x2_4 + 1.17038673632413 * H1x2_5 + 
-0.33816948355449 * H1x2_6 ;
4136564   +   H2x1_3  = H2x1_3  +    -0.17829043463382 * H1x2_1
4136565   +          +    -0.25137506897353 * H1x2_2  +     0.16242586068799 * H1x2_3
4136566   +          +    -0.09404795949359 * H1x2_4  +    -0.46228597203598 * H1x2_5
4136567   +          +    -2.05648585275111 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.17829043463382 * H1x2_1 + -0.25137506897353 * 
H1x2_2 + 0.16242586068799 * H1x2_3 + -0.09404795949359 * H1x2_4 + -0.46228597203598 * H1x2_5 + 
-2.05648585275111 * H1x2_6 ;
4136568   +   H2x1_4  = H2x1_4  +     0.42433995729877 * H1x2_1
4136569   +          +    -0.48506090180667 * H1x2_2  +    -2.00023889633201 * H1x2_3
4136570   +          +    -2.18353148884875 * H1x2_4  +      1.8888560029491 * H1x2_5
4136571   +          +     0.10756694741742 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.42433995729877 * H1x2_1 + -0.48506090180667 * H1x2_2 
+ -2.00023889633201 * H1x2_3 + -2.18353148884875 * H1x2_4 + 1.8888560029491 * H1x2_5 + 
0.10756694741742 * H1x2_6 ;
4136572   +   H2x1_5  = H2x1_5  +     1.56363187716685 * H1x2_1
4136573   +          +    -1.60380055270086 * H1x2_2  +    -0.10253336309679 * H1x2_3
4136574   +          +    -0.70868484989608 * H1x2_4  +    -1.01428312449496 * H1x2_5
4136575   +          +    -0.52564497366659 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.56363187716685 * H1x2_1 + -1.60380055270086 * H1x2_2 
+ -0.10253336309679 * H1x2_3 + -0.70868484989608 * H1x2_4 + -1.01428312449496 * H1x2_5 + 
-0.52564497366659 * H1x2_6 ;
4136576   +   H2x1_6  = H2x1_6  +    -2.54663319607132 * H1x2_1
4136577   +          +    -0.26971572820094 * H1x2_2  +      0.0632302804701 * H1x2_3
4136578   +          +     0.24322354570335 * H1x2_4  +     0.66904111988013 * H1x2_5
4136579   +          +     0.74493468449949 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -2.54663319607132 * H1x2_1 + -0.26971572820094 * 
H1x2_2 + 0.0632302804701 * H1x2_3 + 0.24322354570335 * H1x2_4 + 0.66904111988013 * H1x2_5 + 
0.74493468449949 * H1x2_6 ;
4136580   +   H2x1_1  =    -0.48109096483079 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.48109096483079 + H2x1_1 ;
The SAS System

4136581   +   H2x1_2  =     1.80708027085243 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.80708027085243 + H2x1_2 ;
4136582   +   H2x1_3  =    -0.46023689639613 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.46023689639613 + H2x1_3 ;
4136583   +   H2x1_4  =     0.33871753804401 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.33871753804401 + H2x1_4 ;
4136584   +   H2x1_5  =    -0.31584249921712 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.31584249921712 + H2x1_5 ;
4136585   +   H2x1_6  =     0.30285416134468 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.30285416134468 + H2x1_6 ;
4136586   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4136587   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4136588   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
4136589   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
4136590   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
4136591   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
4136592   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
4136593   +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
4136594   +END;
MPRINT(EM_DIAGRAM):   END;
4136595   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4136596   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
4136597   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
4136598   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
4136599   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
4136600   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
4136601   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
4136602   +END;
MPRINT(EM_DIAGRAM):   END;
4136603   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4136604   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4136605   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4136606   +
4136607   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
4136608   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
4136609   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4136610   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
4136611   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
4136612   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4136613   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
4136614   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4136615   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4136616   +end;
MPRINT(EM_DIAGRAM):   end;
4136617   +else do;
MPRINT(EM_DIAGRAM):   else do;
4136618   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
4136619   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
4136620   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
4136621   +   end;
MPRINT(EM_DIAGRAM):   end;
4136622   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
4136623   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
4136624   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
4136625   +   end;
MPRINT(EM_DIAGRAM):   end;
4136626   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4136627   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4136628   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4136629   +   end;
MPRINT(EM_DIAGRAM):   end;
4136630   +end;
MPRINT(EM_DIAGRAM):   end;
4136631   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4136632   +   P_DepVar1  =     7.89179702798476 * H2x1_1  +    -2.13955806072986 * H2x1_2
4136633   +          +    -3.88305304025889 * H2x1_3  +     4.07340753853874 * H2x1_4
4136634   +          +     7.74293596833296 * H2x1_5  +     -3.8939011811129 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.89179702798476 * H2x1_1 + -2.13955806072986 * H2x1_2 + 
-3.88305304025889 * H2x1_3 + 4.07340753853874 * H2x1_4 + 7.74293596833296 * H2x1_5 + 
-3.8939011811129 * H2x1_6 ;
4136635   +   P_DepVar1  =    -5.20107973804597 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.20107973804597 + P_DepVar1 ;
4136636   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4136637   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4136638   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4136639   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4136640   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4136641   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4136642   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4136643   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4136644   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4136645   +END;
MPRINT(EM_DIAGRAM):   END;
4136646   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4136647   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4136648   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4136649   +END;
MPRINT(EM_DIAGRAM):   END;
4136650   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4136651   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4136652   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4136653   +END;
MPRINT(EM_DIAGRAM):   END;
4136654   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
4136655   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
4136656   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
4136657   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
4136658   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
4136659   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
4136660   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
4136661   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4136662   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4136663   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4136664   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4136665   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4136666   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4136667   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4136668   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4136669   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4136670   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4136671   +END;
MPRINT(EM_DIAGRAM):   END;
4136672   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4136673   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4136674   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4136675   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
4136676   +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
4136677   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4136678   +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
4136679   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4136680   +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
4136681   +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
4136682   +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
4136683   +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
4136684   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4136685   +* Renaming Into variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural11;
4136686   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4136687   +length AutoNeural11_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural11_I_DepVar $32;
4136688   +drop AutoNeural11_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_I_DepVar;
4136689   +AutoNeural11_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural11_I_DepVar = I_DepVar;
4136690   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4136691   +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
4136692   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4136693   +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
4136694   +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
4136695   +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
4136696   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4136697   +* Ensmbl38: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Scoring Code of model 7 of 7;
4136698   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4136699   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4136700   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
4136701   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
4136702   +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
4136703   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4136704   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4136705   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4136706   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4136707   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4136708   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4136709   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4136710   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4136711   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4136712   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4136713   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4136714   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4136715   +LENGTH _WARN_ $4
4136716   +      F_DepVar  $ 12
4136717   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
4136718   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4136719   +
4136720   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4136721   +
4136722   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4136723   +
4136724   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4136725   +
4136726   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4136727   +
4136728   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4136729   +
4136730   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4136731   +
4136732   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4136733   +
4136734   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4136735   +
4136736   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4136737   +
4136738   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4136739   +
4136740   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4136741   +
4136742   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4136743   +
4136744   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4136745   +
4136746   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4136747   +
4136748   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4136749   +
4136750   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4136751   +
4136752   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4136753   +
4136754   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4136755   +
4136756   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4136757   +
4136758   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4136759   +
4136760   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4136761   +
4136762   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4136763   +
4136764   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4136765   +
4136766   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4136767   +
4136768   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4136769   +
4136770   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4136771   +
4136772   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4136773   +
4136774   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4136775   +
4136776   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4136777   +
4136778   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4136779   +
4136780   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4136781   +
4136782   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4136783   +
4136784   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4136785   +
4136786   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4136787   +
4136788   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4136789   +
4136790   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4136791   +
4136792   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4136793   +
4136794   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4136795   +
4136796   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4136797   +
4136798   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
4136799   +
4136800   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
4136801   +
4136802   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
4136803   +
4136804   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
4136805   +
4136806   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
4136807   +
4136808   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
4136809   +
4136810   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
4136811   +
4136812   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
4136813   +
4136814   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
4136815   +
4136816   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
4136817   +
4136818   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
4136819   +
4136820   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
4136821   +
4136822   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
4136823   +
4136824   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
4136825   +
4136826   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
4136827   +
4136828   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
4136829   +
4136830   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
4136831   +
4136832   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
4136833   +
4136834   +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
4136835   +
4136836   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4136837   +
4136838   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4136839   +
4136840   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4136841   +
4136842   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4136843   +
4136844   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
4136845   +
4136846   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4136847   +
4136848   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
4136849   +
4136850   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4136851   +
4136852   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4136853   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4136854   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4136855   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4136856   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4136857   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4136858   +end;
MPRINT(EM_DIAGRAM):   end;
4136859   +else do;
MPRINT(EM_DIAGRAM):   else do;
4136860   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4136861   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4136862   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4136863   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4136864   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4136865   +   end;
MPRINT(EM_DIAGRAM):   end;
4136866   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4136867   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4136868   +   end;
MPRINT(EM_DIAGRAM):   end;
4136869   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4136870   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4136871   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4136872   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4136873   +   end;
MPRINT(EM_DIAGRAM):   end;
4136874   +end;
MPRINT(EM_DIAGRAM):   end;
4136875   +
4136876   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4136877   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4136878   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4136879   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4136880   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4136881   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4136882   +end;
MPRINT(EM_DIAGRAM):   end;
4136883   +else do;
MPRINT(EM_DIAGRAM):   else do;
4136884   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4136885   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4136886   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4136887   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4136888   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4136889   +   end;
MPRINT(EM_DIAGRAM):   end;
4136890   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4136891   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4136892   +   end;
MPRINT(EM_DIAGRAM):   end;
4136893   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4136894   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4136895   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4136896   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4136897   +   end;
MPRINT(EM_DIAGRAM):   end;
4136898   +end;
MPRINT(EM_DIAGRAM):   end;
4136899   +
4136900   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4136901   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4136902   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4136903   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4136904   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4136905   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4136906   +end;
MPRINT(EM_DIAGRAM):   end;
4136907   +else do;
MPRINT(EM_DIAGRAM):   else do;
4136908   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4136909   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4136910   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4136911   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4136912   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4136913   +   end;
MPRINT(EM_DIAGRAM):   end;
4136914   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4136915   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4136916   +   end;
MPRINT(EM_DIAGRAM):   end;
4136917   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4136918   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4136919   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4136920   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4136921   +   end;
MPRINT(EM_DIAGRAM):   end;
4136922   +end;
MPRINT(EM_DIAGRAM):   end;
4136923   +
4136924   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4136925   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4136926   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4136927   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4136928   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4136929   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4136930   +end;
MPRINT(EM_DIAGRAM):   end;
4136931   +else do;
MPRINT(EM_DIAGRAM):   else do;
4136932   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4136933   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4136934   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4136935   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4136936   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4136937   +   end;
MPRINT(EM_DIAGRAM):   end;
4136938   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4136939   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4136940   +   end;
MPRINT(EM_DIAGRAM):   end;
4136941   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4136942   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4136943   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4136944   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4136945   +   end;
MPRINT(EM_DIAGRAM):   end;
4136946   +end;
MPRINT(EM_DIAGRAM):   end;
4136947   +
4136948   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4136949   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4136950   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4136951   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4136952   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4136953   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4136954   +end;
MPRINT(EM_DIAGRAM):   end;
4136955   +else do;
MPRINT(EM_DIAGRAM):   else do;
4136956   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4136957   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4136958   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4136959   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4136960   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4136961   +   end;
MPRINT(EM_DIAGRAM):   end;
4136962   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4136963   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4136964   +   end;
MPRINT(EM_DIAGRAM):   end;
4136965   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4136966   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4136967   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4136968   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4136969   +   end;
MPRINT(EM_DIAGRAM):   end;
4136970   +end;
MPRINT(EM_DIAGRAM):   end;
4136971   +
4136972   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4136973   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4136974   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4136975   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4136976   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4136977   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4136978   +end;
MPRINT(EM_DIAGRAM):   end;
4136979   +else do;
MPRINT(EM_DIAGRAM):   else do;
4136980   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4136981   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4136982   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4136983   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4136984   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4136985   +   end;
MPRINT(EM_DIAGRAM):   end;
4136986   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4136987   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4136988   +   end;
MPRINT(EM_DIAGRAM):   end;
4136989   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4136990   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4136991   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4136992   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4136993   +   end;
MPRINT(EM_DIAGRAM):   end;
4136994   +end;
MPRINT(EM_DIAGRAM):   end;
4136995   +
4136996   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4136997   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4136998   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4136999   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4137000   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4137001   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4137002   +end;
MPRINT(EM_DIAGRAM):   end;
4137003   +else do;
MPRINT(EM_DIAGRAM):   else do;
4137004   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4137005   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4137006   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4137007   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4137008   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4137009   +   end;
MPRINT(EM_DIAGRAM):   end;
4137010   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4137011   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4137012   +   end;
MPRINT(EM_DIAGRAM):   end;
4137013   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4137014   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4137015   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4137016   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4137017   +   end;
MPRINT(EM_DIAGRAM):   end;
4137018   +end;
MPRINT(EM_DIAGRAM):   end;
4137019   +
4137020   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4137021   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
4137022   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4137023   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4137024   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4137025   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4137026   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4137027   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4137028   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4137029   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4137030   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4137031   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4137032   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4137033   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4137034   +end;
MPRINT(EM_DIAGRAM):   end;
4137035   +else do;
MPRINT(EM_DIAGRAM):   else do;
4137036   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4137037   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4137038   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4137039   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4137040   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4137041   +   end;
MPRINT(EM_DIAGRAM):   end;
4137042   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4137043   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4137044   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4137045   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4137046   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4137047   +   end;
MPRINT(EM_DIAGRAM):   end;
4137048   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4137049   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4137050   +   end;
MPRINT(EM_DIAGRAM):   end;
4137051   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4137052   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4137053   +   end;
MPRINT(EM_DIAGRAM):   end;
4137054   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4137055   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4137056   +   end;
MPRINT(EM_DIAGRAM):   end;
4137057   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4137058   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4137059   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4137060   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4137061   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4137062   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4137063   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4137064   +   end;
MPRINT(EM_DIAGRAM):   end;
4137065   +end;
MPRINT(EM_DIAGRAM):   end;
4137066   +
4137067   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4137068   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4137069   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
4137070   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4137071   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4137072   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4137073   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4137074   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4137075   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4137076   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4137077   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4137078   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4137079   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4137080   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4137081   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4137082   +end;
MPRINT(EM_DIAGRAM):   end;
4137083   +else do;
MPRINT(EM_DIAGRAM):   else do;
4137084   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4137085   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4137086   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4137087   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4137088   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4137089   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4137090   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4137091   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4137092   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4137093   +         end;
MPRINT(EM_DIAGRAM):   end;
4137094   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4137095   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4137096   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4137097   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4137098   +            end;
MPRINT(EM_DIAGRAM):   end;
4137099   +         end;
MPRINT(EM_DIAGRAM):   end;
4137100   +      end;
MPRINT(EM_DIAGRAM):   end;
4137101   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4137102   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4137103   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4137104   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4137105   +         end;
MPRINT(EM_DIAGRAM):   end;
4137106   +      end;
MPRINT(EM_DIAGRAM):   end;
4137107   +   end;
MPRINT(EM_DIAGRAM):   end;
4137108   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4137109   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4137110   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4137111   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4137112   +      end;
MPRINT(EM_DIAGRAM):   end;
4137113   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4137114   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4137115   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4137116   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4137117   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4137118   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4137119   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4137120   +         end;
MPRINT(EM_DIAGRAM):   end;
4137121   +      end;
MPRINT(EM_DIAGRAM):   end;
4137122   +   end;
MPRINT(EM_DIAGRAM):   end;
4137123   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4137124   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4137125   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4137126   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4137127   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4137128   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4137129   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4137130   +   end;
MPRINT(EM_DIAGRAM):   end;
4137131   +end;
MPRINT(EM_DIAGRAM):   end;
4137132   +
4137133   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4137134   +*** Checking missing input Interval
4137135   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4137136   +
4137137   +IF NMISS(
4137138   +   AcceptedCmpTotal ,
4137139   +   Age ,
4137140   +   Frq ,
4137141   +   Income ,
4137142   +   Kidhome ,
4137143   +   Mnt ,
4137144   +   MntFishProducts ,
4137145   +   MntFruits ,
4137146   +   MntGoldProds ,
4137147   +   MntMeatProducts ,
4137148   +   MntSweetProducts ,
4137149   +   MntWines ,
4137150   +   MonthsAsCustomer ,
4137151   +   NumCatalogPurchases ,
4137152   +   NumDealsPurchases ,
4137153   +   NumDistPurchases ,
4137154   +   NumStorePurchases ,
4137155   +   NumWebPurchases ,
4137156   +   NumWebVisitsMonth ,
4137157   +   RFMstat ,
4137158   +   RMntFrq ,
4137159   +   Recency ,
4137160   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
4137161   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4137162   +
4137163   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4137164   +END;
MPRINT(EM_DIAGRAM):   END;
4137165   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4137166   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4137167   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4137168   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4137169   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4137170   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
4137171   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4137172   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4137173   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4137174   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4137175   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4137176   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4137177   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
4137178   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4137179   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4137180   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4137181   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4137182   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
4137183   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4137184   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
4137185   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4137186   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4137187   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
4137188   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4137189   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
4137190   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4137191   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
4137192   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4137193   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
4137194   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4137195   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
4137196   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4137197   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
4137198   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4137199   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
4137200   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4137201   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4137202   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4137203   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4137204   +END;
MPRINT(EM_DIAGRAM):   END;
4137205   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4137206   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4137207   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4137208   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
4137209   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4137210   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4137211   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4137212   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4137213   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4137214   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4137215   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4137216   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4137217   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4137218   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4137219   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4137220   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4137221   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
4137222   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4137223   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4137224   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4137225   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4137226   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4137227   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
4137228   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4137229   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4137230   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
4137231   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4137232   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4137233   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
4137234   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4137235   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4137236   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4137237   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4137238   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
4137239   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4137240   +   ELSE S_NumCatalogPurchases
4137241   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4137242   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
4137243   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4137244   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4137245   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
4137246   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4137247   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4137248   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
4137249   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4137250   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4137251   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
4137252   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4137253   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4137254   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
4137255   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4137256   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4137257   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
4137258   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4137259   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4137260   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4137261   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4137262   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4137263   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4137264   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4137265   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4137266   +END;
MPRINT(EM_DIAGRAM):   END;
4137267   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4137268   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4137269   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4137270   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4137271   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4137272   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4137273   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4137274   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4137275   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4137276   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4137277   +   H1x1_1  =     0.63316204656896 * S_AcceptedCmpTotal
4137278   +          +    -0.24884200883415 * S_Age  +      -0.236584005151 * S_Frq
4137279   +          +     0.25406117591995 * S_Income  +    -0.56304122955704 *
4137280   +        S_Kidhome  +    -0.23687782938793 * S_Mnt  +    -0.09770906650074 *
4137281   +        S_MntFishProducts  +    -0.73487360819716 * S_MntFruits
4137282   +          +     0.14293909908147 * S_MntGoldProds  +     2.25015000307426 *
4137283   +        S_MntMeatProducts  +    -0.42178958150661 * S_MntSweetProducts
4137284   +          +    -2.35340366839307 * S_MntWines  +    -0.02380265380154 *
4137285   +        S_MonthsAsCustomer  +     1.16509321438746 * S_NumCatalogPurchases
4137286   +          +     1.17276395296242 * S_NumDealsPurchases
4137287   +          +     0.26632768295477 * S_NumDistPurchases
4137288   +          +    -1.26575615903579 * S_NumStorePurchases
4137289   +          +    -0.95316107557927 * S_NumWebPurchases
4137290   +          +     1.01828574356487 * S_NumWebVisitsMonth
4137291   +          +       0.795866263515 * S_RFMstat  +    -0.20490378142832 *
4137292   +        S_RMntFrq  +    -0.82943281422857 * S_Recency
4137293   +          +     0.16132418388418 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.63316204656896 * S_AcceptedCmpTotal + -0.24884200883415 * 
S_Age + -0.236584005151 * S_Frq + 0.25406117591995 * S_Income + -0.56304122955704 * S_Kidhome 
+ -0.23687782938793 * S_Mnt + -0.09770906650074 * S_MntFishProducts + -0.73487360819716 * 
S_MntFruits + 0.14293909908147 * S_MntGoldProds + 2.25015000307426 * S_MntMeatProducts + 
-0.42178958150661 * S_MntSweetProducts + -2.35340366839307 * S_MntWines + -0.02380265380154 * 
S_MonthsAsCustomer + 1.16509321438746 * S_NumCatalogPurchases + 1.17276395296242 * 
S_NumDealsPurchases + 0.26632768295477 * S_NumDistPurchases + -1.26575615903579 * 
S_NumStorePurchases + -0.95316107557927 * S_NumWebPurchases + 1.01828574356487 * 
S_NumWebVisitsMonth + 0.795866263515 * S_RFMstat + -0.20490378142832 * S_RMntFrq + 
-0.82943281422857 * S_Recency + 0.16132418388418 * S_Teenhome ;
4137294   +   H1x1_2  =    -0.43482920479481 * S_AcceptedCmpTotal
4137295   +          +     0.53350211221915 * S_Age  +    -0.06797700766223 * S_Frq
4137296   +          +     0.13771322007949 * S_Income  +     0.87012019559698 *
4137297   +        S_Kidhome  +     0.06026853274247 * S_Mnt  +    -0.43150595882972 *
4137298   +        S_MntFishProducts  +    -0.13728591661063 * S_MntFruits
4137299   +          +     0.35443873962923 * S_MntGoldProds  +     0.28102965401547 *
4137300   +        S_MntMeatProducts  +     0.52367949052365 * S_MntSweetProducts
4137301   +          +     0.35553595364078 * S_MntWines  +     0.37892120128383 *
4137302   +        S_MonthsAsCustomer  +     0.59057645965187 * S_NumCatalogPurchases
4137303   +          +     1.14485571201233 * S_NumDealsPurchases
4137304   +          +     0.21414266588987 * S_NumDistPurchases
4137305   +          +    -0.10530090074297 * S_NumStorePurchases
4137306   +          +    -0.41712321238458 * S_NumWebPurchases
4137307   +          +    -0.99760766791108 * S_NumWebVisitsMonth
4137308   +          +    -0.90203265666387 * S_RFMstat  +    -0.60947922673601 *
4137309   +        S_RMntFrq  +     1.10040128548883 * S_Recency
4137310   +          +     0.16728431679949 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.43482920479481 * S_AcceptedCmpTotal + 0.53350211221915 * 
S_Age + -0.06797700766223 * S_Frq + 0.13771322007949 * S_Income + 0.87012019559698 * S_Kidhome 
+ 0.06026853274247 * S_Mnt + -0.43150595882972 * S_MntFishProducts + -0.13728591661063 * 
S_MntFruits + 0.35443873962923 * S_MntGoldProds + 0.28102965401547 * S_MntMeatProducts + 
0.52367949052365 * S_MntSweetProducts + 0.35553595364078 * S_MntWines + 0.37892120128383 * 
S_MonthsAsCustomer + 0.59057645965187 * S_NumCatalogPurchases + 1.14485571201233 * 
S_NumDealsPurchases + 0.21414266588987 * S_NumDistPurchases + -0.10530090074297 * 
S_NumStorePurchases + -0.41712321238458 * S_NumWebPurchases + -0.99760766791108 * 
S_NumWebVisitsMonth + -0.90203265666387 * S_RFMstat + -0.60947922673601 * S_RMntFrq + 
1.10040128548883 * S_Recency + 0.16728431679949 * S_Teenhome ;
4137311   +   H1x1_3  =     0.26373486938499 * S_AcceptedCmpTotal
4137312   +          +    -0.22246756314756 * S_Age  +     0.49537720979115 * S_Frq
4137313   +          +     1.38815981786544 * S_Income  +    -0.93015968695331 *
4137314   +        S_Kidhome  +     0.11586216615481 * S_Mnt  +    -0.02105973515345 *
4137315   +        S_MntFishProducts  +    -0.28078442249811 * S_MntFruits
4137316   +          +    -0.01763878655129 * S_MntGoldProds  +     0.83934619541231 *
4137317   +        S_MntMeatProducts  +    -0.23417310915433 * S_MntSweetProducts
4137318   +          +    -0.29135819585991 * S_MntWines  +    -0.20792872642036 *
4137319   +        S_MonthsAsCustomer  +     1.05218745810839 * S_NumCatalogPurchases
4137320   +          +      0.7196418967437 * S_NumDealsPurchases
4137321   +          +     0.69035286374177 * S_NumDistPurchases
4137322   +          +     0.38027656631135 * S_NumStorePurchases
4137323   +          +    -0.18878358997924 * S_NumWebPurchases
4137324   +          +     1.61962062004798 * S_NumWebVisitsMonth
4137325   +          +    -0.04575386719745 * S_RFMstat  +     1.16358450490635 *
4137326   +        S_RMntFrq  +    -2.13821542142822 * S_Recency
4137327   +          +    -1.28960355207697 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.26373486938499 * S_AcceptedCmpTotal + -0.22246756314756 * 
S_Age + 0.49537720979115 * S_Frq + 1.38815981786544 * S_Income + -0.93015968695331 * S_Kidhome 
+ 0.11586216615481 * S_Mnt + -0.02105973515345 * S_MntFishProducts + -0.28078442249811 * 
S_MntFruits + -0.01763878655129 * S_MntGoldProds + 0.83934619541231 * S_MntMeatProducts + 
-0.23417310915433 * S_MntSweetProducts + -0.29135819585991 * S_MntWines + -0.20792872642036 * 
S_MonthsAsCustomer + 1.05218745810839 * S_NumCatalogPurchases + 0.7196418967437 * 
S_NumDealsPurchases + 0.69035286374177 * S_NumDistPurchases + 0.38027656631135 * 
S_NumStorePurchases + -0.18878358997924 * S_NumWebPurchases + 1.61962062004798 * 
S_NumWebVisitsMonth + -0.04575386719745 * S_RFMstat + 1.16358450490635 * S_RMntFrq + 
-2.13821542142822 * S_Recency + -1.28960355207697 * S_Teenhome ;
4137328   +   H1x1_4  =    -0.34331113295243 * S_AcceptedCmpTotal
4137329   +          +    -0.39878146063012 * S_Age  +     0.10068367322473 * S_Frq
4137330   +          +    -0.20171643525685 * S_Income  +    -0.76934260520569 *
4137331   +        S_Kidhome  +    -0.66782690219397 * S_Mnt  +     0.80905970181803 *
4137332   +        S_MntFishProducts  +    -0.03688782193215 * S_MntFruits
4137333   +          +     0.06641568264972 * S_MntGoldProds  +    -3.32390323965822 *
4137334   +        S_MntMeatProducts  +    -0.05413014598032 * S_MntSweetProducts
4137335   +          +     1.07708707113306 * S_MntWines  +     0.13185264889978 *
4137336   +        S_MonthsAsCustomer  +    -0.39476201074171 * S_NumCatalogPurchases
4137337   +          +    -0.00642902007204 * S_NumDealsPurchases
4137338   +          +     0.29785069480367 * S_NumDistPurchases
4137339   +          +    -0.42243322063147 * S_NumStorePurchases
4137340   +          +     0.54880896338383 * S_NumWebPurchases
4137341   +          +    -0.12525846016886 * S_NumWebVisitsMonth
4137342   +          +    -0.31397100953189 * S_RFMstat  +     -0.5192863720509 *
4137343   +        S_RMntFrq  +     0.10252211581449 * S_Recency
4137344   +          +     0.44223031313104 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.34331113295243 * S_AcceptedCmpTotal + -0.39878146063012 * 
S_Age + 0.10068367322473 * S_Frq + -0.20171643525685 * S_Income + -0.76934260520569 * 
S_Kidhome + -0.66782690219397 * S_Mnt + 0.80905970181803 * S_MntFishProducts + 
-0.03688782193215 * S_MntFruits + 0.06641568264972 * S_MntGoldProds + -3.32390323965822 * 
S_MntMeatProducts + -0.05413014598032 * S_MntSweetProducts + 1.07708707113306 * S_MntWines + 
0.13185264889978 * S_MonthsAsCustomer + -0.39476201074171 * S_NumCatalogPurchases + 
-0.00642902007204 * S_NumDealsPurchases + 0.29785069480367 * S_NumDistPurchases + 
-0.42243322063147 * S_NumStorePurchases + 0.54880896338383 * S_NumWebPurchases + 
-0.12525846016886 * S_NumWebVisitsMonth + -0.31397100953189 * S_RFMstat + -0.5192863720509 * 
S_RMntFrq + 0.10252211581449 * S_Recency + 0.44223031313104 * S_Teenhome ;
4137345   +   H1x1_5  =    -0.89949577087728 * S_AcceptedCmpTotal
4137346   +          +     -0.5133669560115 * S_Age  +     0.55814120515869 * S_Frq
4137347   +          +    -0.72790553700689 * S_Income  +     1.13470491167406 *
4137348   +        S_Kidhome  +     0.42465795563071 * S_Mnt  +     0.22642900369653 *
4137349   +        S_MntFishProducts  +    -0.10149694753146 * S_MntFruits
4137350   +          +    -0.05203167914723 * S_MntGoldProds  +    -0.42300460593042 *
4137351   +        S_MntMeatProducts  +    -0.11178206624825 * S_MntSweetProducts
4137352   +          +     1.57257994445012 * S_MntWines  +     0.02297554927807 *
4137353   +        S_MonthsAsCustomer  +    -0.60721423552141 * S_NumCatalogPurchases
4137354   +          +    -0.48404738328225 * S_NumDealsPurchases
4137355   +          +    -0.02464180457879 * S_NumDistPurchases
4137356   +          +     1.17201831082067 * S_NumStorePurchases
4137357   +          +     0.57453655167516 * S_NumWebPurchases
4137358   +          +    -1.94417019790248 * S_NumWebVisitsMonth
4137359   +          +     0.00073301476364 * S_RFMstat  +     0.12295343326875 *
4137360   +        S_RMntFrq  +      1.6169916658132 * S_Recency
4137361   +          +     0.09488579305439 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.89949577087728 * S_AcceptedCmpTotal + -0.5133669560115 * 
S_Age + 0.55814120515869 * S_Frq + -0.72790553700689 * S_Income + 1.13470491167406 * S_Kidhome 
+ 0.42465795563071 * S_Mnt + 0.22642900369653 * S_MntFishProducts + -0.10149694753146 * 
S_MntFruits + -0.05203167914723 * S_MntGoldProds + -0.42300460593042 * S_MntMeatProducts + 
-0.11178206624825 * S_MntSweetProducts + 1.57257994445012 * S_MntWines + 0.02297554927807 * 
S_MonthsAsCustomer + -0.60721423552141 * S_NumCatalogPurchases + -0.48404738328225 * 
S_NumDealsPurchases + -0.02464180457879 * S_NumDistPurchases + 1.17201831082067 * 
S_NumStorePurchases + 0.57453655167516 * S_NumWebPurchases + -1.94417019790248 * 
S_NumWebVisitsMonth + 0.00073301476364 * S_RFMstat + 0.12295343326875 * S_RMntFrq + 
1.6169916658132 * S_Recency + 0.09488579305439 * S_Teenhome ;
4137362   +   H1x1_6  =     0.01224996381937 * S_AcceptedCmpTotal
4137363   +          +     0.56818460209578 * S_Age  +    -0.50544994791872 * S_Frq
4137364   +          +    -0.39086889823619 * S_Income  +      0.2278709145292 *
4137365   +        S_Kidhome  +       0.221310975162 * S_Mnt  +     -0.2208719427117 *
4137366   +        S_MntFishProducts  +     0.33199116637803 * S_MntFruits
4137367   +          +    -0.20919304257884 * S_MntGoldProds  +     0.85155045239396 *
4137368   +        S_MntMeatProducts  +     0.32150401526792 * S_MntSweetProducts
4137369   +          +     0.24789026157513 * S_MntWines  +    -0.16427340869887 *
4137370   +        S_MonthsAsCustomer  +    -1.31657293247686 * S_NumCatalogPurchases
4137371   +          +    -1.49850531967483 * S_NumDealsPurchases
4137372   +          +    -0.82105466264223 * S_NumDistPurchases
4137373   +          +     0.29984603642824 * S_NumStorePurchases
4137374   +          +     0.06557123721611 * S_NumWebPurchases
4137375   +          +     1.04754749365002 * S_NumWebVisitsMonth
4137376   +          +     0.18881248406892 * S_RFMstat  +     0.26455728766984 *
4137377   +        S_RMntFrq  +     0.12396789666359 * S_Recency
4137378   +          +     0.04001049603668 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.01224996381937 * S_AcceptedCmpTotal + 0.56818460209578 * 
S_Age + -0.50544994791872 * S_Frq + -0.39086889823619 * S_Income + 0.2278709145292 * S_Kidhome 
+ 0.221310975162 * S_Mnt + -0.2208719427117 * S_MntFishProducts + 0.33199116637803 * 
S_MntFruits + -0.20919304257884 * S_MntGoldProds + 0.85155045239396 * S_MntMeatProducts + 
0.32150401526792 * S_MntSweetProducts + 0.24789026157513 * S_MntWines + -0.16427340869887 * 
S_MonthsAsCustomer + -1.31657293247686 * S_NumCatalogPurchases + -1.49850531967483 * 
S_NumDealsPurchases + -0.82105466264223 * S_NumDistPurchases + 0.29984603642824 * 
S_NumStorePurchases + 0.06557123721611 * S_NumWebPurchases + 1.04754749365002 * 
S_NumWebVisitsMonth + 0.18881248406892 * S_RFMstat + 0.26455728766984 * S_RMntFrq + 
0.12396789666359 * S_Recency + 0.04001049603668 * S_Teenhome ;
4137379   +   H1x1_1  = H1x1_1  +     -0.4293641198863 * AcceptedCmp10
4137380   +          +    -0.02562823362815 * AcceptedCmp20  +     0.16277388616218 *
4137381   +        AcceptedCmp30  +    -0.38952498475664 * AcceptedCmp40
4137382   +          +    -0.13756852377245 * AcceptedCmp50  +    -0.11393239206883 *
4137383   +        Complain0  +    -0.18422159910382 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.4293641198863 * AcceptedCmp10 + -0.02562823362815 * 
AcceptedCmp20 + 0.16277388616218 * AcceptedCmp30 + -0.38952498475664 * AcceptedCmp40 + 
-0.13756852377245 * AcceptedCmp50 + -0.11393239206883 * Complain0 + -0.18422159910382 * 
HigherEducationBinary0 ;
4137384   +   H1x1_2  = H1x1_2  +     -0.6690011671322 * AcceptedCmp10
4137385   +          +     0.30944418540454 * AcceptedCmp20  +     0.58989055832198 *
4137386   +        AcceptedCmp30  +    -0.11349554378017 * AcceptedCmp40
4137387   +          +     0.17747537507545 * AcceptedCmp50  +     0.31141201787728 *
4137388   +        Complain0  +    -0.14665102087088 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.6690011671322 * AcceptedCmp10 + 0.30944418540454 * 
AcceptedCmp20 + 0.58989055832198 * AcceptedCmp30 + -0.11349554378017 * AcceptedCmp40 + 
0.17747537507545 * AcceptedCmp50 + 0.31141201787728 * Complain0 + -0.14665102087088 * 
HigherEducationBinary0 ;
4137389   +   H1x1_3  = H1x1_3  +    -0.37718551551154 * AcceptedCmp10
4137390   +          +    -0.95419836616858 * AcceptedCmp20  +    -1.07782642598822 *
4137391   +        AcceptedCmp30  +    -0.36181507758379 * AcceptedCmp40
4137392   +          +    -0.20579221441057 * AcceptedCmp50  +     -0.2862570173476 *
4137393   +        Complain0  +     0.42095042003574 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.37718551551154 * AcceptedCmp10 + -0.95419836616858 
* AcceptedCmp20 + -1.07782642598822 * AcceptedCmp30 + -0.36181507758379 * AcceptedCmp40 + 
-0.20579221441057 * AcceptedCmp50 + -0.2862570173476 * Complain0 + 0.42095042003574 * 
HigherEducationBinary0 ;
4137394   +   H1x1_4  = H1x1_4  +     0.76282838117383 * AcceptedCmp10
4137395   +          +     0.17657215690894 * AcceptedCmp20  +     0.06936093547655 *
4137396   +        AcceptedCmp30  +    -0.31222684620157 * AcceptedCmp40
4137397   +          +     0.35916828202502 * AcceptedCmp50  +     0.15464859425769 *
4137398   +        Complain0  +    -0.12780871374988 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.76282838117383 * AcceptedCmp10 + 0.17657215690894 * 
AcceptedCmp20 + 0.06936093547655 * AcceptedCmp30 + -0.31222684620157 * AcceptedCmp40 + 
0.35916828202502 * AcceptedCmp50 + 0.15464859425769 * Complain0 + -0.12780871374988 * 
HigherEducationBinary0 ;
4137399   +   H1x1_5  = H1x1_5  +      0.0863832283968 * AcceptedCmp10
4137400   +          +    -0.01478152334234 * AcceptedCmp20  +    -0.25793605794945 *
4137401   +        AcceptedCmp30  +     0.75328991260718 * AcceptedCmp40
4137402   +          +     0.43869592545355 * AcceptedCmp50  +    -0.18444801256895 *
4137403   +        Complain0  +    -0.18540568245616 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0863832283968 * AcceptedCmp10 + -0.01478152334234 * 
AcceptedCmp20 + -0.25793605794945 * AcceptedCmp30 + 0.75328991260718 * AcceptedCmp40 + 
0.43869592545355 * AcceptedCmp50 + -0.18444801256895 * Complain0 + -0.18540568245616 * 
HigherEducationBinary0 ;
4137404   +   H1x1_6  = H1x1_6  +    -0.05476883960444 * AcceptedCmp10
4137405   +          +    -0.30796660956747 * AcceptedCmp20  +    -0.15332998700386 *
4137406   +        AcceptedCmp30  +     0.07190305484507 * AcceptedCmp40
4137407   +          +    -0.19344551087023 * AcceptedCmp50  +    -0.01671794402922 *
4137408   +        Complain0  +      0.4224003744836 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.05476883960444 * AcceptedCmp10 + -0.30796660956747 
* AcceptedCmp20 + -0.15332998700386 * AcceptedCmp30 + 0.07190305484507 * AcceptedCmp40 + 
-0.19344551087023 * AcceptedCmp50 + -0.01671794402922 * Complain0 + 0.4224003744836 * 
HigherEducationBinary0 ;
4137409   +   H1x1_1  = H1x1_1  +     0.06740641383122 * Education2n_Cycle
4137410   +          +      0.0427985447056 * EducationBasic  +     0.38043688251433 *
4137411   +        EducationGraduation  +     0.07595631354847 * EducationMaster
4137412   +          +     0.24583509957712 * Marital_StatusDivorced
4137413   +          +    -0.22681931588361 * Marital_StatusMarried
4137414   +          +    -0.12924106229536 * Marital_StatusSingle
4137415   +          +     -0.2262058185403 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.06740641383122 * Education2n_Cycle + 0.0427985447056 
* EducationBasic + 0.38043688251433 * EducationGraduation + 0.07595631354847 * EducationMaster 
+ 0.24583509957712 * Marital_StatusDivorced + -0.22681931588361 * Marital_StatusMarried + 
-0.12924106229536 * Marital_StatusSingle + -0.2262058185403 * Marital_StatusTogether ;
4137416   +   H1x1_2  = H1x1_2  +    -0.13120690973481 * Education2n_Cycle
4137417   +          +     0.37925506295244 * EducationBasic  +     0.31784700588218 *
4137418   +        EducationGraduation  +     0.23015089246655 * EducationMaster
4137419   +          +    -0.12585334311068 * Marital_StatusDivorced
4137420   +          +    -0.20835502467207 * Marital_StatusMarried
4137421   +          +    -0.13839534449368 * Marital_StatusSingle
4137422   +          +     0.64317572477668 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.13120690973481 * Education2n_Cycle + 
0.37925506295244 * EducationBasic + 0.31784700588218 * EducationGraduation + 0.23015089246655 
* EducationMaster + -0.12585334311068 * Marital_StatusDivorced + -0.20835502467207 * 
Marital_StatusMarried + -0.13839534449368 * Marital_StatusSingle + 0.64317572477668 * 
Marital_StatusTogether ;
4137423   +   H1x1_3  = H1x1_3  +     0.32305785926236 * Education2n_Cycle
4137424   +          +     0.23464353160373 * EducationBasic  +    -0.73832644067678 *
4137425   +        EducationGraduation  +    -0.03608560158257 * EducationMaster
4137426   +          +     0.35106363238113 * Marital_StatusDivorced
4137427   +          +     -1.3414808583918 * Marital_StatusMarried
4137428   +          +     1.40835320798486 * Marital_StatusSingle
4137429   +          +    -1.26805917396788 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.32305785926236 * Education2n_Cycle + 
0.23464353160373 * EducationBasic + -0.73832644067678 * EducationGraduation + 
-0.03608560158257 * EducationMaster + 0.35106363238113 * Marital_StatusDivorced + 
-1.3414808583918 * Marital_StatusMarried + 1.40835320798486 * Marital_StatusSingle + 
-1.26805917396788 * Marital_StatusTogether ;
4137430   +   H1x1_4  = H1x1_4  +    -0.14516593990466 * Education2n_Cycle
4137431   +          +     0.21457892528906 * EducationBasic  +      0.3693312496431 *
4137432   +        EducationGraduation  +      0.1746658332011 * EducationMaster
4137433   +          +     0.48174546958393 * Marital_StatusDivorced
4137434   +          +    -0.41416978858191 * Marital_StatusMarried
4137435   +          +    -0.23376801546265 * Marital_StatusSingle
4137436   +          +    -0.40569257078897 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.14516593990466 * Education2n_Cycle + 
0.21457892528906 * EducationBasic + 0.3693312496431 * EducationGraduation + 0.1746658332011 * 
EducationMaster + 0.48174546958393 * Marital_StatusDivorced + -0.41416978858191 * 
Marital_StatusMarried + -0.23376801546265 * Marital_StatusSingle + -0.40569257078897 * 
Marital_StatusTogether ;
4137437   +   H1x1_5  = H1x1_5  +    -0.00489214718621 * Education2n_Cycle
4137438   +          +     0.04788059649714 * EducationBasic  +      -0.479003778409 *
4137439   +        EducationGraduation  +     0.68875064631577 * EducationMaster
4137440   +          +    -0.67557643774246 * Marital_StatusDivorced
4137441   +          +     1.63844045917367 * Marital_StatusMarried
4137442   +          +    -0.70320960247699 * Marital_StatusSingle
4137443   +          +     1.26350112628909 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.00489214718621 * Education2n_Cycle + 
0.04788059649714 * EducationBasic + -0.479003778409 * EducationGraduation + 0.68875064631577 * 
EducationMaster + -0.67557643774246 * Marital_StatusDivorced + 1.63844045917367 * 
Marital_StatusMarried + -0.70320960247699 * Marital_StatusSingle + 1.26350112628909 * 
Marital_StatusTogether ;
4137444   +   H1x1_6  = H1x1_6  +     0.38566123849432 * Education2n_Cycle
4137445   +          +    -0.48006357411447 * EducationBasic  +     0.06594567975069 *
4137446   +        EducationGraduation  +    -0.68011360002443 * EducationMaster
4137447   +          +    -0.11371453086883 * Marital_StatusDivorced
4137448   +          +    -0.34226997176291 * Marital_StatusMarried
4137449   +          +    -1.01568676685754 * Marital_StatusSingle
4137450   +          +    -0.07673228755579 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.38566123849432 * Education2n_Cycle + 
-0.48006357411447 * EducationBasic + 0.06594567975069 * EducationGraduation + 
-0.68011360002443 * EducationMaster + -0.11371453086883 * Marital_StatusDivorced + 
-0.34226997176291 * Marital_StatusMarried + -1.01568676685754 * Marital_StatusSingle + 
-0.07673228755579 * Marital_StatusTogether ;
4137451   +   H1x1_1  =    -0.13665586104906 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.13665586104906 + H1x1_1 ;
4137452   +   H1x1_2  =    -1.74128345271319 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.74128345271319 + H1x1_2 ;
4137453   +   H1x1_3  =    -0.38226400326342 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.38226400326342 + H1x1_3 ;
4137454   +   H1x1_4  =    -0.64652756521333 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.64652756521333 + H1x1_4 ;
4137455   +   H1x1_5  =     0.89555568414722 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.89555568414722 + H1x1_5 ;
4137456   +   H1x1_6  =    -0.28536788363505 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.28536788363505 + H1x1_6 ;
4137457   +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
4137458   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
4137459   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , 
H1x1_7 );
4137460   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4137461   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
4137462   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
4137463   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
4137464   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
4137465   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
4137466   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
4137467   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
4137468   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
4137469   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
4137470   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
4137471   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
4137472   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
4137473   +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
4137474   +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
4137475   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
4137476   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
4137477   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
4137478   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
4137479   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
4137480   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
4137481   +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
4137482   +END;
MPRINT(EM_DIAGRAM):   END;
4137483   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4137484   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4137485   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4137486   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
4137487   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
4137488   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
4137489   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
4137490   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
4137491   +END;
MPRINT(EM_DIAGRAM):   END;
4137492   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4137493   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
4137494   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4137495   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4137496   +   H1x2_1  =    -0.46863593010465 * S_AcceptedCmpTotal
4137497   +          +     0.76938995153422 * S_Age  +    -0.10870665325086 * S_Frq
4137498   +          +    -0.01767709917897 * S_Income  +    -0.06564852978687 *
4137499   +        S_Kidhome  +     1.53975855599943 * S_Mnt  +     0.14885556549813 *
4137500   +        S_MntFishProducts  +     -0.3427211596875 * S_MntFruits
4137501   +          +     1.82311511422571 * S_MntGoldProds  +     1.16814585484266 *
4137502   +        S_MntMeatProducts  +    -0.03210183211362 * S_MntSweetProducts
4137503   +          +     0.21048598967441 * S_MntWines  +    -1.43075224286158 *
4137504   +        S_MonthsAsCustomer  +     0.17264791017938 * S_NumCatalogPurchases
4137505   +          +    -0.87259051567474 * S_NumDealsPurchases
4137506   +          +    -0.36454149529139 * S_NumDistPurchases
4137507   +          +     0.12447759925061 * S_NumStorePurchases
4137508   +          +    -1.08133487947367 * S_NumWebPurchases
4137509   +          +    -0.49882157745454 * S_NumWebVisitsMonth
4137510   +          +    -1.37163643041927 * S_RFMstat  +    -2.02270778627266 *
4137511   +        S_RMntFrq  +    -0.01174101172444 * S_Recency
4137512   +          +     1.37307999964517 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.46863593010465 * S_AcceptedCmpTotal + 0.76938995153422 * 
S_Age + -0.10870665325086 * S_Frq + -0.01767709917897 * S_Income + -0.06564852978687 * 
S_Kidhome + 1.53975855599943 * S_Mnt + 0.14885556549813 * S_MntFishProducts + -0.3427211596875 
* S_MntFruits + 1.82311511422571 * S_MntGoldProds + 1.16814585484266 * S_MntMeatProducts + 
-0.03210183211362 * S_MntSweetProducts + 0.21048598967441 * S_MntWines + -1.43075224286158 * 
S_MonthsAsCustomer + 0.17264791017938 * S_NumCatalogPurchases + -0.87259051567474 * 
S_NumDealsPurchases + -0.36454149529139 * S_NumDistPurchases + 0.12447759925061 * 
S_NumStorePurchases + -1.08133487947367 * S_NumWebPurchases + -0.49882157745454 * 
S_NumWebVisitsMonth + -1.37163643041927 * S_RFMstat + -2.02270778627266 * S_RMntFrq + 
-0.01174101172444 * S_Recency + 1.37307999964517 * S_Teenhome ;
4137513   +   H1x2_2  =     0.31979674377303 * S_AcceptedCmpTotal
4137514   +          +    -1.13516841608912 * S_Age  +     1.57640145941914 * S_Frq
4137515   +          +    -0.58468039509557 * S_Income  +    -1.78015996883174 *
4137516   +        S_Kidhome  +     0.51311311640127 * S_Mnt  +     0.07011815519915 *
4137517   +        S_MntFishProducts  +     0.73204832291164 * S_MntFruits
4137518   +          +     1.50837189353633 * S_MntGoldProds  +     1.39487443576743 *
4137519   +        S_MntMeatProducts  +      0.6943398196475 * S_MntSweetProducts
4137520   +          +    -0.36693028595681 * S_MntWines  +     0.86802033237442 *
4137521   +        S_MonthsAsCustomer  +     0.02384797538091 * S_NumCatalogPurchases
4137522   +          +     2.23121497416403 * S_NumDealsPurchases
4137523   +          +    -0.48674842191071 * S_NumDistPurchases
4137524   +          +     1.77510728607544 * S_NumStorePurchases
4137525   +          +     0.14647433155436 * S_NumWebPurchases
4137526   +          +    -0.95892686924419 * S_NumWebVisitsMonth
4137527   +          +    -0.26496935918704 * S_RFMstat  +     2.48765485222223 *
4137528   +        S_RMntFrq  +     2.46497777428475 * S_Recency
4137529   +          +    -0.62872033383484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.31979674377303 * S_AcceptedCmpTotal + -1.13516841608912 * 
S_Age + 1.57640145941914 * S_Frq + -0.58468039509557 * S_Income + -1.78015996883174 * 
S_Kidhome + 0.51311311640127 * S_Mnt + 0.07011815519915 * S_MntFishProducts + 0.73204832291164 
* S_MntFruits + 1.50837189353633 * S_MntGoldProds + 1.39487443576743 * S_MntMeatProducts + 
0.6943398196475 * S_MntSweetProducts + -0.36693028595681 * S_MntWines + 0.86802033237442 * 
S_MonthsAsCustomer + 0.02384797538091 * S_NumCatalogPurchases + 2.23121497416403 * 
S_NumDealsPurchases + -0.48674842191071 * S_NumDistPurchases + 1.77510728607544 * 
S_NumStorePurchases + 0.14647433155436 * S_NumWebPurchases + -0.95892686924419 * 
S_NumWebVisitsMonth + -0.26496935918704 * S_RFMstat + 2.48765485222223 * S_RMntFrq + 
2.46497777428475 * S_Recency + -0.62872033383484 * S_Teenhome ;
4137530   +   H1x2_3  =    -0.31142826583944 * S_AcceptedCmpTotal
4137531   +          +    -1.14828049895929 * S_Age  +    -0.54227584627485 * S_Frq
4137532   +          +     0.26826674711688 * S_Income  +     0.17643820666347 *
4137533   +        S_Kidhome  +    -0.12427430981043 * S_Mnt  +     0.18056887427376 *
4137534   +        S_MntFishProducts  +    -0.63010248821544 * S_MntFruits
4137535   +          +    -0.81391687529252 * S_MntGoldProds  +    -1.12306166734361 *
4137536   +        S_MntMeatProducts  +     0.92339010601965 * S_MntSweetProducts
4137537   +          +    -2.05510990050543 * S_MntWines  +    -2.02060586903244 *
4137538   +        S_MonthsAsCustomer  +     0.98841836752178 * S_NumCatalogPurchases
4137539   +          +     0.14338855349611 * S_NumDealsPurchases
4137540   +          +    -2.21071010829235 * S_NumDistPurchases
4137541   +          +    -0.21795889348002 * S_NumStorePurchases
4137542   +          +     1.98825087883535 * S_NumWebPurchases
4137543   +          +     1.02482442531149 * S_NumWebVisitsMonth
4137544   +          +    -0.47662143614905 * S_RFMstat  +    -0.17167385440535 *
4137545   +        S_RMntFrq  +     -1.0288777281766 * S_Recency
4137546   +          +    -0.10646747275734 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.31142826583944 * S_AcceptedCmpTotal + -1.14828049895929 * 
S_Age + -0.54227584627485 * S_Frq + 0.26826674711688 * S_Income + 0.17643820666347 * S_Kidhome 
+ -0.12427430981043 * S_Mnt + 0.18056887427376 * S_MntFishProducts + -0.63010248821544 * 
S_MntFruits + -0.81391687529252 * S_MntGoldProds + -1.12306166734361 * S_MntMeatProducts + 
0.92339010601965 * S_MntSweetProducts + -2.05510990050543 * S_MntWines + -2.02060586903244 * 
S_MonthsAsCustomer + 0.98841836752178 * S_NumCatalogPurchases + 0.14338855349611 * 
S_NumDealsPurchases + -2.21071010829235 * S_NumDistPurchases + -0.21795889348002 * 
S_NumStorePurchases + 1.98825087883535 * S_NumWebPurchases + 1.02482442531149 * 
S_NumWebVisitsMonth + -0.47662143614905 * S_RFMstat + -0.17167385440535 * S_RMntFrq + 
-1.0288777281766 * S_Recency + -0.10646747275734 * S_Teenhome ;
4137547   +   H1x2_4  =    -0.40813758620671 * S_AcceptedCmpTotal
4137548   +          +     0.16751361466296 * S_Age  +     0.61297021391662 * S_Frq
4137549   +          +     0.17708553296763 * S_Income  +    -0.23498000755537 *
4137550   +        S_Kidhome  +      0.6863853027948 * S_Mnt  +    -0.43649468589643 *
4137551   +        S_MntFishProducts  +    -1.03807059787368 * S_MntFruits
4137552   +          +     0.68988160282803 * S_MntGoldProds  +     1.76714128625705 *
4137553   +        S_MntMeatProducts  +     1.15458185366826 * S_MntSweetProducts
4137554   +          +     0.31267521045306 * S_MntWines  +    -3.18562841805634 *
4137555   +        S_MonthsAsCustomer  +     0.15316473812138 * S_NumCatalogPurchases
4137556   +          +     0.30041205661012 * S_NumDealsPurchases
4137557   +          +    -0.63499849986918 * S_NumDistPurchases
4137558   +          +    -0.34155713433714 * S_NumStorePurchases
4137559   +          +    -1.14183354933936 * S_NumWebPurchases
4137560   +          +    -0.42681980262973 * S_NumWebVisitsMonth
4137561   +          +    -0.18777676484111 * S_RFMstat  +      0.2522570278894 *
4137562   +        S_RMntFrq  +     1.25852246467612 * S_Recency
4137563   +          +     0.63333476238969 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.40813758620671 * S_AcceptedCmpTotal + 0.16751361466296 * 
S_Age + 0.61297021391662 * S_Frq + 0.17708553296763 * S_Income + -0.23498000755537 * S_Kidhome 
+ 0.6863853027948 * S_Mnt + -0.43649468589643 * S_MntFishProducts + -1.03807059787368 * 
S_MntFruits + 0.68988160282803 * S_MntGoldProds + 1.76714128625705 * S_MntMeatProducts + 
1.15458185366826 * S_MntSweetProducts + 0.31267521045306 * S_MntWines + -3.18562841805634 * 
S_MonthsAsCustomer + 0.15316473812138 * S_NumCatalogPurchases + 0.30041205661012 * 
S_NumDealsPurchases + -0.63499849986918 * S_NumDistPurchases + -0.34155713433714 * 
S_NumStorePurchases + -1.14183354933936 * S_NumWebPurchases + -0.42681980262973 * 
S_NumWebVisitsMonth + -0.18777676484111 * S_RFMstat + 0.2522570278894 * S_RMntFrq + 
1.25852246467612 * S_Recency + 0.63333476238969 * S_Teenhome ;
4137564   +   H1x2_5  =     1.73048436159558 * S_AcceptedCmpTotal
4137565   +          +     1.91388487556197 * S_Age  +     0.14880026885923 * S_Frq
4137566   +          +      0.5905347897806 * S_Income  +     1.67048168226736 *
4137567   +        S_Kidhome  +     0.03869174467752 * S_Mnt  +    -0.71187911364266 *
4137568   +        S_MntFishProducts  +     0.93023590693473 * S_MntFruits
4137569   +          +     0.22907372790948 * S_MntGoldProds  +    -1.05941282177437 *
4137570   +        S_MntMeatProducts  +    -0.73905281508342 * S_MntSweetProducts
4137571   +          +     0.04429898588386 * S_MntWines  +    -0.47487263648723 *
4137572   +        S_MonthsAsCustomer  +     0.00382111008361 * S_NumCatalogPurchases
4137573   +          +    -0.21237915559831 * S_NumDealsPurchases
4137574   +          +     0.48256923764182 * S_NumDistPurchases
4137575   +          +    -0.45553093140641 * S_NumStorePurchases
4137576   +          +      0.5593655963659 * S_NumWebPurchases
4137577   +          +     0.27943768691188 * S_NumWebVisitsMonth
4137578   +          +     1.94452735574997 * S_RFMstat  +    -0.89811355261154 *
4137579   +        S_RMntFrq  +    -1.62796011550484 * S_Recency
4137580   +          +     0.60487421956906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.73048436159558 * S_AcceptedCmpTotal + 1.91388487556197 * 
S_Age + 0.14880026885923 * S_Frq + 0.5905347897806 * S_Income + 1.67048168226736 * S_Kidhome + 
0.03869174467752 * S_Mnt + -0.71187911364266 * S_MntFishProducts + 0.93023590693473 * 
S_MntFruits + 0.22907372790948 * S_MntGoldProds + -1.05941282177437 * S_MntMeatProducts + 
-0.73905281508342 * S_MntSweetProducts + 0.04429898588386 * S_MntWines + -0.47487263648723 * 
S_MonthsAsCustomer + 0.00382111008361 * S_NumCatalogPurchases + -0.21237915559831 * 
S_NumDealsPurchases + 0.48256923764182 * S_NumDistPurchases + -0.45553093140641 * 
S_NumStorePurchases + 0.5593655963659 * S_NumWebPurchases + 0.27943768691188 * 
S_NumWebVisitsMonth + 1.94452735574997 * S_RFMstat + -0.89811355261154 * S_RMntFrq + 
-1.62796011550484 * S_Recency + 0.60487421956906 * S_Teenhome ;
4137581   +   H1x2_6  =    -0.32010880515459 * S_AcceptedCmpTotal
4137582   +          +     0.95304983421791 * S_Age  +      -0.316044010281 * S_Frq
4137583   +          +     1.10925678578158 * S_Income  +     1.28019020117471 *
4137584   +        S_Kidhome  +     1.02498438668688 * S_Mnt  +     -1.8898236827792 *
4137585   +        S_MntFishProducts  +     0.96543971612672 * S_MntFruits
4137586   +          +    -0.21422669977227 * S_MntGoldProds  +     -0.0840639948559 *
4137587   +        S_MntMeatProducts  +     1.27902687109389 * S_MntSweetProducts
4137588   +          +    -1.38957846154598 * S_MntWines  +     0.80004372871482 *
4137589   +        S_MonthsAsCustomer  +    -0.19381123279552 * S_NumCatalogPurchases
4137590   +          +     2.38967021388062 * S_NumDealsPurchases
4137591   +          +    -0.97722398866481 * S_NumDistPurchases
4137592   +          +     1.57612333191312 * S_NumStorePurchases
4137593   +          +    -0.75968679115983 * S_NumWebPurchases
4137594   +          +    -0.64207187757251 * S_NumWebVisitsMonth
4137595   +          +     1.06529999122381 * S_RFMstat  +     0.67095385521555 *
4137596   +        S_RMntFrq  +     1.71313869798331 * S_Recency
4137597   +          +     1.39045686636707 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.32010880515459 * S_AcceptedCmpTotal + 0.95304983421791 * 
S_Age + -0.316044010281 * S_Frq + 1.10925678578158 * S_Income + 1.28019020117471 * S_Kidhome + 
1.02498438668688 * S_Mnt + -1.8898236827792 * S_MntFishProducts + 0.96543971612672 * 
S_MntFruits + -0.21422669977227 * S_MntGoldProds + -0.0840639948559 * S_MntMeatProducts + 
1.27902687109389 * S_MntSweetProducts + -1.38957846154598 * S_MntWines + 0.80004372871482 * 
S_MonthsAsCustomer + -0.19381123279552 * S_NumCatalogPurchases + 2.38967021388062 * 
S_NumDealsPurchases + -0.97722398866481 * S_NumDistPurchases + 1.57612333191312 * 
S_NumStorePurchases + -0.75968679115983 * S_NumWebPurchases + -0.64207187757251 * 
S_NumWebVisitsMonth + 1.06529999122381 * S_RFMstat + 0.67095385521555 * S_RMntFrq + 
1.71313869798331 * S_Recency + 1.39045686636707 * S_Teenhome ;
4137598   +   H1x2_1  = H1x2_1  +    -1.32125124093028 * AcceptedCmp10
4137599   +          +    -0.61219063588492 * AcceptedCmp20  +     1.20821214973577 *
4137600   +        AcceptedCmp30  +    -1.13548727550981 * AcceptedCmp40
4137601   +          +     0.04405769197194 * AcceptedCmp50  +      0.7940658605271 *
4137602   +        Complain0  +     1.05933486404834 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.32125124093028 * AcceptedCmp10 + -0.61219063588492 
* AcceptedCmp20 + 1.20821214973577 * AcceptedCmp30 + -1.13548727550981 * AcceptedCmp40 + 
0.04405769197194 * AcceptedCmp50 + 0.7940658605271 * Complain0 + 1.05933486404834 * 
HigherEducationBinary0 ;
4137603   +   H1x2_2  = H1x2_2  +     1.56313777120806 * AcceptedCmp10
4137604   +          +    -1.12997680537456 * AcceptedCmp20  +     1.19262470365504 *
4137605   +        AcceptedCmp30  +    -0.98995493161689 * AcceptedCmp40
4137606   +          +      -1.827141957557 * AcceptedCmp50  +    -0.43809188233899 *
4137607   +        Complain0  +      -0.627000653672 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.56313777120806 * AcceptedCmp10 + -1.12997680537456 * 
AcceptedCmp20 + 1.19262470365504 * AcceptedCmp30 + -0.98995493161689 * AcceptedCmp40 + 
-1.827141957557 * AcceptedCmp50 + -0.43809188233899 * Complain0 + -0.627000653672 * 
HigherEducationBinary0 ;
4137608   +   H1x2_3  = H1x2_3  +     1.32174755827017 * AcceptedCmp10
4137609   +          +     1.00086479754098 * AcceptedCmp20  +      0.4636133487385 *
4137610   +        AcceptedCmp30  +     1.34878553883758 * AcceptedCmp40
4137611   +          +    -2.36241584924476 * AcceptedCmp50  +       1.082421071431 *
4137612   +        Complain0  +    -0.32514144517436 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.32174755827017 * AcceptedCmp10 + 1.00086479754098 * 
AcceptedCmp20 + 0.4636133487385 * AcceptedCmp30 + 1.34878553883758 * AcceptedCmp40 + 
-2.36241584924476 * AcceptedCmp50 + 1.082421071431 * Complain0 + -0.32514144517436 * 
HigherEducationBinary0 ;
4137613   +   H1x2_4  = H1x2_4  +     0.39556775796131 * AcceptedCmp10
4137614   +          +     0.06457727211285 * AcceptedCmp20  +    -1.44632749800655 *
4137615   +        AcceptedCmp30  +     1.20294678514383 * AcceptedCmp40
4137616   +          +    -0.01594330886358 * AcceptedCmp50  +    -2.06895895180485 *
4137617   +        Complain0  +    -0.01374012569775 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.39556775796131 * AcceptedCmp10 + 0.06457727211285 * 
AcceptedCmp20 + -1.44632749800655 * AcceptedCmp30 + 1.20294678514383 * AcceptedCmp40 + 
-0.01594330886358 * AcceptedCmp50 + -2.06895895180485 * Complain0 + -0.01374012569775 * 
HigherEducationBinary0 ;
4137618   +   H1x2_5  = H1x2_5  +     1.11945933535638 * AcceptedCmp10
4137619   +          +     0.26383973979566 * AcceptedCmp20  +    -0.40426240061746 *
4137620   +        AcceptedCmp30  +     1.46916781894719 * AcceptedCmp40
4137621   +          +     0.26827715088644 * AcceptedCmp50  +     1.50074465469998 *
4137622   +        Complain0  +     -1.0626185000486 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.11945933535638 * AcceptedCmp10 + 0.26383973979566 * 
AcceptedCmp20 + -0.40426240061746 * AcceptedCmp30 + 1.46916781894719 * AcceptedCmp40 + 
0.26827715088644 * AcceptedCmp50 + 1.50074465469998 * Complain0 + -1.0626185000486 * 
HigherEducationBinary0 ;
4137623   +   H1x2_6  = H1x2_6  +    -0.87625232174239 * AcceptedCmp10
4137624   +          +     0.72228047975642 * AcceptedCmp20  +     1.34904015028355 *
4137625   +        AcceptedCmp30  +     1.55639496207852 * AcceptedCmp40
4137626   +          +    -0.98741935337746 * AcceptedCmp50  +     0.99421811137074 *
4137627   +        Complain0  +    -1.69180618270074 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.87625232174239 * AcceptedCmp10 + 0.72228047975642 * 
AcceptedCmp20 + 1.34904015028355 * AcceptedCmp30 + 1.55639496207852 * AcceptedCmp40 + 
-0.98741935337746 * AcceptedCmp50 + 0.99421811137074 * Complain0 + -1.69180618270074 * 
HigherEducationBinary0 ;
4137628   +   H1x2_1  = H1x2_1  +    -0.17034446979478 * Education2n_Cycle
4137629   +          +    -0.75872196172063 * EducationBasic  +     0.44107677662894 *
4137630   +        EducationGraduation  +      0.1073450284316 * EducationMaster
4137631   +          +     0.96470902298142 * Marital_StatusDivorced
4137632   +          +     0.94805959268314 * Marital_StatusMarried
4137633   +          +     -0.6523948769616 * Marital_StatusSingle
4137634   +          +     0.07557344719737 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.17034446979478 * Education2n_Cycle + 
-0.75872196172063 * EducationBasic + 0.44107677662894 * EducationGraduation + 0.1073450284316 
* EducationMaster + 0.96470902298142 * Marital_StatusDivorced + 0.94805959268314 * 
Marital_StatusMarried + -0.6523948769616 * Marital_StatusSingle + 0.07557344719737 * 
Marital_StatusTogether ;
4137635   +   H1x2_2  = H1x2_2  +    -0.42515060901662 * Education2n_Cycle
4137636   +          +    -1.05213629639837 * EducationBasic  +     0.72603871617959 *
4137637   +        EducationGraduation  +    -1.34927753306064 * EducationMaster
4137638   +          +      0.3918249505531 * Marital_StatusDivorced
4137639   +          +    -0.00968091979586 * Marital_StatusMarried
4137640   +          +     0.84615379885071 * Marital_StatusSingle
4137641   +          +     0.34817324570682 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.42515060901662 * Education2n_Cycle + 
-1.05213629639837 * EducationBasic + 0.72603871617959 * EducationGraduation + 
-1.34927753306064 * EducationMaster + 0.3918249505531 * Marital_StatusDivorced + 
-0.00968091979586 * Marital_StatusMarried + 0.84615379885071 * Marital_StatusSingle + 
0.34817324570682 * Marital_StatusTogether ;
4137642   +   H1x2_3  = H1x2_3  +    -0.31002362860852 * Education2n_Cycle
4137643   +          +     1.40744525716089 * EducationBasic  +     2.06403096539358 *
4137644   +        EducationGraduation  +     -0.8672743321499 * EducationMaster
4137645   +          +     1.14335160313191 * Marital_StatusDivorced
4137646   +          +     0.50580517192175 * Marital_StatusMarried
4137647   +          +     0.17264295020921 * Marital_StatusSingle
4137648   +          +    -0.58193119255736 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.31002362860852 * Education2n_Cycle + 
1.40744525716089 * EducationBasic + 2.06403096539358 * EducationGraduation + -0.8672743321499 
* EducationMaster + 1.14335160313191 * Marital_StatusDivorced + 0.50580517192175 * 
Marital_StatusMarried + 0.17264295020921 * Marital_StatusSingle + -0.58193119255736 * 
Marital_StatusTogether ;
4137649   +   H1x2_4  = H1x2_4  +     0.55057637605468 * Education2n_Cycle
4137650   +          +    -0.73070803276142 * EducationBasic  +     0.40424625808481 *
4137651   +        EducationGraduation  +     1.95818378342783 * EducationMaster
4137652   +          +    -0.11238504444225 * Marital_StatusDivorced
4137653   +          +    -0.81348274043749 * Marital_StatusMarried
4137654   +          +     0.46075415610001 * Marital_StatusSingle
4137655   +          +    -0.17552649817722 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.55057637605468 * Education2n_Cycle + 
-0.73070803276142 * EducationBasic + 0.40424625808481 * EducationGraduation + 1.95818378342783 
* EducationMaster + -0.11238504444225 * Marital_StatusDivorced + -0.81348274043749 * 
Marital_StatusMarried + 0.46075415610001 * Marital_StatusSingle + -0.17552649817722 * 
Marital_StatusTogether ;
4137656   +   H1x2_5  = H1x2_5  +     0.43341125564688 * Education2n_Cycle
4137657   +          +     2.81958018976644 * EducationBasic  +     0.28773362443315 *
4137658   +        EducationGraduation  +     0.08396135672504 * EducationMaster
4137659   +          +    -0.46342068701431 * Marital_StatusDivorced
4137660   +          +    -0.41667845270204 * Marital_StatusMarried
4137661   +          +    -0.47166707496281 * Marital_StatusSingle
4137662   +          +     0.54110155717306 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.43341125564688 * Education2n_Cycle + 
2.81958018976644 * EducationBasic + 0.28773362443315 * EducationGraduation + 0.08396135672504 
* EducationMaster + -0.46342068701431 * Marital_StatusDivorced + -0.41667845270204 * 
Marital_StatusMarried + -0.47166707496281 * Marital_StatusSingle + 0.54110155717306 * 
Marital_StatusTogether ;
4137663   +   H1x2_6  = H1x2_6  +    -0.27163102711307 * Education2n_Cycle
4137664   +          +    -0.04052143781957 * EducationBasic  +     0.97902549344774 *
4137665   +        EducationGraduation  +     0.36656103863186 * EducationMaster
4137666   +          +    -0.45376613787812 * Marital_StatusDivorced
4137667   +          +     0.01337046049801 * Marital_StatusMarried
4137668   +          +    -0.92811489484121 * Marital_StatusSingle
4137669   +          +     1.52402650450634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.27163102711307 * Education2n_Cycle + 
-0.04052143781957 * EducationBasic + 0.97902549344774 * EducationGraduation + 0.36656103863186 
* EducationMaster + -0.45376613787812 * Marital_StatusDivorced + 0.01337046049801 * 
Marital_StatusMarried + -0.92811489484121 * Marital_StatusSingle + 1.52402650450634 * 
Marital_StatusTogether ;
4137670   +   H1x2_1  =     0.27200642200874 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.27200642200874 + H1x2_1 ;
4137671   +   H1x2_2  =     0.52117161047058 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.52117161047058 + H1x2_2 ;
4137672   +   H1x2_3  =    -1.04763461279984 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.04763461279984 + H1x2_3 ;
4137673   +   H1x2_4  =     0.10516307959318 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.10516307959318 + H1x2_4 ;
4137674   +   H1x2_5  =     1.24237093160919 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.24237093160919 + H1x2_5 ;
4137675   +   H1x2_6  =    -0.57977518763852 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.57977518763852 + H1x2_6 ;
4137676   +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
4137677   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
4137678   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , 
H1x2_7 );
4137679   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4137680   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
4137681   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
4137682   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
4137683   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
4137684   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
4137685   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
4137686   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
4137687   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
4137688   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
4137689   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
4137690   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
4137691   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
4137692   +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
4137693   +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
4137694   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
4137695   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
4137696   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
4137697   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
4137698   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
4137699   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
4137700   +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
4137701   +END;
MPRINT(EM_DIAGRAM):   END;
4137702   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4137703   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
4137704   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
4137705   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
4137706   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
4137707   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
4137708   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
4137709   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
4137710   +END;
MPRINT(EM_DIAGRAM):   END;
4137711   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4137712   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
4137713   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4137714   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4137715   +   H2x1_1  =     3.19986933046591 * H1x1_1  +    -0.53665634063887 * H1x1_2
4137716   +          +     1.71172628690017 * H1x1_3  +    -1.33944402954134 * H1x1_4
4137717   +          +    -1.93533827156845 * H1x1_5  +    -0.85772802964317 * H1x1_6
4137718   +          +     0.60984669129006 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.19986933046591 * H1x1_1 + -0.53665634063887 * H1x1_2 + 
1.71172628690017 * H1x1_3 + -1.33944402954134 * H1x1_4 + -1.93533827156845 * H1x1_5 + 
-0.85772802964317 * H1x1_6 + 0.60984669129006 * H1x1_7 ;
4137719   +   H2x1_2  =     -2.1883484075031 * H1x1_1  +     0.17578635446135 * H1x1_2
4137720   +          +    -1.79384950890077 * H1x1_3  +     0.88942614754722 * H1x1_4
4137721   +          +     0.41077752133457 * H1x1_5  +       0.509832853125 * H1x1_6
4137722   +          +    -0.28121910805072 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.1883484075031 * H1x1_1 + 0.17578635446135 * H1x1_2 + 
-1.79384950890077 * H1x1_3 + 0.88942614754722 * H1x1_4 + 0.41077752133457 * H1x1_5 + 
0.509832853125 * H1x1_6 + -0.28121910805072 * H1x1_7 ;
4137723   +   H2x1_3  =     0.86281981700921 * H1x1_1  +    -1.15482345233328 * H1x1_2
4137724   +          +     0.64743938802141 * H1x1_3  +     1.08117298211616 * H1x1_4
4137725   +          +      -0.363297480437 * H1x1_5  +    -1.58703254226713 * H1x1_6
4137726   +          +     0.54468402771449 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.86281981700921 * H1x1_1 + -1.15482345233328 * H1x1_2 + 
0.64743938802141 * H1x1_3 + 1.08117298211616 * H1x1_4 + -0.363297480437 * H1x1_5 + 
-1.58703254226713 * H1x1_6 + 0.54468402771449 * H1x1_7 ;
4137727   +   H2x1_4  =    -0.43420906601647 * H1x1_1  +     0.36485369627974 * H1x1_2
4137728   +          +    -2.42315183886716 * H1x1_3  +     0.22337896770247 * H1x1_4
4137729   +          +    -0.65684369622605 * H1x1_5  +     0.25211011207532 * H1x1_6
4137730   +          +     0.16704425645668 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.43420906601647 * H1x1_1 + 0.36485369627974 * H1x1_2 + 
-2.42315183886716 * H1x1_3 + 0.22337896770247 * H1x1_4 + -0.65684369622605 * H1x1_5 + 
0.25211011207532 * H1x1_6 + 0.16704425645668 * H1x1_7 ;
4137731   +   H2x1_5  =     0.61083333511105 * H1x1_1  +     1.11038871398931 * H1x1_2
4137732   +          +      0.4617674661653 * H1x1_3  +    -0.42039958365963 * H1x1_4
4137733   +          +    -1.37408000010678 * H1x1_5  +     0.03897439094411 * H1x1_6
4137734   +          +    -0.82592861674077 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.61083333511105 * H1x1_1 + 1.11038871398931 * H1x1_2 + 
0.4617674661653 * H1x1_3 + -0.42039958365963 * H1x1_4 + -1.37408000010678 * H1x1_5 + 
0.03897439094411 * H1x1_6 + -0.82592861674077 * H1x1_7 ;
4137735   +   H2x1_6  =     1.30877201101082 * H1x1_1  +     1.55143256487324 * H1x1_2
4137736   +          +    -1.20237741381937 * H1x1_3  +       2.394122059946 * H1x1_4
4137737   +          +     1.83804290225468 * H1x1_5  +     0.83132818010396 * H1x1_6
4137738   +          +     1.18399340483001 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.30877201101082 * H1x1_1 + 1.55143256487324 * H1x1_2 + 
-1.20237741381937 * H1x1_3 + 2.394122059946 * H1x1_4 + 1.83804290225468 * H1x1_5 + 
0.83132818010396 * H1x1_6 + 1.18399340483001 * H1x1_7 ;
4137739   +   H2x1_1  = H2x1_1  +    -2.41276052972753 * H1x2_1
4137740   +          +     0.38601054263899 * H1x2_2  +     0.54498789581044 * H1x2_3
4137741   +          +    -0.55304188445569 * H1x2_4  +     0.29484780749868 * H1x2_5
4137742   +          +     0.44012580105051 * H1x2_6  +     0.43086375065556 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.41276052972753 * H1x2_1 + 0.38601054263899 * H1x2_2 
+ 0.54498789581044 * H1x2_3 + -0.55304188445569 * H1x2_4 + 0.29484780749868 * H1x2_5 + 
0.44012580105051 * H1x2_6 + 0.43086375065556 * H1x2_7 ;
4137743   +   H2x1_2  = H2x1_2  +    -1.03173201511154 * H1x2_1
4137744   +          +     0.62119574580435 * H1x2_2  +     1.71782745718335 * H1x2_3
4137745   +          +     0.05391903933014 * H1x2_4  +     1.52443015967438 * H1x2_5
4137746   +          +     0.22301831343286 * H1x2_6  +     0.66204940430171 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.03173201511154 * H1x2_1 + 0.62119574580435 * H1x2_2 
+ 1.71782745718335 * H1x2_3 + 0.05391903933014 * H1x2_4 + 1.52443015967438 * H1x2_5 + 
0.22301831343286 * H1x2_6 + 0.66204940430171 * H1x2_7 ;
4137747   +   H2x1_3  = H2x1_3  +     1.37871502475142 * H1x2_1
4137748   +          +     0.02099445181492 * H1x2_2  +     0.44720218317742 * H1x2_3
4137749   +          +    -1.29625929820096 * H1x2_4  +    -1.29169956389384 * H1x2_5
4137750   +          +    -0.21403739905139 * H1x2_6  +    -0.03075946378871 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.37871502475142 * H1x2_1 + 0.02099445181492 * H1x2_2 
+ 0.44720218317742 * H1x2_3 + -1.29625929820096 * H1x2_4 + -1.29169956389384 * H1x2_5 + 
-0.21403739905139 * H1x2_6 + -0.03075946378871 * H1x2_7 ;
4137751   +   H2x1_4  = H2x1_4  +     1.94121727472617 * H1x2_1
4137752   +          +     0.23207290279299 * H1x2_2  +      0.3162872281134 * H1x2_3
4137753   +          +    -0.40199017937523 * H1x2_4  +     0.69294460110289 * H1x2_5
4137754   +          +    -1.00758272664059 * H1x2_6  +    -1.41698057960021 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.94121727472617 * H1x2_1 + 0.23207290279299 * H1x2_2 
+ 0.3162872281134 * H1x2_3 + -0.40199017937523 * H1x2_4 + 0.69294460110289 * H1x2_5 + 
-1.00758272664059 * H1x2_6 + -1.41698057960021 * H1x2_7 ;
4137755   +   H2x1_5  = H2x1_5  +     1.19546023857185 * H1x2_1
4137756   +          +    -1.00266987736442 * H1x2_2  +     0.71838447032796 * H1x2_3
4137757   +          +     1.70968347732204 * H1x2_4  +    -0.26894423802892 * H1x2_5
4137758   +          +    -0.61655519090213 * H1x2_6  +     2.21931491555405 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.19546023857185 * H1x2_1 + -1.00266987736442 * H1x2_2 
+ 0.71838447032796 * H1x2_3 + 1.70968347732204 * H1x2_4 + -0.26894423802892 * H1x2_5 + 
-0.61655519090213 * H1x2_6 + 2.21931491555405 * H1x2_7 ;
4137759   +   H2x1_6  = H2x1_6  +    -0.48559886762231 * H1x2_1
4137760   +          +     0.93218274010134 * H1x2_2  +     0.23140948782865 * H1x2_3
4137761   +          +     0.72139310562219 * H1x2_4  +    -0.11143939877368 * H1x2_5
4137762   +          +     0.74022211257293 * H1x2_6  +      1.0449314568566 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.48559886762231 * H1x2_1 + 0.93218274010134 * H1x2_2 
+ 0.23140948782865 * H1x2_3 + 0.72139310562219 * H1x2_4 + -0.11143939877368 * H1x2_5 + 
0.74022211257293 * H1x2_6 + 1.0449314568566 * H1x2_7 ;
4137763   +   H2x1_1  =     0.42952855003777 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.42952855003777 + H2x1_1 ;
4137764   +   H2x1_2  =     1.61752083096638 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.61752083096638 + H2x1_2 ;
4137765   +   H2x1_3  =    -0.71617788867723 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.71617788867723 + H2x1_3 ;
4137766   +   H2x1_4  =     0.39147546708847 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.39147546708847 + H2x1_4 ;
4137767   +   H2x1_5  =    -0.56259054185247 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.56259054185247 + H2x1_5 ;
4137768   +   H2x1_6  =     0.31857109159246 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.31857109159246 + H2x1_6 ;
4137769   +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
4137770   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
4137771   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , 
H2x1_7 );
4137772   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4137773   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
4137774   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
4137775   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
4137776   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
4137777   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
4137778   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
4137779   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
4137780   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
4137781   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
4137782   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
4137783   +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
4137784   +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
4137785   +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
4137786   +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
4137787   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
4137788   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
4137789   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
4137790   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
4137791   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
4137792   +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
4137793   +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
4137794   +END;
MPRINT(EM_DIAGRAM):   END;
4137795   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4137796   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
4137797   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
4137798   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
4137799   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
4137800   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
4137801   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
4137802   +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
4137803   +END;
MPRINT(EM_DIAGRAM):   END;
4137804   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4137805   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4137806   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4137807   +
4137808   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
4137809   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
4137810   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4137811   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
4137812   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
4137813   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4137814   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
4137815   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4137816   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4137817   +end;
MPRINT(EM_DIAGRAM):   end;
4137818   +else do;
MPRINT(EM_DIAGRAM):   else do;
4137819   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
4137820   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
4137821   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
4137822   +   end;
MPRINT(EM_DIAGRAM):   end;
4137823   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
4137824   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
4137825   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
4137826   +   end;
MPRINT(EM_DIAGRAM):   end;
4137827   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4137828   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4137829   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4137830   +   end;
MPRINT(EM_DIAGRAM):   end;
4137831   +end;
MPRINT(EM_DIAGRAM):   end;
4137832   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4137833   +   P_DepVar1  =     25.2027326018714 * H2x1_1  +    -8.05331379419082 * H2x1_2
4137834   +          +     2.64798805383536 * H2x1_3  +    -4.52736775271107 * H2x1_4
4137835   +          +     6.71812741736202 * H2x1_5  +    -12.2785047473885 * H2x1_6
4137836   +          +    -4.41291972336422 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 25.2027326018714 * H2x1_1 + -8.05331379419082 * H2x1_2 + 
2.64798805383536 * H2x1_3 + -4.52736775271107 * H2x1_4 + 6.71812741736202 * H2x1_5 + 
-12.2785047473885 * H2x1_6 + -4.41291972336422 * H2x1_7 ;
4137837   +   P_DepVar1  =     1.22134962002326 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.22134962002326 + P_DepVar1 ;
4137838   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4137839   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4137840   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4137841   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4137842   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4137843   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4137844   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4137845   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4137846   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4137847   +END;
MPRINT(EM_DIAGRAM):   END;
4137848   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4137849   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4137850   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4137851   +END;
MPRINT(EM_DIAGRAM):   END;
4137852   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4137853   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4137854   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4137855   +END;
MPRINT(EM_DIAGRAM):   END;
4137856   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
4137857   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
4137858   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
4137859   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
4137860   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
4137861   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
4137862   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
4137863   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4137864   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4137865   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4137866   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4137867   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4137868   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4137869   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4137870   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4137871   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4137872   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4137873   +END;
MPRINT(EM_DIAGRAM):   END;
4137874   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4137875   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4137876   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4137877   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
4137878   +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
4137879   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4137880   +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
4137881   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4137882   +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
4137883   +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
4137884   +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
4137885   +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
4137886   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4137887   +* Renaming Into variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural12;
4137888   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4137889   +length AutoNeural12_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural12_I_DepVar $32;
4137890   +drop AutoNeural12_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_I_DepVar;
4137891   +AutoNeural12_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural12_I_DepVar = I_DepVar;
4137892   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4137893   +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
4137894   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4137895   +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
4137896   +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
4137897   +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
4137898   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4137899   +* Ensmbl38: Voting to produce predicted target;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Voting to produce predicted target;
4137900   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4137901   +array Ensmbl38_post{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl38_post{2} _temporary_;
4137902   +array Ensmbl38_count{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl38_count{2} _temporary_;
4137903   +array Ensmbl38_level{2} $32 _temporary_ (
4137904   +"1"
4137905   +"0"
4137906   +);
MPRINT(EM_DIAGRAM):   array Ensmbl38_level{2} $32 _temporary_ ( "1" "0" );
4137907   +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
4137908   +Ensmbl38_post{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{i} = 0;
4137909   +Ensmbl38_count{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{i} = 0;
4137910   +end;
MPRINT(EM_DIAGRAM):   end;
4137911   +if AutoNeural6_I_DepVar = Ensmbl38_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural6_I_DepVar = Ensmbl38_level{1} then do;
4137912   +Ensmbl38_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{1} + 1;
4137913   +Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural6_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural6_P_DepVar1;
4137914   +end;
MPRINT(EM_DIAGRAM):   end;
4137915   +if AutoNeural7_I_DepVar = Ensmbl38_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural7_I_DepVar = Ensmbl38_level{1} then do;
4137916   +Ensmbl38_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{1} + 1;
4137917   +Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural7_P_DepVar1;
4137918   +end;
MPRINT(EM_DIAGRAM):   end;
4137919   +if AutoNeural8_I_DepVar = Ensmbl38_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural8_I_DepVar = Ensmbl38_level{1} then do;
4137920   +Ensmbl38_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{1} + 1;
4137921   +Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural8_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural8_P_DepVar1;
4137922   +end;
MPRINT(EM_DIAGRAM):   end;
4137923   +if AutoNeural10_I_DepVar = Ensmbl38_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural10_I_DepVar = Ensmbl38_level{1} then do;
4137924   +Ensmbl38_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{1} + 1;
4137925   +Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural10_P_DepVar1;
4137926   +end;
MPRINT(EM_DIAGRAM):   end;
4137927   +if AutoNeural9_I_DepVar = Ensmbl38_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural9_I_DepVar = Ensmbl38_level{1} then do;
4137928   +Ensmbl38_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{1} + 1;
4137929   +Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural9_P_DepVar1;
4137930   +end;
MPRINT(EM_DIAGRAM):   end;
4137931   +if AutoNeural11_I_DepVar = Ensmbl38_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural11_I_DepVar = Ensmbl38_level{1} then do;
4137932   +Ensmbl38_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{1} + 1;
4137933   +Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural11_P_DepVar1;
4137934   +end;
MPRINT(EM_DIAGRAM):   end;
4137935   +if AutoNeural12_I_DepVar = Ensmbl38_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural12_I_DepVar = Ensmbl38_level{1} then do;
4137936   +Ensmbl38_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{1} + 1;
4137937   +Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural12_P_DepVar1;
4137938   +end;
MPRINT(EM_DIAGRAM):   end;
4137939   +if AutoNeural6_I_DepVar = Ensmbl38_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural6_I_DepVar = Ensmbl38_level{2} then do;
4137940   +Ensmbl38_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{2} + 1;
4137941   +Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural6_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural6_P_DepVar0;
4137942   +end;
MPRINT(EM_DIAGRAM):   end;
4137943   +if AutoNeural7_I_DepVar = Ensmbl38_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural7_I_DepVar = Ensmbl38_level{2} then do;
4137944   +Ensmbl38_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{2} + 1;
4137945   +Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural7_P_DepVar0;
4137946   +end;
MPRINT(EM_DIAGRAM):   end;
4137947   +if AutoNeural8_I_DepVar = Ensmbl38_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural8_I_DepVar = Ensmbl38_level{2} then do;
4137948   +Ensmbl38_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{2} + 1;
4137949   +Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural8_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural8_P_DepVar0;
4137950   +end;
MPRINT(EM_DIAGRAM):   end;
4137951   +if AutoNeural10_I_DepVar = Ensmbl38_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural10_I_DepVar = Ensmbl38_level{2} then do;
4137952   +Ensmbl38_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{2} + 1;
4137953   +Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural10_P_DepVar0;
4137954   +end;
MPRINT(EM_DIAGRAM):   end;
4137955   +if AutoNeural9_I_DepVar = Ensmbl38_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural9_I_DepVar = Ensmbl38_level{2} then do;
4137956   +Ensmbl38_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{2} + 1;
4137957   +Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural9_P_DepVar0;
4137958   +end;
MPRINT(EM_DIAGRAM):   end;
4137959   +if AutoNeural11_I_DepVar = Ensmbl38_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural11_I_DepVar = Ensmbl38_level{2} then do;
4137960   +Ensmbl38_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{2} + 1;
4137961   +Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural11_P_DepVar0;
4137962   +end;
MPRINT(EM_DIAGRAM):   end;
4137963   +if AutoNeural12_I_DepVar = Ensmbl38_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural12_I_DepVar = Ensmbl38_level{2} then do;
4137964   +Ensmbl38_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{2} + 1;
4137965   +Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural12_P_DepVar0;
4137966   +end;
MPRINT(EM_DIAGRAM):   end;
4137967   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4137968   +* Ensmbl38: Determine Into Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Determine Into Variable;
4137969   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4137970   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
4137971   +drop i vote_count vote_post;
MPRINT(EM_DIAGRAM):   drop i vote_count vote_post;
4137972   +vote_count = max(
4137973   +Ensmbl38_count{1} ,
4137974   +Ensmbl38_count{2}
4137975   +);
MPRINT(EM_DIAGRAM):   vote_count = max( Ensmbl38_count{1} , Ensmbl38_count{2} );
4137976   +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
4137977   +if Ensmbl38_count{i}=vote_count and Ensmbl38_post{i}>vote_post then do;
MPRINT(EM_DIAGRAM):   if Ensmbl38_count{i}=vote_count and Ensmbl38_post{i}>vote_post then do;
4137978   +I_DepVar = Ensmbl38_level{i};
MPRINT(EM_DIAGRAM):   I_DepVar = Ensmbl38_level{i};
4137979   +vote_post = Ensmbl38_count{i};
MPRINT(EM_DIAGRAM):   vote_post = Ensmbl38_count{i};
4137980   +end;
MPRINT(EM_DIAGRAM):   end;
4137981   +end;
MPRINT(EM_DIAGRAM):   end;
4137982   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4137983   +* Ensmbl38: Compute posterior vars using models predicting the chosen level;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Compute posterior vars using models predicting the chosen 
level;
4137984   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4137985   +P_DepVar1 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
4137986   +P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4137987   +if I_DepVar = AutoNeural6_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural6_I_DepVar then do;
4137988   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural6_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural6_P_DepVar1;
4137989   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural6_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural6_P_DepVar0;
4137990   +end;
MPRINT(EM_DIAGRAM):   end;
4137991   +if I_DepVar = AutoNeural7_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural7_I_DepVar then do;
4137992   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural7_P_DepVar1;
4137993   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural7_P_DepVar0;
4137994   +end;
MPRINT(EM_DIAGRAM):   end;
4137995   +if I_DepVar = AutoNeural8_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural8_I_DepVar then do;
4137996   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural8_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural8_P_DepVar1;
4137997   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural8_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural8_P_DepVar0;
4137998   +end;
MPRINT(EM_DIAGRAM):   end;
4137999   +if I_DepVar = AutoNeural10_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural10_I_DepVar then do;
4138000   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural10_P_DepVar1;
4138001   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural10_P_DepVar0;
4138002   +end;
MPRINT(EM_DIAGRAM):   end;
4138003   +if I_DepVar = AutoNeural9_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural9_I_DepVar then do;
4138004   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural9_P_DepVar1;
4138005   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural9_P_DepVar0;
4138006   +end;
MPRINT(EM_DIAGRAM):   end;
4138007   +if I_DepVar = AutoNeural11_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural11_I_DepVar then do;
4138008   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural11_P_DepVar1;
4138009   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural11_P_DepVar0;
4138010   +end;
MPRINT(EM_DIAGRAM):   end;
4138011   +if I_DepVar = AutoNeural12_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural12_I_DepVar then do;
4138012   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural12_P_DepVar1;
4138013   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural12_P_DepVar0;
4138014   +end;
MPRINT(EM_DIAGRAM):   end;
4138015   +* Ensmbl38: Averaging posterior;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Averaging posterior;
4138016   +P_DepVar1 = P_DepVar1/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1/vote_count;
4138017   +P_DepVar0 = P_DepVar0/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0/vote_count;
4138018   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4138019   +* Ensmbl38: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Producing Unformatted variable;
4138020   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4138021   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
4138022   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
4138023   +else
4138024   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
4138025   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4138026   +* Ensmbl38: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Computing _WARN_ Variable;
4138027   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4138028   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
4138029   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
4138030   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
4138031   +if index(AUTONEURAL6_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
4138031  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
4138032   +if index(AUTONEURAL6_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
4138032  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
4138033   +if index(AUTONEURAL6_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
4138033  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
4138034   +if index(AUTONEURAL6_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
4138034  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
4138035   +if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
4138035  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
4138036   +if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
4138036  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
4138037   +if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
4138037  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
4138038   +if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
4138038  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
4138039   +if index(AUTONEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
4138039  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
4138040   +if index(AUTONEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
4138040  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
4138041   +if index(AUTONEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
4138041  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
4138042   +if index(AUTONEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
4138042  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
4138043   +if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
4138043  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
4138044   +if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
4138044  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
4138045   +if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
4138045  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
4138046   +if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
4138046  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
4138047   +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
4138047  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
4138048   +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
4138048  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
4138049   +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
4138049  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
4138050   +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
4138050  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
4138051   +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
4138051  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
4138052   +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
4138052  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
4138053   +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
4138053  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
4138054   +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
4138054  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
4138055   +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
4138055  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
4138056   +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
4138056  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
4138057   +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
4138057  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
4138058   +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
4138058  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
4138059   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4138060   +* Ensmbl38: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Computing Residual Vars;
4138061   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4138062   +if
4138063   +F_DepVar NE '1'
4138064   +AND F_DepVar NE '0'
4138065   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
4138066   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
4138067   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
4138068   +end;
MPRINT(EM_DIAGRAM):   end;
4138069   +else do;
MPRINT(EM_DIAGRAM):   else do;
4138070   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
4138071   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
4138072   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
4138073   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
4138074   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
4138075   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
4138076   +END;
MPRINT(EM_DIAGRAM):   END;
4138077   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4138078    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL38_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL6_TRAIN.VIEW used (Total process time):
      real time           0.22 seconds
      cpu time            0.21 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.23 seconds
      cpu time            0.21 seconds
      

MPRINT(EM_DIAGRAM):   quit;
4138079    quit;
4138080    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
4138081    filename emflow
4138081  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl38\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl38\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Scoring AUTONEURAL6_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4138082    *------------------------------------------------------------*;
4138083    * Ensmbl38: Scoring AUTONEURAL6_VALIDATE data;
4138084    *------------------------------------------------------------*;
4138085    data EMWS8.Ensmbl38_VALIDATE
4138086    / view=EMWS8.Ensmbl38_VALIDATE
4138087    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl38_VALIDATE / view=EMWS8.Ensmbl38_VALIDATE ;
4138088    set EMWS8.AutoNeural6_VALIDATE
4138089    ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural6_VALIDATE ;
4138090    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl38\EMFLOWSCORE.sas.
4138091   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4138092   +* Ensmbl38: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Combine model for DepVar;
4138093   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4138094   +* Ensmbl38: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Scoring Code of model 1 of 7;
4138095   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4138096   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4138097   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
4138098   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
4138099   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
4138100   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4138101   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4138102   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
4138103   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
4138104   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
4138105   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4138106   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4138107   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
4138108   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
4138109   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
4138110   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4138111   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4138112   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
4138113   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
4138114   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
4138115   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4138116   +
4138117   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
4138118   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
4138118  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
4138119   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
4138120   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
4138121   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
4138122   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
4138123   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
4138124   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4138125   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
4138126   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
4138127   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
4138128   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4138129   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4138130   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
4138131   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4138132   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
4138133   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
4138134   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
4138135   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4138136   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
4138137   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
4138138   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
4138139   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4138140   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4138141   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
4138142   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
4138143   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
4138144   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4138145   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4138146   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
4138147   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
4138148   +* NODE: AutoNeural6;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural6;
4138149   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4138150   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4138151   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4138152   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4138153   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4138154   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4138155   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4138156   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4138157   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4138158   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4138159   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4138160   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4138161   +LENGTH _WARN_ $4
4138162   +      F_DepVar  $ 12
4138163   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
4138164   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4138165   +
4138166   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4138167   +
4138168   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4138169   +
4138170   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4138171   +
4138172   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4138173   +
4138174   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4138175   +
4138176   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4138177   +
4138178   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4138179   +
4138180   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4138181   +
4138182   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4138183   +
4138184   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4138185   +
4138186   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4138187   +
4138188   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4138189   +
4138190   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4138191   +
4138192   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4138193   +
4138194   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4138195   +
4138196   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4138197   +
4138198   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4138199   +
4138200   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4138201   +
4138202   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4138203   +
4138204   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4138205   +
4138206   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4138207   +
4138208   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4138209   +
4138210   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4138211   +
4138212   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4138213   +
4138214   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4138215   +
4138216   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4138217   +
4138218   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4138219   +
4138220   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4138221   +
4138222   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4138223   +
4138224   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4138225   +
4138226   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4138227   +
4138228   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4138229   +
4138230   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4138231   +
4138232   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4138233   +
4138234   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4138235   +
4138236   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4138237   +
4138238   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4138239   +
4138240   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4138241   +
4138242   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
4138243   +
4138244   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
4138245   +
4138246   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
4138247   +
4138248   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
4138249   +
4138250   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
4138251   +
4138252   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4138253   +
4138254   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4138255   +
4138256   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4138257   +
4138258   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4138259   +
4138260   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
4138261   +
4138262   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4138263   +
4138264   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
4138265   +
4138266   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4138267   +
4138268   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4138269   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4138270   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4138271   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4138272   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4138273   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4138274   +end;
MPRINT(EM_DIAGRAM):   end;
4138275   +else do;
MPRINT(EM_DIAGRAM):   else do;
4138276   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4138277   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4138278   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4138279   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4138280   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4138281   +   end;
MPRINT(EM_DIAGRAM):   end;
4138282   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4138283   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4138284   +   end;
MPRINT(EM_DIAGRAM):   end;
4138285   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4138286   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4138287   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4138288   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4138289   +   end;
MPRINT(EM_DIAGRAM):   end;
4138290   +end;
MPRINT(EM_DIAGRAM):   end;
4138291   +
4138292   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4138293   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4138294   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4138295   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4138296   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4138297   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4138298   +end;
MPRINT(EM_DIAGRAM):   end;
4138299   +else do;
MPRINT(EM_DIAGRAM):   else do;
4138300   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4138301   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4138302   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4138303   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4138304   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4138305   +   end;
MPRINT(EM_DIAGRAM):   end;
4138306   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4138307   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4138308   +   end;
MPRINT(EM_DIAGRAM):   end;
4138309   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4138310   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4138311   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4138312   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4138313   +   end;
MPRINT(EM_DIAGRAM):   end;
4138314   +end;
MPRINT(EM_DIAGRAM):   end;
4138315   +
4138316   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4138317   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4138318   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4138319   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4138320   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4138321   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4138322   +end;
MPRINT(EM_DIAGRAM):   end;
4138323   +else do;
MPRINT(EM_DIAGRAM):   else do;
4138324   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4138325   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4138326   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4138327   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4138328   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4138329   +   end;
MPRINT(EM_DIAGRAM):   end;
4138330   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4138331   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4138332   +   end;
MPRINT(EM_DIAGRAM):   end;
4138333   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4138334   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4138335   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4138336   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4138337   +   end;
MPRINT(EM_DIAGRAM):   end;
4138338   +end;
MPRINT(EM_DIAGRAM):   end;
4138339   +
4138340   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4138341   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4138342   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4138343   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4138344   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4138345   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4138346   +end;
MPRINT(EM_DIAGRAM):   end;
4138347   +else do;
MPRINT(EM_DIAGRAM):   else do;
4138348   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4138349   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4138350   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4138351   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4138352   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4138353   +   end;
MPRINT(EM_DIAGRAM):   end;
4138354   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4138355   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4138356   +   end;
MPRINT(EM_DIAGRAM):   end;
4138357   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4138358   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4138359   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4138360   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4138361   +   end;
MPRINT(EM_DIAGRAM):   end;
4138362   +end;
MPRINT(EM_DIAGRAM):   end;
4138363   +
4138364   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4138365   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4138366   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4138367   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4138368   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4138369   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4138370   +end;
MPRINT(EM_DIAGRAM):   end;
4138371   +else do;
MPRINT(EM_DIAGRAM):   else do;
4138372   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4138373   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4138374   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4138375   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4138376   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4138377   +   end;
MPRINT(EM_DIAGRAM):   end;
4138378   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4138379   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4138380   +   end;
MPRINT(EM_DIAGRAM):   end;
4138381   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4138382   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4138383   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4138384   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4138385   +   end;
MPRINT(EM_DIAGRAM):   end;
4138386   +end;
MPRINT(EM_DIAGRAM):   end;
4138387   +
4138388   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4138389   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4138390   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4138391   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4138392   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4138393   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4138394   +end;
MPRINT(EM_DIAGRAM):   end;
4138395   +else do;
MPRINT(EM_DIAGRAM):   else do;
4138396   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4138397   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4138398   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4138399   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4138400   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4138401   +   end;
MPRINT(EM_DIAGRAM):   end;
4138402   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4138403   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4138404   +   end;
MPRINT(EM_DIAGRAM):   end;
4138405   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4138406   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4138407   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4138408   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4138409   +   end;
MPRINT(EM_DIAGRAM):   end;
4138410   +end;
MPRINT(EM_DIAGRAM):   end;
4138411   +
4138412   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4138413   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4138414   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4138415   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4138416   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4138417   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4138418   +end;
MPRINT(EM_DIAGRAM):   end;
4138419   +else do;
MPRINT(EM_DIAGRAM):   else do;
4138420   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4138421   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4138422   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4138423   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4138424   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4138425   +   end;
MPRINT(EM_DIAGRAM):   end;
4138426   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4138427   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4138428   +   end;
MPRINT(EM_DIAGRAM):   end;
4138429   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4138430   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4138431   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4138432   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4138433   +   end;
MPRINT(EM_DIAGRAM):   end;
4138434   +end;
MPRINT(EM_DIAGRAM):   end;
4138435   +
4138436   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4138437   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
4138438   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4138439   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4138440   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4138441   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4138442   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4138443   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4138444   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4138445   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4138446   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4138447   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4138448   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4138449   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4138450   +end;
MPRINT(EM_DIAGRAM):   end;
4138451   +else do;
MPRINT(EM_DIAGRAM):   else do;
4138452   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4138453   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4138454   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4138455   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4138456   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4138457   +   end;
MPRINT(EM_DIAGRAM):   end;
4138458   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4138459   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4138460   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4138461   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4138462   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4138463   +   end;
MPRINT(EM_DIAGRAM):   end;
4138464   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4138465   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4138466   +   end;
MPRINT(EM_DIAGRAM):   end;
4138467   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4138468   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4138469   +   end;
MPRINT(EM_DIAGRAM):   end;
4138470   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4138471   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4138472   +   end;
MPRINT(EM_DIAGRAM):   end;
4138473   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4138474   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4138475   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4138476   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4138477   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4138478   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4138479   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4138480   +   end;
MPRINT(EM_DIAGRAM):   end;
4138481   +end;
MPRINT(EM_DIAGRAM):   end;
4138482   +
4138483   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4138484   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4138485   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
4138486   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4138487   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4138488   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4138489   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4138490   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4138491   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4138492   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4138493   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4138494   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4138495   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4138496   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4138497   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4138498   +end;
MPRINT(EM_DIAGRAM):   end;
4138499   +else do;
MPRINT(EM_DIAGRAM):   else do;
4138500   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4138501   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4138502   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4138503   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4138504   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4138505   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4138506   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4138507   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4138508   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4138509   +         end;
MPRINT(EM_DIAGRAM):   end;
4138510   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4138511   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4138512   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4138513   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4138514   +            end;
MPRINT(EM_DIAGRAM):   end;
4138515   +         end;
MPRINT(EM_DIAGRAM):   end;
4138516   +      end;
MPRINT(EM_DIAGRAM):   end;
4138517   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4138518   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4138519   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4138520   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4138521   +         end;
MPRINT(EM_DIAGRAM):   end;
4138522   +      end;
MPRINT(EM_DIAGRAM):   end;
4138523   +   end;
MPRINT(EM_DIAGRAM):   end;
4138524   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4138525   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4138526   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4138527   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4138528   +      end;
MPRINT(EM_DIAGRAM):   end;
4138529   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4138530   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4138531   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4138532   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4138533   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4138534   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4138535   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4138536   +         end;
MPRINT(EM_DIAGRAM):   end;
4138537   +      end;
MPRINT(EM_DIAGRAM):   end;
4138538   +   end;
MPRINT(EM_DIAGRAM):   end;
4138539   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4138540   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4138541   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4138542   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4138543   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4138544   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4138545   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4138546   +   end;
MPRINT(EM_DIAGRAM):   end;
4138547   +end;
MPRINT(EM_DIAGRAM):   end;
4138548   +
4138549   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4138550   +*** Checking missing input Interval
4138551   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4138552   +
4138553   +IF NMISS(
4138554   +   AcceptedCmpTotal ,
4138555   +   Age ,
4138556   +   Frq ,
4138557   +   Income ,
4138558   +   Kidhome ,
4138559   +   Mnt ,
4138560   +   MntFishProducts ,
4138561   +   MntFruits ,
4138562   +   MntGoldProds ,
4138563   +   MntMeatProducts ,
4138564   +   MntSweetProducts ,
4138565   +   MntWines ,
4138566   +   MonthsAsCustomer ,
4138567   +   NumCatalogPurchases ,
4138568   +   NumDealsPurchases ,
4138569   +   NumDistPurchases ,
4138570   +   NumStorePurchases ,
4138571   +   NumWebPurchases ,
4138572   +   NumWebVisitsMonth ,
4138573   +   RFMstat ,
4138574   +   RMntFrq ,
4138575   +   Recency ,
4138576   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
4138577   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4138578   +
4138579   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4138580   +END;
MPRINT(EM_DIAGRAM):   END;
4138581   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4138582   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4138583   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4138584   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4138585   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4138586   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
4138587   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4138588   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4138589   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4138590   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4138591   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4138592   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4138593   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
4138594   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4138595   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4138596   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4138597   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4138598   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
4138599   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4138600   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
4138601   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4138602   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4138603   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
4138604   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4138605   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
4138606   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4138607   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
4138608   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4138609   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
4138610   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4138611   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
4138612   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4138613   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
4138614   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4138615   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
4138616   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4138617   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4138618   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4138619   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4138620   +END;
MPRINT(EM_DIAGRAM):   END;
4138621   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4138622   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4138623   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4138624   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
4138625   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4138626   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4138627   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4138628   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4138629   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4138630   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4138631   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4138632   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4138633   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4138634   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4138635   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4138636   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4138637   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
4138638   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4138639   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4138640   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4138641   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4138642   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4138643   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
4138644   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4138645   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4138646   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
4138647   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4138648   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4138649   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
4138650   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4138651   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4138652   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4138653   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4138654   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
4138655   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4138656   +   ELSE S_NumCatalogPurchases
4138657   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4138658   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
4138659   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4138660   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4138661   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
4138662   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4138663   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4138664   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
4138665   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4138666   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4138667   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
4138668   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4138669   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4138670   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
4138671   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4138672   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4138673   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
4138674   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4138675   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4138676   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4138677   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4138678   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4138679   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4138680   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4138681   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4138682   +END;
MPRINT(EM_DIAGRAM):   END;
4138683   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4138684   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4138685   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4138686   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4138687   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4138688   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4138689   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4138690   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4138691   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4138692   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4138693   +   H1x1_1  =    -0.39626020371997 * S_AcceptedCmpTotal
4138694   +          +    -0.01816056663075 * S_Age  +    -0.00460254268687 * S_Frq
4138695   +          +     -0.6298818722064 * S_Income  +      0.8900929150705 *
4138696   +        S_Kidhome  +     0.05998375535947 * S_Mnt  +     0.08478552461574 *
4138697   +        S_MntFishProducts  +     0.07285521492122 * S_MntFruits
4138698   +          +     0.02425299634788 * S_MntGoldProds  +    -0.41076383325238 *
4138699   +        S_MntMeatProducts  +     0.07871852129826 * S_MntSweetProducts
4138700   +          +     0.41538830130195 * S_MntWines  +    -0.05328800798119 *
4138701   +        S_MonthsAsCustomer  +    -0.40684432921987 * S_NumCatalogPurchases
4138702   +          +     -0.4295354470932 * S_NumDealsPurchases
4138703   +          +    -0.08226280459837 * S_NumDistPurchases
4138704   +          +      0.2932815275833 * S_NumStorePurchases
4138705   +          +     0.19049189042599 * S_NumWebPurchases
4138706   +          +    -0.98799339280673 * S_NumWebVisitsMonth
4138707   +          +     0.11260673669543 * S_RFMstat  +     0.13635890961985 *
4138708   +        S_RMntFrq  +     1.04348870032296 * S_Recency
4138709   +          +     0.52611148815102 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.39626020371997 * S_AcceptedCmpTotal + -0.01816056663075 * 
S_Age + -0.00460254268687 * S_Frq + -0.6298818722064 * S_Income + 0.8900929150705 * S_Kidhome 
+ 0.05998375535947 * S_Mnt + 0.08478552461574 * S_MntFishProducts + 0.07285521492122 * 
S_MntFruits + 0.02425299634788 * S_MntGoldProds + -0.41076383325238 * S_MntMeatProducts + 
0.07871852129826 * S_MntSweetProducts + 0.41538830130195 * S_MntWines + -0.05328800798119 * 
S_MonthsAsCustomer + -0.40684432921987 * S_NumCatalogPurchases + -0.4295354470932 * 
S_NumDealsPurchases + -0.08226280459837 * S_NumDistPurchases + 0.2932815275833 * 
S_NumStorePurchases + 0.19049189042599 * S_NumWebPurchases + -0.98799339280673 * 
S_NumWebVisitsMonth + 0.11260673669543 * S_RFMstat + 0.13635890961985 * S_RMntFrq + 
1.04348870032296 * S_Recency + 0.52611148815102 * S_Teenhome ;
4138710   +   H1x1_1  = H1x1_1  +     0.15790711928997 * AcceptedCmp10
4138711   +          +     0.06783787806396 * AcceptedCmp20  +     0.41565774195293 *
4138712   +        AcceptedCmp30  +     0.30916570020187 * AcceptedCmp40
4138713   +          +     0.01958247067826 * AcceptedCmp50  +    -0.22124142064002 *
4138714   +        Complain0  +    -0.10489638586177 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.15790711928997 * AcceptedCmp10 + 0.06783787806396 * 
AcceptedCmp20 + 0.41565774195293 * AcceptedCmp30 + 0.30916570020187 * AcceptedCmp40 + 
0.01958247067826 * AcceptedCmp50 + -0.22124142064002 * Complain0 + -0.10489638586177 * 
HigherEducationBinary0 ;
4138715   +   H1x1_1  = H1x1_1  +    -0.08125710121444 * Education2n_Cycle
4138716   +          +     0.43870916958611 * EducationBasic  +     0.00821874857942 *
4138717   +        EducationGraduation  +    -0.06446100461656 * EducationMaster
4138718   +          +    -0.78551174413278 * Marital_StatusDivorced
4138719   +          +     1.14162836709205 * Marital_StatusMarried
4138720   +          +    -0.85471695548675 * Marital_StatusSingle
4138721   +          +     1.26505259752775 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.08125710121444 * Education2n_Cycle + 
0.43870916958611 * EducationBasic + 0.00821874857942 * EducationGraduation + -0.06446100461656 
* EducationMaster + -0.78551174413278 * Marital_StatusDivorced + 1.14162836709205 * 
Marital_StatusMarried + -0.85471695548675 * Marital_StatusSingle + 1.26505259752775 * 
Marital_StatusTogether ;
4138722   +   H1x1_1  =     0.64210847429525 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.64210847429525 + H1x1_1 ;
4138723   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4138724   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4138725   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
4138726   +END;
MPRINT(EM_DIAGRAM):   END;
4138727   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4138728   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4138729   +END;
MPRINT(EM_DIAGRAM):   END;
4138730   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4138731   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
4138732   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4138733   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4138734   +   H1x2_1  =     1.91116996820275 * S_AcceptedCmpTotal
4138735   +          +    -0.04565000095235 * S_Age  +    -1.63806233692285 * S_Frq
4138736   +          +    -0.15095439296545 * S_Income  +     0.02267703582625 *
4138737   +        S_Kidhome  +     2.48236777474814 * S_Mnt  +    -1.42112052837665 *
4138738   +        S_MntFishProducts  +    -0.11955588126018 * S_MntFruits
4138739   +          +     0.13658953936605 * S_MntGoldProds  +     4.97158775763288 *
4138740   +        S_MntMeatProducts  +    -0.28267341074908 * S_MntSweetProducts
4138741   +          +    -1.82601506972813 * S_MntWines  +    -0.19812697196432 *
4138742   +        S_MonthsAsCustomer  +     0.19332662253824 * S_NumCatalogPurchases
4138743   +          +      0.1710743409836 * S_NumDealsPurchases
4138744   +          +     1.10019178495427 * S_NumDistPurchases
4138745   +          +     0.06701301620472 * S_NumStorePurchases
4138746   +          +    -1.47240374003368 * S_NumWebPurchases
4138747   +          +     0.38443387640949 * S_NumWebVisitsMonth
4138748   +          +      2.0027113997702 * S_RFMstat  +    -0.21911959624222 *
4138749   +        S_RMntFrq  +    -0.01383257292281 * S_Recency
4138750   +          +     0.06197183036374 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.91116996820275 * S_AcceptedCmpTotal + -0.04565000095235 * 
S_Age + -1.63806233692285 * S_Frq + -0.15095439296545 * S_Income + 0.02267703582625 * 
S_Kidhome + 2.48236777474814 * S_Mnt + -1.42112052837665 * S_MntFishProducts + 
-0.11955588126018 * S_MntFruits + 0.13658953936605 * S_MntGoldProds + 4.97158775763288 * 
S_MntMeatProducts + -0.28267341074908 * S_MntSweetProducts + -1.82601506972813 * S_MntWines + 
-0.19812697196432 * S_MonthsAsCustomer + 0.19332662253824 * S_NumCatalogPurchases + 
0.1710743409836 * S_NumDealsPurchases + 1.10019178495427 * S_NumDistPurchases + 
0.06701301620472 * S_NumStorePurchases + -1.47240374003368 * S_NumWebPurchases + 
0.38443387640949 * S_NumWebVisitsMonth + 2.0027113997702 * S_RFMstat + -0.21911959624222 * 
S_RMntFrq + -0.01383257292281 * S_Recency + 0.06197183036374 * S_Teenhome ;
4138751   +   H1x2_1  = H1x2_1  +    -2.19426751676022 * AcceptedCmp10
4138752   +          +     1.23153389834213 * AcceptedCmp20  +     1.52112605411294 *
4138753   +        AcceptedCmp30  +     1.24421666042028 * AcceptedCmp40
4138754   +          +    -1.01515793855275 * AcceptedCmp50  +    -0.37077318076551 *
4138755   +        Complain0  +    -0.60160682289549 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -2.19426751676022 * AcceptedCmp10 + 1.23153389834213 * 
AcceptedCmp20 + 1.52112605411294 * AcceptedCmp30 + 1.24421666042028 * AcceptedCmp40 + 
-1.01515793855275 * AcceptedCmp50 + -0.37077318076551 * Complain0 + -0.60160682289549 * 
HigherEducationBinary0 ;
4138756   +   H1x2_1  = H1x2_1  +     0.86205864289563 * Education2n_Cycle
4138757   +          +     1.36125955589945 * EducationBasic  +    -0.53843321813375 *
4138758   +        EducationGraduation  +    -0.84396607413409 * EducationMaster
4138759   +          +    -0.36835980184757 * Marital_StatusDivorced
4138760   +          +     0.71718933679692 * Marital_StatusMarried
4138761   +          +    -0.35767236657055 * Marital_StatusSingle
4138762   +          +     0.87230634846649 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.86205864289563 * Education2n_Cycle + 
1.36125955589945 * EducationBasic + -0.53843321813375 * EducationGraduation + 
-0.84396607413409 * EducationMaster + -0.36835980184757 * Marital_StatusDivorced + 
0.71718933679692 * Marital_StatusMarried + -0.35767236657055 * Marital_StatusSingle + 
0.87230634846649 * Marital_StatusTogether ;
4138763   +   H1x2_1  =     1.98030145519039 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.98030145519039 + H1x2_1 ;
4138764   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4138765   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4138766   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
4138767   +END;
MPRINT(EM_DIAGRAM):   END;
4138768   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4138769   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
4138770   +END;
MPRINT(EM_DIAGRAM):   END;
4138771   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4138772   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
4138773   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4138774   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4138775   +   H1x3_1  =     0.59484084506505 * S_AcceptedCmpTotal
4138776   +          +    -0.09107168455833 * S_Age  +      0.5281685679707 * S_Frq
4138777   +          +     1.27295894323816 * S_Income  +    -2.21965206319903 *
4138778   +        S_Kidhome  +     1.64535832697746 * S_Mnt  +    -0.35647765898878 *
4138779   +        S_MntFishProducts  +       0.702900738572 * S_MntFruits
4138780   +          +    -0.05421413002638 * S_MntGoldProds  +     0.35353806013819 *
4138781   +        S_MntMeatProducts  +     0.63868155719201 * S_MntSweetProducts
4138782   +          +     1.59716770369014 * S_MntWines  +    -0.38061815224137 *
4138783   +        S_MonthsAsCustomer  +     0.32358812228632 * S_NumCatalogPurchases
4138784   +          +    -1.99858075809796 * S_NumDealsPurchases
4138785   +          +    -0.37353682448701 * S_NumDistPurchases
4138786   +          +     1.16275863071649 * S_NumStorePurchases
4138787   +          +       -0.75936809253 * S_NumWebPurchases
4138788   +          +     2.17936226306026 * S_NumWebVisitsMonth
4138789   +          +    -0.05766019409404 * S_RFMstat  +      0.2675872238222 *
4138790   +        S_RMntFrq  +    -1.06566929523903 * S_Recency
4138791   +          +    -0.66606032905738 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.59484084506505 * S_AcceptedCmpTotal + -0.09107168455833 * 
S_Age + 0.5281685679707 * S_Frq + 1.27295894323816 * S_Income + -2.21965206319903 * S_Kidhome 
+ 1.64535832697746 * S_Mnt + -0.35647765898878 * S_MntFishProducts + 0.702900738572 * 
S_MntFruits + -0.05421413002638 * S_MntGoldProds + 0.35353806013819 * S_MntMeatProducts + 
0.63868155719201 * S_MntSweetProducts + 1.59716770369014 * S_MntWines + -0.38061815224137 * 
S_MonthsAsCustomer + 0.32358812228632 * S_NumCatalogPurchases + -1.99858075809796 * 
S_NumDealsPurchases + -0.37353682448701 * S_NumDistPurchases + 1.16275863071649 * 
S_NumStorePurchases + -0.75936809253 * S_NumWebPurchases + 2.17936226306026 * 
S_NumWebVisitsMonth + -0.05766019409404 * S_RFMstat + 0.2675872238222 * S_RMntFrq + 
-1.06566929523903 * S_Recency + -0.66606032905738 * S_Teenhome ;
4138792   +   H1x3_1  = H1x3_1  +     1.65955888726121 * AcceptedCmp10
4138793   +          +     0.45373706627481 * AcceptedCmp20  +     0.01398492780843 *
4138794   +        AcceptedCmp30  +    -0.89333296822402 * AcceptedCmp40
4138795   +          +     1.13510555884717 * AcceptedCmp50  +        0.34540948822 *
4138796   +        Complain0  +     0.74321002714269 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.65955888726121 * AcceptedCmp10 + 0.45373706627481 * 
AcceptedCmp20 + 0.01398492780843 * AcceptedCmp30 + -0.89333296822402 * AcceptedCmp40 + 
1.13510555884717 * AcceptedCmp50 + 0.34540948822 * Complain0 + 0.74321002714269 * 
HigherEducationBinary0 ;
4138797   +   H1x3_1  = H1x3_1  +    -0.23607197367978 * Education2n_Cycle
4138798   +          +     0.42497173199023 * EducationBasic  +      0.1600632419786 *
4138799   +        EducationGraduation  +    -0.90489876056203 * EducationMaster
4138800   +          +     0.60036315441483 * Marital_StatusDivorced
4138801   +          +    -0.94084946353672 * Marital_StatusMarried
4138802   +          +     0.34594388147374 * Marital_StatusSingle
4138803   +          +    -0.32507682638228 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.23607197367978 * Education2n_Cycle + 
0.42497173199023 * EducationBasic + 0.1600632419786 * EducationGraduation + -0.90489876056203 
* EducationMaster + 0.60036315441483 * Marital_StatusDivorced + -0.94084946353672 * 
Marital_StatusMarried + 0.34594388147374 * Marital_StatusSingle + -0.32507682638228 * 
Marital_StatusTogether ;
4138804   +   H1x3_1  =     1.88038507544103 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.88038507544103 + H1x3_1 ;
4138805   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4138806   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4138807   +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
4138808   +END;
MPRINT(EM_DIAGRAM):   END;
4138809   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4138810   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
4138811   +END;
MPRINT(EM_DIAGRAM):   END;
4138812   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4138813   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
4138814   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4138815   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4138816   +   H2x1_1  =     -3.6827854279321 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -3.6827854279321 * H1x1_1 ;
4138817   +   H2x1_1  = H2x1_1  +     3.64439382550131 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 3.64439382550131 * H1x2_1 ;
4138818   +   H2x1_1  = H2x1_1  +    -2.48816241593271 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.48816241593271 * H1x3_1 ;
4138819   +   H2x1_1  =     -2.2078830840961 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -2.2078830840961 + H2x1_1 ;
4138820   +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
4138821   +END;
MPRINT(EM_DIAGRAM):   END;
4138822   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4138823   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
4138824   +END;
MPRINT(EM_DIAGRAM):   END;
4138825   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4138826   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
4138827   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4138828   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4138829   +   H2x2_1  =     -1.6139108987075 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -1.6139108987075 * H1x1_1 ;
4138830   +   H2x2_1  = H2x2_1  +     1.98688988318911 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 1.98688988318911 * H1x2_1 ;
4138831   +   H2x2_1  = H2x2_1  +    -1.34935271176056 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.34935271176056 * H1x3_1 ;
4138832   +   H2x2_1  =    -2.69383672527368 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -2.69383672527368 + H2x2_1 ;
4138833   +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
4138834   +END;
MPRINT(EM_DIAGRAM):   END;
4138835   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4138836   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
4138837   +END;
MPRINT(EM_DIAGRAM):   END;
4138838   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4138839   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
4138840   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4138841   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4138842   +   H3x1_1  =     5.76336982853197 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 5.76336982853197 * H2x1_1 ;
4138843   +   H3x1_1  = H3x1_1  +     3.27853184608173 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 3.27853184608173 * H2x2_1 ;
4138844   +   H3x1_1  =     0.79036126364677 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.79036126364677 + H3x1_1 ;
4138845   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4138846   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4138847   +   H3x1_1  = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
4138848   +END;
MPRINT(EM_DIAGRAM):   END;
4138849   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4138850   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
4138851   +END;
MPRINT(EM_DIAGRAM):   END;
4138852   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4138853   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4138854   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4138855   +
4138856   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
4138857   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
4138858   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4138859   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
4138860   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
4138861   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4138862   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
4138863   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4138864   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4138865   +end;
MPRINT(EM_DIAGRAM):   end;
4138866   +else do;
MPRINT(EM_DIAGRAM):   else do;
4138867   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
4138868   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
4138869   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
4138870   +   end;
MPRINT(EM_DIAGRAM):   end;
4138871   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
4138872   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
4138873   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
4138874   +   end;
MPRINT(EM_DIAGRAM):   end;
4138875   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4138876   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4138877   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4138878   +   end;
MPRINT(EM_DIAGRAM):   end;
4138879   +end;
MPRINT(EM_DIAGRAM):   end;
4138880   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4138881   +   P_DepVar1  =    -9.42523861508231 * H3x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.42523861508231 * H3x1_1 ;
4138882   +   P_DepVar1  =     7.36639958607287 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.36639958607287 + P_DepVar1 ;
4138883   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4138884   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4138885   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4138886   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4138887   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4138888   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4138889   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4138890   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4138891   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4138892   +END;
MPRINT(EM_DIAGRAM):   END;
4138893   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4138894   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4138895   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4138896   +END;
MPRINT(EM_DIAGRAM):   END;
4138897   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4138898   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4138899   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4138900   +END;
MPRINT(EM_DIAGRAM):   END;
4138901   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
4138902   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
4138903   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
4138904   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
4138905   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
4138906   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
4138907   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
4138908   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4138909   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4138910   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4138911   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4138912   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4138913   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4138914   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4138915   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4138916   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4138917   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4138918   +END;
MPRINT(EM_DIAGRAM):   END;
4138919   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4138920   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4138921   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4138922   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
4138923   +* Renaming variables for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural6;
4138924   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4138925   +* Renaming Posterior variables for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural6;
4138926   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4138927   +drop AutoNeural6_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_P_DepVar1;
4138928   +AutoNeural6_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural6_P_DepVar1 = P_DepVar1;
4138929   +drop AutoNeural6_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_P_DepVar0;
4138930   +AutoNeural6_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural6_P_DepVar0 = P_DepVar0;
4138931   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4138932   +* Renaming Into variables for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural6;
4138933   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4138934   +length AutoNeural6_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural6_I_DepVar $32;
4138935   +drop AutoNeural6_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_I_DepVar;
4138936   +AutoNeural6_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural6_I_DepVar = I_DepVar;
4138937   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4138938   +* Renaming _WARN_ variable for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural6;
4138939   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4138940   +length AutoNeural6_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural6_WARN_ $4;
4138941   +drop AutoNeural6_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_WARN_;
4138942   +AutoNeural6_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural6_WARN_ = _WARN_;
4138943   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4138944   +* Ensmbl38: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Scoring Code of model 2 of 7;
4138945   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4138946   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4138947   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
4138948   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
4138949   +* NODE: AutoNeural7;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural7;
4138950   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4138951   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4138952   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4138953   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4138954   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4138955   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4138956   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4138957   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4138958   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4138959   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4138960   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4138961   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4138962   +LENGTH _WARN_ $4
4138963   +      F_DepVar  $ 12
4138964   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
4138965   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4138966   +
4138967   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4138968   +
4138969   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4138970   +
4138971   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4138972   +
4138973   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4138974   +
4138975   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4138976   +
4138977   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4138978   +
4138979   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4138980   +
4138981   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4138982   +
4138983   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4138984   +
4138985   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4138986   +
4138987   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4138988   +
4138989   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4138990   +
4138991   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4138992   +
4138993   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4138994   +
4138995   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4138996   +
4138997   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4138998   +
4138999   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4139000   +
4139001   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4139002   +
4139003   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4139004   +
4139005   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4139006   +
4139007   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4139008   +
4139009   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4139010   +
4139011   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4139012   +
4139013   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4139014   +
4139015   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4139016   +
4139017   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4139018   +
4139019   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4139020   +
4139021   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4139022   +
4139023   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4139024   +
4139025   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4139026   +
4139027   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4139028   +
4139029   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4139030   +
4139031   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4139032   +
4139033   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4139034   +
4139035   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4139036   +
4139037   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4139038   +
4139039   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4139040   +
4139041   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4139042   +
4139043   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4139044   +
4139045   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4139046   +
4139047   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4139048   +
4139049   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4139050   +
4139051   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4139052   +
4139053   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
4139054   +
4139055   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4139056   +
4139057   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
4139058   +
4139059   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4139060   +
4139061   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4139062   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4139063   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4139064   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4139065   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4139066   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4139067   +end;
MPRINT(EM_DIAGRAM):   end;
4139068   +else do;
MPRINT(EM_DIAGRAM):   else do;
4139069   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4139070   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4139071   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4139072   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4139073   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4139074   +   end;
MPRINT(EM_DIAGRAM):   end;
4139075   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4139076   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4139077   +   end;
MPRINT(EM_DIAGRAM):   end;
4139078   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4139079   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4139080   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4139081   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4139082   +   end;
MPRINT(EM_DIAGRAM):   end;
4139083   +end;
MPRINT(EM_DIAGRAM):   end;
4139084   +
4139085   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4139086   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4139087   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4139088   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4139089   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4139090   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4139091   +end;
MPRINT(EM_DIAGRAM):   end;
4139092   +else do;
MPRINT(EM_DIAGRAM):   else do;
4139093   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4139094   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4139095   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4139096   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4139097   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4139098   +   end;
MPRINT(EM_DIAGRAM):   end;
4139099   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4139100   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4139101   +   end;
MPRINT(EM_DIAGRAM):   end;
4139102   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4139103   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4139104   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4139105   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4139106   +   end;
MPRINT(EM_DIAGRAM):   end;
4139107   +end;
MPRINT(EM_DIAGRAM):   end;
4139108   +
4139109   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4139110   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4139111   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4139112   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4139113   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4139114   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4139115   +end;
MPRINT(EM_DIAGRAM):   end;
4139116   +else do;
MPRINT(EM_DIAGRAM):   else do;
4139117   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4139118   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4139119   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4139120   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4139121   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4139122   +   end;
MPRINT(EM_DIAGRAM):   end;
4139123   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4139124   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4139125   +   end;
MPRINT(EM_DIAGRAM):   end;
4139126   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4139127   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4139128   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4139129   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4139130   +   end;
MPRINT(EM_DIAGRAM):   end;
4139131   +end;
MPRINT(EM_DIAGRAM):   end;
4139132   +
4139133   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4139134   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4139135   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4139136   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4139137   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4139138   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4139139   +end;
MPRINT(EM_DIAGRAM):   end;
4139140   +else do;
MPRINT(EM_DIAGRAM):   else do;
4139141   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4139142   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4139143   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4139144   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4139145   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4139146   +   end;
MPRINT(EM_DIAGRAM):   end;
4139147   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4139148   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4139149   +   end;
MPRINT(EM_DIAGRAM):   end;
4139150   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4139151   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4139152   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4139153   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4139154   +   end;
MPRINT(EM_DIAGRAM):   end;
4139155   +end;
MPRINT(EM_DIAGRAM):   end;
4139156   +
4139157   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4139158   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4139159   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4139160   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4139161   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4139162   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4139163   +end;
MPRINT(EM_DIAGRAM):   end;
4139164   +else do;
MPRINT(EM_DIAGRAM):   else do;
4139165   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4139166   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4139167   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4139168   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4139169   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4139170   +   end;
MPRINT(EM_DIAGRAM):   end;
4139171   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4139172   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4139173   +   end;
MPRINT(EM_DIAGRAM):   end;
4139174   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4139175   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4139176   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4139177   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4139178   +   end;
MPRINT(EM_DIAGRAM):   end;
4139179   +end;
MPRINT(EM_DIAGRAM):   end;
4139180   +
4139181   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4139182   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4139183   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4139184   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4139185   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4139186   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4139187   +end;
MPRINT(EM_DIAGRAM):   end;
4139188   +else do;
MPRINT(EM_DIAGRAM):   else do;
4139189   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4139190   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4139191   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4139192   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4139193   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4139194   +   end;
MPRINT(EM_DIAGRAM):   end;
4139195   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4139196   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4139197   +   end;
MPRINT(EM_DIAGRAM):   end;
4139198   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4139199   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4139200   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4139201   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4139202   +   end;
MPRINT(EM_DIAGRAM):   end;
4139203   +end;
MPRINT(EM_DIAGRAM):   end;
4139204   +
4139205   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4139206   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4139207   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4139208   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4139209   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4139210   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4139211   +end;
MPRINT(EM_DIAGRAM):   end;
4139212   +else do;
MPRINT(EM_DIAGRAM):   else do;
4139213   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4139214   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4139215   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4139216   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4139217   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4139218   +   end;
MPRINT(EM_DIAGRAM):   end;
4139219   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4139220   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4139221   +   end;
MPRINT(EM_DIAGRAM):   end;
4139222   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4139223   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4139224   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4139225   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4139226   +   end;
MPRINT(EM_DIAGRAM):   end;
4139227   +end;
MPRINT(EM_DIAGRAM):   end;
4139228   +
4139229   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4139230   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
4139231   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4139232   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4139233   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4139234   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4139235   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4139236   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4139237   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4139238   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4139239   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4139240   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4139241   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4139242   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4139243   +end;
MPRINT(EM_DIAGRAM):   end;
4139244   +else do;
MPRINT(EM_DIAGRAM):   else do;
4139245   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4139246   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4139247   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4139248   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4139249   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4139250   +   end;
MPRINT(EM_DIAGRAM):   end;
4139251   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4139252   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4139253   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4139254   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4139255   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4139256   +   end;
MPRINT(EM_DIAGRAM):   end;
4139257   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4139258   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4139259   +   end;
MPRINT(EM_DIAGRAM):   end;
4139260   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4139261   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4139262   +   end;
MPRINT(EM_DIAGRAM):   end;
4139263   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4139264   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4139265   +   end;
MPRINT(EM_DIAGRAM):   end;
4139266   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4139267   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4139268   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4139269   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4139270   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4139271   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4139272   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4139273   +   end;
MPRINT(EM_DIAGRAM):   end;
4139274   +end;
MPRINT(EM_DIAGRAM):   end;
4139275   +
4139276   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4139277   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4139278   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
4139279   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4139280   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4139281   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4139282   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4139283   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4139284   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4139285   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4139286   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4139287   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4139288   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4139289   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4139290   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4139291   +end;
MPRINT(EM_DIAGRAM):   end;
4139292   +else do;
MPRINT(EM_DIAGRAM):   else do;
4139293   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4139294   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4139295   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4139296   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4139297   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4139298   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4139299   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4139300   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4139301   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4139302   +         end;
MPRINT(EM_DIAGRAM):   end;
4139303   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4139304   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4139305   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4139306   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4139307   +            end;
MPRINT(EM_DIAGRAM):   end;
4139308   +         end;
MPRINT(EM_DIAGRAM):   end;
4139309   +      end;
MPRINT(EM_DIAGRAM):   end;
4139310   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4139311   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4139312   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4139313   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4139314   +         end;
MPRINT(EM_DIAGRAM):   end;
4139315   +      end;
MPRINT(EM_DIAGRAM):   end;
4139316   +   end;
MPRINT(EM_DIAGRAM):   end;
4139317   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4139318   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4139319   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4139320   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4139321   +      end;
MPRINT(EM_DIAGRAM):   end;
4139322   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4139323   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4139324   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4139325   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4139326   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4139327   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4139328   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4139329   +         end;
MPRINT(EM_DIAGRAM):   end;
4139330   +      end;
MPRINT(EM_DIAGRAM):   end;
4139331   +   end;
MPRINT(EM_DIAGRAM):   end;
4139332   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4139333   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4139334   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4139335   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4139336   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4139337   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4139338   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4139339   +   end;
MPRINT(EM_DIAGRAM):   end;
4139340   +end;
MPRINT(EM_DIAGRAM):   end;
4139341   +
4139342   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4139343   +*** Checking missing input Interval
4139344   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4139345   +
4139346   +IF NMISS(
4139347   +   AcceptedCmpTotal ,
4139348   +   Age ,
4139349   +   Frq ,
4139350   +   Income ,
4139351   +   Kidhome ,
4139352   +   Mnt ,
4139353   +   MntFishProducts ,
4139354   +   MntFruits ,
4139355   +   MntGoldProds ,
4139356   +   MntMeatProducts ,
4139357   +   MntSweetProducts ,
4139358   +   MntWines ,
4139359   +   MonthsAsCustomer ,
4139360   +   NumCatalogPurchases ,
4139361   +   NumDealsPurchases ,
4139362   +   NumDistPurchases ,
4139363   +   NumStorePurchases ,
4139364   +   NumWebPurchases ,
4139365   +   NumWebVisitsMonth ,
4139366   +   RFMstat ,
4139367   +   RMntFrq ,
4139368   +   Recency ,
4139369   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
4139370   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4139371   +
4139372   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4139373   +END;
MPRINT(EM_DIAGRAM):   END;
4139374   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4139375   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4139376   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4139377   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4139378   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4139379   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
4139380   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4139381   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4139382   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4139383   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4139384   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4139385   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4139386   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
4139387   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4139388   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4139389   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4139390   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4139391   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
4139392   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4139393   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
4139394   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4139395   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4139396   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
4139397   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4139398   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
4139399   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4139400   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
4139401   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4139402   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
4139403   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4139404   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
4139405   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4139406   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
4139407   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4139408   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
4139409   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4139410   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4139411   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4139412   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4139413   +END;
MPRINT(EM_DIAGRAM):   END;
4139414   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4139415   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4139416   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4139417   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
4139418   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4139419   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4139420   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4139421   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4139422   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4139423   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4139424   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4139425   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4139426   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4139427   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4139428   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4139429   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4139430   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
4139431   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4139432   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4139433   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4139434   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4139435   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4139436   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
4139437   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4139438   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4139439   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
4139440   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4139441   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4139442   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
4139443   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4139444   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4139445   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4139446   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4139447   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
4139448   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4139449   +   ELSE S_NumCatalogPurchases
4139450   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4139451   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
4139452   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4139453   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4139454   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
4139455   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4139456   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4139457   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
4139458   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4139459   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4139460   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
4139461   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4139462   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4139463   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
4139464   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4139465   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4139466   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
4139467   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4139468   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4139469   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4139470   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4139471   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4139472   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4139473   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4139474   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4139475   +END;
MPRINT(EM_DIAGRAM):   END;
4139476   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4139477   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4139478   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4139479   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4139480   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4139481   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4139482   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4139483   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4139484   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4139485   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4139486   +   H1x1_1  =     0.26227897937716 * S_AcceptedCmpTotal
4139487   +          +     -0.0155758157867 * S_Age  +    -0.20268934440257 * S_Frq
4139488   +          +    -0.18529976542103 * S_Income  +     0.18038928903961 *
4139489   +        S_Kidhome  +    -0.28961354349068 * S_Mnt  +    -0.05151010840858 *
4139490   +        S_MntFishProducts  +    -0.03759341636928 * S_MntFruits
4139491   +          +     0.01305575717465 * S_MntGoldProds  +     0.24307680778257 *
4139492   +        S_MntMeatProducts  +    -0.02893363709307 * S_MntSweetProducts
4139493   +          +    -0.35324697751403 * S_MntWines  +    -0.00781254837323 *
4139494   +        S_MonthsAsCustomer  +     0.15222992290422 * S_NumCatalogPurchases
4139495   +          +     0.09708841024031 * S_NumDealsPurchases
4139496   +          +    -0.29075561032014 * S_NumDistPurchases
4139497   +          +    -0.14495394259873 * S_NumStorePurchases
4139498   +          +     0.11890705145732 * S_NumWebPurchases
4139499   +          +    -0.16954189911344 * S_NumWebVisitsMonth
4139500   +          +     0.12377939462638 * S_RFMstat  +    -0.05870604523801 *
4139501   +        S_RMntFrq  +     0.17150719398884 * S_Recency
4139502   +          +     0.13642607109645 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26227897937716 * S_AcceptedCmpTotal + -0.0155758157867 * 
S_Age + -0.20268934440257 * S_Frq + -0.18529976542103 * S_Income + 0.18038928903961 * 
S_Kidhome + -0.28961354349068 * S_Mnt + -0.05151010840858 * S_MntFishProducts + 
-0.03759341636928 * S_MntFruits + 0.01305575717465 * S_MntGoldProds + 0.24307680778257 * 
S_MntMeatProducts + -0.02893363709307 * S_MntSweetProducts + -0.35324697751403 * S_MntWines + 
-0.00781254837323 * S_MonthsAsCustomer + 0.15222992290422 * S_NumCatalogPurchases + 
0.09708841024031 * S_NumDealsPurchases + -0.29075561032014 * S_NumDistPurchases + 
-0.14495394259873 * S_NumStorePurchases + 0.11890705145732 * S_NumWebPurchases + 
-0.16954189911344 * S_NumWebVisitsMonth + 0.12377939462638 * S_RFMstat + -0.05870604523801 * 
S_RMntFrq + 0.17150719398884 * S_Recency + 0.13642607109645 * S_Teenhome ;
4139503   +   H1x1_2  =     0.26173967942961 * S_AcceptedCmpTotal
4139504   +          +    -0.00424968908882 * S_Age  +    -0.07102902276221 * S_Frq
4139505   +          +     0.17373040625452 * S_Income  +    -0.12612693849717 *
4139506   +        S_Kidhome  +    -0.40114393645566 * S_Mnt  +    -0.06800009910731 *
4139507   +        S_MntFishProducts  +    -0.06681994193124 * S_MntFruits
4139508   +          +     0.00602505287702 * S_MntGoldProds  +     0.29533767747106 *
4139509   +        S_MntMeatProducts  +    -0.06832235425976 * S_MntSweetProducts
4139510   +          +    -0.44970327281811 * S_MntWines  +    -0.01061648191158 *
4139511   +        S_MonthsAsCustomer  +      0.3402332775449 * S_NumCatalogPurchases
4139512   +          +     0.16274478997892 * S_NumDealsPurchases
4139513   +          +     0.03966958784582 * S_NumDistPurchases
4139514   +          +    -0.04714110726598 * S_NumStorePurchases
4139515   +          +    -0.02124229528082 * S_NumWebPurchases
4139516   +          +     0.29753299776832 * S_NumWebVisitsMonth
4139517   +          +     0.08114418100212 * S_RFMstat  +     0.39051989081881 *
4139518   +        S_RMntFrq  +     -0.3340129986623 * S_Recency
4139519   +          +    -0.11108871458308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.26173967942961 * S_AcceptedCmpTotal + -0.00424968908882 * 
S_Age + -0.07102902276221 * S_Frq + 0.17373040625452 * S_Income + -0.12612693849717 * 
S_Kidhome + -0.40114393645566 * S_Mnt + -0.06800009910731 * S_MntFishProducts + 
-0.06681994193124 * S_MntFruits + 0.00602505287702 * S_MntGoldProds + 0.29533767747106 * 
S_MntMeatProducts + -0.06832235425976 * S_MntSweetProducts + -0.44970327281811 * S_MntWines + 
-0.01061648191158 * S_MonthsAsCustomer + 0.3402332775449 * S_NumCatalogPurchases + 
0.16274478997892 * S_NumDealsPurchases + 0.03966958784582 * S_NumDistPurchases + 
-0.04714110726598 * S_NumStorePurchases + -0.02124229528082 * S_NumWebPurchases + 
0.29753299776832 * S_NumWebVisitsMonth + 0.08114418100212 * S_RFMstat + 0.39051989081881 * 
S_RMntFrq + -0.3340129986623 * S_Recency + -0.11108871458308 * S_Teenhome ;
4139520   +   H1x1_1  = H1x1_1  +      0.1756873442571 * AcceptedCmp10
4139521   +          +     0.31180024044306 * AcceptedCmp20  +     0.29619883713337 *
4139522   +        AcceptedCmp30  +     0.30154500722412 * AcceptedCmp40
4139523   +          +     0.19297823461379 * AcceptedCmp50  +     -0.2612666063344 *
4139524   +        Complain0  +    -0.07979877068908 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.1756873442571 * AcceptedCmp10 + 0.31180024044306 * 
AcceptedCmp20 + 0.29619883713337 * AcceptedCmp30 + 0.30154500722412 * AcceptedCmp40 + 
0.19297823461379 * AcceptedCmp50 + -0.2612666063344 * Complain0 + -0.07979877068908 * 
HigherEducationBinary0 ;
4139525   +   H1x1_2  = H1x1_2  +      0.0093987850789 * AcceptedCmp10
4139526   +          +     0.01121417299451 * AcceptedCmp20  +     0.02978720081114 *
4139527   +        AcceptedCmp30  +     0.03675035164823 * AcceptedCmp40
4139528   +          +      0.0326403700043 * AcceptedCmp50  +     0.12620299225555 *
4139529   +        Complain0  +    -0.08132205666396 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0093987850789 * AcceptedCmp10 + 0.01121417299451 * 
AcceptedCmp20 + 0.02978720081114 * AcceptedCmp30 + 0.03675035164823 * AcceptedCmp40 + 
0.0326403700043 * AcceptedCmp50 + 0.12620299225555 * Complain0 + -0.08132205666396 * 
HigherEducationBinary0 ;
4139530   +   H1x1_1  = H1x1_1  +    -0.03360721558666 * Education2n_Cycle
4139531   +          +     0.15032252273168 * EducationBasic  +    -0.00292639237041 *
4139532   +        EducationGraduation  +     0.00619669837452 * EducationMaster
4139533   +          +    -0.05037639679806 * Marital_StatusDivorced
4139534   +          +     0.28781968727878 * Marital_StatusMarried
4139535   +          +    -0.20382417074384 * Marital_StatusSingle
4139536   +          +     0.20088888064707 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03360721558666 * Education2n_Cycle + 
0.15032252273168 * EducationBasic + -0.00292639237041 * EducationGraduation + 0.00619669837452 
* EducationMaster + -0.05037639679806 * Marital_StatusDivorced + 0.28781968727878 * 
Marital_StatusMarried + -0.20382417074384 * Marital_StatusSingle + 0.20088888064707 * 
Marital_StatusTogether ;
4139537   +   H1x1_2  = H1x1_2  +     0.12543856607452 * Education2n_Cycle
4139538   +          +      0.0095562801112 * EducationBasic  +    -0.04438983662274 *
4139539   +        EducationGraduation  +    -0.06952670554019 * EducationMaster
4139540   +          +     0.06970969219123 * Marital_StatusDivorced
4139541   +          +    -0.15787475744986 * Marital_StatusMarried
4139542   +          +     0.14345344072192 * Marital_StatusSingle
4139543   +          +    -0.12758942067533 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12543856607452 * Education2n_Cycle + 0.0095562801112 
* EducationBasic + -0.04438983662274 * EducationGraduation + -0.06952670554019 * 
EducationMaster + 0.06970969219123 * Marital_StatusDivorced + -0.15787475744986 * 
Marital_StatusMarried + 0.14345344072192 * Marital_StatusSingle + -0.12758942067533 * 
Marital_StatusTogether ;
4139544   +   H1x1_1  =     0.90517220350758 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.90517220350758 + H1x1_1 ;
4139545   +   H1x1_2  =    -0.60383186342134 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.60383186342134 + H1x1_2 ;
4139546   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
4139547   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
4139548   +END;
MPRINT(EM_DIAGRAM):   END;
4139549   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4139550   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4139551   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4139552   +END;
MPRINT(EM_DIAGRAM):   END;
4139553   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4139554   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4139555   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4139556   +
4139557   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
4139558   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
4139559   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4139560   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
4139561   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
4139562   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4139563   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
4139564   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4139565   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4139566   +end;
MPRINT(EM_DIAGRAM):   end;
4139567   +else do;
MPRINT(EM_DIAGRAM):   else do;
4139568   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
4139569   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
4139570   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
4139571   +   end;
MPRINT(EM_DIAGRAM):   end;
4139572   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
4139573   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
4139574   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
4139575   +   end;
MPRINT(EM_DIAGRAM):   end;
4139576   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4139577   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4139578   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4139579   +   end;
MPRINT(EM_DIAGRAM):   end;
4139580   +end;
MPRINT(EM_DIAGRAM):   end;
4139581   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4139582   +   P_DepVar1  =     -11.151440981908 * H1x1_1  +     16.6040498320868 * H1x1_2
4139583   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -11.151440981908 * H1x1_1 + 16.6040498320868 * H1x1_2 ;
4139584   +   P_DepVar1  =     2.38025141404985 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.38025141404985 + P_DepVar1 ;
4139585   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4139586   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4139587   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4139588   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4139589   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4139590   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4139591   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4139592   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4139593   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4139594   +END;
MPRINT(EM_DIAGRAM):   END;
4139595   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4139596   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4139597   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4139598   +END;
MPRINT(EM_DIAGRAM):   END;
4139599   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4139600   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4139601   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4139602   +END;
MPRINT(EM_DIAGRAM):   END;
4139603   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
4139604   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
4139605   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
4139606   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
4139607   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
4139608   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
4139609   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
4139610   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4139611   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4139612   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4139613   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4139614   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4139615   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4139616   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4139617   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4139618   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4139619   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4139620   +END;
MPRINT(EM_DIAGRAM):   END;
4139621   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4139622   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4139623   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4139624   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
4139625   +* Renaming variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural7;
4139626   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4139627   +* Renaming Posterior variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural7;
4139628   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4139629   +drop AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar1;
4139630   +AutoNeural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar1 = P_DepVar1;
4139631   +drop AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar0;
4139632   +AutoNeural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar0 = P_DepVar0;
4139633   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4139634   +* Renaming Into variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural7;
4139635   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4139636   +length AutoNeural7_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural7_I_DepVar $32;
4139637   +drop AutoNeural7_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_I_DepVar;
4139638   +AutoNeural7_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural7_I_DepVar = I_DepVar;
4139639   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4139640   +* Renaming _WARN_ variable for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural7;
4139641   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4139642   +length AutoNeural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural7_WARN_ $4;
4139643   +drop AutoNeural7_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_WARN_;
4139644   +AutoNeural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural7_WARN_ = _WARN_;
4139645   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4139646   +* Ensmbl38: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Scoring Code of model 3 of 7;
4139647   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4139648   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4139649   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
4139650   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
4139651   +* NODE: AutoNeural8;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural8;
4139652   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4139653   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4139654   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4139655   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4139656   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4139657   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4139658   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4139659   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4139660   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4139661   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4139662   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4139663   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4139664   +LENGTH _WARN_ $4
4139665   +      F_DepVar  $ 12
4139666   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
4139667   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4139668   +
4139669   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4139670   +
4139671   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4139672   +
4139673   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4139674   +
4139675   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4139676   +
4139677   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4139678   +
4139679   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4139680   +
4139681   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4139682   +
4139683   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4139684   +
4139685   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4139686   +
4139687   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4139688   +
4139689   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4139690   +
4139691   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4139692   +
4139693   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4139694   +
4139695   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4139696   +
4139697   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4139698   +
4139699   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4139700   +
4139701   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4139702   +
4139703   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4139704   +
4139705   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4139706   +
4139707   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4139708   +
4139709   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4139710   +
4139711   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4139712   +
4139713   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4139714   +
4139715   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4139716   +
4139717   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4139718   +
4139719   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4139720   +
4139721   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4139722   +
4139723   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4139724   +
4139725   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4139726   +
4139727   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4139728   +
4139729   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4139730   +
4139731   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4139732   +
4139733   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4139734   +
4139735   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4139736   +
4139737   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4139738   +
4139739   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4139740   +
4139741   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4139742   +
4139743   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4139744   +
4139745   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4139746   +
4139747   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
4139748   +
4139749   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
4139750   +
4139751   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
4139752   +
4139753   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
4139754   +
4139755   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
4139756   +
4139757   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
4139758   +
4139759   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
4139760   +
4139761   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4139762   +
4139763   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4139764   +
4139765   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4139766   +
4139767   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4139768   +
4139769   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
4139770   +
4139771   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4139772   +
4139773   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
4139774   +
4139775   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4139776   +
4139777   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4139778   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4139779   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4139780   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4139781   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4139782   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4139783   +end;
MPRINT(EM_DIAGRAM):   end;
4139784   +else do;
MPRINT(EM_DIAGRAM):   else do;
4139785   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4139786   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4139787   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4139788   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4139789   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4139790   +   end;
MPRINT(EM_DIAGRAM):   end;
4139791   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4139792   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4139793   +   end;
MPRINT(EM_DIAGRAM):   end;
4139794   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4139795   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4139796   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4139797   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4139798   +   end;
MPRINT(EM_DIAGRAM):   end;
4139799   +end;
MPRINT(EM_DIAGRAM):   end;
4139800   +
4139801   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4139802   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4139803   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4139804   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4139805   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4139806   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4139807   +end;
MPRINT(EM_DIAGRAM):   end;
4139808   +else do;
MPRINT(EM_DIAGRAM):   else do;
4139809   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4139810   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4139811   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4139812   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4139813   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4139814   +   end;
MPRINT(EM_DIAGRAM):   end;
4139815   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4139816   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4139817   +   end;
MPRINT(EM_DIAGRAM):   end;
4139818   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4139819   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4139820   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4139821   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4139822   +   end;
MPRINT(EM_DIAGRAM):   end;
4139823   +end;
MPRINT(EM_DIAGRAM):   end;
4139824   +
4139825   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4139826   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4139827   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4139828   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4139829   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4139830   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4139831   +end;
MPRINT(EM_DIAGRAM):   end;
4139832   +else do;
MPRINT(EM_DIAGRAM):   else do;
4139833   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4139834   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4139835   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4139836   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4139837   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4139838   +   end;
MPRINT(EM_DIAGRAM):   end;
4139839   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4139840   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4139841   +   end;
MPRINT(EM_DIAGRAM):   end;
4139842   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4139843   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4139844   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4139845   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4139846   +   end;
MPRINT(EM_DIAGRAM):   end;
4139847   +end;
MPRINT(EM_DIAGRAM):   end;
4139848   +
4139849   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4139850   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4139851   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4139852   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4139853   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4139854   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4139855   +end;
MPRINT(EM_DIAGRAM):   end;
4139856   +else do;
MPRINT(EM_DIAGRAM):   else do;
4139857   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4139858   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4139859   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4139860   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4139861   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4139862   +   end;
MPRINT(EM_DIAGRAM):   end;
4139863   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4139864   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4139865   +   end;
MPRINT(EM_DIAGRAM):   end;
4139866   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4139867   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4139868   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4139869   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4139870   +   end;
MPRINT(EM_DIAGRAM):   end;
4139871   +end;
MPRINT(EM_DIAGRAM):   end;
4139872   +
4139873   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4139874   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4139875   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4139876   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4139877   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4139878   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4139879   +end;
MPRINT(EM_DIAGRAM):   end;
4139880   +else do;
MPRINT(EM_DIAGRAM):   else do;
4139881   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4139882   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4139883   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4139884   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4139885   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4139886   +   end;
MPRINT(EM_DIAGRAM):   end;
4139887   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4139888   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4139889   +   end;
MPRINT(EM_DIAGRAM):   end;
4139890   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4139891   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4139892   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4139893   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4139894   +   end;
MPRINT(EM_DIAGRAM):   end;
4139895   +end;
MPRINT(EM_DIAGRAM):   end;
4139896   +
4139897   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4139898   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4139899   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4139900   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4139901   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4139902   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4139903   +end;
MPRINT(EM_DIAGRAM):   end;
4139904   +else do;
MPRINT(EM_DIAGRAM):   else do;
4139905   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4139906   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4139907   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4139908   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4139909   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4139910   +   end;
MPRINT(EM_DIAGRAM):   end;
4139911   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4139912   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4139913   +   end;
MPRINT(EM_DIAGRAM):   end;
4139914   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4139915   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4139916   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4139917   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4139918   +   end;
MPRINT(EM_DIAGRAM):   end;
4139919   +end;
MPRINT(EM_DIAGRAM):   end;
4139920   +
4139921   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4139922   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4139923   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4139924   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4139925   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4139926   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4139927   +end;
MPRINT(EM_DIAGRAM):   end;
4139928   +else do;
MPRINT(EM_DIAGRAM):   else do;
4139929   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4139930   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4139931   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4139932   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4139933   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4139934   +   end;
MPRINT(EM_DIAGRAM):   end;
4139935   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4139936   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4139937   +   end;
MPRINT(EM_DIAGRAM):   end;
4139938   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4139939   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4139940   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4139941   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4139942   +   end;
MPRINT(EM_DIAGRAM):   end;
4139943   +end;
MPRINT(EM_DIAGRAM):   end;
4139944   +
4139945   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4139946   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
4139947   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4139948   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4139949   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4139950   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4139951   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4139952   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4139953   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4139954   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4139955   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4139956   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4139957   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4139958   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4139959   +end;
MPRINT(EM_DIAGRAM):   end;
4139960   +else do;
MPRINT(EM_DIAGRAM):   else do;
4139961   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4139962   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4139963   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4139964   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4139965   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4139966   +   end;
MPRINT(EM_DIAGRAM):   end;
4139967   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4139968   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4139969   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4139970   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4139971   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4139972   +   end;
MPRINT(EM_DIAGRAM):   end;
4139973   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4139974   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4139975   +   end;
MPRINT(EM_DIAGRAM):   end;
4139976   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4139977   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4139978   +   end;
MPRINT(EM_DIAGRAM):   end;
4139979   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4139980   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4139981   +   end;
MPRINT(EM_DIAGRAM):   end;
4139982   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4139983   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4139984   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4139985   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4139986   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4139987   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4139988   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4139989   +   end;
MPRINT(EM_DIAGRAM):   end;
4139990   +end;
MPRINT(EM_DIAGRAM):   end;
4139991   +
4139992   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4139993   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4139994   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
4139995   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4139996   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4139997   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4139998   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4139999   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4140000   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4140001   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4140002   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4140003   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4140004   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4140005   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4140006   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4140007   +end;
MPRINT(EM_DIAGRAM):   end;
4140008   +else do;
MPRINT(EM_DIAGRAM):   else do;
4140009   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4140010   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4140011   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4140012   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4140013   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4140014   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4140015   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4140016   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4140017   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4140018   +         end;
MPRINT(EM_DIAGRAM):   end;
4140019   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4140020   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4140021   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4140022   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4140023   +            end;
MPRINT(EM_DIAGRAM):   end;
4140024   +         end;
MPRINT(EM_DIAGRAM):   end;
4140025   +      end;
MPRINT(EM_DIAGRAM):   end;
4140026   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4140027   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4140028   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4140029   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4140030   +         end;
MPRINT(EM_DIAGRAM):   end;
4140031   +      end;
MPRINT(EM_DIAGRAM):   end;
4140032   +   end;
MPRINT(EM_DIAGRAM):   end;
4140033   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4140034   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4140035   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4140036   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4140037   +      end;
MPRINT(EM_DIAGRAM):   end;
4140038   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4140039   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4140040   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4140041   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4140042   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4140043   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4140044   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4140045   +         end;
MPRINT(EM_DIAGRAM):   end;
4140046   +      end;
MPRINT(EM_DIAGRAM):   end;
4140047   +   end;
MPRINT(EM_DIAGRAM):   end;
4140048   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4140049   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4140050   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4140051   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4140052   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4140053   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4140054   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4140055   +   end;
MPRINT(EM_DIAGRAM):   end;
4140056   +end;
MPRINT(EM_DIAGRAM):   end;
4140057   +
4140058   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4140059   +*** Checking missing input Interval
4140060   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4140061   +
4140062   +IF NMISS(
4140063   +   AcceptedCmpTotal ,
4140064   +   Age ,
4140065   +   Frq ,
4140066   +   Income ,
4140067   +   Kidhome ,
4140068   +   Mnt ,
4140069   +   MntFishProducts ,
4140070   +   MntFruits ,
4140071   +   MntGoldProds ,
4140072   +   MntMeatProducts ,
4140073   +   MntSweetProducts ,
4140074   +   MntWines ,
4140075   +   MonthsAsCustomer ,
4140076   +   NumCatalogPurchases ,
4140077   +   NumDealsPurchases ,
4140078   +   NumDistPurchases ,
4140079   +   NumStorePurchases ,
4140080   +   NumWebPurchases ,
4140081   +   NumWebVisitsMonth ,
4140082   +   RFMstat ,
4140083   +   RMntFrq ,
4140084   +   Recency ,
4140085   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
4140086   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4140087   +
4140088   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4140089   +END;
MPRINT(EM_DIAGRAM):   END;
4140090   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4140091   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4140092   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4140093   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4140094   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4140095   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
4140096   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4140097   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4140098   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4140099   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4140100   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4140101   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4140102   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
4140103   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4140104   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4140105   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4140106   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4140107   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
4140108   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4140109   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
4140110   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4140111   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4140112   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
4140113   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4140114   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
4140115   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4140116   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
4140117   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4140118   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
4140119   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4140120   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
4140121   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4140122   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
4140123   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4140124   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
4140125   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4140126   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4140127   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4140128   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4140129   +END;
MPRINT(EM_DIAGRAM):   END;
4140130   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4140131   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4140132   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4140133   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
4140134   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4140135   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4140136   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4140137   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4140138   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4140139   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4140140   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4140141   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4140142   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4140143   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4140144   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4140145   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4140146   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
4140147   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4140148   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4140149   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4140150   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4140151   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4140152   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
4140153   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4140154   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4140155   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
4140156   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4140157   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4140158   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
4140159   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4140160   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4140161   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4140162   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4140163   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
4140164   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4140165   +   ELSE S_NumCatalogPurchases
4140166   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4140167   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
4140168   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4140169   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4140170   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
4140171   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4140172   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4140173   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
4140174   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4140175   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4140176   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
4140177   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4140178   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4140179   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
4140180   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4140181   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4140182   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
4140183   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4140184   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4140185   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4140186   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4140187   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4140188   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4140189   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4140190   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4140191   +END;
MPRINT(EM_DIAGRAM):   END;
4140192   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4140193   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4140194   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4140195   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4140196   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4140197   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4140198   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4140199   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4140200   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4140201   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4140202   +   H1x1_1  =    -1.49223555176068 * S_AcceptedCmpTotal
4140203   +          +    -0.32281831453238 * S_Age  +     0.28120825505194 * S_Frq
4140204   +          +    -0.39842787806973 * S_Income  +     0.36430856665979 *
4140205   +        S_Kidhome  +    -0.25637228568962 * S_Mnt  +     0.24110438184349 *
4140206   +        S_MntFishProducts  +     0.13701085804118 * S_MntFruits
4140207   +          +     0.11223882829002 * S_MntGoldProds  +     -1.6663458930199 *
4140208   +        S_MntMeatProducts  +      0.0702185455839 * S_MntSweetProducts
4140209   +          +    -0.01371828795287 * S_MntWines  +    -0.15983998015164 *
4140210   +        S_MonthsAsCustomer  +    -0.71296831037224 * S_NumCatalogPurchases
4140211   +          +     0.76573417773216 * S_NumDealsPurchases
4140212   +          +     0.22648400529885 * S_NumDistPurchases
4140213   +          +     1.21720286527592 * S_NumStorePurchases
4140214   +          +     0.60948566229097 * S_NumWebPurchases
4140215   +          +    -2.18126452011089 * S_NumWebVisitsMonth
4140216   +          +     0.32447158734618 * S_RFMstat  +     2.09718739448286 *
4140217   +        S_RMntFrq  +     2.00816730203973 * S_Recency
4140218   +          +     0.71721312404607 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.49223555176068 * S_AcceptedCmpTotal + -0.32281831453238 * 
S_Age + 0.28120825505194 * S_Frq + -0.39842787806973 * S_Income + 0.36430856665979 * S_Kidhome 
+ -0.25637228568962 * S_Mnt + 0.24110438184349 * S_MntFishProducts + 0.13701085804118 * 
S_MntFruits + 0.11223882829002 * S_MntGoldProds + -1.6663458930199 * S_MntMeatProducts + 
0.0702185455839 * S_MntSweetProducts + -0.01371828795287 * S_MntWines + -0.15983998015164 * 
S_MonthsAsCustomer + -0.71296831037224 * S_NumCatalogPurchases + 0.76573417773216 * 
S_NumDealsPurchases + 0.22648400529885 * S_NumDistPurchases + 1.21720286527592 * 
S_NumStorePurchases + 0.60948566229097 * S_NumWebPurchases + -2.18126452011089 * 
S_NumWebVisitsMonth + 0.32447158734618 * S_RFMstat + 2.09718739448286 * S_RMntFrq + 
2.00816730203973 * S_Recency + 0.71721312404607 * S_Teenhome ;
4140219   +   H1x1_2  =    -3.95102659899455 * S_AcceptedCmpTotal
4140220   +          +    -0.08322758955502 * S_Age  +     0.48219484564503 * S_Frq
4140221   +          +    -0.47312016087921 * S_Income  +    -0.28936610485406 *
4140222   +        S_Kidhome  +    -1.88029814405677 * S_Mnt  +     1.82010433926021 *
4140223   +        S_MntFishProducts  +     0.24350362722041 * S_MntFruits
4140224   +          +     -0.0982980353358 * S_MntGoldProds  +     -8.1095841881459 *
4140225   +        S_MntMeatProducts  +    -0.08364558784797 * S_MntSweetProducts
4140226   +          +     2.19205303691707 * S_MntWines  +    -0.00045011863954 *
4140227   +        S_MonthsAsCustomer  +    -1.63167878295586 * S_NumCatalogPurchases
4140228   +          +    -1.52828428070828 * S_NumDealsPurchases
4140229   +          +    -0.01775178145113 * S_NumDistPurchases
4140230   +          +     1.11531198663491 * S_NumStorePurchases
4140231   +          +     1.79501098452904 * S_NumWebPurchases
4140232   +          +     -0.7392686013605 * S_NumWebVisitsMonth
4140233   +          +    -1.44559350209967 * S_RFMstat  +     1.21221378487873 *
4140234   +        S_RMntFrq  +     0.68917175969495 * S_Recency
4140235   +          +      0.3873784466888 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -3.95102659899455 * S_AcceptedCmpTotal + -0.08322758955502 * 
S_Age + 0.48219484564503 * S_Frq + -0.47312016087921 * S_Income + -0.28936610485406 * 
S_Kidhome + -1.88029814405677 * S_Mnt + 1.82010433926021 * S_MntFishProducts + 
0.24350362722041 * S_MntFruits + -0.0982980353358 * S_MntGoldProds + -8.1095841881459 * 
S_MntMeatProducts + -0.08364558784797 * S_MntSweetProducts + 2.19205303691707 * S_MntWines + 
-0.00045011863954 * S_MonthsAsCustomer + -1.63167878295586 * S_NumCatalogPurchases + 
-1.52828428070828 * S_NumDealsPurchases + -0.01775178145113 * S_NumDistPurchases + 
1.11531198663491 * S_NumStorePurchases + 1.79501098452904 * S_NumWebPurchases + 
-0.7392686013605 * S_NumWebVisitsMonth + -1.44559350209967 * S_RFMstat + 1.21221378487873 * 
S_RMntFrq + 0.68917175969495 * S_Recency + 0.3873784466888 * S_Teenhome ;
4140236   +   H1x1_1  = H1x1_1  +    -0.51533233697482 * AcceptedCmp10
4140237   +          +    -0.34752733433815 * AcceptedCmp20  +     0.22125035216356 *
4140238   +        AcceptedCmp30  +     0.05379844837275 * AcceptedCmp40
4140239   +          +    -0.20445562216782 * AcceptedCmp50  +    -0.30276475879877 *
4140240   +        Complain0  +     0.06619165480602 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.51533233697482 * AcceptedCmp10 + -0.34752733433815 
* AcceptedCmp20 + 0.22125035216356 * AcceptedCmp30 + 0.05379844837275 * AcceptedCmp40 + 
-0.20445562216782 * AcceptedCmp50 + -0.30276475879877 * Complain0 + 0.06619165480602 * 
HigherEducationBinary0 ;
4140241   +   H1x1_2  = H1x1_2  +     4.56470093348771 * AcceptedCmp10
4140242   +          +    -2.57910461209778 * AcceptedCmp20  +     -2.5693819769014 *
4140243   +        AcceptedCmp30  +    -1.94278577333227 * AcceptedCmp40
4140244   +          +     2.05860438228037 * AcceptedCmp50  +     0.25089930568051 *
4140245   +        Complain0  +      0.2603214054608 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 4.56470093348771 * AcceptedCmp10 + -2.57910461209778 * 
AcceptedCmp20 + -2.5693819769014 * AcceptedCmp30 + -1.94278577333227 * AcceptedCmp40 + 
2.05860438228037 * AcceptedCmp50 + 0.25089930568051 * Complain0 + 0.2603214054608 * 
HigherEducationBinary0 ;
4140246   +   H1x1_1  = H1x1_1  +    -0.49828378489244 * Education2n_Cycle
4140247   +          +     0.39089624737534 * EducationBasic  +    -0.48226710339977 *
4140248   +        EducationGraduation  +    -0.06304916771632 * EducationMaster
4140249   +          +    -1.56926331102732 * Marital_StatusDivorced
4140250   +          +     2.38562782588323 * Marital_StatusMarried
4140251   +          +    -1.91012008029228 * Marital_StatusSingle
4140252   +          +     2.35299228753934 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.49828378489244 * Education2n_Cycle + 
0.39089624737534 * EducationBasic + -0.48226710339977 * EducationGraduation + 
-0.06304916771632 * EducationMaster + -1.56926331102732 * Marital_StatusDivorced + 
2.38562782588323 * Marital_StatusMarried + -1.91012008029228 * Marital_StatusSingle + 
2.35299228753934 * Marital_StatusTogether ;
4140253   +   H1x1_2  = H1x1_2  +    -0.32482988110182 * Education2n_Cycle
4140254   +          +    -0.31705264382373 * EducationBasic  +    -0.14073222836204 *
4140255   +        EducationGraduation  +    -0.14552128560395 * EducationMaster
4140256   +          +     0.39329538853368 * Marital_StatusDivorced
4140257   +          +       0.055543492668 * Marital_StatusMarried
4140258   +          +    -0.36260663573441 * Marital_StatusSingle
4140259   +          +     0.16563783024817 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.32482988110182 * Education2n_Cycle + 
-0.31705264382373 * EducationBasic + -0.14073222836204 * EducationGraduation + 
-0.14552128560395 * EducationMaster + 0.39329538853368 * Marital_StatusDivorced + 
0.055543492668 * Marital_StatusMarried + -0.36260663573441 * Marital_StatusSingle + 
0.16563783024817 * Marital_StatusTogether ;
4140260   +   H1x1_1  =     0.82901515254061 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.82901515254061 + H1x1_1 ;
4140261   +   H1x1_2  =     -1.6113683532078 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.6113683532078 + H1x1_2 ;
4140262   +   H1x1_3  = 0;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0;
4140263   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
4140264   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4140265   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
4140266   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
4140267   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
4140268   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
4140269   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
4140270   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
4140271   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
4140272   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
4140273   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
4140274   +END;
MPRINT(EM_DIAGRAM):   END;
4140275   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4140276   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4140277   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4140278   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
4140279   +END;
MPRINT(EM_DIAGRAM):   END;
4140280   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4140281   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
4140282   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4140283   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4140284   +   H1x2_1  =     -1.1749963769098 * S_AcceptedCmpTotal
4140285   +          +      0.0835452152484 * S_Age  +     0.29627839234992 * S_Frq
4140286   +          +    -0.11493797334082 * S_Income  +    -1.11510356366657 *
4140287   +        S_Kidhome  +     0.18185063757674 * S_Mnt  +    -0.17631127507692 *
4140288   +        S_MntFishProducts  +     1.24365107847098 * S_MntFruits
4140289   +          +     0.16504711681039 * S_MntGoldProds  +     0.99592906524599 *
4140290   +        S_MntMeatProducts  +     0.07387543627707 * S_MntSweetProducts
4140291   +          +    -0.00693664828192 * S_MntWines  +    -0.14413765189074 *
4140292   +        S_MonthsAsCustomer  +    -0.36632511301344 * S_NumCatalogPurchases
4140293   +          +    -0.41717905931734 * S_NumDealsPurchases
4140294   +          +    -0.48750443671176 * S_NumDistPurchases
4140295   +          +      1.9775770151507 * S_NumStorePurchases
4140296   +          +    -0.43534422425416 * S_NumWebPurchases
4140297   +          +    -1.48049451059329 * S_NumWebVisitsMonth
4140298   +          +     1.55056718888347 * S_RFMstat  +    -1.96774244937803 *
4140299   +        S_RMntFrq  +     -1.0977291490167 * S_Recency
4140300   +          +    -1.73756201871547 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.1749963769098 * S_AcceptedCmpTotal + 0.0835452152484 * S_Age 
+ 0.29627839234992 * S_Frq + -0.11493797334082 * S_Income + -1.11510356366657 * S_Kidhome + 
0.18185063757674 * S_Mnt + -0.17631127507692 * S_MntFishProducts + 1.24365107847098 * 
S_MntFruits + 0.16504711681039 * S_MntGoldProds + 0.99592906524599 * S_MntMeatProducts + 
0.07387543627707 * S_MntSweetProducts + -0.00693664828192 * S_MntWines + -0.14413765189074 * 
S_MonthsAsCustomer + -0.36632511301344 * S_NumCatalogPurchases + -0.41717905931734 * 
S_NumDealsPurchases + -0.48750443671176 * S_NumDistPurchases + 1.9775770151507 * 
S_NumStorePurchases + -0.43534422425416 * S_NumWebPurchases + -1.48049451059329 * 
S_NumWebVisitsMonth + 1.55056718888347 * S_RFMstat + -1.96774244937803 * S_RMntFrq + 
-1.0977291490167 * S_Recency + -1.73756201871547 * S_Teenhome ;
4140301   +   H1x2_2  =     0.87479703138918 * S_AcceptedCmpTotal
4140302   +          +    -0.61917505429247 * S_Age  +     0.18385580137989 * S_Frq
4140303   +          +     0.30709491132909 * S_Income  +      1.6244568354812 *
4140304   +        S_Kidhome  +     0.77673205123801 * S_Mnt  +    -0.00950889578201 *
4140305   +        S_MntFishProducts  +    -0.47007254592819 * S_MntFruits
4140306   +          +      0.6454406759241 * S_MntGoldProds  +     0.78795218230384 *
4140307   +        S_MntMeatProducts  +    -1.18230648640376 * S_MntSweetProducts
4140308   +          +     1.41552316954503 * S_MntWines  +    -0.46565264346633 *
4140309   +        S_MonthsAsCustomer  +     0.48368171409283 * S_NumCatalogPurchases
4140310   +          +     0.76267091632012 * S_NumDealsPurchases
4140311   +          +     1.55118513069849 * S_NumDistPurchases
4140312   +          +       1.649962776028 * S_NumStorePurchases
4140313   +          +    -0.27453335733875 * S_NumWebPurchases
4140314   +          +     0.26599210649756 * S_NumWebVisitsMonth
4140315   +          +     0.00143802909271 * S_RFMstat  +    -0.62161550917558 *
4140316   +        S_RMntFrq  +    -0.60215803586133 * S_Recency
4140317   +          +     0.22509643762583 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.87479703138918 * S_AcceptedCmpTotal + -0.61917505429247 * 
S_Age + 0.18385580137989 * S_Frq + 0.30709491132909 * S_Income + 1.6244568354812 * S_Kidhome + 
0.77673205123801 * S_Mnt + -0.00950889578201 * S_MntFishProducts + -0.47007254592819 * 
S_MntFruits + 0.6454406759241 * S_MntGoldProds + 0.78795218230384 * S_MntMeatProducts + 
-1.18230648640376 * S_MntSweetProducts + 1.41552316954503 * S_MntWines + -0.46565264346633 * 
S_MonthsAsCustomer + 0.48368171409283 * S_NumCatalogPurchases + 0.76267091632012 * 
S_NumDealsPurchases + 1.55118513069849 * S_NumDistPurchases + 1.649962776028 * 
S_NumStorePurchases + -0.27453335733875 * S_NumWebPurchases + 0.26599210649756 * 
S_NumWebVisitsMonth + 0.00143802909271 * S_RFMstat + -0.62161550917558 * S_RMntFrq + 
-0.60215803586133 * S_Recency + 0.22509643762583 * S_Teenhome ;
4140318   +   H1x2_1  = H1x2_1  +    -0.22417594551449 * AcceptedCmp10
4140319   +          +    -0.55200708632393 * AcceptedCmp20  +     1.04226929662396 *
4140320   +        AcceptedCmp30  +    -0.43983724759528 * AcceptedCmp40
4140321   +          +    -0.97319667842772 * AcceptedCmp50  +     2.14592283316473 *
4140322   +        Complain0  +     0.00148996042832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.22417594551449 * AcceptedCmp10 + -0.55200708632393 
* AcceptedCmp20 + 1.04226929662396 * AcceptedCmp30 + -0.43983724759528 * AcceptedCmp40 + 
-0.97319667842772 * AcceptedCmp50 + 2.14592283316473 * Complain0 + 0.00148996042832 * 
HigherEducationBinary0 ;
4140323   +   H1x2_2  = H1x2_2  +     1.02054806337451 * AcceptedCmp10
4140324   +          +      2.0527957252179 * AcceptedCmp20  +     0.15243342547701 *
4140325   +        AcceptedCmp30  +    -2.55108921567655 * AcceptedCmp40
4140326   +          +    -0.66084381908537 * AcceptedCmp50  +    -0.15574677370344 *
4140327   +        Complain0  +    -0.89833811964409 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.02054806337451 * AcceptedCmp10 + 2.0527957252179 * 
AcceptedCmp20 + 0.15243342547701 * AcceptedCmp30 + -2.55108921567655 * AcceptedCmp40 + 
-0.66084381908537 * AcceptedCmp50 + -0.15574677370344 * Complain0 + -0.89833811964409 * 
HigherEducationBinary0 ;
4140328   +   H1x2_1  = H1x2_1  +     0.47883438771897 * Education2n_Cycle
4140329   +          +     1.28689916550347 * EducationBasic  +    -1.05405263417007 *
4140330   +        EducationGraduation  +     0.24617525366101 * EducationMaster
4140331   +          +    -1.84502099308633 * Marital_StatusDivorced
4140332   +          +     0.16524535969204 * Marital_StatusMarried
4140333   +          +     0.01375012857393 * Marital_StatusSingle
4140334   +          +     0.33752759564982 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.47883438771897 * Education2n_Cycle + 
1.28689916550347 * EducationBasic + -1.05405263417007 * EducationGraduation + 0.24617525366101 
* EducationMaster + -1.84502099308633 * Marital_StatusDivorced + 0.16524535969204 * 
Marital_StatusMarried + 0.01375012857393 * Marital_StatusSingle + 0.33752759564982 * 
Marital_StatusTogether ;
4140335   +   H1x2_2  = H1x2_2  +     -0.4088130246632 * Education2n_Cycle
4140336   +          +    -0.51383473075458 * EducationBasic  +     0.81399641406825 *
4140337   +        EducationGraduation  +      0.6427794380992 * EducationMaster
4140338   +          +     0.18210930140238 * Marital_StatusDivorced
4140339   +          +    -1.49615662968181 * Marital_StatusMarried
4140340   +          +     1.61043484549536 * Marital_StatusSingle
4140341   +          +    -1.22593755313209 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.4088130246632 * Education2n_Cycle + 
-0.51383473075458 * EducationBasic + 0.81399641406825 * EducationGraduation + 0.6427794380992 
* EducationMaster + 0.18210930140238 * Marital_StatusDivorced + -1.49615662968181 * 
Marital_StatusMarried + 1.61043484549536 * Marital_StatusSingle + -1.22593755313209 * 
Marital_StatusTogether ;
4140342   +   H1x2_1  =    -1.87516498734281 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.87516498734281 + H1x2_1 ;
4140343   +   H1x2_2  =     -1.2865444436051 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.2865444436051 + H1x2_2 ;
4140344   +   H1x2_3  = 0;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0;
4140345   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 );
4140346   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4140347   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
4140348   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
4140349   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
4140350   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
4140351   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
4140352   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
4140353   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
4140354   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
4140355   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
4140356   +END;
MPRINT(EM_DIAGRAM):   END;
4140357   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4140358   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
4140359   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
4140360   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
4140361   +END;
MPRINT(EM_DIAGRAM):   END;
4140362   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4140363   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
4140364   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4140365   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4140366   +   H2x1_1  =     1.23576217175305 * H1x1_1  +     4.19315123860009 * H1x1_2
4140367   +          +    -3.85498900364115 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.23576217175305 * H1x1_1 + 4.19315123860009 * H1x1_2 + 
-3.85498900364115 * H1x1_3 ;
4140368   +   H2x1_2  =        0.24209158888 * H1x1_1  +     0.59735252655183 * H1x1_2
4140369   +          +     1.27545750114528 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0.24209158888 * H1x1_1 + 0.59735252655183 * H1x1_2 + 
1.27545750114528 * H1x1_3 ;
4140370   +   H2x1_3  =     1.36411346566831 * H1x1_1  +     4.19709046572946 * H1x1_2
4140371   +          +    -4.50940237896172 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.36411346566831 * H1x1_1 + 4.19709046572946 * H1x1_2 + 
-4.50940237896172 * H1x1_3 ;
4140372   +   H2x1_1  = H2x1_1  +     0.65417285199474 * H1x2_1
4140373   +          +      2.5072311354855 * H1x2_2  +     -2.0438449895367 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.65417285199474 * H1x2_1 + 2.5072311354855 * H1x2_2 + 
-2.0438449895367 * H1x2_3 ;
4140374   +   H2x1_2  = H2x1_2  +      0.4352357645315 * H1x2_1
4140375   +          +     -0.9643467516424 * H1x2_2  +     0.46452403975724 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.4352357645315 * H1x2_1 + -0.9643467516424 * H1x2_2 + 
0.46452403975724 * H1x2_3 ;
4140376   +   H2x1_3  = H2x1_3  +     0.13671643242806 * H1x2_1
4140377   +          +     1.59797252596846 * H1x2_2  +    -2.67821815632058 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.13671643242806 * H1x2_1 + 1.59797252596846 * H1x2_2 
+ -2.67821815632058 * H1x2_3 ;
4140378   +   H2x1_1  =     0.15805888658617 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.15805888658617 + H2x1_1 ;
4140379   +   H2x1_2  =     1.42566993600015 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.42566993600015 + H2x1_2 ;
4140380   +   H2x1_3  =     1.00076706282181 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.00076706282181 + H2x1_3 ;
4140381   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4140382   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4140383   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
4140384   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
4140385   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
4140386   +END;
MPRINT(EM_DIAGRAM):   END;
4140387   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4140388   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
4140389   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
4140390   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
4140391   +END;
MPRINT(EM_DIAGRAM):   END;
4140392   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4140393   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4140394   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4140395   +
4140396   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
4140397   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
4140398   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4140399   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
4140400   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
4140401   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4140402   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
4140403   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4140404   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4140405   +end;
MPRINT(EM_DIAGRAM):   end;
4140406   +else do;
MPRINT(EM_DIAGRAM):   else do;
4140407   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
4140408   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
4140409   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
4140410   +   end;
MPRINT(EM_DIAGRAM):   end;
4140411   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
4140412   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
4140413   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
4140414   +   end;
MPRINT(EM_DIAGRAM):   end;
4140415   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4140416   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4140417   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4140418   +   end;
MPRINT(EM_DIAGRAM):   end;
4140419   +end;
MPRINT(EM_DIAGRAM):   end;
4140420   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4140421   +   P_DepVar1  =    -6.91101516234847 * H2x1_1  +     1.76281132920385 * H2x1_2
4140422   +          +     -7.2624751055034 * H2x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.91101516234847 * H2x1_1 + 1.76281132920385 * H2x1_2 + 
-7.2624751055034 * H2x1_3 ;
4140423   +   P_DepVar1  =     -0.0724356806648 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.0724356806648 + P_DepVar1 ;
4140424   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4140425   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4140426   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4140427   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4140428   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4140429   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4140430   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4140431   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4140432   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4140433   +END;
MPRINT(EM_DIAGRAM):   END;
4140434   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4140435   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4140436   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4140437   +END;
MPRINT(EM_DIAGRAM):   END;
4140438   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4140439   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4140440   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4140441   +END;
MPRINT(EM_DIAGRAM):   END;
4140442   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
4140443   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
4140444   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
4140445   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
4140446   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
4140447   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
4140448   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
4140449   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4140450   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4140451   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4140452   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4140453   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4140454   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4140455   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4140456   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4140457   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4140458   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4140459   +END;
MPRINT(EM_DIAGRAM):   END;
4140460   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4140461   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4140462   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4140463   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
4140464   +* Renaming variables for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural8;
4140465   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4140466   +* Renaming Posterior variables for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural8;
4140467   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4140468   +drop AutoNeural8_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_P_DepVar1;
4140469   +AutoNeural8_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural8_P_DepVar1 = P_DepVar1;
4140470   +drop AutoNeural8_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_P_DepVar0;
4140471   +AutoNeural8_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural8_P_DepVar0 = P_DepVar0;
4140472   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4140473   +* Renaming Into variables for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural8;
4140474   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4140475   +length AutoNeural8_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural8_I_DepVar $32;
4140476   +drop AutoNeural8_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_I_DepVar;
4140477   +AutoNeural8_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural8_I_DepVar = I_DepVar;
4140478   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4140479   +* Renaming _WARN_ variable for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural8;
4140480   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4140481   +length AutoNeural8_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural8_WARN_ $4;
4140482   +drop AutoNeural8_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_WARN_;
4140483   +AutoNeural8_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural8_WARN_ = _WARN_;
4140484   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4140485   +* Ensmbl38: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Scoring Code of model 4 of 7;
4140486   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4140487   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4140488   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
4140489   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
4140490   +* NODE: AutoNeural10;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural10;
4140491   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4140492   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4140493   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4140494   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4140495   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4140496   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4140497   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4140498   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4140499   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4140500   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4140501   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4140502   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4140503   +LENGTH _WARN_ $4
4140504   +      F_DepVar  $ 12
4140505   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
4140506   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4140507   +
4140508   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4140509   +
4140510   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4140511   +
4140512   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4140513   +
4140514   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4140515   +
4140516   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4140517   +
4140518   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4140519   +
4140520   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4140521   +
4140522   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4140523   +
4140524   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4140525   +
4140526   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4140527   +
4140528   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4140529   +
4140530   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4140531   +
4140532   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4140533   +
4140534   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4140535   +
4140536   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4140537   +
4140538   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4140539   +
4140540   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4140541   +
4140542   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4140543   +
4140544   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4140545   +
4140546   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4140547   +
4140548   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4140549   +
4140550   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4140551   +
4140552   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4140553   +
4140554   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4140555   +
4140556   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4140557   +
4140558   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4140559   +
4140560   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4140561   +
4140562   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4140563   +
4140564   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4140565   +
4140566   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4140567   +
4140568   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4140569   +
4140570   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4140571   +
4140572   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4140573   +
4140574   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4140575   +
4140576   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4140577   +
4140578   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4140579   +
4140580   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4140581   +
4140582   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4140583   +
4140584   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4140585   +
4140586   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
4140587   +
4140588   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
4140589   +
4140590   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
4140591   +
4140592   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
4140593   +
4140594   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
4140595   +
4140596   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
4140597   +
4140598   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
4140599   +
4140600   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
4140601   +
4140602   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
4140603   +
4140604   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
4140605   +
4140606   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
4140607   +
4140608   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
4140609   +
4140610   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
4140611   +
4140612   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
4140613   +
4140614   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
4140615   +
4140616   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
4140617   +
4140618   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
4140619   +
4140620   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
4140621   +
4140622   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
4140623   +
4140624   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
4140625   +
4140626   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
4140627   +
4140628   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
4140629   +
4140630   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
4140631   +
4140632   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
4140633   +
4140634   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
4140635   +
4140636   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
4140637   +
4140638   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
4140639   +
4140640   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
4140641   +
4140642   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4140643   +
4140644   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4140645   +
4140646   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4140647   +
4140648   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4140649   +
4140650   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
4140651   +
4140652   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4140653   +
4140654   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
4140655   +
4140656   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4140657   +
4140658   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4140659   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4140660   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4140661   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4140662   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4140663   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4140664   +end;
MPRINT(EM_DIAGRAM):   end;
4140665   +else do;
MPRINT(EM_DIAGRAM):   else do;
4140666   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4140667   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4140668   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4140669   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4140670   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4140671   +   end;
MPRINT(EM_DIAGRAM):   end;
4140672   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4140673   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4140674   +   end;
MPRINT(EM_DIAGRAM):   end;
4140675   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4140676   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4140677   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4140678   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4140679   +   end;
MPRINT(EM_DIAGRAM):   end;
4140680   +end;
MPRINT(EM_DIAGRAM):   end;
4140681   +
4140682   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4140683   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4140684   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4140685   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4140686   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4140687   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4140688   +end;
MPRINT(EM_DIAGRAM):   end;
4140689   +else do;
MPRINT(EM_DIAGRAM):   else do;
4140690   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4140691   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4140692   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4140693   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4140694   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4140695   +   end;
MPRINT(EM_DIAGRAM):   end;
4140696   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4140697   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4140698   +   end;
MPRINT(EM_DIAGRAM):   end;
4140699   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4140700   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4140701   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4140702   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4140703   +   end;
MPRINT(EM_DIAGRAM):   end;
4140704   +end;
MPRINT(EM_DIAGRAM):   end;
4140705   +
4140706   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4140707   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4140708   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4140709   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4140710   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4140711   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4140712   +end;
MPRINT(EM_DIAGRAM):   end;
4140713   +else do;
MPRINT(EM_DIAGRAM):   else do;
4140714   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4140715   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4140716   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4140717   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4140718   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4140719   +   end;
MPRINT(EM_DIAGRAM):   end;
4140720   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4140721   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4140722   +   end;
MPRINT(EM_DIAGRAM):   end;
4140723   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4140724   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4140725   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4140726   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4140727   +   end;
MPRINT(EM_DIAGRAM):   end;
4140728   +end;
MPRINT(EM_DIAGRAM):   end;
4140729   +
4140730   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4140731   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4140732   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4140733   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4140734   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4140735   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4140736   +end;
MPRINT(EM_DIAGRAM):   end;
4140737   +else do;
MPRINT(EM_DIAGRAM):   else do;
4140738   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4140739   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4140740   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4140741   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4140742   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4140743   +   end;
MPRINT(EM_DIAGRAM):   end;
4140744   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4140745   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4140746   +   end;
MPRINT(EM_DIAGRAM):   end;
4140747   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4140748   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4140749   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4140750   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4140751   +   end;
MPRINT(EM_DIAGRAM):   end;
4140752   +end;
MPRINT(EM_DIAGRAM):   end;
4140753   +
4140754   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4140755   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4140756   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4140757   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4140758   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4140759   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4140760   +end;
MPRINT(EM_DIAGRAM):   end;
4140761   +else do;
MPRINT(EM_DIAGRAM):   else do;
4140762   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4140763   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4140764   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4140765   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4140766   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4140767   +   end;
MPRINT(EM_DIAGRAM):   end;
4140768   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4140769   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4140770   +   end;
MPRINT(EM_DIAGRAM):   end;
4140771   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4140772   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4140773   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4140774   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4140775   +   end;
MPRINT(EM_DIAGRAM):   end;
4140776   +end;
MPRINT(EM_DIAGRAM):   end;
4140777   +
4140778   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4140779   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4140780   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4140781   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4140782   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4140783   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4140784   +end;
MPRINT(EM_DIAGRAM):   end;
4140785   +else do;
MPRINT(EM_DIAGRAM):   else do;
4140786   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4140787   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4140788   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4140789   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4140790   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4140791   +   end;
MPRINT(EM_DIAGRAM):   end;
4140792   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4140793   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4140794   +   end;
MPRINT(EM_DIAGRAM):   end;
4140795   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4140796   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4140797   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4140798   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4140799   +   end;
MPRINT(EM_DIAGRAM):   end;
4140800   +end;
MPRINT(EM_DIAGRAM):   end;
4140801   +
4140802   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4140803   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4140804   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4140805   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4140806   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4140807   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4140808   +end;
MPRINT(EM_DIAGRAM):   end;
4140809   +else do;
MPRINT(EM_DIAGRAM):   else do;
4140810   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4140811   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4140812   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4140813   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4140814   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4140815   +   end;
MPRINT(EM_DIAGRAM):   end;
4140816   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4140817   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4140818   +   end;
MPRINT(EM_DIAGRAM):   end;
4140819   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4140820   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4140821   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4140822   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4140823   +   end;
MPRINT(EM_DIAGRAM):   end;
4140824   +end;
MPRINT(EM_DIAGRAM):   end;
4140825   +
4140826   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4140827   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
4140828   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4140829   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4140830   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4140831   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4140832   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4140833   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4140834   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4140835   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4140836   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4140837   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4140838   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4140839   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4140840   +end;
MPRINT(EM_DIAGRAM):   end;
4140841   +else do;
MPRINT(EM_DIAGRAM):   else do;
4140842   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4140843   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4140844   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4140845   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4140846   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4140847   +   end;
MPRINT(EM_DIAGRAM):   end;
4140848   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4140849   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4140850   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4140851   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4140852   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4140853   +   end;
MPRINT(EM_DIAGRAM):   end;
4140854   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4140855   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4140856   +   end;
MPRINT(EM_DIAGRAM):   end;
4140857   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4140858   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4140859   +   end;
MPRINT(EM_DIAGRAM):   end;
4140860   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4140861   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4140862   +   end;
MPRINT(EM_DIAGRAM):   end;
4140863   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4140864   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4140865   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4140866   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4140867   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4140868   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4140869   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4140870   +   end;
MPRINT(EM_DIAGRAM):   end;
4140871   +end;
MPRINT(EM_DIAGRAM):   end;
4140872   +
4140873   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4140874   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4140875   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
4140876   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4140877   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4140878   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4140879   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4140880   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4140881   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4140882   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4140883   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4140884   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4140885   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4140886   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4140887   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4140888   +end;
MPRINT(EM_DIAGRAM):   end;
4140889   +else do;
MPRINT(EM_DIAGRAM):   else do;
4140890   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4140891   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4140892   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4140893   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4140894   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4140895   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4140896   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4140897   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4140898   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4140899   +         end;
MPRINT(EM_DIAGRAM):   end;
4140900   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4140901   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4140902   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4140903   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4140904   +            end;
MPRINT(EM_DIAGRAM):   end;
4140905   +         end;
MPRINT(EM_DIAGRAM):   end;
4140906   +      end;
MPRINT(EM_DIAGRAM):   end;
4140907   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4140908   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4140909   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4140910   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4140911   +         end;
MPRINT(EM_DIAGRAM):   end;
4140912   +      end;
MPRINT(EM_DIAGRAM):   end;
4140913   +   end;
MPRINT(EM_DIAGRAM):   end;
4140914   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4140915   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4140916   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4140917   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4140918   +      end;
MPRINT(EM_DIAGRAM):   end;
4140919   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4140920   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4140921   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4140922   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4140923   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4140924   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4140925   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4140926   +         end;
MPRINT(EM_DIAGRAM):   end;
4140927   +      end;
MPRINT(EM_DIAGRAM):   end;
4140928   +   end;
MPRINT(EM_DIAGRAM):   end;
4140929   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4140930   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4140931   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4140932   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4140933   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4140934   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4140935   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4140936   +   end;
MPRINT(EM_DIAGRAM):   end;
4140937   +end;
MPRINT(EM_DIAGRAM):   end;
4140938   +
4140939   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4140940   +*** Checking missing input Interval
4140941   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4140942   +
4140943   +IF NMISS(
4140944   +   AcceptedCmpTotal ,
4140945   +   Age ,
4140946   +   Frq ,
4140947   +   Income ,
4140948   +   Kidhome ,
4140949   +   Mnt ,
4140950   +   MntFishProducts ,
4140951   +   MntFruits ,
4140952   +   MntGoldProds ,
4140953   +   MntMeatProducts ,
4140954   +   MntSweetProducts ,
4140955   +   MntWines ,
4140956   +   MonthsAsCustomer ,
4140957   +   NumCatalogPurchases ,
4140958   +   NumDealsPurchases ,
4140959   +   NumDistPurchases ,
4140960   +   NumStorePurchases ,
4140961   +   NumWebPurchases ,
4140962   +   NumWebVisitsMonth ,
4140963   +   RFMstat ,
4140964   +   RMntFrq ,
4140965   +   Recency ,
4140966   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
4140967   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4140968   +
4140969   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4140970   +END;
MPRINT(EM_DIAGRAM):   END;
4140971   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4140972   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4140973   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4140974   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4140975   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4140976   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
4140977   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4140978   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4140979   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4140980   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4140981   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4140982   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4140983   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
4140984   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4140985   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4140986   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4140987   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4140988   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
4140989   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4140990   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
4140991   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4140992   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4140993   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
4140994   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4140995   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
4140996   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4140997   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
4140998   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4140999   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
4141000   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4141001   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
4141002   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4141003   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
4141004   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4141005   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
4141006   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4141007   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4141008   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4141009   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4141010   +END;
MPRINT(EM_DIAGRAM):   END;
4141011   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4141012   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4141013   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4141014   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
4141015   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4141016   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4141017   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4141018   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4141019   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4141020   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4141021   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4141022   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4141023   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4141024   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4141025   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4141026   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4141027   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
4141028   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4141029   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4141030   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4141031   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4141032   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4141033   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
4141034   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4141035   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4141036   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
4141037   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4141038   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4141039   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
4141040   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4141041   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4141042   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4141043   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4141044   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
4141045   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4141046   +   ELSE S_NumCatalogPurchases
4141047   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4141048   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
4141049   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4141050   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4141051   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
4141052   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4141053   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4141054   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
4141055   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4141056   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4141057   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
4141058   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4141059   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4141060   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
4141061   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4141062   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4141063   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
4141064   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4141065   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4141066   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4141067   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4141068   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4141069   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4141070   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4141071   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4141072   +END;
MPRINT(EM_DIAGRAM):   END;
4141073   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4141074   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4141075   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4141076   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4141077   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4141078   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4141079   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4141080   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4141081   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4141082   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4141083   +   H1x1_1  =     -1.6780441789215 * S_AcceptedCmpTotal
4141084   +          +     0.45385980917029 * S_Age  +    -0.71899650455913 * S_Frq
4141085   +          +    -1.93679506571805 * S_Income  +     1.56925991391051 *
4141086   +        S_Kidhome  +    -1.47175189232318 * S_Mnt  +    -2.23220260217222 *
4141087   +        S_MntFishProducts  +    -0.27017202076253 * S_MntFruits
4141088   +          +    -0.33562096740259 * S_MntGoldProds  +     3.61472960640287 *
4141089   +        S_MntMeatProducts  +    -2.85576251647297 * S_MntSweetProducts
4141090   +          +     -4.4467685903527 * S_MntWines  +     0.38963757858628 *
4141091   +        S_MonthsAsCustomer  +     1.66666181194027 * S_NumCatalogPurchases
4141092   +          +     3.45371614080196 * S_NumDealsPurchases
4141093   +          +     0.19118374544537 * S_NumDistPurchases
4141094   +          +    -2.45138001446793 * S_NumStorePurchases
4141095   +          +    -0.11424280244155 * S_NumWebPurchases
4141096   +          +    -2.31770357716565 * S_NumWebVisitsMonth
4141097   +          +     2.81643889601936 * S_RFMstat  +    -1.04896006701534 *
4141098   +        S_RMntFrq  +     0.26870809438679 * S_Recency
4141099   +          +    -0.26422448158811 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.6780441789215 * S_AcceptedCmpTotal + 0.45385980917029 * 
S_Age + -0.71899650455913 * S_Frq + -1.93679506571805 * S_Income + 1.56925991391051 * 
S_Kidhome + -1.47175189232318 * S_Mnt + -2.23220260217222 * S_MntFishProducts + 
-0.27017202076253 * S_MntFruits + -0.33562096740259 * S_MntGoldProds + 3.61472960640287 * 
S_MntMeatProducts + -2.85576251647297 * S_MntSweetProducts + -4.4467685903527 * S_MntWines + 
0.38963757858628 * S_MonthsAsCustomer + 1.66666181194027 * S_NumCatalogPurchases + 
3.45371614080196 * S_NumDealsPurchases + 0.19118374544537 * S_NumDistPurchases + 
-2.45138001446793 * S_NumStorePurchases + -0.11424280244155 * S_NumWebPurchases + 
-2.31770357716565 * S_NumWebVisitsMonth + 2.81643889601936 * S_RFMstat + -1.04896006701534 * 
S_RMntFrq + 0.26870809438679 * S_Recency + -0.26422448158811 * S_Teenhome ;
4141100   +   H1x1_2  =    -0.85648293000641 * S_AcceptedCmpTotal
4141101   +          +    -1.65647402725291 * S_Age  +     1.01151947076788 * S_Frq
4141102   +          +    -2.30217634682957 * S_Income  +     3.64198249916211 *
4141103   +        S_Kidhome  +     0.20767518788666 * S_Mnt  +     0.16841756532554 *
4141104   +        S_MntFishProducts  +      -1.068506425921 * S_MntFruits
4141105   +          +     0.58318801939162 * S_MntGoldProds  +    -2.31777049056548 *
4141106   +        S_MntMeatProducts  +     0.23759430399811 * S_MntSweetProducts
4141107   +          +      1.6840332285232 * S_MntWines  +     1.02971381781013 *
4141108   +        S_MonthsAsCustomer  +    -0.67962580165124 * S_NumCatalogPurchases
4141109   +          +    -1.28390925647659 * S_NumDealsPurchases
4141110   +          +     0.82669177239926 * S_NumDistPurchases
4141111   +          +     1.71678585204511 * S_NumStorePurchases
4141112   +          +     1.49226295608046 * S_NumWebPurchases
4141113   +          +     -4.0105103018388 * S_NumWebVisitsMonth
4141114   +          +     0.59909792991084 * S_RFMstat  +     1.07820515361554 *
4141115   +        S_RMntFrq  +     4.74241121363086 * S_Recency
4141116   +          +     3.02084642655958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.85648293000641 * S_AcceptedCmpTotal + -1.65647402725291 * 
S_Age + 1.01151947076788 * S_Frq + -2.30217634682957 * S_Income + 3.64198249916211 * S_Kidhome 
+ 0.20767518788666 * S_Mnt + 0.16841756532554 * S_MntFishProducts + -1.068506425921 * 
S_MntFruits + 0.58318801939162 * S_MntGoldProds + -2.31777049056548 * S_MntMeatProducts + 
0.23759430399811 * S_MntSweetProducts + 1.6840332285232 * S_MntWines + 1.02971381781013 * 
S_MonthsAsCustomer + -0.67962580165124 * S_NumCatalogPurchases + -1.28390925647659 * 
S_NumDealsPurchases + 0.82669177239926 * S_NumDistPurchases + 1.71678585204511 * 
S_NumStorePurchases + 1.49226295608046 * S_NumWebPurchases + -4.0105103018388 * 
S_NumWebVisitsMonth + 0.59909792991084 * S_RFMstat + 1.07820515361554 * S_RMntFrq + 
4.74241121363086 * S_Recency + 3.02084642655958 * S_Teenhome ;
4141117   +   H1x1_3  =    -2.68802949086986 * S_AcceptedCmpTotal
4141118   +          +     0.32408799976195 * S_Age  +     0.22616656573012 * S_Frq
4141119   +          +     -0.4811040196236 * S_Income  +     0.01554228937278 *
4141120   +        S_Kidhome  +    -0.00131538598753 * S_Mnt  +     1.89942488016409 *
4141121   +        S_MntFishProducts  +     0.56303548397494 * S_MntFruits
4141122   +          +    -0.15594598286956 * S_MntGoldProds  +    -7.89542322794989 *
4141123   +        S_MntMeatProducts  +    -0.27122492647076 * S_MntSweetProducts
4141124   +          +     4.85572438492582 * S_MntWines  +     0.12362243863555 *
4141125   +        S_MonthsAsCustomer  +    -1.47960473675934 * S_NumCatalogPurchases
4141126   +          +     0.22958626391725 * S_NumDealsPurchases
4141127   +          +    -0.02046515813996 * S_NumDistPurchases
4141128   +          +      0.8618502050837 * S_NumStorePurchases
4141129   +          +     1.45175370326009 * S_NumWebPurchases
4141130   +          +    -0.86122442436156 * S_NumWebVisitsMonth
4141131   +          +    -0.99643351802143 * S_RFMstat  +    -1.65762265567389 *
4141132   +        S_RMntFrq  +    -0.08202178452839 * S_Recency
4141133   +          +    -0.62066116666102 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.68802949086986 * S_AcceptedCmpTotal + 0.32408799976195 * 
S_Age + 0.22616656573012 * S_Frq + -0.4811040196236 * S_Income + 0.01554228937278 * S_Kidhome 
+ -0.00131538598753 * S_Mnt + 1.89942488016409 * S_MntFishProducts + 0.56303548397494 * 
S_MntFruits + -0.15594598286956 * S_MntGoldProds + -7.89542322794989 * S_MntMeatProducts + 
-0.27122492647076 * S_MntSweetProducts + 4.85572438492582 * S_MntWines + 0.12362243863555 * 
S_MonthsAsCustomer + -1.47960473675934 * S_NumCatalogPurchases + 0.22958626391725 * 
S_NumDealsPurchases + -0.02046515813996 * S_NumDistPurchases + 0.8618502050837 * 
S_NumStorePurchases + 1.45175370326009 * S_NumWebPurchases + -0.86122442436156 * 
S_NumWebVisitsMonth + -0.99643351802143 * S_RFMstat + -1.65762265567389 * S_RMntFrq + 
-0.08202178452839 * S_Recency + -0.62066116666102 * S_Teenhome ;
4141134   +   H1x1_4  =     0.45192233004895 * S_AcceptedCmpTotal
4141135   +          +    -0.94676544762121 * S_Age  +     0.73809341266988 * S_Frq
4141136   +          +     0.72277799278136 * S_Income  +    -0.12970804152173 *
4141137   +        S_Kidhome  +     0.01052564540044 * S_Mnt  +    -0.48321452967118 *
4141138   +        S_MntFishProducts  +    -0.41471448831942 * S_MntFruits
4141139   +          +     0.04381334765674 * S_MntGoldProds  +     0.92594151100538 *
4141140   +        S_MntMeatProducts  +     0.29845970530397 * S_MntSweetProducts
4141141   +          +    -0.71535779454556 * S_MntWines  +     0.00059837351168 *
4141142   +        S_MonthsAsCustomer  +     2.23353511013288 * S_NumCatalogPurchases
4141143   +          +     1.25310034610344 * S_NumDealsPurchases
4141144   +          +     0.92141098602176 * S_NumDistPurchases
4141145   +          +    -0.08806509391473 * S_NumStorePurchases
4141146   +          +     -1.0533787624668 * S_NumWebPurchases
4141147   +          +     3.07050739830585 * S_NumWebVisitsMonth
4141148   +          +    -0.05671059637078 * S_RFMstat  +     1.73621676609839 *
4141149   +        S_RMntFrq  +     -3.8741602707981 * S_Recency
4141150   +          +    -2.06796290973426 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.45192233004895 * S_AcceptedCmpTotal + -0.94676544762121 * 
S_Age + 0.73809341266988 * S_Frq + 0.72277799278136 * S_Income + -0.12970804152173 * S_Kidhome 
+ 0.01052564540044 * S_Mnt + -0.48321452967118 * S_MntFishProducts + -0.41471448831942 * 
S_MntFruits + 0.04381334765674 * S_MntGoldProds + 0.92594151100538 * S_MntMeatProducts + 
0.29845970530397 * S_MntSweetProducts + -0.71535779454556 * S_MntWines + 0.00059837351168 * 
S_MonthsAsCustomer + 2.23353511013288 * S_NumCatalogPurchases + 1.25310034610344 * 
S_NumDealsPurchases + 0.92141098602176 * S_NumDistPurchases + -0.08806509391473 * 
S_NumStorePurchases + -1.0533787624668 * S_NumWebPurchases + 3.07050739830585 * 
S_NumWebVisitsMonth + -0.05671059637078 * S_RFMstat + 1.73621676609839 * S_RMntFrq + 
-3.8741602707981 * S_Recency + -2.06796290973426 * S_Teenhome ;
4141151   +   H1x1_5  =    -1.36121985595495 * S_AcceptedCmpTotal
4141152   +          +     0.05422070059006 * S_Age  +     0.27495083329116 * S_Frq
4141153   +          +     -0.9677209394449 * S_Income  +    -1.13619168708067 *
4141154   +        S_Kidhome  +     0.62918569209141 * S_Mnt  +     0.37160756976122 *
4141155   +        S_MntFishProducts  +     0.88680401337821 * S_MntFruits
4141156   +          +    -0.36100921959604 * S_MntGoldProds  +    -0.35574990334834 *
4141157   +        S_MntMeatProducts  +     0.82389188555236 * S_MntSweetProducts
4141158   +          +     1.43496434553922 * S_MntWines  +    -1.46335376005851 *
4141159   +        S_MonthsAsCustomer  +    -1.84942841156411 * S_NumCatalogPurchases
4141160   +          +    -1.68259553608287 * S_NumDealsPurchases
4141161   +          +    -0.53835572290445 * S_NumDistPurchases
4141162   +          +     1.25833922835446 * S_NumStorePurchases
4141163   +          +     0.48300830623998 * S_NumWebPurchases
4141164   +          +    -2.20119275236582 * S_NumWebVisitsMonth
4141165   +          +     -0.2397284702987 * S_RFMstat  +    -0.71924218175088 *
4141166   +        S_RMntFrq  +     0.35692712879409 * S_Recency
4141167   +          +     0.77122286526706 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.36121985595495 * S_AcceptedCmpTotal + 0.05422070059006 * 
S_Age + 0.27495083329116 * S_Frq + -0.9677209394449 * S_Income + -1.13619168708067 * S_Kidhome 
+ 0.62918569209141 * S_Mnt + 0.37160756976122 * S_MntFishProducts + 0.88680401337821 * 
S_MntFruits + -0.36100921959604 * S_MntGoldProds + -0.35574990334834 * S_MntMeatProducts + 
0.82389188555236 * S_MntSweetProducts + 1.43496434553922 * S_MntWines + -1.46335376005851 * 
S_MonthsAsCustomer + -1.84942841156411 * S_NumCatalogPurchases + -1.68259553608287 * 
S_NumDealsPurchases + -0.53835572290445 * S_NumDistPurchases + 1.25833922835446 * 
S_NumStorePurchases + 0.48300830623998 * S_NumWebPurchases + -2.20119275236582 * 
S_NumWebVisitsMonth + -0.2397284702987 * S_RFMstat + -0.71924218175088 * S_RMntFrq + 
0.35692712879409 * S_Recency + 0.77122286526706 * S_Teenhome ;
4141168   +   H1x1_1  = H1x1_1  +     0.07301304241545 * AcceptedCmp10
4141169   +          +    -1.95730125129608 * AcceptedCmp20  +    -1.38342161079442 *
4141170   +        AcceptedCmp30  +    -1.49080889719345 * AcceptedCmp40
4141171   +          +    -1.07381857035964 * AcceptedCmp50  +    -1.39161532835475 *
4141172   +        Complain0  +    -0.48833832833721 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.07301304241545 * AcceptedCmp10 + -1.95730125129608 * 
AcceptedCmp20 + -1.38342161079442 * AcceptedCmp30 + -1.49080889719345 * AcceptedCmp40 + 
-1.07381857035964 * AcceptedCmp50 + -1.39161532835475 * Complain0 + -0.48833832833721 * 
HigherEducationBinary0 ;
4141173   +   H1x1_2  = H1x1_2  +     0.38934062747222 * AcceptedCmp10
4141174   +          +    -0.32259780417284 * AcceptedCmp20  +     0.51602852076334 *
4141175   +        AcceptedCmp30  +    -0.70838948180655 * AcceptedCmp40
4141176   +          +     1.29066052659113 * AcceptedCmp50  +      0.1004848714971 *
4141177   +        Complain0  +    -0.73386392383925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.38934062747222 * AcceptedCmp10 + -0.32259780417284 * 
AcceptedCmp20 + 0.51602852076334 * AcceptedCmp30 + -0.70838948180655 * AcceptedCmp40 + 
1.29066052659113 * AcceptedCmp50 + 0.1004848714971 * Complain0 + -0.73386392383925 * 
HigherEducationBinary0 ;
4141178   +   H1x1_3  = H1x1_3  +     0.34219997086576 * AcceptedCmp10
4141179   +          +    -0.12311182470953 * AcceptedCmp20  +     -2.0600710888874 *
4141180   +        AcceptedCmp30  +      -1.904294485826 * AcceptedCmp40
4141181   +          +     3.36424449872952 * AcceptedCmp50  +    -0.25078238709812 *
4141182   +        Complain0  +    -0.08077684854733 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.34219997086576 * AcceptedCmp10 + -0.12311182470953 * 
AcceptedCmp20 + -2.0600710888874 * AcceptedCmp30 + -1.904294485826 * AcceptedCmp40 + 
3.36424449872952 * AcceptedCmp50 + -0.25078238709812 * Complain0 + -0.08077684854733 * 
HigherEducationBinary0 ;
4141183   +   H1x1_4  = H1x1_4  +    -1.12501407155309 * AcceptedCmp10
4141184   +          +    -1.58866249671355 * AcceptedCmp20  +    -1.72881548820716 *
4141185   +        AcceptedCmp30  +      -2.214698125839 * AcceptedCmp40
4141186   +          +    -0.62635613939269 * AcceptedCmp50  +      0.0150779868394 *
4141187   +        Complain0  +     1.03338023365724 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.12501407155309 * AcceptedCmp10 + -1.58866249671355 
* AcceptedCmp20 + -1.72881548820716 * AcceptedCmp30 + -2.214698125839 * AcceptedCmp40 + 
-0.62635613939269 * AcceptedCmp50 + 0.0150779868394 * Complain0 + 1.03338023365724 * 
HigherEducationBinary0 ;
4141188   +   H1x1_5  = H1x1_5  +    -0.26508589111781 * AcceptedCmp10
4141189   +          +    -0.40912292690255 * AcceptedCmp20  +     0.75389762391096 *
4141190   +        AcceptedCmp30  +     0.41336953757691 * AcceptedCmp40
4141191   +          +     0.15346623431804 * AcceptedCmp50  +    -0.57037201584293 *
4141192   +        Complain0  +     0.77009921064044 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.26508589111781 * AcceptedCmp10 + -0.40912292690255 
* AcceptedCmp20 + 0.75389762391096 * AcceptedCmp30 + 0.41336953757691 * AcceptedCmp40 + 
0.15346623431804 * AcceptedCmp50 + -0.57037201584293 * Complain0 + 0.77009921064044 * 
HigherEducationBinary0 ;
4141193   +   H1x1_1  = H1x1_1  +      1.0009305049246 * Education2n_Cycle
4141194   +          +     -0.4613305087931 * EducationBasic  +      0.3758596828746 *
4141195   +        EducationGraduation  +     1.25189584055994 * EducationMaster
4141196   +          +     0.26230568150721 * Marital_StatusDivorced
4141197   +          +     0.27563523967756 * Marital_StatusMarried
4141198   +          +     0.54464481618478 * Marital_StatusSingle
4141199   +          +    -0.59728882722473 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.0009305049246 * Education2n_Cycle + -0.4613305087931 
* EducationBasic + 0.3758596828746 * EducationGraduation + 1.25189584055994 * EducationMaster 
+ 0.26230568150721 * Marital_StatusDivorced + 0.27563523967756 * Marital_StatusMarried + 
0.54464481618478 * Marital_StatusSingle + -0.59728882722473 * Marital_StatusTogether ;
4141200   +   H1x1_2  = H1x1_2  +    -0.67268966683928 * Education2n_Cycle
4141201   +          +     1.13837889947773 * EducationBasic  +     1.04211010190617 *
4141202   +        EducationGraduation  +     0.29772013614284 * EducationMaster
4141203   +          +    -0.06750661313108 * Marital_StatusDivorced
4141204   +          +     1.48628445854207 * Marital_StatusMarried
4141205   +          +    -0.52197797291165 * Marital_StatusSingle
4141206   +          +     0.26825188905773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.67268966683928 * Education2n_Cycle + 
1.13837889947773 * EducationBasic + 1.04211010190617 * EducationGraduation + 0.29772013614284 
* EducationMaster + -0.06750661313108 * Marital_StatusDivorced + 1.48628445854207 * 
Marital_StatusMarried + -0.52197797291165 * Marital_StatusSingle + 0.26825188905773 * 
Marital_StatusTogether ;
4141207   +   H1x1_3  = H1x1_3  +     0.15872794306716 * Education2n_Cycle
4141208   +          +     -0.2621450786439 * EducationBasic  +      -0.141563901063 *
4141209   +        EducationGraduation  +     0.45665087056809 * EducationMaster
4141210   +          +     0.03219453957597 * Marital_StatusDivorced
4141211   +          +    -0.73835008216677 * Marital_StatusMarried
4141212   +          +     0.11212575818086 * Marital_StatusSingle
4141213   +          +    -0.43478073380625 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.15872794306716 * Education2n_Cycle + 
-0.2621450786439 * EducationBasic + -0.141563901063 * EducationGraduation + 0.45665087056809 * 
EducationMaster + 0.03219453957597 * Marital_StatusDivorced + -0.73835008216677 * 
Marital_StatusMarried + 0.11212575818086 * Marital_StatusSingle + -0.43478073380625 * 
Marital_StatusTogether ;
4141214   +   H1x1_4  = H1x1_4  +    -0.76014837933596 * Education2n_Cycle
4141215   +          +     0.81014096036717 * EducationBasic  +     0.41200440507889 *
4141216   +        EducationGraduation  +    -1.00228990059701 * EducationMaster
4141217   +          +    -0.95055539413405 * Marital_StatusDivorced
4141218   +          +    -1.65922419336067 * Marital_StatusMarried
4141219   +          +     0.78727538125107 * Marital_StatusSingle
4141220   +          +    -2.04820355088009 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.76014837933596 * Education2n_Cycle + 
0.81014096036717 * EducationBasic + 0.41200440507889 * EducationGraduation + -1.00228990059701 
* EducationMaster + -0.95055539413405 * Marital_StatusDivorced + -1.65922419336067 * 
Marital_StatusMarried + 0.78727538125107 * Marital_StatusSingle + -2.04820355088009 * 
Marital_StatusTogether ;
4141221   +   H1x1_5  = H1x1_5  +    -0.28767104655135 * Education2n_Cycle
4141222   +          +     0.23294407135706 * EducationBasic  +    -1.19680108607997 *
4141223   +        EducationGraduation  +     0.46710355433642 * EducationMaster
4141224   +          +     -4.1747415035634 * Marital_StatusDivorced
4141225   +          +     3.61194282451968 * Marital_StatusMarried
4141226   +          +     -3.2800495365546 * Marital_StatusSingle
4141227   +          +     4.03496183640024 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.28767104655135 * Education2n_Cycle + 
0.23294407135706 * EducationBasic + -1.19680108607997 * EducationGraduation + 0.46710355433642 
* EducationMaster + -4.1747415035634 * Marital_StatusDivorced + 3.61194282451968 * 
Marital_StatusMarried + -3.2800495365546 * Marital_StatusSingle + 4.03496183640024 * 
Marital_StatusTogether ;
4141228   +   H1x1_1  =    -2.93438581065873 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.93438581065873 + H1x1_1 ;
4141229   +   H1x1_2  =     0.62443347607569 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.62443347607569 + H1x1_2 ;
4141230   +   H1x1_3  =    -1.18755793198513 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.18755793198513 + H1x1_3 ;
4141231   +   H1x1_4  =    -3.21278432238831 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.21278432238831 + H1x1_4 ;
4141232   +   H1x1_5  =    -1.81875492018044 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.81875492018044 + H1x1_5 ;
4141233   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4141234   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4141235   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
4141236   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
4141237   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
4141238   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
4141239   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
4141240   +END;
MPRINT(EM_DIAGRAM):   END;
4141241   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4141242   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4141243   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4141244   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
4141245   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
4141246   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
4141247   +END;
MPRINT(EM_DIAGRAM):   END;
4141248   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4141249   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
4141250   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4141251   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4141252   +   H1x2_1  =    -0.54874145972704 * S_AcceptedCmpTotal
4141253   +          +    -1.96729802286214 * S_Age  +     0.48476252791598 * S_Frq
4141254   +          +    -0.22341551246937 * S_Income  +      0.5578096957255 *
4141255   +        S_Kidhome  +     0.02626802496223 * S_Mnt  +     0.45412544568839 *
4141256   +        S_MntFishProducts  +     1.01144979259918 * S_MntFruits
4141257   +          +     0.10684155186482 * S_MntGoldProds  +    -0.28941930881694 *
4141258   +        S_MntMeatProducts  +    -1.28044699620063 * S_MntSweetProducts
4141259   +          +     0.01381215802108 * S_MntWines  +    -0.10048261914477 *
4141260   +        S_MonthsAsCustomer  +     2.77259931235269 * S_NumCatalogPurchases
4141261   +          +     1.29727972396867 * S_NumDealsPurchases
4141262   +          +     -0.4796144286007 * S_NumDistPurchases
4141263   +          +     0.88365985808591 * S_NumStorePurchases
4141264   +          +     0.68522096892804 * S_NumWebPurchases
4141265   +          +     0.54931043107798 * S_NumWebVisitsMonth
4141266   +          +     0.54113568533807 * S_RFMstat  +    -1.25421061779043 *
4141267   +        S_RMntFrq  +     2.35704770144328 * S_Recency
4141268   +          +     0.71039073076168 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.54874145972704 * S_AcceptedCmpTotal + -1.96729802286214 * 
S_Age + 0.48476252791598 * S_Frq + -0.22341551246937 * S_Income + 0.5578096957255 * S_Kidhome 
+ 0.02626802496223 * S_Mnt + 0.45412544568839 * S_MntFishProducts + 1.01144979259918 * 
S_MntFruits + 0.10684155186482 * S_MntGoldProds + -0.28941930881694 * S_MntMeatProducts + 
-1.28044699620063 * S_MntSweetProducts + 0.01381215802108 * S_MntWines + -0.10048261914477 * 
S_MonthsAsCustomer + 2.77259931235269 * S_NumCatalogPurchases + 1.29727972396867 * 
S_NumDealsPurchases + -0.4796144286007 * S_NumDistPurchases + 0.88365985808591 * 
S_NumStorePurchases + 0.68522096892804 * S_NumWebPurchases + 0.54931043107798 * 
S_NumWebVisitsMonth + 0.54113568533807 * S_RFMstat + -1.25421061779043 * S_RMntFrq + 
2.35704770144328 * S_Recency + 0.71039073076168 * S_Teenhome ;
4141269   +   H1x2_2  =    -0.87761654715429 * S_AcceptedCmpTotal
4141270   +          +     0.35157201280883 * S_Age  +    -0.52499399345006 * S_Frq
4141271   +          +    -0.18535763866989 * S_Income  +    -2.37902660986953 *
4141272   +        S_Kidhome  +     0.91895423997679 * S_Mnt  +     0.25609945459048 *
4141273   +        S_MntFishProducts  +    -0.81235755934506 * S_MntFruits
4141274   +          +     0.52120923975997 * S_MntGoldProds  +    -0.44372337811583 *
4141275   +        S_MntMeatProducts  +     0.44948834045992 * S_MntSweetProducts
4141276   +          +     -1.0932771504262 * S_MntWines  +     0.50602262267579 *
4141277   +        S_MonthsAsCustomer  +     1.56553203254999 * S_NumCatalogPurchases
4141278   +          +     0.26997834581422 * S_NumDealsPurchases
4141279   +          +      1.4974894627406 * S_NumDistPurchases
4141280   +          +     0.20577850505638 * S_NumStorePurchases
4141281   +          +     0.67578530037026 * S_NumWebPurchases
4141282   +          +     1.48893165613941 * S_NumWebVisitsMonth
4141283   +          +     0.13287732996796 * S_RFMstat  +     0.56918286957798 *
4141284   +        S_RMntFrq  +    -1.40718347701522 * S_Recency
4141285   +          +    -1.45355422903931 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.87761654715429 * S_AcceptedCmpTotal + 0.35157201280883 * 
S_Age + -0.52499399345006 * S_Frq + -0.18535763866989 * S_Income + -2.37902660986953 * 
S_Kidhome + 0.91895423997679 * S_Mnt + 0.25609945459048 * S_MntFishProducts + 
-0.81235755934506 * S_MntFruits + 0.52120923975997 * S_MntGoldProds + -0.44372337811583 * 
S_MntMeatProducts + 0.44948834045992 * S_MntSweetProducts + -1.0932771504262 * S_MntWines + 
0.50602262267579 * S_MonthsAsCustomer + 1.56553203254999 * S_NumCatalogPurchases + 
0.26997834581422 * S_NumDealsPurchases + 1.4974894627406 * S_NumDistPurchases + 
0.20577850505638 * S_NumStorePurchases + 0.67578530037026 * S_NumWebPurchases + 
1.48893165613941 * S_NumWebVisitsMonth + 0.13287732996796 * S_RFMstat + 0.56918286957798 * 
S_RMntFrq + -1.40718347701522 * S_Recency + -1.45355422903931 * S_Teenhome ;
4141286   +   H1x2_3  =    -0.04229252175967 * S_AcceptedCmpTotal
4141287   +          +    -0.15725101559927 * S_Age  +      2.0258984610186 * S_Frq
4141288   +          +     0.68410444381038 * S_Income  +     0.69019962444573 *
4141289   +        S_Kidhome  +    -0.34233922017925 * S_Mnt  +     1.55352897772997 *
4141290   +        S_MntFishProducts  +    -0.76176236164027 * S_MntFruits
4141291   +          +    -1.16754517357962 * S_MntGoldProds  +     1.24350326644835 *
4141292   +        S_MntMeatProducts  +    -0.81282451423383 * S_MntSweetProducts
4141293   +          +      0.7172672745995 * S_MntWines  +     1.13255065624057 *
4141294   +        S_MonthsAsCustomer  +    -0.07781573365472 * S_NumCatalogPurchases
4141295   +          +    -0.75474919633886 * S_NumDealsPurchases
4141296   +          +     2.21872386475638 * S_NumDistPurchases
4141297   +          +    -0.36191460108989 * S_NumStorePurchases
4141298   +          +     0.03160010932412 * S_NumWebPurchases
4141299   +          +     0.00984650739909 * S_NumWebVisitsMonth
4141300   +          +     0.89037882953417 * S_RFMstat  +    -1.05136047825247 *
4141301   +        S_RMntFrq  +     0.97890474913417 * S_Recency
4141302   +          +     1.27657797009328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.04229252175967 * S_AcceptedCmpTotal + -0.15725101559927 * 
S_Age + 2.0258984610186 * S_Frq + 0.68410444381038 * S_Income + 0.69019962444573 * S_Kidhome + 
-0.34233922017925 * S_Mnt + 1.55352897772997 * S_MntFishProducts + -0.76176236164027 * 
S_MntFruits + -1.16754517357962 * S_MntGoldProds + 1.24350326644835 * S_MntMeatProducts + 
-0.81282451423383 * S_MntSweetProducts + 0.7172672745995 * S_MntWines + 1.13255065624057 * 
S_MonthsAsCustomer + -0.07781573365472 * S_NumCatalogPurchases + -0.75474919633886 * 
S_NumDealsPurchases + 2.21872386475638 * S_NumDistPurchases + -0.36191460108989 * 
S_NumStorePurchases + 0.03160010932412 * S_NumWebPurchases + 0.00984650739909 * 
S_NumWebVisitsMonth + 0.89037882953417 * S_RFMstat + -1.05136047825247 * S_RMntFrq + 
0.97890474913417 * S_Recency + 1.27657797009328 * S_Teenhome ;
4141303   +   H1x2_4  =    -1.09473986244398 * S_AcceptedCmpTotal
4141304   +          +     0.02292759635423 * S_Age  +     -1.7109267909752 * S_Frq
4141305   +          +    -1.43383040360225 * S_Income  +    -1.57934610129188 *
4141306   +        S_Kidhome  +      0.1051214240099 * S_Mnt  +     0.97936539268931 *
4141307   +        S_MntFishProducts  +    -0.59583313648658 * S_MntFruits
4141308   +          +     1.51886505753921 * S_MntGoldProds  +    -0.32475169924002 *
4141309   +        S_MntMeatProducts  +     2.41110603237098 * S_MntSweetProducts
4141310   +          +    -0.31356867592074 * S_MntWines  +    -0.46746195334785 *
4141311   +        S_MonthsAsCustomer  +      1.2175994058873 * S_NumCatalogPurchases
4141312   +          +    -1.12057357865269 * S_NumDealsPurchases
4141313   +          +    -0.70841760614521 * S_NumDistPurchases
4141314   +          +    -1.39174816270404 * S_NumStorePurchases
4141315   +          +    -1.62343249380806 * S_NumWebPurchases
4141316   +          +    -0.73097954508465 * S_NumWebVisitsMonth
4141317   +          +    -3.00146168388145 * S_RFMstat  +     0.52793752800199 *
4141318   +        S_RMntFrq  +    -1.13585643618227 * S_Recency
4141319   +          +    -0.84809590269062 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.09473986244398 * S_AcceptedCmpTotal + 0.02292759635423 * 
S_Age + -1.7109267909752 * S_Frq + -1.43383040360225 * S_Income + -1.57934610129188 * 
S_Kidhome + 0.1051214240099 * S_Mnt + 0.97936539268931 * S_MntFishProducts + -0.59583313648658 
* S_MntFruits + 1.51886505753921 * S_MntGoldProds + -0.32475169924002 * S_MntMeatProducts + 
2.41110603237098 * S_MntSweetProducts + -0.31356867592074 * S_MntWines + -0.46746195334785 * 
S_MonthsAsCustomer + 1.2175994058873 * S_NumCatalogPurchases + -1.12057357865269 * 
S_NumDealsPurchases + -0.70841760614521 * S_NumDistPurchases + -1.39174816270404 * 
S_NumStorePurchases + -1.62343249380806 * S_NumWebPurchases + -0.73097954508465 * 
S_NumWebVisitsMonth + -3.00146168388145 * S_RFMstat + 0.52793752800199 * S_RMntFrq + 
-1.13585643618227 * S_Recency + -0.84809590269062 * S_Teenhome ;
4141320   +   H1x2_5  =    -0.76941479017685 * S_AcceptedCmpTotal
4141321   +          +    -0.80197055800099 * S_Age  +    -0.33523741625948 * S_Frq
4141322   +          +     0.67386262421365 * S_Income  +     1.52003240833706 *
4141323   +        S_Kidhome  +     0.14459028288037 * S_Mnt  +     0.39874528164598 *
4141324   +        S_MntFishProducts  +    -1.59397070226712 * S_MntFruits
4141325   +          +     0.78518859165099 * S_MntGoldProds  +     0.48003679676647 *
4141326   +        S_MntMeatProducts  +    -0.17657709565986 * S_MntSweetProducts
4141327   +          +    -0.79155200251992 * S_MntWines  +     0.27335896970236 *
4141328   +        S_MonthsAsCustomer  +     1.70502645622852 * S_NumCatalogPurchases
4141329   +          +     0.66880481485557 * S_NumDealsPurchases
4141330   +          +     0.69540174544859 * S_NumDistPurchases
4141331   +          +     1.68246546921736 * S_NumStorePurchases
4141332   +          +     1.85958176898295 * S_NumWebPurchases
4141333   +          +    -0.23815810306565 * S_NumWebVisitsMonth
4141334   +          +    -1.93291997626659 * S_RFMstat  +     0.44532152898673 *
4141335   +        S_RMntFrq  +    -2.12360922264332 * S_Recency
4141336   +          +     0.99915338747458 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.76941479017685 * S_AcceptedCmpTotal + -0.80197055800099 * 
S_Age + -0.33523741625948 * S_Frq + 0.67386262421365 * S_Income + 1.52003240833706 * S_Kidhome 
+ 0.14459028288037 * S_Mnt + 0.39874528164598 * S_MntFishProducts + -1.59397070226712 * 
S_MntFruits + 0.78518859165099 * S_MntGoldProds + 0.48003679676647 * S_MntMeatProducts + 
-0.17657709565986 * S_MntSweetProducts + -0.79155200251992 * S_MntWines + 0.27335896970236 * 
S_MonthsAsCustomer + 1.70502645622852 * S_NumCatalogPurchases + 0.66880481485557 * 
S_NumDealsPurchases + 0.69540174544859 * S_NumDistPurchases + 1.68246546921736 * 
S_NumStorePurchases + 1.85958176898295 * S_NumWebPurchases + -0.23815810306565 * 
S_NumWebVisitsMonth + -1.93291997626659 * S_RFMstat + 0.44532152898673 * S_RMntFrq + 
-2.12360922264332 * S_Recency + 0.99915338747458 * S_Teenhome ;
4141337   +   H1x2_1  = H1x2_1  +    -0.34162163066653 * AcceptedCmp10
4141338   +          +    -1.63962075993761 * AcceptedCmp20  +    -0.15621537766672 *
4141339   +        AcceptedCmp30  +      -0.732967936338 * AcceptedCmp40
4141340   +          +    -0.89574320220152 * AcceptedCmp50  +    -1.65404732277767 *
4141341   +        Complain0  +     0.39810242344925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.34162163066653 * AcceptedCmp10 + -1.63962075993761 
* AcceptedCmp20 + -0.15621537766672 * AcceptedCmp30 + -0.732967936338 * AcceptedCmp40 + 
-0.89574320220152 * AcceptedCmp50 + -1.65404732277767 * Complain0 + 0.39810242344925 * 
HigherEducationBinary0 ;
4141342   +   H1x2_2  = H1x2_2  +     1.20749893379181 * AcceptedCmp10
4141343   +          +     0.74035850461127 * AcceptedCmp20  +    -0.57598323268755 *
4141344   +        AcceptedCmp30  +      0.2507562576407 * AcceptedCmp40
4141345   +          +    -1.65954337863227 * AcceptedCmp50  +    -0.36715622527216 *
4141346   +        Complain0  +    -0.80760857638242 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.20749893379181 * AcceptedCmp10 + 0.74035850461127 * 
AcceptedCmp20 + -0.57598323268755 * AcceptedCmp30 + 0.2507562576407 * AcceptedCmp40 + 
-1.65954337863227 * AcceptedCmp50 + -0.36715622527216 * Complain0 + -0.80760857638242 * 
HigherEducationBinary0 ;
4141347   +   H1x2_3  = H1x2_3  +      0.1125551214626 * AcceptedCmp10
4141348   +          +      0.9256532360503 * AcceptedCmp20  +    -0.66171851987996 *
4141349   +        AcceptedCmp30  +     1.38941609616943 * AcceptedCmp40
4141350   +          +    -0.12600029950267 * AcceptedCmp50  +     1.77872255302987 *
4141351   +        Complain0  +     0.92261637863861 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.1125551214626 * AcceptedCmp10 + 0.9256532360503 * 
AcceptedCmp20 + -0.66171851987996 * AcceptedCmp30 + 1.38941609616943 * AcceptedCmp40 + 
-0.12600029950267 * AcceptedCmp50 + 1.77872255302987 * Complain0 + 0.92261637863861 * 
HigherEducationBinary0 ;
4141352   +   H1x2_4  = H1x2_4  +     1.15541901435911 * AcceptedCmp10
4141353   +          +     0.29649422640031 * AcceptedCmp20  +     0.39809722545141 *
4141354   +        AcceptedCmp30  +    -0.33350815656019 * AcceptedCmp40
4141355   +          +    -0.67932033799188 * AcceptedCmp50  +     0.37378775543802 *
4141356   +        Complain0  +    -0.42273281355142 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.15541901435911 * AcceptedCmp10 + 0.29649422640031 * 
AcceptedCmp20 + 0.39809722545141 * AcceptedCmp30 + -0.33350815656019 * AcceptedCmp40 + 
-0.67932033799188 * AcceptedCmp50 + 0.37378775543802 * Complain0 + -0.42273281355142 * 
HigherEducationBinary0 ;
4141357   +   H1x2_5  = H1x2_5  +     0.42070748083274 * AcceptedCmp10
4141358   +          +     0.35338291913326 * AcceptedCmp20  +    -0.47257467834599 *
4141359   +        AcceptedCmp30  +     1.53611423156071 * AcceptedCmp40
4141360   +          +    -1.33360798584085 * AcceptedCmp50  +    -1.44352278404761 *
4141361   +        Complain0  +    -0.33674466205114 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.42070748083274 * AcceptedCmp10 + 0.35338291913326 * 
AcceptedCmp20 + -0.47257467834599 * AcceptedCmp30 + 1.53611423156071 * AcceptedCmp40 + 
-1.33360798584085 * AcceptedCmp50 + -1.44352278404761 * Complain0 + -0.33674466205114 * 
HigherEducationBinary0 ;
4141362   +   H1x2_1  = H1x2_1  +     0.60843711339598 * Education2n_Cycle
4141363   +          +     -0.2612316425128 * EducationBasic  +     0.53215140077355 *
4141364   +        EducationGraduation  +     0.32623787352656 * EducationMaster
4141365   +          +      0.2766977476799 * Marital_StatusDivorced
4141366   +          +     0.99585126449473 * Marital_StatusMarried
4141367   +          +    -0.71244490682808 * Marital_StatusSingle
4141368   +          +     0.05234471555621 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.60843711339598 * Education2n_Cycle + 
-0.2612316425128 * EducationBasic + 0.53215140077355 * EducationGraduation + 0.32623787352656 
* EducationMaster + 0.2766977476799 * Marital_StatusDivorced + 0.99585126449473 * 
Marital_StatusMarried + -0.71244490682808 * Marital_StatusSingle + 0.05234471555621 * 
Marital_StatusTogether ;
4141369   +   H1x2_2  = H1x2_2  +    -1.37916273373311 * Education2n_Cycle
4141370   +          +     0.16982792088728 * EducationBasic  +     0.00814910507718 *
4141371   +        EducationGraduation  +     0.47239961039918 * EducationMaster
4141372   +          +     0.04724779113048 * Marital_StatusDivorced
4141373   +          +    -0.80186231440666 * Marital_StatusMarried
4141374   +          +    -0.02226793584171 * Marital_StatusSingle
4141375   +          +     1.15827064756189 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.37916273373311 * Education2n_Cycle + 
0.16982792088728 * EducationBasic + 0.00814910507718 * EducationGraduation + 0.47239961039918 
* EducationMaster + 0.04724779113048 * Marital_StatusDivorced + -0.80186231440666 * 
Marital_StatusMarried + -0.02226793584171 * Marital_StatusSingle + 1.15827064756189 * 
Marital_StatusTogether ;
4141376   +   H1x2_3  = H1x2_3  +    -0.24428291102209 * Education2n_Cycle
4141377   +          +    -0.11697967041189 * EducationBasic  +    -1.11774839931933 *
4141378   +        EducationGraduation  +     0.41284540548646 * EducationMaster
4141379   +          +     0.28206835683721 * Marital_StatusDivorced
4141380   +          +     0.46500886756532 * Marital_StatusMarried
4141381   +          +     0.35327545255503 * Marital_StatusSingle
4141382   +          +     0.58394650567036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.24428291102209 * Education2n_Cycle + 
-0.11697967041189 * EducationBasic + -1.11774839931933 * EducationGraduation + 
0.41284540548646 * EducationMaster + 0.28206835683721 * Marital_StatusDivorced + 
0.46500886756532 * Marital_StatusMarried + 0.35327545255503 * Marital_StatusSingle + 
0.58394650567036 * Marital_StatusTogether ;
4141383   +   H1x2_4  = H1x2_4  +    -0.41547462236128 * Education2n_Cycle
4141384   +          +     1.13629818238321 * EducationBasic  +     0.25034344652006 *
4141385   +        EducationGraduation  +    -0.29812527209479 * EducationMaster
4141386   +          +     1.22291788006392 * Marital_StatusDivorced
4141387   +          +    -2.27040720272432 * Marital_StatusMarried
4141388   +          +     1.13606780043773 * Marital_StatusSingle
4141389   +          +    -1.07606142589696 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.41547462236128 * Education2n_Cycle + 
1.13629818238321 * EducationBasic + 0.25034344652006 * EducationGraduation + -0.29812527209479 
* EducationMaster + 1.22291788006392 * Marital_StatusDivorced + -2.27040720272432 * 
Marital_StatusMarried + 1.13606780043773 * Marital_StatusSingle + -1.07606142589696 * 
Marital_StatusTogether ;
4141390   +   H1x2_5  = H1x2_5  +     1.12913918872999 * Education2n_Cycle
4141391   +          +     1.23833680718071 * EducationBasic  +     1.02294394812757 *
4141392   +        EducationGraduation  +      0.4909097120378 * EducationMaster
4141393   +          +     -0.3999800759199 * Marital_StatusDivorced
4141394   +          +    -0.40978271635345 * Marital_StatusMarried
4141395   +          +    -0.55524279444227 * Marital_StatusSingle
4141396   +          +    -0.84395633194091 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.12913918872999 * Education2n_Cycle + 
1.23833680718071 * EducationBasic + 1.02294394812757 * EducationGraduation + 0.4909097120378 * 
EducationMaster + -0.3999800759199 * Marital_StatusDivorced + -0.40978271635345 * 
Marital_StatusMarried + -0.55524279444227 * Marital_StatusSingle + -0.84395633194091 * 
Marital_StatusTogether ;
4141397   +   H1x2_1  =    -0.65400470626386 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.65400470626386 + H1x2_1 ;
4141398   +   H1x2_2  =    -0.07530883721979 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.07530883721979 + H1x2_2 ;
4141399   +   H1x2_3  =      -0.290996947172 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.290996947172 + H1x2_3 ;
4141400   +   H1x2_4  =    -0.89461283774487 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.89461283774487 + H1x2_4 ;
4141401   +   H1x2_5  =    -0.37171981998051 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.37171981998051 + H1x2_5 ;
4141402   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4141403   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4141404   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
4141405   +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
4141406   +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
4141407   +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
4141408   +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
4141409   +END;
MPRINT(EM_DIAGRAM):   END;
4141410   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4141411   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
4141412   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
4141413   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
4141414   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
4141415   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
4141416   +END;
MPRINT(EM_DIAGRAM):   END;
4141417   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4141418   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
4141419   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4141420   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4141421   +   H1x3_1  =     0.02034446400728 * S_AcceptedCmpTotal
4141422   +          +    -0.93561297099295 * S_Age  +     0.49066734733476 * S_Frq
4141423   +          +    -1.34856771280634 * S_Income  +     1.35662384709137 *
4141424   +        S_Kidhome  +    -0.02206222240953 * S_Mnt  +     0.42162640035912 *
4141425   +        S_MntFishProducts  +      1.4724867503467 * S_MntFruits
4141426   +          +    -0.51460401528507 * S_MntGoldProds  +       0.958125893994 *
4141427   +        S_MntMeatProducts  +     0.57113865733502 * S_MntSweetProducts
4141428   +          +    -1.00744287646761 * S_MntWines  +     0.17043433169038 *
4141429   +        S_MonthsAsCustomer  +     1.69277828985001 * S_NumCatalogPurchases
4141430   +          +     0.15783958682465 * S_NumDealsPurchases
4141431   +          +     1.52124708558457 * S_NumDistPurchases
4141432   +          +     -1.3804418313581 * S_NumStorePurchases
4141433   +          +    -1.29570111649272 * S_NumWebPurchases
4141434   +          +    -0.64280706056547 * S_NumWebVisitsMonth
4141435   +          +    -1.20774016698707 * S_RFMstat  +    -0.44623204790714 *
4141436   +        S_RMntFrq  +    -0.06726660535826 * S_Recency
4141437   +          +    -0.73266660753354 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.02034446400728 * S_AcceptedCmpTotal + -0.93561297099295 * 
S_Age + 0.49066734733476 * S_Frq + -1.34856771280634 * S_Income + 1.35662384709137 * S_Kidhome 
+ -0.02206222240953 * S_Mnt + 0.42162640035912 * S_MntFishProducts + 1.4724867503467 * 
S_MntFruits + -0.51460401528507 * S_MntGoldProds + 0.958125893994 * S_MntMeatProducts + 
0.57113865733502 * S_MntSweetProducts + -1.00744287646761 * S_MntWines + 0.17043433169038 * 
S_MonthsAsCustomer + 1.69277828985001 * S_NumCatalogPurchases + 0.15783958682465 * 
S_NumDealsPurchases + 1.52124708558457 * S_NumDistPurchases + -1.3804418313581 * 
S_NumStorePurchases + -1.29570111649272 * S_NumWebPurchases + -0.64280706056547 * 
S_NumWebVisitsMonth + -1.20774016698707 * S_RFMstat + -0.44623204790714 * S_RMntFrq + 
-0.06726660535826 * S_Recency + -0.73266660753354 * S_Teenhome ;
4141438   +   H1x3_2  =     0.05576327437156 * S_AcceptedCmpTotal
4141439   +          +    -0.09670418926268 * S_Age  +     0.70499031549942 * S_Frq
4141440   +          +     0.26184897891893 * S_Income  +    -1.14390972062773 *
4141441   +        S_Kidhome  +     -0.0692794596346 * S_Mnt  +     0.38520399298269 *
4141442   +        S_MntFishProducts  +     0.23416686193508 * S_MntFruits
4141443   +          +     0.54961704765881 * S_MntGoldProds  +     1.00350256670809 *
4141444   +        S_MntMeatProducts  +    -0.03432942277526 * S_MntSweetProducts
4141445   +          +    -0.79877133727616 * S_MntWines  +    -2.29194848128805 *
4141446   +        S_MonthsAsCustomer  +    -0.38950356087292 * S_NumCatalogPurchases
4141447   +          +     0.12337111358286 * S_NumDealsPurchases
4141448   +          +     -2.3848926094027 * S_NumDistPurchases
4141449   +          +    -1.20666646996433 * S_NumStorePurchases
4141450   +          +     0.89549302881365 * S_NumWebPurchases
4141451   +          +     0.95359042569947 * S_NumWebVisitsMonth
4141452   +          +    -0.41458051201542 * S_RFMstat  +    -2.05830783255089 *
4141453   +        S_RMntFrq  +     0.17682790616815 * S_Recency
4141454   +          +     0.20329199183726 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.05576327437156 * S_AcceptedCmpTotal + -0.09670418926268 * 
S_Age + 0.70499031549942 * S_Frq + 0.26184897891893 * S_Income + -1.14390972062773 * S_Kidhome 
+ -0.0692794596346 * S_Mnt + 0.38520399298269 * S_MntFishProducts + 0.23416686193508 * 
S_MntFruits + 0.54961704765881 * S_MntGoldProds + 1.00350256670809 * S_MntMeatProducts + 
-0.03432942277526 * S_MntSweetProducts + -0.79877133727616 * S_MntWines + -2.29194848128805 * 
S_MonthsAsCustomer + -0.38950356087292 * S_NumCatalogPurchases + 0.12337111358286 * 
S_NumDealsPurchases + -2.3848926094027 * S_NumDistPurchases + -1.20666646996433 * 
S_NumStorePurchases + 0.89549302881365 * S_NumWebPurchases + 0.95359042569947 * 
S_NumWebVisitsMonth + -0.41458051201542 * S_RFMstat + -2.05830783255089 * S_RMntFrq + 
0.17682790616815 * S_Recency + 0.20329199183726 * S_Teenhome ;
4141455   +   H1x3_3  =     0.56145399373835 * S_AcceptedCmpTotal
4141456   +          +     -0.0607922137813 * S_Age  +    -0.72333515266618 * S_Frq
4141457   +          +     1.00319702869592 * S_Income  +    -0.98265416539823 *
4141458   +        S_Kidhome  +      0.0683081611036 * S_Mnt  +     0.53609800817402 *
4141459   +        S_MntFishProducts  +     2.04360526983241 * S_MntFruits
4141460   +          +    -0.71698041504305 * S_MntGoldProds  +     -0.0344399486348 *
4141461   +        S_MntMeatProducts  +     0.33812230317499 * S_MntSweetProducts
4141462   +          +     1.06616289880664 * S_MntWines  +     0.61567483782422 *
4141463   +        S_MonthsAsCustomer  +      0.1468959674594 * S_NumCatalogPurchases
4141464   +          +    -1.05383642674948 * S_NumDealsPurchases
4141465   +          +     1.71861984509369 * S_NumDistPurchases
4141466   +          +     1.47595181536047 * S_NumStorePurchases
4141467   +          +    -1.64165005491178 * S_NumWebPurchases
4141468   +          +    -2.35130004742828 * S_NumWebVisitsMonth
4141469   +          +      1.0733561716985 * S_RFMstat  +     1.11931629246452 *
4141470   +        S_RMntFrq  +    -1.27356615687944 * S_Recency
4141471   +          +     0.38980214209917 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.56145399373835 * S_AcceptedCmpTotal + -0.0607922137813 * 
S_Age + -0.72333515266618 * S_Frq + 1.00319702869592 * S_Income + -0.98265416539823 * 
S_Kidhome + 0.0683081611036 * S_Mnt + 0.53609800817402 * S_MntFishProducts + 2.04360526983241 
* S_MntFruits + -0.71698041504305 * S_MntGoldProds + -0.0344399486348 * S_MntMeatProducts + 
0.33812230317499 * S_MntSweetProducts + 1.06616289880664 * S_MntWines + 0.61567483782422 * 
S_MonthsAsCustomer + 0.1468959674594 * S_NumCatalogPurchases + -1.05383642674948 * 
S_NumDealsPurchases + 1.71861984509369 * S_NumDistPurchases + 1.47595181536047 * 
S_NumStorePurchases + -1.64165005491178 * S_NumWebPurchases + -2.35130004742828 * 
S_NumWebVisitsMonth + 1.0733561716985 * S_RFMstat + 1.11931629246452 * S_RMntFrq + 
-1.27356615687944 * S_Recency + 0.38980214209917 * S_Teenhome ;
4141472   +   H1x3_4  =    -1.87202109167616 * S_AcceptedCmpTotal
4141473   +          +     0.55536174675106 * S_Age  +     1.30133566520787 * S_Frq
4141474   +          +     1.18618986686496 * S_Income  +      0.7889264950743 *
4141475   +        S_Kidhome  +     0.52573653297629 * S_Mnt  +    -0.46151505202831 *
4141476   +        S_MntFishProducts  +     0.87196199131075 * S_MntFruits
4141477   +          +    -1.42881514301194 * S_MntGoldProds  +     0.75395204572369 *
4141478   +        S_MntMeatProducts  +    -1.86940235435459 * S_MntSweetProducts
4141479   +          +    -0.16531589560603 * S_MntWines  +     0.80429494629006 *
4141480   +        S_MonthsAsCustomer  +     2.07324775707635 * S_NumCatalogPurchases
4141481   +          +     0.13347794794222 * S_NumDealsPurchases
4141482   +          +     0.30533639886561 * S_NumDistPurchases
4141483   +          +     1.63892955540526 * S_NumStorePurchases
4141484   +          +     0.43734586516446 * S_NumWebPurchases
4141485   +          +     1.79260779802864 * S_NumWebVisitsMonth
4141486   +          +     2.03019700767877 * S_RFMstat  +    -0.36302320348133 *
4141487   +        S_RMntFrq  +    -0.32271271703746 * S_Recency
4141488   +          +     1.03191552613762 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -1.87202109167616 * S_AcceptedCmpTotal + 0.55536174675106 * 
S_Age + 1.30133566520787 * S_Frq + 1.18618986686496 * S_Income + 0.7889264950743 * S_Kidhome + 
0.52573653297629 * S_Mnt + -0.46151505202831 * S_MntFishProducts + 0.87196199131075 * 
S_MntFruits + -1.42881514301194 * S_MntGoldProds + 0.75395204572369 * S_MntMeatProducts + 
-1.86940235435459 * S_MntSweetProducts + -0.16531589560603 * S_MntWines + 0.80429494629006 * 
S_MonthsAsCustomer + 2.07324775707635 * S_NumCatalogPurchases + 0.13347794794222 * 
S_NumDealsPurchases + 0.30533639886561 * S_NumDistPurchases + 1.63892955540526 * 
S_NumStorePurchases + 0.43734586516446 * S_NumWebPurchases + 1.79260779802864 * 
S_NumWebVisitsMonth + 2.03019700767877 * S_RFMstat + -0.36302320348133 * S_RMntFrq + 
-0.32271271703746 * S_Recency + 1.03191552613762 * S_Teenhome ;
4141489   +   H1x3_5  =     0.20857223520727 * S_AcceptedCmpTotal
4141490   +          +    -0.20096771162452 * S_Age  +     0.34962532991985 * S_Frq
4141491   +          +     1.37548654455856 * S_Income  +     1.56421861140197 *
4141492   +        S_Kidhome  +    -1.14534324749928 * S_Mnt  +     1.19456381083083 *
4141493   +        S_MntFishProducts  +     0.66027175430916 * S_MntFruits
4141494   +          +    -0.93198171949009 * S_MntGoldProds  +    -0.72464830253528 *
4141495   +        S_MntMeatProducts  +     1.02487566206095 * S_MntSweetProducts
4141496   +          +     1.05601020947303 * S_MntWines  +     2.31580499448269 *
4141497   +        S_MonthsAsCustomer  +    -0.72019418879499 * S_NumCatalogPurchases
4141498   +          +     1.64209094349557 * S_NumDealsPurchases
4141499   +          +    -0.38876870460627 * S_NumDistPurchases
4141500   +          +    -0.48559309584971 * S_NumStorePurchases
4141501   +          +     0.21254626353218 * S_NumWebPurchases
4141502   +          +    -0.71484448532542 * S_NumWebVisitsMonth
4141503   +          +     0.02349535084994 * S_RFMstat  +    -0.16176132186427 *
4141504   +        S_RMntFrq  +     0.44893411588775 * S_Recency
4141505   +          +      0.2652212690846 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.20857223520727 * S_AcceptedCmpTotal + -0.20096771162452 * 
S_Age + 0.34962532991985 * S_Frq + 1.37548654455856 * S_Income + 1.56421861140197 * S_Kidhome 
+ -1.14534324749928 * S_Mnt + 1.19456381083083 * S_MntFishProducts + 0.66027175430916 * 
S_MntFruits + -0.93198171949009 * S_MntGoldProds + -0.72464830253528 * S_MntMeatProducts + 
1.02487566206095 * S_MntSweetProducts + 1.05601020947303 * S_MntWines + 2.31580499448269 * 
S_MonthsAsCustomer + -0.72019418879499 * S_NumCatalogPurchases + 1.64209094349557 * 
S_NumDealsPurchases + -0.38876870460627 * S_NumDistPurchases + -0.48559309584971 * 
S_NumStorePurchases + 0.21254626353218 * S_NumWebPurchases + -0.71484448532542 * 
S_NumWebVisitsMonth + 0.02349535084994 * S_RFMstat + -0.16176132186427 * S_RMntFrq + 
0.44893411588775 * S_Recency + 0.2652212690846 * S_Teenhome ;
4141506   +   H1x3_1  = H1x3_1  +    -1.35842958516566 * AcceptedCmp10
4141507   +          +     0.34594436457216 * AcceptedCmp20  +      0.3640777110552 *
4141508   +        AcceptedCmp30  +    -2.65231594293215 * AcceptedCmp40
4141509   +          +    -0.32594395344101 * AcceptedCmp50  +    -0.20731631969028 *
4141510   +        Complain0  +    -0.37562812451995 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -1.35842958516566 * AcceptedCmp10 + 0.34594436457216 * 
AcceptedCmp20 + 0.3640777110552 * AcceptedCmp30 + -2.65231594293215 * AcceptedCmp40 + 
-0.32594395344101 * AcceptedCmp50 + -0.20731631969028 * Complain0 + -0.37562812451995 * 
HigherEducationBinary0 ;
4141511   +   H1x3_2  = H1x3_2  +    -0.29516697471591 * AcceptedCmp10
4141512   +          +     0.12160626453607 * AcceptedCmp20  +    -0.19673071668839 *
4141513   +        AcceptedCmp30  +      0.9679629348873 * AcceptedCmp40
4141514   +          +     0.27607865991675 * AcceptedCmp50  +     0.34210605810889 *
4141515   +        Complain0  +    -0.91955372970801 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.29516697471591 * AcceptedCmp10 + 0.12160626453607 * 
AcceptedCmp20 + -0.19673071668839 * AcceptedCmp30 + 0.9679629348873 * AcceptedCmp40 + 
0.27607865991675 * AcceptedCmp50 + 0.34210605810889 * Complain0 + -0.91955372970801 * 
HigherEducationBinary0 ;
4141516   +   H1x3_3  = H1x3_3  +    -0.64048354977116 * AcceptedCmp10
4141517   +          +     0.71632378156708 * AcceptedCmp20  +     1.49620826236085 *
4141518   +        AcceptedCmp30  +    -0.41927727863342 * AcceptedCmp40
4141519   +          +    -0.74518887123144 * AcceptedCmp50  +     -0.5653895859863 *
4141520   +        Complain0  +     0.49026807979832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.64048354977116 * AcceptedCmp10 + 0.71632378156708 * 
AcceptedCmp20 + 1.49620826236085 * AcceptedCmp30 + -0.41927727863342 * AcceptedCmp40 + 
-0.74518887123144 * AcceptedCmp50 + -0.5653895859863 * Complain0 + 0.49026807979832 * 
HigherEducationBinary0 ;
4141521   +   H1x3_4  = H1x3_4  +    -0.39456977652419 * AcceptedCmp10
4141522   +          +    -0.35607374401334 * AcceptedCmp20  +     0.25403314478809 *
4141523   +        AcceptedCmp30  +    -1.26365534513909 * AcceptedCmp40
4141524   +          +    -0.93574993035227 * AcceptedCmp50  +    -0.01475423275475 *
4141525   +        Complain0  +     0.99152563511102 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.39456977652419 * AcceptedCmp10 + -0.35607374401334 
* AcceptedCmp20 + 0.25403314478809 * AcceptedCmp30 + -1.26365534513909 * AcceptedCmp40 + 
-0.93574993035227 * AcceptedCmp50 + -0.01475423275475 * Complain0 + 0.99152563511102 * 
HigherEducationBinary0 ;
4141526   +   H1x3_5  = H1x3_5  +    -1.26373480748972 * AcceptedCmp10
4141527   +          +     0.14485593883591 * AcceptedCmp20  +     -0.0764980824216 *
4141528   +        AcceptedCmp30  +    -1.03297576023738 * AcceptedCmp40
4141529   +          +    -1.10199278454673 * AcceptedCmp50  +     0.92040879426753 *
4141530   +        Complain0  +     0.19845951543481 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.26373480748972 * AcceptedCmp10 + 0.14485593883591 * 
AcceptedCmp20 + -0.0764980824216 * AcceptedCmp30 + -1.03297576023738 * AcceptedCmp40 + 
-1.10199278454673 * AcceptedCmp50 + 0.92040879426753 * Complain0 + 0.19845951543481 * 
HigherEducationBinary0 ;
4141531   +   H1x3_1  = H1x3_1  +     0.21888802927361 * Education2n_Cycle
4141532   +          +    -1.88729117459232 * EducationBasic  +    -0.23163049582765 *
4141533   +        EducationGraduation  +     0.46887304015863 * EducationMaster
4141534   +          +     1.33953173091973 * Marital_StatusDivorced
4141535   +          +    -0.26253208073262 * Marital_StatusMarried
4141536   +          +    -0.00960552682431 * Marital_StatusSingle
4141537   +          +     1.02851334153667 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.21888802927361 * Education2n_Cycle + 
-1.88729117459232 * EducationBasic + -0.23163049582765 * EducationGraduation + 
0.46887304015863 * EducationMaster + 1.33953173091973 * Marital_StatusDivorced + 
-0.26253208073262 * Marital_StatusMarried + -0.00960552682431 * Marital_StatusSingle + 
1.02851334153667 * Marital_StatusTogether ;
4141538   +   H1x3_2  = H1x3_2  +     2.36701652448958 * Education2n_Cycle
4141539   +          +     0.64894060487321 * EducationBasic  +     -1.2851019467738 *
4141540   +        EducationGraduation  +     1.05325310300372 * EducationMaster
4141541   +          +     1.43150850334311 * Marital_StatusDivorced
4141542   +          +    -0.69239127844934 * Marital_StatusMarried
4141543   +          +     2.08477562471559 * Marital_StatusSingle
4141544   +          +    -1.55945531486837 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 2.36701652448958 * Education2n_Cycle + 
0.64894060487321 * EducationBasic + -1.2851019467738 * EducationGraduation + 1.05325310300372 
* EducationMaster + 1.43150850334311 * Marital_StatusDivorced + -0.69239127844934 * 
Marital_StatusMarried + 2.08477562471559 * Marital_StatusSingle + -1.55945531486837 * 
Marital_StatusTogether ;
4141545   +   H1x3_3  = H1x3_3  +    -0.07588279976612 * Education2n_Cycle
4141546   +          +    -1.60804492005984 * EducationBasic  +     0.15348594453976 *
4141547   +        EducationGraduation  +     1.80436924796338 * EducationMaster
4141548   +          +     1.08387556786168 * Marital_StatusDivorced
4141549   +          +      1.0283506000217 * Marital_StatusMarried
4141550   +          +    -0.87069431107983 * Marital_StatusSingle
4141551   +          +    -0.04455113729262 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.07588279976612 * Education2n_Cycle + 
-1.60804492005984 * EducationBasic + 0.15348594453976 * EducationGraduation + 1.80436924796338 
* EducationMaster + 1.08387556786168 * Marital_StatusDivorced + 1.0283506000217 * 
Marital_StatusMarried + -0.87069431107983 * Marital_StatusSingle + -0.04455113729262 * 
Marital_StatusTogether ;
4141552   +   H1x3_4  = H1x3_4  +    -0.24072826180906 * Education2n_Cycle
4141553   +          +     0.56372511932643 * EducationBasic  +    -1.72914870390939 *
4141554   +        EducationGraduation  +    -1.53859265107051 * EducationMaster
4141555   +          +      -1.347780188307 * Marital_StatusDivorced
4141556   +          +    -0.53911983240372 * Marital_StatusMarried
4141557   +          +     0.22083074159185 * Marital_StatusSingle
4141558   +          +     0.46023807391468 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.24072826180906 * Education2n_Cycle + 
0.56372511932643 * EducationBasic + -1.72914870390939 * EducationGraduation + 
-1.53859265107051 * EducationMaster + -1.347780188307 * Marital_StatusDivorced + 
-0.53911983240372 * Marital_StatusMarried + 0.22083074159185 * Marital_StatusSingle + 
0.46023807391468 * Marital_StatusTogether ;
4141559   +   H1x3_5  = H1x3_5  +    -0.72917301249658 * Education2n_Cycle
4141560   +          +     0.78780526232794 * EducationBasic  +     0.22244378874589 *
4141561   +        EducationGraduation  +      1.6087631135774 * EducationMaster
4141562   +          +     1.46582538311384 * Marital_StatusDivorced
4141563   +          +     0.05256161016002 * Marital_StatusMarried
4141564   +          +    -1.21402967626877 * Marital_StatusSingle
4141565   +          +     0.88645860928281 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -0.72917301249658 * Education2n_Cycle + 
0.78780526232794 * EducationBasic + 0.22244378874589 * EducationGraduation + 1.6087631135774 * 
EducationMaster + 1.46582538311384 * Marital_StatusDivorced + 0.05256161016002 * 
Marital_StatusMarried + -1.21402967626877 * Marital_StatusSingle + 0.88645860928281 * 
Marital_StatusTogether ;
4141566   +   H1x3_1  =     0.88456831875399 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.88456831875399 + H1x3_1 ;
4141567   +   H1x3_2  =    -0.97118571845853 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.97118571845853 + H1x3_2 ;
4141568   +   H1x3_3  =    -0.79264210370105 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.79264210370105 + H1x3_3 ;
4141569   +   H1x3_4  =     0.02838267530757 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.02838267530757 + H1x3_4 ;
4141570   +   H1x3_5  =      0.6575544901332 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.6575544901332 + H1x3_5 ;
4141571   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4141572   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4141573   +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
4141574   +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
4141575   +   H1x3_3  = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_3 = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
4141576   +   H1x3_4  = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
4141577   +   H1x3_5  = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_5 = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
4141578   +END;
MPRINT(EM_DIAGRAM):   END;
4141579   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4141580   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
4141581   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
4141582   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
4141583   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
4141584   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
4141585   +END;
MPRINT(EM_DIAGRAM):   END;
4141586   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4141587   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
4141588   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4141589   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4141590   +   H2x1_1  =    -0.87888588976745 * H1x1_1  +     2.90335871970001 * H1x1_2
4141591   +          +     3.56892082037266 * H1x1_3  +    -2.73992780705083 * H1x1_4
4141592   +          +     1.85087845133324 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.87888588976745 * H1x1_1 + 2.90335871970001 * H1x1_2 + 
3.56892082037266 * H1x1_3 + -2.73992780705083 * H1x1_4 + 1.85087845133324 * H1x1_5 ;
4141593   +   H2x1_2  =    -0.58574259841126 * H1x1_1  +    -0.21734849016798 * H1x1_2
4141594   +          +    -0.25911074181081 * H1x1_3  +    -0.42608313525243 * H1x1_4
4141595   +          +      0.0572264965726 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.58574259841126 * H1x1_1 + -0.21734849016798 * H1x1_2 + 
-0.25911074181081 * H1x1_3 + -0.42608313525243 * H1x1_4 + 0.0572264965726 * H1x1_5 ;
4141596   +   H2x1_3  =     -3.4245103090892 * H1x1_1  +     2.39148442791109 * H1x1_2
4141597   +          +     2.40633993926864 * H1x1_3  +    -0.39116314741561 * H1x1_4
4141598   +          +     1.55940137045446 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -3.4245103090892 * H1x1_1 + 2.39148442791109 * H1x1_2 + 
2.40633993926864 * H1x1_3 + -0.39116314741561 * H1x1_4 + 1.55940137045446 * H1x1_5 ;
4141599   +   H2x1_4  =     4.40552826823228 * H1x1_1  +    -2.22667369285426 * H1x1_2
4141600   +          +    -4.36956996992936 * H1x1_3  +     5.07833758885145 * H1x1_4
4141601   +          +    -3.71745000855391 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 4.40552826823228 * H1x1_1 + -2.22667369285426 * H1x1_2 + 
-4.36956996992936 * H1x1_3 + 5.07833758885145 * H1x1_4 + -3.71745000855391 * H1x1_5 ;
4141602   +   H2x1_1  = H2x1_1  +     2.57417055243767 * H1x2_1
4141603   +          +     0.83648749576123 * H1x2_2  +     0.89390090173338 * H1x2_3
4141604   +          +     0.64981014833304 * H1x2_4  +    -0.52148329192172 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 2.57417055243767 * H1x2_1 + 0.83648749576123 * H1x2_2 
+ 0.89390090173338 * H1x2_3 + 0.64981014833304 * H1x2_4 + -0.52148329192172 * H1x2_5 ;
4141605   +   H2x1_2  = H2x1_2  +      0.0180888989385 * H1x2_1
4141606   +          +    -0.80823823488019 * H1x2_2  +    -0.28763491232907 * H1x2_3
4141607   +          +     0.25846928082637 * H1x2_4  +    -0.90191452174928 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.0180888989385 * H1x2_1 + -0.80823823488019 * H1x2_2 
+ -0.28763491232907 * H1x2_3 + 0.25846928082637 * H1x2_4 + -0.90191452174928 * H1x2_5 ;
4141608   +   H2x1_3  = H2x1_3  +     1.14009879940491 * H1x2_1
4141609   +          +    -0.40787680915084 * H1x2_2  +     0.07284828777988 * H1x2_3
4141610   +          +     0.36049016529857 * H1x2_4  +    -1.18138631855392 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.14009879940491 * H1x2_1 + -0.40787680915084 * H1x2_2 
+ 0.07284828777988 * H1x2_3 + 0.36049016529857 * H1x2_4 + -1.18138631855392 * H1x2_5 ;
4141611   +   H2x1_4  = H2x1_4  +     -0.1178430666715 * H1x2_1
4141612   +          +     2.09065650924536 * H1x2_2  +     1.04148055725421 * H1x2_3
4141613   +          +     0.02606984862898 * H1x2_4  +     0.31973150706209 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.1178430666715 * H1x2_1 + 2.09065650924536 * H1x2_2 
+ 1.04148055725421 * H1x2_3 + 0.02606984862898 * H1x2_4 + 0.31973150706209 * H1x2_5 ;
4141614   +   H2x1_1  = H2x1_1  +     0.37589541636702 * H1x3_1
4141615   +          +    -1.02452495514201 * H1x3_2  +     0.44765211805329 * H1x3_3
4141616   +          +    -1.35647342372032 * H1x3_4  +     -0.6490399229487 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.37589541636702 * H1x3_1 + -1.02452495514201 * H1x3_2 
+ 0.44765211805329 * H1x3_3 + -1.35647342372032 * H1x3_4 + -0.6490399229487 * H1x3_5 ;
4141617   +   H2x1_2  = H2x1_2  +      -1.910747593267 * H1x3_1
4141618   +          +     1.91313714874593 * H1x3_2  +     0.89010950185557 * H1x3_3
4141619   +          +     1.16258612173237 * H1x3_4  +     0.67062728470341 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.910747593267 * H1x3_1 + 1.91313714874593 * H1x3_2 + 
0.89010950185557 * H1x3_3 + 1.16258612173237 * H1x3_4 + 0.67062728470341 * H1x3_5 ;
4141620   +   H2x1_3  = H2x1_3  +    -0.61933600446437 * H1x3_1
4141621   +          +     1.71790550668732 * H1x3_2  +     0.54214423164791 * H1x3_3
4141622   +          +     1.23934237110052 * H1x3_4  +     -0.5426823885329 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.61933600446437 * H1x3_1 + 1.71790550668732 * H1x3_2 
+ 0.54214423164791 * H1x3_3 + 1.23934237110052 * H1x3_4 + -0.5426823885329 * H1x3_5 ;
4141623   +   H2x1_4  = H2x1_4  +     0.63501991890118 * H1x3_1
4141624   +          +     0.52608732282548 * H1x3_2  +     1.05849455171994 * H1x3_3
4141625   +          +    -0.10988994454917 * H1x3_4  +     -0.4296682351699 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.63501991890118 * H1x3_1 + 0.52608732282548 * H1x3_2 
+ 1.05849455171994 * H1x3_3 + -0.10988994454917 * H1x3_4 + -0.4296682351699 * H1x3_5 ;
4141626   +   H2x1_1  =     1.65760855975376 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.65760855975376 + H2x1_1 ;
4141627   +   H2x1_2  =    -1.48092067999918 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.48092067999918 + H2x1_2 ;
4141628   +   H2x1_3  =     0.34293203475136 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.34293203475136 + H2x1_3 ;
4141629   +   H2x1_4  =     2.26730807690838 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.26730807690838 + H2x1_4 ;
4141630   +   H2x1_5  = 0;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0;
4141631   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 );
4141632   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4141633   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
4141634   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
4141635   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
4141636   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
4141637   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
4141638   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
4141639   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
4141640   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
4141641   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
4141642   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
4141643   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
4141644   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
4141645   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
4141646   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
4141647   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
4141648   +END;
MPRINT(EM_DIAGRAM):   END;
4141649   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4141650   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
4141651   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
4141652   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
4141653   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
4141654   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
4141655   +END;
MPRINT(EM_DIAGRAM):   END;
4141656   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4141657   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
4141658   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4141659   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4141660   +   H2x2_1  =     0.35487648363729 * H1x1_1  +    -1.23352844324567 * H1x1_2
4141661   +          +      0.4867158313468 * H1x1_3  +    -1.47292809903753 * H1x1_4
4141662   +          +    -1.00833023262854 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.35487648363729 * H1x1_1 + -1.23352844324567 * H1x1_2 + 
0.4867158313468 * H1x1_3 + -1.47292809903753 * H1x1_4 + -1.00833023262854 * H1x1_5 ;
4141663   +   H2x2_2  =     1.32087363094324 * H1x1_1  +     0.82502983555141 * H1x1_2
4141664   +          +    -0.68621854188154 * H1x1_3  +     1.98219533394448 * H1x1_4
4141665   +          +     0.24099626891211 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.32087363094324 * H1x1_1 + 0.82502983555141 * H1x1_2 + 
-0.68621854188154 * H1x1_3 + 1.98219533394448 * H1x1_4 + 0.24099626891211 * H1x1_5 ;
4141666   +   H2x2_3  =     1.19516705715854 * H1x1_1  +    -0.20476587977538 * H1x1_2
4141667   +          +    -2.69435199012833 * H1x1_3  +      1.1085509496662 * H1x1_4
4141668   +          +    -0.95845782501191 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.19516705715854 * H1x1_1 + -0.20476587977538 * H1x1_2 + 
-2.69435199012833 * H1x1_3 + 1.1085509496662 * H1x1_4 + -0.95845782501191 * H1x1_5 ;
4141669   +   H2x2_4  =     0.80435775915951 * H1x1_1  +     1.81751702761299 * H1x1_2
4141670   +          +     0.07722876002556 * H1x1_3  +    -0.41957373993392 * H1x1_4
4141671   +          +    -1.39341356039439 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.80435775915951 * H1x1_1 + 1.81751702761299 * H1x1_2 + 
0.07722876002556 * H1x1_3 + -0.41957373993392 * H1x1_4 + -1.39341356039439 * H1x1_5 ;
4141672   +   H2x2_1  = H2x2_1  +     0.84230993439042 * H1x2_1
4141673   +          +      1.4931541058726 * H1x2_2  +     0.29113033361443 * H1x2_3
4141674   +          +     0.58117372781043 * H1x2_4  +     0.21183820652904 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.84230993439042 * H1x2_1 + 1.4931541058726 * H1x2_2 + 
0.29113033361443 * H1x2_3 + 0.58117372781043 * H1x2_4 + 0.21183820652904 * H1x2_5 ;
4141675   +   H2x2_2  = H2x2_2  +     0.27560928585641 * H1x2_1
4141676   +          +     1.00352880610395 * H1x2_2  +     1.86342723621296 * H1x2_3
4141677   +          +     0.68698974361713 * H1x2_4  +     1.62443344475228 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.27560928585641 * H1x2_1 + 1.00352880610395 * H1x2_2 
+ 1.86342723621296 * H1x2_3 + 0.68698974361713 * H1x2_4 + 1.62443344475228 * H1x2_5 ;
4141678   +   H2x2_3  = H2x2_3  +     0.59362453125998 * H1x2_1
4141679   +          +     2.21434215943762 * H1x2_2  +     0.00697391860503 * H1x2_3
4141680   +          +     0.52298455671378 * H1x2_4  +    -1.36319907473823 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.59362453125998 * H1x2_1 + 2.21434215943762 * H1x2_2 
+ 0.00697391860503 * H1x2_3 + 0.52298455671378 * H1x2_4 + -1.36319907473823 * H1x2_5 ;
4141681   +   H2x2_4  = H2x2_4  +     0.87949581153547 * H1x2_1
4141682   +          +     0.52867495476492 * H1x2_2  +    -0.30823702050003 * H1x2_3
4141683   +          +     1.30732992472712 * H1x2_4  +    -0.93335113891701 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.87949581153547 * H1x2_1 + 0.52867495476492 * H1x2_2 
+ -0.30823702050003 * H1x2_3 + 1.30732992472712 * H1x2_4 + -0.93335113891701 * H1x2_5 ;
4141684   +   H2x2_1  = H2x2_1  +    -0.18546949662618 * H1x3_1
4141685   +          +     0.12449215628678 * H1x3_2  +    -0.06904718348363 * H1x3_3
4141686   +          +     1.64236464165721 * H1x3_4  +      0.6073731959408 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.18546949662618 * H1x3_1 + 0.12449215628678 * H1x3_2 
+ -0.06904718348363 * H1x3_3 + 1.64236464165721 * H1x3_4 + 0.6073731959408 * H1x3_5 ;
4141687   +   H2x2_2  = H2x2_2  +    -0.65604349417832 * H1x3_1
4141688   +          +    -0.36719791640957 * H1x3_2  +     0.13320126120657 * H1x3_3
4141689   +          +     0.18159276955134 * H1x3_4  +     2.58327741985853 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.65604349417832 * H1x3_1 + -0.36719791640957 * 
H1x3_2 + 0.13320126120657 * H1x3_3 + 0.18159276955134 * H1x3_4 + 2.58327741985853 * H1x3_5 ;
4141690   +   H2x2_3  = H2x2_3  +     0.91638163706166 * H1x3_1
4141691   +          +    -0.47067218080648 * H1x3_2  +    -1.48968450897101 * H1x3_3
4141692   +          +     1.31187282169231 * H1x3_4  +     -0.2874693423684 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.91638163706166 * H1x3_1 + -0.47067218080648 * H1x3_2 
+ -1.48968450897101 * H1x3_3 + 1.31187282169231 * H1x3_4 + -0.2874693423684 * H1x3_5 ;
4141693   +   H2x2_4  = H2x2_4  +     0.53560065193109 * H1x3_1
4141694   +          +    -1.15405943087628 * H1x3_2  +     0.12331054856276 * H1x3_3
4141695   +          +     -1.4665768024733 * H1x3_4  +    -0.08015819920106 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.53560065193109 * H1x3_1 + -1.15405943087628 * H1x3_2 
+ 0.12331054856276 * H1x3_3 + -1.4665768024733 * H1x3_4 + -0.08015819920106 * H1x3_5 ;
4141696   +   H2x2_1  =     1.14294113680807 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.14294113680807 + H2x2_1 ;
4141697   +   H2x2_2  =     0.23029998902452 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.23029998902452 + H2x2_2 ;
4141698   +   H2x2_3  =     0.09214575938404 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.09214575938404 + H2x2_3 ;
4141699   +   H2x2_4  =    -1.18247593420886 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -1.18247593420886 + H2x2_4 ;
4141700   +   H2x2_5  = 0;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0;
4141701   +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 );
4141702   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4141703   +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
4141704   +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
4141705   +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
4141706   +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
4141707   +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
4141708   +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
4141709   +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
4141710   +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
4141711   +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
4141712   +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
4141713   +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
4141714   +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
4141715   +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
4141716   +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
4141717   +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
4141718   +END;
MPRINT(EM_DIAGRAM):   END;
4141719   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4141720   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
4141721   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
4141722   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
4141723   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
4141724   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
4141725   +END;
MPRINT(EM_DIAGRAM):   END;
4141726   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4141727   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
4141728   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4141729   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4141730   +   H3x1_1  =     0.38781845364667 * H2x1_1  +    -1.29333236344932 * H2x1_2
4141731   +          +    -0.39452648844304 * H2x1_3  +    -1.74269898056816 * H2x1_4
4141732   +          +     0.80663208970159 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.38781845364667 * H2x1_1 + -1.29333236344932 * H2x1_2 + 
-0.39452648844304 * H2x1_3 + -1.74269898056816 * H2x1_4 + 0.80663208970159 * H2x1_5 ;
4141733   +   H3x1_2  =     3.42138045838852 * H2x1_1  +    -2.53755815247586 * H2x1_2
4141734   +          +     1.21718290783021 * H2x1_3  +    -5.59742312960418 * H2x1_4
4141735   +          +     0.93331767575635 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 3.42138045838852 * H2x1_1 + -2.53755815247586 * H2x1_2 + 
1.21718290783021 * H2x1_3 + -5.59742312960418 * H2x1_4 + 0.93331767575635 * H2x1_5 ;
4141736   +   H3x1_3  =      0.3066875685513 * H2x1_1  +     0.06212172151661 * H2x1_2
4141737   +          +     0.54975837436313 * H2x1_3  +    -2.01758242649336 * H2x1_4
4141738   +          +     -1.5405169528484 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.3066875685513 * H2x1_1 + 0.06212172151661 * H2x1_2 + 
0.54975837436313 * H2x1_3 + -2.01758242649336 * H2x1_4 + -1.5405169528484 * H2x1_5 ;
4141739   +   H3x1_4  =     0.75238654454663 * H2x1_1  +      0.8605688517794 * H2x1_2
4141740   +          +    -1.18675726977521 * H2x1_3  +    -0.23106123144614 * H2x1_4
4141741   +          +    -0.26022301590207 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.75238654454663 * H2x1_1 + 0.8605688517794 * H2x1_2 + 
-1.18675726977521 * H2x1_3 + -0.23106123144614 * H2x1_4 + -0.26022301590207 * H2x1_5 ;
4141742   +   H3x1_1  = H3x1_1  +     -1.9857802180333 * H2x2_1
4141743   +          +    -1.83746541265988 * H2x2_2  +    -0.19991218509663 * H2x2_3
4141744   +          +    -1.16358880876987 * H2x2_4  +     0.72072728861384 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -1.9857802180333 * H2x2_1 + -1.83746541265988 * H2x2_2 
+ -0.19991218509663 * H2x2_3 + -1.16358880876987 * H2x2_4 + 0.72072728861384 * H2x2_5 ;
4141745   +   H3x1_2  = H3x1_2  +     0.96937540396367 * H2x2_1
4141746   +          +    -0.36649624165623 * H2x2_2  +     0.89618563330616 * H2x2_3
4141747   +          +    -0.84224721075989 * H2x2_4  +     0.43309698013395 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.96937540396367 * H2x2_1 + -0.36649624165623 * H2x2_2 
+ 0.89618563330616 * H2x2_3 + -0.84224721075989 * H2x2_4 + 0.43309698013395 * H2x2_5 ;
4141748   +   H3x1_3  = H3x1_3  +    -0.90225214765586 * H2x2_1
4141749   +          +     0.02136319386846 * H2x2_2  +    -0.46868394918483 * H2x2_3
4141750   +          +     0.56005845701528 * H2x2_4  +     -1.2510120440755 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.90225214765586 * H2x2_1 + 0.02136319386846 * H2x2_2 
+ -0.46868394918483 * H2x2_3 + 0.56005845701528 * H2x2_4 + -1.2510120440755 * H2x2_5 ;
4141751   +   H3x1_4  = H3x1_4  +    -0.50993520854009 * H2x2_1
4141752   +          +    -2.07093806498525 * H2x2_2  +      0.4129198676448 * H2x2_3
4141753   +          +     0.26049404756746 * H2x2_4  +     2.51376895456424 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + -0.50993520854009 * H2x2_1 + -2.07093806498525 * 
H2x2_2 + 0.4129198676448 * H2x2_3 + 0.26049404756746 * H2x2_4 + 2.51376895456424 * H2x2_5 ;
4141754   +   H3x1_1  =    -0.83299285935592 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.83299285935592 + H3x1_1 ;
4141755   +   H3x1_2  =     1.30330978853872 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 1.30330978853872 + H3x1_2 ;
4141756   +   H3x1_3  =    -2.12788819064089 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -2.12788819064089 + H3x1_3 ;
4141757   +   H3x1_4  =    -2.20240058017016 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -2.20240058017016 + H3x1_4 ;
4141758   +   H3x1_5  = 0;
MPRINT(EM_DIAGRAM):   H3x1_5 = 0;
4141759   +   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 );
4141760   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4141761   +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
4141762   +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
4141763   +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
4141764   +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
4141765   +   H3x1_3  = EXP(H3x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_3 = EXP(H3x1_3 - _MAX_);
4141766   +   _SUM_ = _SUM_ + H3x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_3 ;
4141767   +   H3x1_4  = EXP(H3x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_4 = EXP(H3x1_4 - _MAX_);
4141768   +   _SUM_ = _SUM_ + H3x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_4 ;
4141769   +   H3x1_5  = EXP(H3x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_5 = EXP(H3x1_5 - _MAX_);
4141770   +   _SUM_ = _SUM_ + H3x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_5 ;
4141771   +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
4141772   +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
4141773   +   H3x1_3  = H3x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 / _SUM_;
4141774   +   H3x1_4  = H3x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 / _SUM_;
4141775   +   H3x1_5  = H3x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 / _SUM_;
4141776   +END;
MPRINT(EM_DIAGRAM):   END;
4141777   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4141778   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
4141779   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
4141780   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
4141781   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
4141782   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
4141783   +END;
MPRINT(EM_DIAGRAM):   END;
4141784   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4141785   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4141786   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4141787   +
4141788   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
4141789   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
4141790   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4141791   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
4141792   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
4141793   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4141794   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
4141795   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4141796   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4141797   +end;
MPRINT(EM_DIAGRAM):   end;
4141798   +else do;
MPRINT(EM_DIAGRAM):   else do;
4141799   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
4141800   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
4141801   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
4141802   +   end;
MPRINT(EM_DIAGRAM):   end;
4141803   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
4141804   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
4141805   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
4141806   +   end;
MPRINT(EM_DIAGRAM):   end;
4141807   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4141808   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4141809   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4141810   +   end;
MPRINT(EM_DIAGRAM):   end;
4141811   +end;
MPRINT(EM_DIAGRAM):   end;
4141812   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4141813   +   P_DepVar1  =     0.02793808059597 * H3x1_1  +    -8.41365271594755 * H3x1_2
4141814   +          +    -0.18933524733979 * H3x1_3  +     1.61020422729446 * H3x1_4
4141815   +          +     7.51494112828021 * H3x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.02793808059597 * H3x1_1 + -8.41365271594755 * H3x1_2 + 
-0.18933524733979 * H3x1_3 + 1.61020422729446 * H3x1_4 + 7.51494112828021 * H3x1_5 ;
4141816   +   P_DepVar1  =     0.83962115399384 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.83962115399384 + P_DepVar1 ;
4141817   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4141818   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4141819   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4141820   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4141821   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4141822   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4141823   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4141824   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4141825   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4141826   +END;
MPRINT(EM_DIAGRAM):   END;
4141827   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4141828   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4141829   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4141830   +END;
MPRINT(EM_DIAGRAM):   END;
4141831   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4141832   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4141833   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4141834   +END;
MPRINT(EM_DIAGRAM):   END;
4141835   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
4141836   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
4141837   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
4141838   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
4141839   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
4141840   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
4141841   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
4141842   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4141843   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4141844   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4141845   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4141846   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4141847   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4141848   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4141849   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4141850   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4141851   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4141852   +END;
MPRINT(EM_DIAGRAM):   END;
4141853   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4141854   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4141855   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4141856   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
4141857   +* Renaming variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural10;
4141858   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4141859   +* Renaming Posterior variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural10;
4141860   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4141861   +drop AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar1;
4141862   +AutoNeural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar1 = P_DepVar1;
4141863   +drop AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar0;
4141864   +AutoNeural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar0 = P_DepVar0;
4141865   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4141866   +* Renaming Into variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural10;
4141867   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4141868   +length AutoNeural10_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural10_I_DepVar $32;
4141869   +drop AutoNeural10_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_I_DepVar;
4141870   +AutoNeural10_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural10_I_DepVar = I_DepVar;
4141871   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4141872   +* Renaming _WARN_ variable for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural10;
4141873   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4141874   +length AutoNeural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural10_WARN_ $4;
4141875   +drop AutoNeural10_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_WARN_;
4141876   +AutoNeural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural10_WARN_ = _WARN_;
4141877   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4141878   +* Ensmbl38: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Scoring Code of model 5 of 7;
4141879   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4141880   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4141881   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
4141882   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
4141883   +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
4141884   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4141885   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4141886   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4141887   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4141888   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4141889   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4141890   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4141891   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4141892   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4141893   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4141894   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4141895   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4141896   +LENGTH _WARN_ $4
4141897   +      F_DepVar  $ 12
4141898   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
4141899   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4141900   +
4141901   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4141902   +
4141903   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4141904   +
4141905   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4141906   +
4141907   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4141908   +
4141909   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4141910   +
4141911   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4141912   +
4141913   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4141914   +
4141915   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4141916   +
4141917   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4141918   +
4141919   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4141920   +
4141921   +      label S_MntWines = 'Standard: MntWines' ;
The SAS System

MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4141922   +
4141923   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4141924   +
4141925   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4141926   +
4141927   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4141928   +
4141929   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4141930   +
4141931   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4141932   +
4141933   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4141934   +
4141935   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4141936   +
4141937   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4141938   +
4141939   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4141940   +
4141941   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4141942   +
4141943   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4141944   +
4141945   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4141946   +
4141947   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4141948   +
4141949   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4141950   +
4141951   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4141952   +
4141953   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4141954   +
4141955   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4141956   +
4141957   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4141958   +
4141959   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4141960   +
4141961   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4141962   +
4141963   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4141964   +
4141965   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4141966   +
4141967   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4141968   +
4141969   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4141970   +
4141971   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4141972   +
4141973   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4141974   +
4141975   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4141976   +
4141977   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4141978   +
4141979   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
4141980   +
4141981   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
4141982   +
4141983   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4141984   +
4141985   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4141986   +
4141987   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4141988   +
4141989   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4141990   +
4141991   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
4141992   +
4141993   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4141994   +
4141995   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
4141996   +
4141997   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4141998   +
4141999   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4142000   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4142001   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4142002   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4142003   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4142004   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4142005   +end;
MPRINT(EM_DIAGRAM):   end;
4142006   +else do;
MPRINT(EM_DIAGRAM):   else do;
4142007   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4142008   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4142009   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4142010   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4142011   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4142012   +   end;
MPRINT(EM_DIAGRAM):   end;
4142013   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4142014   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4142015   +   end;
MPRINT(EM_DIAGRAM):   end;
4142016   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4142017   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4142018   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4142019   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4142020   +   end;
MPRINT(EM_DIAGRAM):   end;
4142021   +end;
MPRINT(EM_DIAGRAM):   end;
4142022   +
4142023   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4142024   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4142025   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4142026   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4142027   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4142028   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4142029   +end;
MPRINT(EM_DIAGRAM):   end;
4142030   +else do;
MPRINT(EM_DIAGRAM):   else do;
4142031   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4142032   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4142033   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4142034   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4142035   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4142036   +   end;
MPRINT(EM_DIAGRAM):   end;
4142037   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4142038   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4142039   +   end;
MPRINT(EM_DIAGRAM):   end;
4142040   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4142041   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4142042   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4142043   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4142044   +   end;
MPRINT(EM_DIAGRAM):   end;
4142045   +end;
MPRINT(EM_DIAGRAM):   end;
4142046   +
4142047   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4142048   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4142049   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4142050   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4142051   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4142052   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4142053   +end;
MPRINT(EM_DIAGRAM):   end;
4142054   +else do;
MPRINT(EM_DIAGRAM):   else do;
4142055   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4142056   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4142057   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4142058   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4142059   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4142060   +   end;
MPRINT(EM_DIAGRAM):   end;
4142061   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4142062   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4142063   +   end;
MPRINT(EM_DIAGRAM):   end;
4142064   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4142065   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4142066   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4142067   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4142068   +   end;
MPRINT(EM_DIAGRAM):   end;
4142069   +end;
MPRINT(EM_DIAGRAM):   end;
4142070   +
4142071   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4142072   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4142073   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4142074   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4142075   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4142076   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4142077   +end;
MPRINT(EM_DIAGRAM):   end;
4142078   +else do;
MPRINT(EM_DIAGRAM):   else do;
4142079   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4142080   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4142081   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4142082   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4142083   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4142084   +   end;
MPRINT(EM_DIAGRAM):   end;
4142085   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4142086   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4142087   +   end;
MPRINT(EM_DIAGRAM):   end;
4142088   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4142089   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4142090   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4142091   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4142092   +   end;
MPRINT(EM_DIAGRAM):   end;
4142093   +end;
MPRINT(EM_DIAGRAM):   end;
4142094   +
4142095   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4142096   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4142097   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4142098   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4142099   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4142100   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4142101   +end;
MPRINT(EM_DIAGRAM):   end;
4142102   +else do;
MPRINT(EM_DIAGRAM):   else do;
4142103   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4142104   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4142105   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4142106   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4142107   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4142108   +   end;
MPRINT(EM_DIAGRAM):   end;
4142109   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4142110   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4142111   +   end;
MPRINT(EM_DIAGRAM):   end;
4142112   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4142113   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4142114   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4142115   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4142116   +   end;
MPRINT(EM_DIAGRAM):   end;
4142117   +end;
MPRINT(EM_DIAGRAM):   end;
4142118   +
4142119   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4142120   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4142121   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4142122   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4142123   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4142124   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4142125   +end;
MPRINT(EM_DIAGRAM):   end;
4142126   +else do;
MPRINT(EM_DIAGRAM):   else do;
4142127   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4142128   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4142129   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4142130   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4142131   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4142132   +   end;
MPRINT(EM_DIAGRAM):   end;
4142133   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4142134   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4142135   +   end;
MPRINT(EM_DIAGRAM):   end;
4142136   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4142137   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4142138   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4142139   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4142140   +   end;
MPRINT(EM_DIAGRAM):   end;
4142141   +end;
MPRINT(EM_DIAGRAM):   end;
4142142   +
4142143   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4142144   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4142145   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4142146   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4142147   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4142148   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4142149   +end;
MPRINT(EM_DIAGRAM):   end;
4142150   +else do;
MPRINT(EM_DIAGRAM):   else do;
4142151   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4142152   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4142153   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4142154   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4142155   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4142156   +   end;
MPRINT(EM_DIAGRAM):   end;
4142157   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4142158   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4142159   +   end;
MPRINT(EM_DIAGRAM):   end;
4142160   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4142161   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4142162   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4142163   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4142164   +   end;
MPRINT(EM_DIAGRAM):   end;
4142165   +end;
MPRINT(EM_DIAGRAM):   end;
4142166   +
4142167   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4142168   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
4142169   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4142170   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4142171   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4142172   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4142173   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4142174   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4142175   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4142176   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4142177   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4142178   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4142179   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4142180   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4142181   +end;
MPRINT(EM_DIAGRAM):   end;
4142182   +else do;
MPRINT(EM_DIAGRAM):   else do;
4142183   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4142184   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4142185   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4142186   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4142187   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4142188   +   end;
MPRINT(EM_DIAGRAM):   end;
4142189   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4142190   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4142191   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4142192   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4142193   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4142194   +   end;
MPRINT(EM_DIAGRAM):   end;
4142195   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4142196   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4142197   +   end;
MPRINT(EM_DIAGRAM):   end;
4142198   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4142199   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4142200   +   end;
MPRINT(EM_DIAGRAM):   end;
4142201   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4142202   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4142203   +   end;
MPRINT(EM_DIAGRAM):   end;
4142204   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4142205   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4142206   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4142207   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4142208   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4142209   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4142210   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4142211   +   end;
MPRINT(EM_DIAGRAM):   end;
4142212   +end;
MPRINT(EM_DIAGRAM):   end;
4142213   +
4142214   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4142215   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4142216   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
4142217   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4142218   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4142219   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4142220   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4142221   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4142222   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4142223   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4142224   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4142225   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4142226   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4142227   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4142228   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4142229   +end;
MPRINT(EM_DIAGRAM):   end;
4142230   +else do;
MPRINT(EM_DIAGRAM):   else do;
4142231   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4142232   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4142233   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4142234   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4142235   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4142236   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4142237   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4142238   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4142239   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4142240   +         end;
MPRINT(EM_DIAGRAM):   end;
4142241   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4142242   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4142243   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4142244   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4142245   +            end;
MPRINT(EM_DIAGRAM):   end;
4142246   +         end;
MPRINT(EM_DIAGRAM):   end;
4142247   +      end;
MPRINT(EM_DIAGRAM):   end;
4142248   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4142249   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4142250   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4142251   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4142252   +         end;
MPRINT(EM_DIAGRAM):   end;
4142253   +      end;
MPRINT(EM_DIAGRAM):   end;
4142254   +   end;
MPRINT(EM_DIAGRAM):   end;
4142255   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4142256   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4142257   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4142258   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4142259   +      end;
MPRINT(EM_DIAGRAM):   end;
4142260   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4142261   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4142262   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4142263   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4142264   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4142265   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4142266   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4142267   +         end;
MPRINT(EM_DIAGRAM):   end;
4142268   +      end;
MPRINT(EM_DIAGRAM):   end;
4142269   +   end;
MPRINT(EM_DIAGRAM):   end;
4142270   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4142271   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4142272   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4142273   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4142274   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4142275   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4142276   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4142277   +   end;
MPRINT(EM_DIAGRAM):   end;
4142278   +end;
MPRINT(EM_DIAGRAM):   end;
4142279   +
4142280   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4142281   +*** Checking missing input Interval
4142282   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4142283   +
4142284   +IF NMISS(
4142285   +   AcceptedCmpTotal ,
4142286   +   Age ,
4142287   +   Frq ,
4142288   +   Income ,
4142289   +   Kidhome ,
4142290   +   Mnt ,
4142291   +   MntFishProducts ,
4142292   +   MntFruits ,
4142293   +   MntGoldProds ,
4142294   +   MntMeatProducts ,
4142295   +   MntSweetProducts ,
4142296   +   MntWines ,
4142297   +   MonthsAsCustomer ,
4142298   +   NumCatalogPurchases ,
4142299   +   NumDealsPurchases ,
4142300   +   NumDistPurchases ,
4142301   +   NumStorePurchases ,
4142302   +   NumWebPurchases ,
4142303   +   NumWebVisitsMonth ,
4142304   +   RFMstat ,
4142305   +   RMntFrq ,
4142306   +   Recency ,
4142307   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
4142308   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4142309   +
4142310   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4142311   +END;
MPRINT(EM_DIAGRAM):   END;
4142312   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4142313   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4142314   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4142315   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4142316   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4142317   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
4142318   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4142319   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4142320   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4142321   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4142322   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4142323   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4142324   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
4142325   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4142326   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4142327   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4142328   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4142329   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
4142330   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4142331   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
4142332   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4142333   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4142334   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
4142335   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4142336   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
4142337   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4142338   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
4142339   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4142340   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
4142341   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4142342   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
4142343   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4142344   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
4142345   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4142346   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
4142347   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4142348   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4142349   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4142350   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4142351   +END;
MPRINT(EM_DIAGRAM):   END;
4142352   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4142353   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4142354   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4142355   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
4142356   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4142357   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4142358   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4142359   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4142360   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4142361   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4142362   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4142363   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4142364   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4142365   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4142366   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4142367   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4142368   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
4142369   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4142370   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4142371   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4142372   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4142373   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4142374   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
4142375   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4142376   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4142377   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
4142378   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4142379   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4142380   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
4142381   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4142382   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4142383   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4142384   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4142385   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
4142386   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4142387   +   ELSE S_NumCatalogPurchases
4142388   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4142389   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
4142390   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4142391   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4142392   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
4142393   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4142394   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4142395   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
4142396   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4142397   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4142398   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
4142399   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4142400   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4142401   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
4142402   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4142403   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4142404   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
4142405   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4142406   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4142407   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4142408   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4142409   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4142410   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4142411   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4142412   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4142413   +END;
MPRINT(EM_DIAGRAM):   END;
4142414   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4142415   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4142416   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4142417   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4142418   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4142419   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4142420   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4142421   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4142422   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4142423   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4142424   +   H1x1_1  =    -1.01373445510498 * S_AcceptedCmpTotal
4142425   +          +     0.33447979473871 * S_Age  +    -0.49864038088294 * S_Frq
4142426   +          +     0.31694253224638 * S_Income  +    -0.88502516255759 *
4142427   +        S_Kidhome  +    -0.95839165156922 * S_Mnt  +     1.08690890979971 *
4142428   +        S_MntFishProducts  +     0.21350737967446 * S_MntFruits
4142429   +          +     0.07347211887091 * S_MntGoldProds  +    -4.25839540508751 *
4142430   +        S_MntMeatProducts  +    -0.18409636621761 * S_MntSweetProducts
4142431   +          +     0.92254071667819 * S_MntWines  +     0.17286447654032 *
4142432   +        S_MonthsAsCustomer  +    -1.64446119745791 * S_NumCatalogPurchases
4142433   +          +    -1.14704878034134 * S_NumDealsPurchases
4142434   +          +    -0.17763404274659 * S_NumDistPurchases
4142435   +          +     0.08894400267969 * S_NumStorePurchases
4142436   +          +     0.59283747891957 * S_NumWebPurchases
4142437   +          +     0.85268274682505 * S_NumWebVisitsMonth
4142438   +          +    -0.43035426151546 * S_RFMstat  +     0.52915289749814 *
4142439   +        S_RMntFrq  +    -1.22871580072103 * S_Recency
4142440   +          +    -0.42049179704691 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.01373445510498 * S_AcceptedCmpTotal + 0.33447979473871 * 
S_Age + -0.49864038088294 * S_Frq + 0.31694253224638 * S_Income + -0.88502516255759 * 
S_Kidhome + -0.95839165156922 * S_Mnt + 1.08690890979971 * S_MntFishProducts + 
0.21350737967446 * S_MntFruits + 0.07347211887091 * S_MntGoldProds + -4.25839540508751 * 
S_MntMeatProducts + -0.18409636621761 * S_MntSweetProducts + 0.92254071667819 * S_MntWines + 
0.17286447654032 * S_MonthsAsCustomer + -1.64446119745791 * S_NumCatalogPurchases + 
-1.14704878034134 * S_NumDealsPurchases + -0.17763404274659 * S_NumDistPurchases + 
0.08894400267969 * S_NumStorePurchases + 0.59283747891957 * S_NumWebPurchases + 
0.85268274682505 * S_NumWebVisitsMonth + -0.43035426151546 * S_RFMstat + 0.52915289749814 * 
S_RMntFrq + -1.22871580072103 * S_Recency + -0.42049179704691 * S_Teenhome ;
4142441   +   H1x1_2  =    -0.17196520392875 * S_AcceptedCmpTotal
4142442   +          +     0.09368836975829 * S_Age  +     -0.2079821803313 * S_Frq
4142443   +          +    -0.59508480939905 * S_Income  +     0.34485068405931 *
4142444   +        S_Kidhome  +     0.68503953220301 * S_Mnt  +    -0.41832366462675 *
4142445   +        S_MntFishProducts  +      0.3374808822635 * S_MntFruits
4142446   +          +     0.41521872138137 * S_MntGoldProds  +     1.55234986522641 *
4142447   +        S_MntMeatProducts  +     0.17336981388128 * S_MntSweetProducts
4142448   +          +    -0.03736062165339 * S_MntWines  +     0.20414742233604 *
4142449   +        S_MonthsAsCustomer  +    -1.29756795361717 * S_NumCatalogPurchases
4142450   +          +    -0.80841566068716 * S_NumDealsPurchases
4142451   +          +    -0.17995640033768 * S_NumDistPurchases
4142452   +          +     0.00713417460936 * S_NumStorePurchases
4142453   +          +     0.57881024323076 * S_NumWebPurchases
4142454   +          +    -1.35134224257365 * S_NumWebVisitsMonth
4142455   +          +     0.63440441349443 * S_RFMstat  +      0.7029589919795 *
4142456   +        S_RMntFrq  +     1.16978656262499 * S_Recency
4142457   +          +     0.22916564304766 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.17196520392875 * S_AcceptedCmpTotal + 0.09368836975829 * 
S_Age + -0.2079821803313 * S_Frq + -0.59508480939905 * S_Income + 0.34485068405931 * S_Kidhome 
+ 0.68503953220301 * S_Mnt + -0.41832366462675 * S_MntFishProducts + 0.3374808822635 * 
S_MntFruits + 0.41521872138137 * S_MntGoldProds + 1.55234986522641 * S_MntMeatProducts + 
0.17336981388128 * S_MntSweetProducts + -0.03736062165339 * S_MntWines + 0.20414742233604 * 
S_MonthsAsCustomer + -1.29756795361717 * S_NumCatalogPurchases + -0.80841566068716 * 
S_NumDealsPurchases + -0.17995640033768 * S_NumDistPurchases + 0.00713417460936 * 
S_NumStorePurchases + 0.57881024323076 * S_NumWebPurchases + -1.35134224257365 * 
S_NumWebVisitsMonth + 0.63440441349443 * S_RFMstat + 0.7029589919795 * S_RMntFrq + 
1.16978656262499 * S_Recency + 0.22916564304766 * S_Teenhome ;
4142458   +   H1x1_3  =     1.25968793568007 * S_AcceptedCmpTotal
4142459   +          +     0.16058002256905 * S_Age  +    -1.00283978743671 * S_Frq
4142460   +          +     0.80202770811665 * S_Income  +     -0.7384690128283 *
4142461   +        S_Kidhome  +      0.6320116033322 * S_Mnt  +    -0.48862240567237 *
4142462   +        S_MntFishProducts  +     0.26477442063044 * S_MntFruits
4142463   +          +       0.434753861356 * S_MntGoldProds  +     3.54637875222405 *
4142464   +        S_MntMeatProducts  +    -0.09532877173293 * S_MntSweetProducts
4142465   +          +    -0.60614222423624 * S_MntWines  +     0.06807192728487 *
4142466   +        S_MonthsAsCustomer  +     0.45280110551612 * S_NumCatalogPurchases
4142467   +          +     0.57891364118717 * S_NumDealsPurchases
4142468   +          +    -0.31024556838688 * S_NumDistPurchases
4142469   +          +    -1.48708542986704 * S_NumStorePurchases
4142470   +          +    -0.93009875249206 * S_NumWebPurchases
4142471   +          +     2.01900039122935 * S_NumWebVisitsMonth
4142472   +          +     0.50006472616383 * S_RFMstat  +    -1.16854599018819 *
4142473   +        S_RMntFrq  +    -2.30414631760388 * S_Recency
4142474   +          +    -0.64226055895142 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.25968793568007 * S_AcceptedCmpTotal + 0.16058002256905 * 
S_Age + -1.00283978743671 * S_Frq + 0.80202770811665 * S_Income + -0.7384690128283 * S_Kidhome 
+ 0.6320116033322 * S_Mnt + -0.48862240567237 * S_MntFishProducts + 0.26477442063044 * 
S_MntFruits + 0.434753861356 * S_MntGoldProds + 3.54637875222405 * S_MntMeatProducts + 
-0.09532877173293 * S_MntSweetProducts + -0.60614222423624 * S_MntWines + 0.06807192728487 * 
S_MonthsAsCustomer + 0.45280110551612 * S_NumCatalogPurchases + 0.57891364118717 * 
S_NumDealsPurchases + -0.31024556838688 * S_NumDistPurchases + -1.48708542986704 * 
S_NumStorePurchases + -0.93009875249206 * S_NumWebPurchases + 2.01900039122935 * 
S_NumWebVisitsMonth + 0.50006472616383 * S_RFMstat + -1.16854599018819 * S_RMntFrq + 
-2.30414631760388 * S_Recency + -0.64226055895142 * S_Teenhome ;
4142475   +   H1x1_1  = H1x1_1  +     0.90039925512906 * AcceptedCmp10
4142476   +          +    -0.47386683647261 * AcceptedCmp20  +    -0.71163968851557 *
4142477   +        AcceptedCmp30  +    -1.10005761198573 * AcceptedCmp40
4142478   +          +     0.81604940024858 * AcceptedCmp50  +    -0.03266697009221 *
4142479   +        Complain0  +     0.45877513475435 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.90039925512906 * AcceptedCmp10 + -0.47386683647261 * 
AcceptedCmp20 + -0.71163968851557 * AcceptedCmp30 + -1.10005761198573 * AcceptedCmp40 + 
0.81604940024858 * AcceptedCmp50 + -0.03266697009221 * Complain0 + 0.45877513475435 * 
HigherEducationBinary0 ;
4142480   +   H1x1_2  = H1x1_2  +    -0.09498245462104 * AcceptedCmp10
4142481   +          +     -0.5878058848086 * AcceptedCmp20  +     1.08802173663414 *
4142482   +        AcceptedCmp30  +      0.4681907014168 * AcceptedCmp40
4142483   +          +    -1.71290692396514 * AcceptedCmp50  +    -0.47229847844337 *
4142484   +        Complain0  +     0.41790693564846 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.09498245462104 * AcceptedCmp10 + -0.5878058848086 * 
AcceptedCmp20 + 1.08802173663414 * AcceptedCmp30 + 0.4681907014168 * AcceptedCmp40 + 
-1.71290692396514 * AcceptedCmp50 + -0.47229847844337 * Complain0 + 0.41790693564846 * 
HigherEducationBinary0 ;
4142485   +   H1x1_3  = H1x1_3  +    -0.14466250407205 * AcceptedCmp10
4142486   +          +    -0.05281153450358 * AcceptedCmp20  +     0.30771572513376 *
4142487   +        AcceptedCmp30  +    -0.25237634767535 * AcceptedCmp40
4142488   +          +    -2.36680490171638 * AcceptedCmp50  +    -0.12273085838026 *
4142489   +        Complain0  +     0.40951032893236 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14466250407205 * AcceptedCmp10 + -0.05281153450358 
* AcceptedCmp20 + 0.30771572513376 * AcceptedCmp30 + -0.25237634767535 * AcceptedCmp40 + 
-2.36680490171638 * AcceptedCmp50 + -0.12273085838026 * Complain0 + 0.40951032893236 * 
HigherEducationBinary0 ;
4142490   +   H1x1_1  = H1x1_1  +    -0.00834762223325 * Education2n_Cycle
4142491   +          +    -0.42766880626216 * EducationBasic  +    -0.47517247816239 *
4142492   +        EducationGraduation  +    -0.68730596079478 * EducationMaster
4142493   +          +     0.55883606830033 * Marital_StatusDivorced
4142494   +          +    -0.54530037567066 * Marital_StatusMarried
4142495   +          +    -0.52994736075753 * Marital_StatusSingle
4142496   +          +    -0.53882341831078 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00834762223325 * Education2n_Cycle + 
-0.42766880626216 * EducationBasic + -0.47517247816239 * EducationGraduation + 
-0.68730596079478 * EducationMaster + 0.55883606830033 * Marital_StatusDivorced + 
-0.54530037567066 * Marital_StatusMarried + -0.52994736075753 * Marital_StatusSingle + 
-0.53882341831078 * Marital_StatusTogether ;
4142497   +   H1x1_2  = H1x1_2  +    -0.22709215793074 * Education2n_Cycle
4142498   +          +     0.07643166113928 * EducationBasic  +    -0.97269335071824 *
4142499   +        EducationGraduation  +     0.31201349236277 * EducationMaster
4142500   +          +    -1.07368484057033 * Marital_StatusDivorced
4142501   +          +     2.73313504711262 * Marital_StatusMarried
4142502   +          +    -2.18530462876058 * Marital_StatusSingle
4142503   +          +     2.38158278480467 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.22709215793074 * Education2n_Cycle + 
0.07643166113928 * EducationBasic + -0.97269335071824 * EducationGraduation + 0.31201349236277 
* EducationMaster + -1.07368484057033 * Marital_StatusDivorced + 2.73313504711262 * 
Marital_StatusMarried + -2.18530462876058 * Marital_StatusSingle + 2.38158278480467 * 
Marital_StatusTogether ;
4142504   +   H1x1_3  = H1x1_3  +     0.04453578767387 * Education2n_Cycle
4142505   +          +    -0.65383041132508 * EducationBasic  +    -0.17789960866108 *
4142506   +        EducationGraduation  +    -0.35544166792219 * EducationMaster
4142507   +          +     0.49993144243043 * Marital_StatusDivorced
4142508   +          +    -0.38953339116829 * Marital_StatusMarried
4142509   +          +    -0.10836287319942 * Marital_StatusSingle
4142510   +          +    -0.42049990939036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.04453578767387 * Education2n_Cycle + 
-0.65383041132508 * EducationBasic + -0.17789960866108 * EducationGraduation + 
-0.35544166792219 * EducationMaster + 0.49993144243043 * Marital_StatusDivorced + 
-0.38953339116829 * Marital_StatusMarried + -0.10836287319942 * Marital_StatusSingle + 
-0.42049990939036 * Marital_StatusTogether ;
4142511   +   H1x1_1  =    -0.67322256806566 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.67322256806566 + H1x1_1 ;
4142512   +   H1x1_2  =     1.02621981675321 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.02621981675321 + H1x1_2 ;
4142513   +   H1x1_3  =     1.79721701815172 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.79721701815172 + H1x1_3 ;
4142514   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
4142515   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
4142516   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4142517   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
4142518   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
4142519   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
4142520   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
4142521   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
4142522   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
4142523   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
4142524   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
4142525   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
4142526   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
4142527   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
4142528   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
4142529   +END;
MPRINT(EM_DIAGRAM):   END;
4142530   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4142531   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4142532   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4142533   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
4142534   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
4142535   +END;
MPRINT(EM_DIAGRAM):   END;
4142536   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4142537   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4142538   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4142539   +
4142540   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
4142541   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
4142542   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4142543   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
4142544   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
4142545   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4142546   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
4142547   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4142548   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4142549   +end;
MPRINT(EM_DIAGRAM):   end;
4142550   +else do;
MPRINT(EM_DIAGRAM):   else do;
4142551   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
4142552   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
4142553   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
4142554   +   end;
MPRINT(EM_DIAGRAM):   end;
4142555   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
4142556   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
4142557   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
4142558   +   end;
MPRINT(EM_DIAGRAM):   end;
4142559   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4142560   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4142561   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4142562   +   end;
MPRINT(EM_DIAGRAM):   end;
4142563   +end;
MPRINT(EM_DIAGRAM):   end;
4142564   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4142565   +   P_DepVar1  =    -3.84261611144245 * H1x1_1  +    -7.15065431642895 * H1x1_2
4142566   +          +       11.29639646928 * H1x1_3  +    -2.12563351481128 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.84261611144245 * H1x1_1 + -7.15065431642895 * H1x1_2 + 
11.29639646928 * H1x1_3 + -2.12563351481128 * H1x1_4 ;
4142567   +   P_DepVar1  =    -3.54755955929493 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.54755955929493 + P_DepVar1 ;
4142568   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4142569   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4142570   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4142571   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4142572   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4142573   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4142574   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4142575   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4142576   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4142577   +END;
MPRINT(EM_DIAGRAM):   END;
4142578   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4142579   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4142580   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4142581   +END;
MPRINT(EM_DIAGRAM):   END;
4142582   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4142583   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4142584   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4142585   +END;
MPRINT(EM_DIAGRAM):   END;
4142586   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
4142587   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
4142588   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
4142589   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
4142590   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
4142591   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
4142592   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
4142593   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4142594   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4142595   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4142596   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4142597   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4142598   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4142599   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4142600   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4142601   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4142602   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4142603   +END;
MPRINT(EM_DIAGRAM):   END;
4142604   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4142605   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4142606   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4142607   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
4142608   +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
4142609   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4142610   +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
4142611   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4142612   +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
4142613   +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
4142614   +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
4142615   +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
4142616   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4142617   +* Renaming Into variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural9;
4142618   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4142619   +length AutoNeural9_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural9_I_DepVar $32;
4142620   +drop AutoNeural9_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_I_DepVar;
4142621   +AutoNeural9_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural9_I_DepVar = I_DepVar;
4142622   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4142623   +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
4142624   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4142625   +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
4142626   +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
4142627   +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
4142628   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4142629   +* Ensmbl38: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Scoring Code of model 6 of 7;
4142630   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4142631   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4142632   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
4142633   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
4142634   +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
4142635   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4142636   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4142637   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4142638   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4142639   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4142640   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4142641   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4142642   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4142643   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4142644   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4142645   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4142646   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4142647   +LENGTH _WARN_ $4
4142648   +      F_DepVar  $ 12
4142649   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
4142650   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4142651   +
4142652   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4142653   +
4142654   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4142655   +
4142656   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4142657   +
4142658   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4142659   +
4142660   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4142661   +
4142662   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4142663   +
4142664   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4142665   +
4142666   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4142667   +
4142668   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4142669   +
4142670   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4142671   +
4142672   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4142673   +
4142674   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4142675   +
4142676   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4142677   +
4142678   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4142679   +
4142680   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4142681   +
4142682   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4142683   +
4142684   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4142685   +
4142686   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4142687   +
4142688   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4142689   +
4142690   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4142691   +
4142692   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4142693   +
4142694   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4142695   +
4142696   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4142697   +
4142698   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4142699   +
4142700   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4142701   +
4142702   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4142703   +
4142704   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4142705   +
4142706   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4142707   +
4142708   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4142709   +
4142710   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4142711   +
4142712   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4142713   +
4142714   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4142715   +
4142716   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4142717   +
4142718   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4142719   +
4142720   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4142721   +
4142722   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4142723   +
4142724   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4142725   +
4142726   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4142727   +
4142728   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4142729   +
4142730   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
4142731   +
4142732   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
4142733   +
4142734   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
4142735   +
4142736   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
4142737   +
4142738   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
4142739   +
4142740   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
4142741   +
4142742   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
4142743   +
4142744   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
4142745   +
4142746   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
4142747   +
4142748   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
4142749   +
4142750   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
4142751   +
4142752   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
4142753   +
4142754   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
4142755   +
4142756   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
4142757   +
4142758   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
4142759   +
4142760   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
4142761   +
4142762   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4142763   +
4142764   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4142765   +
4142766   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4142767   +
4142768   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4142769   +
4142770   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
4142771   +
4142772   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4142773   +
4142774   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
4142775   +
4142776   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4142777   +
4142778   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4142779   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4142780   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4142781   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4142782   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4142783   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4142784   +end;
MPRINT(EM_DIAGRAM):   end;
4142785   +else do;
MPRINT(EM_DIAGRAM):   else do;
4142786   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4142787   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4142788   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4142789   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4142790   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4142791   +   end;
MPRINT(EM_DIAGRAM):   end;
4142792   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4142793   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4142794   +   end;
MPRINT(EM_DIAGRAM):   end;
4142795   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4142796   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4142797   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4142798   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4142799   +   end;
MPRINT(EM_DIAGRAM):   end;
4142800   +end;
MPRINT(EM_DIAGRAM):   end;
4142801   +
4142802   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4142803   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4142804   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4142805   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4142806   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4142807   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4142808   +end;
MPRINT(EM_DIAGRAM):   end;
4142809   +else do;
MPRINT(EM_DIAGRAM):   else do;
4142810   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4142811   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4142812   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4142813   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4142814   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4142815   +   end;
MPRINT(EM_DIAGRAM):   end;
4142816   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4142817   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4142818   +   end;
MPRINT(EM_DIAGRAM):   end;
4142819   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4142820   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4142821   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4142822   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4142823   +   end;
MPRINT(EM_DIAGRAM):   end;
4142824   +end;
MPRINT(EM_DIAGRAM):   end;
4142825   +
4142826   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4142827   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4142828   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4142829   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4142830   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4142831   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4142832   +end;
MPRINT(EM_DIAGRAM):   end;
4142833   +else do;
MPRINT(EM_DIAGRAM):   else do;
4142834   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4142835   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4142836   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4142837   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4142838   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4142839   +   end;
MPRINT(EM_DIAGRAM):   end;
4142840   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4142841   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4142842   +   end;
MPRINT(EM_DIAGRAM):   end;
4142843   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4142844   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4142845   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4142846   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4142847   +   end;
MPRINT(EM_DIAGRAM):   end;
4142848   +end;
MPRINT(EM_DIAGRAM):   end;
4142849   +
4142850   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4142851   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4142852   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4142853   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4142854   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4142855   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4142856   +end;
MPRINT(EM_DIAGRAM):   end;
4142857   +else do;
MPRINT(EM_DIAGRAM):   else do;
4142858   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4142859   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4142860   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4142861   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4142862   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4142863   +   end;
MPRINT(EM_DIAGRAM):   end;
4142864   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4142865   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4142866   +   end;
MPRINT(EM_DIAGRAM):   end;
4142867   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4142868   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4142869   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4142870   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4142871   +   end;
MPRINT(EM_DIAGRAM):   end;
4142872   +end;
MPRINT(EM_DIAGRAM):   end;
4142873   +
4142874   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4142875   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4142876   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4142877   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4142878   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4142879   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4142880   +end;
MPRINT(EM_DIAGRAM):   end;
4142881   +else do;
MPRINT(EM_DIAGRAM):   else do;
4142882   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4142883   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4142884   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4142885   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4142886   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4142887   +   end;
MPRINT(EM_DIAGRAM):   end;
4142888   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4142889   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4142890   +   end;
MPRINT(EM_DIAGRAM):   end;
4142891   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4142892   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4142893   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4142894   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4142895   +   end;
MPRINT(EM_DIAGRAM):   end;
4142896   +end;
MPRINT(EM_DIAGRAM):   end;
4142897   +
4142898   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4142899   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4142900   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4142901   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4142902   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4142903   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4142904   +end;
MPRINT(EM_DIAGRAM):   end;
4142905   +else do;
MPRINT(EM_DIAGRAM):   else do;
4142906   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4142907   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4142908   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4142909   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4142910   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4142911   +   end;
MPRINT(EM_DIAGRAM):   end;
4142912   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4142913   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4142914   +   end;
MPRINT(EM_DIAGRAM):   end;
4142915   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4142916   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4142917   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4142918   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4142919   +   end;
MPRINT(EM_DIAGRAM):   end;
4142920   +end;
MPRINT(EM_DIAGRAM):   end;
4142921   +
4142922   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4142923   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4142924   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4142925   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4142926   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4142927   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4142928   +end;
MPRINT(EM_DIAGRAM):   end;
4142929   +else do;
MPRINT(EM_DIAGRAM):   else do;
4142930   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4142931   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4142932   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4142933   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4142934   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4142935   +   end;
MPRINT(EM_DIAGRAM):   end;
4142936   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4142937   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4142938   +   end;
MPRINT(EM_DIAGRAM):   end;
4142939   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4142940   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4142941   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4142942   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4142943   +   end;
MPRINT(EM_DIAGRAM):   end;
4142944   +end;
MPRINT(EM_DIAGRAM):   end;
4142945   +
4142946   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4142947   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
4142948   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4142949   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4142950   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4142951   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4142952   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4142953   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4142954   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4142955   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4142956   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4142957   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4142958   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4142959   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4142960   +end;
MPRINT(EM_DIAGRAM):   end;
4142961   +else do;
MPRINT(EM_DIAGRAM):   else do;
4142962   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4142963   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4142964   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4142965   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4142966   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4142967   +   end;
MPRINT(EM_DIAGRAM):   end;
4142968   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4142969   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4142970   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4142971   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4142972   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4142973   +   end;
MPRINT(EM_DIAGRAM):   end;
4142974   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4142975   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4142976   +   end;
MPRINT(EM_DIAGRAM):   end;
4142977   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4142978   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4142979   +   end;
MPRINT(EM_DIAGRAM):   end;
4142980   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4142981   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4142982   +   end;
MPRINT(EM_DIAGRAM):   end;
4142983   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4142984   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4142985   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4142986   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4142987   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4142988   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4142989   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4142990   +   end;
MPRINT(EM_DIAGRAM):   end;
4142991   +end;
MPRINT(EM_DIAGRAM):   end;
4142992   +
4142993   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4142994   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4142995   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
4142996   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4142997   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4142998   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4142999   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4143000   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4143001   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4143002   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4143003   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4143004   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4143005   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4143006   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4143007   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4143008   +end;
MPRINT(EM_DIAGRAM):   end;
4143009   +else do;
MPRINT(EM_DIAGRAM):   else do;
4143010   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4143011   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4143012   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4143013   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4143014   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4143015   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4143016   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4143017   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4143018   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4143019   +         end;
MPRINT(EM_DIAGRAM):   end;
4143020   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4143021   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4143022   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4143023   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4143024   +            end;
MPRINT(EM_DIAGRAM):   end;
4143025   +         end;
MPRINT(EM_DIAGRAM):   end;
4143026   +      end;
MPRINT(EM_DIAGRAM):   end;
4143027   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4143028   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4143029   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4143030   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4143031   +         end;
MPRINT(EM_DIAGRAM):   end;
4143032   +      end;
MPRINT(EM_DIAGRAM):   end;
4143033   +   end;
MPRINT(EM_DIAGRAM):   end;
4143034   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4143035   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4143036   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4143037   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4143038   +      end;
MPRINT(EM_DIAGRAM):   end;
4143039   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4143040   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4143041   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4143042   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4143043   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4143044   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4143045   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4143046   +         end;
MPRINT(EM_DIAGRAM):   end;
4143047   +      end;
MPRINT(EM_DIAGRAM):   end;
4143048   +   end;
MPRINT(EM_DIAGRAM):   end;
4143049   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4143050   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4143051   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4143052   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4143053   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4143054   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4143055   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4143056   +   end;
MPRINT(EM_DIAGRAM):   end;
4143057   +end;
MPRINT(EM_DIAGRAM):   end;
4143058   +
4143059   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4143060   +*** Checking missing input Interval
4143061   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4143062   +
4143063   +IF NMISS(
4143064   +   AcceptedCmpTotal ,
4143065   +   Age ,
4143066   +   Frq ,
4143067   +   Income ,
4143068   +   Kidhome ,
4143069   +   Mnt ,
4143070   +   MntFishProducts ,
4143071   +   MntFruits ,
4143072   +   MntGoldProds ,
4143073   +   MntMeatProducts ,
4143074   +   MntSweetProducts ,
4143075   +   MntWines ,
4143076   +   MonthsAsCustomer ,
4143077   +   NumCatalogPurchases ,
4143078   +   NumDealsPurchases ,
4143079   +   NumDistPurchases ,
4143080   +   NumStorePurchases ,
4143081   +   NumWebPurchases ,
4143082   +   NumWebVisitsMonth ,
4143083   +   RFMstat ,
4143084   +   RMntFrq ,
4143085   +   Recency ,
4143086   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
4143087   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4143088   +
4143089   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4143090   +END;
MPRINT(EM_DIAGRAM):   END;
4143091   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4143092   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4143093   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4143094   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4143095   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4143096   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
4143097   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4143098   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4143099   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4143100   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4143101   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4143102   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4143103   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
4143104   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4143105   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4143106   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4143107   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4143108   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
4143109   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4143110   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
4143111   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4143112   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4143113   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
4143114   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4143115   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
4143116   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4143117   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
4143118   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4143119   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
4143120   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4143121   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
4143122   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4143123   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
4143124   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4143125   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
4143126   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4143127   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4143128   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4143129   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4143130   +END;
MPRINT(EM_DIAGRAM):   END;
4143131   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4143132   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4143133   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4143134   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
4143135   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4143136   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4143137   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4143138   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4143139   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4143140   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4143141   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4143142   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4143143   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4143144   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4143145   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4143146   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4143147   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
4143148   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4143149   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4143150   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4143151   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4143152   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4143153   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
4143154   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4143155   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4143156   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
4143157   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4143158   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4143159   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
4143160   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4143161   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4143162   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4143163   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4143164   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
4143165   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4143166   +   ELSE S_NumCatalogPurchases
4143167   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4143168   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
4143169   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4143170   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4143171   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
4143172   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4143173   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4143174   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
4143175   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4143176   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4143177   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
4143178   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4143179   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4143180   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
4143181   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4143182   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4143183   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
4143184   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4143185   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4143186   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4143187   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4143188   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4143189   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4143190   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4143191   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4143192   +END;
MPRINT(EM_DIAGRAM):   END;
4143193   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4143194   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4143195   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4143196   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4143197   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4143198   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4143199   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4143200   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4143201   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4143202   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4143203   +   H1x1_1  =    -0.26269469382558 * S_AcceptedCmpTotal
4143204   +          +    -0.06270768091854 * S_Age  +    -0.71225988503068 * S_Frq
4143205   +          +    -0.19030550341755 * S_Income  +    -0.74001834753219 *
4143206   +        S_Kidhome  +    -0.80050230513362 * S_Mnt  +    -0.70546855957287 *
4143207   +        S_MntFishProducts  +    -0.57876563074872 * S_MntFruits
4143208   +          +    -0.00210300489306 * S_MntGoldProds  +     2.60078237485589 *
4143209   +        S_MntMeatProducts  +     -0.9886407516441 * S_MntSweetProducts
4143210   +          +    -2.97488547819955 * S_MntWines  +    -0.61277940059348 *
4143211   +        S_MonthsAsCustomer  +    -0.00096247683063 * S_NumCatalogPurchases
4143212   +          +     0.89422627895323 * S_NumDealsPurchases
4143213   +          +    -0.13304125929765 * S_NumDistPurchases
4143214   +          +    -1.04568442570811 * S_NumStorePurchases
4143215   +          +    -0.28677765126751 * S_NumWebPurchases
4143216   +          +      1.2327638737509 * S_NumWebVisitsMonth
4143217   +          +     0.67421347247009 * S_RFMstat  +     -0.6166808079836 *
4143218   +        S_RMntFrq  +    -0.86930969765816 * S_Recency
4143219   +          +     0.33815651609216 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.26269469382558 * S_AcceptedCmpTotal + -0.06270768091854 * 
S_Age + -0.71225988503068 * S_Frq + -0.19030550341755 * S_Income + -0.74001834753219 * 
S_Kidhome + -0.80050230513362 * S_Mnt + -0.70546855957287 * S_MntFishProducts + 
-0.57876563074872 * S_MntFruits + -0.00210300489306 * S_MntGoldProds + 2.60078237485589 * 
S_MntMeatProducts + -0.9886407516441 * S_MntSweetProducts + -2.97488547819955 * S_MntWines + 
-0.61277940059348 * S_MonthsAsCustomer + -0.00096247683063 * S_NumCatalogPurchases + 
0.89422627895323 * S_NumDealsPurchases + -0.13304125929765 * S_NumDistPurchases + 
-1.04568442570811 * S_NumStorePurchases + -0.28677765126751 * S_NumWebPurchases + 
1.2327638737509 * S_NumWebVisitsMonth + 0.67421347247009 * S_RFMstat + -0.6166808079836 * 
S_RMntFrq + -0.86930969765816 * S_Recency + 0.33815651609216 * S_Teenhome ;
4143220   +   H1x1_2  =     0.55568777293496 * S_AcceptedCmpTotal
4143221   +          +     0.80213442721076 * S_Age  +     0.34635060456486 * S_Frq
4143222   +          +    -0.74174636901916 * S_Income  +    -0.01217809906509 *
4143223   +        S_Kidhome  +     0.26876993353057 * S_Mnt  +     0.04779395124841 *
4143224   +        S_MntFishProducts  +    -0.48668668697685 * S_MntFruits
4143225   +          +    -0.53984501210781 * S_MntGoldProds  +     2.66892669248667 *
4143226   +        S_MntMeatProducts  +     0.48696031818599 * S_MntSweetProducts
4143227   +          +    -1.59625933837852 * S_MntWines  +     0.06275925418664 *
4143228   +        S_MonthsAsCustomer  +     0.97240339275782 * S_NumCatalogPurchases
4143229   +          +     0.04224590196535 * S_NumDealsPurchases
4143230   +          +     0.76554742700113 * S_NumDistPurchases
4143231   +          +    -0.49155496870812 * S_NumStorePurchases
4143232   +          +     0.59606812744403 * S_NumWebPurchases
4143233   +          +     1.86809286276405 * S_NumWebVisitsMonth
4143234   +          +    -0.40257502974261 * S_RFMstat  +    -1.46120938073597 *
4143235   +        S_RMntFrq  +    -2.09222283465666 * S_Recency
4143236   +          +    -0.29369632363913 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.55568777293496 * S_AcceptedCmpTotal + 0.80213442721076 * 
S_Age + 0.34635060456486 * S_Frq + -0.74174636901916 * S_Income + -0.01217809906509 * 
S_Kidhome + 0.26876993353057 * S_Mnt + 0.04779395124841 * S_MntFishProducts + 
-0.48668668697685 * S_MntFruits + -0.53984501210781 * S_MntGoldProds + 2.66892669248667 * 
S_MntMeatProducts + 0.48696031818599 * S_MntSweetProducts + -1.59625933837852 * S_MntWines + 
0.06275925418664 * S_MonthsAsCustomer + 0.97240339275782 * S_NumCatalogPurchases + 
0.04224590196535 * S_NumDealsPurchases + 0.76554742700113 * S_NumDistPurchases + 
-0.49155496870812 * S_NumStorePurchases + 0.59606812744403 * S_NumWebPurchases + 
1.86809286276405 * S_NumWebVisitsMonth + -0.40257502974261 * S_RFMstat + -1.46120938073597 * 
S_RMntFrq + -2.09222283465666 * S_Recency + -0.29369632363913 * S_Teenhome ;
4143237   +   H1x1_3  =    -1.40689454675752 * S_AcceptedCmpTotal
4143238   +          +     0.22713382517751 * S_Age  +     0.51688429566863 * S_Frq
4143239   +          +    -0.07045670111356 * S_Income  +     1.10344455539307 *
4143240   +        S_Kidhome  +     0.24846532877416 * S_Mnt  +       0.663861249099 *
4143241   +        S_MntFishProducts  +     0.91527393572467 * S_MntFruits
4143242   +          +    -0.30189545909263 * S_MntGoldProds  +    -0.72774030731928 *
4143243   +        S_MntMeatProducts  +     0.66425565932635 * S_MntSweetProducts
4143244   +          +     0.55381627079618 * S_MntWines  +      0.6475533846661 *
4143245   +        S_MonthsAsCustomer  +    -1.28926334887526 * S_NumCatalogPurchases
4143246   +          +    -0.04866536993486 * S_NumDealsPurchases
4143247   +          +    -0.53535979020214 * S_NumDistPurchases
4143248   +          +     2.20634071253676 * S_NumStorePurchases
4143249   +          +      0.6164564989007 * S_NumWebPurchases
4143250   +          +    -0.43396314395263 * S_NumWebVisitsMonth
4143251   +          +     0.05322242552204 * S_RFMstat  +     0.56410623855957 *
4143252   +        S_RMntFrq  +     2.37293441098349 * S_Recency
4143253   +          +     1.20608077690677 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.40689454675752 * S_AcceptedCmpTotal + 0.22713382517751 * 
S_Age + 0.51688429566863 * S_Frq + -0.07045670111356 * S_Income + 1.10344455539307 * S_Kidhome 
+ 0.24846532877416 * S_Mnt + 0.663861249099 * S_MntFishProducts + 0.91527393572467 * 
S_MntFruits + -0.30189545909263 * S_MntGoldProds + -0.72774030731928 * S_MntMeatProducts + 
0.66425565932635 * S_MntSweetProducts + 0.55381627079618 * S_MntWines + 0.6475533846661 * 
S_MonthsAsCustomer + -1.28926334887526 * S_NumCatalogPurchases + -0.04866536993486 * 
S_NumDealsPurchases + -0.53535979020214 * S_NumDistPurchases + 2.20634071253676 * 
S_NumStorePurchases + 0.6164564989007 * S_NumWebPurchases + -0.43396314395263 * 
S_NumWebVisitsMonth + 0.05322242552204 * S_RFMstat + 0.56410623855957 * S_RMntFrq + 
2.37293441098349 * S_Recency + 1.20608077690677 * S_Teenhome ;
4143254   +   H1x1_4  =      0.8853369558336 * S_AcceptedCmpTotal
4143255   +          +    -0.02447538128281 * S_Age  +    -0.42850426895609 * S_Frq
4143256   +          +     2.31972189756282 * S_Income  +    -1.82782672643583 *
4143257   +        S_Kidhome  +     -0.0790436830894 * S_Mnt  +     0.24407556387791 *
4143258   +        S_MntFishProducts  +     0.21000125209328 * S_MntFruits
4143259   +          +     -0.0538417400508 * S_MntGoldProds  +     0.76422967678518 *
4143260   +        S_MntMeatProducts  +     0.14352092131967 * S_MntSweetProducts
4143261   +          +    -0.47732426074136 * S_MntWines  +      0.2881736828404 *
4143262   +        S_MonthsAsCustomer  +     1.08614742409725 * S_NumCatalogPurchases
4143263   +          +     1.37461255707863 * S_NumDealsPurchases
4143264   +          +    -0.17684775000818 * S_NumDistPurchases
4143265   +          +    -0.62755623855535 * S_NumStorePurchases
4143266   +          +    -1.46551649022657 * S_NumWebPurchases
4143267   +          +     3.35784247878638 * S_NumWebVisitsMonth
4143268   +          +      0.0205421093374 * S_RFMstat  +     0.02151146396087 *
4143269   +        S_RMntFrq  +    -2.61971612923471 * S_Recency
4143270   +          +    -1.74888814570254 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.8853369558336 * S_AcceptedCmpTotal + -0.02447538128281 * 
S_Age + -0.42850426895609 * S_Frq + 2.31972189756282 * S_Income + -1.82782672643583 * 
S_Kidhome + -0.0790436830894 * S_Mnt + 0.24407556387791 * S_MntFishProducts + 0.21000125209328 
* S_MntFruits + -0.0538417400508 * S_MntGoldProds + 0.76422967678518 * S_MntMeatProducts + 
0.14352092131967 * S_MntSweetProducts + -0.47732426074136 * S_MntWines + 0.2881736828404 * 
S_MonthsAsCustomer + 1.08614742409725 * S_NumCatalogPurchases + 1.37461255707863 * 
S_NumDealsPurchases + -0.17684775000818 * S_NumDistPurchases + -0.62755623855535 * 
S_NumStorePurchases + -1.46551649022657 * S_NumWebPurchases + 3.35784247878638 * 
S_NumWebVisitsMonth + 0.0205421093374 * S_RFMstat + 0.02151146396087 * S_RMntFrq + 
-2.61971612923471 * S_Recency + -1.74888814570254 * S_Teenhome ;
4143271   +   H1x1_5  =    -1.18321492018094 * S_AcceptedCmpTotal
4143272   +          +    -0.08221927436186 * S_Age  +    -0.42965792034093 * S_Frq
4143273   +          +    -0.82515640369651 * S_Income  +     -0.7955159282868 *
4143274   +        S_Kidhome  +    -0.24623211609742 * S_Mnt  +     1.14929640730402 *
4143275   +        S_MntFishProducts  +     0.37195406994279 * S_MntFruits
4143276   +          +    -0.11860313293867 * S_MntGoldProds  +     -5.1642360901608 *
4143277   +        S_MntMeatProducts  +     0.30315380386519 * S_MntSweetProducts
4143278   +          +     2.66130913318508 * S_MntWines  +    -0.35226665860471 *
4143279   +        S_MonthsAsCustomer  +    -1.90883979010829 * S_NumCatalogPurchases
4143280   +          +    -0.76256677907121 * S_NumDealsPurchases
4143281   +          +    -0.31591571751692 * S_NumDistPurchases
4143282   +          +      0.0506832614089 * S_NumStorePurchases
4143283   +          +      1.4636796923764 * S_NumWebPurchases
4143284   +          +     0.37743519705036 * S_NumWebVisitsMonth
4143285   +          +    -0.69857477383618 * S_RFMstat  +    -0.87851464788137 *
4143286   +        S_RMntFrq  +     0.16854775832723 * S_Recency
4143287   +          +     0.71697705359003 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.18321492018094 * S_AcceptedCmpTotal + -0.08221927436186 * 
S_Age + -0.42965792034093 * S_Frq + -0.82515640369651 * S_Income + -0.7955159282868 * 
S_Kidhome + -0.24623211609742 * S_Mnt + 1.14929640730402 * S_MntFishProducts + 
0.37195406994279 * S_MntFruits + -0.11860313293867 * S_MntGoldProds + -5.1642360901608 * 
S_MntMeatProducts + 0.30315380386519 * S_MntSweetProducts + 2.66130913318508 * S_MntWines + 
-0.35226665860471 * S_MonthsAsCustomer + -1.90883979010829 * S_NumCatalogPurchases + 
-0.76256677907121 * S_NumDealsPurchases + -0.31591571751692 * S_NumDistPurchases + 
0.0506832614089 * S_NumStorePurchases + 1.4636796923764 * S_NumWebPurchases + 0.37743519705036 
* S_NumWebVisitsMonth + -0.69857477383618 * S_RFMstat + -0.87851464788137 * S_RMntFrq + 
0.16854775832723 * S_Recency + 0.71697705359003 * S_Teenhome ;
4143288   +   H1x1_1  = H1x1_1  +    -0.36100598335798 * AcceptedCmp10
4143289   +          +    -0.80162089620833 * AcceptedCmp20  +    -0.32871385645151 *
4143290   +        AcceptedCmp30  +     0.06493645215559 * AcceptedCmp40
4143291   +          +    -0.79430619699627 * AcceptedCmp50  +    -0.55522128705257 *
4143292   +        Complain0  +    -0.30966226382805 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.36100598335798 * AcceptedCmp10 + -0.80162089620833 
* AcceptedCmp20 + -0.32871385645151 * AcceptedCmp30 + 0.06493645215559 * AcceptedCmp40 + 
-0.79430619699627 * AcceptedCmp50 + -0.55522128705257 * Complain0 + -0.30966226382805 * 
HigherEducationBinary0 ;
4143293   +   H1x1_2  = H1x1_2  +    -0.55315398954303 * AcceptedCmp10
4143294   +          +    -0.74882192477453 * AcceptedCmp20  +    -1.00393247543385 *
4143295   +        AcceptedCmp30  +    -0.99157595784247 * AcceptedCmp40
4143296   +          +     -1.3196947648703 * AcceptedCmp50  +    -0.00342039619706 *
4143297   +        Complain0  +     2.02148667926607 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.55315398954303 * AcceptedCmp10 + -0.74882192477453 
* AcceptedCmp20 + -1.00393247543385 * AcceptedCmp30 + -0.99157595784247 * AcceptedCmp40 + 
-1.3196947648703 * AcceptedCmp50 + -0.00342039619706 * Complain0 + 2.02148667926607 * 
HigherEducationBinary0 ;
4143298   +   H1x1_3  = H1x1_3  +    -1.34147425697576 * AcceptedCmp10
4143299   +          +     0.73907016980814 * AcceptedCmp20  +     0.73398008116032 *
4143300   +        AcceptedCmp30  +     0.96308137699431 * AcceptedCmp40
4143301   +          +     0.35561099349684 * AcceptedCmp50  +    -0.31219143781741 *
4143302   +        Complain0  +     0.90693629583865 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -1.34147425697576 * AcceptedCmp10 + 0.73907016980814 * 
AcceptedCmp20 + 0.73398008116032 * AcceptedCmp30 + 0.96308137699431 * AcceptedCmp40 + 
0.35561099349684 * AcceptedCmp50 + -0.31219143781741 * Complain0 + 0.90693629583865 * 
HigherEducationBinary0 ;
4143303   +   H1x1_4  = H1x1_4  +    -0.50580436048114 * AcceptedCmp10
4143304   +          +    -1.02093523515462 * AcceptedCmp20  +    -0.61029325985231 *
4143305   +        AcceptedCmp30  +    -0.73402161144066 * AcceptedCmp40
4143306   +          +      0.1698155397807 * AcceptedCmp50  +    -0.01243044321253 *
4143307   +        Complain0  +    -0.47467816438005 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.50580436048114 * AcceptedCmp10 + -1.02093523515462 
* AcceptedCmp20 + -0.61029325985231 * AcceptedCmp30 + -0.73402161144066 * AcceptedCmp40 + 
0.1698155397807 * AcceptedCmp50 + -0.01243044321253 * Complain0 + -0.47467816438005 * 
HigherEducationBinary0 ;
4143308   +   H1x1_5  = H1x1_5  +     1.58877963639512 * AcceptedCmp10
4143309   +          +     0.71974146614964 * AcceptedCmp20  +    -0.38703518473707 *
4143310   +        AcceptedCmp30  +     0.18491867078918 * AcceptedCmp40
4143311   +          +     0.72124299050214 * AcceptedCmp50  +    -0.27317285634323 *
4143312   +        Complain0  +      0.1433377302902 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.58877963639512 * AcceptedCmp10 + 0.71974146614964 * 
AcceptedCmp20 + -0.38703518473707 * AcceptedCmp30 + 0.18491867078918 * AcceptedCmp40 + 
0.72124299050214 * AcceptedCmp50 + -0.27317285634323 * Complain0 + 0.1433377302902 * 
HigherEducationBinary0 ;
4143313   +   H1x1_1  = H1x1_1  +     0.29126191890253 * Education2n_Cycle
4143314   +          +    -0.73322213407659 * EducationBasic  +     0.33134572731882 *
4143315   +        EducationGraduation  +    -0.37141290775302 * EducationMaster
4143316   +          +     0.68641668264565 * Marital_StatusDivorced
4143317   +          +    -0.81586871439732 * Marital_StatusMarried
4143318   +          +     0.63758920518451 * Marital_StatusSingle
4143319   +          +    -1.07300023346175 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.29126191890253 * Education2n_Cycle + 
-0.73322213407659 * EducationBasic + 0.33134572731882 * EducationGraduation + 
-0.37141290775302 * EducationMaster + 0.68641668264565 * Marital_StatusDivorced + 
-0.81586871439732 * Marital_StatusMarried + 0.63758920518451 * Marital_StatusSingle + 
-1.07300023346175 * Marital_StatusTogether ;
4143320   +   H1x1_2  = H1x1_2  +     0.43078991783629 * Education2n_Cycle
4143321   +          +      0.6169213563952 * EducationBasic  +    -0.30246389091319 *
4143322   +        EducationGraduation  +     -0.4412391934844 * EducationMaster
4143323   +          +     0.05137560133238 * Marital_StatusDivorced
4143324   +          +    -2.24401993266209 * Marital_StatusMarried
4143325   +          +     1.57359386216115 * Marital_StatusSingle
4143326   +          +    -1.81897019215773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.43078991783629 * Education2n_Cycle + 0.6169213563952 
* EducationBasic + -0.30246389091319 * EducationGraduation + -0.4412391934844 * 
EducationMaster + 0.05137560133238 * Marital_StatusDivorced + -2.24401993266209 * 
Marital_StatusMarried + 1.57359386216115 * Marital_StatusSingle + -1.81897019215773 * 
Marital_StatusTogether ;
4143327   +   H1x1_3  = H1x1_3  +     0.59284950139581 * Education2n_Cycle
4143328   +          +     0.47333255206751 * EducationBasic  +     0.43514421192824 *
4143329   +        EducationGraduation  +     0.61492669859334 * EducationMaster
4143330   +          +     -1.0649987815942 * Marital_StatusDivorced
4143331   +          +     0.76065111692388 * Marital_StatusMarried
4143332   +          +    -0.21694149754801 * Marital_StatusSingle
4143333   +          +     1.64182073896148 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.59284950139581 * Education2n_Cycle + 
0.47333255206751 * EducationBasic + 0.43514421192824 * EducationGraduation + 0.61492669859334 
* EducationMaster + -1.0649987815942 * Marital_StatusDivorced + 0.76065111692388 * 
Marital_StatusMarried + -0.21694149754801 * Marital_StatusSingle + 1.64182073896148 * 
Marital_StatusTogether ;
4143334   +   H1x1_4  = H1x1_4  +    -0.77613125849075 * Education2n_Cycle
4143335   +          +     0.26238013539868 * EducationBasic  +    -0.05526420132276 *
4143336   +        EducationGraduation  +     0.04208620358211 * EducationMaster
4143337   +          +     2.02155453548328 * Marital_StatusDivorced
4143338   +          +    -2.60190649735306 * Marital_StatusMarried
4143339   +          +     1.09149388354927 * Marital_StatusSingle
4143340   +          +    -1.15248770613963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.77613125849075 * Education2n_Cycle + 
0.26238013539868 * EducationBasic + -0.05526420132276 * EducationGraduation + 0.04208620358211 
* EducationMaster + 2.02155453548328 * Marital_StatusDivorced + -2.60190649735306 * 
Marital_StatusMarried + 1.09149388354927 * Marital_StatusSingle + -1.15248770613963 * 
Marital_StatusTogether ;
4143341   +   H1x1_5  = H1x1_5  +    -0.03512618332303 * Education2n_Cycle
4143342   +          +    -0.14907811224838 * EducationBasic  +     0.24885029294709 *
4143343   +        EducationGraduation  +    -0.60853091001689 * EducationMaster
4143344   +          +     0.66315970650309 * Marital_StatusDivorced
4143345   +          +    -1.20476729758152 * Marital_StatusMarried
4143346   +          +     0.56175027826397 * Marital_StatusSingle
4143347   +          +    -1.12798745445913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.03512618332303 * Education2n_Cycle + 
-0.14907811224838 * EducationBasic + 0.24885029294709 * EducationGraduation + 
-0.60853091001689 * EducationMaster + 0.66315970650309 * Marital_StatusDivorced + 
-1.20476729758152 * Marital_StatusMarried + 0.56175027826397 * Marital_StatusSingle + 
-1.12798745445913 * Marital_StatusTogether ;
4143348   +   H1x1_1  =      0.8264813299799 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.8264813299799 + H1x1_1 ;
4143349   +   H1x1_2  =     1.35924705880418 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.35924705880418 + H1x1_2 ;
4143350   +   H1x1_3  =    -0.31074016443189 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31074016443189 + H1x1_3 ;
4143351   +   H1x1_4  =    -1.37395810355475 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.37395810355475 + H1x1_4 ;
4143352   +   H1x1_5  =    -0.62889533479826 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.62889533479826 + H1x1_5 ;
4143353   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
4143354   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
4143355   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4143356   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
4143357   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
4143358   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
4143359   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
4143360   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
4143361   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
4143362   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
4143363   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
4143364   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
4143365   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
4143366   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
4143367   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
4143368   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
4143369   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
4143370   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
4143371   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
4143372   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
4143373   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
4143374   +END;
MPRINT(EM_DIAGRAM):   END;
4143375   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4143376   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4143377   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4143378   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
4143379   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
4143380   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
4143381   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
4143382   +END;
MPRINT(EM_DIAGRAM):   END;
4143383   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4143384   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
4143385   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4143386   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4143387   +   H1x2_1  =     0.56269814727649 * S_AcceptedCmpTotal
4143388   +          +    -0.56663088753275 * S_Age  +    -0.08799157593784 * S_Frq
4143389   +          +      0.8158986182256 * S_Income  +     0.25081960997161 *
4143390   +        S_Kidhome  +    -0.53258140179906 * S_Mnt  +     0.15843644803762 *
4143391   +        S_MntFishProducts  +    -0.87373368590299 * S_MntFruits
4143392   +          +     0.02807252984992 * S_MntGoldProds  +     1.41661611364623 *
4143393   +        S_MntMeatProducts  +     1.22431140889383 * S_MntSweetProducts
4143394   +          +    -0.25451913627032 * S_MntWines  +     0.13515407201266 *
4143395   +        S_MonthsAsCustomer  +     1.28583120667445 * S_NumCatalogPurchases
4143396   +          +     1.50005927423985 * S_NumDealsPurchases
4143397   +          +      0.5590536933569 * S_NumDistPurchases
4143398   +          +    -0.61757824339318 * S_NumStorePurchases
4143399   +          +     0.37259686538158 * S_NumWebPurchases
4143400   +          +     2.59725437895564 * S_NumWebVisitsMonth
4143401   +          +     1.61096386499852 * S_RFMstat  +      0.6096177019772 *
4143402   +        S_RMntFrq  +    -2.38795796980324 * S_Recency
4143403   +          +    -0.31987414022375 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.56269814727649 * S_AcceptedCmpTotal + -0.56663088753275 * 
S_Age + -0.08799157593784 * S_Frq + 0.8158986182256 * S_Income + 0.25081960997161 * S_Kidhome 
+ -0.53258140179906 * S_Mnt + 0.15843644803762 * S_MntFishProducts + -0.87373368590299 * 
S_MntFruits + 0.02807252984992 * S_MntGoldProds + 1.41661611364623 * S_MntMeatProducts + 
1.22431140889383 * S_MntSweetProducts + -0.25451913627032 * S_MntWines + 0.13515407201266 * 
S_MonthsAsCustomer + 1.28583120667445 * S_NumCatalogPurchases + 1.50005927423985 * 
S_NumDealsPurchases + 0.5590536933569 * S_NumDistPurchases + -0.61757824339318 * 
S_NumStorePurchases + 0.37259686538158 * S_NumWebPurchases + 2.59725437895564 * 
S_NumWebVisitsMonth + 1.61096386499852 * S_RFMstat + 0.6096177019772 * S_RMntFrq + 
-2.38795796980324 * S_Recency + -0.31987414022375 * S_Teenhome ;
4143404   +   H1x2_2  =    -1.93801069736585 * S_AcceptedCmpTotal
4143405   +          +     1.10394781020217 * S_Age  +    -0.47335296021798 * S_Frq
4143406   +          +    -1.34212492602253 * S_Income  +    -1.34380793722996 *
4143407   +        S_Kidhome  +      0.9110881410704 * S_Mnt  +    -2.21001317666388 *
4143408   +        S_MntFishProducts  +     0.73821267564247 * S_MntFruits
4143409   +          +     0.16536006752146 * S_MntGoldProds  +     0.03402222784641 *
4143410   +        S_MntMeatProducts  +     0.96043668102736 * S_MntSweetProducts
4143411   +          +    -1.40670343451334 * S_MntWines  +     0.81378739821838 *
4143412   +        S_MonthsAsCustomer  +    -0.45596935664336 * S_NumCatalogPurchases
4143413   +          +    -0.09282222088797 * S_NumDealsPurchases
4143414   +          +     0.10726247938321 * S_NumDistPurchases
4143415   +          +     -1.1235971458527 * S_NumStorePurchases
4143416   +          +    -0.78304387839877 * S_NumWebPurchases
4143417   +          +    -0.44139243179956 * S_NumWebVisitsMonth
4143418   +          +    -0.00027499457791 * S_RFMstat  +    -0.71480759211982 *
4143419   +        S_RMntFrq  +     2.19072220135069 * S_Recency
4143420   +          +    -0.32246312005896 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.93801069736585 * S_AcceptedCmpTotal + 1.10394781020217 * 
S_Age + -0.47335296021798 * S_Frq + -1.34212492602253 * S_Income + -1.34380793722996 * 
S_Kidhome + 0.9110881410704 * S_Mnt + -2.21001317666388 * S_MntFishProducts + 0.73821267564247 
* S_MntFruits + 0.16536006752146 * S_MntGoldProds + 0.03402222784641 * S_MntMeatProducts + 
0.96043668102736 * S_MntSweetProducts + -1.40670343451334 * S_MntWines + 0.81378739821838 * 
S_MonthsAsCustomer + -0.45596935664336 * S_NumCatalogPurchases + -0.09282222088797 * 
S_NumDealsPurchases + 0.10726247938321 * S_NumDistPurchases + -1.1235971458527 * 
S_NumStorePurchases + -0.78304387839877 * S_NumWebPurchases + -0.44139243179956 * 
S_NumWebVisitsMonth + -0.00027499457791 * S_RFMstat + -0.71480759211982 * S_RMntFrq + 
2.19072220135069 * S_Recency + -0.32246312005896 * S_Teenhome ;
4143421   +   H1x2_3  =    -0.33286965179681 * S_AcceptedCmpTotal
4143422   +          +     0.25643420238739 * S_Age  +     1.78251276306291 * S_Frq
4143423   +          +     0.42668628662657 * S_Income  +    -0.44555069154972 *
4143424   +        S_Kidhome  +     0.99430376599176 * S_Mnt  +     0.37152911215285 *
4143425   +        S_MntFishProducts  +    -1.00181313725345 * S_MntFruits
4143426   +          +    -1.88393479121141 * S_MntGoldProds  +    -1.71643056154209 *
4143427   +        S_MntMeatProducts  +    -0.69325136508245 * S_MntSweetProducts
4143428   +          +     0.36062578298416 * S_MntWines  +    -1.43361051175418 *
4143429   +        S_MonthsAsCustomer  +     0.92624996511804 * S_NumCatalogPurchases
4143430   +          +     0.35349185459988 * S_NumDealsPurchases
4143431   +          +     0.06853677714859 * S_NumDistPurchases
4143432   +          +    -1.47546012999338 * S_NumStorePurchases
4143433   +          +     0.20926435398916 * S_NumWebPurchases
4143434   +          +    -1.00535683639093 * S_NumWebVisitsMonth
4143435   +          +     0.39738023685345 * S_RFMstat  +     0.54359550262445 *
4143436   +        S_RMntFrq  +    -1.59138379954757 * S_Recency
4143437   +          +    -0.72224029606658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.33286965179681 * S_AcceptedCmpTotal + 0.25643420238739 * 
S_Age + 1.78251276306291 * S_Frq + 0.42668628662657 * S_Income + -0.44555069154972 * S_Kidhome 
+ 0.99430376599176 * S_Mnt + 0.37152911215285 * S_MntFishProducts + -1.00181313725345 * 
S_MntFruits + -1.88393479121141 * S_MntGoldProds + -1.71643056154209 * S_MntMeatProducts + 
-0.69325136508245 * S_MntSweetProducts + 0.36062578298416 * S_MntWines + -1.43361051175418 * 
S_MonthsAsCustomer + 0.92624996511804 * S_NumCatalogPurchases + 0.35349185459988 * 
S_NumDealsPurchases + 0.06853677714859 * S_NumDistPurchases + -1.47546012999338 * 
S_NumStorePurchases + 0.20926435398916 * S_NumWebPurchases + -1.00535683639093 * 
S_NumWebVisitsMonth + 0.39738023685345 * S_RFMstat + 0.54359550262445 * S_RMntFrq + 
-1.59138379954757 * S_Recency + -0.72224029606658 * S_Teenhome ;
4143438   +   H1x2_4  =     -0.0656876758781 * S_AcceptedCmpTotal
4143439   +          +    -0.38220805193452 * S_Age  +    -0.62740801625755 * S_Frq
4143440   +          +     0.62992117571672 * S_Income  +      1.6289723191423 *
4143441   +        S_Kidhome  +     0.37209535830613 * S_Mnt  +     0.55983487785376 *
4143442   +        S_MntFishProducts  +    -2.12992009015736 * S_MntFruits
4143443   +          +    -0.38291517806426 * S_MntGoldProds  +    -1.36584955015054 *
4143444   +        S_MntMeatProducts  +     0.60790195398286 * S_MntSweetProducts
4143445   +          +     2.43674403604903 * S_MntWines  +     -0.0680555682506 *
4143446   +        S_MonthsAsCustomer  +    -0.38141588539042 * S_NumCatalogPurchases
4143447   +          +      0.3873586120272 * S_NumDealsPurchases
4143448   +          +     0.25911651157596 * S_NumDistPurchases
4143449   +          +     1.58922489084287 * S_NumStorePurchases
4143450   +          +     0.49041797743368 * S_NumWebPurchases
4143451   +          +     -1.5425586871929 * S_NumWebVisitsMonth
4143452   +          +    -0.68794085469802 * S_RFMstat  +     1.43555366196783 *
4143453   +        S_RMntFrq  +     1.03099569333498 * S_Recency
4143454   +          +    -0.33160793159803 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.0656876758781 * S_AcceptedCmpTotal + -0.38220805193452 * 
S_Age + -0.62740801625755 * S_Frq + 0.62992117571672 * S_Income + 1.6289723191423 * S_Kidhome 
+ 0.37209535830613 * S_Mnt + 0.55983487785376 * S_MntFishProducts + -2.12992009015736 * 
S_MntFruits + -0.38291517806426 * S_MntGoldProds + -1.36584955015054 * S_MntMeatProducts + 
0.60790195398286 * S_MntSweetProducts + 2.43674403604903 * S_MntWines + -0.0680555682506 * 
S_MonthsAsCustomer + -0.38141588539042 * S_NumCatalogPurchases + 0.3873586120272 * 
S_NumDealsPurchases + 0.25911651157596 * S_NumDistPurchases + 1.58922489084287 * 
S_NumStorePurchases + 0.49041797743368 * S_NumWebPurchases + -1.5425586871929 * 
S_NumWebVisitsMonth + -0.68794085469802 * S_RFMstat + 1.43555366196783 * S_RMntFrq + 
1.03099569333498 * S_Recency + -0.33160793159803 * S_Teenhome ;
4143455   +   H1x2_5  =      1.1619646008295 * S_AcceptedCmpTotal
4143456   +          +     -1.1099918698895 * S_Age  +     1.07090049938562 * S_Frq
4143457   +          +     0.68405730495336 * S_Income  +     0.10310173850527 *
4143458   +        S_Kidhome  +    -0.20536085581003 * S_Mnt  +    -0.13505440333321 *
4143459   +        S_MntFishProducts  +      0.7330354505267 * S_MntFruits
4143460   +          +    -0.09266368133722 * S_MntGoldProds  +     0.11251229112529 *
4143461   +        S_MntMeatProducts  +     0.93293215365852 * S_MntSweetProducts
4143462   +          +    -0.30739945619686 * S_MntWines  +     1.60111236559554 *
4143463   +        S_MonthsAsCustomer  +    -0.55541485540949 * S_NumCatalogPurchases
4143464   +          +    -0.60830880287865 * S_NumDealsPurchases
4143465   +          +      0.0745331267194 * S_NumDistPurchases
4143466   +          +    -1.39472448256952 * S_NumStorePurchases
4143467   +          +     1.95372179969087 * S_NumWebPurchases
4143468   +          +    -0.63307356390404 * S_NumWebVisitsMonth
4143469   +          +    -1.45142676869601 * S_RFMstat  +    -0.89091053567015 *
4143470   +        S_RMntFrq  +    -0.29197897313114 * S_Recency
4143471   +          +     0.02610681671236 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.1619646008295 * S_AcceptedCmpTotal + -1.1099918698895 * S_Age 
+ 1.07090049938562 * S_Frq + 0.68405730495336 * S_Income + 0.10310173850527 * S_Kidhome + 
-0.20536085581003 * S_Mnt + -0.13505440333321 * S_MntFishProducts + 0.7330354505267 * 
S_MntFruits + -0.09266368133722 * S_MntGoldProds + 0.11251229112529 * S_MntMeatProducts + 
0.93293215365852 * S_MntSweetProducts + -0.30739945619686 * S_MntWines + 1.60111236559554 * 
S_MonthsAsCustomer + -0.55541485540949 * S_NumCatalogPurchases + -0.60830880287865 * 
S_NumDealsPurchases + 0.0745331267194 * S_NumDistPurchases + -1.39472448256952 * 
S_NumStorePurchases + 1.95372179969087 * S_NumWebPurchases + -0.63307356390404 * 
S_NumWebVisitsMonth + -1.45142676869601 * S_RFMstat + -0.89091053567015 * S_RMntFrq + 
-0.29197897313114 * S_Recency + 0.02610681671236 * S_Teenhome ;
4143472   +   H1x2_1  = H1x2_1  +    -0.60663534965526 * AcceptedCmp10
4143473   +          +     0.86940361180064 * AcceptedCmp20  +     1.96097801395475 *
4143474   +        AcceptedCmp30  +    -0.07604718607607 * AcceptedCmp40
4143475   +          +    -2.82012437662904 * AcceptedCmp50  +     2.92223307409835 *
4143476   +        Complain0  +      0.7388639458943 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.60663534965526 * AcceptedCmp10 + 0.86940361180064 * 
AcceptedCmp20 + 1.96097801395475 * AcceptedCmp30 + -0.07604718607607 * AcceptedCmp40 + 
-2.82012437662904 * AcceptedCmp50 + 2.92223307409835 * Complain0 + 0.7388639458943 * 
HigherEducationBinary0 ;
4143477   +   H1x2_2  = H1x2_2  +    -0.44975979140124 * AcceptedCmp10
4143478   +          +    -0.14894854897951 * AcceptedCmp20  +     1.05214102326393 *
4143479   +        AcceptedCmp30  +    -0.24568060312448 * AcceptedCmp40
4143480   +          +    -0.32148548771167 * AcceptedCmp50  +    -0.06212131202705 *
4143481   +        Complain0  +    -1.15456299494407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.44975979140124 * AcceptedCmp10 + -0.14894854897951 
* AcceptedCmp20 + 1.05214102326393 * AcceptedCmp30 + -0.24568060312448 * AcceptedCmp40 + 
-0.32148548771167 * AcceptedCmp50 + -0.06212131202705 * Complain0 + -1.15456299494407 * 
HigherEducationBinary0 ;
4143482   +   H1x2_3  = H1x2_3  +     0.05559829595526 * AcceptedCmp10
4143483   +          +    -0.79357273390501 * AcceptedCmp20  +     1.19638475921939 *
4143484   +        AcceptedCmp30  +     -0.4185483500346 * AcceptedCmp40
4143485   +          +     1.62070541716774 * AcceptedCmp50  +     0.42618871432227 *
4143486   +        Complain0  +    -1.31545071935076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.05559829595526 * AcceptedCmp10 + -0.79357273390501 * 
AcceptedCmp20 + 1.19638475921939 * AcceptedCmp30 + -0.4185483500346 * AcceptedCmp40 + 
1.62070541716774 * AcceptedCmp50 + 0.42618871432227 * Complain0 + -1.31545071935076 * 
HigherEducationBinary0 ;
4143487   +   H1x2_4  = H1x2_4  +     0.79295384489774 * AcceptedCmp10
4143488   +          +    -1.12840237512106 * AcceptedCmp20  +     1.32129555401653 *
4143489   +        AcceptedCmp30  +    -0.25952521594596 * AcceptedCmp40
4143490   +          +     0.80872302488736 * AcceptedCmp50  +     1.00677398871609 *
4143491   +        Complain0  +    -0.40309387727555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.79295384489774 * AcceptedCmp10 + -1.12840237512106 * 
AcceptedCmp20 + 1.32129555401653 * AcceptedCmp30 + -0.25952521594596 * AcceptedCmp40 + 
0.80872302488736 * AcceptedCmp50 + 1.00677398871609 * Complain0 + -0.40309387727555 * 
HigherEducationBinary0 ;
4143492   +   H1x2_5  = H1x2_5  +     0.27407087260629 * AcceptedCmp10
4143493   +          +    -1.62993283587806 * AcceptedCmp20  +     -0.7976151702219 *
4143494   +        AcceptedCmp30  +    -1.43236001965205 * AcceptedCmp40
4143495   +          +     0.31785497417833 * AcceptedCmp50  +     -0.4935881696628 *
4143496   +        Complain0  +    -0.90101154412077 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.27407087260629 * AcceptedCmp10 + -1.62993283587806 * 
AcceptedCmp20 + -0.7976151702219 * AcceptedCmp30 + -1.43236001965205 * AcceptedCmp40 + 
0.31785497417833 * AcceptedCmp50 + -0.4935881696628 * Complain0 + -0.90101154412077 * 
HigherEducationBinary0 ;
4143497   +   H1x2_1  = H1x2_1  +    -0.42532202605687 * Education2n_Cycle
4143498   +          +     0.05209663685716 * EducationBasic  +     1.32477268007154 *
4143499   +        EducationGraduation  +    -1.16900224373137 * EducationMaster
4143500   +          +    -1.33377871643323 * Marital_StatusDivorced
4143501   +          +    -0.87184228840898 * Marital_StatusMarried
4143502   +          +     1.41223186340257 * Marital_StatusSingle
4143503   +          +     0.26542930660962 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.42532202605687 * Education2n_Cycle + 
0.05209663685716 * EducationBasic + 1.32477268007154 * EducationGraduation + -1.16900224373137 
* EducationMaster + -1.33377871643323 * Marital_StatusDivorced + -0.87184228840898 * 
Marital_StatusMarried + 1.41223186340257 * Marital_StatusSingle + 0.26542930660962 * 
Marital_StatusTogether ;
4143504   +   H1x2_2  = H1x2_2  +     0.31980851177227 * Education2n_Cycle
4143505   +          +     1.82629979795037 * EducationBasic  +     0.59482979766527 *
4143506   +        EducationGraduation  +     0.38341272155343 * EducationMaster
4143507   +          +    -0.21479890935233 * Marital_StatusDivorced
4143508   +          +     -0.0025459519579 * Marital_StatusMarried
4143509   +          +     1.33900491702264 * Marital_StatusSingle
4143510   +          +     0.31338385402434 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.31980851177227 * Education2n_Cycle + 
1.82629979795037 * EducationBasic + 0.59482979766527 * EducationGraduation + 0.38341272155343 
* EducationMaster + -0.21479890935233 * Marital_StatusDivorced + -0.0025459519579 * 
Marital_StatusMarried + 1.33900491702264 * Marital_StatusSingle + 0.31338385402434 * 
Marital_StatusTogether ;
4143511   +   H1x2_3  = H1x2_3  +     -1.1277686958847 * Education2n_Cycle
4143512   +          +    -0.32701971979058 * EducationBasic  +      0.4361680205519 *
4143513   +        EducationGraduation  +     0.60739269725685 * EducationMaster
4143514   +          +    -0.38307267471999 * Marital_StatusDivorced
4143515   +          +     0.97088969451415 * Marital_StatusMarried
4143516   +          +    -0.28578224473381 * Marital_StatusSingle
4143517   +          +     0.16178086683874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.1277686958847 * Education2n_Cycle + 
-0.32701971979058 * EducationBasic + 0.4361680205519 * EducationGraduation + 0.60739269725685 
* EducationMaster + -0.38307267471999 * Marital_StatusDivorced + 0.97088969451415 * 
Marital_StatusMarried + -0.28578224473381 * Marital_StatusSingle + 0.16178086683874 * 
Marital_StatusTogether ;
4143518   +   H1x2_4  = H1x2_4  +    -1.21481485652985 * Education2n_Cycle
4143519   +          +    -0.30231261977781 * EducationBasic  +     0.33993210461674 *
4143520   +        EducationGraduation  +     0.14160673378252 * EducationMaster
4143521   +          +    -1.42229401093569 * Marital_StatusDivorced
4143522   +          +      0.7234508382397 * Marital_StatusMarried
4143523   +          +    -0.29062202974628 * Marital_StatusSingle
4143524   +          +     1.00102560376832 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.21481485652985 * Education2n_Cycle + 
-0.30231261977781 * EducationBasic + 0.33993210461674 * EducationGraduation + 0.14160673378252 
* EducationMaster + -1.42229401093569 * Marital_StatusDivorced + 0.7234508382397 * 
Marital_StatusMarried + -0.29062202974628 * Marital_StatusSingle + 1.00102560376832 * 
Marital_StatusTogether ;
4143525   +   H1x2_5  = H1x2_5  +     0.47313927233084 * Education2n_Cycle
4143526   +          +     0.53675687099431 * EducationBasic  +    -0.75029054398953 *
4143527   +        EducationGraduation  +     -0.7118631990538 * EducationMaster
4143528   +          +    -0.99067637207205 * Marital_StatusDivorced
4143529   +          +    -0.50245902142079 * Marital_StatusMarried
4143530   +          +     0.54214494533793 * Marital_StatusSingle
4143531   +          +    -1.90023876403873 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.47313927233084 * Education2n_Cycle + 
0.53675687099431 * EducationBasic + -0.75029054398953 * EducationGraduation + -0.7118631990538 
* EducationMaster + -0.99067637207205 * Marital_StatusDivorced + -0.50245902142079 * 
Marital_StatusMarried + 0.54214494533793 * Marital_StatusSingle + -1.90023876403873 * 
Marital_StatusTogether ;
4143532   +   H1x2_1  =    -0.76220110175787 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.76220110175787 + H1x2_1 ;
4143533   +   H1x2_2  =     0.33238308796509 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.33238308796509 + H1x2_2 ;
4143534   +   H1x2_3  =    -1.79229186263718 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.79229186263718 + H1x2_3 ;
4143535   +   H1x2_4  =     2.90076107393596 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 2.90076107393596 + H1x2_4 ;
4143536   +   H1x2_5  =    -1.75965576502183 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.75965576502183 + H1x2_5 ;
4143537   +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
4143538   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
4143539   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4143540   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
4143541   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
4143542   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
4143543   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
4143544   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
4143545   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
4143546   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
4143547   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
4143548   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
4143549   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
4143550   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
4143551   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
4143552   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
4143553   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
4143554   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
4143555   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
4143556   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
4143557   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
4143558   +END;
MPRINT(EM_DIAGRAM):   END;
4143559   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4143560   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
4143561   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
4143562   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
4143563   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
4143564   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
4143565   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
4143566   +END;
MPRINT(EM_DIAGRAM):   END;
4143567   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4143568   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
4143569   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4143570   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4143571   +   H2x1_1  =       1.974359971482 * H1x1_1  +     2.56630185065386 * H1x1_2
4143572   +          +    -2.09978917716486 * H1x1_3  +      2.5733942680354 * H1x1_4
4143573   +          +    -3.36902992698085 * H1x1_5  +    -2.45757278280195 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.974359971482 * H1x1_1 + 2.56630185065386 * H1x1_2 + 
-2.09978917716486 * H1x1_3 + 2.5733942680354 * H1x1_4 + -3.36902992698085 * H1x1_5 + 
-2.45757278280195 * H1x1_6 ;
4143574   +   H2x1_2  =    -0.31797232371002 * H1x1_1  +     1.40395330167402 * H1x1_2
4143575   +          +     1.81616324109762 * H1x1_3  +     1.53849589982775 * H1x1_4
4143576   +          +    -0.63132385856109 * H1x1_5  +    -2.28426391810485 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.31797232371002 * H1x1_1 + 1.40395330167402 * H1x1_2 + 
1.81616324109762 * H1x1_3 + 1.53849589982775 * H1x1_4 + -0.63132385856109 * H1x1_5 + 
-2.28426391810485 * H1x1_6 ;
4143577   +   H2x1_3  =    -1.34821716876354 * H1x1_1  +    -1.59136815069547 * H1x1_2
4143578   +          +     1.51830421093731 * H1x1_3  +     0.25947292816575 * H1x1_4
4143579   +          +     0.68626537551183 * H1x1_5  +     0.08021226539433 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.34821716876354 * H1x1_1 + -1.59136815069547 * H1x1_2 + 
1.51830421093731 * H1x1_3 + 0.25947292816575 * H1x1_4 + 0.68626537551183 * H1x1_5 + 
0.08021226539433 * H1x1_6 ;
4143580   +   H2x1_4  =     1.81371453071507 * H1x1_1  +     2.86509325576366 * H1x1_2
4143581   +          +    -2.51923468751378 * H1x1_3  +     3.48823967488449 * H1x1_4
4143582   +          +    -1.98439811139438 * H1x1_5  +    -1.35359233519863 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.81371453071507 * H1x1_1 + 2.86509325576366 * H1x1_2 + 
-2.51923468751378 * H1x1_3 + 3.48823967488449 * H1x1_4 + -1.98439811139438 * H1x1_5 + 
-1.35359233519863 * H1x1_6 ;
4143583   +   H2x1_5  =     2.41779243188377 * H1x1_1  +     2.38684872287302 * H1x1_2
4143584   +          +    -2.38697428830295 * H1x1_3  +     3.64463866412774 * H1x1_4
4143585   +          +    -6.25925640356471 * H1x1_5  +    -2.41187367604766 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.41779243188377 * H1x1_1 + 2.38684872287302 * H1x1_2 + 
-2.38697428830295 * H1x1_3 + 3.64463866412774 * H1x1_4 + -6.25925640356471 * H1x1_5 + 
-2.41187367604766 * H1x1_6 ;
4143586   +   H2x1_6  =    -0.72042650045348 * H1x1_1  +      0.1896194130913 * H1x1_2
4143587   +          +     0.90899894568677 * H1x1_3  +    -1.82868335056689 * H1x1_4
4143588   +          +     0.25430380699211 * H1x1_5  +     0.21617396847163 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.72042650045348 * H1x1_1 + 0.1896194130913 * H1x1_2 + 
0.90899894568677 * H1x1_3 + -1.82868335056689 * H1x1_4 + 0.25430380699211 * H1x1_5 + 
0.21617396847163 * H1x1_6 ;
4143589   +   H2x1_1  = H2x1_1  +     1.25654059966646 * H1x2_1
4143590   +          +     1.54802434303135 * H1x2_2  +     -0.8831980397117 * H1x2_3
4143591   +          +    -0.06778839937099 * H1x2_4  +      0.5440972304381 * H1x2_5
4143592   +          +      0.2606136576082 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.25654059966646 * H1x2_1 + 1.54802434303135 * H1x2_2 
+ -0.8831980397117 * H1x2_3 + -0.06778839937099 * H1x2_4 + 0.5440972304381 * H1x2_5 + 
0.2606136576082 * H1x2_6 ;
4143593   +   H2x1_2  = H2x1_2  +      1.1804478706954 * H1x2_1
4143594   +          +    -1.54526687654235 * H1x2_2  +    -1.84586479319799 * H1x2_3
4143595   +          +     1.53060510120437 * H1x2_4  +     1.17038673632413 * H1x2_5
4143596   +          +    -0.33816948355449 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.1804478706954 * H1x2_1 + -1.54526687654235 * H1x2_2 
+ -1.84586479319799 * H1x2_3 + 1.53060510120437 * H1x2_4 + 1.17038673632413 * H1x2_5 + 
-0.33816948355449 * H1x2_6 ;
4143597   +   H2x1_3  = H2x1_3  +    -0.17829043463382 * H1x2_1
4143598   +          +    -0.25137506897353 * H1x2_2  +     0.16242586068799 * H1x2_3
4143599   +          +    -0.09404795949359 * H1x2_4  +    -0.46228597203598 * H1x2_5
4143600   +          +    -2.05648585275111 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.17829043463382 * H1x2_1 + -0.25137506897353 * 
H1x2_2 + 0.16242586068799 * H1x2_3 + -0.09404795949359 * H1x2_4 + -0.46228597203598 * H1x2_5 + 
-2.05648585275111 * H1x2_6 ;
4143601   +   H2x1_4  = H2x1_4  +     0.42433995729877 * H1x2_1
4143602   +          +    -0.48506090180667 * H1x2_2  +    -2.00023889633201 * H1x2_3
4143603   +          +    -2.18353148884875 * H1x2_4  +      1.8888560029491 * H1x2_5
4143604   +          +     0.10756694741742 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.42433995729877 * H1x2_1 + -0.48506090180667 * H1x2_2 
+ -2.00023889633201 * H1x2_3 + -2.18353148884875 * H1x2_4 + 1.8888560029491 * H1x2_5 + 
0.10756694741742 * H1x2_6 ;
4143605   +   H2x1_5  = H2x1_5  +     1.56363187716685 * H1x2_1
4143606   +          +    -1.60380055270086 * H1x2_2  +    -0.10253336309679 * H1x2_3
4143607   +          +    -0.70868484989608 * H1x2_4  +    -1.01428312449496 * H1x2_5
4143608   +          +    -0.52564497366659 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.56363187716685 * H1x2_1 + -1.60380055270086 * H1x2_2 
+ -0.10253336309679 * H1x2_3 + -0.70868484989608 * H1x2_4 + -1.01428312449496 * H1x2_5 + 
-0.52564497366659 * H1x2_6 ;
4143609   +   H2x1_6  = H2x1_6  +    -2.54663319607132 * H1x2_1
4143610   +          +    -0.26971572820094 * H1x2_2  +      0.0632302804701 * H1x2_3
4143611   +          +     0.24322354570335 * H1x2_4  +     0.66904111988013 * H1x2_5
4143612   +          +     0.74493468449949 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -2.54663319607132 * H1x2_1 + -0.26971572820094 * 
H1x2_2 + 0.0632302804701 * H1x2_3 + 0.24322354570335 * H1x2_4 + 0.66904111988013 * H1x2_5 + 
0.74493468449949 * H1x2_6 ;
4143613   +   H2x1_1  =    -0.48109096483079 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.48109096483079 + H2x1_1 ;
4143614   +   H2x1_2  =     1.80708027085243 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.80708027085243 + H2x1_2 ;
4143615   +   H2x1_3  =    -0.46023689639613 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.46023689639613 + H2x1_3 ;
4143616   +   H2x1_4  =     0.33871753804401 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.33871753804401 + H2x1_4 ;
4143617   +   H2x1_5  =    -0.31584249921712 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.31584249921712 + H2x1_5 ;
4143618   +   H2x1_6  =     0.30285416134468 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.30285416134468 + H2x1_6 ;
4143619   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4143620   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4143621   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
4143622   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
4143623   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
4143624   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
4143625   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
4143626   +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
4143627   +END;
MPRINT(EM_DIAGRAM):   END;
4143628   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4143629   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
4143630   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
4143631   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
4143632   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
4143633   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
4143634   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
4143635   +END;
MPRINT(EM_DIAGRAM):   END;
4143636   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4143637   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4143638   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4143639   +
4143640   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
4143641   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
4143642   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4143643   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
4143644   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
4143645   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4143646   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
4143647   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4143648   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4143649   +end;
MPRINT(EM_DIAGRAM):   end;
4143650   +else do;
MPRINT(EM_DIAGRAM):   else do;
4143651   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
4143652   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
4143653   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
4143654   +   end;
MPRINT(EM_DIAGRAM):   end;
4143655   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
4143656   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
4143657   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
4143658   +   end;
MPRINT(EM_DIAGRAM):   end;
4143659   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4143660   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4143661   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4143662   +   end;
MPRINT(EM_DIAGRAM):   end;
4143663   +end;
MPRINT(EM_DIAGRAM):   end;
4143664   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4143665   +   P_DepVar1  =     7.89179702798476 * H2x1_1  +    -2.13955806072986 * H2x1_2
4143666   +          +    -3.88305304025889 * H2x1_3  +     4.07340753853874 * H2x1_4
4143667   +          +     7.74293596833296 * H2x1_5  +     -3.8939011811129 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.89179702798476 * H2x1_1 + -2.13955806072986 * H2x1_2 + 
-3.88305304025889 * H2x1_3 + 4.07340753853874 * H2x1_4 + 7.74293596833296 * H2x1_5 + 
-3.8939011811129 * H2x1_6 ;
4143668   +   P_DepVar1  =    -5.20107973804597 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.20107973804597 + P_DepVar1 ;
4143669   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4143670   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4143671   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4143672   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4143673   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4143674   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4143675   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4143676   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4143677   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4143678   +END;
MPRINT(EM_DIAGRAM):   END;
4143679   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4143680   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4143681   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4143682   +END;
MPRINT(EM_DIAGRAM):   END;
4143683   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4143684   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4143685   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4143686   +END;
MPRINT(EM_DIAGRAM):   END;
4143687   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
4143688   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
4143689   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
4143690   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
4143691   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
4143692   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
4143693   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
4143694   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4143695   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4143696   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4143697   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4143698   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4143699   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4143700   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4143701   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4143702   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4143703   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4143704   +END;
MPRINT(EM_DIAGRAM):   END;
4143705   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4143706   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4143707   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4143708   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
4143709   +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
4143710   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4143711   +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
4143712   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4143713   +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
4143714   +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
4143715   +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
4143716   +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
4143717   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4143718   +* Renaming Into variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural11;
4143719   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4143720   +length AutoNeural11_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural11_I_DepVar $32;
4143721   +drop AutoNeural11_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_I_DepVar;
4143722   +AutoNeural11_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural11_I_DepVar = I_DepVar;
4143723   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4143724   +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
4143725   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4143726   +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
4143727   +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
4143728   +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
4143729   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4143730   +* Ensmbl38: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Scoring Code of model 7 of 7;
4143731   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4143732   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4143733   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
4143734   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
4143735   +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
4143736   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4143737   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4143738   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4143739   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4143740   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4143741   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4143742   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4143743   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4143744   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4143745   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4143746   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4143747   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4143748   +LENGTH _WARN_ $4
4143749   +      F_DepVar  $ 12
4143750   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
4143751   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4143752   +
4143753   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4143754   +
4143755   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4143756   +
4143757   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4143758   +
4143759   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4143760   +
4143761   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4143762   +
4143763   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4143764   +
4143765   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4143766   +
4143767   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4143768   +
4143769   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4143770   +
4143771   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4143772   +
4143773   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4143774   +
4143775   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4143776   +
4143777   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4143778   +
4143779   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4143780   +
4143781   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4143782   +
4143783   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4143784   +
4143785   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4143786   +
4143787   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4143788   +
4143789   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4143790   +
4143791   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4143792   +
4143793   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4143794   +
4143795   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4143796   +
4143797   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4143798   +
4143799   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4143800   +
4143801   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4143802   +
4143803   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4143804   +
4143805   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4143806   +
4143807   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4143808   +
4143809   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4143810   +
4143811   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4143812   +
4143813   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4143814   +
4143815   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4143816   +
4143817   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4143818   +
4143819   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4143820   +
4143821   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4143822   +
4143823   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4143824   +
4143825   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4143826   +
4143827   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4143828   +
4143829   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4143830   +
4143831   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
4143832   +
4143833   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
4143834   +
4143835   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
4143836   +
4143837   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
4143838   +
4143839   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
4143840   +
4143841   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
4143842   +
4143843   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
4143844   +
4143845   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
4143846   +
4143847   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
4143848   +
4143849   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
4143850   +
4143851   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
4143852   +
4143853   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
4143854   +
4143855   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
4143856   +
4143857   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
4143858   +
4143859   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
4143860   +
4143861   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
4143862   +
4143863   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
4143864   +
4143865   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
4143866   +
4143867   +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
4143868   +
4143869   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4143870   +
4143871   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4143872   +
4143873   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4143874   +
4143875   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4143876   +
4143877   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
4143878   +
4143879   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4143880   +
4143881   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
4143882   +
4143883   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4143884   +
4143885   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4143886   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4143887   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4143888   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4143889   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4143890   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4143891   +end;
MPRINT(EM_DIAGRAM):   end;
4143892   +else do;
MPRINT(EM_DIAGRAM):   else do;
4143893   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4143894   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4143895   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4143896   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4143897   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4143898   +   end;
MPRINT(EM_DIAGRAM):   end;
4143899   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4143900   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4143901   +   end;
MPRINT(EM_DIAGRAM):   end;
4143902   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4143903   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4143904   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4143905   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4143906   +   end;
MPRINT(EM_DIAGRAM):   end;
4143907   +end;
MPRINT(EM_DIAGRAM):   end;
4143908   +
4143909   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4143910   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4143911   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4143912   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4143913   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4143914   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4143915   +end;
MPRINT(EM_DIAGRAM):   end;
4143916   +else do;
MPRINT(EM_DIAGRAM):   else do;
4143917   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4143918   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4143919   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4143920   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4143921   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4143922   +   end;
MPRINT(EM_DIAGRAM):   end;
4143923   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4143924   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4143925   +   end;
MPRINT(EM_DIAGRAM):   end;
4143926   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4143927   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4143928   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4143929   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4143930   +   end;
MPRINT(EM_DIAGRAM):   end;
4143931   +end;
MPRINT(EM_DIAGRAM):   end;
4143932   +
4143933   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4143934   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4143935   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4143936   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4143937   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4143938   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4143939   +end;
MPRINT(EM_DIAGRAM):   end;
4143940   +else do;
MPRINT(EM_DIAGRAM):   else do;
4143941   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4143942   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4143943   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4143944   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4143945   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4143946   +   end;
MPRINT(EM_DIAGRAM):   end;
4143947   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4143948   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4143949   +   end;
MPRINT(EM_DIAGRAM):   end;
4143950   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4143951   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4143952   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4143953   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4143954   +   end;
MPRINT(EM_DIAGRAM):   end;
4143955   +end;
MPRINT(EM_DIAGRAM):   end;
4143956   +
4143957   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4143958   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4143959   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4143960   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4143961   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4143962   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4143963   +end;
MPRINT(EM_DIAGRAM):   end;
4143964   +else do;
MPRINT(EM_DIAGRAM):   else do;
4143965   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4143966   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4143967   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4143968   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4143969   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4143970   +   end;
MPRINT(EM_DIAGRAM):   end;
4143971   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4143972   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4143973   +   end;
MPRINT(EM_DIAGRAM):   end;
4143974   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4143975   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4143976   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4143977   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4143978   +   end;
MPRINT(EM_DIAGRAM):   end;
4143979   +end;
MPRINT(EM_DIAGRAM):   end;
4143980   +
4143981   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4143982   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4143983   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4143984   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4143985   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4143986   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4143987   +end;
MPRINT(EM_DIAGRAM):   end;
4143988   +else do;
MPRINT(EM_DIAGRAM):   else do;
4143989   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4143990   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4143991   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4143992   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4143993   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4143994   +   end;
MPRINT(EM_DIAGRAM):   end;
4143995   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4143996   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4143997   +   end;
MPRINT(EM_DIAGRAM):   end;
4143998   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4143999   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4144000   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4144001   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4144002   +   end;
MPRINT(EM_DIAGRAM):   end;
4144003   +end;
MPRINT(EM_DIAGRAM):   end;
4144004   +
4144005   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4144006   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4144007   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4144008   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4144009   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4144010   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4144011   +end;
MPRINT(EM_DIAGRAM):   end;
4144012   +else do;
MPRINT(EM_DIAGRAM):   else do;
4144013   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4144014   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4144015   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4144016   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4144017   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4144018   +   end;
MPRINT(EM_DIAGRAM):   end;
4144019   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4144020   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4144021   +   end;
MPRINT(EM_DIAGRAM):   end;
4144022   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4144023   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4144024   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4144025   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4144026   +   end;
MPRINT(EM_DIAGRAM):   end;
4144027   +end;
MPRINT(EM_DIAGRAM):   end;
4144028   +
4144029   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4144030   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4144031   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4144032   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4144033   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4144034   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4144035   +end;
MPRINT(EM_DIAGRAM):   end;
4144036   +else do;
MPRINT(EM_DIAGRAM):   else do;
4144037   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4144038   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4144039   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4144040   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4144041   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4144042   +   end;
MPRINT(EM_DIAGRAM):   end;
4144043   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4144044   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4144045   +   end;
MPRINT(EM_DIAGRAM):   end;
4144046   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4144047   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4144048   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4144049   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4144050   +   end;
MPRINT(EM_DIAGRAM):   end;
4144051   +end;
MPRINT(EM_DIAGRAM):   end;
4144052   +
4144053   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4144054   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
4144055   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4144056   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4144057   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4144058   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4144059   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4144060   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4144061   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4144062   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4144063   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4144064   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4144065   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4144066   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4144067   +end;
MPRINT(EM_DIAGRAM):   end;
4144068   +else do;
MPRINT(EM_DIAGRAM):   else do;
4144069   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4144070   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4144071   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4144072   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4144073   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4144074   +   end;
MPRINT(EM_DIAGRAM):   end;
4144075   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4144076   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4144077   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4144078   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4144079   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4144080   +   end;
MPRINT(EM_DIAGRAM):   end;
4144081   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4144082   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4144083   +   end;
MPRINT(EM_DIAGRAM):   end;
4144084   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4144085   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4144086   +   end;
MPRINT(EM_DIAGRAM):   end;
4144087   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4144088   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4144089   +   end;
MPRINT(EM_DIAGRAM):   end;
4144090   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4144091   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4144092   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4144093   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4144094   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4144095   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4144096   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4144097   +   end;
MPRINT(EM_DIAGRAM):   end;
4144098   +end;
MPRINT(EM_DIAGRAM):   end;
4144099   +
4144100   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4144101   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4144102   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
4144103   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4144104   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4144105   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4144106   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4144107   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4144108   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4144109   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4144110   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4144111   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4144112   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4144113   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4144114   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4144115   +end;
MPRINT(EM_DIAGRAM):   end;
4144116   +else do;
MPRINT(EM_DIAGRAM):   else do;
4144117   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4144118   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4144119   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4144120   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4144121   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4144122   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4144123   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4144124   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4144125   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4144126   +         end;
MPRINT(EM_DIAGRAM):   end;
4144127   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4144128   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4144129   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4144130   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4144131   +            end;
MPRINT(EM_DIAGRAM):   end;
4144132   +         end;
MPRINT(EM_DIAGRAM):   end;
4144133   +      end;
MPRINT(EM_DIAGRAM):   end;
4144134   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4144135   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4144136   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4144137   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4144138   +         end;
MPRINT(EM_DIAGRAM):   end;
4144139   +      end;
MPRINT(EM_DIAGRAM):   end;
4144140   +   end;
MPRINT(EM_DIAGRAM):   end;
4144141   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4144142   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4144143   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4144144   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4144145   +      end;
MPRINT(EM_DIAGRAM):   end;
4144146   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4144147   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4144148   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4144149   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4144150   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4144151   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4144152   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4144153   +         end;
MPRINT(EM_DIAGRAM):   end;
4144154   +      end;
MPRINT(EM_DIAGRAM):   end;
4144155   +   end;
MPRINT(EM_DIAGRAM):   end;
4144156   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4144157   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4144158   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4144159   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4144160   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4144161   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4144162   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4144163   +   end;
MPRINT(EM_DIAGRAM):   end;
4144164   +end;
MPRINT(EM_DIAGRAM):   end;
4144165   +
4144166   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4144167   +*** Checking missing input Interval
4144168   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4144169   +
4144170   +IF NMISS(
4144171   +   AcceptedCmpTotal ,
4144172   +   Age ,
4144173   +   Frq ,
4144174   +   Income ,
4144175   +   Kidhome ,
4144176   +   Mnt ,
4144177   +   MntFishProducts ,
4144178   +   MntFruits ,
4144179   +   MntGoldProds ,
4144180   +   MntMeatProducts ,
4144181   +   MntSweetProducts ,
4144182   +   MntWines ,
4144183   +   MonthsAsCustomer ,
4144184   +   NumCatalogPurchases ,
4144185   +   NumDealsPurchases ,
4144186   +   NumDistPurchases ,
4144187   +   NumStorePurchases ,
4144188   +   NumWebPurchases ,
4144189   +   NumWebVisitsMonth ,
4144190   +   RFMstat ,
4144191   +   RMntFrq ,
4144192   +   Recency ,
4144193   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
4144194   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4144195   +
4144196   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4144197   +END;
MPRINT(EM_DIAGRAM):   END;
4144198   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4144199   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4144200   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4144201   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4144202   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4144203   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
4144204   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4144205   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4144206   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4144207   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4144208   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4144209   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4144210   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
4144211   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4144212   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4144213   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4144214   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4144215   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
4144216   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4144217   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
4144218   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4144219   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4144220   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
4144221   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4144222   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
4144223   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4144224   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
4144225   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4144226   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
4144227   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4144228   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
4144229   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4144230   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
4144231   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4144232   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
4144233   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4144234   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4144235   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4144236   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4144237   +END;
MPRINT(EM_DIAGRAM):   END;
4144238   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4144239   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4144240   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4144241   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
4144242   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4144243   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4144244   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4144245   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4144246   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4144247   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4144248   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4144249   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4144250   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4144251   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4144252   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4144253   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4144254   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
4144255   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4144256   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4144257   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4144258   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4144259   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4144260   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
4144261   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4144262   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4144263   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
4144264   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4144265   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4144266   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
4144267   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4144268   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4144269   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4144270   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4144271   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
4144272   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4144273   +   ELSE S_NumCatalogPurchases
4144274   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4144275   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
4144276   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4144277   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4144278   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
4144279   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4144280   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4144281   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
4144282   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4144283   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4144284   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
4144285   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4144286   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4144287   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
4144288   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4144289   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4144290   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
4144291   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4144292   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4144293   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4144294   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4144295   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4144296   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4144297   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4144298   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4144299   +END;
MPRINT(EM_DIAGRAM):   END;
4144300   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4144301   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4144302   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4144303   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4144304   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4144305   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4144306   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4144307   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4144308   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4144309   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4144310   +   H1x1_1  =     0.63316204656896 * S_AcceptedCmpTotal
4144311   +          +    -0.24884200883415 * S_Age  +      -0.236584005151 * S_Frq
4144312   +          +     0.25406117591995 * S_Income  +    -0.56304122955704 *
4144313   +        S_Kidhome  +    -0.23687782938793 * S_Mnt  +    -0.09770906650074 *
4144314   +        S_MntFishProducts  +    -0.73487360819716 * S_MntFruits
4144315   +          +     0.14293909908147 * S_MntGoldProds  +     2.25015000307426 *
4144316   +        S_MntMeatProducts  +    -0.42178958150661 * S_MntSweetProducts
4144317   +          +    -2.35340366839307 * S_MntWines  +    -0.02380265380154 *
4144318   +        S_MonthsAsCustomer  +     1.16509321438746 * S_NumCatalogPurchases
4144319   +          +     1.17276395296242 * S_NumDealsPurchases
4144320   +          +     0.26632768295477 * S_NumDistPurchases
4144321   +          +    -1.26575615903579 * S_NumStorePurchases
4144322   +          +    -0.95316107557927 * S_NumWebPurchases
4144323   +          +     1.01828574356487 * S_NumWebVisitsMonth
4144324   +          +       0.795866263515 * S_RFMstat  +    -0.20490378142832 *
4144325   +        S_RMntFrq  +    -0.82943281422857 * S_Recency
4144326   +          +     0.16132418388418 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.63316204656896 * S_AcceptedCmpTotal + -0.24884200883415 * 
S_Age + -0.236584005151 * S_Frq + 0.25406117591995 * S_Income + -0.56304122955704 * S_Kidhome 
+ -0.23687782938793 * S_Mnt + -0.09770906650074 * S_MntFishProducts + -0.73487360819716 * 
S_MntFruits + 0.14293909908147 * S_MntGoldProds + 2.25015000307426 * S_MntMeatProducts + 
-0.42178958150661 * S_MntSweetProducts + -2.35340366839307 * S_MntWines + -0.02380265380154 * 
S_MonthsAsCustomer + 1.16509321438746 * S_NumCatalogPurchases + 1.17276395296242 * 
S_NumDealsPurchases + 0.26632768295477 * S_NumDistPurchases + -1.26575615903579 * 
S_NumStorePurchases + -0.95316107557927 * S_NumWebPurchases + 1.01828574356487 * 
S_NumWebVisitsMonth + 0.795866263515 * S_RFMstat + -0.20490378142832 * S_RMntFrq + 
-0.82943281422857 * S_Recency + 0.16132418388418 * S_Teenhome ;
4144327   +   H1x1_2  =    -0.43482920479481 * S_AcceptedCmpTotal
4144328   +          +     0.53350211221915 * S_Age  +    -0.06797700766223 * S_Frq
4144329   +          +     0.13771322007949 * S_Income  +     0.87012019559698 *
4144330   +        S_Kidhome  +     0.06026853274247 * S_Mnt  +    -0.43150595882972 *
4144331   +        S_MntFishProducts  +    -0.13728591661063 * S_MntFruits
4144332   +          +     0.35443873962923 * S_MntGoldProds  +     0.28102965401547 *
4144333   +        S_MntMeatProducts  +     0.52367949052365 * S_MntSweetProducts
4144334   +          +     0.35553595364078 * S_MntWines  +     0.37892120128383 *
4144335   +        S_MonthsAsCustomer  +     0.59057645965187 * S_NumCatalogPurchases
4144336   +          +     1.14485571201233 * S_NumDealsPurchases
4144337   +          +     0.21414266588987 * S_NumDistPurchases
4144338   +          +    -0.10530090074297 * S_NumStorePurchases
4144339   +          +    -0.41712321238458 * S_NumWebPurchases
4144340   +          +    -0.99760766791108 * S_NumWebVisitsMonth
4144341   +          +    -0.90203265666387 * S_RFMstat  +    -0.60947922673601 *
4144342   +        S_RMntFrq  +     1.10040128548883 * S_Recency
4144343   +          +     0.16728431679949 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.43482920479481 * S_AcceptedCmpTotal + 0.53350211221915 * 
S_Age + -0.06797700766223 * S_Frq + 0.13771322007949 * S_Income + 0.87012019559698 * S_Kidhome 
+ 0.06026853274247 * S_Mnt + -0.43150595882972 * S_MntFishProducts + -0.13728591661063 * 
S_MntFruits + 0.35443873962923 * S_MntGoldProds + 0.28102965401547 * S_MntMeatProducts + 
0.52367949052365 * S_MntSweetProducts + 0.35553595364078 * S_MntWines + 0.37892120128383 * 
S_MonthsAsCustomer + 0.59057645965187 * S_NumCatalogPurchases + 1.14485571201233 * 
S_NumDealsPurchases + 0.21414266588987 * S_NumDistPurchases + -0.10530090074297 * 
S_NumStorePurchases + -0.41712321238458 * S_NumWebPurchases + -0.99760766791108 * 
S_NumWebVisitsMonth + -0.90203265666387 * S_RFMstat + -0.60947922673601 * S_RMntFrq + 
1.10040128548883 * S_Recency + 0.16728431679949 * S_Teenhome ;
4144344   +   H1x1_3  =     0.26373486938499 * S_AcceptedCmpTotal
4144345   +          +    -0.22246756314756 * S_Age  +     0.49537720979115 * S_Frq
4144346   +          +     1.38815981786544 * S_Income  +    -0.93015968695331 *
4144347   +        S_Kidhome  +     0.11586216615481 * S_Mnt  +    -0.02105973515345 *
4144348   +        S_MntFishProducts  +    -0.28078442249811 * S_MntFruits
4144349   +          +    -0.01763878655129 * S_MntGoldProds  +     0.83934619541231 *
4144350   +        S_MntMeatProducts  +    -0.23417310915433 * S_MntSweetProducts
4144351   +          +    -0.29135819585991 * S_MntWines  +    -0.20792872642036 *
4144352   +        S_MonthsAsCustomer  +     1.05218745810839 * S_NumCatalogPurchases
4144353   +          +      0.7196418967437 * S_NumDealsPurchases
4144354   +          +     0.69035286374177 * S_NumDistPurchases
4144355   +          +     0.38027656631135 * S_NumStorePurchases
4144356   +          +    -0.18878358997924 * S_NumWebPurchases
4144357   +          +     1.61962062004798 * S_NumWebVisitsMonth
4144358   +          +    -0.04575386719745 * S_RFMstat  +     1.16358450490635 *
4144359   +        S_RMntFrq  +    -2.13821542142822 * S_Recency
4144360   +          +    -1.28960355207697 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.26373486938499 * S_AcceptedCmpTotal + -0.22246756314756 * 
S_Age + 0.49537720979115 * S_Frq + 1.38815981786544 * S_Income + -0.93015968695331 * S_Kidhome 
+ 0.11586216615481 * S_Mnt + -0.02105973515345 * S_MntFishProducts + -0.28078442249811 * 
S_MntFruits + -0.01763878655129 * S_MntGoldProds + 0.83934619541231 * S_MntMeatProducts + 
-0.23417310915433 * S_MntSweetProducts + -0.29135819585991 * S_MntWines + -0.20792872642036 * 
S_MonthsAsCustomer + 1.05218745810839 * S_NumCatalogPurchases + 0.7196418967437 * 
S_NumDealsPurchases + 0.69035286374177 * S_NumDistPurchases + 0.38027656631135 * 
S_NumStorePurchases + -0.18878358997924 * S_NumWebPurchases + 1.61962062004798 * 
S_NumWebVisitsMonth + -0.04575386719745 * S_RFMstat + 1.16358450490635 * S_RMntFrq + 
-2.13821542142822 * S_Recency + -1.28960355207697 * S_Teenhome ;
4144361   +   H1x1_4  =    -0.34331113295243 * S_AcceptedCmpTotal
4144362   +          +    -0.39878146063012 * S_Age  +     0.10068367322473 * S_Frq
4144363   +          +    -0.20171643525685 * S_Income  +    -0.76934260520569 *
4144364   +        S_Kidhome  +    -0.66782690219397 * S_Mnt  +     0.80905970181803 *
4144365   +        S_MntFishProducts  +    -0.03688782193215 * S_MntFruits
4144366   +          +     0.06641568264972 * S_MntGoldProds  +    -3.32390323965822 *
4144367   +        S_MntMeatProducts  +    -0.05413014598032 * S_MntSweetProducts
4144368   +          +     1.07708707113306 * S_MntWines  +     0.13185264889978 *
4144369   +        S_MonthsAsCustomer  +    -0.39476201074171 * S_NumCatalogPurchases
4144370   +          +    -0.00642902007204 * S_NumDealsPurchases
4144371   +          +     0.29785069480367 * S_NumDistPurchases
4144372   +          +    -0.42243322063147 * S_NumStorePurchases
4144373   +          +     0.54880896338383 * S_NumWebPurchases
4144374   +          +    -0.12525846016886 * S_NumWebVisitsMonth
4144375   +          +    -0.31397100953189 * S_RFMstat  +     -0.5192863720509 *
4144376   +        S_RMntFrq  +     0.10252211581449 * S_Recency
4144377   +          +     0.44223031313104 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.34331113295243 * S_AcceptedCmpTotal + -0.39878146063012 * 
S_Age + 0.10068367322473 * S_Frq + -0.20171643525685 * S_Income + -0.76934260520569 * 
S_Kidhome + -0.66782690219397 * S_Mnt + 0.80905970181803 * S_MntFishProducts + 
-0.03688782193215 * S_MntFruits + 0.06641568264972 * S_MntGoldProds + -3.32390323965822 * 
S_MntMeatProducts + -0.05413014598032 * S_MntSweetProducts + 1.07708707113306 * S_MntWines + 
0.13185264889978 * S_MonthsAsCustomer + -0.39476201074171 * S_NumCatalogPurchases + 
-0.00642902007204 * S_NumDealsPurchases + 0.29785069480367 * S_NumDistPurchases + 
-0.42243322063147 * S_NumStorePurchases + 0.54880896338383 * S_NumWebPurchases + 
-0.12525846016886 * S_NumWebVisitsMonth + -0.31397100953189 * S_RFMstat + -0.5192863720509 * 
S_RMntFrq + 0.10252211581449 * S_Recency + 0.44223031313104 * S_Teenhome ;
4144378   +   H1x1_5  =    -0.89949577087728 * S_AcceptedCmpTotal
4144379   +          +     -0.5133669560115 * S_Age  +     0.55814120515869 * S_Frq
4144380   +          +    -0.72790553700689 * S_Income  +     1.13470491167406 *
4144381   +        S_Kidhome  +     0.42465795563071 * S_Mnt  +     0.22642900369653 *
4144382   +        S_MntFishProducts  +    -0.10149694753146 * S_MntFruits
4144383   +          +    -0.05203167914723 * S_MntGoldProds  +    -0.42300460593042 *
4144384   +        S_MntMeatProducts  +    -0.11178206624825 * S_MntSweetProducts
4144385   +          +     1.57257994445012 * S_MntWines  +     0.02297554927807 *
4144386   +        S_MonthsAsCustomer  +    -0.60721423552141 * S_NumCatalogPurchases
4144387   +          +    -0.48404738328225 * S_NumDealsPurchases
4144388   +          +    -0.02464180457879 * S_NumDistPurchases
4144389   +          +     1.17201831082067 * S_NumStorePurchases
4144390   +          +     0.57453655167516 * S_NumWebPurchases
4144391   +          +    -1.94417019790248 * S_NumWebVisitsMonth
4144392   +          +     0.00073301476364 * S_RFMstat  +     0.12295343326875 *
4144393   +        S_RMntFrq  +      1.6169916658132 * S_Recency
4144394   +          +     0.09488579305439 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.89949577087728 * S_AcceptedCmpTotal + -0.5133669560115 * 
S_Age + 0.55814120515869 * S_Frq + -0.72790553700689 * S_Income + 1.13470491167406 * S_Kidhome 
+ 0.42465795563071 * S_Mnt + 0.22642900369653 * S_MntFishProducts + -0.10149694753146 * 
S_MntFruits + -0.05203167914723 * S_MntGoldProds + -0.42300460593042 * S_MntMeatProducts + 
-0.11178206624825 * S_MntSweetProducts + 1.57257994445012 * S_MntWines + 0.02297554927807 * 
S_MonthsAsCustomer + -0.60721423552141 * S_NumCatalogPurchases + -0.48404738328225 * 
S_NumDealsPurchases + -0.02464180457879 * S_NumDistPurchases + 1.17201831082067 * 
S_NumStorePurchases + 0.57453655167516 * S_NumWebPurchases + -1.94417019790248 * 
S_NumWebVisitsMonth + 0.00073301476364 * S_RFMstat + 0.12295343326875 * S_RMntFrq + 
1.6169916658132 * S_Recency + 0.09488579305439 * S_Teenhome ;
4144395   +   H1x1_6  =     0.01224996381937 * S_AcceptedCmpTotal
4144396   +          +     0.56818460209578 * S_Age  +    -0.50544994791872 * S_Frq
4144397   +          +    -0.39086889823619 * S_Income  +      0.2278709145292 *
4144398   +        S_Kidhome  +       0.221310975162 * S_Mnt  +     -0.2208719427117 *
4144399   +        S_MntFishProducts  +     0.33199116637803 * S_MntFruits
4144400   +          +    -0.20919304257884 * S_MntGoldProds  +     0.85155045239396 *
4144401   +        S_MntMeatProducts  +     0.32150401526792 * S_MntSweetProducts
4144402   +          +     0.24789026157513 * S_MntWines  +    -0.16427340869887 *
4144403   +        S_MonthsAsCustomer  +    -1.31657293247686 * S_NumCatalogPurchases
4144404   +          +    -1.49850531967483 * S_NumDealsPurchases
4144405   +          +    -0.82105466264223 * S_NumDistPurchases
4144406   +          +     0.29984603642824 * S_NumStorePurchases
4144407   +          +     0.06557123721611 * S_NumWebPurchases
4144408   +          +     1.04754749365002 * S_NumWebVisitsMonth
4144409   +          +     0.18881248406892 * S_RFMstat  +     0.26455728766984 *
4144410   +        S_RMntFrq  +     0.12396789666359 * S_Recency
4144411   +          +     0.04001049603668 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.01224996381937 * S_AcceptedCmpTotal + 0.56818460209578 * 
S_Age + -0.50544994791872 * S_Frq + -0.39086889823619 * S_Income + 0.2278709145292 * S_Kidhome 
+ 0.221310975162 * S_Mnt + -0.2208719427117 * S_MntFishProducts + 0.33199116637803 * 
S_MntFruits + -0.20919304257884 * S_MntGoldProds + 0.85155045239396 * S_MntMeatProducts + 
0.32150401526792 * S_MntSweetProducts + 0.24789026157513 * S_MntWines + -0.16427340869887 * 
S_MonthsAsCustomer + -1.31657293247686 * S_NumCatalogPurchases + -1.49850531967483 * 
S_NumDealsPurchases + -0.82105466264223 * S_NumDistPurchases + 0.29984603642824 * 
S_NumStorePurchases + 0.06557123721611 * S_NumWebPurchases + 1.04754749365002 * 
S_NumWebVisitsMonth + 0.18881248406892 * S_RFMstat + 0.26455728766984 * S_RMntFrq + 
0.12396789666359 * S_Recency + 0.04001049603668 * S_Teenhome ;
4144412   +   H1x1_1  = H1x1_1  +     -0.4293641198863 * AcceptedCmp10
4144413   +          +    -0.02562823362815 * AcceptedCmp20  +     0.16277388616218 *
4144414   +        AcceptedCmp30  +    -0.38952498475664 * AcceptedCmp40
4144415   +          +    -0.13756852377245 * AcceptedCmp50  +    -0.11393239206883 *
4144416   +        Complain0  +    -0.18422159910382 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.4293641198863 * AcceptedCmp10 + -0.02562823362815 * 
AcceptedCmp20 + 0.16277388616218 * AcceptedCmp30 + -0.38952498475664 * AcceptedCmp40 + 
-0.13756852377245 * AcceptedCmp50 + -0.11393239206883 * Complain0 + -0.18422159910382 * 
HigherEducationBinary0 ;
4144417   +   H1x1_2  = H1x1_2  +     -0.6690011671322 * AcceptedCmp10
4144418   +          +     0.30944418540454 * AcceptedCmp20  +     0.58989055832198 *
4144419   +        AcceptedCmp30  +    -0.11349554378017 * AcceptedCmp40
4144420   +          +     0.17747537507545 * AcceptedCmp50  +     0.31141201787728 *
4144421   +        Complain0  +    -0.14665102087088 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.6690011671322 * AcceptedCmp10 + 0.30944418540454 * 
AcceptedCmp20 + 0.58989055832198 * AcceptedCmp30 + -0.11349554378017 * AcceptedCmp40 + 
0.17747537507545 * AcceptedCmp50 + 0.31141201787728 * Complain0 + -0.14665102087088 * 
HigherEducationBinary0 ;
4144422   +   H1x1_3  = H1x1_3  +    -0.37718551551154 * AcceptedCmp10
4144423   +          +    -0.95419836616858 * AcceptedCmp20  +    -1.07782642598822 *
4144424   +        AcceptedCmp30  +    -0.36181507758379 * AcceptedCmp40
4144425   +          +    -0.20579221441057 * AcceptedCmp50  +     -0.2862570173476 *
4144426   +        Complain0  +     0.42095042003574 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.37718551551154 * AcceptedCmp10 + -0.95419836616858 
* AcceptedCmp20 + -1.07782642598822 * AcceptedCmp30 + -0.36181507758379 * AcceptedCmp40 + 
-0.20579221441057 * AcceptedCmp50 + -0.2862570173476 * Complain0 + 0.42095042003574 * 
HigherEducationBinary0 ;
4144427   +   H1x1_4  = H1x1_4  +     0.76282838117383 * AcceptedCmp10
4144428   +          +     0.17657215690894 * AcceptedCmp20  +     0.06936093547655 *
4144429   +        AcceptedCmp30  +    -0.31222684620157 * AcceptedCmp40
4144430   +          +     0.35916828202502 * AcceptedCmp50  +     0.15464859425769 *
4144431   +        Complain0  +    -0.12780871374988 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.76282838117383 * AcceptedCmp10 + 0.17657215690894 * 
AcceptedCmp20 + 0.06936093547655 * AcceptedCmp30 + -0.31222684620157 * AcceptedCmp40 + 
0.35916828202502 * AcceptedCmp50 + 0.15464859425769 * Complain0 + -0.12780871374988 * 
HigherEducationBinary0 ;
4144432   +   H1x1_5  = H1x1_5  +      0.0863832283968 * AcceptedCmp10
4144433   +          +    -0.01478152334234 * AcceptedCmp20  +    -0.25793605794945 *
4144434   +        AcceptedCmp30  +     0.75328991260718 * AcceptedCmp40
4144435   +          +     0.43869592545355 * AcceptedCmp50  +    -0.18444801256895 *
4144436   +        Complain0  +    -0.18540568245616 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0863832283968 * AcceptedCmp10 + -0.01478152334234 * 
AcceptedCmp20 + -0.25793605794945 * AcceptedCmp30 + 0.75328991260718 * AcceptedCmp40 + 
0.43869592545355 * AcceptedCmp50 + -0.18444801256895 * Complain0 + -0.18540568245616 * 
HigherEducationBinary0 ;
4144437   +   H1x1_6  = H1x1_6  +    -0.05476883960444 * AcceptedCmp10
4144438   +          +    -0.30796660956747 * AcceptedCmp20  +    -0.15332998700386 *
4144439   +        AcceptedCmp30  +     0.07190305484507 * AcceptedCmp40
4144440   +          +    -0.19344551087023 * AcceptedCmp50  +    -0.01671794402922 *
4144441   +        Complain0  +      0.4224003744836 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.05476883960444 * AcceptedCmp10 + -0.30796660956747 
* AcceptedCmp20 + -0.15332998700386 * AcceptedCmp30 + 0.07190305484507 * AcceptedCmp40 + 
-0.19344551087023 * AcceptedCmp50 + -0.01671794402922 * Complain0 + 0.4224003744836 * 
HigherEducationBinary0 ;
4144442   +   H1x1_1  = H1x1_1  +     0.06740641383122 * Education2n_Cycle
4144443   +          +      0.0427985447056 * EducationBasic  +     0.38043688251433 *
4144444   +        EducationGraduation  +     0.07595631354847 * EducationMaster
4144445   +          +     0.24583509957712 * Marital_StatusDivorced
4144446   +          +    -0.22681931588361 * Marital_StatusMarried
4144447   +          +    -0.12924106229536 * Marital_StatusSingle
4144448   +          +     -0.2262058185403 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.06740641383122 * Education2n_Cycle + 0.0427985447056 
* EducationBasic + 0.38043688251433 * EducationGraduation + 0.07595631354847 * EducationMaster 
+ 0.24583509957712 * Marital_StatusDivorced + -0.22681931588361 * Marital_StatusMarried + 
-0.12924106229536 * Marital_StatusSingle + -0.2262058185403 * Marital_StatusTogether ;
4144449   +   H1x1_2  = H1x1_2  +    -0.13120690973481 * Education2n_Cycle
4144450   +          +     0.37925506295244 * EducationBasic  +     0.31784700588218 *
4144451   +        EducationGraduation  +     0.23015089246655 * EducationMaster
4144452   +          +    -0.12585334311068 * Marital_StatusDivorced
4144453   +          +    -0.20835502467207 * Marital_StatusMarried
4144454   +          +    -0.13839534449368 * Marital_StatusSingle
4144455   +          +     0.64317572477668 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.13120690973481 * Education2n_Cycle + 
0.37925506295244 * EducationBasic + 0.31784700588218 * EducationGraduation + 0.23015089246655 
* EducationMaster + -0.12585334311068 * Marital_StatusDivorced + -0.20835502467207 * 
Marital_StatusMarried + -0.13839534449368 * Marital_StatusSingle + 0.64317572477668 * 
Marital_StatusTogether ;
4144456   +   H1x1_3  = H1x1_3  +     0.32305785926236 * Education2n_Cycle
4144457   +          +     0.23464353160373 * EducationBasic  +    -0.73832644067678 *
4144458   +        EducationGraduation  +    -0.03608560158257 * EducationMaster
4144459   +          +     0.35106363238113 * Marital_StatusDivorced
4144460   +          +     -1.3414808583918 * Marital_StatusMarried
4144461   +          +     1.40835320798486 * Marital_StatusSingle
4144462   +          +    -1.26805917396788 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.32305785926236 * Education2n_Cycle + 
0.23464353160373 * EducationBasic + -0.73832644067678 * EducationGraduation + 
-0.03608560158257 * EducationMaster + 0.35106363238113 * Marital_StatusDivorced + 
-1.3414808583918 * Marital_StatusMarried + 1.40835320798486 * Marital_StatusSingle + 
-1.26805917396788 * Marital_StatusTogether ;
4144463   +   H1x1_4  = H1x1_4  +    -0.14516593990466 * Education2n_Cycle
4144464   +          +     0.21457892528906 * EducationBasic  +      0.3693312496431 *
4144465   +        EducationGraduation  +      0.1746658332011 * EducationMaster
4144466   +          +     0.48174546958393 * Marital_StatusDivorced
4144467   +          +    -0.41416978858191 * Marital_StatusMarried
4144468   +          +    -0.23376801546265 * Marital_StatusSingle
4144469   +          +    -0.40569257078897 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.14516593990466 * Education2n_Cycle + 
0.21457892528906 * EducationBasic + 0.3693312496431 * EducationGraduation + 0.1746658332011 * 
EducationMaster + 0.48174546958393 * Marital_StatusDivorced + -0.41416978858191 * 
Marital_StatusMarried + -0.23376801546265 * Marital_StatusSingle + -0.40569257078897 * 
Marital_StatusTogether ;
4144470   +   H1x1_5  = H1x1_5  +    -0.00489214718621 * Education2n_Cycle
4144471   +          +     0.04788059649714 * EducationBasic  +      -0.479003778409 *
4144472   +        EducationGraduation  +     0.68875064631577 * EducationMaster
4144473   +          +    -0.67557643774246 * Marital_StatusDivorced
4144474   +          +     1.63844045917367 * Marital_StatusMarried
4144475   +          +    -0.70320960247699 * Marital_StatusSingle
4144476   +          +     1.26350112628909 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.00489214718621 * Education2n_Cycle + 
0.04788059649714 * EducationBasic + -0.479003778409 * EducationGraduation + 0.68875064631577 * 
EducationMaster + -0.67557643774246 * Marital_StatusDivorced + 1.63844045917367 * 
Marital_StatusMarried + -0.70320960247699 * Marital_StatusSingle + 1.26350112628909 * 
Marital_StatusTogether ;
4144477   +   H1x1_6  = H1x1_6  +     0.38566123849432 * Education2n_Cycle
4144478   +          +    -0.48006357411447 * EducationBasic  +     0.06594567975069 *
4144479   +        EducationGraduation  +    -0.68011360002443 * EducationMaster
4144480   +          +    -0.11371453086883 * Marital_StatusDivorced
4144481   +          +    -0.34226997176291 * Marital_StatusMarried
4144482   +          +    -1.01568676685754 * Marital_StatusSingle
4144483   +          +    -0.07673228755579 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.38566123849432 * Education2n_Cycle + 
-0.48006357411447 * EducationBasic + 0.06594567975069 * EducationGraduation + 
-0.68011360002443 * EducationMaster + -0.11371453086883 * Marital_StatusDivorced + 
-0.34226997176291 * Marital_StatusMarried + -1.01568676685754 * Marital_StatusSingle + 
-0.07673228755579 * Marital_StatusTogether ;
4144484   +   H1x1_1  =    -0.13665586104906 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.13665586104906 + H1x1_1 ;
4144485   +   H1x1_2  =    -1.74128345271319 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.74128345271319 + H1x1_2 ;
4144486   +   H1x1_3  =    -0.38226400326342 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.38226400326342 + H1x1_3 ;
4144487   +   H1x1_4  =    -0.64652756521333 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.64652756521333 + H1x1_4 ;
4144488   +   H1x1_5  =     0.89555568414722 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.89555568414722 + H1x1_5 ;
4144489   +   H1x1_6  =    -0.28536788363505 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.28536788363505 + H1x1_6 ;
4144490   +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
4144491   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
4144492   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , 
H1x1_7 );
4144493   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4144494   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
4144495   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
4144496   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
4144497   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
4144498   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
4144499   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
4144500   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
4144501   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
4144502   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
4144503   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
4144504   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
4144505   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
4144506   +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
4144507   +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
4144508   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
4144509   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
4144510   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
4144511   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
4144512   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
4144513   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
4144514   +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
4144515   +END;
MPRINT(EM_DIAGRAM):   END;
4144516   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4144517   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4144518   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4144519   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
4144520   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
4144521   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
4144522   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
4144523   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
4144524   +END;
MPRINT(EM_DIAGRAM):   END;
4144525   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4144526   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
4144527   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4144528   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4144529   +   H1x2_1  =    -0.46863593010465 * S_AcceptedCmpTotal
4144530   +          +     0.76938995153422 * S_Age  +    -0.10870665325086 * S_Frq
4144531   +          +    -0.01767709917897 * S_Income  +    -0.06564852978687 *
4144532   +        S_Kidhome  +     1.53975855599943 * S_Mnt  +     0.14885556549813 *
4144533   +        S_MntFishProducts  +     -0.3427211596875 * S_MntFruits
4144534   +          +     1.82311511422571 * S_MntGoldProds  +     1.16814585484266 *
4144535   +        S_MntMeatProducts  +    -0.03210183211362 * S_MntSweetProducts
4144536   +          +     0.21048598967441 * S_MntWines  +    -1.43075224286158 *
4144537   +        S_MonthsAsCustomer  +     0.17264791017938 * S_NumCatalogPurchases
4144538   +          +    -0.87259051567474 * S_NumDealsPurchases
4144539   +          +    -0.36454149529139 * S_NumDistPurchases
4144540   +          +     0.12447759925061 * S_NumStorePurchases
4144541   +          +    -1.08133487947367 * S_NumWebPurchases
4144542   +          +    -0.49882157745454 * S_NumWebVisitsMonth
4144543   +          +    -1.37163643041927 * S_RFMstat  +    -2.02270778627266 *
4144544   +        S_RMntFrq  +    -0.01174101172444 * S_Recency
4144545   +          +     1.37307999964517 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.46863593010465 * S_AcceptedCmpTotal + 0.76938995153422 * 
S_Age + -0.10870665325086 * S_Frq + -0.01767709917897 * S_Income + -0.06564852978687 * 
S_Kidhome + 1.53975855599943 * S_Mnt + 0.14885556549813 * S_MntFishProducts + -0.3427211596875 
* S_MntFruits + 1.82311511422571 * S_MntGoldProds + 1.16814585484266 * S_MntMeatProducts + 
-0.03210183211362 * S_MntSweetProducts + 0.21048598967441 * S_MntWines + -1.43075224286158 * 
S_MonthsAsCustomer + 0.17264791017938 * S_NumCatalogPurchases + -0.87259051567474 * 
S_NumDealsPurchases + -0.36454149529139 * S_NumDistPurchases + 0.12447759925061 * 
S_NumStorePurchases + -1.08133487947367 * S_NumWebPurchases + -0.49882157745454 * 
S_NumWebVisitsMonth + -1.37163643041927 * S_RFMstat + -2.02270778627266 * S_RMntFrq + 
-0.01174101172444 * S_Recency + 1.37307999964517 * S_Teenhome ;
4144546   +   H1x2_2  =     0.31979674377303 * S_AcceptedCmpTotal
4144547   +          +    -1.13516841608912 * S_Age  +     1.57640145941914 * S_Frq
4144548   +          +    -0.58468039509557 * S_Income  +    -1.78015996883174 *
4144549   +        S_Kidhome  +     0.51311311640127 * S_Mnt  +     0.07011815519915 *
4144550   +        S_MntFishProducts  +     0.73204832291164 * S_MntFruits
4144551   +          +     1.50837189353633 * S_MntGoldProds  +     1.39487443576743 *
4144552   +        S_MntMeatProducts  +      0.6943398196475 * S_MntSweetProducts
4144553   +          +    -0.36693028595681 * S_MntWines  +     0.86802033237442 *
4144554   +        S_MonthsAsCustomer  +     0.02384797538091 * S_NumCatalogPurchases
4144555   +          +     2.23121497416403 * S_NumDealsPurchases
4144556   +          +    -0.48674842191071 * S_NumDistPurchases
4144557   +          +     1.77510728607544 * S_NumStorePurchases
4144558   +          +     0.14647433155436 * S_NumWebPurchases
4144559   +          +    -0.95892686924419 * S_NumWebVisitsMonth
4144560   +          +    -0.26496935918704 * S_RFMstat  +     2.48765485222223 *
4144561   +        S_RMntFrq  +     2.46497777428475 * S_Recency
4144562   +          +    -0.62872033383484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.31979674377303 * S_AcceptedCmpTotal + -1.13516841608912 * 
S_Age + 1.57640145941914 * S_Frq + -0.58468039509557 * S_Income + -1.78015996883174 * 
S_Kidhome + 0.51311311640127 * S_Mnt + 0.07011815519915 * S_MntFishProducts + 0.73204832291164 
* S_MntFruits + 1.50837189353633 * S_MntGoldProds + 1.39487443576743 * S_MntMeatProducts + 
0.6943398196475 * S_MntSweetProducts + -0.36693028595681 * S_MntWines + 0.86802033237442 * 
S_MonthsAsCustomer + 0.02384797538091 * S_NumCatalogPurchases + 2.23121497416403 * 
S_NumDealsPurchases + -0.48674842191071 * S_NumDistPurchases + 1.77510728607544 * 
S_NumStorePurchases + 0.14647433155436 * S_NumWebPurchases + -0.95892686924419 * 
S_NumWebVisitsMonth + -0.26496935918704 * S_RFMstat + 2.48765485222223 * S_RMntFrq + 
2.46497777428475 * S_Recency + -0.62872033383484 * S_Teenhome ;
4144563   +   H1x2_3  =    -0.31142826583944 * S_AcceptedCmpTotal
4144564   +          +    -1.14828049895929 * S_Age  +    -0.54227584627485 * S_Frq
4144565   +          +     0.26826674711688 * S_Income  +     0.17643820666347 *
4144566   +        S_Kidhome  +    -0.12427430981043 * S_Mnt  +     0.18056887427376 *
4144567   +        S_MntFishProducts  +    -0.63010248821544 * S_MntFruits
4144568   +          +    -0.81391687529252 * S_MntGoldProds  +    -1.12306166734361 *
4144569   +        S_MntMeatProducts  +     0.92339010601965 * S_MntSweetProducts
4144570   +          +    -2.05510990050543 * S_MntWines  +    -2.02060586903244 *
4144571   +        S_MonthsAsCustomer  +     0.98841836752178 * S_NumCatalogPurchases
4144572   +          +     0.14338855349611 * S_NumDealsPurchases
4144573   +          +    -2.21071010829235 * S_NumDistPurchases
4144574   +          +    -0.21795889348002 * S_NumStorePurchases
4144575   +          +     1.98825087883535 * S_NumWebPurchases
4144576   +          +     1.02482442531149 * S_NumWebVisitsMonth
4144577   +          +    -0.47662143614905 * S_RFMstat  +    -0.17167385440535 *
4144578   +        S_RMntFrq  +     -1.0288777281766 * S_Recency
4144579   +          +    -0.10646747275734 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.31142826583944 * S_AcceptedCmpTotal + -1.14828049895929 * 
S_Age + -0.54227584627485 * S_Frq + 0.26826674711688 * S_Income + 0.17643820666347 * S_Kidhome 
+ -0.12427430981043 * S_Mnt + 0.18056887427376 * S_MntFishProducts + -0.63010248821544 * 
S_MntFruits + -0.81391687529252 * S_MntGoldProds + -1.12306166734361 * S_MntMeatProducts + 
0.92339010601965 * S_MntSweetProducts + -2.05510990050543 * S_MntWines + -2.02060586903244 * 
S_MonthsAsCustomer + 0.98841836752178 * S_NumCatalogPurchases + 0.14338855349611 * 
S_NumDealsPurchases + -2.21071010829235 * S_NumDistPurchases + -0.21795889348002 * 
S_NumStorePurchases + 1.98825087883535 * S_NumWebPurchases + 1.02482442531149 * 
S_NumWebVisitsMonth + -0.47662143614905 * S_RFMstat + -0.17167385440535 * S_RMntFrq + 
-1.0288777281766 * S_Recency + -0.10646747275734 * S_Teenhome ;
4144580   +   H1x2_4  =    -0.40813758620671 * S_AcceptedCmpTotal
4144581   +          +     0.16751361466296 * S_Age  +     0.61297021391662 * S_Frq
4144582   +          +     0.17708553296763 * S_Income  +    -0.23498000755537 *
4144583   +        S_Kidhome  +      0.6863853027948 * S_Mnt  +    -0.43649468589643 *
4144584   +        S_MntFishProducts  +    -1.03807059787368 * S_MntFruits
4144585   +          +     0.68988160282803 * S_MntGoldProds  +     1.76714128625705 *
4144586   +        S_MntMeatProducts  +     1.15458185366826 * S_MntSweetProducts
4144587   +          +     0.31267521045306 * S_MntWines  +    -3.18562841805634 *
4144588   +        S_MonthsAsCustomer  +     0.15316473812138 * S_NumCatalogPurchases
4144589   +          +     0.30041205661012 * S_NumDealsPurchases
4144590   +          +    -0.63499849986918 * S_NumDistPurchases
4144591   +          +    -0.34155713433714 * S_NumStorePurchases
4144592   +          +    -1.14183354933936 * S_NumWebPurchases
4144593   +          +    -0.42681980262973 * S_NumWebVisitsMonth
4144594   +          +    -0.18777676484111 * S_RFMstat  +      0.2522570278894 *
4144595   +        S_RMntFrq  +     1.25852246467612 * S_Recency
4144596   +          +     0.63333476238969 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.40813758620671 * S_AcceptedCmpTotal + 0.16751361466296 * 
S_Age + 0.61297021391662 * S_Frq + 0.17708553296763 * S_Income + -0.23498000755537 * S_Kidhome 
+ 0.6863853027948 * S_Mnt + -0.43649468589643 * S_MntFishProducts + -1.03807059787368 * 
S_MntFruits + 0.68988160282803 * S_MntGoldProds + 1.76714128625705 * S_MntMeatProducts + 
1.15458185366826 * S_MntSweetProducts + 0.31267521045306 * S_MntWines + -3.18562841805634 * 
S_MonthsAsCustomer + 0.15316473812138 * S_NumCatalogPurchases + 0.30041205661012 * 
S_NumDealsPurchases + -0.63499849986918 * S_NumDistPurchases + -0.34155713433714 * 
S_NumStorePurchases + -1.14183354933936 * S_NumWebPurchases + -0.42681980262973 * 
S_NumWebVisitsMonth + -0.18777676484111 * S_RFMstat + 0.2522570278894 * S_RMntFrq + 
1.25852246467612 * S_Recency + 0.63333476238969 * S_Teenhome ;
4144597   +   H1x2_5  =     1.73048436159558 * S_AcceptedCmpTotal
4144598   +          +     1.91388487556197 * S_Age  +     0.14880026885923 * S_Frq
4144599   +          +      0.5905347897806 * S_Income  +     1.67048168226736 *
4144600   +        S_Kidhome  +     0.03869174467752 * S_Mnt  +    -0.71187911364266 *
4144601   +        S_MntFishProducts  +     0.93023590693473 * S_MntFruits
4144602   +          +     0.22907372790948 * S_MntGoldProds  +    -1.05941282177437 *
4144603   +        S_MntMeatProducts  +    -0.73905281508342 * S_MntSweetProducts
4144604   +          +     0.04429898588386 * S_MntWines  +    -0.47487263648723 *
4144605   +        S_MonthsAsCustomer  +     0.00382111008361 * S_NumCatalogPurchases
4144606   +          +    -0.21237915559831 * S_NumDealsPurchases
4144607   +          +     0.48256923764182 * S_NumDistPurchases
4144608   +          +    -0.45553093140641 * S_NumStorePurchases
4144609   +          +      0.5593655963659 * S_NumWebPurchases
4144610   +          +     0.27943768691188 * S_NumWebVisitsMonth
4144611   +          +     1.94452735574997 * S_RFMstat  +    -0.89811355261154 *
4144612   +        S_RMntFrq  +    -1.62796011550484 * S_Recency
4144613   +          +     0.60487421956906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.73048436159558 * S_AcceptedCmpTotal + 1.91388487556197 * 
S_Age + 0.14880026885923 * S_Frq + 0.5905347897806 * S_Income + 1.67048168226736 * S_Kidhome + 
0.03869174467752 * S_Mnt + -0.71187911364266 * S_MntFishProducts + 0.93023590693473 * 
S_MntFruits + 0.22907372790948 * S_MntGoldProds + -1.05941282177437 * S_MntMeatProducts + 
-0.73905281508342 * S_MntSweetProducts + 0.04429898588386 * S_MntWines + -0.47487263648723 * 
S_MonthsAsCustomer + 0.00382111008361 * S_NumCatalogPurchases + -0.21237915559831 * 
S_NumDealsPurchases + 0.48256923764182 * S_NumDistPurchases + -0.45553093140641 * 
S_NumStorePurchases + 0.5593655963659 * S_NumWebPurchases + 0.27943768691188 * 
S_NumWebVisitsMonth + 1.94452735574997 * S_RFMstat + -0.89811355261154 * S_RMntFrq + 
-1.62796011550484 * S_Recency + 0.60487421956906 * S_Teenhome ;
4144614   +   H1x2_6  =    -0.32010880515459 * S_AcceptedCmpTotal
4144615   +          +     0.95304983421791 * S_Age  +      -0.316044010281 * S_Frq
4144616   +          +     1.10925678578158 * S_Income  +     1.28019020117471 *
4144617   +        S_Kidhome  +     1.02498438668688 * S_Mnt  +     -1.8898236827792 *
4144618   +        S_MntFishProducts  +     0.96543971612672 * S_MntFruits
4144619   +          +    -0.21422669977227 * S_MntGoldProds  +     -0.0840639948559 *
4144620   +        S_MntMeatProducts  +     1.27902687109389 * S_MntSweetProducts
4144621   +          +    -1.38957846154598 * S_MntWines  +     0.80004372871482 *
4144622   +        S_MonthsAsCustomer  +    -0.19381123279552 * S_NumCatalogPurchases
4144623   +          +     2.38967021388062 * S_NumDealsPurchases
4144624   +          +    -0.97722398866481 * S_NumDistPurchases
4144625   +          +     1.57612333191312 * S_NumStorePurchases
4144626   +          +    -0.75968679115983 * S_NumWebPurchases
4144627   +          +    -0.64207187757251 * S_NumWebVisitsMonth
4144628   +          +     1.06529999122381 * S_RFMstat  +     0.67095385521555 *
4144629   +        S_RMntFrq  +     1.71313869798331 * S_Recency
4144630   +          +     1.39045686636707 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.32010880515459 * S_AcceptedCmpTotal + 0.95304983421791 * 
S_Age + -0.316044010281 * S_Frq + 1.10925678578158 * S_Income + 1.28019020117471 * S_Kidhome + 
1.02498438668688 * S_Mnt + -1.8898236827792 * S_MntFishProducts + 0.96543971612672 * 
S_MntFruits + -0.21422669977227 * S_MntGoldProds + -0.0840639948559 * S_MntMeatProducts + 
1.27902687109389 * S_MntSweetProducts + -1.38957846154598 * S_MntWines + 0.80004372871482 * 
S_MonthsAsCustomer + -0.19381123279552 * S_NumCatalogPurchases + 2.38967021388062 * 
S_NumDealsPurchases + -0.97722398866481 * S_NumDistPurchases + 1.57612333191312 * 
S_NumStorePurchases + -0.75968679115983 * S_NumWebPurchases + -0.64207187757251 * 
S_NumWebVisitsMonth + 1.06529999122381 * S_RFMstat + 0.67095385521555 * S_RMntFrq + 
1.71313869798331 * S_Recency + 1.39045686636707 * S_Teenhome ;
4144631   +   H1x2_1  = H1x2_1  +    -1.32125124093028 * AcceptedCmp10
4144632   +          +    -0.61219063588492 * AcceptedCmp20  +     1.20821214973577 *
4144633   +        AcceptedCmp30  +    -1.13548727550981 * AcceptedCmp40
4144634   +          +     0.04405769197194 * AcceptedCmp50  +      0.7940658605271 *
4144635   +        Complain0  +     1.05933486404834 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.32125124093028 * AcceptedCmp10 + -0.61219063588492 
* AcceptedCmp20 + 1.20821214973577 * AcceptedCmp30 + -1.13548727550981 * AcceptedCmp40 + 
0.04405769197194 * AcceptedCmp50 + 0.7940658605271 * Complain0 + 1.05933486404834 * 
HigherEducationBinary0 ;
4144636   +   H1x2_2  = H1x2_2  +     1.56313777120806 * AcceptedCmp10
4144637   +          +    -1.12997680537456 * AcceptedCmp20  +     1.19262470365504 *
4144638   +        AcceptedCmp30  +    -0.98995493161689 * AcceptedCmp40
4144639   +          +      -1.827141957557 * AcceptedCmp50  +    -0.43809188233899 *
4144640   +        Complain0  +      -0.627000653672 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.56313777120806 * AcceptedCmp10 + -1.12997680537456 * 
AcceptedCmp20 + 1.19262470365504 * AcceptedCmp30 + -0.98995493161689 * AcceptedCmp40 + 
-1.827141957557 * AcceptedCmp50 + -0.43809188233899 * Complain0 + -0.627000653672 * 
HigherEducationBinary0 ;
4144641   +   H1x2_3  = H1x2_3  +     1.32174755827017 * AcceptedCmp10
4144642   +          +     1.00086479754098 * AcceptedCmp20  +      0.4636133487385 *
4144643   +        AcceptedCmp30  +     1.34878553883758 * AcceptedCmp40
4144644   +          +    -2.36241584924476 * AcceptedCmp50  +       1.082421071431 *
4144645   +        Complain0  +    -0.32514144517436 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.32174755827017 * AcceptedCmp10 + 1.00086479754098 * 
AcceptedCmp20 + 0.4636133487385 * AcceptedCmp30 + 1.34878553883758 * AcceptedCmp40 + 
-2.36241584924476 * AcceptedCmp50 + 1.082421071431 * Complain0 + -0.32514144517436 * 
HigherEducationBinary0 ;
4144646   +   H1x2_4  = H1x2_4  +     0.39556775796131 * AcceptedCmp10
4144647   +          +     0.06457727211285 * AcceptedCmp20  +    -1.44632749800655 *
4144648   +        AcceptedCmp30  +     1.20294678514383 * AcceptedCmp40
4144649   +          +    -0.01594330886358 * AcceptedCmp50  +    -2.06895895180485 *
4144650   +        Complain0  +    -0.01374012569775 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.39556775796131 * AcceptedCmp10 + 0.06457727211285 * 
AcceptedCmp20 + -1.44632749800655 * AcceptedCmp30 + 1.20294678514383 * AcceptedCmp40 + 
-0.01594330886358 * AcceptedCmp50 + -2.06895895180485 * Complain0 + -0.01374012569775 * 
HigherEducationBinary0 ;
4144651   +   H1x2_5  = H1x2_5  +     1.11945933535638 * AcceptedCmp10
4144652   +          +     0.26383973979566 * AcceptedCmp20  +    -0.40426240061746 *
4144653   +        AcceptedCmp30  +     1.46916781894719 * AcceptedCmp40
4144654   +          +     0.26827715088644 * AcceptedCmp50  +     1.50074465469998 *
4144655   +        Complain0  +     -1.0626185000486 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.11945933535638 * AcceptedCmp10 + 0.26383973979566 * 
AcceptedCmp20 + -0.40426240061746 * AcceptedCmp30 + 1.46916781894719 * AcceptedCmp40 + 
0.26827715088644 * AcceptedCmp50 + 1.50074465469998 * Complain0 + -1.0626185000486 * 
HigherEducationBinary0 ;
4144656   +   H1x2_6  = H1x2_6  +    -0.87625232174239 * AcceptedCmp10
4144657   +          +     0.72228047975642 * AcceptedCmp20  +     1.34904015028355 *
4144658   +        AcceptedCmp30  +     1.55639496207852 * AcceptedCmp40
4144659   +          +    -0.98741935337746 * AcceptedCmp50  +     0.99421811137074 *
4144660   +        Complain0  +    -1.69180618270074 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.87625232174239 * AcceptedCmp10 + 0.72228047975642 * 
AcceptedCmp20 + 1.34904015028355 * AcceptedCmp30 + 1.55639496207852 * AcceptedCmp40 + 
-0.98741935337746 * AcceptedCmp50 + 0.99421811137074 * Complain0 + -1.69180618270074 * 
HigherEducationBinary0 ;
4144661   +   H1x2_1  = H1x2_1  +    -0.17034446979478 * Education2n_Cycle
4144662   +          +    -0.75872196172063 * EducationBasic  +     0.44107677662894 *
4144663   +        EducationGraduation  +      0.1073450284316 * EducationMaster
4144664   +          +     0.96470902298142 * Marital_StatusDivorced
4144665   +          +     0.94805959268314 * Marital_StatusMarried
4144666   +          +     -0.6523948769616 * Marital_StatusSingle
4144667   +          +     0.07557344719737 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.17034446979478 * Education2n_Cycle + 
-0.75872196172063 * EducationBasic + 0.44107677662894 * EducationGraduation + 0.1073450284316 
* EducationMaster + 0.96470902298142 * Marital_StatusDivorced + 0.94805959268314 * 
Marital_StatusMarried + -0.6523948769616 * Marital_StatusSingle + 0.07557344719737 * 
Marital_StatusTogether ;
4144668   +   H1x2_2  = H1x2_2  +    -0.42515060901662 * Education2n_Cycle
4144669   +          +    -1.05213629639837 * EducationBasic  +     0.72603871617959 *
4144670   +        EducationGraduation  +    -1.34927753306064 * EducationMaster
4144671   +          +      0.3918249505531 * Marital_StatusDivorced
4144672   +          +    -0.00968091979586 * Marital_StatusMarried
4144673   +          +     0.84615379885071 * Marital_StatusSingle
4144674   +          +     0.34817324570682 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.42515060901662 * Education2n_Cycle + 
-1.05213629639837 * EducationBasic + 0.72603871617959 * EducationGraduation + 
-1.34927753306064 * EducationMaster + 0.3918249505531 * Marital_StatusDivorced + 
-0.00968091979586 * Marital_StatusMarried + 0.84615379885071 * Marital_StatusSingle + 
0.34817324570682 * Marital_StatusTogether ;
4144675   +   H1x2_3  = H1x2_3  +    -0.31002362860852 * Education2n_Cycle
4144676   +          +     1.40744525716089 * EducationBasic  +     2.06403096539358 *
4144677   +        EducationGraduation  +     -0.8672743321499 * EducationMaster
4144678   +          +     1.14335160313191 * Marital_StatusDivorced
4144679   +          +     0.50580517192175 * Marital_StatusMarried
4144680   +          +     0.17264295020921 * Marital_StatusSingle
4144681   +          +    -0.58193119255736 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.31002362860852 * Education2n_Cycle + 
1.40744525716089 * EducationBasic + 2.06403096539358 * EducationGraduation + -0.8672743321499 
* EducationMaster + 1.14335160313191 * Marital_StatusDivorced + 0.50580517192175 * 
Marital_StatusMarried + 0.17264295020921 * Marital_StatusSingle + -0.58193119255736 * 
Marital_StatusTogether ;
4144682   +   H1x2_4  = H1x2_4  +     0.55057637605468 * Education2n_Cycle
4144683   +          +    -0.73070803276142 * EducationBasic  +     0.40424625808481 *
4144684   +        EducationGraduation  +     1.95818378342783 * EducationMaster
4144685   +          +    -0.11238504444225 * Marital_StatusDivorced
4144686   +          +    -0.81348274043749 * Marital_StatusMarried
4144687   +          +     0.46075415610001 * Marital_StatusSingle
4144688   +          +    -0.17552649817722 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.55057637605468 * Education2n_Cycle + 
-0.73070803276142 * EducationBasic + 0.40424625808481 * EducationGraduation + 1.95818378342783 
* EducationMaster + -0.11238504444225 * Marital_StatusDivorced + -0.81348274043749 * 
Marital_StatusMarried + 0.46075415610001 * Marital_StatusSingle + -0.17552649817722 * 
Marital_StatusTogether ;
4144689   +   H1x2_5  = H1x2_5  +     0.43341125564688 * Education2n_Cycle
4144690   +          +     2.81958018976644 * EducationBasic  +     0.28773362443315 *
4144691   +        EducationGraduation  +     0.08396135672504 * EducationMaster
4144692   +          +    -0.46342068701431 * Marital_StatusDivorced
4144693   +          +    -0.41667845270204 * Marital_StatusMarried
4144694   +          +    -0.47166707496281 * Marital_StatusSingle
4144695   +          +     0.54110155717306 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.43341125564688 * Education2n_Cycle + 
2.81958018976644 * EducationBasic + 0.28773362443315 * EducationGraduation + 0.08396135672504 
* EducationMaster + -0.46342068701431 * Marital_StatusDivorced + -0.41667845270204 * 
Marital_StatusMarried + -0.47166707496281 * Marital_StatusSingle + 0.54110155717306 * 
Marital_StatusTogether ;
4144696   +   H1x2_6  = H1x2_6  +    -0.27163102711307 * Education2n_Cycle
4144697   +          +    -0.04052143781957 * EducationBasic  +     0.97902549344774 *
4144698   +        EducationGraduation  +     0.36656103863186 * EducationMaster
4144699   +          +    -0.45376613787812 * Marital_StatusDivorced
4144700   +          +     0.01337046049801 * Marital_StatusMarried
4144701   +          +    -0.92811489484121 * Marital_StatusSingle
4144702   +          +     1.52402650450634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.27163102711307 * Education2n_Cycle + 
-0.04052143781957 * EducationBasic + 0.97902549344774 * EducationGraduation + 0.36656103863186 
* EducationMaster + -0.45376613787812 * Marital_StatusDivorced + 0.01337046049801 * 
Marital_StatusMarried + -0.92811489484121 * Marital_StatusSingle + 1.52402650450634 * 
Marital_StatusTogether ;
4144703   +   H1x2_1  =     0.27200642200874 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.27200642200874 + H1x2_1 ;
4144704   +   H1x2_2  =     0.52117161047058 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.52117161047058 + H1x2_2 ;
4144705   +   H1x2_3  =    -1.04763461279984 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.04763461279984 + H1x2_3 ;
4144706   +   H1x2_4  =     0.10516307959318 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.10516307959318 + H1x2_4 ;
4144707   +   H1x2_5  =     1.24237093160919 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.24237093160919 + H1x2_5 ;
4144708   +   H1x2_6  =    -0.57977518763852 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.57977518763852 + H1x2_6 ;
4144709   +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
4144710   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
4144711   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , 
H1x2_7 );
4144712   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4144713   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
4144714   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
4144715   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
4144716   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
4144717   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
4144718   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
4144719   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
4144720   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
4144721   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
4144722   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
4144723   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
4144724   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
4144725   +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
4144726   +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
4144727   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
4144728   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
4144729   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
4144730   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
4144731   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
4144732   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
4144733   +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
4144734   +END;
MPRINT(EM_DIAGRAM):   END;
4144735   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4144736   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
4144737   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
4144738   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
4144739   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
4144740   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
4144741   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
4144742   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
4144743   +END;
MPRINT(EM_DIAGRAM):   END;
4144744   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4144745   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
4144746   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4144747   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4144748   +   H2x1_1  =     3.19986933046591 * H1x1_1  +    -0.53665634063887 * H1x1_2
4144749   +          +     1.71172628690017 * H1x1_3  +    -1.33944402954134 * H1x1_4
4144750   +          +    -1.93533827156845 * H1x1_5  +    -0.85772802964317 * H1x1_6
4144751   +          +     0.60984669129006 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.19986933046591 * H1x1_1 + -0.53665634063887 * H1x1_2 + 
1.71172628690017 * H1x1_3 + -1.33944402954134 * H1x1_4 + -1.93533827156845 * H1x1_5 + 
-0.85772802964317 * H1x1_6 + 0.60984669129006 * H1x1_7 ;
4144752   +   H2x1_2  =     -2.1883484075031 * H1x1_1  +     0.17578635446135 * H1x1_2
4144753   +          +    -1.79384950890077 * H1x1_3  +     0.88942614754722 * H1x1_4
4144754   +          +     0.41077752133457 * H1x1_5  +       0.509832853125 * H1x1_6
4144755   +          +    -0.28121910805072 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.1883484075031 * H1x1_1 + 0.17578635446135 * H1x1_2 + 
-1.79384950890077 * H1x1_3 + 0.88942614754722 * H1x1_4 + 0.41077752133457 * H1x1_5 + 
0.509832853125 * H1x1_6 + -0.28121910805072 * H1x1_7 ;
4144756   +   H2x1_3  =     0.86281981700921 * H1x1_1  +    -1.15482345233328 * H1x1_2
4144757   +          +     0.64743938802141 * H1x1_3  +     1.08117298211616 * H1x1_4
4144758   +          +      -0.363297480437 * H1x1_5  +    -1.58703254226713 * H1x1_6
4144759   +          +     0.54468402771449 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.86281981700921 * H1x1_1 + -1.15482345233328 * H1x1_2 + 
0.64743938802141 * H1x1_3 + 1.08117298211616 * H1x1_4 + -0.363297480437 * H1x1_5 + 
-1.58703254226713 * H1x1_6 + 0.54468402771449 * H1x1_7 ;
4144760   +   H2x1_4  =    -0.43420906601647 * H1x1_1  +     0.36485369627974 * H1x1_2
4144761   +          +    -2.42315183886716 * H1x1_3  +     0.22337896770247 * H1x1_4
4144762   +          +    -0.65684369622605 * H1x1_5  +     0.25211011207532 * H1x1_6
4144763   +          +     0.16704425645668 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.43420906601647 * H1x1_1 + 0.36485369627974 * H1x1_2 + 
-2.42315183886716 * H1x1_3 + 0.22337896770247 * H1x1_4 + -0.65684369622605 * H1x1_5 + 
0.25211011207532 * H1x1_6 + 0.16704425645668 * H1x1_7 ;
4144764   +   H2x1_5  =     0.61083333511105 * H1x1_1  +     1.11038871398931 * H1x1_2
4144765   +          +      0.4617674661653 * H1x1_3  +    -0.42039958365963 * H1x1_4
4144766   +          +    -1.37408000010678 * H1x1_5  +     0.03897439094411 * H1x1_6
4144767   +          +    -0.82592861674077 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.61083333511105 * H1x1_1 + 1.11038871398931 * H1x1_2 + 
0.4617674661653 * H1x1_3 + -0.42039958365963 * H1x1_4 + -1.37408000010678 * H1x1_5 + 
0.03897439094411 * H1x1_6 + -0.82592861674077 * H1x1_7 ;
4144768   +   H2x1_6  =     1.30877201101082 * H1x1_1  +     1.55143256487324 * H1x1_2
4144769   +          +    -1.20237741381937 * H1x1_3  +       2.394122059946 * H1x1_4
4144770   +          +     1.83804290225468 * H1x1_5  +     0.83132818010396 * H1x1_6
4144771   +          +     1.18399340483001 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.30877201101082 * H1x1_1 + 1.55143256487324 * H1x1_2 + 
-1.20237741381937 * H1x1_3 + 2.394122059946 * H1x1_4 + 1.83804290225468 * H1x1_5 + 
0.83132818010396 * H1x1_6 + 1.18399340483001 * H1x1_7 ;
4144772   +   H2x1_1  = H2x1_1  +    -2.41276052972753 * H1x2_1
4144773   +          +     0.38601054263899 * H1x2_2  +     0.54498789581044 * H1x2_3
4144774   +          +    -0.55304188445569 * H1x2_4  +     0.29484780749868 * H1x2_5
4144775   +          +     0.44012580105051 * H1x2_6  +     0.43086375065556 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.41276052972753 * H1x2_1 + 0.38601054263899 * H1x2_2 
+ 0.54498789581044 * H1x2_3 + -0.55304188445569 * H1x2_4 + 0.29484780749868 * H1x2_5 + 
0.44012580105051 * H1x2_6 + 0.43086375065556 * H1x2_7 ;
4144776   +   H2x1_2  = H2x1_2  +    -1.03173201511154 * H1x2_1
4144777   +          +     0.62119574580435 * H1x2_2  +     1.71782745718335 * H1x2_3
4144778   +          +     0.05391903933014 * H1x2_4  +     1.52443015967438 * H1x2_5
4144779   +          +     0.22301831343286 * H1x2_6  +     0.66204940430171 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.03173201511154 * H1x2_1 + 0.62119574580435 * H1x2_2 
+ 1.71782745718335 * H1x2_3 + 0.05391903933014 * H1x2_4 + 1.52443015967438 * H1x2_5 + 
0.22301831343286 * H1x2_6 + 0.66204940430171 * H1x2_7 ;
4144780   +   H2x1_3  = H2x1_3  +     1.37871502475142 * H1x2_1
4144781   +          +     0.02099445181492 * H1x2_2  +     0.44720218317742 * H1x2_3
4144782   +          +    -1.29625929820096 * H1x2_4  +    -1.29169956389384 * H1x2_5
4144783   +          +    -0.21403739905139 * H1x2_6  +    -0.03075946378871 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.37871502475142 * H1x2_1 + 0.02099445181492 * H1x2_2 
+ 0.44720218317742 * H1x2_3 + -1.29625929820096 * H1x2_4 + -1.29169956389384 * H1x2_5 + 
-0.21403739905139 * H1x2_6 + -0.03075946378871 * H1x2_7 ;
4144784   +   H2x1_4  = H2x1_4  +     1.94121727472617 * H1x2_1
4144785   +          +     0.23207290279299 * H1x2_2  +      0.3162872281134 * H1x2_3
4144786   +          +    -0.40199017937523 * H1x2_4  +     0.69294460110289 * H1x2_5
4144787   +          +    -1.00758272664059 * H1x2_6  +    -1.41698057960021 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.94121727472617 * H1x2_1 + 0.23207290279299 * H1x2_2 
+ 0.3162872281134 * H1x2_3 + -0.40199017937523 * H1x2_4 + 0.69294460110289 * H1x2_5 + 
-1.00758272664059 * H1x2_6 + -1.41698057960021 * H1x2_7 ;
4144788   +   H2x1_5  = H2x1_5  +     1.19546023857185 * H1x2_1
4144789   +          +    -1.00266987736442 * H1x2_2  +     0.71838447032796 * H1x2_3
4144790   +          +     1.70968347732204 * H1x2_4  +    -0.26894423802892 * H1x2_5
4144791   +          +    -0.61655519090213 * H1x2_6  +     2.21931491555405 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.19546023857185 * H1x2_1 + -1.00266987736442 * H1x2_2 
+ 0.71838447032796 * H1x2_3 + 1.70968347732204 * H1x2_4 + -0.26894423802892 * H1x2_5 + 
-0.61655519090213 * H1x2_6 + 2.21931491555405 * H1x2_7 ;
4144792   +   H2x1_6  = H2x1_6  +    -0.48559886762231 * H1x2_1
4144793   +          +     0.93218274010134 * H1x2_2  +     0.23140948782865 * H1x2_3
4144794   +          +     0.72139310562219 * H1x2_4  +    -0.11143939877368 * H1x2_5
4144795   +          +     0.74022211257293 * H1x2_6  +      1.0449314568566 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.48559886762231 * H1x2_1 + 0.93218274010134 * H1x2_2 
+ 0.23140948782865 * H1x2_3 + 0.72139310562219 * H1x2_4 + -0.11143939877368 * H1x2_5 + 
0.74022211257293 * H1x2_6 + 1.0449314568566 * H1x2_7 ;
4144796   +   H2x1_1  =     0.42952855003777 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.42952855003777 + H2x1_1 ;
4144797   +   H2x1_2  =     1.61752083096638 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.61752083096638 + H2x1_2 ;
4144798   +   H2x1_3  =    -0.71617788867723 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.71617788867723 + H2x1_3 ;
4144799   +   H2x1_4  =     0.39147546708847 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.39147546708847 + H2x1_4 ;
4144800   +   H2x1_5  =    -0.56259054185247 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.56259054185247 + H2x1_5 ;
4144801   +   H2x1_6  =     0.31857109159246 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.31857109159246 + H2x1_6 ;
4144802   +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
4144803   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
4144804   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , 
H2x1_7 );
4144805   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4144806   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
4144807   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
4144808   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
4144809   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
4144810   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
4144811   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
4144812   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
4144813   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
4144814   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
4144815   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
4144816   +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
4144817   +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
4144818   +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
4144819   +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
4144820   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
4144821   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
4144822   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
4144823   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
4144824   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
4144825   +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
4144826   +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
4144827   +END;
MPRINT(EM_DIAGRAM):   END;
4144828   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4144829   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
4144830   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
4144831   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
4144832   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
4144833   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
4144834   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
4144835   +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
4144836   +END;
MPRINT(EM_DIAGRAM):   END;
4144837   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4144838   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4144839   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4144840   +
4144841   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
4144842   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
4144843   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
4144844   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
4144845   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
4144846   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4144847   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
4144848   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4144849   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4144850   +end;
MPRINT(EM_DIAGRAM):   end;
4144851   +else do;
MPRINT(EM_DIAGRAM):   else do;
4144852   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
4144853   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
4144854   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
4144855   +   end;
MPRINT(EM_DIAGRAM):   end;
4144856   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
4144857   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
4144858   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
4144859   +   end;
MPRINT(EM_DIAGRAM):   end;
4144860   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4144861   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
4144862   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
4144863   +   end;
MPRINT(EM_DIAGRAM):   end;
4144864   +end;
MPRINT(EM_DIAGRAM):   end;
4144865   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4144866   +   P_DepVar1  =     25.2027326018714 * H2x1_1  +    -8.05331379419082 * H2x1_2
4144867   +          +     2.64798805383536 * H2x1_3  +    -4.52736775271107 * H2x1_4
4144868   +          +     6.71812741736202 * H2x1_5  +    -12.2785047473885 * H2x1_6
4144869   +          +    -4.41291972336422 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 25.2027326018714 * H2x1_1 + -8.05331379419082 * H2x1_2 + 
2.64798805383536 * H2x1_3 + -4.52736775271107 * H2x1_4 + 6.71812741736202 * H2x1_5 + 
-12.2785047473885 * H2x1_6 + -4.41291972336422 * H2x1_7 ;
4144870   +   P_DepVar1  =     1.22134962002326 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.22134962002326 + P_DepVar1 ;
4144871   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4144872   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4144873   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4144874   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4144875   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4144876   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4144877   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4144878   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4144879   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4144880   +END;
MPRINT(EM_DIAGRAM):   END;
4144881   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4144882   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4144883   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4144884   +END;
MPRINT(EM_DIAGRAM):   END;
4144885   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4144886   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4144887   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4144888   +END;
MPRINT(EM_DIAGRAM):   END;
4144889   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
4144890   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
4144891   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
4144892   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
4144893   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
4144894   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
4144895   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
4144896   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4144897   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4144898   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4144899   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4144900   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4144901   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4144902   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4144903   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4144904   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4144905   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4144906   +END;
MPRINT(EM_DIAGRAM):   END;
4144907   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4144908   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4144909   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4144910   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
4144911   +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
4144912   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4144913   +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
4144914   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4144915   +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
4144916   +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
4144917   +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
4144918   +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
4144919   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4144920   +* Renaming Into variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural12;
4144921   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4144922   +length AutoNeural12_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural12_I_DepVar $32;
4144923   +drop AutoNeural12_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_I_DepVar;
4144924   +AutoNeural12_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural12_I_DepVar = I_DepVar;
4144925   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4144926   +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
4144927   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4144928   +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
4144929   +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
4144930   +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
4144931   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4144932   +* Ensmbl38: Voting to produce predicted target;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Voting to produce predicted target;
4144933   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4144934   +array Ensmbl38_post{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl38_post{2} _temporary_;
4144935   +array Ensmbl38_count{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl38_count{2} _temporary_;
4144936   +array Ensmbl38_level{2} $32 _temporary_ (
4144937   +"1"
4144938   +"0"
4144939   +);
MPRINT(EM_DIAGRAM):   array Ensmbl38_level{2} $32 _temporary_ ( "1" "0" );
4144940   +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
4144941   +Ensmbl38_post{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{i} = 0;
4144942   +Ensmbl38_count{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{i} = 0;
4144943   +end;
MPRINT(EM_DIAGRAM):   end;
4144944   +if AutoNeural6_I_DepVar = Ensmbl38_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural6_I_DepVar = Ensmbl38_level{1} then do;
4144945   +Ensmbl38_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{1} + 1;
4144946   +Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural6_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural6_P_DepVar1;
4144947   +end;
MPRINT(EM_DIAGRAM):   end;
4144948   +if AutoNeural7_I_DepVar = Ensmbl38_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural7_I_DepVar = Ensmbl38_level{1} then do;
4144949   +Ensmbl38_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{1} + 1;
4144950   +Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural7_P_DepVar1;
4144951   +end;
MPRINT(EM_DIAGRAM):   end;
4144952   +if AutoNeural8_I_DepVar = Ensmbl38_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural8_I_DepVar = Ensmbl38_level{1} then do;
4144953   +Ensmbl38_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{1} + 1;
4144954   +Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural8_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural8_P_DepVar1;
4144955   +end;
MPRINT(EM_DIAGRAM):   end;
4144956   +if AutoNeural10_I_DepVar = Ensmbl38_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural10_I_DepVar = Ensmbl38_level{1} then do;
4144957   +Ensmbl38_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{1} + 1;
4144958   +Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural10_P_DepVar1;
4144959   +end;
MPRINT(EM_DIAGRAM):   end;
4144960   +if AutoNeural9_I_DepVar = Ensmbl38_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural9_I_DepVar = Ensmbl38_level{1} then do;
4144961   +Ensmbl38_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{1} + 1;
4144962   +Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural9_P_DepVar1;
4144963   +end;
MPRINT(EM_DIAGRAM):   end;
4144964   +if AutoNeural11_I_DepVar = Ensmbl38_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural11_I_DepVar = Ensmbl38_level{1} then do;
4144965   +Ensmbl38_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{1} + 1;
4144966   +Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural11_P_DepVar1;
4144967   +end;
MPRINT(EM_DIAGRAM):   end;
4144968   +if AutoNeural12_I_DepVar = Ensmbl38_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural12_I_DepVar = Ensmbl38_level{1} then do;
4144969   +Ensmbl38_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{1} + 1;
4144970   +Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural12_P_DepVar1;
4144971   +end;
MPRINT(EM_DIAGRAM):   end;
4144972   +if AutoNeural6_I_DepVar = Ensmbl38_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural6_I_DepVar = Ensmbl38_level{2} then do;
4144973   +Ensmbl38_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{2} + 1;
4144974   +Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural6_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural6_P_DepVar0;
4144975   +end;
MPRINT(EM_DIAGRAM):   end;
4144976   +if AutoNeural7_I_DepVar = Ensmbl38_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural7_I_DepVar = Ensmbl38_level{2} then do;
4144977   +Ensmbl38_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{2} + 1;
4144978   +Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural7_P_DepVar0;
4144979   +end;
MPRINT(EM_DIAGRAM):   end;
4144980   +if AutoNeural8_I_DepVar = Ensmbl38_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural8_I_DepVar = Ensmbl38_level{2} then do;
4144981   +Ensmbl38_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{2} + 1;
4144982   +Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural8_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural8_P_DepVar0;
4144983   +end;
MPRINT(EM_DIAGRAM):   end;
4144984   +if AutoNeural10_I_DepVar = Ensmbl38_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural10_I_DepVar = Ensmbl38_level{2} then do;
4144985   +Ensmbl38_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{2} + 1;
4144986   +Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural10_P_DepVar0;
4144987   +end;
MPRINT(EM_DIAGRAM):   end;
4144988   +if AutoNeural9_I_DepVar = Ensmbl38_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural9_I_DepVar = Ensmbl38_level{2} then do;
4144989   +Ensmbl38_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{2} + 1;
4144990   +Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural9_P_DepVar0;
4144991   +end;
MPRINT(EM_DIAGRAM):   end;
4144992   +if AutoNeural11_I_DepVar = Ensmbl38_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural11_I_DepVar = Ensmbl38_level{2} then do;
4144993   +Ensmbl38_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{2} + 1;
4144994   +Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural11_P_DepVar0;
4144995   +end;
MPRINT(EM_DIAGRAM):   end;
4144996   +if AutoNeural12_I_DepVar = Ensmbl38_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural12_I_DepVar = Ensmbl38_level{2} then do;
4144997   +Ensmbl38_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{2} + 1;
4144998   +Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural12_P_DepVar0;
4144999   +end;
MPRINT(EM_DIAGRAM):   end;
4145000   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4145001   +* Ensmbl38: Determine Into Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Determine Into Variable;
4145002   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4145003   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
4145004   +drop i vote_count vote_post;
MPRINT(EM_DIAGRAM):   drop i vote_count vote_post;
4145005   +vote_count = max(
4145006   +Ensmbl38_count{1} ,
4145007   +Ensmbl38_count{2}
4145008   +);
MPRINT(EM_DIAGRAM):   vote_count = max( Ensmbl38_count{1} , Ensmbl38_count{2} );
4145009   +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
4145010   +if Ensmbl38_count{i}=vote_count and Ensmbl38_post{i}>vote_post then do;
MPRINT(EM_DIAGRAM):   if Ensmbl38_count{i}=vote_count and Ensmbl38_post{i}>vote_post then do;
4145011   +I_DepVar = Ensmbl38_level{i};
MPRINT(EM_DIAGRAM):   I_DepVar = Ensmbl38_level{i};
4145012   +vote_post = Ensmbl38_count{i};
MPRINT(EM_DIAGRAM):   vote_post = Ensmbl38_count{i};
4145013   +end;
MPRINT(EM_DIAGRAM):   end;
4145014   +end;
MPRINT(EM_DIAGRAM):   end;
4145015   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4145016   +* Ensmbl38: Compute posterior vars using models predicting the chosen level;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Compute posterior vars using models predicting the chosen 
level;
4145017   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4145018   +P_DepVar1 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
4145019   +P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4145020   +if I_DepVar = AutoNeural6_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural6_I_DepVar then do;
4145021   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural6_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural6_P_DepVar1;
4145022   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural6_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural6_P_DepVar0;
4145023   +end;
MPRINT(EM_DIAGRAM):   end;
4145024   +if I_DepVar = AutoNeural7_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural7_I_DepVar then do;
4145025   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural7_P_DepVar1;
4145026   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural7_P_DepVar0;
4145027   +end;
MPRINT(EM_DIAGRAM):   end;
4145028   +if I_DepVar = AutoNeural8_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural8_I_DepVar then do;
4145029   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural8_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural8_P_DepVar1;
4145030   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural8_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural8_P_DepVar0;
4145031   +end;
MPRINT(EM_DIAGRAM):   end;
4145032   +if I_DepVar = AutoNeural10_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural10_I_DepVar then do;
4145033   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural10_P_DepVar1;
4145034   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural10_P_DepVar0;
4145035   +end;
MPRINT(EM_DIAGRAM):   end;
4145036   +if I_DepVar = AutoNeural9_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural9_I_DepVar then do;
4145037   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural9_P_DepVar1;
4145038   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural9_P_DepVar0;
4145039   +end;
MPRINT(EM_DIAGRAM):   end;
4145040   +if I_DepVar = AutoNeural11_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural11_I_DepVar then do;
4145041   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural11_P_DepVar1;
4145042   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural11_P_DepVar0;
4145043   +end;
MPRINT(EM_DIAGRAM):   end;
4145044   +if I_DepVar = AutoNeural12_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural12_I_DepVar then do;
4145045   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural12_P_DepVar1;
4145046   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural12_P_DepVar0;
4145047   +end;
MPRINT(EM_DIAGRAM):   end;
4145048   +* Ensmbl38: Averaging posterior;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Averaging posterior;
4145049   +P_DepVar1 = P_DepVar1/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1/vote_count;
4145050   +P_DepVar0 = P_DepVar0/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0/vote_count;
4145051   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4145052   +* Ensmbl38: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Producing Unformatted variable;
4145053   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4145054   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
4145055   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
4145056   +else
4145057   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
4145058   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4145059   +* Ensmbl38: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Computing _WARN_ Variable;
4145060   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4145061   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
4145062   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
4145063   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
4145064   +if index(AUTONEURAL6_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
4145064  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
4145065   +if index(AUTONEURAL6_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
4145065  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
4145066   +if index(AUTONEURAL6_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
4145066  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
4145067   +if index(AUTONEURAL6_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
4145067  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
4145068   +if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
4145068  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
4145069   +if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
4145069  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
4145070   +if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
4145070  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
4145071   +if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
4145071  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
4145072   +if index(AUTONEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
4145072  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
4145073   +if index(AUTONEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
4145073  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
4145074   +if index(AUTONEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
4145074  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
4145075   +if index(AUTONEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
4145075  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
4145076   +if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
4145076  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
4145077   +if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
4145077  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
4145078   +if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
4145078  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
4145079   +if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
4145079  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
4145080   +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
4145080  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
4145081   +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
4145081  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
4145082   +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
4145082  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
4145083   +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
4145083  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
4145084   +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
4145084  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
4145085   +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
4145085  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
4145086   +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
4145086  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
4145087   +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
4145087  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
4145088   +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
4145088  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
4145089   +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
4145089  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
4145090   +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
4145090  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
4145091   +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
4145091  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
4145092   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4145093   +* Ensmbl38: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Computing Residual Vars;
4145094   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4145095   +if
4145096   +F_DepVar NE '1'
4145097   +AND F_DepVar NE '0'
4145098   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
4145099   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
4145100   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
4145101   +end;
MPRINT(EM_DIAGRAM):   end;
4145102   +else do;
MPRINT(EM_DIAGRAM):   else do;
4145103   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
4145104   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
4145105   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
4145106   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
4145107   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
4145108   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
4145109   +END;
MPRINT(EM_DIAGRAM):   END;
4145110   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4145111    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL38_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL6_VALIDATE.VIEW used (Total process time):
      real time           0.23 seconds
      cpu time            0.23 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.24 seconds
      cpu time            0.25 seconds
      

MPRINT(EM_DIAGRAM):   quit;
4145112    quit;
4145113    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl38_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl38_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl38_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl38_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl38_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
4145173    filename _pref
4145173  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural6\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural6\EMPUBLISHSCORE.sas";
4145174    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4145175    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural6\EMPUBLISHSCORE.sas.
4145176   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4145177   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4145178   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4145179   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4145180   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4145181   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4145182   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4145183   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4145184   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4145185   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4145186   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4145187   +LENGTH _WARN_ $4
4145188   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
4145189   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4145190   +
4145191   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4145192   +
4145193   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4145194   +
4145195   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4145196   +
4145197   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4145198   +
4145199   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4145200   +
4145201   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4145202   +
4145203   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4145204   +
4145205   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4145206   +
4145207   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4145208   +
4145209   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4145210   +
4145211   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4145212   +
4145213   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4145214   +
4145215   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4145216   +
4145217   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4145218   +
4145219   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4145220   +
4145221   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4145222   +
4145223   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4145224   +
4145225   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4145226   +
4145227   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4145228   +
4145229   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4145230   +
4145231   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4145232   +
4145233   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4145234   +
4145235   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4145236   +
4145237   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4145238   +
4145239   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4145240   +
4145241   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4145242   +
4145243   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4145244   +
4145245   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4145246   +
4145247   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4145248   +
4145249   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4145250   +
4145251   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4145252   +
4145253   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4145254   +
4145255   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4145256   +
4145257   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4145258   +
4145259   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4145260   +
4145261   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4145262   +
4145263   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4145264   +
4145265   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4145266   +
4145267   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
4145268   +
4145269   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
4145270   +
4145271   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
4145272   +
4145273   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
4145274   +
4145275   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
4145276   +
4145277   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4145278   +
4145279   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4145280   +
4145281   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4145282   +
4145283   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4145284   +
4145285   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4145286   +
4145287   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4145288   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4145289   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4145290   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4145291   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4145292   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4145293   +end;
MPRINT(EM_DIAGRAM):   end;
4145294   +else do;
MPRINT(EM_DIAGRAM):   else do;
4145295   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4145296   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4145297   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4145298   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4145299   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4145300   +   end;
MPRINT(EM_DIAGRAM):   end;
4145301   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4145302   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4145303   +   end;
MPRINT(EM_DIAGRAM):   end;
4145304   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4145305   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4145306   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4145307   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4145308   +   end;
MPRINT(EM_DIAGRAM):   end;
4145309   +end;
MPRINT(EM_DIAGRAM):   end;
4145310   +
4145311   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4145312   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4145313   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4145314   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4145315   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4145316   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4145317   +end;
MPRINT(EM_DIAGRAM):   end;
4145318   +else do;
MPRINT(EM_DIAGRAM):   else do;
4145319   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4145320   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4145321   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4145322   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4145323   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4145324   +   end;
MPRINT(EM_DIAGRAM):   end;
4145325   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4145326   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4145327   +   end;
MPRINT(EM_DIAGRAM):   end;
4145328   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4145329   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4145330   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4145331   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4145332   +   end;
MPRINT(EM_DIAGRAM):   end;
4145333   +end;
MPRINT(EM_DIAGRAM):   end;
4145334   +
4145335   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4145336   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4145337   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4145338   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4145339   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4145340   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4145341   +end;
MPRINT(EM_DIAGRAM):   end;
4145342   +else do;
MPRINT(EM_DIAGRAM):   else do;
4145343   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4145344   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4145345   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4145346   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4145347   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4145348   +   end;
MPRINT(EM_DIAGRAM):   end;
4145349   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4145350   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4145351   +   end;
MPRINT(EM_DIAGRAM):   end;
4145352   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4145353   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4145354   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4145355   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4145356   +   end;
MPRINT(EM_DIAGRAM):   end;
4145357   +end;
MPRINT(EM_DIAGRAM):   end;
4145358   +
4145359   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4145360   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4145361   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4145362   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4145363   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4145364   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4145365   +end;
MPRINT(EM_DIAGRAM):   end;
4145366   +else do;
MPRINT(EM_DIAGRAM):   else do;
4145367   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4145368   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4145369   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4145370   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4145371   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4145372   +   end;
MPRINT(EM_DIAGRAM):   end;
4145373   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4145374   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4145375   +   end;
MPRINT(EM_DIAGRAM):   end;
4145376   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4145377   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4145378   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4145379   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4145380   +   end;
MPRINT(EM_DIAGRAM):   end;
4145381   +end;
MPRINT(EM_DIAGRAM):   end;
4145382   +
4145383   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4145384   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4145385   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4145386   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4145387   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4145388   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4145389   +end;
MPRINT(EM_DIAGRAM):   end;
4145390   +else do;
MPRINT(EM_DIAGRAM):   else do;
4145391   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4145392   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4145393   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4145394   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4145395   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4145396   +   end;
MPRINT(EM_DIAGRAM):   end;
4145397   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4145398   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4145399   +   end;
MPRINT(EM_DIAGRAM):   end;
4145400   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4145401   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4145402   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4145403   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4145404   +   end;
MPRINT(EM_DIAGRAM):   end;
4145405   +end;
MPRINT(EM_DIAGRAM):   end;
4145406   +
4145407   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4145408   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4145409   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4145410   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4145411   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4145412   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4145413   +end;
MPRINT(EM_DIAGRAM):   end;
4145414   +else do;
MPRINT(EM_DIAGRAM):   else do;
4145415   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4145416   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4145417   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4145418   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4145419   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4145420   +   end;
MPRINT(EM_DIAGRAM):   end;
4145421   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4145422   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4145423   +   end;
MPRINT(EM_DIAGRAM):   end;
4145424   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4145425   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4145426   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4145427   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4145428   +   end;
MPRINT(EM_DIAGRAM):   end;
4145429   +end;
MPRINT(EM_DIAGRAM):   end;
4145430   +
4145431   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4145432   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4145433   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4145434   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4145435   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4145436   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4145437   +end;
MPRINT(EM_DIAGRAM):   end;
4145438   +else do;
MPRINT(EM_DIAGRAM):   else do;
4145439   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4145440   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4145441   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4145442   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4145443   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4145444   +   end;
MPRINT(EM_DIAGRAM):   end;
4145445   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4145446   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4145447   +   end;
MPRINT(EM_DIAGRAM):   end;
4145448   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4145449   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4145450   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4145451   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4145452   +   end;
MPRINT(EM_DIAGRAM):   end;
4145453   +end;
MPRINT(EM_DIAGRAM):   end;
4145454   +
4145455   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4145456   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
4145457   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4145458   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4145459   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4145460   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4145461   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4145462   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4145463   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4145464   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4145465   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4145466   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4145467   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4145468   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4145469   +end;
MPRINT(EM_DIAGRAM):   end;
4145470   +else do;
MPRINT(EM_DIAGRAM):   else do;
4145471   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4145472   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4145473   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4145474   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4145475   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4145476   +   end;
MPRINT(EM_DIAGRAM):   end;
4145477   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4145478   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4145479   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4145480   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4145481   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4145482   +   end;
MPRINT(EM_DIAGRAM):   end;
4145483   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4145484   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4145485   +   end;
MPRINT(EM_DIAGRAM):   end;
4145486   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4145487   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4145488   +   end;
MPRINT(EM_DIAGRAM):   end;
4145489   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4145490   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4145491   +   end;
MPRINT(EM_DIAGRAM):   end;
4145492   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4145493   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4145494   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4145495   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4145496   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4145497   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4145498   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4145499   +   end;
MPRINT(EM_DIAGRAM):   end;
4145500   +end;
MPRINT(EM_DIAGRAM):   end;
4145501   +
4145502   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4145503   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4145504   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
4145505   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4145506   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4145507   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4145508   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4145509   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4145510   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4145511   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4145512   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4145513   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4145514   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4145515   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4145516   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4145517   +end;
MPRINT(EM_DIAGRAM):   end;
4145518   +else do;
MPRINT(EM_DIAGRAM):   else do;
4145519   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4145520   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4145521   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4145522   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4145523   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4145524   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4145525   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4145526   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4145527   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4145528   +         end;
MPRINT(EM_DIAGRAM):   end;
4145529   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4145530   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4145531   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4145532   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4145533   +            end;
MPRINT(EM_DIAGRAM):   end;
4145534   +         end;
MPRINT(EM_DIAGRAM):   end;
4145535   +      end;
MPRINT(EM_DIAGRAM):   end;
4145536   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4145537   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4145538   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4145539   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4145540   +         end;
MPRINT(EM_DIAGRAM):   end;
4145541   +      end;
MPRINT(EM_DIAGRAM):   end;
4145542   +   end;
MPRINT(EM_DIAGRAM):   end;
4145543   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4145544   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4145545   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4145546   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4145547   +      end;
MPRINT(EM_DIAGRAM):   end;
4145548   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4145549   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4145550   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4145551   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4145552   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4145553   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4145554   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4145555   +         end;
MPRINT(EM_DIAGRAM):   end;
4145556   +      end;
MPRINT(EM_DIAGRAM):   end;
4145557   +   end;
MPRINT(EM_DIAGRAM):   end;
4145558   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4145559   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4145560   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4145561   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4145562   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4145563   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4145564   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4145565   +   end;
MPRINT(EM_DIAGRAM):   end;
4145566   +end;
MPRINT(EM_DIAGRAM):   end;
4145567   +
4145568   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4145569   +*** Checking missing input Interval
4145570   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4145571   +
4145572   +IF NMISS(
4145573   +   AcceptedCmpTotal ,
4145574   +   Age ,
4145575   +   Frq ,
4145576   +   Income ,
4145577   +   Kidhome ,
4145578   +   Mnt ,
4145579   +   MntFishProducts ,
4145580   +   MntFruits ,
4145581   +   MntGoldProds ,
4145582   +   MntMeatProducts ,
4145583   +   MntSweetProducts ,
4145584   +   MntWines ,
4145585   +   MonthsAsCustomer ,
4145586   +   NumCatalogPurchases ,
4145587   +   NumDealsPurchases ,
4145588   +   NumDistPurchases ,
4145589   +   NumStorePurchases ,
4145590   +   NumWebPurchases ,
4145591   +   NumWebVisitsMonth ,
4145592   +   RFMstat ,
4145593   +   RMntFrq ,
4145594   +   Recency ,
4145595   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
4145596   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4145597   +
4145598   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4145599   +END;
MPRINT(EM_DIAGRAM):   END;
4145600   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4145601   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4145602   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4145603   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4145604   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4145605   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
4145606   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4145607   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4145608   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4145609   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4145610   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4145611   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4145612   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
4145613   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4145614   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4145615   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4145616   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4145617   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
4145618   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4145619   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
4145620   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4145621   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4145622   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
4145623   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4145624   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
4145625   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4145626   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
4145627   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4145628   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
4145629   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4145630   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
4145631   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4145632   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
4145633   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4145634   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
4145635   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4145636   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4145637   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4145638   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4145639   +END;
MPRINT(EM_DIAGRAM):   END;
4145640   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4145641   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4145642   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4145643   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
4145644   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4145645   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4145646   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4145647   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4145648   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4145649   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4145650   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4145651   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4145652   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4145653   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4145654   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4145655   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4145656   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
4145657   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4145658   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4145659   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4145660   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4145661   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4145662   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
4145663   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4145664   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4145665   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
4145666   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4145667   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4145668   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
4145669   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4145670   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4145671   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4145672   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4145673   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
4145674   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4145675   +   ELSE S_NumCatalogPurchases
4145676   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4145677   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
4145678   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4145679   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4145680   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
4145681   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4145682   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4145683   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
4145684   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4145685   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4145686   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
4145687   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4145688   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4145689   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
4145690   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4145691   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4145692   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
4145693   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4145694   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4145695   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4145696   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4145697   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4145698   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4145699   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4145700   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4145701   +END;
MPRINT(EM_DIAGRAM):   END;
4145702   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4145703   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4145704   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4145705   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4145706   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4145707   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4145708   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4145709   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4145710   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4145711   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4145712   +   H1x1_1  =    -0.39626020371997 * S_AcceptedCmpTotal
4145713   +          +    -0.01816056663075 * S_Age  +    -0.00460254268687 * S_Frq
4145714   +          +     -0.6298818722064 * S_Income  +      0.8900929150705 *
4145715   +        S_Kidhome  +     0.05998375535947 * S_Mnt  +     0.08478552461574 *
4145716   +        S_MntFishProducts  +     0.07285521492122 * S_MntFruits
4145717   +          +     0.02425299634788 * S_MntGoldProds  +    -0.41076383325238 *
4145718   +        S_MntMeatProducts  +     0.07871852129826 * S_MntSweetProducts
4145719   +          +     0.41538830130195 * S_MntWines  +    -0.05328800798119 *
4145720   +        S_MonthsAsCustomer  +    -0.40684432921987 * S_NumCatalogPurchases
4145721   +          +     -0.4295354470932 * S_NumDealsPurchases
4145722   +          +    -0.08226280459837 * S_NumDistPurchases
4145723   +          +      0.2932815275833 * S_NumStorePurchases
4145724   +          +     0.19049189042599 * S_NumWebPurchases
4145725   +          +    -0.98799339280673 * S_NumWebVisitsMonth
4145726   +          +     0.11260673669543 * S_RFMstat  +     0.13635890961985 *
4145727   +        S_RMntFrq  +     1.04348870032296 * S_Recency
4145728   +          +     0.52611148815102 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.39626020371997 * S_AcceptedCmpTotal + -0.01816056663075 * 
S_Age + -0.00460254268687 * S_Frq + -0.6298818722064 * S_Income + 0.8900929150705 * S_Kidhome 
+ 0.05998375535947 * S_Mnt + 0.08478552461574 * S_MntFishProducts + 0.07285521492122 * 
S_MntFruits + 0.02425299634788 * S_MntGoldProds + -0.41076383325238 * S_MntMeatProducts + 
0.07871852129826 * S_MntSweetProducts + 0.41538830130195 * S_MntWines + -0.05328800798119 * 
S_MonthsAsCustomer + -0.40684432921987 * S_NumCatalogPurchases + -0.4295354470932 * 
S_NumDealsPurchases + -0.08226280459837 * S_NumDistPurchases + 0.2932815275833 * 
S_NumStorePurchases + 0.19049189042599 * S_NumWebPurchases + -0.98799339280673 * 
S_NumWebVisitsMonth + 0.11260673669543 * S_RFMstat + 0.13635890961985 * S_RMntFrq + 
1.04348870032296 * S_Recency + 0.52611148815102 * S_Teenhome ;
4145729   +   H1x1_1  = H1x1_1  +     0.15790711928997 * AcceptedCmp10
4145730   +          +     0.06783787806396 * AcceptedCmp20  +     0.41565774195293 *
4145731   +        AcceptedCmp30  +     0.30916570020187 * AcceptedCmp40
4145732   +          +     0.01958247067826 * AcceptedCmp50  +    -0.22124142064002 *
4145733   +        Complain0  +    -0.10489638586177 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.15790711928997 * AcceptedCmp10 + 0.06783787806396 * 
AcceptedCmp20 + 0.41565774195293 * AcceptedCmp30 + 0.30916570020187 * AcceptedCmp40 + 
0.01958247067826 * AcceptedCmp50 + -0.22124142064002 * Complain0 + -0.10489638586177 * 
HigherEducationBinary0 ;
4145734   +   H1x1_1  = H1x1_1  +    -0.08125710121444 * Education2n_Cycle
4145735   +          +     0.43870916958611 * EducationBasic  +     0.00821874857942 *
4145736   +        EducationGraduation  +    -0.06446100461656 * EducationMaster
4145737   +          +    -0.78551174413278 * Marital_StatusDivorced
4145738   +          +     1.14162836709205 * Marital_StatusMarried
4145739   +          +    -0.85471695548675 * Marital_StatusSingle
4145740   +          +     1.26505259752775 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.08125710121444 * Education2n_Cycle + 
0.43870916958611 * EducationBasic + 0.00821874857942 * EducationGraduation + -0.06446100461656 
* EducationMaster + -0.78551174413278 * Marital_StatusDivorced + 1.14162836709205 * 
Marital_StatusMarried + -0.85471695548675 * Marital_StatusSingle + 1.26505259752775 * 
Marital_StatusTogether ;
4145741   +   H1x1_1  =     0.64210847429525 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.64210847429525 + H1x1_1 ;
4145742   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4145743   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4145744   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
4145745   +END;
MPRINT(EM_DIAGRAM):   END;
4145746   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4145747   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4145748   +END;
MPRINT(EM_DIAGRAM):   END;
4145749   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4145750   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
4145751   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4145752   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4145753   +   H1x2_1  =     1.91116996820275 * S_AcceptedCmpTotal
4145754   +          +    -0.04565000095235 * S_Age  +    -1.63806233692285 * S_Frq
4145755   +          +    -0.15095439296545 * S_Income  +     0.02267703582625 *
4145756   +        S_Kidhome  +     2.48236777474814 * S_Mnt  +    -1.42112052837665 *
4145757   +        S_MntFishProducts  +    -0.11955588126018 * S_MntFruits
4145758   +          +     0.13658953936605 * S_MntGoldProds  +     4.97158775763288 *
4145759   +        S_MntMeatProducts  +    -0.28267341074908 * S_MntSweetProducts
4145760   +          +    -1.82601506972813 * S_MntWines  +    -0.19812697196432 *
4145761   +        S_MonthsAsCustomer  +     0.19332662253824 * S_NumCatalogPurchases
4145762   +          +      0.1710743409836 * S_NumDealsPurchases
4145763   +          +     1.10019178495427 * S_NumDistPurchases
4145764   +          +     0.06701301620472 * S_NumStorePurchases
4145765   +          +    -1.47240374003368 * S_NumWebPurchases
4145766   +          +     0.38443387640949 * S_NumWebVisitsMonth
4145767   +          +      2.0027113997702 * S_RFMstat  +    -0.21911959624222 *
4145768   +        S_RMntFrq  +    -0.01383257292281 * S_Recency
4145769   +          +     0.06197183036374 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.91116996820275 * S_AcceptedCmpTotal + -0.04565000095235 * 
S_Age + -1.63806233692285 * S_Frq + -0.15095439296545 * S_Income + 0.02267703582625 * 
S_Kidhome + 2.48236777474814 * S_Mnt + -1.42112052837665 * S_MntFishProducts + 
-0.11955588126018 * S_MntFruits + 0.13658953936605 * S_MntGoldProds + 4.97158775763288 * 
S_MntMeatProducts + -0.28267341074908 * S_MntSweetProducts + -1.82601506972813 * S_MntWines + 
-0.19812697196432 * S_MonthsAsCustomer + 0.19332662253824 * S_NumCatalogPurchases + 
0.1710743409836 * S_NumDealsPurchases + 1.10019178495427 * S_NumDistPurchases + 
0.06701301620472 * S_NumStorePurchases + -1.47240374003368 * S_NumWebPurchases + 
0.38443387640949 * S_NumWebVisitsMonth + 2.0027113997702 * S_RFMstat + -0.21911959624222 * 
S_RMntFrq + -0.01383257292281 * S_Recency + 0.06197183036374 * S_Teenhome ;
4145770   +   H1x2_1  = H1x2_1  +    -2.19426751676022 * AcceptedCmp10
4145771   +          +     1.23153389834213 * AcceptedCmp20  +     1.52112605411294 *
4145772   +        AcceptedCmp30  +     1.24421666042028 * AcceptedCmp40
4145773   +          +    -1.01515793855275 * AcceptedCmp50  +    -0.37077318076551 *
4145774   +        Complain0  +    -0.60160682289549 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -2.19426751676022 * AcceptedCmp10 + 1.23153389834213 * 
AcceptedCmp20 + 1.52112605411294 * AcceptedCmp30 + 1.24421666042028 * AcceptedCmp40 + 
-1.01515793855275 * AcceptedCmp50 + -0.37077318076551 * Complain0 + -0.60160682289549 * 
HigherEducationBinary0 ;
4145775   +   H1x2_1  = H1x2_1  +     0.86205864289563 * Education2n_Cycle
4145776   +          +     1.36125955589945 * EducationBasic  +    -0.53843321813375 *
4145777   +        EducationGraduation  +    -0.84396607413409 * EducationMaster
4145778   +          +    -0.36835980184757 * Marital_StatusDivorced
4145779   +          +     0.71718933679692 * Marital_StatusMarried
4145780   +          +    -0.35767236657055 * Marital_StatusSingle
4145781   +          +     0.87230634846649 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.86205864289563 * Education2n_Cycle + 
1.36125955589945 * EducationBasic + -0.53843321813375 * EducationGraduation + 
-0.84396607413409 * EducationMaster + -0.36835980184757 * Marital_StatusDivorced + 
0.71718933679692 * Marital_StatusMarried + -0.35767236657055 * Marital_StatusSingle + 
0.87230634846649 * Marital_StatusTogether ;
4145782   +   H1x2_1  =     1.98030145519039 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.98030145519039 + H1x2_1 ;
4145783   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4145784   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4145785   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
4145786   +END;
MPRINT(EM_DIAGRAM):   END;
4145787   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4145788   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
4145789   +END;
MPRINT(EM_DIAGRAM):   END;
4145790   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4145791   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
4145792   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4145793   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4145794   +   H1x3_1  =     0.59484084506505 * S_AcceptedCmpTotal
4145795   +          +    -0.09107168455833 * S_Age  +      0.5281685679707 * S_Frq
4145796   +          +     1.27295894323816 * S_Income  +    -2.21965206319903 *
4145797   +        S_Kidhome  +     1.64535832697746 * S_Mnt  +    -0.35647765898878 *
4145798   +        S_MntFishProducts  +       0.702900738572 * S_MntFruits
4145799   +          +    -0.05421413002638 * S_MntGoldProds  +     0.35353806013819 *
4145800   +        S_MntMeatProducts  +     0.63868155719201 * S_MntSweetProducts
4145801   +          +     1.59716770369014 * S_MntWines  +    -0.38061815224137 *
4145802   +        S_MonthsAsCustomer  +     0.32358812228632 * S_NumCatalogPurchases
4145803   +          +    -1.99858075809796 * S_NumDealsPurchases
4145804   +          +    -0.37353682448701 * S_NumDistPurchases
4145805   +          +     1.16275863071649 * S_NumStorePurchases
4145806   +          +       -0.75936809253 * S_NumWebPurchases
4145807   +          +     2.17936226306026 * S_NumWebVisitsMonth
4145808   +          +    -0.05766019409404 * S_RFMstat  +      0.2675872238222 *
4145809   +        S_RMntFrq  +    -1.06566929523903 * S_Recency
4145810   +          +    -0.66606032905738 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.59484084506505 * S_AcceptedCmpTotal + -0.09107168455833 * 
S_Age + 0.5281685679707 * S_Frq + 1.27295894323816 * S_Income + -2.21965206319903 * S_Kidhome 
+ 1.64535832697746 * S_Mnt + -0.35647765898878 * S_MntFishProducts + 0.702900738572 * 
S_MntFruits + -0.05421413002638 * S_MntGoldProds + 0.35353806013819 * S_MntMeatProducts + 
0.63868155719201 * S_MntSweetProducts + 1.59716770369014 * S_MntWines + -0.38061815224137 * 
S_MonthsAsCustomer + 0.32358812228632 * S_NumCatalogPurchases + -1.99858075809796 * 
S_NumDealsPurchases + -0.37353682448701 * S_NumDistPurchases + 1.16275863071649 * 
S_NumStorePurchases + -0.75936809253 * S_NumWebPurchases + 2.17936226306026 * 
S_NumWebVisitsMonth + -0.05766019409404 * S_RFMstat + 0.2675872238222 * S_RMntFrq + 
-1.06566929523903 * S_Recency + -0.66606032905738 * S_Teenhome ;
4145811   +   H1x3_1  = H1x3_1  +     1.65955888726121 * AcceptedCmp10
4145812   +          +     0.45373706627481 * AcceptedCmp20  +     0.01398492780843 *
4145813   +        AcceptedCmp30  +    -0.89333296822402 * AcceptedCmp40
4145814   +          +     1.13510555884717 * AcceptedCmp50  +        0.34540948822 *
4145815   +        Complain0  +     0.74321002714269 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.65955888726121 * AcceptedCmp10 + 0.45373706627481 * 
AcceptedCmp20 + 0.01398492780843 * AcceptedCmp30 + -0.89333296822402 * AcceptedCmp40 + 
1.13510555884717 * AcceptedCmp50 + 0.34540948822 * Complain0 + 0.74321002714269 * 
HigherEducationBinary0 ;
4145816   +   H1x3_1  = H1x3_1  +    -0.23607197367978 * Education2n_Cycle
4145817   +          +     0.42497173199023 * EducationBasic  +      0.1600632419786 *
4145818   +        EducationGraduation  +    -0.90489876056203 * EducationMaster
4145819   +          +     0.60036315441483 * Marital_StatusDivorced
4145820   +          +    -0.94084946353672 * Marital_StatusMarried
4145821   +          +     0.34594388147374 * Marital_StatusSingle
4145822   +          +    -0.32507682638228 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.23607197367978 * Education2n_Cycle + 
0.42497173199023 * EducationBasic + 0.1600632419786 * EducationGraduation + -0.90489876056203 
* EducationMaster + 0.60036315441483 * Marital_StatusDivorced + -0.94084946353672 * 
Marital_StatusMarried + 0.34594388147374 * Marital_StatusSingle + -0.32507682638228 * 
Marital_StatusTogether ;
4145823   +   H1x3_1  =     1.88038507544103 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.88038507544103 + H1x3_1 ;
4145824   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4145825   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4145826   +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
4145827   +END;
MPRINT(EM_DIAGRAM):   END;
4145828   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4145829   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
4145830   +END;
MPRINT(EM_DIAGRAM):   END;
4145831   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4145832   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
4145833   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4145834   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4145835   +   H2x1_1  =     -3.6827854279321 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -3.6827854279321 * H1x1_1 ;
4145836   +   H2x1_1  = H2x1_1  +     3.64439382550131 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 3.64439382550131 * H1x2_1 ;
4145837   +   H2x1_1  = H2x1_1  +    -2.48816241593271 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.48816241593271 * H1x3_1 ;
4145838   +   H2x1_1  =     -2.2078830840961 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -2.2078830840961 + H2x1_1 ;
4145839   +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
4145840   +END;
MPRINT(EM_DIAGRAM):   END;
4145841   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4145842   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
4145843   +END;
MPRINT(EM_DIAGRAM):   END;
4145844   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4145845   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
4145846   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4145847   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4145848   +   H2x2_1  =     -1.6139108987075 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -1.6139108987075 * H1x1_1 ;
4145849   +   H2x2_1  = H2x2_1  +     1.98688988318911 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 1.98688988318911 * H1x2_1 ;
4145850   +   H2x2_1  = H2x2_1  +    -1.34935271176056 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.34935271176056 * H1x3_1 ;
4145851   +   H2x2_1  =    -2.69383672527368 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -2.69383672527368 + H2x2_1 ;
4145852   +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
4145853   +END;
MPRINT(EM_DIAGRAM):   END;
4145854   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4145855   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
4145856   +END;
MPRINT(EM_DIAGRAM):   END;
4145857   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4145858   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
4145859   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4145860   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4145861   +   H3x1_1  =     5.76336982853197 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 5.76336982853197 * H2x1_1 ;
4145862   +   H3x1_1  = H3x1_1  +     3.27853184608173 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 3.27853184608173 * H2x2_1 ;
4145863   +   H3x1_1  =     0.79036126364677 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.79036126364677 + H3x1_1 ;
4145864   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4145865   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4145866   +   H3x1_1  = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
4145867   +END;
MPRINT(EM_DIAGRAM):   END;
4145868   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4145869   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
4145870   +END;
MPRINT(EM_DIAGRAM):   END;
4145871   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4145872   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4145873   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4145874   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4145875   +   P_DepVar1  =    -9.42523861508231 * H3x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.42523861508231 * H3x1_1 ;
4145876   +   P_DepVar1  =     7.36639958607287 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.36639958607287 + P_DepVar1 ;
4145877   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4145878   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4145879   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4145880   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4145881   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4145882   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4145883   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4145884   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4145885   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4145886   +END;
MPRINT(EM_DIAGRAM):   END;
4145887   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4145888   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4145889   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4145890   +END;
MPRINT(EM_DIAGRAM):   END;
4145891   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4145892   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4145893   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4145894   +END;
MPRINT(EM_DIAGRAM):   END;
4145895   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4145896   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4145897   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4145898   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4145899   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4145900   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4145901   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4145902   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4145903   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4145904   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4145905   +END;
MPRINT(EM_DIAGRAM):   END;
4145906   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4145907   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4145908   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4145909   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4145910    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
4145911    quit;
4145912    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4145913    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4145914    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4145915    retain ID 2 Node "AutoNeural6";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural6";
4145916    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4145917    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2979 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2979 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4145918    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4145919    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4145920    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2979 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2979 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4145921    proc sort data=EMWS8.AutoNeural6_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural6_variableset out=_temp2(keep=NAME 
CREATOR);
4145922    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4145923    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL6_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4145924    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4145925    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4145926    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4145927    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4145928    proc contents data=EMWS8.AutoNeural6_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural6_train out=_meta(keep=NAME) noprint;
4145929    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

4145930    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4145931    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4145932    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4145933    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4145934    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4145935    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4145936    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4145937    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4145938    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4145938  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1717 rows and 5 columns.

4145939    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4145940    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
4145941    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1717 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 1717 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4145942    filename _pref
4145942  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
4145943    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4145944    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
4145945   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4145946   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
4145947   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4145948   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
4145949   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
4145950   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4145951    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
4145952    quit;
4145953    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4145954    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4145955    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4145956    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
4145957    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4145958    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4145959    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4145960    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4145961    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4145962    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
4145963    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4145964    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4145965    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4145966    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4145967    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4145968    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4145969    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
4145970    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

4145971    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4145972    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4145973    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4145974    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4145975    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4145976    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4145977    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4145978    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4145979    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4145979  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

4145980    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4145981    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
4145982    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 1721 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4145983    filename _pref
4145983  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
4145984    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4145985    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
4145986   +
4145987   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
4145988   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
4145988  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
4145989   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
4145990   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
4145991   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
4145992   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
4145993   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4145994    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
4145995    quit;
4145996    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4145997    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4145998    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4145999    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
4146000    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4146001    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

4146002    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4146003    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4146004    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4146005    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
4146006    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4146007    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4146008    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4146009    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4146010    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4146011    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4146012    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
4146013    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4146014    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4146015    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4146016    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4146017    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4146018    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4146019    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4146020    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4146021    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4146022    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4146022  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

4146023    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4146024    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
4146025    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 1760 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4146026    filename _pref
4146026  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
4146027    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4146028    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
4146029   +
4146030   +
4146031   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
4146032   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
4146033   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
4146034   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
4146035   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
4146036   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4146037   +
4146038   +
4146039   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
4146040   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
4146041   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
4146042   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
4146043   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
4146044   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4146045   +
4146046   +
4146047   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
4146048   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
4146049   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
4146050   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
4146051   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
4146052   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4146053   +
4146054   +
4146055   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
4146056   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
4146057   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
4146058   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
4146059   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
4146060   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4146061   +
4146062   +
4146063   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
4146064   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
4146065   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
4146066   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
4146067   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
4146068   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4146069   +
4146070   +
4146071   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
4146072   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
4146073   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
4146074   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
4146075   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
4146076   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4146077   +
4146078   +
4146079   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
4146080   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
4146081   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
4146082   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
4146083   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
4146084   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4146085   +
4146086   +
4146087   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
4146088   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
4146089   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
4146090   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
4146091   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
4146092   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4146093   +if
4146094   +_FILTERNORM1 not in ( '.')
4146095   + and
4146096   +_FILTERNORM2 not in ( '.')
4146097   + and
4146098   +_FILTERNORM3 not in ( '.')
4146099   + and
4146100   +_FILTERNORM4 not in ( '.')
4146101   + and
4146102   +_FILTERNORM5 not in ( '.')
4146103   + and
4146104   +_FILTERNORM6 not in ( '.')
4146105   + and
4146106   +_FILTERNORM7 not in ( ' ')
4146107   + and
4146108   +_FILTERNORM8 not in ( ' ')
4146109   +and
4146110   +( Dt_Customer ne .)
4146111   +and ( Income ne . and (Income<=107000))
4146112   +and ( Kidhome ne .)
4146113   +and ( MntFishProducts ne .)
4146114   +and ( MntFruits ne .)
4146115   +and ( MntGoldProds ne .)
4146116   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
4146117   +and ( MntSweetProducts ne .)
4146118   +and ( MntWines ne .)
4146119   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
4146120   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
4146121   +and ( NumStorePurchases ne .)
4146122   +and ( NumWebPurchases ne .)
4146123   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
4146124   +and ( Recency ne .)
4146125   +and ( Teenhome ne .)
4146126   +and ( Year_Birth ne .)
4146127   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
4146128   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
4146129   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
4146130   +end;
MPRINT(EM_DIAGRAM):   end;
4146131   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
4146132   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4146133    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
4146134    quit;
4146135    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4146136    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4146137    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4146138    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
4146139    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4146140    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4146141    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4146142    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4146143    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4146144    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
4146145    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4146146    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4146147    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4146148    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4146149    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4146150    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4146151    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
4146152    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

4146153    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4146154    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4146155    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4146156    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4146157    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4146158    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4146159    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4146160    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4146161    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4146161  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

4146162    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4146163    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
4146164    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 1826 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4146165    %macro varDept(fcmpdata=,id=);
4146166    %global nobs&id scoreFlag&id;
4146167    %let scoreFlag&id = 0;
4146168    %if &id=1 or ^&fcmpStart %then %do;
4146169    proc sort data=&fcmpdata out=_temp&id nodupkey;
4146170    by NAME;
4146171    where id=&id and LHS in( %let j=1;
4146172    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
4146173    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
4146174    "&var" %let j = %eval(&j+1);
4146175    %end;
4146176    );
4146177    run;
4146178    %let dsid = %sysfunc(open(_temp&id));
4146179    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4146180    %let dsid = %sysfunc(close(&dsid));
4146181    %if &&nobs&id %then %do;
4146182    %let scoreFlag&id = 1;
4146183    %let fcmpStart = 1;
4146184    %end;
4146185    %else %let fcmpStart = 0;
4146186    %end;
4146187    %else %do;
4146188    proc sort data=&fcmpdata out=_tempid;
4146189    where id=&id;
4146190    by LHS;
4146191    run;
4146192    %let dsid = %sysfunc(open(_tempid));
4146193    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4146194    %let dsid = %sysfunc(close(&dsid));
4146195    %if ^&&nobs&id %then %do;
4146196    proc datasets lib=work nolist;
4146197    delete _tempid;
4146198    run;
4146199    quit;
4146200    %end;
4146201    %else %do;
4146202    data _tempAll;
4146203    set %let j=%eval(&id-1);
4146204    %do x=1 %to &j;
4146205    %if &&nobs&x %then %do;
4146206    _temp&x %end;
4146207    %end;
4146208    ;
4146209    run;
4146210    proc sql;
4146211    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
4146211  ! work._tempid p2 where p.name=p2.lhs;
4146212    quit;
4146213    data _temp&id;
4146214    set _temp&id;
4146215    where LHS ne '' and NAME ne '' and Node ne '';
4146216    run;
4146217    proc datasets lib=work nolist;
4146218    delete _tempAll;
4146219    run;
4146220    %let dsid = %sysfunc(open(_temp&id));
4146221    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4146222    %let dsid = %sysfunc(close(&dsid));
4146223    %if ^&&nobs&id %then %do;
4146224    proc datasets lib=work nolist;
4146225    delete _temp&id;
4146226    run;
4146227    quit;
4146228    %end;
4146229    %else %do;
4146230    %let scoreFlag&id = 1;
4146231    data _temp&id;
4146232    set _temp&id;
4146233    where LHS ne NAME and node ne '';
4146234    run;
4146235    %let dsid = %sysfunc(open(_temp&id));
4146236    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4146237    %let dsid = %sysfunc(close(&dsid));
4146238    %if ^&&nobs&id %then %do;
4146239    proc datasets lib=work nolist;
4146240    delete _temp&id;
4146241    run;
4146242    quit;
4146243    %end;
4146244    %else %do;
4146245    proc sort data=_temp&id nodupkey;
4146246    by LHS NAME;
4146247    run;
4146248    %end;
4146249    %end;
4146250    %end;
4146251    %end;
4146252    %mend varDept;
4146253    %macro optCode(outdata=fcmpdata);
4146254    %global fcmpStart;
4146255    %let fcmpStart = 0;
4146256    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
4146257    %let NumNodes=9;
4146258    %do k=1 %to &NumNodes;
4146259    %vardept(fcmpdata=&outdata, id=&k);
4146260    %end;
4146261    %mend optCode;
4146262    %optcode(outData=EMWS8.Ensmbl38_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 152 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 112 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 40 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 40 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 40 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 40 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 44 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 40 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 83 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.09 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

4146263    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
4146264    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
4146265    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
4146266    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4146267    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
4146268    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
4146269    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
4146270    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4146271    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4146272    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
4146272  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

4146273    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4146274    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
4146275    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
4146276    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

4146277    filename _pref
4146277  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas";
4146278    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4146279    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas.
4146280   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4146281   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4146282   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4146283   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4146284   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4146285   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4146286   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4146287   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4146288   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4146289   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4146290   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4146291   +LENGTH _WARN_ $4
4146292   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
4146293   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4146294   +
4146295   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4146296   +
4146297   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4146298   +
4146299   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4146300   +
4146301   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4146302   +
4146303   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4146304   +
4146305   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4146306   +
4146307   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4146308   +
4146309   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4146310   +
4146311   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4146312   +
4146313   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4146314   +
4146315   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4146316   +
4146317   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4146318   +
4146319   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4146320   +
4146321   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4146322   +
4146323   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4146324   +
4146325   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4146326   +
4146327   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4146328   +
4146329   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4146330   +
4146331   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4146332   +
4146333   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4146334   +
4146335   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4146336   +
4146337   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4146338   +
4146339   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4146340   +
4146341   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4146342   +
4146343   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4146344   +
4146345   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4146346   +
4146347   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4146348   +
4146349   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4146350   +
4146351   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4146352   +
4146353   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4146354   +
4146355   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4146356   +
4146357   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4146358   +
4146359   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4146360   +
4146361   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4146362   +
4146363   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4146364   +
4146365   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4146366   +
4146367   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4146368   +
4146369   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4146370   +
4146371   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4146372   +
4146373   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4146374   +
4146375   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4146376   +
4146377   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4146378   +
4146379   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4146380   +
4146381   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4146382   +
4146383   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4146384   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4146385   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4146386   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4146387   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4146388   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4146389   +end;
MPRINT(EM_DIAGRAM):   end;
4146390   +else do;
MPRINT(EM_DIAGRAM):   else do;
4146391   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4146392   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4146393   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4146394   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4146395   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4146396   +   end;
MPRINT(EM_DIAGRAM):   end;
4146397   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4146398   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4146399   +   end;
MPRINT(EM_DIAGRAM):   end;
4146400   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4146401   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4146402   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4146403   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4146404   +   end;
MPRINT(EM_DIAGRAM):   end;
4146405   +end;
MPRINT(EM_DIAGRAM):   end;
4146406   +
4146407   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4146408   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4146409   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4146410   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4146411   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4146412   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4146413   +end;
MPRINT(EM_DIAGRAM):   end;
4146414   +else do;
MPRINT(EM_DIAGRAM):   else do;
4146415   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4146416   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4146417   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4146418   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4146419   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4146420   +   end;
MPRINT(EM_DIAGRAM):   end;
4146421   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4146422   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4146423   +   end;
MPRINT(EM_DIAGRAM):   end;
4146424   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4146425   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4146426   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4146427   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4146428   +   end;
MPRINT(EM_DIAGRAM):   end;
4146429   +end;
MPRINT(EM_DIAGRAM):   end;
4146430   +
4146431   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4146432   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4146433   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4146434   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4146435   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4146436   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4146437   +end;
MPRINT(EM_DIAGRAM):   end;
4146438   +else do;
MPRINT(EM_DIAGRAM):   else do;
4146439   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4146440   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4146441   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4146442   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4146443   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4146444   +   end;
MPRINT(EM_DIAGRAM):   end;
4146445   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4146446   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4146447   +   end;
MPRINT(EM_DIAGRAM):   end;
4146448   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4146449   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4146450   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4146451   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4146452   +   end;
MPRINT(EM_DIAGRAM):   end;
4146453   +end;
MPRINT(EM_DIAGRAM):   end;
4146454   +
4146455   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4146456   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4146457   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4146458   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4146459   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4146460   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4146461   +end;
MPRINT(EM_DIAGRAM):   end;
4146462   +else do;
MPRINT(EM_DIAGRAM):   else do;
4146463   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4146464   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4146465   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4146466   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4146467   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4146468   +   end;
MPRINT(EM_DIAGRAM):   end;
4146469   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4146470   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4146471   +   end;
MPRINT(EM_DIAGRAM):   end;
4146472   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4146473   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4146474   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4146475   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4146476   +   end;
MPRINT(EM_DIAGRAM):   end;
4146477   +end;
MPRINT(EM_DIAGRAM):   end;
4146478   +
4146479   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4146480   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4146481   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4146482   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4146483   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4146484   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4146485   +end;
MPRINT(EM_DIAGRAM):   end;
4146486   +else do;
MPRINT(EM_DIAGRAM):   else do;
4146487   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4146488   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4146489   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4146490   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4146491   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4146492   +   end;
MPRINT(EM_DIAGRAM):   end;
4146493   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4146494   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4146495   +   end;
MPRINT(EM_DIAGRAM):   end;
4146496   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4146497   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4146498   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4146499   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4146500   +   end;
MPRINT(EM_DIAGRAM):   end;
4146501   +end;
MPRINT(EM_DIAGRAM):   end;
4146502   +
4146503   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4146504   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4146505   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4146506   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4146507   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4146508   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4146509   +end;
MPRINT(EM_DIAGRAM):   end;
4146510   +else do;
MPRINT(EM_DIAGRAM):   else do;
4146511   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4146512   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4146513   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4146514   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4146515   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4146516   +   end;
MPRINT(EM_DIAGRAM):   end;
4146517   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4146518   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4146519   +   end;
MPRINT(EM_DIAGRAM):   end;
4146520   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4146521   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4146522   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4146523   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4146524   +   end;
MPRINT(EM_DIAGRAM):   end;
4146525   +end;
MPRINT(EM_DIAGRAM):   end;
4146526   +
4146527   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4146528   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4146529   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4146530   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4146531   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4146532   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4146533   +end;
MPRINT(EM_DIAGRAM):   end;
4146534   +else do;
MPRINT(EM_DIAGRAM):   else do;
4146535   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4146536   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4146537   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4146538   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4146539   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4146540   +   end;
MPRINT(EM_DIAGRAM):   end;
4146541   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4146542   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4146543   +   end;
MPRINT(EM_DIAGRAM):   end;
4146544   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4146545   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4146546   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4146547   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4146548   +   end;
MPRINT(EM_DIAGRAM):   end;
4146549   +end;
MPRINT(EM_DIAGRAM):   end;
4146550   +
4146551   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4146552   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
4146553   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4146554   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4146555   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4146556   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4146557   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4146558   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4146559   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4146560   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4146561   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4146562   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4146563   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4146564   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4146565   +end;
MPRINT(EM_DIAGRAM):   end;
4146566   +else do;
MPRINT(EM_DIAGRAM):   else do;
4146567   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4146568   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4146569   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4146570   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4146571   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4146572   +   end;
MPRINT(EM_DIAGRAM):   end;
4146573   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4146574   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4146575   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4146576   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4146577   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4146578   +   end;
MPRINT(EM_DIAGRAM):   end;
4146579   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4146580   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4146581   +   end;
MPRINT(EM_DIAGRAM):   end;
4146582   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4146583   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4146584   +   end;
MPRINT(EM_DIAGRAM):   end;
4146585   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4146586   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4146587   +   end;
MPRINT(EM_DIAGRAM):   end;
4146588   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4146589   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4146590   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4146591   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4146592   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4146593   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4146594   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4146595   +   end;
MPRINT(EM_DIAGRAM):   end;
4146596   +end;
MPRINT(EM_DIAGRAM):   end;
4146597   +
4146598   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4146599   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4146600   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
4146601   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4146602   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4146603   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4146604   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4146605   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4146606   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4146607   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4146608   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4146609   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4146610   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4146611   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4146612   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4146613   +end;
MPRINT(EM_DIAGRAM):   end;
4146614   +else do;
MPRINT(EM_DIAGRAM):   else do;
4146615   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4146616   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4146617   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4146618   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4146619   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4146620   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4146621   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4146622   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4146623   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4146624   +         end;
MPRINT(EM_DIAGRAM):   end;
4146625   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4146626   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4146627   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4146628   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4146629   +            end;
MPRINT(EM_DIAGRAM):   end;
4146630   +         end;
MPRINT(EM_DIAGRAM):   end;
4146631   +      end;
MPRINT(EM_DIAGRAM):   end;
4146632   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4146633   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4146634   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4146635   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4146636   +         end;
MPRINT(EM_DIAGRAM):   end;
4146637   +      end;
MPRINT(EM_DIAGRAM):   end;
4146638   +   end;
MPRINT(EM_DIAGRAM):   end;
4146639   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4146640   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4146641   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4146642   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4146643   +      end;
MPRINT(EM_DIAGRAM):   end;
4146644   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4146645   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4146646   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4146647   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4146648   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4146649   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4146650   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4146651   +         end;
MPRINT(EM_DIAGRAM):   end;
4146652   +      end;
MPRINT(EM_DIAGRAM):   end;
4146653   +   end;
MPRINT(EM_DIAGRAM):   end;
4146654   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4146655   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4146656   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4146657   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4146658   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4146659   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4146660   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4146661   +   end;
MPRINT(EM_DIAGRAM):   end;
4146662   +end;
MPRINT(EM_DIAGRAM):   end;
4146663   +
4146664   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4146665   +*** Checking missing input Interval
4146666   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4146667   +
4146668   +IF NMISS(
4146669   +   AcceptedCmpTotal ,
4146670   +   Age ,
4146671   +   Frq ,
4146672   +   Income ,
4146673   +   Kidhome ,
4146674   +   Mnt ,
4146675   +   MntFishProducts ,
4146676   +   MntFruits ,
4146677   +   MntGoldProds ,
4146678   +   MntMeatProducts ,
4146679   +   MntSweetProducts ,
4146680   +   MntWines ,
4146681   +   MonthsAsCustomer ,
4146682   +   NumCatalogPurchases ,
4146683   +   NumDealsPurchases ,
4146684   +   NumDistPurchases ,
4146685   +   NumStorePurchases ,
4146686   +   NumWebPurchases ,
4146687   +   NumWebVisitsMonth ,
4146688   +   RFMstat ,
4146689   +   RMntFrq ,
4146690   +   Recency ,
4146691   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
4146692   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4146693   +
4146694   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4146695   +END;
MPRINT(EM_DIAGRAM):   END;
4146696   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4146697   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4146698   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4146699   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4146700   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4146701   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
4146702   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4146703   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4146704   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4146705   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4146706   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4146707   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4146708   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
4146709   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4146710   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4146711   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4146712   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4146713   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
4146714   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4146715   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
4146716   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4146717   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4146718   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
4146719   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4146720   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
4146721   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4146722   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
4146723   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4146724   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
4146725   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4146726   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
4146727   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4146728   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
4146729   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4146730   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
4146731   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4146732   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4146733   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4146734   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4146735   +END;
MPRINT(EM_DIAGRAM):   END;
4146736   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4146737   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4146738   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4146739   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
4146740   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4146741   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4146742   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4146743   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4146744   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4146745   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4146746   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4146747   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4146748   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4146749   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4146750   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4146751   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4146752   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
4146753   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4146754   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4146755   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4146756   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4146757   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4146758   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
4146759   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4146760   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4146761   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
4146762   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4146763   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4146764   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
4146765   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4146766   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4146767   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4146768   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4146769   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
4146770   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4146771   +   ELSE S_NumCatalogPurchases
4146772   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4146773   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
4146774   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4146775   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4146776   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
4146777   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4146778   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4146779   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
4146780   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4146781   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4146782   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
4146783   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4146784   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4146785   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
4146786   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4146787   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4146788   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
4146789   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4146790   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4146791   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4146792   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4146793   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4146794   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4146795   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4146796   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4146797   +END;
MPRINT(EM_DIAGRAM):   END;
4146798   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4146799   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4146800   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4146801   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4146802   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4146803   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4146804   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4146805   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4146806   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4146807   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4146808   +   H1x1_1  =     0.26227897937716 * S_AcceptedCmpTotal
4146809   +          +     -0.0155758157867 * S_Age  +    -0.20268934440257 * S_Frq
4146810   +          +    -0.18529976542103 * S_Income  +     0.18038928903961 *
4146811   +        S_Kidhome  +    -0.28961354349068 * S_Mnt  +    -0.05151010840858 *
4146812   +        S_MntFishProducts  +    -0.03759341636928 * S_MntFruits
4146813   +          +     0.01305575717465 * S_MntGoldProds  +     0.24307680778257 *
4146814   +        S_MntMeatProducts  +    -0.02893363709307 * S_MntSweetProducts
4146815   +          +    -0.35324697751403 * S_MntWines  +    -0.00781254837323 *
4146816   +        S_MonthsAsCustomer  +     0.15222992290422 * S_NumCatalogPurchases
4146817   +          +     0.09708841024031 * S_NumDealsPurchases
4146818   +          +    -0.29075561032014 * S_NumDistPurchases
4146819   +          +    -0.14495394259873 * S_NumStorePurchases
4146820   +          +     0.11890705145732 * S_NumWebPurchases
4146821   +          +    -0.16954189911344 * S_NumWebVisitsMonth
4146822   +          +     0.12377939462638 * S_RFMstat  +    -0.05870604523801 *
4146823   +        S_RMntFrq  +     0.17150719398884 * S_Recency
4146824   +          +     0.13642607109645 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26227897937716 * S_AcceptedCmpTotal + -0.0155758157867 * 
S_Age + -0.20268934440257 * S_Frq + -0.18529976542103 * S_Income + 0.18038928903961 * 
S_Kidhome + -0.28961354349068 * S_Mnt + -0.05151010840858 * S_MntFishProducts + 
-0.03759341636928 * S_MntFruits + 0.01305575717465 * S_MntGoldProds + 0.24307680778257 * 
S_MntMeatProducts + -0.02893363709307 * S_MntSweetProducts + -0.35324697751403 * S_MntWines + 
-0.00781254837323 * S_MonthsAsCustomer + 0.15222992290422 * S_NumCatalogPurchases + 
0.09708841024031 * S_NumDealsPurchases + -0.29075561032014 * S_NumDistPurchases + 
-0.14495394259873 * S_NumStorePurchases + 0.11890705145732 * S_NumWebPurchases + 
-0.16954189911344 * S_NumWebVisitsMonth + 0.12377939462638 * S_RFMstat + -0.05870604523801 * 
S_RMntFrq + 0.17150719398884 * S_Recency + 0.13642607109645 * S_Teenhome ;
4146825   +   H1x1_2  =     0.26173967942961 * S_AcceptedCmpTotal
4146826   +          +    -0.00424968908882 * S_Age  +    -0.07102902276221 * S_Frq
4146827   +          +     0.17373040625452 * S_Income  +    -0.12612693849717 *
4146828   +        S_Kidhome  +    -0.40114393645566 * S_Mnt  +    -0.06800009910731 *
4146829   +        S_MntFishProducts  +    -0.06681994193124 * S_MntFruits
4146830   +          +     0.00602505287702 * S_MntGoldProds  +     0.29533767747106 *
4146831   +        S_MntMeatProducts  +    -0.06832235425976 * S_MntSweetProducts
4146832   +          +    -0.44970327281811 * S_MntWines  +    -0.01061648191158 *
4146833   +        S_MonthsAsCustomer  +      0.3402332775449 * S_NumCatalogPurchases
4146834   +          +     0.16274478997892 * S_NumDealsPurchases
4146835   +          +     0.03966958784582 * S_NumDistPurchases
4146836   +          +    -0.04714110726598 * S_NumStorePurchases
4146837   +          +    -0.02124229528082 * S_NumWebPurchases
4146838   +          +     0.29753299776832 * S_NumWebVisitsMonth
4146839   +          +     0.08114418100212 * S_RFMstat  +     0.39051989081881 *
4146840   +        S_RMntFrq  +     -0.3340129986623 * S_Recency
4146841   +          +    -0.11108871458308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.26173967942961 * S_AcceptedCmpTotal + -0.00424968908882 * 
S_Age + -0.07102902276221 * S_Frq + 0.17373040625452 * S_Income + -0.12612693849717 * 
S_Kidhome + -0.40114393645566 * S_Mnt + -0.06800009910731 * S_MntFishProducts + 
-0.06681994193124 * S_MntFruits + 0.00602505287702 * S_MntGoldProds + 0.29533767747106 * 
S_MntMeatProducts + -0.06832235425976 * S_MntSweetProducts + -0.44970327281811 * S_MntWines + 
-0.01061648191158 * S_MonthsAsCustomer + 0.3402332775449 * S_NumCatalogPurchases + 
0.16274478997892 * S_NumDealsPurchases + 0.03966958784582 * S_NumDistPurchases + 
-0.04714110726598 * S_NumStorePurchases + -0.02124229528082 * S_NumWebPurchases + 
0.29753299776832 * S_NumWebVisitsMonth + 0.08114418100212 * S_RFMstat + 0.39051989081881 * 
S_RMntFrq + -0.3340129986623 * S_Recency + -0.11108871458308 * S_Teenhome ;
4146842   +   H1x1_1  = H1x1_1  +      0.1756873442571 * AcceptedCmp10
4146843   +          +     0.31180024044306 * AcceptedCmp20  +     0.29619883713337 *
4146844   +        AcceptedCmp30  +     0.30154500722412 * AcceptedCmp40
4146845   +          +     0.19297823461379 * AcceptedCmp50  +     -0.2612666063344 *
4146846   +        Complain0  +    -0.07979877068908 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.1756873442571 * AcceptedCmp10 + 0.31180024044306 * 
AcceptedCmp20 + 0.29619883713337 * AcceptedCmp30 + 0.30154500722412 * AcceptedCmp40 + 
0.19297823461379 * AcceptedCmp50 + -0.2612666063344 * Complain0 + -0.07979877068908 * 
HigherEducationBinary0 ;
4146847   +   H1x1_2  = H1x1_2  +      0.0093987850789 * AcceptedCmp10
4146848   +          +     0.01121417299451 * AcceptedCmp20  +     0.02978720081114 *
4146849   +        AcceptedCmp30  +     0.03675035164823 * AcceptedCmp40
4146850   +          +      0.0326403700043 * AcceptedCmp50  +     0.12620299225555 *
4146851   +        Complain0  +    -0.08132205666396 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0093987850789 * AcceptedCmp10 + 0.01121417299451 * 
AcceptedCmp20 + 0.02978720081114 * AcceptedCmp30 + 0.03675035164823 * AcceptedCmp40 + 
0.0326403700043 * AcceptedCmp50 + 0.12620299225555 * Complain0 + -0.08132205666396 * 
HigherEducationBinary0 ;
4146852   +   H1x1_1  = H1x1_1  +    -0.03360721558666 * Education2n_Cycle
4146853   +          +     0.15032252273168 * EducationBasic  +    -0.00292639237041 *
4146854   +        EducationGraduation  +     0.00619669837452 * EducationMaster
4146855   +          +    -0.05037639679806 * Marital_StatusDivorced
4146856   +          +     0.28781968727878 * Marital_StatusMarried
4146857   +          +    -0.20382417074384 * Marital_StatusSingle
4146858   +          +     0.20088888064707 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03360721558666 * Education2n_Cycle + 
0.15032252273168 * EducationBasic + -0.00292639237041 * EducationGraduation + 0.00619669837452 
* EducationMaster + -0.05037639679806 * Marital_StatusDivorced + 0.28781968727878 * 
Marital_StatusMarried + -0.20382417074384 * Marital_StatusSingle + 0.20088888064707 * 
Marital_StatusTogether ;
4146859   +   H1x1_2  = H1x1_2  +     0.12543856607452 * Education2n_Cycle
4146860   +          +      0.0095562801112 * EducationBasic  +    -0.04438983662274 *
4146861   +        EducationGraduation  +    -0.06952670554019 * EducationMaster
4146862   +          +     0.06970969219123 * Marital_StatusDivorced
4146863   +          +    -0.15787475744986 * Marital_StatusMarried
4146864   +          +     0.14345344072192 * Marital_StatusSingle
4146865   +          +    -0.12758942067533 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12543856607452 * Education2n_Cycle + 0.0095562801112 
* EducationBasic + -0.04438983662274 * EducationGraduation + -0.06952670554019 * 
EducationMaster + 0.06970969219123 * Marital_StatusDivorced + -0.15787475744986 * 
Marital_StatusMarried + 0.14345344072192 * Marital_StatusSingle + -0.12758942067533 * 
Marital_StatusTogether ;
4146866   +   H1x1_1  =     0.90517220350758 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.90517220350758 + H1x1_1 ;
4146867   +   H1x1_2  =    -0.60383186342134 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.60383186342134 + H1x1_2 ;
4146868   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
4146869   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
4146870   +END;
MPRINT(EM_DIAGRAM):   END;
4146871   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4146872   +   H1x1_1  = .;
The SAS System

MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4146873   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4146874   +END;
MPRINT(EM_DIAGRAM):   END;
4146875   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4146876   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4146877   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4146878   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4146879   +   P_DepVar1  =     -11.151440981908 * H1x1_1  +     16.6040498320868 * H1x1_2
4146880   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -11.151440981908 * H1x1_1 + 16.6040498320868 * H1x1_2 ;
4146881   +   P_DepVar1  =     2.38025141404985 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.38025141404985 + P_DepVar1 ;
4146882   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4146883   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4146884   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4146885   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4146886   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4146887   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4146888   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4146889   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4146890   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4146891   +END;
MPRINT(EM_DIAGRAM):   END;
4146892   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4146893   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4146894   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4146895   +END;
MPRINT(EM_DIAGRAM):   END;
4146896   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4146897   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4146898   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4146899   +END;
MPRINT(EM_DIAGRAM):   END;
4146900   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4146901   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4146902   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4146903   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4146904   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4146905   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4146906   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4146907   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4146908   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4146909   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4146910   +END;
MPRINT(EM_DIAGRAM):   END;
4146911   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4146912   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4146913   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4146914   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4146915    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
4146916    quit;
4146917    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4146918    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4146919    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4146920    retain ID 2 Node "AutoNeural7";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural7";
4146921    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4146922    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4146923    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4146924    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4146925    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4146926    proc sort data=EMWS8.AutoNeural7_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural7_variableset out=_temp2(keep=NAME 
CREATOR);
4146927    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4146928    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL7_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

4146929    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4146930    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4146931    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4146932    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4146933    proc contents data=EMWS8.AutoNeural7_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural7_train out=_meta(keep=NAME) noprint;
4146934    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 55 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

4146935    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4146936    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4146937    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 55 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 55 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4146938    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4146939    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4146940    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4146941    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 55 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 55 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4146942    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4146943    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4146943  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1359 rows and 5 columns.

4146944    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4146945    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
4146946    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1359 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 1359 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4146947    filename _pref
4146947  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
4146948    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4146949    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
4146950   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4146951   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
4146952   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4146953   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
4146954   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
4146955   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4146956    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
4146957    quit;
4146958    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4146959    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4146960    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4146961    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
4146962    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4146963    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4146964    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4146965    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4146966    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4146967    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
4146968    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4146969    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4146970    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4146971    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4146972    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4146973    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4146974    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
4146975    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

4146976    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4146977    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4146978    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4146979    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4146980    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4146981    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4146982    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4146983    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4146984    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4146984  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

4146985    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4146986    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
4146987    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 1363 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4146988    filename _pref
4146988  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
4146989    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4146990    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
4146991   +
4146992   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
4146993   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
4146993  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
4146994   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
4146995   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
4146996   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
4146997   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
4146998   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4146999    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
4147000    quit;
4147001    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4147002    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4147003    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4147004    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
4147005    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4147006    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4147007    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4147008    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4147009    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4147010    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
4147011    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4147012    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4147013    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4147014    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4147015    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4147016    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4147017    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
4147018    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4147019    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4147020    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4147021    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4147022    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4147023    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4147024    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4147025    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4147026    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4147027    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4147027  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

4147028    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4147029    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
4147030    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 1402 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4147031    filename _pref
4147031  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
4147032    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4147033    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
4147034   +
4147035   +
4147036   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
4147037   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
4147038   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
4147039   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
4147040   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
4147041   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4147042   +
4147043   +
4147044   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
4147045   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
4147046   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
4147047   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
4147048   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
4147049   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4147050   +
4147051   +
4147052   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
4147053   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
4147054   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
4147055   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
4147056   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
4147057   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4147058   +
4147059   +
4147060   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
4147061   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
4147062   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
4147063   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
4147064   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
4147065   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4147066   +
4147067   +
4147068   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
4147069   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
4147070   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
4147071   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
4147072   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
4147073   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4147074   +
4147075   +
4147076   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
4147077   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
4147078   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
4147079   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
4147080   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
4147081   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4147082   +
4147083   +
4147084   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
4147085   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
4147086   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
4147087   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
4147088   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
4147089   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4147090   +
4147091   +
4147092   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
4147093   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
4147094   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
4147095   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
4147096   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
4147097   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4147098   +if
4147099   +_FILTERNORM1 not in ( '.')
4147100   + and
4147101   +_FILTERNORM2 not in ( '.')
4147102   + and
4147103   +_FILTERNORM3 not in ( '.')
4147104   + and
4147105   +_FILTERNORM4 not in ( '.')
4147106   + and
4147107   +_FILTERNORM5 not in ( '.')
4147108   + and
4147109   +_FILTERNORM6 not in ( '.')
4147110   + and
4147111   +_FILTERNORM7 not in ( ' ')
4147112   + and
4147113   +_FILTERNORM8 not in ( ' ')
4147114   +and
4147115   +( Dt_Customer ne .)
4147116   +and ( Income ne . and (Income<=107000))
4147117   +and ( Kidhome ne .)
4147118   +and ( MntFishProducts ne .)
4147119   +and ( MntFruits ne .)
4147120   +and ( MntGoldProds ne .)
4147121   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
4147122   +and ( MntSweetProducts ne .)
4147123   +and ( MntWines ne .)
4147124   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
4147125   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
4147126   +and ( NumStorePurchases ne .)
4147127   +and ( NumWebPurchases ne .)
4147128   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
4147129   +and ( Recency ne .)
4147130   +and ( Teenhome ne .)
4147131   +and ( Year_Birth ne .)
4147132   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
4147133   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
4147134   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
4147135   +end;
MPRINT(EM_DIAGRAM):   end;
4147136   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
4147137   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4147138    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
4147139    quit;
4147140    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4147141    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4147142    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4147143    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
4147144    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4147145    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4147146    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4147147    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4147148    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4147149    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
4147150    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4147151    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4147152    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4147153    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4147154    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4147155    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4147156    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
4147157    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

4147158    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4147159    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4147160    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4147161    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4147162    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4147163    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4147164    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4147165    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4147166    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4147166  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

4147167    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4147168    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
4147169    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 1468 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4147170    %macro varDept(fcmpdata=,id=);
4147171    %global nobs&id scoreFlag&id;
4147172    %let scoreFlag&id = 0;
4147173    %if &id=1 or ^&fcmpStart %then %do;
4147174    proc sort data=&fcmpdata out=_temp&id nodupkey;
4147175    by NAME;
4147176    where id=&id and LHS in( %let j=1;
4147177    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
4147178    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
4147179    "&var" %let j = %eval(&j+1);
4147180    %end;
4147181    );
4147182    run;
4147183    %let dsid = %sysfunc(open(_temp&id));
4147184    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4147185    %let dsid = %sysfunc(close(&dsid));
4147186    %if &&nobs&id %then %do;
4147187    %let scoreFlag&id = 1;
4147188    %let fcmpStart = 1;
4147189    %end;
4147190    %else %let fcmpStart = 0;
4147191    %end;
4147192    %else %do;
4147193    proc sort data=&fcmpdata out=_tempid;
4147194    where id=&id;
4147195    by LHS;
4147196    run;
4147197    %let dsid = %sysfunc(open(_tempid));
4147198    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4147199    %let dsid = %sysfunc(close(&dsid));
4147200    %if ^&&nobs&id %then %do;
4147201    proc datasets lib=work nolist;
4147202    delete _tempid;
4147203    run;
4147204    quit;
4147205    %end;
4147206    %else %do;
4147207    data _tempAll;
4147208    set %let j=%eval(&id-1);
4147209    %do x=1 %to &j;
4147210    %if &&nobs&x %then %do;
4147211    _temp&x %end;
4147212    %end;
4147213    ;
4147214    run;
4147215    proc sql;
4147216    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
4147216  ! work._tempid p2 where p.name=p2.lhs;
4147217    quit;
4147218    data _temp&id;
4147219    set _temp&id;
4147220    where LHS ne '' and NAME ne '' and Node ne '';
4147221    run;
4147222    proc datasets lib=work nolist;
4147223    delete _tempAll;
4147224    run;
4147225    %let dsid = %sysfunc(open(_temp&id));
4147226    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4147227    %let dsid = %sysfunc(close(&dsid));
4147228    %if ^&&nobs&id %then %do;
4147229    proc datasets lib=work nolist;
4147230    delete _temp&id;
4147231    run;
4147232    quit;
4147233    %end;
4147234    %else %do;
4147235    %let scoreFlag&id = 1;
4147236    data _temp&id;
4147237    set _temp&id;
4147238    where LHS ne NAME and node ne '';
4147239    run;
4147240    %let dsid = %sysfunc(open(_temp&id));
4147241    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4147242    %let dsid = %sysfunc(close(&dsid));
4147243    %if ^&&nobs&id %then %do;
4147244    proc datasets lib=work nolist;
4147245    delete _temp&id;
4147246    run;
4147247    quit;
4147248    %end;
4147249    %else %do;
4147250    proc sort data=_temp&id nodupkey;
4147251    by LHS NAME;
4147252    run;
4147253    %end;
4147254    %end;
4147255    %end;
4147256    %end;
4147257    %mend varDept;
4147258    %macro optCode(outdata=fcmpdata);
4147259    %global fcmpStart;
4147260    %let fcmpStart = 0;
4147261    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
4147262    %let NumNodes=9;
4147263    %do k=1 %to &NumNodes;
4147264    %vardept(fcmpdata=&outdata, id=&k);
4147265    %end;
4147266    %mend optCode;
4147267    %optcode(outData=EMWS8.Ensmbl38_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 140 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 104 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 36 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.09 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 36 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 40 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 79 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

4147268    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
4147269    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
4147270    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
4147271    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4147272    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
4147273    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
4147274    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
4147275    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4147276    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4147277    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
4147277  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

4147278    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4147279    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
4147280    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
4147281    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4147282    filename _pref
4147282  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural8\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural8\EMPUBLISHSCORE.sas";
4147283    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4147284    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural8\EMPUBLISHSCORE.sas.
4147285   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4147286   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4147287   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4147288   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4147289   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4147290   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4147291   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4147292   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4147293   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4147294   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4147295   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4147296   +LENGTH _WARN_ $4
4147297   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
4147298   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4147299   +
4147300   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4147301   +
4147302   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4147303   +
4147304   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4147305   +
4147306   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4147307   +
4147308   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4147309   +
4147310   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4147311   +
4147312   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4147313   +
4147314   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4147315   +
4147316   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4147317   +
4147318   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4147319   +
4147320   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4147321   +
4147322   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4147323   +
4147324   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4147325   +
4147326   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4147327   +
4147328   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4147329   +
4147330   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4147331   +
4147332   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4147333   +
4147334   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4147335   +
4147336   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4147337   +
4147338   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4147339   +
4147340   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4147341   +
4147342   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4147343   +
4147344   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4147345   +
4147346   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4147347   +
4147348   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4147349   +
4147350   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4147351   +
4147352   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4147353   +
4147354   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4147355   +
4147356   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4147357   +
4147358   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4147359   +
4147360   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4147361   +
4147362   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4147363   +
4147364   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4147365   +
4147366   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4147367   +
4147368   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4147369   +
4147370   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4147371   +
4147372   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4147373   +
4147374   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4147375   +
4147376   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4147377   +
4147378   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
4147379   +
4147380   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
4147381   +
4147382   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
4147383   +
4147384   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
4147385   +
4147386   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
4147387   +
4147388   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
4147389   +
4147390   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
4147391   +
4147392   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4147393   +
4147394   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4147395   +
4147396   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4147397   +
4147398   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4147399   +
4147400   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4147401   +
4147402   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4147403   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4147404   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4147405   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4147406   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4147407   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4147408   +end;
MPRINT(EM_DIAGRAM):   end;
4147409   +else do;
MPRINT(EM_DIAGRAM):   else do;
4147410   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4147411   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4147412   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4147413   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4147414   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4147415   +   end;
MPRINT(EM_DIAGRAM):   end;
4147416   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4147417   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4147418   +   end;
MPRINT(EM_DIAGRAM):   end;
4147419   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4147420   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4147421   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4147422   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4147423   +   end;
MPRINT(EM_DIAGRAM):   end;
4147424   +end;
MPRINT(EM_DIAGRAM):   end;
4147425   +
4147426   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4147427   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4147428   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4147429   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4147430   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4147431   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4147432   +end;
MPRINT(EM_DIAGRAM):   end;
4147433   +else do;
MPRINT(EM_DIAGRAM):   else do;
4147434   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4147435   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4147436   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4147437   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4147438   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4147439   +   end;
MPRINT(EM_DIAGRAM):   end;
4147440   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4147441   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4147442   +   end;
MPRINT(EM_DIAGRAM):   end;
4147443   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4147444   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4147445   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4147446   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4147447   +   end;
MPRINT(EM_DIAGRAM):   end;
4147448   +end;
MPRINT(EM_DIAGRAM):   end;
4147449   +
4147450   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4147451   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4147452   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4147453   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4147454   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4147455   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4147456   +end;
MPRINT(EM_DIAGRAM):   end;
4147457   +else do;
MPRINT(EM_DIAGRAM):   else do;
4147458   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4147459   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4147460   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4147461   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4147462   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4147463   +   end;
MPRINT(EM_DIAGRAM):   end;
4147464   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4147465   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4147466   +   end;
MPRINT(EM_DIAGRAM):   end;
4147467   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4147468   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4147469   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4147470   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4147471   +   end;
MPRINT(EM_DIAGRAM):   end;
4147472   +end;
MPRINT(EM_DIAGRAM):   end;
4147473   +
4147474   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4147475   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4147476   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4147477   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4147478   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4147479   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4147480   +end;
MPRINT(EM_DIAGRAM):   end;
4147481   +else do;
MPRINT(EM_DIAGRAM):   else do;
4147482   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4147483   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4147484   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4147485   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4147486   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4147487   +   end;
MPRINT(EM_DIAGRAM):   end;
4147488   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4147489   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4147490   +   end;
MPRINT(EM_DIAGRAM):   end;
4147491   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4147492   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4147493   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4147494   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4147495   +   end;
MPRINT(EM_DIAGRAM):   end;
4147496   +end;
MPRINT(EM_DIAGRAM):   end;
4147497   +
4147498   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4147499   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4147500   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4147501   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4147502   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4147503   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4147504   +end;
MPRINT(EM_DIAGRAM):   end;
4147505   +else do;
MPRINT(EM_DIAGRAM):   else do;
4147506   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4147507   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4147508   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4147509   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4147510   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4147511   +   end;
MPRINT(EM_DIAGRAM):   end;
4147512   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4147513   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4147514   +   end;
MPRINT(EM_DIAGRAM):   end;
4147515   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4147516   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4147517   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4147518   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4147519   +   end;
MPRINT(EM_DIAGRAM):   end;
4147520   +end;
MPRINT(EM_DIAGRAM):   end;
4147521   +
4147522   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4147523   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4147524   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4147525   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4147526   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4147527   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4147528   +end;
MPRINT(EM_DIAGRAM):   end;
4147529   +else do;
MPRINT(EM_DIAGRAM):   else do;
4147530   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4147531   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4147532   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4147533   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4147534   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4147535   +   end;
MPRINT(EM_DIAGRAM):   end;
4147536   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4147537   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4147538   +   end;
MPRINT(EM_DIAGRAM):   end;
4147539   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4147540   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4147541   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4147542   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4147543   +   end;
MPRINT(EM_DIAGRAM):   end;
4147544   +end;
MPRINT(EM_DIAGRAM):   end;
4147545   +
4147546   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4147547   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4147548   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4147549   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4147550   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4147551   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4147552   +end;
MPRINT(EM_DIAGRAM):   end;
4147553   +else do;
MPRINT(EM_DIAGRAM):   else do;
4147554   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4147555   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4147556   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4147557   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4147558   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4147559   +   end;
MPRINT(EM_DIAGRAM):   end;
4147560   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4147561   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4147562   +   end;
MPRINT(EM_DIAGRAM):   end;
4147563   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4147564   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4147565   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4147566   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4147567   +   end;
MPRINT(EM_DIAGRAM):   end;
4147568   +end;
MPRINT(EM_DIAGRAM):   end;
4147569   +
4147570   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4147571   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
4147572   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4147573   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4147574   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4147575   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4147576   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4147577   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4147578   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4147579   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4147580   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4147581   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4147582   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4147583   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4147584   +end;
MPRINT(EM_DIAGRAM):   end;
4147585   +else do;
MPRINT(EM_DIAGRAM):   else do;
4147586   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4147587   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4147588   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4147589   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4147590   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4147591   +   end;
MPRINT(EM_DIAGRAM):   end;
4147592   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4147593   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4147594   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4147595   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4147596   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4147597   +   end;
MPRINT(EM_DIAGRAM):   end;
4147598   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4147599   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4147600   +   end;
MPRINT(EM_DIAGRAM):   end;
4147601   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4147602   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4147603   +   end;
MPRINT(EM_DIAGRAM):   end;
4147604   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4147605   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4147606   +   end;
MPRINT(EM_DIAGRAM):   end;
4147607   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4147608   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4147609   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4147610   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4147611   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4147612   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4147613   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4147614   +   end;
MPRINT(EM_DIAGRAM):   end;
4147615   +end;
MPRINT(EM_DIAGRAM):   end;
4147616   +
4147617   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4147618   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4147619   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
4147620   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4147621   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4147622   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4147623   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4147624   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4147625   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4147626   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4147627   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4147628   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4147629   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4147630   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4147631   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4147632   +end;
MPRINT(EM_DIAGRAM):   end;
4147633   +else do;
MPRINT(EM_DIAGRAM):   else do;
4147634   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4147635   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4147636   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4147637   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4147638   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4147639   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4147640   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4147641   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4147642   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4147643   +         end;
MPRINT(EM_DIAGRAM):   end;
4147644   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4147645   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4147646   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4147647   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4147648   +            end;
MPRINT(EM_DIAGRAM):   end;
4147649   +         end;
MPRINT(EM_DIAGRAM):   end;
4147650   +      end;
MPRINT(EM_DIAGRAM):   end;
4147651   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4147652   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4147653   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4147654   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4147655   +         end;
MPRINT(EM_DIAGRAM):   end;
4147656   +      end;
MPRINT(EM_DIAGRAM):   end;
4147657   +   end;
MPRINT(EM_DIAGRAM):   end;
4147658   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4147659   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4147660   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4147661   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4147662   +      end;
MPRINT(EM_DIAGRAM):   end;
4147663   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4147664   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4147665   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4147666   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4147667   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4147668   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4147669   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4147670   +         end;
MPRINT(EM_DIAGRAM):   end;
4147671   +      end;
MPRINT(EM_DIAGRAM):   end;
4147672   +   end;
MPRINT(EM_DIAGRAM):   end;
4147673   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4147674   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4147675   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4147676   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4147677   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4147678   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4147679   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4147680   +   end;
MPRINT(EM_DIAGRAM):   end;
4147681   +end;
MPRINT(EM_DIAGRAM):   end;
4147682   +
4147683   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4147684   +*** Checking missing input Interval
4147685   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4147686   +
4147687   +IF NMISS(
4147688   +   AcceptedCmpTotal ,
4147689   +   Age ,
4147690   +   Frq ,
4147691   +   Income ,
4147692   +   Kidhome ,
4147693   +   Mnt ,
4147694   +   MntFishProducts ,
4147695   +   MntFruits ,
4147696   +   MntGoldProds ,
4147697   +   MntMeatProducts ,
4147698   +   MntSweetProducts ,
4147699   +   MntWines ,
4147700   +   MonthsAsCustomer ,
4147701   +   NumCatalogPurchases ,
4147702   +   NumDealsPurchases ,
4147703   +   NumDistPurchases ,
4147704   +   NumStorePurchases ,
4147705   +   NumWebPurchases ,
4147706   +   NumWebVisitsMonth ,
4147707   +   RFMstat ,
4147708   +   RMntFrq ,
4147709   +   Recency ,
4147710   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
4147711   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4147712   +
4147713   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4147714   +END;
MPRINT(EM_DIAGRAM):   END;
4147715   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4147716   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4147717   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4147718   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4147719   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4147720   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
4147721   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4147722   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4147723   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4147724   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4147725   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4147726   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4147727   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
4147728   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4147729   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4147730   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4147731   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4147732   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
4147733   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4147734   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
4147735   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4147736   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4147737   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
4147738   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4147739   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
4147740   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4147741   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
4147742   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4147743   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
4147744   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4147745   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
4147746   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4147747   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
4147748   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4147749   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
4147750   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4147751   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4147752   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4147753   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4147754   +END;
MPRINT(EM_DIAGRAM):   END;
4147755   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4147756   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4147757   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4147758   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
4147759   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4147760   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4147761   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4147762   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4147763   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4147764   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4147765   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4147766   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4147767   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4147768   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4147769   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4147770   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4147771   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
4147772   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4147773   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4147774   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4147775   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4147776   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4147777   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
4147778   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4147779   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4147780   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
4147781   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4147782   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4147783   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
4147784   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4147785   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4147786   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4147787   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4147788   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
4147789   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4147790   +   ELSE S_NumCatalogPurchases
4147791   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4147792   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
4147793   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4147794   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4147795   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
4147796   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4147797   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4147798   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
4147799   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4147800   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4147801   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
4147802   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4147803   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4147804   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
4147805   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4147806   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4147807   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
4147808   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4147809   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4147810   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4147811   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4147812   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4147813   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4147814   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4147815   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4147816   +END;
MPRINT(EM_DIAGRAM):   END;
4147817   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4147818   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4147819   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4147820   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4147821   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4147822   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4147823   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4147824   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4147825   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4147826   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4147827   +   H1x1_1  =    -1.49223555176068 * S_AcceptedCmpTotal
4147828   +          +    -0.32281831453238 * S_Age  +     0.28120825505194 * S_Frq
4147829   +          +    -0.39842787806973 * S_Income  +     0.36430856665979 *
4147830   +        S_Kidhome  +    -0.25637228568962 * S_Mnt  +     0.24110438184349 *
4147831   +        S_MntFishProducts  +     0.13701085804118 * S_MntFruits
4147832   +          +     0.11223882829002 * S_MntGoldProds  +     -1.6663458930199 *
4147833   +        S_MntMeatProducts  +      0.0702185455839 * S_MntSweetProducts
4147834   +          +    -0.01371828795287 * S_MntWines  +    -0.15983998015164 *
4147835   +        S_MonthsAsCustomer  +    -0.71296831037224 * S_NumCatalogPurchases
4147836   +          +     0.76573417773216 * S_NumDealsPurchases
4147837   +          +     0.22648400529885 * S_NumDistPurchases
4147838   +          +     1.21720286527592 * S_NumStorePurchases
4147839   +          +     0.60948566229097 * S_NumWebPurchases
4147840   +          +    -2.18126452011089 * S_NumWebVisitsMonth
4147841   +          +     0.32447158734618 * S_RFMstat  +     2.09718739448286 *
4147842   +        S_RMntFrq  +     2.00816730203973 * S_Recency
4147843   +          +     0.71721312404607 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.49223555176068 * S_AcceptedCmpTotal + -0.32281831453238 * 
S_Age + 0.28120825505194 * S_Frq + -0.39842787806973 * S_Income + 0.36430856665979 * S_Kidhome 
+ -0.25637228568962 * S_Mnt + 0.24110438184349 * S_MntFishProducts + 0.13701085804118 * 
S_MntFruits + 0.11223882829002 * S_MntGoldProds + -1.6663458930199 * S_MntMeatProducts + 
0.0702185455839 * S_MntSweetProducts + -0.01371828795287 * S_MntWines + -0.15983998015164 * 
S_MonthsAsCustomer + -0.71296831037224 * S_NumCatalogPurchases + 0.76573417773216 * 
S_NumDealsPurchases + 0.22648400529885 * S_NumDistPurchases + 1.21720286527592 * 
S_NumStorePurchases + 0.60948566229097 * S_NumWebPurchases + -2.18126452011089 * 
S_NumWebVisitsMonth + 0.32447158734618 * S_RFMstat + 2.09718739448286 * S_RMntFrq + 
2.00816730203973 * S_Recency + 0.71721312404607 * S_Teenhome ;
4147844   +   H1x1_2  =    -3.95102659899455 * S_AcceptedCmpTotal
4147845   +          +    -0.08322758955502 * S_Age  +     0.48219484564503 * S_Frq
4147846   +          +    -0.47312016087921 * S_Income  +    -0.28936610485406 *
4147847   +        S_Kidhome  +    -1.88029814405677 * S_Mnt  +     1.82010433926021 *
4147848   +        S_MntFishProducts  +     0.24350362722041 * S_MntFruits
4147849   +          +     -0.0982980353358 * S_MntGoldProds  +     -8.1095841881459 *
4147850   +        S_MntMeatProducts  +    -0.08364558784797 * S_MntSweetProducts
4147851   +          +     2.19205303691707 * S_MntWines  +    -0.00045011863954 *
4147852   +        S_MonthsAsCustomer  +    -1.63167878295586 * S_NumCatalogPurchases
4147853   +          +    -1.52828428070828 * S_NumDealsPurchases
4147854   +          +    -0.01775178145113 * S_NumDistPurchases
4147855   +          +     1.11531198663491 * S_NumStorePurchases
4147856   +          +     1.79501098452904 * S_NumWebPurchases
4147857   +          +     -0.7392686013605 * S_NumWebVisitsMonth
4147858   +          +    -1.44559350209967 * S_RFMstat  +     1.21221378487873 *
4147859   +        S_RMntFrq  +     0.68917175969495 * S_Recency
4147860   +          +      0.3873784466888 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -3.95102659899455 * S_AcceptedCmpTotal + -0.08322758955502 * 
S_Age + 0.48219484564503 * S_Frq + -0.47312016087921 * S_Income + -0.28936610485406 * 
S_Kidhome + -1.88029814405677 * S_Mnt + 1.82010433926021 * S_MntFishProducts + 
0.24350362722041 * S_MntFruits + -0.0982980353358 * S_MntGoldProds + -8.1095841881459 * 
S_MntMeatProducts + -0.08364558784797 * S_MntSweetProducts + 2.19205303691707 * S_MntWines + 
-0.00045011863954 * S_MonthsAsCustomer + -1.63167878295586 * S_NumCatalogPurchases + 
-1.52828428070828 * S_NumDealsPurchases + -0.01775178145113 * S_NumDistPurchases + 
1.11531198663491 * S_NumStorePurchases + 1.79501098452904 * S_NumWebPurchases + 
-0.7392686013605 * S_NumWebVisitsMonth + -1.44559350209967 * S_RFMstat + 1.21221378487873 * 
S_RMntFrq + 0.68917175969495 * S_Recency + 0.3873784466888 * S_Teenhome ;
4147861   +   H1x1_1  = H1x1_1  +    -0.51533233697482 * AcceptedCmp10
4147862   +          +    -0.34752733433815 * AcceptedCmp20  +     0.22125035216356 *
4147863   +        AcceptedCmp30  +     0.05379844837275 * AcceptedCmp40
4147864   +          +    -0.20445562216782 * AcceptedCmp50  +    -0.30276475879877 *
4147865   +        Complain0  +     0.06619165480602 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.51533233697482 * AcceptedCmp10 + -0.34752733433815 
* AcceptedCmp20 + 0.22125035216356 * AcceptedCmp30 + 0.05379844837275 * AcceptedCmp40 + 
-0.20445562216782 * AcceptedCmp50 + -0.30276475879877 * Complain0 + 0.06619165480602 * 
HigherEducationBinary0 ;
4147866   +   H1x1_2  = H1x1_2  +     4.56470093348771 * AcceptedCmp10
4147867   +          +    -2.57910461209778 * AcceptedCmp20  +     -2.5693819769014 *
4147868   +        AcceptedCmp30  +    -1.94278577333227 * AcceptedCmp40
4147869   +          +     2.05860438228037 * AcceptedCmp50  +     0.25089930568051 *
4147870   +        Complain0  +      0.2603214054608 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 4.56470093348771 * AcceptedCmp10 + -2.57910461209778 * 
AcceptedCmp20 + -2.5693819769014 * AcceptedCmp30 + -1.94278577333227 * AcceptedCmp40 + 
2.05860438228037 * AcceptedCmp50 + 0.25089930568051 * Complain0 + 0.2603214054608 * 
HigherEducationBinary0 ;
4147871   +   H1x1_1  = H1x1_1  +    -0.49828378489244 * Education2n_Cycle
4147872   +          +     0.39089624737534 * EducationBasic  +    -0.48226710339977 *
4147873   +        EducationGraduation  +    -0.06304916771632 * EducationMaster
4147874   +          +    -1.56926331102732 * Marital_StatusDivorced
4147875   +          +     2.38562782588323 * Marital_StatusMarried
4147876   +          +    -1.91012008029228 * Marital_StatusSingle
4147877   +          +     2.35299228753934 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.49828378489244 * Education2n_Cycle + 
0.39089624737534 * EducationBasic + -0.48226710339977 * EducationGraduation + 
-0.06304916771632 * EducationMaster + -1.56926331102732 * Marital_StatusDivorced + 
2.38562782588323 * Marital_StatusMarried + -1.91012008029228 * Marital_StatusSingle + 
2.35299228753934 * Marital_StatusTogether ;
4147878   +   H1x1_2  = H1x1_2  +    -0.32482988110182 * Education2n_Cycle
4147879   +          +    -0.31705264382373 * EducationBasic  +    -0.14073222836204 *
4147880   +        EducationGraduation  +    -0.14552128560395 * EducationMaster
4147881   +          +     0.39329538853368 * Marital_StatusDivorced
4147882   +          +       0.055543492668 * Marital_StatusMarried
4147883   +          +    -0.36260663573441 * Marital_StatusSingle
4147884   +          +     0.16563783024817 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.32482988110182 * Education2n_Cycle + 
-0.31705264382373 * EducationBasic + -0.14073222836204 * EducationGraduation + 
-0.14552128560395 * EducationMaster + 0.39329538853368 * Marital_StatusDivorced + 
0.055543492668 * Marital_StatusMarried + -0.36260663573441 * Marital_StatusSingle + 
0.16563783024817 * Marital_StatusTogether ;
4147885   +   H1x1_1  =     0.82901515254061 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.82901515254061 + H1x1_1 ;
4147886   +   H1x1_2  =     -1.6113683532078 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.6113683532078 + H1x1_2 ;
4147887   +   H1x1_3  = 0;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0;
4147888   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
4147889   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4147890   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
4147891   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
4147892   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
4147893   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
4147894   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
4147895   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
4147896   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
4147897   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
4147898   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
4147899   +END;
MPRINT(EM_DIAGRAM):   END;
4147900   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4147901   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4147902   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4147903   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
4147904   +END;
MPRINT(EM_DIAGRAM):   END;
4147905   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4147906   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
4147907   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4147908   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4147909   +   H1x2_1  =     -1.1749963769098 * S_AcceptedCmpTotal
4147910   +          +      0.0835452152484 * S_Age  +     0.29627839234992 * S_Frq
4147911   +          +    -0.11493797334082 * S_Income  +    -1.11510356366657 *
4147912   +        S_Kidhome  +     0.18185063757674 * S_Mnt  +    -0.17631127507692 *
4147913   +        S_MntFishProducts  +     1.24365107847098 * S_MntFruits
4147914   +          +     0.16504711681039 * S_MntGoldProds  +     0.99592906524599 *
4147915   +        S_MntMeatProducts  +     0.07387543627707 * S_MntSweetProducts
4147916   +          +    -0.00693664828192 * S_MntWines  +    -0.14413765189074 *
4147917   +        S_MonthsAsCustomer  +    -0.36632511301344 * S_NumCatalogPurchases
4147918   +          +    -0.41717905931734 * S_NumDealsPurchases
4147919   +          +    -0.48750443671176 * S_NumDistPurchases
4147920   +          +      1.9775770151507 * S_NumStorePurchases
4147921   +          +    -0.43534422425416 * S_NumWebPurchases
4147922   +          +    -1.48049451059329 * S_NumWebVisitsMonth
4147923   +          +     1.55056718888347 * S_RFMstat  +    -1.96774244937803 *
4147924   +        S_RMntFrq  +     -1.0977291490167 * S_Recency
4147925   +          +    -1.73756201871547 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.1749963769098 * S_AcceptedCmpTotal + 0.0835452152484 * S_Age 
+ 0.29627839234992 * S_Frq + -0.11493797334082 * S_Income + -1.11510356366657 * S_Kidhome + 
0.18185063757674 * S_Mnt + -0.17631127507692 * S_MntFishProducts + 1.24365107847098 * 
S_MntFruits + 0.16504711681039 * S_MntGoldProds + 0.99592906524599 * S_MntMeatProducts + 
0.07387543627707 * S_MntSweetProducts + -0.00693664828192 * S_MntWines + -0.14413765189074 * 
S_MonthsAsCustomer + -0.36632511301344 * S_NumCatalogPurchases + -0.41717905931734 * 
S_NumDealsPurchases + -0.48750443671176 * S_NumDistPurchases + 1.9775770151507 * 
S_NumStorePurchases + -0.43534422425416 * S_NumWebPurchases + -1.48049451059329 * 
S_NumWebVisitsMonth + 1.55056718888347 * S_RFMstat + -1.96774244937803 * S_RMntFrq + 
-1.0977291490167 * S_Recency + -1.73756201871547 * S_Teenhome ;
4147926   +   H1x2_2  =     0.87479703138918 * S_AcceptedCmpTotal
4147927   +          +    -0.61917505429247 * S_Age  +     0.18385580137989 * S_Frq
4147928   +          +     0.30709491132909 * S_Income  +      1.6244568354812 *
4147929   +        S_Kidhome  +     0.77673205123801 * S_Mnt  +    -0.00950889578201 *
4147930   +        S_MntFishProducts  +    -0.47007254592819 * S_MntFruits
4147931   +          +      0.6454406759241 * S_MntGoldProds  +     0.78795218230384 *
4147932   +        S_MntMeatProducts  +    -1.18230648640376 * S_MntSweetProducts
4147933   +          +     1.41552316954503 * S_MntWines  +    -0.46565264346633 *
4147934   +        S_MonthsAsCustomer  +     0.48368171409283 * S_NumCatalogPurchases
4147935   +          +     0.76267091632012 * S_NumDealsPurchases
4147936   +          +     1.55118513069849 * S_NumDistPurchases
4147937   +          +       1.649962776028 * S_NumStorePurchases
4147938   +          +    -0.27453335733875 * S_NumWebPurchases
4147939   +          +     0.26599210649756 * S_NumWebVisitsMonth
4147940   +          +     0.00143802909271 * S_RFMstat  +    -0.62161550917558 *
4147941   +        S_RMntFrq  +    -0.60215803586133 * S_Recency
4147942   +          +     0.22509643762583 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.87479703138918 * S_AcceptedCmpTotal + -0.61917505429247 * 
S_Age + 0.18385580137989 * S_Frq + 0.30709491132909 * S_Income + 1.6244568354812 * S_Kidhome + 
0.77673205123801 * S_Mnt + -0.00950889578201 * S_MntFishProducts + -0.47007254592819 * 
S_MntFruits + 0.6454406759241 * S_MntGoldProds + 0.78795218230384 * S_MntMeatProducts + 
-1.18230648640376 * S_MntSweetProducts + 1.41552316954503 * S_MntWines + -0.46565264346633 * 
S_MonthsAsCustomer + 0.48368171409283 * S_NumCatalogPurchases + 0.76267091632012 * 
S_NumDealsPurchases + 1.55118513069849 * S_NumDistPurchases + 1.649962776028 * 
S_NumStorePurchases + -0.27453335733875 * S_NumWebPurchases + 0.26599210649756 * 
S_NumWebVisitsMonth + 0.00143802909271 * S_RFMstat + -0.62161550917558 * S_RMntFrq + 
-0.60215803586133 * S_Recency + 0.22509643762583 * S_Teenhome ;
4147943   +   H1x2_1  = H1x2_1  +    -0.22417594551449 * AcceptedCmp10
4147944   +          +    -0.55200708632393 * AcceptedCmp20  +     1.04226929662396 *
4147945   +        AcceptedCmp30  +    -0.43983724759528 * AcceptedCmp40
4147946   +          +    -0.97319667842772 * AcceptedCmp50  +     2.14592283316473 *
4147947   +        Complain0  +     0.00148996042832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.22417594551449 * AcceptedCmp10 + -0.55200708632393 
* AcceptedCmp20 + 1.04226929662396 * AcceptedCmp30 + -0.43983724759528 * AcceptedCmp40 + 
-0.97319667842772 * AcceptedCmp50 + 2.14592283316473 * Complain0 + 0.00148996042832 * 
HigherEducationBinary0 ;
4147948   +   H1x2_2  = H1x2_2  +     1.02054806337451 * AcceptedCmp10
4147949   +          +      2.0527957252179 * AcceptedCmp20  +     0.15243342547701 *
4147950   +        AcceptedCmp30  +    -2.55108921567655 * AcceptedCmp40
4147951   +          +    -0.66084381908537 * AcceptedCmp50  +    -0.15574677370344 *
4147952   +        Complain0  +    -0.89833811964409 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.02054806337451 * AcceptedCmp10 + 2.0527957252179 * 
AcceptedCmp20 + 0.15243342547701 * AcceptedCmp30 + -2.55108921567655 * AcceptedCmp40 + 
-0.66084381908537 * AcceptedCmp50 + -0.15574677370344 * Complain0 + -0.89833811964409 * 
HigherEducationBinary0 ;
4147953   +   H1x2_1  = H1x2_1  +     0.47883438771897 * Education2n_Cycle
4147954   +          +     1.28689916550347 * EducationBasic  +    -1.05405263417007 *
4147955   +        EducationGraduation  +     0.24617525366101 * EducationMaster
4147956   +          +    -1.84502099308633 * Marital_StatusDivorced
4147957   +          +     0.16524535969204 * Marital_StatusMarried
4147958   +          +     0.01375012857393 * Marital_StatusSingle
4147959   +          +     0.33752759564982 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.47883438771897 * Education2n_Cycle + 
1.28689916550347 * EducationBasic + -1.05405263417007 * EducationGraduation + 0.24617525366101 
* EducationMaster + -1.84502099308633 * Marital_StatusDivorced + 0.16524535969204 * 
Marital_StatusMarried + 0.01375012857393 * Marital_StatusSingle + 0.33752759564982 * 
Marital_StatusTogether ;
4147960   +   H1x2_2  = H1x2_2  +     -0.4088130246632 * Education2n_Cycle
4147961   +          +    -0.51383473075458 * EducationBasic  +     0.81399641406825 *
4147962   +        EducationGraduation  +      0.6427794380992 * EducationMaster
4147963   +          +     0.18210930140238 * Marital_StatusDivorced
4147964   +          +    -1.49615662968181 * Marital_StatusMarried
4147965   +          +     1.61043484549536 * Marital_StatusSingle
4147966   +          +    -1.22593755313209 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.4088130246632 * Education2n_Cycle + 
-0.51383473075458 * EducationBasic + 0.81399641406825 * EducationGraduation + 0.6427794380992 
* EducationMaster + 0.18210930140238 * Marital_StatusDivorced + -1.49615662968181 * 
Marital_StatusMarried + 1.61043484549536 * Marital_StatusSingle + -1.22593755313209 * 
Marital_StatusTogether ;
4147967   +   H1x2_1  =    -1.87516498734281 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.87516498734281 + H1x2_1 ;
4147968   +   H1x2_2  =     -1.2865444436051 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.2865444436051 + H1x2_2 ;
4147969   +   H1x2_3  = 0;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0;
4147970   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 );
4147971   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4147972   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
4147973   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
4147974   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
4147975   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
4147976   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
4147977   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
4147978   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
4147979   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
4147980   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
4147981   +END;
MPRINT(EM_DIAGRAM):   END;
4147982   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4147983   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
4147984   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
4147985   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
4147986   +END;
MPRINT(EM_DIAGRAM):   END;
4147987   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4147988   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
4147989   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4147990   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4147991   +   H2x1_1  =     1.23576217175305 * H1x1_1  +     4.19315123860009 * H1x1_2
4147992   +          +    -3.85498900364115 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.23576217175305 * H1x1_1 + 4.19315123860009 * H1x1_2 + 
-3.85498900364115 * H1x1_3 ;
4147993   +   H2x1_2  =        0.24209158888 * H1x1_1  +     0.59735252655183 * H1x1_2
4147994   +          +     1.27545750114528 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0.24209158888 * H1x1_1 + 0.59735252655183 * H1x1_2 + 
1.27545750114528 * H1x1_3 ;
4147995   +   H2x1_3  =     1.36411346566831 * H1x1_1  +     4.19709046572946 * H1x1_2
4147996   +          +    -4.50940237896172 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.36411346566831 * H1x1_1 + 4.19709046572946 * H1x1_2 + 
-4.50940237896172 * H1x1_3 ;
4147997   +   H2x1_1  = H2x1_1  +     0.65417285199474 * H1x2_1
4147998   +          +      2.5072311354855 * H1x2_2  +     -2.0438449895367 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.65417285199474 * H1x2_1 + 2.5072311354855 * H1x2_2 + 
-2.0438449895367 * H1x2_3 ;
4147999   +   H2x1_2  = H2x1_2  +      0.4352357645315 * H1x2_1
4148000   +          +     -0.9643467516424 * H1x2_2  +     0.46452403975724 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.4352357645315 * H1x2_1 + -0.9643467516424 * H1x2_2 + 
0.46452403975724 * H1x2_3 ;
4148001   +   H2x1_3  = H2x1_3  +     0.13671643242806 * H1x2_1
4148002   +          +     1.59797252596846 * H1x2_2  +    -2.67821815632058 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.13671643242806 * H1x2_1 + 1.59797252596846 * H1x2_2 
+ -2.67821815632058 * H1x2_3 ;
4148003   +   H2x1_1  =     0.15805888658617 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.15805888658617 + H2x1_1 ;
4148004   +   H2x1_2  =     1.42566993600015 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.42566993600015 + H2x1_2 ;
4148005   +   H2x1_3  =     1.00076706282181 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.00076706282181 + H2x1_3 ;
4148006   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4148007   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4148008   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
4148009   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
4148010   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
4148011   +END;
MPRINT(EM_DIAGRAM):   END;
4148012   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4148013   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
4148014   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
4148015   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
4148016   +END;
MPRINT(EM_DIAGRAM):   END;
4148017   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4148018   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4148019   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4148020   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4148021   +   P_DepVar1  =    -6.91101516234847 * H2x1_1  +     1.76281132920385 * H2x1_2
4148022   +          +     -7.2624751055034 * H2x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.91101516234847 * H2x1_1 + 1.76281132920385 * H2x1_2 + 
-7.2624751055034 * H2x1_3 ;
4148023   +   P_DepVar1  =     -0.0724356806648 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.0724356806648 + P_DepVar1 ;
4148024   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4148025   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4148026   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4148027   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4148028   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4148029   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4148030   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4148031   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4148032   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4148033   +END;
MPRINT(EM_DIAGRAM):   END;
4148034   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4148035   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4148036   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4148037   +END;
MPRINT(EM_DIAGRAM):   END;
4148038   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4148039   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4148040   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4148041   +END;
MPRINT(EM_DIAGRAM):   END;
4148042   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4148043   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4148044   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4148045   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4148046   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4148047   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4148048   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4148049   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4148050   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4148051   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4148052   +END;
MPRINT(EM_DIAGRAM):   END;
4148053   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4148054   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4148055   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4148056   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4148057    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
4148058    quit;
4148059    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4148060    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4148061    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4148062    retain ID 2 Node "AutoNeural8";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural8";
4148063    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4148064    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3877 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3877 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

4148065    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4148066    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4148067    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3877 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3877 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4148068    proc sort data=EMWS8.AutoNeural8_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural8_variableset out=_temp2(keep=NAME 
CREATOR);
4148069    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4148070    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL8_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4148071    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4148072    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4148073    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4148074    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4148075    proc contents data=EMWS8.AutoNeural8_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural8_train out=_meta(keep=NAME) noprint;
4148076    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 62 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

4148077    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4148078    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4148079    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 62 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 62 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4148080    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4148081    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4148082    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4148083    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 62 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 62 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4148084    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4148085    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4148085  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 2103 rows and 5 columns.

4148086    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4148087    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
4148088    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 2103 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 2103 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4148089    filename _pref
4148089  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
4148090    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4148091    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
4148092   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4148093   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
4148094   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4148095   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
4148096   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
4148097   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4148098    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
4148099    quit;
4148100    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4148101    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4148102    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4148103    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
4148104    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4148105    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4148106    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4148107    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4148108    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4148109    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
4148110    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4148111    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4148112    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4148113    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4148114    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4148115    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4148116    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
4148117    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

4148118    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4148119    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4148120    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4148121    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4148122    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4148123    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4148124    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4148125    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4148126    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4148126  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

4148127    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4148128    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
4148129    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 2107 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4148130    filename _pref
4148130  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
4148131    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4148132    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
4148133   +
4148134   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
4148135   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
4148135  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
4148136   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
4148137   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
4148138   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
4148139   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
4148140   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4148141    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
4148142    quit;
4148143    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4148144    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4148145    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4148146    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
4148147    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4148148    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4148149    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4148150    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4148151    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4148152    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
4148153    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4148154    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4148155    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4148156    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4148157    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4148158    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4148159    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
4148160    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4148161    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4148162    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4148163    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4148164    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4148165    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4148166    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4148167    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4148168    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4148169    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4148169  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

4148170    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4148171    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
4148172    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 2146 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4148173    filename _pref
4148173  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
4148174    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4148175    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
4148176   +
4148177   +
4148178   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
4148179   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
4148180   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
4148181   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
4148182   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
4148183   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4148184   +
4148185   +
4148186   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
4148187   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
4148188   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
4148189   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
4148190   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
4148191   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4148192   +
4148193   +
4148194   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
4148195   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
4148196   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
4148197   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
4148198   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
4148199   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4148200   +
4148201   +
4148202   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
4148203   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
4148204   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
4148205   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
4148206   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
4148207   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4148208   +
4148209   +
4148210   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
4148211   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
4148212   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
4148213   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
4148214   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
4148215   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4148216   +
4148217   +
4148218   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
4148219   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
4148220   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
4148221   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
4148222   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
4148223   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4148224   +
4148225   +
4148226   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
4148227   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
4148228   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
4148229   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
4148230   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
4148231   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4148232   +
4148233   +
4148234   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
4148235   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
4148236   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
4148237   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
4148238   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
4148239   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4148240   +if
4148241   +_FILTERNORM1 not in ( '.')
4148242   + and
4148243   +_FILTERNORM2 not in ( '.')
4148244   + and
4148245   +_FILTERNORM3 not in ( '.')
4148246   + and
4148247   +_FILTERNORM4 not in ( '.')
4148248   + and
4148249   +_FILTERNORM5 not in ( '.')
4148250   + and
4148251   +_FILTERNORM6 not in ( '.')
4148252   + and
4148253   +_FILTERNORM7 not in ( ' ')
4148254   + and
4148255   +_FILTERNORM8 not in ( ' ')
4148256   +and
4148257   +( Dt_Customer ne .)
4148258   +and ( Income ne . and (Income<=107000))
4148259   +and ( Kidhome ne .)
4148260   +and ( MntFishProducts ne .)
4148261   +and ( MntFruits ne .)
4148262   +and ( MntGoldProds ne .)
4148263   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
4148264   +and ( MntSweetProducts ne .)
4148265   +and ( MntWines ne .)
4148266   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
4148267   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
4148268   +and ( NumStorePurchases ne .)
4148269   +and ( NumWebPurchases ne .)
4148270   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
4148271   +and ( Recency ne .)
4148272   +and ( Teenhome ne .)
4148273   +and ( Year_Birth ne .)
4148274   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
4148275   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
4148276   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
4148277   +end;
MPRINT(EM_DIAGRAM):   end;
4148278   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
4148279   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4148280    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
4148281    quit;
4148282    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4148283    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4148284    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4148285    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
4148286    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4148287    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4148288    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4148289    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4148290    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4148291    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
4148292    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4148293    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4148294    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4148295    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4148296    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4148297    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4148298    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
4148299    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

4148300    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4148301    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4148302    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4148303    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4148304    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4148305    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4148306    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4148307    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4148308    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4148308  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

4148309    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4148310    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
4148311    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 2212 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4148312    %macro varDept(fcmpdata=,id=);
4148313    %global nobs&id scoreFlag&id;
4148314    %let scoreFlag&id = 0;
4148315    %if &id=1 or ^&fcmpStart %then %do;
4148316    proc sort data=&fcmpdata out=_temp&id nodupkey;
4148317    by NAME;
4148318    where id=&id and LHS in( %let j=1;
4148319    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
4148320    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
4148321    "&var" %let j = %eval(&j+1);
4148322    %end;
4148323    );
4148324    run;
4148325    %let dsid = %sysfunc(open(_temp&id));
4148326    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4148327    %let dsid = %sysfunc(close(&dsid));
4148328    %if &&nobs&id %then %do;
4148329    %let scoreFlag&id = 1;
4148330    %let fcmpStart = 1;
4148331    %end;
4148332    %else %let fcmpStart = 0;
4148333    %end;
4148334    %else %do;
4148335    proc sort data=&fcmpdata out=_tempid;
4148336    where id=&id;
4148337    by LHS;
4148338    run;
4148339    %let dsid = %sysfunc(open(_tempid));
4148340    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4148341    %let dsid = %sysfunc(close(&dsid));
4148342    %if ^&&nobs&id %then %do;
4148343    proc datasets lib=work nolist;
4148344    delete _tempid;
4148345    run;
4148346    quit;
4148347    %end;
4148348    %else %do;
4148349    data _tempAll;
4148350    set %let j=%eval(&id-1);
4148351    %do x=1 %to &j;
4148352    %if &&nobs&x %then %do;
4148353    _temp&x %end;
4148354    %end;
4148355    ;
4148356    run;
4148357    proc sql;
4148358    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
4148358  ! work._tempid p2 where p.name=p2.lhs;
4148359    quit;
4148360    data _temp&id;
4148361    set _temp&id;
4148362    where LHS ne '' and NAME ne '' and Node ne '';
4148363    run;
4148364    proc datasets lib=work nolist;
4148365    delete _tempAll;
4148366    run;
4148367    %let dsid = %sysfunc(open(_temp&id));
4148368    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4148369    %let dsid = %sysfunc(close(&dsid));
4148370    %if ^&&nobs&id %then %do;
4148371    proc datasets lib=work nolist;
4148372    delete _temp&id;
4148373    run;
4148374    quit;
4148375    %end;
4148376    %else %do;
4148377    %let scoreFlag&id = 1;
4148378    data _temp&id;
4148379    set _temp&id;
4148380    where LHS ne NAME and node ne '';
4148381    run;
4148382    %let dsid = %sysfunc(open(_temp&id));
4148383    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4148384    %let dsid = %sysfunc(close(&dsid));
4148385    %if ^&&nobs&id %then %do;
4148386    proc datasets lib=work nolist;
4148387    delete _temp&id;
4148388    run;
4148389    quit;
4148390    %end;
4148391    %else %do;
4148392    proc sort data=_temp&id nodupkey;
4148393    by LHS NAME;
4148394    run;
4148395    %end;
4148396    %end;
4148397    %end;
4148398    %end;
4148399    %mend varDept;
4148400    %macro optCode(outdata=fcmpdata);
4148401    %global fcmpStart;
4148402    %let fcmpStart = 0;
4148403    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
4148404    %let NumNodes=9;
4148405    %do k=1 %to &NumNodes;
4148406    %vardept(fcmpdata=&outdata, id=&k);
4148407    %end;
4148408    %mend optCode;
4148409    %optcode(outData=EMWS8.Ensmbl38_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 161 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 118 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 43 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 43 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 43 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 43 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 47 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 43 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 86 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

4148410    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
4148411    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
4148412    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
4148413    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4148414    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
4148415    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
4148416    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
4148417    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4148418    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4148419    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
4148419  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

4148420    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

4148421    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
4148422    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
4148423    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4148424    filename _pref
4148424  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMPUBLISHSCORE.sas";
4148425    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4148426    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMPUBLISHSCORE.sas.
4148427   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4148428   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4148429   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4148430   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4148431   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4148432   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4148433   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4148434   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4148435   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4148436   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4148437   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4148438   +LENGTH _WARN_ $4
4148439   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
4148440   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4148441   +
4148442   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4148443   +
4148444   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4148445   +
4148446   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4148447   +
4148448   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4148449   +
4148450   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4148451   +
4148452   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4148453   +
4148454   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4148455   +
4148456   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4148457   +
4148458   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4148459   +
4148460   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4148461   +
4148462   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4148463   +
4148464   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4148465   +
4148466   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4148467   +
4148468   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4148469   +
4148470   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4148471   +
4148472   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4148473   +
4148474   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4148475   +
4148476   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4148477   +
4148478   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4148479   +
4148480   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4148481   +
4148482   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4148483   +
4148484   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4148485   +
4148486   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4148487   +
4148488   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4148489   +
4148490   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4148491   +
4148492   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4148493   +
4148494   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4148495   +
4148496   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4148497   +
4148498   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4148499   +
4148500   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4148501   +
4148502   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4148503   +
4148504   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4148505   +
4148506   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4148507   +
4148508   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4148509   +
4148510   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4148511   +
4148512   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4148513   +
4148514   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4148515   +
4148516   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4148517   +
4148518   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4148519   +
4148520   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
4148521   +
4148522   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
4148523   +
4148524   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
4148525   +
4148526   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
4148527   +
4148528   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
4148529   +
4148530   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
4148531   +
4148532   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
4148533   +
4148534   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
4148535   +
4148536   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
4148537   +
4148538   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
4148539   +
4148540   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
4148541   +
4148542   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
4148543   +
4148544   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
4148545   +
4148546   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
4148547   +
4148548   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
4148549   +
4148550   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
4148551   +
4148552   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
4148553   +
4148554   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
4148555   +
4148556   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
4148557   +
4148558   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
4148559   +
4148560   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
4148561   +
4148562   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
4148563   +
4148564   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
4148565   +
4148566   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
4148567   +
4148568   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
4148569   +
4148570   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
4148571   +
4148572   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
4148573   +
4148574   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
4148575   +
4148576   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4148577   +
4148578   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4148579   +
4148580   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4148581   +
4148582   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4148583   +
4148584   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4148585   +
4148586   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4148587   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4148588   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4148589   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4148590   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4148591   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4148592   +end;
MPRINT(EM_DIAGRAM):   end;
4148593   +else do;
MPRINT(EM_DIAGRAM):   else do;
4148594   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4148595   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4148596   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4148597   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4148598   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4148599   +   end;
MPRINT(EM_DIAGRAM):   end;
4148600   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4148601   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4148602   +   end;
MPRINT(EM_DIAGRAM):   end;
4148603   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4148604   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4148605   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4148606   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4148607   +   end;
MPRINT(EM_DIAGRAM):   end;
4148608   +end;
MPRINT(EM_DIAGRAM):   end;
4148609   +
4148610   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4148611   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4148612   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4148613   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4148614   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4148615   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4148616   +end;
MPRINT(EM_DIAGRAM):   end;
4148617   +else do;
MPRINT(EM_DIAGRAM):   else do;
4148618   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4148619   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4148620   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4148621   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4148622   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4148623   +   end;
MPRINT(EM_DIAGRAM):   end;
4148624   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4148625   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4148626   +   end;
MPRINT(EM_DIAGRAM):   end;
4148627   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4148628   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4148629   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4148630   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4148631   +   end;
MPRINT(EM_DIAGRAM):   end;
4148632   +end;
MPRINT(EM_DIAGRAM):   end;
4148633   +
4148634   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4148635   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4148636   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4148637   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4148638   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4148639   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4148640   +end;
MPRINT(EM_DIAGRAM):   end;
4148641   +else do;
MPRINT(EM_DIAGRAM):   else do;
4148642   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4148643   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4148644   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4148645   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4148646   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4148647   +   end;
MPRINT(EM_DIAGRAM):   end;
4148648   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4148649   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4148650   +   end;
MPRINT(EM_DIAGRAM):   end;
4148651   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4148652   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4148653   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4148654   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4148655   +   end;
MPRINT(EM_DIAGRAM):   end;
4148656   +end;
MPRINT(EM_DIAGRAM):   end;
4148657   +
4148658   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4148659   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4148660   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4148661   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4148662   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4148663   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4148664   +end;
MPRINT(EM_DIAGRAM):   end;
4148665   +else do;
MPRINT(EM_DIAGRAM):   else do;
4148666   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4148667   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4148668   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4148669   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4148670   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4148671   +   end;
MPRINT(EM_DIAGRAM):   end;
4148672   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4148673   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4148674   +   end;
MPRINT(EM_DIAGRAM):   end;
4148675   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4148676   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4148677   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4148678   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4148679   +   end;
MPRINT(EM_DIAGRAM):   end;
4148680   +end;
MPRINT(EM_DIAGRAM):   end;
4148681   +
4148682   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4148683   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4148684   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4148685   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4148686   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4148687   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4148688   +end;
MPRINT(EM_DIAGRAM):   end;
4148689   +else do;
MPRINT(EM_DIAGRAM):   else do;
4148690   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4148691   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4148692   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4148693   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4148694   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4148695   +   end;
MPRINT(EM_DIAGRAM):   end;
4148696   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4148697   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4148698   +   end;
MPRINT(EM_DIAGRAM):   end;
4148699   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4148700   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4148701   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4148702   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4148703   +   end;
MPRINT(EM_DIAGRAM):   end;
4148704   +end;
MPRINT(EM_DIAGRAM):   end;
4148705   +
4148706   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4148707   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4148708   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4148709   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4148710   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4148711   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4148712   +end;
MPRINT(EM_DIAGRAM):   end;
4148713   +else do;
MPRINT(EM_DIAGRAM):   else do;
4148714   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4148715   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4148716   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4148717   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4148718   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4148719   +   end;
MPRINT(EM_DIAGRAM):   end;
4148720   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4148721   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4148722   +   end;
MPRINT(EM_DIAGRAM):   end;
4148723   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4148724   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4148725   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4148726   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4148727   +   end;
MPRINT(EM_DIAGRAM):   end;
4148728   +end;
MPRINT(EM_DIAGRAM):   end;
4148729   +
4148730   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4148731   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4148732   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4148733   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4148734   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4148735   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4148736   +end;
MPRINT(EM_DIAGRAM):   end;
4148737   +else do;
MPRINT(EM_DIAGRAM):   else do;
4148738   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4148739   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4148740   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4148741   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4148742   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4148743   +   end;
MPRINT(EM_DIAGRAM):   end;
4148744   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4148745   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4148746   +   end;
MPRINT(EM_DIAGRAM):   end;
4148747   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4148748   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4148749   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4148750   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4148751   +   end;
MPRINT(EM_DIAGRAM):   end;
4148752   +end;
MPRINT(EM_DIAGRAM):   end;
4148753   +
4148754   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4148755   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
4148756   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4148757   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4148758   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4148759   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4148760   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4148761   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4148762   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4148763   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4148764   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4148765   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4148766   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4148767   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4148768   +end;
MPRINT(EM_DIAGRAM):   end;
4148769   +else do;
MPRINT(EM_DIAGRAM):   else do;
4148770   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4148771   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4148772   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4148773   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4148774   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4148775   +   end;
MPRINT(EM_DIAGRAM):   end;
4148776   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4148777   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4148778   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4148779   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4148780   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4148781   +   end;
MPRINT(EM_DIAGRAM):   end;
4148782   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4148783   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4148784   +   end;
MPRINT(EM_DIAGRAM):   end;
4148785   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4148786   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4148787   +   end;
MPRINT(EM_DIAGRAM):   end;
4148788   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4148789   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4148790   +   end;
MPRINT(EM_DIAGRAM):   end;
4148791   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4148792   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4148793   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4148794   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4148795   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4148796   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4148797   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4148798   +   end;
MPRINT(EM_DIAGRAM):   end;
4148799   +end;
MPRINT(EM_DIAGRAM):   end;
4148800   +
4148801   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4148802   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4148803   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
4148804   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4148805   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4148806   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4148807   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4148808   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4148809   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4148810   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4148811   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4148812   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4148813   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4148814   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4148815   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4148816   +end;
MPRINT(EM_DIAGRAM):   end;
4148817   +else do;
MPRINT(EM_DIAGRAM):   else do;
4148818   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4148819   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4148820   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4148821   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4148822   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4148823   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4148824   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4148825   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4148826   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4148827   +         end;
MPRINT(EM_DIAGRAM):   end;
4148828   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4148829   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4148830   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4148831   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4148832   +            end;
MPRINT(EM_DIAGRAM):   end;
4148833   +         end;
MPRINT(EM_DIAGRAM):   end;
4148834   +      end;
MPRINT(EM_DIAGRAM):   end;
4148835   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4148836   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4148837   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4148838   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4148839   +         end;
MPRINT(EM_DIAGRAM):   end;
4148840   +      end;
MPRINT(EM_DIAGRAM):   end;
4148841   +   end;
MPRINT(EM_DIAGRAM):   end;
4148842   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4148843   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4148844   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4148845   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4148846   +      end;
MPRINT(EM_DIAGRAM):   end;
4148847   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4148848   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4148849   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4148850   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4148851   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4148852   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4148853   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4148854   +         end;
MPRINT(EM_DIAGRAM):   end;
4148855   +      end;
MPRINT(EM_DIAGRAM):   end;
4148856   +   end;
MPRINT(EM_DIAGRAM):   end;
4148857   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4148858   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4148859   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4148860   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4148861   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4148862   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4148863   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4148864   +   end;
MPRINT(EM_DIAGRAM):   end;
4148865   +end;
MPRINT(EM_DIAGRAM):   end;
4148866   +
4148867   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4148868   +*** Checking missing input Interval
4148869   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4148870   +
4148871   +IF NMISS(
4148872   +   AcceptedCmpTotal ,
4148873   +   Age ,
4148874   +   Frq ,
4148875   +   Income ,
4148876   +   Kidhome ,
4148877   +   Mnt ,
4148878   +   MntFishProducts ,
4148879   +   MntFruits ,
4148880   +   MntGoldProds ,
4148881   +   MntMeatProducts ,
4148882   +   MntSweetProducts ,
4148883   +   MntWines ,
4148884   +   MonthsAsCustomer ,
4148885   +   NumCatalogPurchases ,
4148886   +   NumDealsPurchases ,
4148887   +   NumDistPurchases ,
4148888   +   NumStorePurchases ,
4148889   +   NumWebPurchases ,
4148890   +   NumWebVisitsMonth ,
4148891   +   RFMstat ,
4148892   +   RMntFrq ,
4148893   +   Recency ,
4148894   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
4148895   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4148896   +
4148897   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4148898   +END;
MPRINT(EM_DIAGRAM):   END;
4148899   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4148900   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4148901   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4148902   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4148903   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4148904   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
4148905   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4148906   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4148907   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4148908   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4148909   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4148910   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4148911   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
4148912   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4148913   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4148914   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4148915   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4148916   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
4148917   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4148918   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
4148919   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4148920   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4148921   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
4148922   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4148923   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
4148924   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4148925   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
4148926   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4148927   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
4148928   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4148929   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
4148930   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4148931   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
4148932   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4148933   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
4148934   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4148935   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4148936   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4148937   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4148938   +END;
MPRINT(EM_DIAGRAM):   END;
4148939   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4148940   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4148941   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4148942   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
4148943   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4148944   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4148945   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4148946   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4148947   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4148948   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4148949   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4148950   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4148951   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4148952   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4148953   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4148954   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4148955   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
4148956   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4148957   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4148958   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4148959   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4148960   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4148961   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
4148962   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4148963   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4148964   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
4148965   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4148966   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4148967   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
4148968   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4148969   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4148970   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4148971   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4148972   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
4148973   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4148974   +   ELSE S_NumCatalogPurchases
4148975   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4148976   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
4148977   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4148978   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4148979   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
4148980   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4148981   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4148982   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
4148983   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4148984   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4148985   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
4148986   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4148987   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4148988   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
4148989   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4148990   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4148991   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
4148992   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4148993   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4148994   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4148995   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4148996   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4148997   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4148998   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4148999   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4149000   +END;
MPRINT(EM_DIAGRAM):   END;
4149001   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4149002   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4149003   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4149004   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4149005   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4149006   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4149007   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4149008   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4149009   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4149010   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4149011   +   H1x1_1  =     -1.6780441789215 * S_AcceptedCmpTotal
4149012   +          +     0.45385980917029 * S_Age  +    -0.71899650455913 * S_Frq
4149013   +          +    -1.93679506571805 * S_Income  +     1.56925991391051 *
4149014   +        S_Kidhome  +    -1.47175189232318 * S_Mnt  +    -2.23220260217222 *
4149015   +        S_MntFishProducts  +    -0.27017202076253 * S_MntFruits
4149016   +          +    -0.33562096740259 * S_MntGoldProds  +     3.61472960640287 *
4149017   +        S_MntMeatProducts  +    -2.85576251647297 * S_MntSweetProducts
4149018   +          +     -4.4467685903527 * S_MntWines  +     0.38963757858628 *
4149019   +        S_MonthsAsCustomer  +     1.66666181194027 * S_NumCatalogPurchases
4149020   +          +     3.45371614080196 * S_NumDealsPurchases
4149021   +          +     0.19118374544537 * S_NumDistPurchases
4149022   +          +    -2.45138001446793 * S_NumStorePurchases
4149023   +          +    -0.11424280244155 * S_NumWebPurchases
4149024   +          +    -2.31770357716565 * S_NumWebVisitsMonth
4149025   +          +     2.81643889601936 * S_RFMstat  +    -1.04896006701534 *
4149026   +        S_RMntFrq  +     0.26870809438679 * S_Recency
4149027   +          +    -0.26422448158811 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.6780441789215 * S_AcceptedCmpTotal + 0.45385980917029 * 
S_Age + -0.71899650455913 * S_Frq + -1.93679506571805 * S_Income + 1.56925991391051 * 
S_Kidhome + -1.47175189232318 * S_Mnt + -2.23220260217222 * S_MntFishProducts + 
-0.27017202076253 * S_MntFruits + -0.33562096740259 * S_MntGoldProds + 3.61472960640287 * 
S_MntMeatProducts + -2.85576251647297 * S_MntSweetProducts + -4.4467685903527 * S_MntWines + 
0.38963757858628 * S_MonthsAsCustomer + 1.66666181194027 * S_NumCatalogPurchases + 
3.45371614080196 * S_NumDealsPurchases + 0.19118374544537 * S_NumDistPurchases + 
-2.45138001446793 * S_NumStorePurchases + -0.11424280244155 * S_NumWebPurchases + 
-2.31770357716565 * S_NumWebVisitsMonth + 2.81643889601936 * S_RFMstat + -1.04896006701534 * 
S_RMntFrq + 0.26870809438679 * S_Recency + -0.26422448158811 * S_Teenhome ;
4149028   +   H1x1_2  =    -0.85648293000641 * S_AcceptedCmpTotal
4149029   +          +    -1.65647402725291 * S_Age  +     1.01151947076788 * S_Frq
4149030   +          +    -2.30217634682957 * S_Income  +     3.64198249916211 *
4149031   +        S_Kidhome  +     0.20767518788666 * S_Mnt  +     0.16841756532554 *
4149032   +        S_MntFishProducts  +      -1.068506425921 * S_MntFruits
4149033   +          +     0.58318801939162 * S_MntGoldProds  +    -2.31777049056548 *
4149034   +        S_MntMeatProducts  +     0.23759430399811 * S_MntSweetProducts
4149035   +          +      1.6840332285232 * S_MntWines  +     1.02971381781013 *
4149036   +        S_MonthsAsCustomer  +    -0.67962580165124 * S_NumCatalogPurchases
4149037   +          +    -1.28390925647659 * S_NumDealsPurchases
4149038   +          +     0.82669177239926 * S_NumDistPurchases
4149039   +          +     1.71678585204511 * S_NumStorePurchases
4149040   +          +     1.49226295608046 * S_NumWebPurchases
4149041   +          +     -4.0105103018388 * S_NumWebVisitsMonth
4149042   +          +     0.59909792991084 * S_RFMstat  +     1.07820515361554 *
4149043   +        S_RMntFrq  +     4.74241121363086 * S_Recency
4149044   +          +     3.02084642655958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.85648293000641 * S_AcceptedCmpTotal + -1.65647402725291 * 
S_Age + 1.01151947076788 * S_Frq + -2.30217634682957 * S_Income + 3.64198249916211 * S_Kidhome 
+ 0.20767518788666 * S_Mnt + 0.16841756532554 * S_MntFishProducts + -1.068506425921 * 
S_MntFruits + 0.58318801939162 * S_MntGoldProds + -2.31777049056548 * S_MntMeatProducts + 
0.23759430399811 * S_MntSweetProducts + 1.6840332285232 * S_MntWines + 1.02971381781013 * 
S_MonthsAsCustomer + -0.67962580165124 * S_NumCatalogPurchases + -1.28390925647659 * 
S_NumDealsPurchases + 0.82669177239926 * S_NumDistPurchases + 1.71678585204511 * 
S_NumStorePurchases + 1.49226295608046 * S_NumWebPurchases + -4.0105103018388 * 
S_NumWebVisitsMonth + 0.59909792991084 * S_RFMstat + 1.07820515361554 * S_RMntFrq + 
4.74241121363086 * S_Recency + 3.02084642655958 * S_Teenhome ;
4149045   +   H1x1_3  =    -2.68802949086986 * S_AcceptedCmpTotal
4149046   +          +     0.32408799976195 * S_Age  +     0.22616656573012 * S_Frq
4149047   +          +     -0.4811040196236 * S_Income  +     0.01554228937278 *
4149048   +        S_Kidhome  +    -0.00131538598753 * S_Mnt  +     1.89942488016409 *
4149049   +        S_MntFishProducts  +     0.56303548397494 * S_MntFruits
4149050   +          +    -0.15594598286956 * S_MntGoldProds  +    -7.89542322794989 *
4149051   +        S_MntMeatProducts  +    -0.27122492647076 * S_MntSweetProducts
4149052   +          +     4.85572438492582 * S_MntWines  +     0.12362243863555 *
4149053   +        S_MonthsAsCustomer  +    -1.47960473675934 * S_NumCatalogPurchases
4149054   +          +     0.22958626391725 * S_NumDealsPurchases
4149055   +          +    -0.02046515813996 * S_NumDistPurchases
4149056   +          +      0.8618502050837 * S_NumStorePurchases
4149057   +          +     1.45175370326009 * S_NumWebPurchases
4149058   +          +    -0.86122442436156 * S_NumWebVisitsMonth
4149059   +          +    -0.99643351802143 * S_RFMstat  +    -1.65762265567389 *
4149060   +        S_RMntFrq  +    -0.08202178452839 * S_Recency
4149061   +          +    -0.62066116666102 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.68802949086986 * S_AcceptedCmpTotal + 0.32408799976195 * 
S_Age + 0.22616656573012 * S_Frq + -0.4811040196236 * S_Income + 0.01554228937278 * S_Kidhome 
+ -0.00131538598753 * S_Mnt + 1.89942488016409 * S_MntFishProducts + 0.56303548397494 * 
S_MntFruits + -0.15594598286956 * S_MntGoldProds + -7.89542322794989 * S_MntMeatProducts + 
-0.27122492647076 * S_MntSweetProducts + 4.85572438492582 * S_MntWines + 0.12362243863555 * 
S_MonthsAsCustomer + -1.47960473675934 * S_NumCatalogPurchases + 0.22958626391725 * 
S_NumDealsPurchases + -0.02046515813996 * S_NumDistPurchases + 0.8618502050837 * 
S_NumStorePurchases + 1.45175370326009 * S_NumWebPurchases + -0.86122442436156 * 
S_NumWebVisitsMonth + -0.99643351802143 * S_RFMstat + -1.65762265567389 * S_RMntFrq + 
-0.08202178452839 * S_Recency + -0.62066116666102 * S_Teenhome ;
4149062   +   H1x1_4  =     0.45192233004895 * S_AcceptedCmpTotal
4149063   +          +    -0.94676544762121 * S_Age  +     0.73809341266988 * S_Frq
4149064   +          +     0.72277799278136 * S_Income  +    -0.12970804152173 *
4149065   +        S_Kidhome  +     0.01052564540044 * S_Mnt  +    -0.48321452967118 *
4149066   +        S_MntFishProducts  +    -0.41471448831942 * S_MntFruits
4149067   +          +     0.04381334765674 * S_MntGoldProds  +     0.92594151100538 *
4149068   +        S_MntMeatProducts  +     0.29845970530397 * S_MntSweetProducts
4149069   +          +    -0.71535779454556 * S_MntWines  +     0.00059837351168 *
4149070   +        S_MonthsAsCustomer  +     2.23353511013288 * S_NumCatalogPurchases
4149071   +          +     1.25310034610344 * S_NumDealsPurchases
4149072   +          +     0.92141098602176 * S_NumDistPurchases
4149073   +          +    -0.08806509391473 * S_NumStorePurchases
4149074   +          +     -1.0533787624668 * S_NumWebPurchases
4149075   +          +     3.07050739830585 * S_NumWebVisitsMonth
4149076   +          +    -0.05671059637078 * S_RFMstat  +     1.73621676609839 *
4149077   +        S_RMntFrq  +     -3.8741602707981 * S_Recency
4149078   +          +    -2.06796290973426 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.45192233004895 * S_AcceptedCmpTotal + -0.94676544762121 * 
S_Age + 0.73809341266988 * S_Frq + 0.72277799278136 * S_Income + -0.12970804152173 * S_Kidhome 
+ 0.01052564540044 * S_Mnt + -0.48321452967118 * S_MntFishProducts + -0.41471448831942 * 
S_MntFruits + 0.04381334765674 * S_MntGoldProds + 0.92594151100538 * S_MntMeatProducts + 
0.29845970530397 * S_MntSweetProducts + -0.71535779454556 * S_MntWines + 0.00059837351168 * 
S_MonthsAsCustomer + 2.23353511013288 * S_NumCatalogPurchases + 1.25310034610344 * 
S_NumDealsPurchases + 0.92141098602176 * S_NumDistPurchases + -0.08806509391473 * 
S_NumStorePurchases + -1.0533787624668 * S_NumWebPurchases + 3.07050739830585 * 
S_NumWebVisitsMonth + -0.05671059637078 * S_RFMstat + 1.73621676609839 * S_RMntFrq + 
-3.8741602707981 * S_Recency + -2.06796290973426 * S_Teenhome ;
4149079   +   H1x1_5  =    -1.36121985595495 * S_AcceptedCmpTotal
4149080   +          +     0.05422070059006 * S_Age  +     0.27495083329116 * S_Frq
4149081   +          +     -0.9677209394449 * S_Income  +    -1.13619168708067 *
4149082   +        S_Kidhome  +     0.62918569209141 * S_Mnt  +     0.37160756976122 *
4149083   +        S_MntFishProducts  +     0.88680401337821 * S_MntFruits
4149084   +          +    -0.36100921959604 * S_MntGoldProds  +    -0.35574990334834 *
4149085   +        S_MntMeatProducts  +     0.82389188555236 * S_MntSweetProducts
4149086   +          +     1.43496434553922 * S_MntWines  +    -1.46335376005851 *
4149087   +        S_MonthsAsCustomer  +    -1.84942841156411 * S_NumCatalogPurchases
4149088   +          +    -1.68259553608287 * S_NumDealsPurchases
4149089   +          +    -0.53835572290445 * S_NumDistPurchases
4149090   +          +     1.25833922835446 * S_NumStorePurchases
4149091   +          +     0.48300830623998 * S_NumWebPurchases
4149092   +          +    -2.20119275236582 * S_NumWebVisitsMonth
4149093   +          +     -0.2397284702987 * S_RFMstat  +    -0.71924218175088 *
4149094   +        S_RMntFrq  +     0.35692712879409 * S_Recency
4149095   +          +     0.77122286526706 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.36121985595495 * S_AcceptedCmpTotal + 0.05422070059006 * 
S_Age + 0.27495083329116 * S_Frq + -0.9677209394449 * S_Income + -1.13619168708067 * S_Kidhome 
+ 0.62918569209141 * S_Mnt + 0.37160756976122 * S_MntFishProducts + 0.88680401337821 * 
S_MntFruits + -0.36100921959604 * S_MntGoldProds + -0.35574990334834 * S_MntMeatProducts + 
0.82389188555236 * S_MntSweetProducts + 1.43496434553922 * S_MntWines + -1.46335376005851 * 
S_MonthsAsCustomer + -1.84942841156411 * S_NumCatalogPurchases + -1.68259553608287 * 
S_NumDealsPurchases + -0.53835572290445 * S_NumDistPurchases + 1.25833922835446 * 
S_NumStorePurchases + 0.48300830623998 * S_NumWebPurchases + -2.20119275236582 * 
S_NumWebVisitsMonth + -0.2397284702987 * S_RFMstat + -0.71924218175088 * S_RMntFrq + 
0.35692712879409 * S_Recency + 0.77122286526706 * S_Teenhome ;
4149096   +   H1x1_1  = H1x1_1  +     0.07301304241545 * AcceptedCmp10
4149097   +          +    -1.95730125129608 * AcceptedCmp20  +    -1.38342161079442 *
4149098   +        AcceptedCmp30  +    -1.49080889719345 * AcceptedCmp40
4149099   +          +    -1.07381857035964 * AcceptedCmp50  +    -1.39161532835475 *
4149100   +        Complain0  +    -0.48833832833721 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.07301304241545 * AcceptedCmp10 + -1.95730125129608 * 
AcceptedCmp20 + -1.38342161079442 * AcceptedCmp30 + -1.49080889719345 * AcceptedCmp40 + 
-1.07381857035964 * AcceptedCmp50 + -1.39161532835475 * Complain0 + -0.48833832833721 * 
HigherEducationBinary0 ;
4149101   +   H1x1_2  = H1x1_2  +     0.38934062747222 * AcceptedCmp10
4149102   +          +    -0.32259780417284 * AcceptedCmp20  +     0.51602852076334 *
4149103   +        AcceptedCmp30  +    -0.70838948180655 * AcceptedCmp40
4149104   +          +     1.29066052659113 * AcceptedCmp50  +      0.1004848714971 *
4149105   +        Complain0  +    -0.73386392383925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.38934062747222 * AcceptedCmp10 + -0.32259780417284 * 
AcceptedCmp20 + 0.51602852076334 * AcceptedCmp30 + -0.70838948180655 * AcceptedCmp40 + 
1.29066052659113 * AcceptedCmp50 + 0.1004848714971 * Complain0 + -0.73386392383925 * 
HigherEducationBinary0 ;
4149106   +   H1x1_3  = H1x1_3  +     0.34219997086576 * AcceptedCmp10
4149107   +          +    -0.12311182470953 * AcceptedCmp20  +     -2.0600710888874 *
4149108   +        AcceptedCmp30  +      -1.904294485826 * AcceptedCmp40
4149109   +          +     3.36424449872952 * AcceptedCmp50  +    -0.25078238709812 *
4149110   +        Complain0  +    -0.08077684854733 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.34219997086576 * AcceptedCmp10 + -0.12311182470953 * 
AcceptedCmp20 + -2.0600710888874 * AcceptedCmp30 + -1.904294485826 * AcceptedCmp40 + 
3.36424449872952 * AcceptedCmp50 + -0.25078238709812 * Complain0 + -0.08077684854733 * 
HigherEducationBinary0 ;
4149111   +   H1x1_4  = H1x1_4  +    -1.12501407155309 * AcceptedCmp10
4149112   +          +    -1.58866249671355 * AcceptedCmp20  +    -1.72881548820716 *
4149113   +        AcceptedCmp30  +      -2.214698125839 * AcceptedCmp40
4149114   +          +    -0.62635613939269 * AcceptedCmp50  +      0.0150779868394 *
4149115   +        Complain0  +     1.03338023365724 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.12501407155309 * AcceptedCmp10 + -1.58866249671355 
* AcceptedCmp20 + -1.72881548820716 * AcceptedCmp30 + -2.214698125839 * AcceptedCmp40 + 
-0.62635613939269 * AcceptedCmp50 + 0.0150779868394 * Complain0 + 1.03338023365724 * 
HigherEducationBinary0 ;
4149116   +   H1x1_5  = H1x1_5  +    -0.26508589111781 * AcceptedCmp10
4149117   +          +    -0.40912292690255 * AcceptedCmp20  +     0.75389762391096 *
4149118   +        AcceptedCmp30  +     0.41336953757691 * AcceptedCmp40
4149119   +          +     0.15346623431804 * AcceptedCmp50  +    -0.57037201584293 *
4149120   +        Complain0  +     0.77009921064044 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.26508589111781 * AcceptedCmp10 + -0.40912292690255 
* AcceptedCmp20 + 0.75389762391096 * AcceptedCmp30 + 0.41336953757691 * AcceptedCmp40 + 
0.15346623431804 * AcceptedCmp50 + -0.57037201584293 * Complain0 + 0.77009921064044 * 
HigherEducationBinary0 ;
4149121   +   H1x1_1  = H1x1_1  +      1.0009305049246 * Education2n_Cycle
4149122   +          +     -0.4613305087931 * EducationBasic  +      0.3758596828746 *
4149123   +        EducationGraduation  +     1.25189584055994 * EducationMaster
4149124   +          +     0.26230568150721 * Marital_StatusDivorced
4149125   +          +     0.27563523967756 * Marital_StatusMarried
4149126   +          +     0.54464481618478 * Marital_StatusSingle
4149127   +          +    -0.59728882722473 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.0009305049246 * Education2n_Cycle + -0.4613305087931 
* EducationBasic + 0.3758596828746 * EducationGraduation + 1.25189584055994 * EducationMaster 
+ 0.26230568150721 * Marital_StatusDivorced + 0.27563523967756 * Marital_StatusMarried + 
0.54464481618478 * Marital_StatusSingle + -0.59728882722473 * Marital_StatusTogether ;
4149128   +   H1x1_2  = H1x1_2  +    -0.67268966683928 * Education2n_Cycle
4149129   +          +     1.13837889947773 * EducationBasic  +     1.04211010190617 *
4149130   +        EducationGraduation  +     0.29772013614284 * EducationMaster
4149131   +          +    -0.06750661313108 * Marital_StatusDivorced
4149132   +          +     1.48628445854207 * Marital_StatusMarried
4149133   +          +    -0.52197797291165 * Marital_StatusSingle
4149134   +          +     0.26825188905773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.67268966683928 * Education2n_Cycle + 
1.13837889947773 * EducationBasic + 1.04211010190617 * EducationGraduation + 0.29772013614284 
* EducationMaster + -0.06750661313108 * Marital_StatusDivorced + 1.48628445854207 * 
Marital_StatusMarried + -0.52197797291165 * Marital_StatusSingle + 0.26825188905773 * 
Marital_StatusTogether ;
4149135   +   H1x1_3  = H1x1_3  +     0.15872794306716 * Education2n_Cycle
4149136   +          +     -0.2621450786439 * EducationBasic  +      -0.141563901063 *
4149137   +        EducationGraduation  +     0.45665087056809 * EducationMaster
4149138   +          +     0.03219453957597 * Marital_StatusDivorced
4149139   +          +    -0.73835008216677 * Marital_StatusMarried
4149140   +          +     0.11212575818086 * Marital_StatusSingle
4149141   +          +    -0.43478073380625 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.15872794306716 * Education2n_Cycle + 
-0.2621450786439 * EducationBasic + -0.141563901063 * EducationGraduation + 0.45665087056809 * 
EducationMaster + 0.03219453957597 * Marital_StatusDivorced + -0.73835008216677 * 
Marital_StatusMarried + 0.11212575818086 * Marital_StatusSingle + -0.43478073380625 * 
Marital_StatusTogether ;
4149142   +   H1x1_4  = H1x1_4  +    -0.76014837933596 * Education2n_Cycle
4149143   +          +     0.81014096036717 * EducationBasic  +     0.41200440507889 *
4149144   +        EducationGraduation  +    -1.00228990059701 * EducationMaster
4149145   +          +    -0.95055539413405 * Marital_StatusDivorced
4149146   +          +    -1.65922419336067 * Marital_StatusMarried
4149147   +          +     0.78727538125107 * Marital_StatusSingle
4149148   +          +    -2.04820355088009 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.76014837933596 * Education2n_Cycle + 
0.81014096036717 * EducationBasic + 0.41200440507889 * EducationGraduation + -1.00228990059701 
* EducationMaster + -0.95055539413405 * Marital_StatusDivorced + -1.65922419336067 * 
Marital_StatusMarried + 0.78727538125107 * Marital_StatusSingle + -2.04820355088009 * 
Marital_StatusTogether ;
4149149   +   H1x1_5  = H1x1_5  +    -0.28767104655135 * Education2n_Cycle
4149150   +          +     0.23294407135706 * EducationBasic  +    -1.19680108607997 *
4149151   +        EducationGraduation  +     0.46710355433642 * EducationMaster
4149152   +          +     -4.1747415035634 * Marital_StatusDivorced
4149153   +          +     3.61194282451968 * Marital_StatusMarried
4149154   +          +     -3.2800495365546 * Marital_StatusSingle
4149155   +          +     4.03496183640024 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.28767104655135 * Education2n_Cycle + 
0.23294407135706 * EducationBasic + -1.19680108607997 * EducationGraduation + 0.46710355433642 
* EducationMaster + -4.1747415035634 * Marital_StatusDivorced + 3.61194282451968 * 
Marital_StatusMarried + -3.2800495365546 * Marital_StatusSingle + 4.03496183640024 * 
Marital_StatusTogether ;
4149156   +   H1x1_1  =    -2.93438581065873 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.93438581065873 + H1x1_1 ;
4149157   +   H1x1_2  =     0.62443347607569 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.62443347607569 + H1x1_2 ;
4149158   +   H1x1_3  =    -1.18755793198513 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.18755793198513 + H1x1_3 ;
4149159   +   H1x1_4  =    -3.21278432238831 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.21278432238831 + H1x1_4 ;
4149160   +   H1x1_5  =    -1.81875492018044 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.81875492018044 + H1x1_5 ;
4149161   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4149162   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4149163   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
4149164   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
4149165   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
4149166   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
4149167   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
4149168   +END;
MPRINT(EM_DIAGRAM):   END;
4149169   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4149170   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4149171   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4149172   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
4149173   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
4149174   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
4149175   +END;
MPRINT(EM_DIAGRAM):   END;
4149176   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4149177   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
4149178   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4149179   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4149180   +   H1x2_1  =    -0.54874145972704 * S_AcceptedCmpTotal
4149181   +          +    -1.96729802286214 * S_Age  +     0.48476252791598 * S_Frq
4149182   +          +    -0.22341551246937 * S_Income  +      0.5578096957255 *
4149183   +        S_Kidhome  +     0.02626802496223 * S_Mnt  +     0.45412544568839 *
4149184   +        S_MntFishProducts  +     1.01144979259918 * S_MntFruits
4149185   +          +     0.10684155186482 * S_MntGoldProds  +    -0.28941930881694 *
4149186   +        S_MntMeatProducts  +    -1.28044699620063 * S_MntSweetProducts
4149187   +          +     0.01381215802108 * S_MntWines  +    -0.10048261914477 *
4149188   +        S_MonthsAsCustomer  +     2.77259931235269 * S_NumCatalogPurchases
4149189   +          +     1.29727972396867 * S_NumDealsPurchases
4149190   +          +     -0.4796144286007 * S_NumDistPurchases
4149191   +          +     0.88365985808591 * S_NumStorePurchases
4149192   +          +     0.68522096892804 * S_NumWebPurchases
4149193   +          +     0.54931043107798 * S_NumWebVisitsMonth
4149194   +          +     0.54113568533807 * S_RFMstat  +    -1.25421061779043 *
4149195   +        S_RMntFrq  +     2.35704770144328 * S_Recency
4149196   +          +     0.71039073076168 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.54874145972704 * S_AcceptedCmpTotal + -1.96729802286214 * 
S_Age + 0.48476252791598 * S_Frq + -0.22341551246937 * S_Income + 0.5578096957255 * S_Kidhome 
+ 0.02626802496223 * S_Mnt + 0.45412544568839 * S_MntFishProducts + 1.01144979259918 * 
S_MntFruits + 0.10684155186482 * S_MntGoldProds + -0.28941930881694 * S_MntMeatProducts + 
-1.28044699620063 * S_MntSweetProducts + 0.01381215802108 * S_MntWines + -0.10048261914477 * 
S_MonthsAsCustomer + 2.77259931235269 * S_NumCatalogPurchases + 1.29727972396867 * 
S_NumDealsPurchases + -0.4796144286007 * S_NumDistPurchases + 0.88365985808591 * 
S_NumStorePurchases + 0.68522096892804 * S_NumWebPurchases + 0.54931043107798 * 
S_NumWebVisitsMonth + 0.54113568533807 * S_RFMstat + -1.25421061779043 * S_RMntFrq + 
2.35704770144328 * S_Recency + 0.71039073076168 * S_Teenhome ;
4149197   +   H1x2_2  =    -0.87761654715429 * S_AcceptedCmpTotal
4149198   +          +     0.35157201280883 * S_Age  +    -0.52499399345006 * S_Frq
4149199   +          +    -0.18535763866989 * S_Income  +    -2.37902660986953 *
4149200   +        S_Kidhome  +     0.91895423997679 * S_Mnt  +     0.25609945459048 *
4149201   +        S_MntFishProducts  +    -0.81235755934506 * S_MntFruits
4149202   +          +     0.52120923975997 * S_MntGoldProds  +    -0.44372337811583 *
4149203   +        S_MntMeatProducts  +     0.44948834045992 * S_MntSweetProducts
4149204   +          +     -1.0932771504262 * S_MntWines  +     0.50602262267579 *
4149205   +        S_MonthsAsCustomer  +     1.56553203254999 * S_NumCatalogPurchases
4149206   +          +     0.26997834581422 * S_NumDealsPurchases
4149207   +          +      1.4974894627406 * S_NumDistPurchases
4149208   +          +     0.20577850505638 * S_NumStorePurchases
4149209   +          +     0.67578530037026 * S_NumWebPurchases
4149210   +          +     1.48893165613941 * S_NumWebVisitsMonth
4149211   +          +     0.13287732996796 * S_RFMstat  +     0.56918286957798 *
4149212   +        S_RMntFrq  +    -1.40718347701522 * S_Recency
4149213   +          +    -1.45355422903931 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.87761654715429 * S_AcceptedCmpTotal + 0.35157201280883 * 
S_Age + -0.52499399345006 * S_Frq + -0.18535763866989 * S_Income + -2.37902660986953 * 
S_Kidhome + 0.91895423997679 * S_Mnt + 0.25609945459048 * S_MntFishProducts + 
-0.81235755934506 * S_MntFruits + 0.52120923975997 * S_MntGoldProds + -0.44372337811583 * 
S_MntMeatProducts + 0.44948834045992 * S_MntSweetProducts + -1.0932771504262 * S_MntWines + 
0.50602262267579 * S_MonthsAsCustomer + 1.56553203254999 * S_NumCatalogPurchases + 
0.26997834581422 * S_NumDealsPurchases + 1.4974894627406 * S_NumDistPurchases + 
0.20577850505638 * S_NumStorePurchases + 0.67578530037026 * S_NumWebPurchases + 
1.48893165613941 * S_NumWebVisitsMonth + 0.13287732996796 * S_RFMstat + 0.56918286957798 * 
S_RMntFrq + -1.40718347701522 * S_Recency + -1.45355422903931 * S_Teenhome ;
4149214   +   H1x2_3  =    -0.04229252175967 * S_AcceptedCmpTotal
4149215   +          +    -0.15725101559927 * S_Age  +      2.0258984610186 * S_Frq
4149216   +          +     0.68410444381038 * S_Income  +     0.69019962444573 *
4149217   +        S_Kidhome  +    -0.34233922017925 * S_Mnt  +     1.55352897772997 *
4149218   +        S_MntFishProducts  +    -0.76176236164027 * S_MntFruits
4149219   +          +    -1.16754517357962 * S_MntGoldProds  +     1.24350326644835 *
4149220   +        S_MntMeatProducts  +    -0.81282451423383 * S_MntSweetProducts
4149221   +          +      0.7172672745995 * S_MntWines  +     1.13255065624057 *
4149222   +        S_MonthsAsCustomer  +    -0.07781573365472 * S_NumCatalogPurchases
4149223   +          +    -0.75474919633886 * S_NumDealsPurchases
4149224   +          +     2.21872386475638 * S_NumDistPurchases
4149225   +          +    -0.36191460108989 * S_NumStorePurchases
4149226   +          +     0.03160010932412 * S_NumWebPurchases
4149227   +          +     0.00984650739909 * S_NumWebVisitsMonth
4149228   +          +     0.89037882953417 * S_RFMstat  +    -1.05136047825247 *
4149229   +        S_RMntFrq  +     0.97890474913417 * S_Recency
4149230   +          +     1.27657797009328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.04229252175967 * S_AcceptedCmpTotal + -0.15725101559927 * 
S_Age + 2.0258984610186 * S_Frq + 0.68410444381038 * S_Income + 0.69019962444573 * S_Kidhome + 
-0.34233922017925 * S_Mnt + 1.55352897772997 * S_MntFishProducts + -0.76176236164027 * 
S_MntFruits + -1.16754517357962 * S_MntGoldProds + 1.24350326644835 * S_MntMeatProducts + 
-0.81282451423383 * S_MntSweetProducts + 0.7172672745995 * S_MntWines + 1.13255065624057 * 
S_MonthsAsCustomer + -0.07781573365472 * S_NumCatalogPurchases + -0.75474919633886 * 
S_NumDealsPurchases + 2.21872386475638 * S_NumDistPurchases + -0.36191460108989 * 
S_NumStorePurchases + 0.03160010932412 * S_NumWebPurchases + 0.00984650739909 * 
S_NumWebVisitsMonth + 0.89037882953417 * S_RFMstat + -1.05136047825247 * S_RMntFrq + 
0.97890474913417 * S_Recency + 1.27657797009328 * S_Teenhome ;
4149231   +   H1x2_4  =    -1.09473986244398 * S_AcceptedCmpTotal
4149232   +          +     0.02292759635423 * S_Age  +     -1.7109267909752 * S_Frq
4149233   +          +    -1.43383040360225 * S_Income  +    -1.57934610129188 *
4149234   +        S_Kidhome  +      0.1051214240099 * S_Mnt  +     0.97936539268931 *
4149235   +        S_MntFishProducts  +    -0.59583313648658 * S_MntFruits
4149236   +          +     1.51886505753921 * S_MntGoldProds  +    -0.32475169924002 *
4149237   +        S_MntMeatProducts  +     2.41110603237098 * S_MntSweetProducts
4149238   +          +    -0.31356867592074 * S_MntWines  +    -0.46746195334785 *
4149239   +        S_MonthsAsCustomer  +      1.2175994058873 * S_NumCatalogPurchases
4149240   +          +    -1.12057357865269 * S_NumDealsPurchases
4149241   +          +    -0.70841760614521 * S_NumDistPurchases
4149242   +          +    -1.39174816270404 * S_NumStorePurchases
4149243   +          +    -1.62343249380806 * S_NumWebPurchases
4149244   +          +    -0.73097954508465 * S_NumWebVisitsMonth
4149245   +          +    -3.00146168388145 * S_RFMstat  +     0.52793752800199 *
4149246   +        S_RMntFrq  +    -1.13585643618227 * S_Recency
4149247   +          +    -0.84809590269062 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.09473986244398 * S_AcceptedCmpTotal + 0.02292759635423 * 
S_Age + -1.7109267909752 * S_Frq + -1.43383040360225 * S_Income + -1.57934610129188 * 
S_Kidhome + 0.1051214240099 * S_Mnt + 0.97936539268931 * S_MntFishProducts + -0.59583313648658 
* S_MntFruits + 1.51886505753921 * S_MntGoldProds + -0.32475169924002 * S_MntMeatProducts + 
2.41110603237098 * S_MntSweetProducts + -0.31356867592074 * S_MntWines + -0.46746195334785 * 
S_MonthsAsCustomer + 1.2175994058873 * S_NumCatalogPurchases + -1.12057357865269 * 
S_NumDealsPurchases + -0.70841760614521 * S_NumDistPurchases + -1.39174816270404 * 
S_NumStorePurchases + -1.62343249380806 * S_NumWebPurchases + -0.73097954508465 * 
S_NumWebVisitsMonth + -3.00146168388145 * S_RFMstat + 0.52793752800199 * S_RMntFrq + 
-1.13585643618227 * S_Recency + -0.84809590269062 * S_Teenhome ;
4149248   +   H1x2_5  =    -0.76941479017685 * S_AcceptedCmpTotal
4149249   +          +    -0.80197055800099 * S_Age  +    -0.33523741625948 * S_Frq
4149250   +          +     0.67386262421365 * S_Income  +     1.52003240833706 *
4149251   +        S_Kidhome  +     0.14459028288037 * S_Mnt  +     0.39874528164598 *
4149252   +        S_MntFishProducts  +    -1.59397070226712 * S_MntFruits
4149253   +          +     0.78518859165099 * S_MntGoldProds  +     0.48003679676647 *
4149254   +        S_MntMeatProducts  +    -0.17657709565986 * S_MntSweetProducts
4149255   +          +    -0.79155200251992 * S_MntWines  +     0.27335896970236 *
4149256   +        S_MonthsAsCustomer  +     1.70502645622852 * S_NumCatalogPurchases
4149257   +          +     0.66880481485557 * S_NumDealsPurchases
4149258   +          +     0.69540174544859 * S_NumDistPurchases
4149259   +          +     1.68246546921736 * S_NumStorePurchases
4149260   +          +     1.85958176898295 * S_NumWebPurchases
4149261   +          +    -0.23815810306565 * S_NumWebVisitsMonth
4149262   +          +    -1.93291997626659 * S_RFMstat  +     0.44532152898673 *
4149263   +        S_RMntFrq  +    -2.12360922264332 * S_Recency
4149264   +          +     0.99915338747458 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.76941479017685 * S_AcceptedCmpTotal + -0.80197055800099 * 
S_Age + -0.33523741625948 * S_Frq + 0.67386262421365 * S_Income + 1.52003240833706 * S_Kidhome 
+ 0.14459028288037 * S_Mnt + 0.39874528164598 * S_MntFishProducts + -1.59397070226712 * 
S_MntFruits + 0.78518859165099 * S_MntGoldProds + 0.48003679676647 * S_MntMeatProducts + 
-0.17657709565986 * S_MntSweetProducts + -0.79155200251992 * S_MntWines + 0.27335896970236 * 
S_MonthsAsCustomer + 1.70502645622852 * S_NumCatalogPurchases + 0.66880481485557 * 
S_NumDealsPurchases + 0.69540174544859 * S_NumDistPurchases + 1.68246546921736 * 
S_NumStorePurchases + 1.85958176898295 * S_NumWebPurchases + -0.23815810306565 * 
S_NumWebVisitsMonth + -1.93291997626659 * S_RFMstat + 0.44532152898673 * S_RMntFrq + 
-2.12360922264332 * S_Recency + 0.99915338747458 * S_Teenhome ;
4149265   +   H1x2_1  = H1x2_1  +    -0.34162163066653 * AcceptedCmp10
4149266   +          +    -1.63962075993761 * AcceptedCmp20  +    -0.15621537766672 *
4149267   +        AcceptedCmp30  +      -0.732967936338 * AcceptedCmp40
4149268   +          +    -0.89574320220152 * AcceptedCmp50  +    -1.65404732277767 *
4149269   +        Complain0  +     0.39810242344925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.34162163066653 * AcceptedCmp10 + -1.63962075993761 
* AcceptedCmp20 + -0.15621537766672 * AcceptedCmp30 + -0.732967936338 * AcceptedCmp40 + 
-0.89574320220152 * AcceptedCmp50 + -1.65404732277767 * Complain0 + 0.39810242344925 * 
HigherEducationBinary0 ;
4149270   +   H1x2_2  = H1x2_2  +     1.20749893379181 * AcceptedCmp10
4149271   +          +     0.74035850461127 * AcceptedCmp20  +    -0.57598323268755 *
4149272   +        AcceptedCmp30  +      0.2507562576407 * AcceptedCmp40
4149273   +          +    -1.65954337863227 * AcceptedCmp50  +    -0.36715622527216 *
4149274   +        Complain0  +    -0.80760857638242 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.20749893379181 * AcceptedCmp10 + 0.74035850461127 * 
AcceptedCmp20 + -0.57598323268755 * AcceptedCmp30 + 0.2507562576407 * AcceptedCmp40 + 
-1.65954337863227 * AcceptedCmp50 + -0.36715622527216 * Complain0 + -0.80760857638242 * 
HigherEducationBinary0 ;
4149275   +   H1x2_3  = H1x2_3  +      0.1125551214626 * AcceptedCmp10
4149276   +          +      0.9256532360503 * AcceptedCmp20  +    -0.66171851987996 *
4149277   +        AcceptedCmp30  +     1.38941609616943 * AcceptedCmp40
4149278   +          +    -0.12600029950267 * AcceptedCmp50  +     1.77872255302987 *
4149279   +        Complain0  +     0.92261637863861 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.1125551214626 * AcceptedCmp10 + 0.9256532360503 * 
AcceptedCmp20 + -0.66171851987996 * AcceptedCmp30 + 1.38941609616943 * AcceptedCmp40 + 
-0.12600029950267 * AcceptedCmp50 + 1.77872255302987 * Complain0 + 0.92261637863861 * 
HigherEducationBinary0 ;
4149280   +   H1x2_4  = H1x2_4  +     1.15541901435911 * AcceptedCmp10
4149281   +          +     0.29649422640031 * AcceptedCmp20  +     0.39809722545141 *
4149282   +        AcceptedCmp30  +    -0.33350815656019 * AcceptedCmp40
4149283   +          +    -0.67932033799188 * AcceptedCmp50  +     0.37378775543802 *
4149284   +        Complain0  +    -0.42273281355142 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.15541901435911 * AcceptedCmp10 + 0.29649422640031 * 
AcceptedCmp20 + 0.39809722545141 * AcceptedCmp30 + -0.33350815656019 * AcceptedCmp40 + 
-0.67932033799188 * AcceptedCmp50 + 0.37378775543802 * Complain0 + -0.42273281355142 * 
HigherEducationBinary0 ;
4149285   +   H1x2_5  = H1x2_5  +     0.42070748083274 * AcceptedCmp10
4149286   +          +     0.35338291913326 * AcceptedCmp20  +    -0.47257467834599 *
4149287   +        AcceptedCmp30  +     1.53611423156071 * AcceptedCmp40
4149288   +          +    -1.33360798584085 * AcceptedCmp50  +    -1.44352278404761 *
4149289   +        Complain0  +    -0.33674466205114 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.42070748083274 * AcceptedCmp10 + 0.35338291913326 * 
AcceptedCmp20 + -0.47257467834599 * AcceptedCmp30 + 1.53611423156071 * AcceptedCmp40 + 
-1.33360798584085 * AcceptedCmp50 + -1.44352278404761 * Complain0 + -0.33674466205114 * 
HigherEducationBinary0 ;
4149290   +   H1x2_1  = H1x2_1  +     0.60843711339598 * Education2n_Cycle
4149291   +          +     -0.2612316425128 * EducationBasic  +     0.53215140077355 *
4149292   +        EducationGraduation  +     0.32623787352656 * EducationMaster
4149293   +          +      0.2766977476799 * Marital_StatusDivorced
4149294   +          +     0.99585126449473 * Marital_StatusMarried
4149295   +          +    -0.71244490682808 * Marital_StatusSingle
4149296   +          +     0.05234471555621 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.60843711339598 * Education2n_Cycle + 
-0.2612316425128 * EducationBasic + 0.53215140077355 * EducationGraduation + 0.32623787352656 
* EducationMaster + 0.2766977476799 * Marital_StatusDivorced + 0.99585126449473 * 
Marital_StatusMarried + -0.71244490682808 * Marital_StatusSingle + 0.05234471555621 * 
Marital_StatusTogether ;
4149297   +   H1x2_2  = H1x2_2  +    -1.37916273373311 * Education2n_Cycle
4149298   +          +     0.16982792088728 * EducationBasic  +     0.00814910507718 *
4149299   +        EducationGraduation  +     0.47239961039918 * EducationMaster
4149300   +          +     0.04724779113048 * Marital_StatusDivorced
4149301   +          +    -0.80186231440666 * Marital_StatusMarried
4149302   +          +    -0.02226793584171 * Marital_StatusSingle
4149303   +          +     1.15827064756189 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.37916273373311 * Education2n_Cycle + 
0.16982792088728 * EducationBasic + 0.00814910507718 * EducationGraduation + 0.47239961039918 
* EducationMaster + 0.04724779113048 * Marital_StatusDivorced + -0.80186231440666 * 
Marital_StatusMarried + -0.02226793584171 * Marital_StatusSingle + 1.15827064756189 * 
Marital_StatusTogether ;
4149304   +   H1x2_3  = H1x2_3  +    -0.24428291102209 * Education2n_Cycle
4149305   +          +    -0.11697967041189 * EducationBasic  +    -1.11774839931933 *
4149306   +        EducationGraduation  +     0.41284540548646 * EducationMaster
4149307   +          +     0.28206835683721 * Marital_StatusDivorced
4149308   +          +     0.46500886756532 * Marital_StatusMarried
4149309   +          +     0.35327545255503 * Marital_StatusSingle
4149310   +          +     0.58394650567036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.24428291102209 * Education2n_Cycle + 
-0.11697967041189 * EducationBasic + -1.11774839931933 * EducationGraduation + 
0.41284540548646 * EducationMaster + 0.28206835683721 * Marital_StatusDivorced + 
0.46500886756532 * Marital_StatusMarried + 0.35327545255503 * Marital_StatusSingle + 
0.58394650567036 * Marital_StatusTogether ;
4149311   +   H1x2_4  = H1x2_4  +    -0.41547462236128 * Education2n_Cycle
4149312   +          +     1.13629818238321 * EducationBasic  +     0.25034344652006 *
4149313   +        EducationGraduation  +    -0.29812527209479 * EducationMaster
4149314   +          +     1.22291788006392 * Marital_StatusDivorced
4149315   +          +    -2.27040720272432 * Marital_StatusMarried
4149316   +          +     1.13606780043773 * Marital_StatusSingle
4149317   +          +    -1.07606142589696 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.41547462236128 * Education2n_Cycle + 
1.13629818238321 * EducationBasic + 0.25034344652006 * EducationGraduation + -0.29812527209479 
* EducationMaster + 1.22291788006392 * Marital_StatusDivorced + -2.27040720272432 * 
Marital_StatusMarried + 1.13606780043773 * Marital_StatusSingle + -1.07606142589696 * 
Marital_StatusTogether ;
4149318   +   H1x2_5  = H1x2_5  +     1.12913918872999 * Education2n_Cycle
4149319   +          +     1.23833680718071 * EducationBasic  +     1.02294394812757 *
4149320   +        EducationGraduation  +      0.4909097120378 * EducationMaster
4149321   +          +     -0.3999800759199 * Marital_StatusDivorced
4149322   +          +    -0.40978271635345 * Marital_StatusMarried
4149323   +          +    -0.55524279444227 * Marital_StatusSingle
4149324   +          +    -0.84395633194091 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.12913918872999 * Education2n_Cycle + 
1.23833680718071 * EducationBasic + 1.02294394812757 * EducationGraduation + 0.4909097120378 * 
EducationMaster + -0.3999800759199 * Marital_StatusDivorced + -0.40978271635345 * 
Marital_StatusMarried + -0.55524279444227 * Marital_StatusSingle + -0.84395633194091 * 
Marital_StatusTogether ;
4149325   +   H1x2_1  =    -0.65400470626386 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.65400470626386 + H1x2_1 ;
4149326   +   H1x2_2  =    -0.07530883721979 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.07530883721979 + H1x2_2 ;
4149327   +   H1x2_3  =      -0.290996947172 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.290996947172 + H1x2_3 ;
4149328   +   H1x2_4  =    -0.89461283774487 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.89461283774487 + H1x2_4 ;
4149329   +   H1x2_5  =    -0.37171981998051 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.37171981998051 + H1x2_5 ;
4149330   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4149331   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4149332   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
4149333   +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
4149334   +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
4149335   +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
4149336   +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
4149337   +END;
MPRINT(EM_DIAGRAM):   END;
4149338   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4149339   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
4149340   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
4149341   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
4149342   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
4149343   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
4149344   +END;
MPRINT(EM_DIAGRAM):   END;
4149345   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4149346   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
4149347   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4149348   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4149349   +   H1x3_1  =     0.02034446400728 * S_AcceptedCmpTotal
4149350   +          +    -0.93561297099295 * S_Age  +     0.49066734733476 * S_Frq
4149351   +          +    -1.34856771280634 * S_Income  +     1.35662384709137 *
4149352   +        S_Kidhome  +    -0.02206222240953 * S_Mnt  +     0.42162640035912 *
4149353   +        S_MntFishProducts  +      1.4724867503467 * S_MntFruits
4149354   +          +    -0.51460401528507 * S_MntGoldProds  +       0.958125893994 *
4149355   +        S_MntMeatProducts  +     0.57113865733502 * S_MntSweetProducts
4149356   +          +    -1.00744287646761 * S_MntWines  +     0.17043433169038 *
4149357   +        S_MonthsAsCustomer  +     1.69277828985001 * S_NumCatalogPurchases
4149358   +          +     0.15783958682465 * S_NumDealsPurchases
4149359   +          +     1.52124708558457 * S_NumDistPurchases
4149360   +          +     -1.3804418313581 * S_NumStorePurchases
4149361   +          +    -1.29570111649272 * S_NumWebPurchases
4149362   +          +    -0.64280706056547 * S_NumWebVisitsMonth
4149363   +          +    -1.20774016698707 * S_RFMstat  +    -0.44623204790714 *
4149364   +        S_RMntFrq  +    -0.06726660535826 * S_Recency
4149365   +          +    -0.73266660753354 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.02034446400728 * S_AcceptedCmpTotal + -0.93561297099295 * 
S_Age + 0.49066734733476 * S_Frq + -1.34856771280634 * S_Income + 1.35662384709137 * S_Kidhome 
+ -0.02206222240953 * S_Mnt + 0.42162640035912 * S_MntFishProducts + 1.4724867503467 * 
S_MntFruits + -0.51460401528507 * S_MntGoldProds + 0.958125893994 * S_MntMeatProducts + 
0.57113865733502 * S_MntSweetProducts + -1.00744287646761 * S_MntWines + 0.17043433169038 * 
S_MonthsAsCustomer + 1.69277828985001 * S_NumCatalogPurchases + 0.15783958682465 * 
S_NumDealsPurchases + 1.52124708558457 * S_NumDistPurchases + -1.3804418313581 * 
S_NumStorePurchases + -1.29570111649272 * S_NumWebPurchases + -0.64280706056547 * 
S_NumWebVisitsMonth + -1.20774016698707 * S_RFMstat + -0.44623204790714 * S_RMntFrq + 
-0.06726660535826 * S_Recency + -0.73266660753354 * S_Teenhome ;
4149366   +   H1x3_2  =     0.05576327437156 * S_AcceptedCmpTotal
4149367   +          +    -0.09670418926268 * S_Age  +     0.70499031549942 * S_Frq
4149368   +          +     0.26184897891893 * S_Income  +    -1.14390972062773 *
4149369   +        S_Kidhome  +     -0.0692794596346 * S_Mnt  +     0.38520399298269 *
4149370   +        S_MntFishProducts  +     0.23416686193508 * S_MntFruits
4149371   +          +     0.54961704765881 * S_MntGoldProds  +     1.00350256670809 *
4149372   +        S_MntMeatProducts  +    -0.03432942277526 * S_MntSweetProducts
4149373   +          +    -0.79877133727616 * S_MntWines  +    -2.29194848128805 *
4149374   +        S_MonthsAsCustomer  +    -0.38950356087292 * S_NumCatalogPurchases
4149375   +          +     0.12337111358286 * S_NumDealsPurchases
4149376   +          +     -2.3848926094027 * S_NumDistPurchases
4149377   +          +    -1.20666646996433 * S_NumStorePurchases
4149378   +          +     0.89549302881365 * S_NumWebPurchases
4149379   +          +     0.95359042569947 * S_NumWebVisitsMonth
4149380   +          +    -0.41458051201542 * S_RFMstat  +    -2.05830783255089 *
4149381   +        S_RMntFrq  +     0.17682790616815 * S_Recency
4149382   +          +     0.20329199183726 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.05576327437156 * S_AcceptedCmpTotal + -0.09670418926268 * 
S_Age + 0.70499031549942 * S_Frq + 0.26184897891893 * S_Income + -1.14390972062773 * S_Kidhome 
+ -0.0692794596346 * S_Mnt + 0.38520399298269 * S_MntFishProducts + 0.23416686193508 * 
S_MntFruits + 0.54961704765881 * S_MntGoldProds + 1.00350256670809 * S_MntMeatProducts + 
-0.03432942277526 * S_MntSweetProducts + -0.79877133727616 * S_MntWines + -2.29194848128805 * 
S_MonthsAsCustomer + -0.38950356087292 * S_NumCatalogPurchases + 0.12337111358286 * 
S_NumDealsPurchases + -2.3848926094027 * S_NumDistPurchases + -1.20666646996433 * 
S_NumStorePurchases + 0.89549302881365 * S_NumWebPurchases + 0.95359042569947 * 
S_NumWebVisitsMonth + -0.41458051201542 * S_RFMstat + -2.05830783255089 * S_RMntFrq + 
0.17682790616815 * S_Recency + 0.20329199183726 * S_Teenhome ;
4149383   +   H1x3_3  =     0.56145399373835 * S_AcceptedCmpTotal
4149384   +          +     -0.0607922137813 * S_Age  +    -0.72333515266618 * S_Frq
4149385   +          +     1.00319702869592 * S_Income  +    -0.98265416539823 *
4149386   +        S_Kidhome  +      0.0683081611036 * S_Mnt  +     0.53609800817402 *
4149387   +        S_MntFishProducts  +     2.04360526983241 * S_MntFruits
4149388   +          +    -0.71698041504305 * S_MntGoldProds  +     -0.0344399486348 *
4149389   +        S_MntMeatProducts  +     0.33812230317499 * S_MntSweetProducts
4149390   +          +     1.06616289880664 * S_MntWines  +     0.61567483782422 *
4149391   +        S_MonthsAsCustomer  +      0.1468959674594 * S_NumCatalogPurchases
4149392   +          +    -1.05383642674948 * S_NumDealsPurchases
4149393   +          +     1.71861984509369 * S_NumDistPurchases
4149394   +          +     1.47595181536047 * S_NumStorePurchases
4149395   +          +    -1.64165005491178 * S_NumWebPurchases
4149396   +          +    -2.35130004742828 * S_NumWebVisitsMonth
4149397   +          +      1.0733561716985 * S_RFMstat  +     1.11931629246452 *
4149398   +        S_RMntFrq  +    -1.27356615687944 * S_Recency
4149399   +          +     0.38980214209917 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.56145399373835 * S_AcceptedCmpTotal + -0.0607922137813 * 
S_Age + -0.72333515266618 * S_Frq + 1.00319702869592 * S_Income + -0.98265416539823 * 
S_Kidhome + 0.0683081611036 * S_Mnt + 0.53609800817402 * S_MntFishProducts + 2.04360526983241 
* S_MntFruits + -0.71698041504305 * S_MntGoldProds + -0.0344399486348 * S_MntMeatProducts + 
0.33812230317499 * S_MntSweetProducts + 1.06616289880664 * S_MntWines + 0.61567483782422 * 
S_MonthsAsCustomer + 0.1468959674594 * S_NumCatalogPurchases + -1.05383642674948 * 
S_NumDealsPurchases + 1.71861984509369 * S_NumDistPurchases + 1.47595181536047 * 
S_NumStorePurchases + -1.64165005491178 * S_NumWebPurchases + -2.35130004742828 * 
S_NumWebVisitsMonth + 1.0733561716985 * S_RFMstat + 1.11931629246452 * S_RMntFrq + 
-1.27356615687944 * S_Recency + 0.38980214209917 * S_Teenhome ;
4149400   +   H1x3_4  =    -1.87202109167616 * S_AcceptedCmpTotal
4149401   +          +     0.55536174675106 * S_Age  +     1.30133566520787 * S_Frq
4149402   +          +     1.18618986686496 * S_Income  +      0.7889264950743 *
4149403   +        S_Kidhome  +     0.52573653297629 * S_Mnt  +    -0.46151505202831 *
4149404   +        S_MntFishProducts  +     0.87196199131075 * S_MntFruits
4149405   +          +    -1.42881514301194 * S_MntGoldProds  +     0.75395204572369 *
4149406   +        S_MntMeatProducts  +    -1.86940235435459 * S_MntSweetProducts
4149407   +          +    -0.16531589560603 * S_MntWines  +     0.80429494629006 *
4149408   +        S_MonthsAsCustomer  +     2.07324775707635 * S_NumCatalogPurchases
4149409   +          +     0.13347794794222 * S_NumDealsPurchases
4149410   +          +     0.30533639886561 * S_NumDistPurchases
4149411   +          +     1.63892955540526 * S_NumStorePurchases
4149412   +          +     0.43734586516446 * S_NumWebPurchases
4149413   +          +     1.79260779802864 * S_NumWebVisitsMonth
4149414   +          +     2.03019700767877 * S_RFMstat  +    -0.36302320348133 *
4149415   +        S_RMntFrq  +    -0.32271271703746 * S_Recency
4149416   +          +     1.03191552613762 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -1.87202109167616 * S_AcceptedCmpTotal + 0.55536174675106 * 
S_Age + 1.30133566520787 * S_Frq + 1.18618986686496 * S_Income + 0.7889264950743 * S_Kidhome + 
0.52573653297629 * S_Mnt + -0.46151505202831 * S_MntFishProducts + 0.87196199131075 * 
S_MntFruits + -1.42881514301194 * S_MntGoldProds + 0.75395204572369 * S_MntMeatProducts + 
-1.86940235435459 * S_MntSweetProducts + -0.16531589560603 * S_MntWines + 0.80429494629006 * 
S_MonthsAsCustomer + 2.07324775707635 * S_NumCatalogPurchases + 0.13347794794222 * 
S_NumDealsPurchases + 0.30533639886561 * S_NumDistPurchases + 1.63892955540526 * 
S_NumStorePurchases + 0.43734586516446 * S_NumWebPurchases + 1.79260779802864 * 
S_NumWebVisitsMonth + 2.03019700767877 * S_RFMstat + -0.36302320348133 * S_RMntFrq + 
-0.32271271703746 * S_Recency + 1.03191552613762 * S_Teenhome ;
4149417   +   H1x3_5  =     0.20857223520727 * S_AcceptedCmpTotal
4149418   +          +    -0.20096771162452 * S_Age  +     0.34962532991985 * S_Frq
4149419   +          +     1.37548654455856 * S_Income  +     1.56421861140197 *
4149420   +        S_Kidhome  +    -1.14534324749928 * S_Mnt  +     1.19456381083083 *
4149421   +        S_MntFishProducts  +     0.66027175430916 * S_MntFruits
4149422   +          +    -0.93198171949009 * S_MntGoldProds  +    -0.72464830253528 *
4149423   +        S_MntMeatProducts  +     1.02487566206095 * S_MntSweetProducts
4149424   +          +     1.05601020947303 * S_MntWines  +     2.31580499448269 *
4149425   +        S_MonthsAsCustomer  +    -0.72019418879499 * S_NumCatalogPurchases
4149426   +          +     1.64209094349557 * S_NumDealsPurchases
4149427   +          +    -0.38876870460627 * S_NumDistPurchases
4149428   +          +    -0.48559309584971 * S_NumStorePurchases
4149429   +          +     0.21254626353218 * S_NumWebPurchases
4149430   +          +    -0.71484448532542 * S_NumWebVisitsMonth
4149431   +          +     0.02349535084994 * S_RFMstat  +    -0.16176132186427 *
4149432   +        S_RMntFrq  +     0.44893411588775 * S_Recency
4149433   +          +      0.2652212690846 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.20857223520727 * S_AcceptedCmpTotal + -0.20096771162452 * 
S_Age + 0.34962532991985 * S_Frq + 1.37548654455856 * S_Income + 1.56421861140197 * S_Kidhome 
+ -1.14534324749928 * S_Mnt + 1.19456381083083 * S_MntFishProducts + 0.66027175430916 * 
S_MntFruits + -0.93198171949009 * S_MntGoldProds + -0.72464830253528 * S_MntMeatProducts + 
1.02487566206095 * S_MntSweetProducts + 1.05601020947303 * S_MntWines + 2.31580499448269 * 
S_MonthsAsCustomer + -0.72019418879499 * S_NumCatalogPurchases + 1.64209094349557 * 
S_NumDealsPurchases + -0.38876870460627 * S_NumDistPurchases + -0.48559309584971 * 
S_NumStorePurchases + 0.21254626353218 * S_NumWebPurchases + -0.71484448532542 * 
S_NumWebVisitsMonth + 0.02349535084994 * S_RFMstat + -0.16176132186427 * S_RMntFrq + 
0.44893411588775 * S_Recency + 0.2652212690846 * S_Teenhome ;
4149434   +   H1x3_1  = H1x3_1  +    -1.35842958516566 * AcceptedCmp10
4149435   +          +     0.34594436457216 * AcceptedCmp20  +      0.3640777110552 *
4149436   +        AcceptedCmp30  +    -2.65231594293215 * AcceptedCmp40
4149437   +          +    -0.32594395344101 * AcceptedCmp50  +    -0.20731631969028 *
4149438   +        Complain0  +    -0.37562812451995 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -1.35842958516566 * AcceptedCmp10 + 0.34594436457216 * 
AcceptedCmp20 + 0.3640777110552 * AcceptedCmp30 + -2.65231594293215 * AcceptedCmp40 + 
-0.32594395344101 * AcceptedCmp50 + -0.20731631969028 * Complain0 + -0.37562812451995 * 
HigherEducationBinary0 ;
4149439   +   H1x3_2  = H1x3_2  +    -0.29516697471591 * AcceptedCmp10
4149440   +          +     0.12160626453607 * AcceptedCmp20  +    -0.19673071668839 *
4149441   +        AcceptedCmp30  +      0.9679629348873 * AcceptedCmp40
4149442   +          +     0.27607865991675 * AcceptedCmp50  +     0.34210605810889 *
4149443   +        Complain0  +    -0.91955372970801 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.29516697471591 * AcceptedCmp10 + 0.12160626453607 * 
AcceptedCmp20 + -0.19673071668839 * AcceptedCmp30 + 0.9679629348873 * AcceptedCmp40 + 
0.27607865991675 * AcceptedCmp50 + 0.34210605810889 * Complain0 + -0.91955372970801 * 
HigherEducationBinary0 ;
4149444   +   H1x3_3  = H1x3_3  +    -0.64048354977116 * AcceptedCmp10
4149445   +          +     0.71632378156708 * AcceptedCmp20  +     1.49620826236085 *
4149446   +        AcceptedCmp30  +    -0.41927727863342 * AcceptedCmp40
4149447   +          +    -0.74518887123144 * AcceptedCmp50  +     -0.5653895859863 *
4149448   +        Complain0  +     0.49026807979832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.64048354977116 * AcceptedCmp10 + 0.71632378156708 * 
AcceptedCmp20 + 1.49620826236085 * AcceptedCmp30 + -0.41927727863342 * AcceptedCmp40 + 
-0.74518887123144 * AcceptedCmp50 + -0.5653895859863 * Complain0 + 0.49026807979832 * 
HigherEducationBinary0 ;
4149449   +   H1x3_4  = H1x3_4  +    -0.39456977652419 * AcceptedCmp10
4149450   +          +    -0.35607374401334 * AcceptedCmp20  +     0.25403314478809 *
4149451   +        AcceptedCmp30  +    -1.26365534513909 * AcceptedCmp40
4149452   +          +    -0.93574993035227 * AcceptedCmp50  +    -0.01475423275475 *
4149453   +        Complain0  +     0.99152563511102 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.39456977652419 * AcceptedCmp10 + -0.35607374401334 
* AcceptedCmp20 + 0.25403314478809 * AcceptedCmp30 + -1.26365534513909 * AcceptedCmp40 + 
-0.93574993035227 * AcceptedCmp50 + -0.01475423275475 * Complain0 + 0.99152563511102 * 
HigherEducationBinary0 ;
4149454   +   H1x3_5  = H1x3_5  +    -1.26373480748972 * AcceptedCmp10
4149455   +          +     0.14485593883591 * AcceptedCmp20  +     -0.0764980824216 *
4149456   +        AcceptedCmp30  +    -1.03297576023738 * AcceptedCmp40
4149457   +          +    -1.10199278454673 * AcceptedCmp50  +     0.92040879426753 *
4149458   +        Complain0  +     0.19845951543481 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.26373480748972 * AcceptedCmp10 + 0.14485593883591 * 
AcceptedCmp20 + -0.0764980824216 * AcceptedCmp30 + -1.03297576023738 * AcceptedCmp40 + 
-1.10199278454673 * AcceptedCmp50 + 0.92040879426753 * Complain0 + 0.19845951543481 * 
HigherEducationBinary0 ;
4149459   +   H1x3_1  = H1x3_1  +     0.21888802927361 * Education2n_Cycle
4149460   +          +    -1.88729117459232 * EducationBasic  +    -0.23163049582765 *
4149461   +        EducationGraduation  +     0.46887304015863 * EducationMaster
4149462   +          +     1.33953173091973 * Marital_StatusDivorced
4149463   +          +    -0.26253208073262 * Marital_StatusMarried
4149464   +          +    -0.00960552682431 * Marital_StatusSingle
4149465   +          +     1.02851334153667 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.21888802927361 * Education2n_Cycle + 
-1.88729117459232 * EducationBasic + -0.23163049582765 * EducationGraduation + 
0.46887304015863 * EducationMaster + 1.33953173091973 * Marital_StatusDivorced + 
-0.26253208073262 * Marital_StatusMarried + -0.00960552682431 * Marital_StatusSingle + 
1.02851334153667 * Marital_StatusTogether ;
4149466   +   H1x3_2  = H1x3_2  +     2.36701652448958 * Education2n_Cycle
4149467   +          +     0.64894060487321 * EducationBasic  +     -1.2851019467738 *
4149468   +        EducationGraduation  +     1.05325310300372 * EducationMaster
4149469   +          +     1.43150850334311 * Marital_StatusDivorced
4149470   +          +    -0.69239127844934 * Marital_StatusMarried
4149471   +          +     2.08477562471559 * Marital_StatusSingle
4149472   +          +    -1.55945531486837 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 2.36701652448958 * Education2n_Cycle + 
0.64894060487321 * EducationBasic + -1.2851019467738 * EducationGraduation + 1.05325310300372 
* EducationMaster + 1.43150850334311 * Marital_StatusDivorced + -0.69239127844934 * 
Marital_StatusMarried + 2.08477562471559 * Marital_StatusSingle + -1.55945531486837 * 
Marital_StatusTogether ;
4149473   +   H1x3_3  = H1x3_3  +    -0.07588279976612 * Education2n_Cycle
4149474   +          +    -1.60804492005984 * EducationBasic  +     0.15348594453976 *
4149475   +        EducationGraduation  +     1.80436924796338 * EducationMaster
4149476   +          +     1.08387556786168 * Marital_StatusDivorced
4149477   +          +      1.0283506000217 * Marital_StatusMarried
4149478   +          +    -0.87069431107983 * Marital_StatusSingle
4149479   +          +    -0.04455113729262 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.07588279976612 * Education2n_Cycle + 
-1.60804492005984 * EducationBasic + 0.15348594453976 * EducationGraduation + 1.80436924796338 
* EducationMaster + 1.08387556786168 * Marital_StatusDivorced + 1.0283506000217 * 
Marital_StatusMarried + -0.87069431107983 * Marital_StatusSingle + -0.04455113729262 * 
Marital_StatusTogether ;
4149480   +   H1x3_4  = H1x3_4  +    -0.24072826180906 * Education2n_Cycle
4149481   +          +     0.56372511932643 * EducationBasic  +    -1.72914870390939 *
4149482   +        EducationGraduation  +    -1.53859265107051 * EducationMaster
4149483   +          +      -1.347780188307 * Marital_StatusDivorced
4149484   +          +    -0.53911983240372 * Marital_StatusMarried
4149485   +          +     0.22083074159185 * Marital_StatusSingle
4149486   +          +     0.46023807391468 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.24072826180906 * Education2n_Cycle + 
0.56372511932643 * EducationBasic + -1.72914870390939 * EducationGraduation + 
-1.53859265107051 * EducationMaster + -1.347780188307 * Marital_StatusDivorced + 
-0.53911983240372 * Marital_StatusMarried + 0.22083074159185 * Marital_StatusSingle + 
0.46023807391468 * Marital_StatusTogether ;
4149487   +   H1x3_5  = H1x3_5  +    -0.72917301249658 * Education2n_Cycle
4149488   +          +     0.78780526232794 * EducationBasic  +     0.22244378874589 *
4149489   +        EducationGraduation  +      1.6087631135774 * EducationMaster
4149490   +          +     1.46582538311384 * Marital_StatusDivorced
4149491   +          +     0.05256161016002 * Marital_StatusMarried
4149492   +          +    -1.21402967626877 * Marital_StatusSingle
4149493   +          +     0.88645860928281 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -0.72917301249658 * Education2n_Cycle + 
0.78780526232794 * EducationBasic + 0.22244378874589 * EducationGraduation + 1.6087631135774 * 
EducationMaster + 1.46582538311384 * Marital_StatusDivorced + 0.05256161016002 * 
Marital_StatusMarried + -1.21402967626877 * Marital_StatusSingle + 0.88645860928281 * 
Marital_StatusTogether ;
4149494   +   H1x3_1  =     0.88456831875399 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.88456831875399 + H1x3_1 ;
4149495   +   H1x3_2  =    -0.97118571845853 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.97118571845853 + H1x3_2 ;
4149496   +   H1x3_3  =    -0.79264210370105 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.79264210370105 + H1x3_3 ;
4149497   +   H1x3_4  =     0.02838267530757 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.02838267530757 + H1x3_4 ;
4149498   +   H1x3_5  =      0.6575544901332 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.6575544901332 + H1x3_5 ;
4149499   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4149500   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4149501   +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
4149502   +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
4149503   +   H1x3_3  = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_3 = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
4149504   +   H1x3_4  = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
4149505   +   H1x3_5  = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_5 = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
4149506   +END;
MPRINT(EM_DIAGRAM):   END;
4149507   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4149508   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
4149509   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
4149510   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
4149511   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
4149512   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
4149513   +END;
MPRINT(EM_DIAGRAM):   END;
4149514   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4149515   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
4149516   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4149517   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4149518   +   H2x1_1  =    -0.87888588976745 * H1x1_1  +     2.90335871970001 * H1x1_2
4149519   +          +     3.56892082037266 * H1x1_3  +    -2.73992780705083 * H1x1_4
4149520   +          +     1.85087845133324 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.87888588976745 * H1x1_1 + 2.90335871970001 * H1x1_2 + 
3.56892082037266 * H1x1_3 + -2.73992780705083 * H1x1_4 + 1.85087845133324 * H1x1_5 ;
4149521   +   H2x1_2  =    -0.58574259841126 * H1x1_1  +    -0.21734849016798 * H1x1_2
4149522   +          +    -0.25911074181081 * H1x1_3  +    -0.42608313525243 * H1x1_4
4149523   +          +      0.0572264965726 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.58574259841126 * H1x1_1 + -0.21734849016798 * H1x1_2 + 
-0.25911074181081 * H1x1_3 + -0.42608313525243 * H1x1_4 + 0.0572264965726 * H1x1_5 ;
4149524   +   H2x1_3  =     -3.4245103090892 * H1x1_1  +     2.39148442791109 * H1x1_2
4149525   +          +     2.40633993926864 * H1x1_3  +    -0.39116314741561 * H1x1_4
4149526   +          +     1.55940137045446 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -3.4245103090892 * H1x1_1 + 2.39148442791109 * H1x1_2 + 
2.40633993926864 * H1x1_3 + -0.39116314741561 * H1x1_4 + 1.55940137045446 * H1x1_5 ;
4149527   +   H2x1_4  =     4.40552826823228 * H1x1_1  +    -2.22667369285426 * H1x1_2
4149528   +          +    -4.36956996992936 * H1x1_3  +     5.07833758885145 * H1x1_4
4149529   +          +    -3.71745000855391 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 4.40552826823228 * H1x1_1 + -2.22667369285426 * H1x1_2 + 
-4.36956996992936 * H1x1_3 + 5.07833758885145 * H1x1_4 + -3.71745000855391 * H1x1_5 ;
4149530   +   H2x1_1  = H2x1_1  +     2.57417055243767 * H1x2_1
4149531   +          +     0.83648749576123 * H1x2_2  +     0.89390090173338 * H1x2_3
4149532   +          +     0.64981014833304 * H1x2_4  +    -0.52148329192172 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 2.57417055243767 * H1x2_1 + 0.83648749576123 * H1x2_2 
+ 0.89390090173338 * H1x2_3 + 0.64981014833304 * H1x2_4 + -0.52148329192172 * H1x2_5 ;
4149533   +   H2x1_2  = H2x1_2  +      0.0180888989385 * H1x2_1
4149534   +          +    -0.80823823488019 * H1x2_2  +    -0.28763491232907 * H1x2_3
4149535   +          +     0.25846928082637 * H1x2_4  +    -0.90191452174928 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.0180888989385 * H1x2_1 + -0.80823823488019 * H1x2_2 
+ -0.28763491232907 * H1x2_3 + 0.25846928082637 * H1x2_4 + -0.90191452174928 * H1x2_5 ;
4149536   +   H2x1_3  = H2x1_3  +     1.14009879940491 * H1x2_1
4149537   +          +    -0.40787680915084 * H1x2_2  +     0.07284828777988 * H1x2_3
4149538   +          +     0.36049016529857 * H1x2_4  +    -1.18138631855392 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.14009879940491 * H1x2_1 + -0.40787680915084 * H1x2_2 
+ 0.07284828777988 * H1x2_3 + 0.36049016529857 * H1x2_4 + -1.18138631855392 * H1x2_5 ;
4149539   +   H2x1_4  = H2x1_4  +     -0.1178430666715 * H1x2_1
4149540   +          +     2.09065650924536 * H1x2_2  +     1.04148055725421 * H1x2_3
4149541   +          +     0.02606984862898 * H1x2_4  +     0.31973150706209 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.1178430666715 * H1x2_1 + 2.09065650924536 * H1x2_2 
+ 1.04148055725421 * H1x2_3 + 0.02606984862898 * H1x2_4 + 0.31973150706209 * H1x2_5 ;
4149542   +   H2x1_1  = H2x1_1  +     0.37589541636702 * H1x3_1
4149543   +          +    -1.02452495514201 * H1x3_2  +     0.44765211805329 * H1x3_3
4149544   +          +    -1.35647342372032 * H1x3_4  +     -0.6490399229487 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.37589541636702 * H1x3_1 + -1.02452495514201 * H1x3_2 
+ 0.44765211805329 * H1x3_3 + -1.35647342372032 * H1x3_4 + -0.6490399229487 * H1x3_5 ;
4149545   +   H2x1_2  = H2x1_2  +      -1.910747593267 * H1x3_1
4149546   +          +     1.91313714874593 * H1x3_2  +     0.89010950185557 * H1x3_3
4149547   +          +     1.16258612173237 * H1x3_4  +     0.67062728470341 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.910747593267 * H1x3_1 + 1.91313714874593 * H1x3_2 + 
0.89010950185557 * H1x3_3 + 1.16258612173237 * H1x3_4 + 0.67062728470341 * H1x3_5 ;
4149548   +   H2x1_3  = H2x1_3  +    -0.61933600446437 * H1x3_1
4149549   +          +     1.71790550668732 * H1x3_2  +     0.54214423164791 * H1x3_3
4149550   +          +     1.23934237110052 * H1x3_4  +     -0.5426823885329 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.61933600446437 * H1x3_1 + 1.71790550668732 * H1x3_2 
+ 0.54214423164791 * H1x3_3 + 1.23934237110052 * H1x3_4 + -0.5426823885329 * H1x3_5 ;
4149551   +   H2x1_4  = H2x1_4  +     0.63501991890118 * H1x3_1
4149552   +          +     0.52608732282548 * H1x3_2  +     1.05849455171994 * H1x3_3
4149553   +          +    -0.10988994454917 * H1x3_4  +     -0.4296682351699 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.63501991890118 * H1x3_1 + 0.52608732282548 * H1x3_2 
+ 1.05849455171994 * H1x3_3 + -0.10988994454917 * H1x3_4 + -0.4296682351699 * H1x3_5 ;
4149554   +   H2x1_1  =     1.65760855975376 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.65760855975376 + H2x1_1 ;
4149555   +   H2x1_2  =    -1.48092067999918 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.48092067999918 + H2x1_2 ;
4149556   +   H2x1_3  =     0.34293203475136 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.34293203475136 + H2x1_3 ;
4149557   +   H2x1_4  =     2.26730807690838 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.26730807690838 + H2x1_4 ;
4149558   +   H2x1_5  = 0;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0;
4149559   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 );
4149560   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4149561   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
4149562   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
4149563   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
4149564   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
4149565   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
4149566   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
4149567   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
4149568   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
4149569   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
4149570   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
4149571   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
4149572   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
4149573   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
4149574   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
4149575   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
4149576   +END;
MPRINT(EM_DIAGRAM):   END;
4149577   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4149578   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
4149579   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
4149580   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
4149581   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
4149582   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
4149583   +END;
MPRINT(EM_DIAGRAM):   END;
4149584   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4149585   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
4149586   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4149587   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4149588   +   H2x2_1  =     0.35487648363729 * H1x1_1  +    -1.23352844324567 * H1x1_2
4149589   +          +      0.4867158313468 * H1x1_3  +    -1.47292809903753 * H1x1_4
4149590   +          +    -1.00833023262854 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.35487648363729 * H1x1_1 + -1.23352844324567 * H1x1_2 + 
0.4867158313468 * H1x1_3 + -1.47292809903753 * H1x1_4 + -1.00833023262854 * H1x1_5 ;
4149591   +   H2x2_2  =     1.32087363094324 * H1x1_1  +     0.82502983555141 * H1x1_2
4149592   +          +    -0.68621854188154 * H1x1_3  +     1.98219533394448 * H1x1_4
4149593   +          +     0.24099626891211 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.32087363094324 * H1x1_1 + 0.82502983555141 * H1x1_2 + 
-0.68621854188154 * H1x1_3 + 1.98219533394448 * H1x1_4 + 0.24099626891211 * H1x1_5 ;
4149594   +   H2x2_3  =     1.19516705715854 * H1x1_1  +    -0.20476587977538 * H1x1_2
4149595   +          +    -2.69435199012833 * H1x1_3  +      1.1085509496662 * H1x1_4
4149596   +          +    -0.95845782501191 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.19516705715854 * H1x1_1 + -0.20476587977538 * H1x1_2 + 
-2.69435199012833 * H1x1_3 + 1.1085509496662 * H1x1_4 + -0.95845782501191 * H1x1_5 ;
4149597   +   H2x2_4  =     0.80435775915951 * H1x1_1  +     1.81751702761299 * H1x1_2
4149598   +          +     0.07722876002556 * H1x1_3  +    -0.41957373993392 * H1x1_4
4149599   +          +    -1.39341356039439 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.80435775915951 * H1x1_1 + 1.81751702761299 * H1x1_2 + 
0.07722876002556 * H1x1_3 + -0.41957373993392 * H1x1_4 + -1.39341356039439 * H1x1_5 ;
4149600   +   H2x2_1  = H2x2_1  +     0.84230993439042 * H1x2_1
4149601   +          +      1.4931541058726 * H1x2_2  +     0.29113033361443 * H1x2_3
4149602   +          +     0.58117372781043 * H1x2_4  +     0.21183820652904 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.84230993439042 * H1x2_1 + 1.4931541058726 * H1x2_2 + 
0.29113033361443 * H1x2_3 + 0.58117372781043 * H1x2_4 + 0.21183820652904 * H1x2_5 ;
4149603   +   H2x2_2  = H2x2_2  +     0.27560928585641 * H1x2_1
4149604   +          +     1.00352880610395 * H1x2_2  +     1.86342723621296 * H1x2_3
4149605   +          +     0.68698974361713 * H1x2_4  +     1.62443344475228 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.27560928585641 * H1x2_1 + 1.00352880610395 * H1x2_2 
+ 1.86342723621296 * H1x2_3 + 0.68698974361713 * H1x2_4 + 1.62443344475228 * H1x2_5 ;
4149606   +   H2x2_3  = H2x2_3  +     0.59362453125998 * H1x2_1
4149607   +          +     2.21434215943762 * H1x2_2  +     0.00697391860503 * H1x2_3
4149608   +          +     0.52298455671378 * H1x2_4  +    -1.36319907473823 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.59362453125998 * H1x2_1 + 2.21434215943762 * H1x2_2 
+ 0.00697391860503 * H1x2_3 + 0.52298455671378 * H1x2_4 + -1.36319907473823 * H1x2_5 ;
4149609   +   H2x2_4  = H2x2_4  +     0.87949581153547 * H1x2_1
4149610   +          +     0.52867495476492 * H1x2_2  +    -0.30823702050003 * H1x2_3
4149611   +          +     1.30732992472712 * H1x2_4  +    -0.93335113891701 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.87949581153547 * H1x2_1 + 0.52867495476492 * H1x2_2 
+ -0.30823702050003 * H1x2_3 + 1.30732992472712 * H1x2_4 + -0.93335113891701 * H1x2_5 ;
4149612   +   H2x2_1  = H2x2_1  +    -0.18546949662618 * H1x3_1
4149613   +          +     0.12449215628678 * H1x3_2  +    -0.06904718348363 * H1x3_3
4149614   +          +     1.64236464165721 * H1x3_4  +      0.6073731959408 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.18546949662618 * H1x3_1 + 0.12449215628678 * H1x3_2 
+ -0.06904718348363 * H1x3_3 + 1.64236464165721 * H1x3_4 + 0.6073731959408 * H1x3_5 ;
4149615   +   H2x2_2  = H2x2_2  +    -0.65604349417832 * H1x3_1
4149616   +          +    -0.36719791640957 * H1x3_2  +     0.13320126120657 * H1x3_3
4149617   +          +     0.18159276955134 * H1x3_4  +     2.58327741985853 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.65604349417832 * H1x3_1 + -0.36719791640957 * 
H1x3_2 + 0.13320126120657 * H1x3_3 + 0.18159276955134 * H1x3_4 + 2.58327741985853 * H1x3_5 ;
4149618   +   H2x2_3  = H2x2_3  +     0.91638163706166 * H1x3_1
4149619   +          +    -0.47067218080648 * H1x3_2  +    -1.48968450897101 * H1x3_3
4149620   +          +     1.31187282169231 * H1x3_4  +     -0.2874693423684 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.91638163706166 * H1x3_1 + -0.47067218080648 * H1x3_2 
+ -1.48968450897101 * H1x3_3 + 1.31187282169231 * H1x3_4 + -0.2874693423684 * H1x3_5 ;
4149621   +   H2x2_4  = H2x2_4  +     0.53560065193109 * H1x3_1
4149622   +          +    -1.15405943087628 * H1x3_2  +     0.12331054856276 * H1x3_3
4149623   +          +     -1.4665768024733 * H1x3_4  +    -0.08015819920106 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.53560065193109 * H1x3_1 + -1.15405943087628 * H1x3_2 
+ 0.12331054856276 * H1x3_3 + -1.4665768024733 * H1x3_4 + -0.08015819920106 * H1x3_5 ;
4149624   +   H2x2_1  =     1.14294113680807 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.14294113680807 + H2x2_1 ;
4149625   +   H2x2_2  =     0.23029998902452 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.23029998902452 + H2x2_2 ;
4149626   +   H2x2_3  =     0.09214575938404 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.09214575938404 + H2x2_3 ;
4149627   +   H2x2_4  =    -1.18247593420886 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -1.18247593420886 + H2x2_4 ;
4149628   +   H2x2_5  = 0;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0;
4149629   +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 );
4149630   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4149631   +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
4149632   +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
4149633   +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
4149634   +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
4149635   +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
4149636   +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
4149637   +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
4149638   +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
4149639   +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
4149640   +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
4149641   +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
4149642   +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
4149643   +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
4149644   +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
4149645   +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
4149646   +END;
MPRINT(EM_DIAGRAM):   END;
4149647   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4149648   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
4149649   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
4149650   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
4149651   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
4149652   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
4149653   +END;
MPRINT(EM_DIAGRAM):   END;
4149654   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4149655   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
4149656   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4149657   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4149658   +   H3x1_1  =     0.38781845364667 * H2x1_1  +    -1.29333236344932 * H2x1_2
4149659   +          +    -0.39452648844304 * H2x1_3  +    -1.74269898056816 * H2x1_4
4149660   +          +     0.80663208970159 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.38781845364667 * H2x1_1 + -1.29333236344932 * H2x1_2 + 
-0.39452648844304 * H2x1_3 + -1.74269898056816 * H2x1_4 + 0.80663208970159 * H2x1_5 ;
4149661   +   H3x1_2  =     3.42138045838852 * H2x1_1  +    -2.53755815247586 * H2x1_2
4149662   +          +     1.21718290783021 * H2x1_3  +    -5.59742312960418 * H2x1_4
4149663   +          +     0.93331767575635 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 3.42138045838852 * H2x1_1 + -2.53755815247586 * H2x1_2 + 
1.21718290783021 * H2x1_3 + -5.59742312960418 * H2x1_4 + 0.93331767575635 * H2x1_5 ;
4149664   +   H3x1_3  =      0.3066875685513 * H2x1_1  +     0.06212172151661 * H2x1_2
4149665   +          +     0.54975837436313 * H2x1_3  +    -2.01758242649336 * H2x1_4
4149666   +          +     -1.5405169528484 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.3066875685513 * H2x1_1 + 0.06212172151661 * H2x1_2 + 
0.54975837436313 * H2x1_3 + -2.01758242649336 * H2x1_4 + -1.5405169528484 * H2x1_5 ;
4149667   +   H3x1_4  =     0.75238654454663 * H2x1_1  +      0.8605688517794 * H2x1_2
4149668   +          +    -1.18675726977521 * H2x1_3  +    -0.23106123144614 * H2x1_4
4149669   +          +    -0.26022301590207 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.75238654454663 * H2x1_1 + 0.8605688517794 * H2x1_2 + 
-1.18675726977521 * H2x1_3 + -0.23106123144614 * H2x1_4 + -0.26022301590207 * H2x1_5 ;
4149670   +   H3x1_1  = H3x1_1  +     -1.9857802180333 * H2x2_1
4149671   +          +    -1.83746541265988 * H2x2_2  +    -0.19991218509663 * H2x2_3
4149672   +          +    -1.16358880876987 * H2x2_4  +     0.72072728861384 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -1.9857802180333 * H2x2_1 + -1.83746541265988 * H2x2_2 
+ -0.19991218509663 * H2x2_3 + -1.16358880876987 * H2x2_4 + 0.72072728861384 * H2x2_5 ;
4149673   +   H3x1_2  = H3x1_2  +     0.96937540396367 * H2x2_1
4149674   +          +    -0.36649624165623 * H2x2_2  +     0.89618563330616 * H2x2_3
4149675   +          +    -0.84224721075989 * H2x2_4  +     0.43309698013395 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.96937540396367 * H2x2_1 + -0.36649624165623 * H2x2_2 
+ 0.89618563330616 * H2x2_3 + -0.84224721075989 * H2x2_4 + 0.43309698013395 * H2x2_5 ;
4149676   +   H3x1_3  = H3x1_3  +    -0.90225214765586 * H2x2_1
4149677   +          +     0.02136319386846 * H2x2_2  +    -0.46868394918483 * H2x2_3
4149678   +          +     0.56005845701528 * H2x2_4  +     -1.2510120440755 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.90225214765586 * H2x2_1 + 0.02136319386846 * H2x2_2 
+ -0.46868394918483 * H2x2_3 + 0.56005845701528 * H2x2_4 + -1.2510120440755 * H2x2_5 ;
4149679   +   H3x1_4  = H3x1_4  +    -0.50993520854009 * H2x2_1
4149680   +          +    -2.07093806498525 * H2x2_2  +      0.4129198676448 * H2x2_3
4149681   +          +     0.26049404756746 * H2x2_4  +     2.51376895456424 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + -0.50993520854009 * H2x2_1 + -2.07093806498525 * 
H2x2_2 + 0.4129198676448 * H2x2_3 + 0.26049404756746 * H2x2_4 + 2.51376895456424 * H2x2_5 ;
4149682   +   H3x1_1  =    -0.83299285935592 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.83299285935592 + H3x1_1 ;
4149683   +   H3x1_2  =     1.30330978853872 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 1.30330978853872 + H3x1_2 ;
4149684   +   H3x1_3  =    -2.12788819064089 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -2.12788819064089 + H3x1_3 ;
4149685   +   H3x1_4  =    -2.20240058017016 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -2.20240058017016 + H3x1_4 ;
4149686   +   H3x1_5  = 0;
MPRINT(EM_DIAGRAM):   H3x1_5 = 0;
4149687   +   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 );
4149688   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4149689   +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
4149690   +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
4149691   +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
4149692   +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
4149693   +   H3x1_3  = EXP(H3x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_3 = EXP(H3x1_3 - _MAX_);
4149694   +   _SUM_ = _SUM_ + H3x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_3 ;
4149695   +   H3x1_4  = EXP(H3x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_4 = EXP(H3x1_4 - _MAX_);
4149696   +   _SUM_ = _SUM_ + H3x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_4 ;
4149697   +   H3x1_5  = EXP(H3x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_5 = EXP(H3x1_5 - _MAX_);
4149698   +   _SUM_ = _SUM_ + H3x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_5 ;
4149699   +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
4149700   +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
4149701   +   H3x1_3  = H3x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 / _SUM_;
4149702   +   H3x1_4  = H3x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 / _SUM_;
4149703   +   H3x1_5  = H3x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 / _SUM_;
4149704   +END;
MPRINT(EM_DIAGRAM):   END;
4149705   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4149706   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
4149707   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
4149708   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
4149709   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
4149710   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
4149711   +END;
MPRINT(EM_DIAGRAM):   END;
4149712   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4149713   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4149714   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4149715   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4149716   +   P_DepVar1  =     0.02793808059597 * H3x1_1  +    -8.41365271594755 * H3x1_2
4149717   +          +    -0.18933524733979 * H3x1_3  +     1.61020422729446 * H3x1_4
4149718   +          +     7.51494112828021 * H3x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.02793808059597 * H3x1_1 + -8.41365271594755 * H3x1_2 + 
-0.18933524733979 * H3x1_3 + 1.61020422729446 * H3x1_4 + 7.51494112828021 * H3x1_5 ;
4149719   +   P_DepVar1  =     0.83962115399384 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.83962115399384 + P_DepVar1 ;
4149720   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4149721   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4149722   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4149723   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4149724   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4149725   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4149726   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4149727   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4149728   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4149729   +END;
MPRINT(EM_DIAGRAM):   END;
4149730   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4149731   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4149732   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4149733   +END;
MPRINT(EM_DIAGRAM):   END;
4149734   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4149735   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4149736   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4149737   +END;
MPRINT(EM_DIAGRAM):   END;
4149738   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4149739   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4149740   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4149741   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4149742   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4149743   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4149744   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4149745   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4149746   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4149747   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4149748   +END;
MPRINT(EM_DIAGRAM):   END;
4149749   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4149750   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4149751   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4149752   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4149753    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
4149754    quit;
4149755    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4149756    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4149757    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4149758    retain ID 2 Node "AutoNeural10";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural10";
4149759    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4149760    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 9109 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 9109 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4149761    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4149762    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4149763    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 9109 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 9109 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
      

4149764    proc sort data=EMWS8.AutoNeural10_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural10_variableset out=_temp2(keep=NAME 
CREATOR);
4149765    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4149766    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL10_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4149767    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4149768    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4149769    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4149770    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4149771    proc contents data=EMWS8.AutoNeural10_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural10_train out=_meta(keep=NAME) noprint;
4149772    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 83 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

4149773    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4149774    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4149775    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 83 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 83 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4149776    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4149777    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4149778    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4149779    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 83 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 83 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4149780    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4149781    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4149781  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4449 rows and 5 columns.

4149782    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4149783    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
4149784    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 4449 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 4449 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4149785    filename _pref
4149785  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
4149786    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4149787    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
4149788   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4149789   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
4149790   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4149791   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
4149792   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
4149793   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4149794    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
4149795    quit;
4149796    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4149797    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4149798    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4149799    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
4149800    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4149801    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4149802    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4149803    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4149804    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4149805    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
4149806    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4149807    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4149808    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4149809    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4149810    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4149811    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4149812    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
4149813    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

4149814    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4149815    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4149816    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4149817    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4149818    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4149819    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4149820    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4149821    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4149822    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4149822  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

4149823    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4149824    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
4149825    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 4453 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4149826    filename _pref
4149826  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
4149827    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4149828    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
4149829   +
4149830   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
4149831   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
4149831  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
4149832   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
4149833   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
4149834   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
4149835   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
4149836   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4149837    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
4149838    quit;
4149839    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4149840    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4149841    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4149842    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
4149843    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4149844    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4149845    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4149846    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4149847    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4149848    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
4149849    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4149850    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

4149851    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4149852    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4149853    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4149854    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4149855    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
4149856    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4149857    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4149858    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4149859    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4149860    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4149861    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4149862    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4149863    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4149864    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4149865    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4149865  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

4149866    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4149867    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
4149868    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 4492 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4149869    filename _pref
4149869  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
4149870    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4149871    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
4149872   +
4149873   +
4149874   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
4149875   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
4149876   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
4149877   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
4149878   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
4149879   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4149880   +
4149881   +
4149882   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
4149883   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
4149884   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
4149885   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
4149886   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
4149887   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4149888   +
4149889   +
4149890   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
4149891   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
4149892   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
4149893   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
4149894   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
4149895   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4149896   +
4149897   +
4149898   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
4149899   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
4149900   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
4149901   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
4149902   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
4149903   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4149904   +
4149905   +
4149906   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
4149907   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
4149908   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
4149909   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
4149910   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
4149911   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4149912   +
4149913   +
4149914   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
4149915   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
4149916   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
4149917   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
4149918   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
4149919   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4149920   +
4149921   +
4149922   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
4149923   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
4149924   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
4149925   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
4149926   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
4149927   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4149928   +
4149929   +
4149930   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
4149931   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
4149932   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
4149933   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
4149934   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
4149935   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4149936   +if
4149937   +_FILTERNORM1 not in ( '.')
4149938   + and
4149939   +_FILTERNORM2 not in ( '.')
4149940   + and
4149941   +_FILTERNORM3 not in ( '.')
4149942   + and
4149943   +_FILTERNORM4 not in ( '.')
4149944   + and
4149945   +_FILTERNORM5 not in ( '.')
4149946   + and
4149947   +_FILTERNORM6 not in ( '.')
4149948   + and
4149949   +_FILTERNORM7 not in ( ' ')
4149950   + and
4149951   +_FILTERNORM8 not in ( ' ')
4149952   +and
4149953   +( Dt_Customer ne .)
4149954   +and ( Income ne . and (Income<=107000))
4149955   +and ( Kidhome ne .)
4149956   +and ( MntFishProducts ne .)
4149957   +and ( MntFruits ne .)
4149958   +and ( MntGoldProds ne .)
4149959   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
4149960   +and ( MntSweetProducts ne .)
4149961   +and ( MntWines ne .)
4149962   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
4149963   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
4149964   +and ( NumStorePurchases ne .)
4149965   +and ( NumWebPurchases ne .)
4149966   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
4149967   +and ( Recency ne .)
4149968   +and ( Teenhome ne .)
4149969   +and ( Year_Birth ne .)
4149970   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
4149971   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
4149972   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
4149973   +end;
MPRINT(EM_DIAGRAM):   end;
4149974   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
4149975   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4149976    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
4149977    quit;
4149978    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4149979    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4149980    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4149981    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
4149982    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4149983    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

4149984    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4149985    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4149986    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4149987    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
4149988    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4149989    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4149990    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4149991    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4149992    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4149993    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4149994    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
4149995    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

4149996    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4149997    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4149998    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4149999    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4150000    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4150001    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4150002    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4150003    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4150004    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4150004  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

4150005    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4150006    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
4150007    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 4558 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4150008    %macro varDept(fcmpdata=,id=);
4150009    %global nobs&id scoreFlag&id;
4150010    %let scoreFlag&id = 0;
4150011    %if &id=1 or ^&fcmpStart %then %do;
4150012    proc sort data=&fcmpdata out=_temp&id nodupkey;
4150013    by NAME;
4150014    where id=&id and LHS in( %let j=1;
4150015    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
4150016    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
4150017    "&var" %let j = %eval(&j+1);
4150018    %end;
4150019    );
4150020    run;
4150021    %let dsid = %sysfunc(open(_temp&id));
4150022    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4150023    %let dsid = %sysfunc(close(&dsid));
4150024    %if &&nobs&id %then %do;
4150025    %let scoreFlag&id = 1;
4150026    %let fcmpStart = 1;
4150027    %end;
4150028    %else %let fcmpStart = 0;
4150029    %end;
4150030    %else %do;
4150031    proc sort data=&fcmpdata out=_tempid;
4150032    where id=&id;
4150033    by LHS;
4150034    run;
4150035    %let dsid = %sysfunc(open(_tempid));
4150036    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4150037    %let dsid = %sysfunc(close(&dsid));
4150038    %if ^&&nobs&id %then %do;
4150039    proc datasets lib=work nolist;
4150040    delete _tempid;
4150041    run;
4150042    quit;
4150043    %end;
4150044    %else %do;
4150045    data _tempAll;
4150046    set %let j=%eval(&id-1);
4150047    %do x=1 %to &j;
4150048    %if &&nobs&x %then %do;
4150049    _temp&x %end;
4150050    %end;
4150051    ;
4150052    run;
4150053    proc sql;
4150054    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
4150054  ! work._tempid p2 where p.name=p2.lhs;
4150055    quit;
4150056    data _temp&id;
4150057    set _temp&id;
4150058    where LHS ne '' and NAME ne '' and Node ne '';
4150059    run;
4150060    proc datasets lib=work nolist;
4150061    delete _tempAll;
4150062    run;
4150063    %let dsid = %sysfunc(open(_temp&id));
4150064    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4150065    %let dsid = %sysfunc(close(&dsid));
4150066    %if ^&&nobs&id %then %do;
4150067    proc datasets lib=work nolist;
4150068    delete _temp&id;
4150069    run;
4150070    quit;
4150071    %end;
4150072    %else %do;
4150073    %let scoreFlag&id = 1;
4150074    data _temp&id;
4150075    set _temp&id;
4150076    where LHS ne NAME and node ne '';
4150077    run;
4150078    %let dsid = %sysfunc(open(_temp&id));
4150079    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4150080    %let dsid = %sysfunc(close(&dsid));
4150081    %if ^&&nobs&id %then %do;
4150082    proc datasets lib=work nolist;
4150083    delete _temp&id;
4150084    run;
4150085    quit;
4150086    %end;
4150087    %else %do;
4150088    proc sort data=_temp&id nodupkey;
4150089    by LHS NAME;
4150090    run;
4150091    %end;
4150092    %end;
4150093    %end;
4150094    %end;
4150095    %mend varDept;
4150096    %macro optCode(outdata=fcmpdata);
4150097    %global fcmpStart;
4150098    %let fcmpStart = 0;
4150099    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
4150100    %let NumNodes=9;
4150101    %do k=1 %to &NumNodes;
4150102    %vardept(fcmpdata=&outdata, id=&k);
4150103    %end;
4150104    %mend optCode;
4150105    %optcode(outData=EMWS8.Ensmbl38_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 224 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 160 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 64 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 64 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 64 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 64 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 68 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.19 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 64 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 107 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

4150106    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
4150107    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
4150108    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
4150109    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4150110    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
4150111    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
4150112    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
4150113    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4150114    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4150115    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
4150115  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

4150116    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4150117    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
4150118    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
4150119    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4150120    filename _pref
4150120  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
4150121    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4150122    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas.
4150123   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4150124   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4150125   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4150126   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4150127   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4150128   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4150129   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4150130   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4150131   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4150132   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4150133   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4150134   +LENGTH _WARN_ $4
4150135   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
4150136   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4150137   +
4150138   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4150139   +
4150140   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4150141   +
4150142   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4150143   +
4150144   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4150145   +
4150146   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4150147   +
4150148   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4150149   +
4150150   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4150151   +
4150152   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4150153   +
4150154   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4150155   +
4150156   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4150157   +
4150158   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4150159   +
4150160   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4150161   +
4150162   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4150163   +
4150164   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4150165   +
4150166   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4150167   +
4150168   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4150169   +
4150170   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4150171   +
4150172   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4150173   +
4150174   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4150175   +
4150176   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4150177   +
4150178   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4150179   +
4150180   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4150181   +
4150182   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4150183   +
4150184   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4150185   +
4150186   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4150187   +
4150188   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4150189   +
4150190   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4150191   +
4150192   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4150193   +
4150194   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4150195   +
4150196   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4150197   +
4150198   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4150199   +
4150200   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4150201   +
4150202   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4150203   +
4150204   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4150205   +
4150206   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4150207   +
4150208   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4150209   +
4150210   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4150211   +
4150212   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4150213   +
4150214   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4150215   +
4150216   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
4150217   +
4150218   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
4150219   +
4150220   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4150221   +
4150222   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4150223   +
4150224   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4150225   +
4150226   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4150227   +
4150228   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4150229   +
4150230   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4150231   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4150232   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4150233   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4150234   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4150235   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4150236   +end;
MPRINT(EM_DIAGRAM):   end;
4150237   +else do;
MPRINT(EM_DIAGRAM):   else do;
4150238   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4150239   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4150240   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4150241   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4150242   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4150243   +   end;
MPRINT(EM_DIAGRAM):   end;
4150244   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4150245   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4150246   +   end;
MPRINT(EM_DIAGRAM):   end;
4150247   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4150248   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4150249   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4150250   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4150251   +   end;
MPRINT(EM_DIAGRAM):   end;
4150252   +end;
MPRINT(EM_DIAGRAM):   end;
4150253   +
4150254   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4150255   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4150256   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4150257   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4150258   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4150259   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4150260   +end;
MPRINT(EM_DIAGRAM):   end;
4150261   +else do;
MPRINT(EM_DIAGRAM):   else do;
4150262   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4150263   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4150264   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4150265   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4150266   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4150267   +   end;
MPRINT(EM_DIAGRAM):   end;
4150268   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4150269   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4150270   +   end;
MPRINT(EM_DIAGRAM):   end;
4150271   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4150272   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4150273   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4150274   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4150275   +   end;
MPRINT(EM_DIAGRAM):   end;
4150276   +end;
MPRINT(EM_DIAGRAM):   end;
4150277   +
4150278   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4150279   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4150280   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4150281   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4150282   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4150283   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4150284   +end;
MPRINT(EM_DIAGRAM):   end;
4150285   +else do;
MPRINT(EM_DIAGRAM):   else do;
4150286   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4150287   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4150288   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4150289   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4150290   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4150291   +   end;
MPRINT(EM_DIAGRAM):   end;
4150292   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4150293   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4150294   +   end;
MPRINT(EM_DIAGRAM):   end;
4150295   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4150296   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4150297   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4150298   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4150299   +   end;
MPRINT(EM_DIAGRAM):   end;
4150300   +end;
MPRINT(EM_DIAGRAM):   end;
4150301   +
4150302   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4150303   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4150304   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4150305   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4150306   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4150307   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4150308   +end;
MPRINT(EM_DIAGRAM):   end;
4150309   +else do;
MPRINT(EM_DIAGRAM):   else do;
4150310   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4150311   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4150312   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4150313   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4150314   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4150315   +   end;
MPRINT(EM_DIAGRAM):   end;
4150316   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4150317   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4150318   +   end;
MPRINT(EM_DIAGRAM):   end;
4150319   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4150320   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4150321   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4150322   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4150323   +   end;
MPRINT(EM_DIAGRAM):   end;
4150324   +end;
MPRINT(EM_DIAGRAM):   end;
4150325   +
4150326   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4150327   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4150328   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4150329   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4150330   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4150331   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4150332   +end;
MPRINT(EM_DIAGRAM):   end;
4150333   +else do;
MPRINT(EM_DIAGRAM):   else do;
4150334   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4150335   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4150336   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4150337   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4150338   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4150339   +   end;
MPRINT(EM_DIAGRAM):   end;
4150340   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4150341   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4150342   +   end;
MPRINT(EM_DIAGRAM):   end;
4150343   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4150344   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4150345   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4150346   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4150347   +   end;
MPRINT(EM_DIAGRAM):   end;
4150348   +end;
MPRINT(EM_DIAGRAM):   end;
4150349   +
4150350   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4150351   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4150352   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4150353   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4150354   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4150355   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4150356   +end;
MPRINT(EM_DIAGRAM):   end;
4150357   +else do;
MPRINT(EM_DIAGRAM):   else do;
4150358   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4150359   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4150360   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4150361   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4150362   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4150363   +   end;
MPRINT(EM_DIAGRAM):   end;
4150364   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4150365   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4150366   +   end;
MPRINT(EM_DIAGRAM):   end;
4150367   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4150368   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4150369   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4150370   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4150371   +   end;
MPRINT(EM_DIAGRAM):   end;
4150372   +end;
MPRINT(EM_DIAGRAM):   end;
4150373   +
4150374   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4150375   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4150376   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4150377   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4150378   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4150379   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4150380   +end;
MPRINT(EM_DIAGRAM):   end;
4150381   +else do;
MPRINT(EM_DIAGRAM):   else do;
4150382   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4150383   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4150384   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4150385   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4150386   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4150387   +   end;
MPRINT(EM_DIAGRAM):   end;
4150388   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4150389   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4150390   +   end;
MPRINT(EM_DIAGRAM):   end;
4150391   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4150392   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4150393   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4150394   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4150395   +   end;
MPRINT(EM_DIAGRAM):   end;
4150396   +end;
MPRINT(EM_DIAGRAM):   end;
4150397   +
4150398   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4150399   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
4150400   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4150401   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4150402   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4150403   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4150404   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4150405   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4150406   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4150407   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4150408   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4150409   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4150410   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4150411   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4150412   +end;
MPRINT(EM_DIAGRAM):   end;
4150413   +else do;
MPRINT(EM_DIAGRAM):   else do;
4150414   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4150415   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4150416   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4150417   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4150418   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4150419   +   end;
MPRINT(EM_DIAGRAM):   end;
4150420   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4150421   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4150422   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4150423   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4150424   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4150425   +   end;
MPRINT(EM_DIAGRAM):   end;
4150426   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4150427   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4150428   +   end;
MPRINT(EM_DIAGRAM):   end;
4150429   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4150430   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4150431   +   end;
MPRINT(EM_DIAGRAM):   end;
4150432   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4150433   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4150434   +   end;
MPRINT(EM_DIAGRAM):   end;
4150435   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4150436   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4150437   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4150438   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4150439   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4150440   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4150441   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4150442   +   end;
MPRINT(EM_DIAGRAM):   end;
4150443   +end;
MPRINT(EM_DIAGRAM):   end;
4150444   +
4150445   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4150446   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4150447   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
4150448   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4150449   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4150450   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4150451   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4150452   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4150453   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4150454   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4150455   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4150456   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4150457   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4150458   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4150459   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4150460   +end;
MPRINT(EM_DIAGRAM):   end;
4150461   +else do;
MPRINT(EM_DIAGRAM):   else do;
4150462   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4150463   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4150464   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4150465   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4150466   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4150467   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4150468   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4150469   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4150470   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4150471   +         end;
MPRINT(EM_DIAGRAM):   end;
4150472   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4150473   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4150474   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4150475   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4150476   +            end;
MPRINT(EM_DIAGRAM):   end;
4150477   +         end;
MPRINT(EM_DIAGRAM):   end;
4150478   +      end;
MPRINT(EM_DIAGRAM):   end;
4150479   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4150480   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4150481   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4150482   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4150483   +         end;
MPRINT(EM_DIAGRAM):   end;
4150484   +      end;
MPRINT(EM_DIAGRAM):   end;
4150485   +   end;
MPRINT(EM_DIAGRAM):   end;
4150486   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4150487   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4150488   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4150489   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4150490   +      end;
MPRINT(EM_DIAGRAM):   end;
4150491   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4150492   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4150493   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4150494   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4150495   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4150496   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4150497   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4150498   +         end;
MPRINT(EM_DIAGRAM):   end;
4150499   +      end;
MPRINT(EM_DIAGRAM):   end;
4150500   +   end;
MPRINT(EM_DIAGRAM):   end;
4150501   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4150502   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4150503   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4150504   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4150505   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4150506   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4150507   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4150508   +   end;
MPRINT(EM_DIAGRAM):   end;
4150509   +end;
MPRINT(EM_DIAGRAM):   end;
4150510   +
4150511   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4150512   +*** Checking missing input Interval
4150513   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4150514   +
4150515   +IF NMISS(
4150516   +   AcceptedCmpTotal ,
4150517   +   Age ,
4150518   +   Frq ,
4150519   +   Income ,
4150520   +   Kidhome ,
4150521   +   Mnt ,
4150522   +   MntFishProducts ,
4150523   +   MntFruits ,
4150524   +   MntGoldProds ,
4150525   +   MntMeatProducts ,
4150526   +   MntSweetProducts ,
4150527   +   MntWines ,
4150528   +   MonthsAsCustomer ,
4150529   +   NumCatalogPurchases ,
4150530   +   NumDealsPurchases ,
4150531   +   NumDistPurchases ,
4150532   +   NumStorePurchases ,
4150533   +   NumWebPurchases ,
4150534   +   NumWebVisitsMonth ,
4150535   +   RFMstat ,
4150536   +   RMntFrq ,
4150537   +   Recency ,
4150538   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
4150539   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4150540   +
4150541   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4150542   +END;
MPRINT(EM_DIAGRAM):   END;
4150543   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4150544   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4150545   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4150546   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4150547   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4150548   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
4150549   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4150550   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4150551   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4150552   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4150553   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4150554   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4150555   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
4150556   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4150557   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4150558   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4150559   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4150560   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
4150561   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4150562   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
4150563   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4150564   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4150565   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
4150566   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4150567   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
4150568   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4150569   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
4150570   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4150571   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
4150572   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4150573   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
4150574   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4150575   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
4150576   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4150577   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
4150578   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4150579   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4150580   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4150581   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4150582   +END;
MPRINT(EM_DIAGRAM):   END;
4150583   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4150584   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4150585   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4150586   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
4150587   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4150588   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4150589   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4150590   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4150591   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4150592   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4150593   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4150594   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4150595   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4150596   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4150597   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4150598   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4150599   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
4150600   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4150601   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4150602   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4150603   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4150604   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4150605   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
4150606   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4150607   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4150608   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
4150609   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4150610   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4150611   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
4150612   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4150613   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4150614   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4150615   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4150616   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
4150617   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4150618   +   ELSE S_NumCatalogPurchases
4150619   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4150620   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
4150621   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4150622   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4150623   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
4150624   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4150625   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4150626   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
4150627   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4150628   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4150629   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
4150630   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4150631   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4150632   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
4150633   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4150634   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4150635   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
4150636   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4150637   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4150638   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4150639   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4150640   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4150641   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4150642   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4150643   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4150644   +END;
MPRINT(EM_DIAGRAM):   END;
4150645   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4150646   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4150647   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4150648   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4150649   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4150650   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4150651   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4150652   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4150653   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4150654   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4150655   +   H1x1_1  =    -1.01373445510498 * S_AcceptedCmpTotal
4150656   +          +     0.33447979473871 * S_Age  +    -0.49864038088294 * S_Frq
4150657   +          +     0.31694253224638 * S_Income  +    -0.88502516255759 *
4150658   +        S_Kidhome  +    -0.95839165156922 * S_Mnt  +     1.08690890979971 *
4150659   +        S_MntFishProducts  +     0.21350737967446 * S_MntFruits
4150660   +          +     0.07347211887091 * S_MntGoldProds  +    -4.25839540508751 *
4150661   +        S_MntMeatProducts  +    -0.18409636621761 * S_MntSweetProducts
4150662   +          +     0.92254071667819 * S_MntWines  +     0.17286447654032 *
4150663   +        S_MonthsAsCustomer  +    -1.64446119745791 * S_NumCatalogPurchases
4150664   +          +    -1.14704878034134 * S_NumDealsPurchases
4150665   +          +    -0.17763404274659 * S_NumDistPurchases
4150666   +          +     0.08894400267969 * S_NumStorePurchases
4150667   +          +     0.59283747891957 * S_NumWebPurchases
4150668   +          +     0.85268274682505 * S_NumWebVisitsMonth
4150669   +          +    -0.43035426151546 * S_RFMstat  +     0.52915289749814 *
4150670   +        S_RMntFrq  +    -1.22871580072103 * S_Recency
4150671   +          +    -0.42049179704691 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.01373445510498 * S_AcceptedCmpTotal + 0.33447979473871 * 
S_Age + -0.49864038088294 * S_Frq + 0.31694253224638 * S_Income + -0.88502516255759 * 
S_Kidhome + -0.95839165156922 * S_Mnt + 1.08690890979971 * S_MntFishProducts + 
0.21350737967446 * S_MntFruits + 0.07347211887091 * S_MntGoldProds + -4.25839540508751 * 
S_MntMeatProducts + -0.18409636621761 * S_MntSweetProducts + 0.92254071667819 * S_MntWines + 
0.17286447654032 * S_MonthsAsCustomer + -1.64446119745791 * S_NumCatalogPurchases + 
-1.14704878034134 * S_NumDealsPurchases + -0.17763404274659 * S_NumDistPurchases + 
0.08894400267969 * S_NumStorePurchases + 0.59283747891957 * S_NumWebPurchases + 
0.85268274682505 * S_NumWebVisitsMonth + -0.43035426151546 * S_RFMstat + 0.52915289749814 * 
S_RMntFrq + -1.22871580072103 * S_Recency + -0.42049179704691 * S_Teenhome ;
4150672   +   H1x1_2  =    -0.17196520392875 * S_AcceptedCmpTotal
4150673   +          +     0.09368836975829 * S_Age  +     -0.2079821803313 * S_Frq
4150674   +          +    -0.59508480939905 * S_Income  +     0.34485068405931 *
4150675   +        S_Kidhome  +     0.68503953220301 * S_Mnt  +    -0.41832366462675 *
4150676   +        S_MntFishProducts  +      0.3374808822635 * S_MntFruits
4150677   +          +     0.41521872138137 * S_MntGoldProds  +     1.55234986522641 *
4150678   +        S_MntMeatProducts  +     0.17336981388128 * S_MntSweetProducts
4150679   +          +    -0.03736062165339 * S_MntWines  +     0.20414742233604 *
4150680   +        S_MonthsAsCustomer  +    -1.29756795361717 * S_NumCatalogPurchases
4150681   +          +    -0.80841566068716 * S_NumDealsPurchases
4150682   +          +    -0.17995640033768 * S_NumDistPurchases
4150683   +          +     0.00713417460936 * S_NumStorePurchases
4150684   +          +     0.57881024323076 * S_NumWebPurchases
4150685   +          +    -1.35134224257365 * S_NumWebVisitsMonth
4150686   +          +     0.63440441349443 * S_RFMstat  +      0.7029589919795 *
4150687   +        S_RMntFrq  +     1.16978656262499 * S_Recency
4150688   +          +     0.22916564304766 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.17196520392875 * S_AcceptedCmpTotal + 0.09368836975829 * 
S_Age + -0.2079821803313 * S_Frq + -0.59508480939905 * S_Income + 0.34485068405931 * S_Kidhome 
+ 0.68503953220301 * S_Mnt + -0.41832366462675 * S_MntFishProducts + 0.3374808822635 * 
S_MntFruits + 0.41521872138137 * S_MntGoldProds + 1.55234986522641 * S_MntMeatProducts + 
0.17336981388128 * S_MntSweetProducts + -0.03736062165339 * S_MntWines + 0.20414742233604 * 
S_MonthsAsCustomer + -1.29756795361717 * S_NumCatalogPurchases + -0.80841566068716 * 
S_NumDealsPurchases + -0.17995640033768 * S_NumDistPurchases + 0.00713417460936 * 
S_NumStorePurchases + 0.57881024323076 * S_NumWebPurchases + -1.35134224257365 * 
S_NumWebVisitsMonth + 0.63440441349443 * S_RFMstat + 0.7029589919795 * S_RMntFrq + 
1.16978656262499 * S_Recency + 0.22916564304766 * S_Teenhome ;
4150689   +   H1x1_3  =     1.25968793568007 * S_AcceptedCmpTotal
4150690   +          +     0.16058002256905 * S_Age  +    -1.00283978743671 * S_Frq
4150691   +          +     0.80202770811665 * S_Income  +     -0.7384690128283 *
4150692   +        S_Kidhome  +      0.6320116033322 * S_Mnt  +    -0.48862240567237 *
4150693   +        S_MntFishProducts  +     0.26477442063044 * S_MntFruits
4150694   +          +       0.434753861356 * S_MntGoldProds  +     3.54637875222405 *
4150695   +        S_MntMeatProducts  +    -0.09532877173293 * S_MntSweetProducts
4150696   +          +    -0.60614222423624 * S_MntWines  +     0.06807192728487 *
4150697   +        S_MonthsAsCustomer  +     0.45280110551612 * S_NumCatalogPurchases
4150698   +          +     0.57891364118717 * S_NumDealsPurchases
4150699   +          +    -0.31024556838688 * S_NumDistPurchases
4150700   +          +    -1.48708542986704 * S_NumStorePurchases
4150701   +          +    -0.93009875249206 * S_NumWebPurchases
4150702   +          +     2.01900039122935 * S_NumWebVisitsMonth
4150703   +          +     0.50006472616383 * S_RFMstat  +    -1.16854599018819 *
4150704   +        S_RMntFrq  +    -2.30414631760388 * S_Recency
4150705   +          +    -0.64226055895142 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.25968793568007 * S_AcceptedCmpTotal + 0.16058002256905 * 
S_Age + -1.00283978743671 * S_Frq + 0.80202770811665 * S_Income + -0.7384690128283 * S_Kidhome 
+ 0.6320116033322 * S_Mnt + -0.48862240567237 * S_MntFishProducts + 0.26477442063044 * 
S_MntFruits + 0.434753861356 * S_MntGoldProds + 3.54637875222405 * S_MntMeatProducts + 
-0.09532877173293 * S_MntSweetProducts + -0.60614222423624 * S_MntWines + 0.06807192728487 * 
S_MonthsAsCustomer + 0.45280110551612 * S_NumCatalogPurchases + 0.57891364118717 * 
S_NumDealsPurchases + -0.31024556838688 * S_NumDistPurchases + -1.48708542986704 * 
S_NumStorePurchases + -0.93009875249206 * S_NumWebPurchases + 2.01900039122935 * 
S_NumWebVisitsMonth + 0.50006472616383 * S_RFMstat + -1.16854599018819 * S_RMntFrq + 
-2.30414631760388 * S_Recency + -0.64226055895142 * S_Teenhome ;
4150706   +   H1x1_1  = H1x1_1  +     0.90039925512906 * AcceptedCmp10
4150707   +          +    -0.47386683647261 * AcceptedCmp20  +    -0.71163968851557 *
4150708   +        AcceptedCmp30  +    -1.10005761198573 * AcceptedCmp40
4150709   +          +     0.81604940024858 * AcceptedCmp50  +    -0.03266697009221 *
4150710   +        Complain0  +     0.45877513475435 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.90039925512906 * AcceptedCmp10 + -0.47386683647261 * 
AcceptedCmp20 + -0.71163968851557 * AcceptedCmp30 + -1.10005761198573 * AcceptedCmp40 + 
0.81604940024858 * AcceptedCmp50 + -0.03266697009221 * Complain0 + 0.45877513475435 * 
HigherEducationBinary0 ;
4150711   +   H1x1_2  = H1x1_2  +    -0.09498245462104 * AcceptedCmp10
4150712   +          +     -0.5878058848086 * AcceptedCmp20  +     1.08802173663414 *
4150713   +        AcceptedCmp30  +      0.4681907014168 * AcceptedCmp40
4150714   +          +    -1.71290692396514 * AcceptedCmp50  +    -0.47229847844337 *
4150715   +        Complain0  +     0.41790693564846 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.09498245462104 * AcceptedCmp10 + -0.5878058848086 * 
AcceptedCmp20 + 1.08802173663414 * AcceptedCmp30 + 0.4681907014168 * AcceptedCmp40 + 
-1.71290692396514 * AcceptedCmp50 + -0.47229847844337 * Complain0 + 0.41790693564846 * 
HigherEducationBinary0 ;
4150716   +   H1x1_3  = H1x1_3  +    -0.14466250407205 * AcceptedCmp10
4150717   +          +    -0.05281153450358 * AcceptedCmp20  +     0.30771572513376 *
4150718   +        AcceptedCmp30  +    -0.25237634767535 * AcceptedCmp40
4150719   +          +    -2.36680490171638 * AcceptedCmp50  +    -0.12273085838026 *
4150720   +        Complain0  +     0.40951032893236 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14466250407205 * AcceptedCmp10 + -0.05281153450358 
* AcceptedCmp20 + 0.30771572513376 * AcceptedCmp30 + -0.25237634767535 * AcceptedCmp40 + 
-2.36680490171638 * AcceptedCmp50 + -0.12273085838026 * Complain0 + 0.40951032893236 * 
HigherEducationBinary0 ;
4150721   +   H1x1_1  = H1x1_1  +    -0.00834762223325 * Education2n_Cycle
4150722   +          +    -0.42766880626216 * EducationBasic  +    -0.47517247816239 *
4150723   +        EducationGraduation  +    -0.68730596079478 * EducationMaster
4150724   +          +     0.55883606830033 * Marital_StatusDivorced
4150725   +          +    -0.54530037567066 * Marital_StatusMarried
4150726   +          +    -0.52994736075753 * Marital_StatusSingle
4150727   +          +    -0.53882341831078 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00834762223325 * Education2n_Cycle + 
-0.42766880626216 * EducationBasic + -0.47517247816239 * EducationGraduation + 
-0.68730596079478 * EducationMaster + 0.55883606830033 * Marital_StatusDivorced + 
-0.54530037567066 * Marital_StatusMarried + -0.52994736075753 * Marital_StatusSingle + 
-0.53882341831078 * Marital_StatusTogether ;
4150728   +   H1x1_2  = H1x1_2  +    -0.22709215793074 * Education2n_Cycle
4150729   +          +     0.07643166113928 * EducationBasic  +    -0.97269335071824 *
4150730   +        EducationGraduation  +     0.31201349236277 * EducationMaster
4150731   +          +    -1.07368484057033 * Marital_StatusDivorced
4150732   +          +     2.73313504711262 * Marital_StatusMarried
4150733   +          +    -2.18530462876058 * Marital_StatusSingle
4150734   +          +     2.38158278480467 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.22709215793074 * Education2n_Cycle + 
0.07643166113928 * EducationBasic + -0.97269335071824 * EducationGraduation + 0.31201349236277 
* EducationMaster + -1.07368484057033 * Marital_StatusDivorced + 2.73313504711262 * 
Marital_StatusMarried + -2.18530462876058 * Marital_StatusSingle + 2.38158278480467 * 
Marital_StatusTogether ;
4150735   +   H1x1_3  = H1x1_3  +     0.04453578767387 * Education2n_Cycle
4150736   +          +    -0.65383041132508 * EducationBasic  +    -0.17789960866108 *
4150737   +        EducationGraduation  +    -0.35544166792219 * EducationMaster
4150738   +          +     0.49993144243043 * Marital_StatusDivorced
4150739   +          +    -0.38953339116829 * Marital_StatusMarried
4150740   +          +    -0.10836287319942 * Marital_StatusSingle
4150741   +          +    -0.42049990939036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.04453578767387 * Education2n_Cycle + 
-0.65383041132508 * EducationBasic + -0.17789960866108 * EducationGraduation + 
-0.35544166792219 * EducationMaster + 0.49993144243043 * Marital_StatusDivorced + 
-0.38953339116829 * Marital_StatusMarried + -0.10836287319942 * Marital_StatusSingle + 
-0.42049990939036 * Marital_StatusTogether ;
4150742   +   H1x1_1  =    -0.67322256806566 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.67322256806566 + H1x1_1 ;
4150743   +   H1x1_2  =     1.02621981675321 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.02621981675321 + H1x1_2 ;
4150744   +   H1x1_3  =     1.79721701815172 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.79721701815172 + H1x1_3 ;
4150745   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
4150746   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
4150747   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4150748   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
4150749   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
4150750   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
4150751   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
4150752   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
4150753   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
4150754   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
4150755   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
4150756   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
4150757   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
4150758   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
4150759   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
4150760   +END;
MPRINT(EM_DIAGRAM):   END;
4150761   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4150762   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4150763   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4150764   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
4150765   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
4150766   +END;
MPRINT(EM_DIAGRAM):   END;
4150767   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4150768   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4150769   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4150770   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4150771   +   P_DepVar1  =    -3.84261611144245 * H1x1_1  +    -7.15065431642895 * H1x1_2
4150772   +          +       11.29639646928 * H1x1_3  +    -2.12563351481128 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.84261611144245 * H1x1_1 + -7.15065431642895 * H1x1_2 + 
11.29639646928 * H1x1_3 + -2.12563351481128 * H1x1_4 ;
4150773   +   P_DepVar1  =    -3.54755955929493 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.54755955929493 + P_DepVar1 ;
4150774   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4150775   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4150776   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4150777   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4150778   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4150779   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4150780   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4150781   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4150782   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4150783   +END;
MPRINT(EM_DIAGRAM):   END;
4150784   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4150785   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4150786   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4150787   +END;
MPRINT(EM_DIAGRAM):   END;
4150788   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4150789   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4150790   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4150791   +END;
MPRINT(EM_DIAGRAM):   END;
4150792   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4150793   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4150794   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4150795   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4150796   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4150797   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4150798   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4150799   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4150800   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4150801   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4150802   +END;
MPRINT(EM_DIAGRAM):   END;
4150803   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4150804   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4150805   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4150806   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4150807    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
4150808    quit;
4150809    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4150810    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4150811    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4150812    retain ID 2 Node "AutoNeural9";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural9";
4150813    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4150814    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4150815    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4150816    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4150817    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4150818    proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME 
CREATOR);
4150819    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4150820    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL9_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4150821    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4150822    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4150823    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4150824    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4150825    proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
4150826    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

4150827    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4150828    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4150829    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 57 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4150830    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4150831    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4150832    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4150833    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 57 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 57 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4150834    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4150835    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4150835  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1551 rows and 5 columns.

4150836    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4150837    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
4150838    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1551 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 1551 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4150839    filename _pref
4150839  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
4150840    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4150841    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
4150842   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4150843   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
4150844   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4150845   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
4150846   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
4150847   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4150848    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
4150849    quit;
4150850    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4150851    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4150852    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4150853    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
4150854    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4150855    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4150856    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4150857    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4150858    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4150859    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
4150860    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4150861    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4150862    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4150863    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4150864    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4150865    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4150866    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
4150867    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

4150868    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4150869    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4150870    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4150871    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4150872    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4150873    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4150874    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4150875    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4150876    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4150876  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

4150877    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4150878    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
4150879    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 1555 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4150880    filename _pref
4150880  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
4150881    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4150882    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
4150883   +
4150884   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
4150885   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
4150885  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
4150886   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
4150887   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
4150888   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
4150889   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
4150890   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4150891    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
4150892    quit;
4150893    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4150894    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4150895    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4150896    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
4150897    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4150898    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4150899    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4150900    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4150901    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4150902    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
4150903    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4150904    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4150905    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4150906    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4150907    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4150908    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4150909    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
4150910    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

4150911    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4150912    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4150913    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4150914    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4150915    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4150916    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4150917    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4150918    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4150919    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4150919  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

4150920    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4150921    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
4150922    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 1594 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4150923    filename _pref
4150923  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
4150924    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4150925    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
4150926   +
4150927   +
4150928   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
4150929   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
4150930   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
4150931   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
4150932   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
4150933   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4150934   +
4150935   +
4150936   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
4150937   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
4150938   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
4150939   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
4150940   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
4150941   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4150942   +
4150943   +
4150944   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
4150945   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
4150946   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
4150947   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
4150948   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
4150949   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4150950   +
4150951   +
4150952   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
4150953   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
4150954   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
4150955   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
4150956   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
4150957   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4150958   +
4150959   +
4150960   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
4150961   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
4150962   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
4150963   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
4150964   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
4150965   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4150966   +
4150967   +
4150968   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
4150969   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
4150970   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
4150971   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
The SAS System

4150972   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
4150973   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4150974   +
4150975   +
4150976   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
4150977   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
4150978   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
4150979   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
4150980   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
4150981   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4150982   +
4150983   +
4150984   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
4150985   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
4150986   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
4150987   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
4150988   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
4150989   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4150990   +if
4150991   +_FILTERNORM1 not in ( '.')
4150992   + and
4150993   +_FILTERNORM2 not in ( '.')
4150994   + and
4150995   +_FILTERNORM3 not in ( '.')
4150996   + and
4150997   +_FILTERNORM4 not in ( '.')
4150998   + and
4150999   +_FILTERNORM5 not in ( '.')
4151000   + and
4151001   +_FILTERNORM6 not in ( '.')
4151002   + and
4151003   +_FILTERNORM7 not in ( ' ')
4151004   + and
4151005   +_FILTERNORM8 not in ( ' ')
4151006   +and
4151007   +( Dt_Customer ne .)
4151008   +and ( Income ne . and (Income<=107000))
4151009   +and ( Kidhome ne .)
4151010   +and ( MntFishProducts ne .)
4151011   +and ( MntFruits ne .)
4151012   +and ( MntGoldProds ne .)
4151013   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
4151014   +and ( MntSweetProducts ne .)
4151015   +and ( MntWines ne .)
4151016   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
4151017   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
4151018   +and ( NumStorePurchases ne .)
4151019   +and ( NumWebPurchases ne .)
4151020   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
4151021   +and ( Recency ne .)
4151022   +and ( Teenhome ne .)
4151023   +and ( Year_Birth ne .)
4151024   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
4151025   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
4151026   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
4151027   +end;
MPRINT(EM_DIAGRAM):   end;
4151028   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
4151029   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4151030    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
4151031    quit;
4151032    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4151033    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4151034    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4151035    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
4151036    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4151037    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4151038    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4151039    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4151040    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4151041    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
4151042    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4151043    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4151044    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4151045    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4151046    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4151047    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4151048    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
4151049    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

4151050    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4151051    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4151052    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4151053    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4151054    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4151055    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4151056    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4151057    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4151058    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4151058  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

4151059    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4151060    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
4151061    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 1660 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4151062    %macro varDept(fcmpdata=,id=);
4151063    %global nobs&id scoreFlag&id;
4151064    %let scoreFlag&id = 0;
4151065    %if &id=1 or ^&fcmpStart %then %do;
4151066    proc sort data=&fcmpdata out=_temp&id nodupkey;
4151067    by NAME;
4151068    where id=&id and LHS in( %let j=1;
4151069    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
4151070    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
4151071    "&var" %let j = %eval(&j+1);
4151072    %end;
4151073    );
4151074    run;
4151075    %let dsid = %sysfunc(open(_temp&id));
4151076    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4151077    %let dsid = %sysfunc(close(&dsid));
4151078    %if &&nobs&id %then %do;
4151079    %let scoreFlag&id = 1;
4151080    %let fcmpStart = 1;
4151081    %end;
4151082    %else %let fcmpStart = 0;
4151083    %end;
4151084    %else %do;
4151085    proc sort data=&fcmpdata out=_tempid;
4151086    where id=&id;
4151087    by LHS;
4151088    run;
4151089    %let dsid = %sysfunc(open(_tempid));
4151090    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4151091    %let dsid = %sysfunc(close(&dsid));
4151092    %if ^&&nobs&id %then %do;
4151093    proc datasets lib=work nolist;
4151094    delete _tempid;
4151095    run;
4151096    quit;
4151097    %end;
4151098    %else %do;
4151099    data _tempAll;
4151100    set %let j=%eval(&id-1);
4151101    %do x=1 %to &j;
4151102    %if &&nobs&x %then %do;
4151103    _temp&x %end;
4151104    %end;
4151105    ;
4151106    run;
4151107    proc sql;
4151108    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
4151108  ! work._tempid p2 where p.name=p2.lhs;
4151109    quit;
4151110    data _temp&id;
4151111    set _temp&id;
4151112    where LHS ne '' and NAME ne '' and Node ne '';
4151113    run;
4151114    proc datasets lib=work nolist;
4151115    delete _tempAll;
4151116    run;
4151117    %let dsid = %sysfunc(open(_temp&id));
4151118    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4151119    %let dsid = %sysfunc(close(&dsid));
4151120    %if ^&&nobs&id %then %do;
4151121    proc datasets lib=work nolist;
4151122    delete _temp&id;
4151123    run;
4151124    quit;
4151125    %end;
4151126    %else %do;
4151127    %let scoreFlag&id = 1;
4151128    data _temp&id;
4151129    set _temp&id;
4151130    where LHS ne NAME and node ne '';
4151131    run;
4151132    %let dsid = %sysfunc(open(_temp&id));
4151133    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4151134    %let dsid = %sysfunc(close(&dsid));
4151135    %if ^&&nobs&id %then %do;
4151136    proc datasets lib=work nolist;
4151137    delete _temp&id;
4151138    run;
4151139    quit;
4151140    %end;
4151141    %else %do;
4151142    proc sort data=_temp&id nodupkey;
4151143    by LHS NAME;
4151144    run;
4151145    %end;
4151146    %end;
4151147    %end;
4151148    %end;
4151149    %mend varDept;
4151150    %macro optCode(outdata=fcmpdata);
4151151    %global fcmpStart;
4151152    %let fcmpStart = 0;
4151153    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
4151154    %let NumNodes=9;
4151155    %do k=1 %to &NumNodes;
4151156    %vardept(fcmpdata=&outdata, id=&k);
4151157    %end;
4151158    %mend optCode;
4151159    %optcode(outData=EMWS8.Ensmbl38_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 146 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 108 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 38 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 42 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 81 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

4151160    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
4151161    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
4151162    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
4151163    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4151164    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
4151165    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
4151166    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
4151167    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4151168    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4151169    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
4151169  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

4151170    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4151171    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
4151172    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
4151173    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4151174    filename _pref
4151174  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
4151175    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4151176    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas.
4151177   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4151178   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4151179   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4151180   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4151181   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4151182   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4151183   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4151184   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4151185   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4151186   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4151187   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4151188   +LENGTH _WARN_ $4
4151189   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
4151190   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4151191   +
4151192   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4151193   +
4151194   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4151195   +
4151196   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4151197   +
4151198   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4151199   +
4151200   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4151201   +
4151202   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4151203   +
4151204   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4151205   +
4151206   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4151207   +
4151208   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4151209   +
4151210   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4151211   +
4151212   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4151213   +
4151214   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4151215   +
4151216   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4151217   +
4151218   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4151219   +
4151220   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4151221   +
4151222   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4151223   +
4151224   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4151225   +
4151226   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4151227   +
4151228   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4151229   +
4151230   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4151231   +
4151232   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4151233   +
4151234   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4151235   +
4151236   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4151237   +
4151238   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4151239   +
4151240   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4151241   +
4151242   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4151243   +
4151244   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4151245   +
4151246   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4151247   +
4151248   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4151249   +
4151250   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4151251   +
4151252   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4151253   +
4151254   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4151255   +
4151256   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4151257   +
4151258   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4151259   +
4151260   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4151261   +
4151262   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4151263   +
4151264   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4151265   +
4151266   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4151267   +
4151268   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4151269   +
4151270   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
4151271   +
4151272   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
4151273   +
4151274   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
4151275   +
4151276   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
4151277   +
4151278   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
4151279   +
4151280   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
4151281   +
4151282   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
4151283   +
4151284   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
4151285   +
4151286   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
4151287   +
4151288   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
4151289   +
4151290   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
4151291   +
4151292   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
4151293   +
4151294   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
4151295   +
4151296   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
4151297   +
4151298   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
4151299   +
4151300   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
4151301   +
4151302   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4151303   +
4151304   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4151305   +
4151306   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4151307   +
4151308   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4151309   +
4151310   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4151311   +
4151312   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4151313   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4151314   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4151315   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4151316   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4151317   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4151318   +end;
MPRINT(EM_DIAGRAM):   end;
4151319   +else do;
MPRINT(EM_DIAGRAM):   else do;
4151320   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4151321   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4151322   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4151323   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4151324   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4151325   +   end;
MPRINT(EM_DIAGRAM):   end;
4151326   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4151327   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4151328   +   end;
MPRINT(EM_DIAGRAM):   end;
4151329   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4151330   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4151331   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4151332   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4151333   +   end;
MPRINT(EM_DIAGRAM):   end;
4151334   +end;
MPRINT(EM_DIAGRAM):   end;
4151335   +
4151336   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4151337   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4151338   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4151339   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4151340   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4151341   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4151342   +end;
MPRINT(EM_DIAGRAM):   end;
4151343   +else do;
MPRINT(EM_DIAGRAM):   else do;
4151344   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4151345   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4151346   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4151347   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4151348   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4151349   +   end;
MPRINT(EM_DIAGRAM):   end;
4151350   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4151351   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4151352   +   end;
MPRINT(EM_DIAGRAM):   end;
4151353   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4151354   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4151355   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4151356   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4151357   +   end;
MPRINT(EM_DIAGRAM):   end;
4151358   +end;
MPRINT(EM_DIAGRAM):   end;
4151359   +
4151360   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4151361   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4151362   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4151363   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4151364   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4151365   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4151366   +end;
MPRINT(EM_DIAGRAM):   end;
4151367   +else do;
MPRINT(EM_DIAGRAM):   else do;
4151368   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4151369   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4151370   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4151371   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4151372   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4151373   +   end;
MPRINT(EM_DIAGRAM):   end;
4151374   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4151375   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4151376   +   end;
MPRINT(EM_DIAGRAM):   end;
4151377   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4151378   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4151379   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4151380   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4151381   +   end;
MPRINT(EM_DIAGRAM):   end;
4151382   +end;
MPRINT(EM_DIAGRAM):   end;
4151383   +
4151384   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4151385   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4151386   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4151387   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4151388   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4151389   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4151390   +end;
MPRINT(EM_DIAGRAM):   end;
4151391   +else do;
MPRINT(EM_DIAGRAM):   else do;
4151392   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4151393   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4151394   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4151395   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4151396   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4151397   +   end;
MPRINT(EM_DIAGRAM):   end;
4151398   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4151399   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4151400   +   end;
MPRINT(EM_DIAGRAM):   end;
4151401   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4151402   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4151403   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4151404   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4151405   +   end;
MPRINT(EM_DIAGRAM):   end;
4151406   +end;
MPRINT(EM_DIAGRAM):   end;
4151407   +
4151408   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4151409   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4151410   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4151411   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4151412   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4151413   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4151414   +end;
MPRINT(EM_DIAGRAM):   end;
4151415   +else do;
MPRINT(EM_DIAGRAM):   else do;
4151416   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4151417   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4151418   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4151419   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4151420   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4151421   +   end;
MPRINT(EM_DIAGRAM):   end;
4151422   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4151423   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4151424   +   end;
MPRINT(EM_DIAGRAM):   end;
4151425   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4151426   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4151427   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4151428   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4151429   +   end;
MPRINT(EM_DIAGRAM):   end;
4151430   +end;
MPRINT(EM_DIAGRAM):   end;
4151431   +
4151432   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4151433   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4151434   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4151435   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4151436   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4151437   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4151438   +end;
MPRINT(EM_DIAGRAM):   end;
4151439   +else do;
MPRINT(EM_DIAGRAM):   else do;
4151440   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4151441   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4151442   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4151443   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4151444   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4151445   +   end;
MPRINT(EM_DIAGRAM):   end;
4151446   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4151447   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4151448   +   end;
MPRINT(EM_DIAGRAM):   end;
4151449   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4151450   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4151451   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4151452   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4151453   +   end;
MPRINT(EM_DIAGRAM):   end;
4151454   +end;
MPRINT(EM_DIAGRAM):   end;
4151455   +
4151456   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4151457   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4151458   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4151459   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4151460   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4151461   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4151462   +end;
MPRINT(EM_DIAGRAM):   end;
4151463   +else do;
MPRINT(EM_DIAGRAM):   else do;
4151464   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4151465   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4151466   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4151467   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4151468   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4151469   +   end;
MPRINT(EM_DIAGRAM):   end;
4151470   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4151471   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4151472   +   end;
MPRINT(EM_DIAGRAM):   end;
4151473   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4151474   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4151475   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4151476   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4151477   +   end;
MPRINT(EM_DIAGRAM):   end;
4151478   +end;
MPRINT(EM_DIAGRAM):   end;
4151479   +
4151480   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4151481   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
4151482   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4151483   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4151484   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4151485   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4151486   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4151487   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4151488   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4151489   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4151490   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4151491   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4151492   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4151493   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4151494   +end;
MPRINT(EM_DIAGRAM):   end;
4151495   +else do;
MPRINT(EM_DIAGRAM):   else do;
4151496   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4151497   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4151498   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4151499   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4151500   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4151501   +   end;
MPRINT(EM_DIAGRAM):   end;
4151502   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4151503   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4151504   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4151505   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4151506   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4151507   +   end;
MPRINT(EM_DIAGRAM):   end;
4151508   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4151509   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4151510   +   end;
MPRINT(EM_DIAGRAM):   end;
4151511   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4151512   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4151513   +   end;
MPRINT(EM_DIAGRAM):   end;
4151514   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4151515   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4151516   +   end;
MPRINT(EM_DIAGRAM):   end;
4151517   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4151518   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4151519   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4151520   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4151521   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4151522   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4151523   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4151524   +   end;
MPRINT(EM_DIAGRAM):   end;
4151525   +end;
MPRINT(EM_DIAGRAM):   end;
4151526   +
4151527   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4151528   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4151529   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
4151530   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4151531   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4151532   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4151533   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4151534   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4151535   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4151536   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4151537   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4151538   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4151539   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4151540   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4151541   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4151542   +end;
MPRINT(EM_DIAGRAM):   end;
4151543   +else do;
MPRINT(EM_DIAGRAM):   else do;
4151544   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4151545   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4151546   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4151547   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4151548   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4151549   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4151550   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4151551   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4151552   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4151553   +         end;
MPRINT(EM_DIAGRAM):   end;
4151554   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4151555   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4151556   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4151557   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4151558   +            end;
MPRINT(EM_DIAGRAM):   end;
4151559   +         end;
MPRINT(EM_DIAGRAM):   end;
4151560   +      end;
MPRINT(EM_DIAGRAM):   end;
4151561   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4151562   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4151563   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4151564   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4151565   +         end;
MPRINT(EM_DIAGRAM):   end;
4151566   +      end;
MPRINT(EM_DIAGRAM):   end;
4151567   +   end;
MPRINT(EM_DIAGRAM):   end;
4151568   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4151569   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4151570   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4151571   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4151572   +      end;
MPRINT(EM_DIAGRAM):   end;
4151573   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4151574   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4151575   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4151576   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4151577   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4151578   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4151579   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4151580   +         end;
MPRINT(EM_DIAGRAM):   end;
4151581   +      end;
MPRINT(EM_DIAGRAM):   end;
4151582   +   end;
MPRINT(EM_DIAGRAM):   end;
4151583   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4151584   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4151585   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4151586   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4151587   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4151588   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4151589   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4151590   +   end;
MPRINT(EM_DIAGRAM):   end;
4151591   +end;
MPRINT(EM_DIAGRAM):   end;
4151592   +
4151593   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4151594   +*** Checking missing input Interval
4151595   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4151596   +
4151597   +IF NMISS(
4151598   +   AcceptedCmpTotal ,
4151599   +   Age ,
4151600   +   Frq ,
4151601   +   Income ,
4151602   +   Kidhome ,
4151603   +   Mnt ,
4151604   +   MntFishProducts ,
4151605   +   MntFruits ,
4151606   +   MntGoldProds ,
4151607   +   MntMeatProducts ,
4151608   +   MntSweetProducts ,
4151609   +   MntWines ,
4151610   +   MonthsAsCustomer ,
4151611   +   NumCatalogPurchases ,
4151612   +   NumDealsPurchases ,
4151613   +   NumDistPurchases ,
4151614   +   NumStorePurchases ,
4151615   +   NumWebPurchases ,
4151616   +   NumWebVisitsMonth ,
4151617   +   RFMstat ,
4151618   +   RMntFrq ,
4151619   +   Recency ,
4151620   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
4151621   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4151622   +
4151623   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4151624   +END;
MPRINT(EM_DIAGRAM):   END;
4151625   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4151626   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4151627   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4151628   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4151629   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4151630   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
4151631   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4151632   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4151633   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4151634   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4151635   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4151636   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4151637   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
4151638   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4151639   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4151640   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4151641   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4151642   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
4151643   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4151644   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
4151645   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4151646   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4151647   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
4151648   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4151649   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
4151650   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4151651   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
4151652   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4151653   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
4151654   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4151655   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
4151656   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4151657   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
4151658   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4151659   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
4151660   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4151661   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4151662   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4151663   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4151664   +END;
MPRINT(EM_DIAGRAM):   END;
4151665   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4151666   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4151667   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4151668   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
4151669   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4151670   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4151671   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4151672   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4151673   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4151674   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4151675   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4151676   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4151677   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4151678   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4151679   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4151680   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4151681   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
4151682   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4151683   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4151684   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4151685   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4151686   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4151687   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
4151688   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4151689   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4151690   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
4151691   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4151692   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4151693   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
4151694   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4151695   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4151696   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4151697   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4151698   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
4151699   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4151700   +   ELSE S_NumCatalogPurchases
4151701   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4151702   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
4151703   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4151704   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4151705   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
4151706   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4151707   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4151708   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
4151709   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4151710   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4151711   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
4151712   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4151713   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4151714   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
4151715   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4151716   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4151717   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
4151718   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4151719   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4151720   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4151721   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4151722   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4151723   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4151724   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4151725   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4151726   +END;
MPRINT(EM_DIAGRAM):   END;
4151727   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4151728   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4151729   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4151730   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4151731   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4151732   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4151733   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4151734   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4151735   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4151736   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4151737   +   H1x1_1  =    -0.26269469382558 * S_AcceptedCmpTotal
4151738   +          +    -0.06270768091854 * S_Age  +    -0.71225988503068 * S_Frq
4151739   +          +    -0.19030550341755 * S_Income  +    -0.74001834753219 *
4151740   +        S_Kidhome  +    -0.80050230513362 * S_Mnt  +    -0.70546855957287 *
4151741   +        S_MntFishProducts  +    -0.57876563074872 * S_MntFruits
4151742   +          +    -0.00210300489306 * S_MntGoldProds  +     2.60078237485589 *
4151743   +        S_MntMeatProducts  +     -0.9886407516441 * S_MntSweetProducts
4151744   +          +    -2.97488547819955 * S_MntWines  +    -0.61277940059348 *
4151745   +        S_MonthsAsCustomer  +    -0.00096247683063 * S_NumCatalogPurchases
4151746   +          +     0.89422627895323 * S_NumDealsPurchases
4151747   +          +    -0.13304125929765 * S_NumDistPurchases
4151748   +          +    -1.04568442570811 * S_NumStorePurchases
4151749   +          +    -0.28677765126751 * S_NumWebPurchases
4151750   +          +      1.2327638737509 * S_NumWebVisitsMonth
4151751   +          +     0.67421347247009 * S_RFMstat  +     -0.6166808079836 *
4151752   +        S_RMntFrq  +    -0.86930969765816 * S_Recency
4151753   +          +     0.33815651609216 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.26269469382558 * S_AcceptedCmpTotal + -0.06270768091854 * 
S_Age + -0.71225988503068 * S_Frq + -0.19030550341755 * S_Income + -0.74001834753219 * 
S_Kidhome + -0.80050230513362 * S_Mnt + -0.70546855957287 * S_MntFishProducts + 
-0.57876563074872 * S_MntFruits + -0.00210300489306 * S_MntGoldProds + 2.60078237485589 * 
S_MntMeatProducts + -0.9886407516441 * S_MntSweetProducts + -2.97488547819955 * S_MntWines + 
-0.61277940059348 * S_MonthsAsCustomer + -0.00096247683063 * S_NumCatalogPurchases + 
0.89422627895323 * S_NumDealsPurchases + -0.13304125929765 * S_NumDistPurchases + 
-1.04568442570811 * S_NumStorePurchases + -0.28677765126751 * S_NumWebPurchases + 
1.2327638737509 * S_NumWebVisitsMonth + 0.67421347247009 * S_RFMstat + -0.6166808079836 * 
S_RMntFrq + -0.86930969765816 * S_Recency + 0.33815651609216 * S_Teenhome ;
4151754   +   H1x1_2  =     0.55568777293496 * S_AcceptedCmpTotal
4151755   +          +     0.80213442721076 * S_Age  +     0.34635060456486 * S_Frq
4151756   +          +    -0.74174636901916 * S_Income  +    -0.01217809906509 *
4151757   +        S_Kidhome  +     0.26876993353057 * S_Mnt  +     0.04779395124841 *
4151758   +        S_MntFishProducts  +    -0.48668668697685 * S_MntFruits
4151759   +          +    -0.53984501210781 * S_MntGoldProds  +     2.66892669248667 *
4151760   +        S_MntMeatProducts  +     0.48696031818599 * S_MntSweetProducts
4151761   +          +    -1.59625933837852 * S_MntWines  +     0.06275925418664 *
4151762   +        S_MonthsAsCustomer  +     0.97240339275782 * S_NumCatalogPurchases
4151763   +          +     0.04224590196535 * S_NumDealsPurchases
4151764   +          +     0.76554742700113 * S_NumDistPurchases
4151765   +          +    -0.49155496870812 * S_NumStorePurchases
4151766   +          +     0.59606812744403 * S_NumWebPurchases
4151767   +          +     1.86809286276405 * S_NumWebVisitsMonth
4151768   +          +    -0.40257502974261 * S_RFMstat  +    -1.46120938073597 *
4151769   +        S_RMntFrq  +    -2.09222283465666 * S_Recency
4151770   +          +    -0.29369632363913 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.55568777293496 * S_AcceptedCmpTotal + 0.80213442721076 * 
S_Age + 0.34635060456486 * S_Frq + -0.74174636901916 * S_Income + -0.01217809906509 * 
S_Kidhome + 0.26876993353057 * S_Mnt + 0.04779395124841 * S_MntFishProducts + 
-0.48668668697685 * S_MntFruits + -0.53984501210781 * S_MntGoldProds + 2.66892669248667 * 
S_MntMeatProducts + 0.48696031818599 * S_MntSweetProducts + -1.59625933837852 * S_MntWines + 
0.06275925418664 * S_MonthsAsCustomer + 0.97240339275782 * S_NumCatalogPurchases + 
0.04224590196535 * S_NumDealsPurchases + 0.76554742700113 * S_NumDistPurchases + 
-0.49155496870812 * S_NumStorePurchases + 0.59606812744403 * S_NumWebPurchases + 
1.86809286276405 * S_NumWebVisitsMonth + -0.40257502974261 * S_RFMstat + -1.46120938073597 * 
S_RMntFrq + -2.09222283465666 * S_Recency + -0.29369632363913 * S_Teenhome ;
4151771   +   H1x1_3  =    -1.40689454675752 * S_AcceptedCmpTotal
4151772   +          +     0.22713382517751 * S_Age  +     0.51688429566863 * S_Frq
4151773   +          +    -0.07045670111356 * S_Income  +     1.10344455539307 *
4151774   +        S_Kidhome  +     0.24846532877416 * S_Mnt  +       0.663861249099 *
4151775   +        S_MntFishProducts  +     0.91527393572467 * S_MntFruits
4151776   +          +    -0.30189545909263 * S_MntGoldProds  +    -0.72774030731928 *
4151777   +        S_MntMeatProducts  +     0.66425565932635 * S_MntSweetProducts
4151778   +          +     0.55381627079618 * S_MntWines  +      0.6475533846661 *
4151779   +        S_MonthsAsCustomer  +    -1.28926334887526 * S_NumCatalogPurchases
4151780   +          +    -0.04866536993486 * S_NumDealsPurchases
4151781   +          +    -0.53535979020214 * S_NumDistPurchases
4151782   +          +     2.20634071253676 * S_NumStorePurchases
4151783   +          +      0.6164564989007 * S_NumWebPurchases
4151784   +          +    -0.43396314395263 * S_NumWebVisitsMonth
4151785   +          +     0.05322242552204 * S_RFMstat  +     0.56410623855957 *
4151786   +        S_RMntFrq  +     2.37293441098349 * S_Recency
4151787   +          +     1.20608077690677 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.40689454675752 * S_AcceptedCmpTotal + 0.22713382517751 * 
S_Age + 0.51688429566863 * S_Frq + -0.07045670111356 * S_Income + 1.10344455539307 * S_Kidhome 
+ 0.24846532877416 * S_Mnt + 0.663861249099 * S_MntFishProducts + 0.91527393572467 * 
S_MntFruits + -0.30189545909263 * S_MntGoldProds + -0.72774030731928 * S_MntMeatProducts + 
0.66425565932635 * S_MntSweetProducts + 0.55381627079618 * S_MntWines + 0.6475533846661 * 
S_MonthsAsCustomer + -1.28926334887526 * S_NumCatalogPurchases + -0.04866536993486 * 
S_NumDealsPurchases + -0.53535979020214 * S_NumDistPurchases + 2.20634071253676 * 
S_NumStorePurchases + 0.6164564989007 * S_NumWebPurchases + -0.43396314395263 * 
S_NumWebVisitsMonth + 0.05322242552204 * S_RFMstat + 0.56410623855957 * S_RMntFrq + 
2.37293441098349 * S_Recency + 1.20608077690677 * S_Teenhome ;
4151788   +   H1x1_4  =      0.8853369558336 * S_AcceptedCmpTotal
4151789   +          +    -0.02447538128281 * S_Age  +    -0.42850426895609 * S_Frq
4151790   +          +     2.31972189756282 * S_Income  +    -1.82782672643583 *
4151791   +        S_Kidhome  +     -0.0790436830894 * S_Mnt  +     0.24407556387791 *
4151792   +        S_MntFishProducts  +     0.21000125209328 * S_MntFruits
4151793   +          +     -0.0538417400508 * S_MntGoldProds  +     0.76422967678518 *
4151794   +        S_MntMeatProducts  +     0.14352092131967 * S_MntSweetProducts
4151795   +          +    -0.47732426074136 * S_MntWines  +      0.2881736828404 *
4151796   +        S_MonthsAsCustomer  +     1.08614742409725 * S_NumCatalogPurchases
4151797   +          +     1.37461255707863 * S_NumDealsPurchases
4151798   +          +    -0.17684775000818 * S_NumDistPurchases
4151799   +          +    -0.62755623855535 * S_NumStorePurchases
4151800   +          +    -1.46551649022657 * S_NumWebPurchases
4151801   +          +     3.35784247878638 * S_NumWebVisitsMonth
4151802   +          +      0.0205421093374 * S_RFMstat  +     0.02151146396087 *
4151803   +        S_RMntFrq  +    -2.61971612923471 * S_Recency
4151804   +          +    -1.74888814570254 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.8853369558336 * S_AcceptedCmpTotal + -0.02447538128281 * 
S_Age + -0.42850426895609 * S_Frq + 2.31972189756282 * S_Income + -1.82782672643583 * 
S_Kidhome + -0.0790436830894 * S_Mnt + 0.24407556387791 * S_MntFishProducts + 0.21000125209328 
* S_MntFruits + -0.0538417400508 * S_MntGoldProds + 0.76422967678518 * S_MntMeatProducts + 
0.14352092131967 * S_MntSweetProducts + -0.47732426074136 * S_MntWines + 0.2881736828404 * 
S_MonthsAsCustomer + 1.08614742409725 * S_NumCatalogPurchases + 1.37461255707863 * 
S_NumDealsPurchases + -0.17684775000818 * S_NumDistPurchases + -0.62755623855535 * 
S_NumStorePurchases + -1.46551649022657 * S_NumWebPurchases + 3.35784247878638 * 
S_NumWebVisitsMonth + 0.0205421093374 * S_RFMstat + 0.02151146396087 * S_RMntFrq + 
-2.61971612923471 * S_Recency + -1.74888814570254 * S_Teenhome ;
4151805   +   H1x1_5  =    -1.18321492018094 * S_AcceptedCmpTotal
4151806   +          +    -0.08221927436186 * S_Age  +    -0.42965792034093 * S_Frq
4151807   +          +    -0.82515640369651 * S_Income  +     -0.7955159282868 *
4151808   +        S_Kidhome  +    -0.24623211609742 * S_Mnt  +     1.14929640730402 *
4151809   +        S_MntFishProducts  +     0.37195406994279 * S_MntFruits
4151810   +          +    -0.11860313293867 * S_MntGoldProds  +     -5.1642360901608 *
4151811   +        S_MntMeatProducts  +     0.30315380386519 * S_MntSweetProducts
4151812   +          +     2.66130913318508 * S_MntWines  +    -0.35226665860471 *
4151813   +        S_MonthsAsCustomer  +    -1.90883979010829 * S_NumCatalogPurchases
4151814   +          +    -0.76256677907121 * S_NumDealsPurchases
4151815   +          +    -0.31591571751692 * S_NumDistPurchases
4151816   +          +      0.0506832614089 * S_NumStorePurchases
4151817   +          +      1.4636796923764 * S_NumWebPurchases
4151818   +          +     0.37743519705036 * S_NumWebVisitsMonth
4151819   +          +    -0.69857477383618 * S_RFMstat  +    -0.87851464788137 *
4151820   +        S_RMntFrq  +     0.16854775832723 * S_Recency
4151821   +          +     0.71697705359003 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.18321492018094 * S_AcceptedCmpTotal + -0.08221927436186 * 
S_Age + -0.42965792034093 * S_Frq + -0.82515640369651 * S_Income + -0.7955159282868 * 
S_Kidhome + -0.24623211609742 * S_Mnt + 1.14929640730402 * S_MntFishProducts + 
0.37195406994279 * S_MntFruits + -0.11860313293867 * S_MntGoldProds + -5.1642360901608 * 
S_MntMeatProducts + 0.30315380386519 * S_MntSweetProducts + 2.66130913318508 * S_MntWines + 
-0.35226665860471 * S_MonthsAsCustomer + -1.90883979010829 * S_NumCatalogPurchases + 
-0.76256677907121 * S_NumDealsPurchases + -0.31591571751692 * S_NumDistPurchases + 
0.0506832614089 * S_NumStorePurchases + 1.4636796923764 * S_NumWebPurchases + 0.37743519705036 
* S_NumWebVisitsMonth + -0.69857477383618 * S_RFMstat + -0.87851464788137 * S_RMntFrq + 
0.16854775832723 * S_Recency + 0.71697705359003 * S_Teenhome ;
4151822   +   H1x1_1  = H1x1_1  +    -0.36100598335798 * AcceptedCmp10
4151823   +          +    -0.80162089620833 * AcceptedCmp20  +    -0.32871385645151 *
4151824   +        AcceptedCmp30  +     0.06493645215559 * AcceptedCmp40
4151825   +          +    -0.79430619699627 * AcceptedCmp50  +    -0.55522128705257 *
4151826   +        Complain0  +    -0.30966226382805 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.36100598335798 * AcceptedCmp10 + -0.80162089620833 
* AcceptedCmp20 + -0.32871385645151 * AcceptedCmp30 + 0.06493645215559 * AcceptedCmp40 + 
-0.79430619699627 * AcceptedCmp50 + -0.55522128705257 * Complain0 + -0.30966226382805 * 
HigherEducationBinary0 ;
4151827   +   H1x1_2  = H1x1_2  +    -0.55315398954303 * AcceptedCmp10
4151828   +          +    -0.74882192477453 * AcceptedCmp20  +    -1.00393247543385 *
4151829   +        AcceptedCmp30  +    -0.99157595784247 * AcceptedCmp40
4151830   +          +     -1.3196947648703 * AcceptedCmp50  +    -0.00342039619706 *
4151831   +        Complain0  +     2.02148667926607 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.55315398954303 * AcceptedCmp10 + -0.74882192477453 
* AcceptedCmp20 + -1.00393247543385 * AcceptedCmp30 + -0.99157595784247 * AcceptedCmp40 + 
-1.3196947648703 * AcceptedCmp50 + -0.00342039619706 * Complain0 + 2.02148667926607 * 
HigherEducationBinary0 ;
4151832   +   H1x1_3  = H1x1_3  +    -1.34147425697576 * AcceptedCmp10
4151833   +          +     0.73907016980814 * AcceptedCmp20  +     0.73398008116032 *
4151834   +        AcceptedCmp30  +     0.96308137699431 * AcceptedCmp40
4151835   +          +     0.35561099349684 * AcceptedCmp50  +    -0.31219143781741 *
4151836   +        Complain0  +     0.90693629583865 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -1.34147425697576 * AcceptedCmp10 + 0.73907016980814 * 
AcceptedCmp20 + 0.73398008116032 * AcceptedCmp30 + 0.96308137699431 * AcceptedCmp40 + 
0.35561099349684 * AcceptedCmp50 + -0.31219143781741 * Complain0 + 0.90693629583865 * 
HigherEducationBinary0 ;
4151837   +   H1x1_4  = H1x1_4  +    -0.50580436048114 * AcceptedCmp10
4151838   +          +    -1.02093523515462 * AcceptedCmp20  +    -0.61029325985231 *
4151839   +        AcceptedCmp30  +    -0.73402161144066 * AcceptedCmp40
4151840   +          +      0.1698155397807 * AcceptedCmp50  +    -0.01243044321253 *
4151841   +        Complain0  +    -0.47467816438005 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.50580436048114 * AcceptedCmp10 + -1.02093523515462 
* AcceptedCmp20 + -0.61029325985231 * AcceptedCmp30 + -0.73402161144066 * AcceptedCmp40 + 
0.1698155397807 * AcceptedCmp50 + -0.01243044321253 * Complain0 + -0.47467816438005 * 
HigherEducationBinary0 ;
4151842   +   H1x1_5  = H1x1_5  +     1.58877963639512 * AcceptedCmp10
4151843   +          +     0.71974146614964 * AcceptedCmp20  +    -0.38703518473707 *
4151844   +        AcceptedCmp30  +     0.18491867078918 * AcceptedCmp40
4151845   +          +     0.72124299050214 * AcceptedCmp50  +    -0.27317285634323 *
4151846   +        Complain0  +      0.1433377302902 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.58877963639512 * AcceptedCmp10 + 0.71974146614964 * 
AcceptedCmp20 + -0.38703518473707 * AcceptedCmp30 + 0.18491867078918 * AcceptedCmp40 + 
0.72124299050214 * AcceptedCmp50 + -0.27317285634323 * Complain0 + 0.1433377302902 * 
HigherEducationBinary0 ;
4151847   +   H1x1_1  = H1x1_1  +     0.29126191890253 * Education2n_Cycle
4151848   +          +    -0.73322213407659 * EducationBasic  +     0.33134572731882 *
4151849   +        EducationGraduation  +    -0.37141290775302 * EducationMaster
4151850   +          +     0.68641668264565 * Marital_StatusDivorced
4151851   +          +    -0.81586871439732 * Marital_StatusMarried
4151852   +          +     0.63758920518451 * Marital_StatusSingle
4151853   +          +    -1.07300023346175 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.29126191890253 * Education2n_Cycle + 
-0.73322213407659 * EducationBasic + 0.33134572731882 * EducationGraduation + 
-0.37141290775302 * EducationMaster + 0.68641668264565 * Marital_StatusDivorced + 
-0.81586871439732 * Marital_StatusMarried + 0.63758920518451 * Marital_StatusSingle + 
-1.07300023346175 * Marital_StatusTogether ;
4151854   +   H1x1_2  = H1x1_2  +     0.43078991783629 * Education2n_Cycle
4151855   +          +      0.6169213563952 * EducationBasic  +    -0.30246389091319 *
4151856   +        EducationGraduation  +     -0.4412391934844 * EducationMaster
4151857   +          +     0.05137560133238 * Marital_StatusDivorced
4151858   +          +    -2.24401993266209 * Marital_StatusMarried
4151859   +          +     1.57359386216115 * Marital_StatusSingle
4151860   +          +    -1.81897019215773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.43078991783629 * Education2n_Cycle + 0.6169213563952 
* EducationBasic + -0.30246389091319 * EducationGraduation + -0.4412391934844 * 
EducationMaster + 0.05137560133238 * Marital_StatusDivorced + -2.24401993266209 * 
Marital_StatusMarried + 1.57359386216115 * Marital_StatusSingle + -1.81897019215773 * 
Marital_StatusTogether ;
4151861   +   H1x1_3  = H1x1_3  +     0.59284950139581 * Education2n_Cycle
4151862   +          +     0.47333255206751 * EducationBasic  +     0.43514421192824 *
4151863   +        EducationGraduation  +     0.61492669859334 * EducationMaster
4151864   +          +     -1.0649987815942 * Marital_StatusDivorced
4151865   +          +     0.76065111692388 * Marital_StatusMarried
4151866   +          +    -0.21694149754801 * Marital_StatusSingle
4151867   +          +     1.64182073896148 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.59284950139581 * Education2n_Cycle + 
0.47333255206751 * EducationBasic + 0.43514421192824 * EducationGraduation + 0.61492669859334 
* EducationMaster + -1.0649987815942 * Marital_StatusDivorced + 0.76065111692388 * 
Marital_StatusMarried + -0.21694149754801 * Marital_StatusSingle + 1.64182073896148 * 
Marital_StatusTogether ;
4151868   +   H1x1_4  = H1x1_4  +    -0.77613125849075 * Education2n_Cycle
4151869   +          +     0.26238013539868 * EducationBasic  +    -0.05526420132276 *
4151870   +        EducationGraduation  +     0.04208620358211 * EducationMaster
4151871   +          +     2.02155453548328 * Marital_StatusDivorced
4151872   +          +    -2.60190649735306 * Marital_StatusMarried
4151873   +          +     1.09149388354927 * Marital_StatusSingle
4151874   +          +    -1.15248770613963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.77613125849075 * Education2n_Cycle + 
0.26238013539868 * EducationBasic + -0.05526420132276 * EducationGraduation + 0.04208620358211 
* EducationMaster + 2.02155453548328 * Marital_StatusDivorced + -2.60190649735306 * 
Marital_StatusMarried + 1.09149388354927 * Marital_StatusSingle + -1.15248770613963 * 
Marital_StatusTogether ;
4151875   +   H1x1_5  = H1x1_5  +    -0.03512618332303 * Education2n_Cycle
4151876   +          +    -0.14907811224838 * EducationBasic  +     0.24885029294709 *
4151877   +        EducationGraduation  +    -0.60853091001689 * EducationMaster
4151878   +          +     0.66315970650309 * Marital_StatusDivorced
4151879   +          +    -1.20476729758152 * Marital_StatusMarried
4151880   +          +     0.56175027826397 * Marital_StatusSingle
4151881   +          +    -1.12798745445913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.03512618332303 * Education2n_Cycle + 
-0.14907811224838 * EducationBasic + 0.24885029294709 * EducationGraduation + 
-0.60853091001689 * EducationMaster + 0.66315970650309 * Marital_StatusDivorced + 
-1.20476729758152 * Marital_StatusMarried + 0.56175027826397 * Marital_StatusSingle + 
-1.12798745445913 * Marital_StatusTogether ;
4151882   +   H1x1_1  =      0.8264813299799 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.8264813299799 + H1x1_1 ;
4151883   +   H1x1_2  =     1.35924705880418 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.35924705880418 + H1x1_2 ;
4151884   +   H1x1_3  =    -0.31074016443189 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31074016443189 + H1x1_3 ;
4151885   +   H1x1_4  =    -1.37395810355475 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.37395810355475 + H1x1_4 ;
4151886   +   H1x1_5  =    -0.62889533479826 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.62889533479826 + H1x1_5 ;
4151887   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
4151888   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
4151889   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4151890   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
4151891   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
4151892   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
4151893   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
4151894   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
4151895   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
4151896   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
4151897   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
4151898   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
4151899   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
4151900   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
4151901   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
4151902   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
4151903   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
4151904   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
4151905   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
4151906   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
4151907   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
4151908   +END;
MPRINT(EM_DIAGRAM):   END;
4151909   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4151910   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4151911   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4151912   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
4151913   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
4151914   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
4151915   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
4151916   +END;
MPRINT(EM_DIAGRAM):   END;
4151917   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4151918   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
4151919   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4151920   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4151921   +   H1x2_1  =     0.56269814727649 * S_AcceptedCmpTotal
4151922   +          +    -0.56663088753275 * S_Age  +    -0.08799157593784 * S_Frq
4151923   +          +      0.8158986182256 * S_Income  +     0.25081960997161 *
4151924   +        S_Kidhome  +    -0.53258140179906 * S_Mnt  +     0.15843644803762 *
4151925   +        S_MntFishProducts  +    -0.87373368590299 * S_MntFruits
4151926   +          +     0.02807252984992 * S_MntGoldProds  +     1.41661611364623 *
4151927   +        S_MntMeatProducts  +     1.22431140889383 * S_MntSweetProducts
4151928   +          +    -0.25451913627032 * S_MntWines  +     0.13515407201266 *
4151929   +        S_MonthsAsCustomer  +     1.28583120667445 * S_NumCatalogPurchases
4151930   +          +     1.50005927423985 * S_NumDealsPurchases
4151931   +          +      0.5590536933569 * S_NumDistPurchases
4151932   +          +    -0.61757824339318 * S_NumStorePurchases
4151933   +          +     0.37259686538158 * S_NumWebPurchases
4151934   +          +     2.59725437895564 * S_NumWebVisitsMonth
4151935   +          +     1.61096386499852 * S_RFMstat  +      0.6096177019772 *
4151936   +        S_RMntFrq  +    -2.38795796980324 * S_Recency
4151937   +          +    -0.31987414022375 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.56269814727649 * S_AcceptedCmpTotal + -0.56663088753275 * 
S_Age + -0.08799157593784 * S_Frq + 0.8158986182256 * S_Income + 0.25081960997161 * S_Kidhome 
+ -0.53258140179906 * S_Mnt + 0.15843644803762 * S_MntFishProducts + -0.87373368590299 * 
S_MntFruits + 0.02807252984992 * S_MntGoldProds + 1.41661611364623 * S_MntMeatProducts + 
1.22431140889383 * S_MntSweetProducts + -0.25451913627032 * S_MntWines + 0.13515407201266 * 
S_MonthsAsCustomer + 1.28583120667445 * S_NumCatalogPurchases + 1.50005927423985 * 
S_NumDealsPurchases + 0.5590536933569 * S_NumDistPurchases + -0.61757824339318 * 
S_NumStorePurchases + 0.37259686538158 * S_NumWebPurchases + 2.59725437895564 * 
S_NumWebVisitsMonth + 1.61096386499852 * S_RFMstat + 0.6096177019772 * S_RMntFrq + 
-2.38795796980324 * S_Recency + -0.31987414022375 * S_Teenhome ;
4151938   +   H1x2_2  =    -1.93801069736585 * S_AcceptedCmpTotal
4151939   +          +     1.10394781020217 * S_Age  +    -0.47335296021798 * S_Frq
4151940   +          +    -1.34212492602253 * S_Income  +    -1.34380793722996 *
4151941   +        S_Kidhome  +      0.9110881410704 * S_Mnt  +    -2.21001317666388 *
4151942   +        S_MntFishProducts  +     0.73821267564247 * S_MntFruits
4151943   +          +     0.16536006752146 * S_MntGoldProds  +     0.03402222784641 *
4151944   +        S_MntMeatProducts  +     0.96043668102736 * S_MntSweetProducts
4151945   +          +    -1.40670343451334 * S_MntWines  +     0.81378739821838 *
4151946   +        S_MonthsAsCustomer  +    -0.45596935664336 * S_NumCatalogPurchases
4151947   +          +    -0.09282222088797 * S_NumDealsPurchases
4151948   +          +     0.10726247938321 * S_NumDistPurchases
4151949   +          +     -1.1235971458527 * S_NumStorePurchases
4151950   +          +    -0.78304387839877 * S_NumWebPurchases
4151951   +          +    -0.44139243179956 * S_NumWebVisitsMonth
4151952   +          +    -0.00027499457791 * S_RFMstat  +    -0.71480759211982 *
4151953   +        S_RMntFrq  +     2.19072220135069 * S_Recency
4151954   +          +    -0.32246312005896 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.93801069736585 * S_AcceptedCmpTotal + 1.10394781020217 * 
S_Age + -0.47335296021798 * S_Frq + -1.34212492602253 * S_Income + -1.34380793722996 * 
S_Kidhome + 0.9110881410704 * S_Mnt + -2.21001317666388 * S_MntFishProducts + 0.73821267564247 
* S_MntFruits + 0.16536006752146 * S_MntGoldProds + 0.03402222784641 * S_MntMeatProducts + 
0.96043668102736 * S_MntSweetProducts + -1.40670343451334 * S_MntWines + 0.81378739821838 * 
S_MonthsAsCustomer + -0.45596935664336 * S_NumCatalogPurchases + -0.09282222088797 * 
S_NumDealsPurchases + 0.10726247938321 * S_NumDistPurchases + -1.1235971458527 * 
S_NumStorePurchases + -0.78304387839877 * S_NumWebPurchases + -0.44139243179956 * 
S_NumWebVisitsMonth + -0.00027499457791 * S_RFMstat + -0.71480759211982 * S_RMntFrq + 
2.19072220135069 * S_Recency + -0.32246312005896 * S_Teenhome ;
4151955   +   H1x2_3  =    -0.33286965179681 * S_AcceptedCmpTotal
4151956   +          +     0.25643420238739 * S_Age  +     1.78251276306291 * S_Frq
4151957   +          +     0.42668628662657 * S_Income  +    -0.44555069154972 *
4151958   +        S_Kidhome  +     0.99430376599176 * S_Mnt  +     0.37152911215285 *
4151959   +        S_MntFishProducts  +    -1.00181313725345 * S_MntFruits
4151960   +          +    -1.88393479121141 * S_MntGoldProds  +    -1.71643056154209 *
4151961   +        S_MntMeatProducts  +    -0.69325136508245 * S_MntSweetProducts
4151962   +          +     0.36062578298416 * S_MntWines  +    -1.43361051175418 *
4151963   +        S_MonthsAsCustomer  +     0.92624996511804 * S_NumCatalogPurchases
4151964   +          +     0.35349185459988 * S_NumDealsPurchases
4151965   +          +     0.06853677714859 * S_NumDistPurchases
4151966   +          +    -1.47546012999338 * S_NumStorePurchases
4151967   +          +     0.20926435398916 * S_NumWebPurchases
4151968   +          +    -1.00535683639093 * S_NumWebVisitsMonth
4151969   +          +     0.39738023685345 * S_RFMstat  +     0.54359550262445 *
4151970   +        S_RMntFrq  +    -1.59138379954757 * S_Recency
4151971   +          +    -0.72224029606658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.33286965179681 * S_AcceptedCmpTotal + 0.25643420238739 * 
S_Age + 1.78251276306291 * S_Frq + 0.42668628662657 * S_Income + -0.44555069154972 * S_Kidhome 
+ 0.99430376599176 * S_Mnt + 0.37152911215285 * S_MntFishProducts + -1.00181313725345 * 
S_MntFruits + -1.88393479121141 * S_MntGoldProds + -1.71643056154209 * S_MntMeatProducts + 
-0.69325136508245 * S_MntSweetProducts + 0.36062578298416 * S_MntWines + -1.43361051175418 * 
S_MonthsAsCustomer + 0.92624996511804 * S_NumCatalogPurchases + 0.35349185459988 * 
S_NumDealsPurchases + 0.06853677714859 * S_NumDistPurchases + -1.47546012999338 * 
S_NumStorePurchases + 0.20926435398916 * S_NumWebPurchases + -1.00535683639093 * 
S_NumWebVisitsMonth + 0.39738023685345 * S_RFMstat + 0.54359550262445 * S_RMntFrq + 
-1.59138379954757 * S_Recency + -0.72224029606658 * S_Teenhome ;
4151972   +   H1x2_4  =     -0.0656876758781 * S_AcceptedCmpTotal
4151973   +          +    -0.38220805193452 * S_Age  +    -0.62740801625755 * S_Frq
4151974   +          +     0.62992117571672 * S_Income  +      1.6289723191423 *
4151975   +        S_Kidhome  +     0.37209535830613 * S_Mnt  +     0.55983487785376 *
4151976   +        S_MntFishProducts  +    -2.12992009015736 * S_MntFruits
4151977   +          +    -0.38291517806426 * S_MntGoldProds  +    -1.36584955015054 *
4151978   +        S_MntMeatProducts  +     0.60790195398286 * S_MntSweetProducts
4151979   +          +     2.43674403604903 * S_MntWines  +     -0.0680555682506 *
4151980   +        S_MonthsAsCustomer  +    -0.38141588539042 * S_NumCatalogPurchases
4151981   +          +      0.3873586120272 * S_NumDealsPurchases
4151982   +          +     0.25911651157596 * S_NumDistPurchases
4151983   +          +     1.58922489084287 * S_NumStorePurchases
4151984   +          +     0.49041797743368 * S_NumWebPurchases
4151985   +          +     -1.5425586871929 * S_NumWebVisitsMonth
4151986   +          +    -0.68794085469802 * S_RFMstat  +     1.43555366196783 *
4151987   +        S_RMntFrq  +     1.03099569333498 * S_Recency
4151988   +          +    -0.33160793159803 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.0656876758781 * S_AcceptedCmpTotal + -0.38220805193452 * 
S_Age + -0.62740801625755 * S_Frq + 0.62992117571672 * S_Income + 1.6289723191423 * S_Kidhome 
+ 0.37209535830613 * S_Mnt + 0.55983487785376 * S_MntFishProducts + -2.12992009015736 * 
S_MntFruits + -0.38291517806426 * S_MntGoldProds + -1.36584955015054 * S_MntMeatProducts + 
0.60790195398286 * S_MntSweetProducts + 2.43674403604903 * S_MntWines + -0.0680555682506 * 
S_MonthsAsCustomer + -0.38141588539042 * S_NumCatalogPurchases + 0.3873586120272 * 
S_NumDealsPurchases + 0.25911651157596 * S_NumDistPurchases + 1.58922489084287 * 
S_NumStorePurchases + 0.49041797743368 * S_NumWebPurchases + -1.5425586871929 * 
S_NumWebVisitsMonth + -0.68794085469802 * S_RFMstat + 1.43555366196783 * S_RMntFrq + 
1.03099569333498 * S_Recency + -0.33160793159803 * S_Teenhome ;
4151989   +   H1x2_5  =      1.1619646008295 * S_AcceptedCmpTotal
4151990   +          +     -1.1099918698895 * S_Age  +     1.07090049938562 * S_Frq
4151991   +          +     0.68405730495336 * S_Income  +     0.10310173850527 *
4151992   +        S_Kidhome  +    -0.20536085581003 * S_Mnt  +    -0.13505440333321 *
4151993   +        S_MntFishProducts  +      0.7330354505267 * S_MntFruits
4151994   +          +    -0.09266368133722 * S_MntGoldProds  +     0.11251229112529 *
4151995   +        S_MntMeatProducts  +     0.93293215365852 * S_MntSweetProducts
4151996   +          +    -0.30739945619686 * S_MntWines  +     1.60111236559554 *
4151997   +        S_MonthsAsCustomer  +    -0.55541485540949 * S_NumCatalogPurchases
4151998   +          +    -0.60830880287865 * S_NumDealsPurchases
4151999   +          +      0.0745331267194 * S_NumDistPurchases
4152000   +          +    -1.39472448256952 * S_NumStorePurchases
4152001   +          +     1.95372179969087 * S_NumWebPurchases
4152002   +          +    -0.63307356390404 * S_NumWebVisitsMonth
4152003   +          +    -1.45142676869601 * S_RFMstat  +    -0.89091053567015 *
4152004   +        S_RMntFrq  +    -0.29197897313114 * S_Recency
4152005   +          +     0.02610681671236 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.1619646008295 * S_AcceptedCmpTotal + -1.1099918698895 * S_Age 
+ 1.07090049938562 * S_Frq + 0.68405730495336 * S_Income + 0.10310173850527 * S_Kidhome + 
-0.20536085581003 * S_Mnt + -0.13505440333321 * S_MntFishProducts + 0.7330354505267 * 
S_MntFruits + -0.09266368133722 * S_MntGoldProds + 0.11251229112529 * S_MntMeatProducts + 
0.93293215365852 * S_MntSweetProducts + -0.30739945619686 * S_MntWines + 1.60111236559554 * 
S_MonthsAsCustomer + -0.55541485540949 * S_NumCatalogPurchases + -0.60830880287865 * 
S_NumDealsPurchases + 0.0745331267194 * S_NumDistPurchases + -1.39472448256952 * 
S_NumStorePurchases + 1.95372179969087 * S_NumWebPurchases + -0.63307356390404 * 
S_NumWebVisitsMonth + -1.45142676869601 * S_RFMstat + -0.89091053567015 * S_RMntFrq + 
-0.29197897313114 * S_Recency + 0.02610681671236 * S_Teenhome ;
4152006   +   H1x2_1  = H1x2_1  +    -0.60663534965526 * AcceptedCmp10
4152007   +          +     0.86940361180064 * AcceptedCmp20  +     1.96097801395475 *
4152008   +        AcceptedCmp30  +    -0.07604718607607 * AcceptedCmp40
4152009   +          +    -2.82012437662904 * AcceptedCmp50  +     2.92223307409835 *
4152010   +        Complain0  +      0.7388639458943 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.60663534965526 * AcceptedCmp10 + 0.86940361180064 * 
AcceptedCmp20 + 1.96097801395475 * AcceptedCmp30 + -0.07604718607607 * AcceptedCmp40 + 
-2.82012437662904 * AcceptedCmp50 + 2.92223307409835 * Complain0 + 0.7388639458943 * 
HigherEducationBinary0 ;
4152011   +   H1x2_2  = H1x2_2  +    -0.44975979140124 * AcceptedCmp10
4152012   +          +    -0.14894854897951 * AcceptedCmp20  +     1.05214102326393 *
4152013   +        AcceptedCmp30  +    -0.24568060312448 * AcceptedCmp40
4152014   +          +    -0.32148548771167 * AcceptedCmp50  +    -0.06212131202705 *
4152015   +        Complain0  +    -1.15456299494407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.44975979140124 * AcceptedCmp10 + -0.14894854897951 
* AcceptedCmp20 + 1.05214102326393 * AcceptedCmp30 + -0.24568060312448 * AcceptedCmp40 + 
-0.32148548771167 * AcceptedCmp50 + -0.06212131202705 * Complain0 + -1.15456299494407 * 
HigherEducationBinary0 ;
4152016   +   H1x2_3  = H1x2_3  +     0.05559829595526 * AcceptedCmp10
4152017   +          +    -0.79357273390501 * AcceptedCmp20  +     1.19638475921939 *
4152018   +        AcceptedCmp30  +     -0.4185483500346 * AcceptedCmp40
4152019   +          +     1.62070541716774 * AcceptedCmp50  +     0.42618871432227 *
4152020   +        Complain0  +    -1.31545071935076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.05559829595526 * AcceptedCmp10 + -0.79357273390501 * 
AcceptedCmp20 + 1.19638475921939 * AcceptedCmp30 + -0.4185483500346 * AcceptedCmp40 + 
1.62070541716774 * AcceptedCmp50 + 0.42618871432227 * Complain0 + -1.31545071935076 * 
HigherEducationBinary0 ;
4152021   +   H1x2_4  = H1x2_4  +     0.79295384489774 * AcceptedCmp10
4152022   +          +    -1.12840237512106 * AcceptedCmp20  +     1.32129555401653 *
4152023   +        AcceptedCmp30  +    -0.25952521594596 * AcceptedCmp40
4152024   +          +     0.80872302488736 * AcceptedCmp50  +     1.00677398871609 *
4152025   +        Complain0  +    -0.40309387727555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.79295384489774 * AcceptedCmp10 + -1.12840237512106 * 
AcceptedCmp20 + 1.32129555401653 * AcceptedCmp30 + -0.25952521594596 * AcceptedCmp40 + 
0.80872302488736 * AcceptedCmp50 + 1.00677398871609 * Complain0 + -0.40309387727555 * 
HigherEducationBinary0 ;
4152026   +   H1x2_5  = H1x2_5  +     0.27407087260629 * AcceptedCmp10
4152027   +          +    -1.62993283587806 * AcceptedCmp20  +     -0.7976151702219 *
4152028   +        AcceptedCmp30  +    -1.43236001965205 * AcceptedCmp40
4152029   +          +     0.31785497417833 * AcceptedCmp50  +     -0.4935881696628 *
4152030   +        Complain0  +    -0.90101154412077 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.27407087260629 * AcceptedCmp10 + -1.62993283587806 * 
AcceptedCmp20 + -0.7976151702219 * AcceptedCmp30 + -1.43236001965205 * AcceptedCmp40 + 
0.31785497417833 * AcceptedCmp50 + -0.4935881696628 * Complain0 + -0.90101154412077 * 
HigherEducationBinary0 ;
4152031   +   H1x2_1  = H1x2_1  +    -0.42532202605687 * Education2n_Cycle
4152032   +          +     0.05209663685716 * EducationBasic  +     1.32477268007154 *
4152033   +        EducationGraduation  +    -1.16900224373137 * EducationMaster
4152034   +          +    -1.33377871643323 * Marital_StatusDivorced
4152035   +          +    -0.87184228840898 * Marital_StatusMarried
4152036   +          +     1.41223186340257 * Marital_StatusSingle
4152037   +          +     0.26542930660962 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.42532202605687 * Education2n_Cycle + 
0.05209663685716 * EducationBasic + 1.32477268007154 * EducationGraduation + -1.16900224373137 
* EducationMaster + -1.33377871643323 * Marital_StatusDivorced + -0.87184228840898 * 
Marital_StatusMarried + 1.41223186340257 * Marital_StatusSingle + 0.26542930660962 * 
Marital_StatusTogether ;
4152038   +   H1x2_2  = H1x2_2  +     0.31980851177227 * Education2n_Cycle
4152039   +          +     1.82629979795037 * EducationBasic  +     0.59482979766527 *
4152040   +        EducationGraduation  +     0.38341272155343 * EducationMaster
4152041   +          +    -0.21479890935233 * Marital_StatusDivorced
4152042   +          +     -0.0025459519579 * Marital_StatusMarried
4152043   +          +     1.33900491702264 * Marital_StatusSingle
4152044   +          +     0.31338385402434 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.31980851177227 * Education2n_Cycle + 
1.82629979795037 * EducationBasic + 0.59482979766527 * EducationGraduation + 0.38341272155343 
* EducationMaster + -0.21479890935233 * Marital_StatusDivorced + -0.0025459519579 * 
Marital_StatusMarried + 1.33900491702264 * Marital_StatusSingle + 0.31338385402434 * 
Marital_StatusTogether ;
4152045   +   H1x2_3  = H1x2_3  +     -1.1277686958847 * Education2n_Cycle
4152046   +          +    -0.32701971979058 * EducationBasic  +      0.4361680205519 *
4152047   +        EducationGraduation  +     0.60739269725685 * EducationMaster
4152048   +          +    -0.38307267471999 * Marital_StatusDivorced
4152049   +          +     0.97088969451415 * Marital_StatusMarried
4152050   +          +    -0.28578224473381 * Marital_StatusSingle
4152051   +          +     0.16178086683874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.1277686958847 * Education2n_Cycle + 
-0.32701971979058 * EducationBasic + 0.4361680205519 * EducationGraduation + 0.60739269725685 
* EducationMaster + -0.38307267471999 * Marital_StatusDivorced + 0.97088969451415 * 
Marital_StatusMarried + -0.28578224473381 * Marital_StatusSingle + 0.16178086683874 * 
Marital_StatusTogether ;
4152052   +   H1x2_4  = H1x2_4  +    -1.21481485652985 * Education2n_Cycle
4152053   +          +    -0.30231261977781 * EducationBasic  +     0.33993210461674 *
4152054   +        EducationGraduation  +     0.14160673378252 * EducationMaster
4152055   +          +    -1.42229401093569 * Marital_StatusDivorced
4152056   +          +      0.7234508382397 * Marital_StatusMarried
4152057   +          +    -0.29062202974628 * Marital_StatusSingle
4152058   +          +     1.00102560376832 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.21481485652985 * Education2n_Cycle + 
-0.30231261977781 * EducationBasic + 0.33993210461674 * EducationGraduation + 0.14160673378252 
* EducationMaster + -1.42229401093569 * Marital_StatusDivorced + 0.7234508382397 * 
Marital_StatusMarried + -0.29062202974628 * Marital_StatusSingle + 1.00102560376832 * 
Marital_StatusTogether ;
4152059   +   H1x2_5  = H1x2_5  +     0.47313927233084 * Education2n_Cycle
4152060   +          +     0.53675687099431 * EducationBasic  +    -0.75029054398953 *
4152061   +        EducationGraduation  +     -0.7118631990538 * EducationMaster
4152062   +          +    -0.99067637207205 * Marital_StatusDivorced
4152063   +          +    -0.50245902142079 * Marital_StatusMarried
4152064   +          +     0.54214494533793 * Marital_StatusSingle
4152065   +          +    -1.90023876403873 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.47313927233084 * Education2n_Cycle + 
0.53675687099431 * EducationBasic + -0.75029054398953 * EducationGraduation + -0.7118631990538 
* EducationMaster + -0.99067637207205 * Marital_StatusDivorced + -0.50245902142079 * 
Marital_StatusMarried + 0.54214494533793 * Marital_StatusSingle + -1.90023876403873 * 
Marital_StatusTogether ;
4152066   +   H1x2_1  =    -0.76220110175787 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.76220110175787 + H1x2_1 ;
4152067   +   H1x2_2  =     0.33238308796509 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.33238308796509 + H1x2_2 ;
4152068   +   H1x2_3  =    -1.79229186263718 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.79229186263718 + H1x2_3 ;
4152069   +   H1x2_4  =     2.90076107393596 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 2.90076107393596 + H1x2_4 ;
4152070   +   H1x2_5  =    -1.75965576502183 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.75965576502183 + H1x2_5 ;
4152071   +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
4152072   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
4152073   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4152074   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
4152075   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
4152076   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
4152077   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
4152078   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
4152079   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
4152080   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
4152081   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
4152082   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
4152083   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
4152084   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
4152085   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
4152086   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
4152087   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
4152088   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
4152089   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
4152090   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
4152091   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
4152092   +END;
MPRINT(EM_DIAGRAM):   END;
4152093   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4152094   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
4152095   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
4152096   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
4152097   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
4152098   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
4152099   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
4152100   +END;
MPRINT(EM_DIAGRAM):   END;
4152101   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4152102   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
4152103   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4152104   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4152105   +   H2x1_1  =       1.974359971482 * H1x1_1  +     2.56630185065386 * H1x1_2
4152106   +          +    -2.09978917716486 * H1x1_3  +      2.5733942680354 * H1x1_4
4152107   +          +    -3.36902992698085 * H1x1_5  +    -2.45757278280195 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.974359971482 * H1x1_1 + 2.56630185065386 * H1x1_2 + 
-2.09978917716486 * H1x1_3 + 2.5733942680354 * H1x1_4 + -3.36902992698085 * H1x1_5 + 
-2.45757278280195 * H1x1_6 ;
4152108   +   H2x1_2  =    -0.31797232371002 * H1x1_1  +     1.40395330167402 * H1x1_2
4152109   +          +     1.81616324109762 * H1x1_3  +     1.53849589982775 * H1x1_4
4152110   +          +    -0.63132385856109 * H1x1_5  +    -2.28426391810485 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.31797232371002 * H1x1_1 + 1.40395330167402 * H1x1_2 + 
1.81616324109762 * H1x1_3 + 1.53849589982775 * H1x1_4 + -0.63132385856109 * H1x1_5 + 
-2.28426391810485 * H1x1_6 ;
4152111   +   H2x1_3  =    -1.34821716876354 * H1x1_1  +    -1.59136815069547 * H1x1_2
4152112   +          +     1.51830421093731 * H1x1_3  +     0.25947292816575 * H1x1_4
4152113   +          +     0.68626537551183 * H1x1_5  +     0.08021226539433 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.34821716876354 * H1x1_1 + -1.59136815069547 * H1x1_2 + 
1.51830421093731 * H1x1_3 + 0.25947292816575 * H1x1_4 + 0.68626537551183 * H1x1_5 + 
0.08021226539433 * H1x1_6 ;
4152114   +   H2x1_4  =     1.81371453071507 * H1x1_1  +     2.86509325576366 * H1x1_2
4152115   +          +    -2.51923468751378 * H1x1_3  +     3.48823967488449 * H1x1_4
4152116   +          +    -1.98439811139438 * H1x1_5  +    -1.35359233519863 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.81371453071507 * H1x1_1 + 2.86509325576366 * H1x1_2 + 
-2.51923468751378 * H1x1_3 + 3.48823967488449 * H1x1_4 + -1.98439811139438 * H1x1_5 + 
-1.35359233519863 * H1x1_6 ;
4152117   +   H2x1_5  =     2.41779243188377 * H1x1_1  +     2.38684872287302 * H1x1_2
4152118   +          +    -2.38697428830295 * H1x1_3  +     3.64463866412774 * H1x1_4
4152119   +          +    -6.25925640356471 * H1x1_5  +    -2.41187367604766 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.41779243188377 * H1x1_1 + 2.38684872287302 * H1x1_2 + 
-2.38697428830295 * H1x1_3 + 3.64463866412774 * H1x1_4 + -6.25925640356471 * H1x1_5 + 
-2.41187367604766 * H1x1_6 ;
4152120   +   H2x1_6  =    -0.72042650045348 * H1x1_1  +      0.1896194130913 * H1x1_2
4152121   +          +     0.90899894568677 * H1x1_3  +    -1.82868335056689 * H1x1_4
4152122   +          +     0.25430380699211 * H1x1_5  +     0.21617396847163 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.72042650045348 * H1x1_1 + 0.1896194130913 * H1x1_2 + 
0.90899894568677 * H1x1_3 + -1.82868335056689 * H1x1_4 + 0.25430380699211 * H1x1_5 + 
0.21617396847163 * H1x1_6 ;
4152123   +   H2x1_1  = H2x1_1  +     1.25654059966646 * H1x2_1
4152124   +          +     1.54802434303135 * H1x2_2  +     -0.8831980397117 * H1x2_3
4152125   +          +    -0.06778839937099 * H1x2_4  +      0.5440972304381 * H1x2_5
4152126   +          +      0.2606136576082 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.25654059966646 * H1x2_1 + 1.54802434303135 * H1x2_2 
+ -0.8831980397117 * H1x2_3 + -0.06778839937099 * H1x2_4 + 0.5440972304381 * H1x2_5 + 
0.2606136576082 * H1x2_6 ;
4152127   +   H2x1_2  = H2x1_2  +      1.1804478706954 * H1x2_1
4152128   +          +    -1.54526687654235 * H1x2_2  +    -1.84586479319799 * H1x2_3
4152129   +          +     1.53060510120437 * H1x2_4  +     1.17038673632413 * H1x2_5
4152130   +          +    -0.33816948355449 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.1804478706954 * H1x2_1 + -1.54526687654235 * H1x2_2 
+ -1.84586479319799 * H1x2_3 + 1.53060510120437 * H1x2_4 + 1.17038673632413 * H1x2_5 + 
-0.33816948355449 * H1x2_6 ;
4152131   +   H2x1_3  = H2x1_3  +    -0.17829043463382 * H1x2_1
4152132   +          +    -0.25137506897353 * H1x2_2  +     0.16242586068799 * H1x2_3
4152133   +          +    -0.09404795949359 * H1x2_4  +    -0.46228597203598 * H1x2_5
4152134   +          +    -2.05648585275111 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.17829043463382 * H1x2_1 + -0.25137506897353 * 
H1x2_2 + 0.16242586068799 * H1x2_3 + -0.09404795949359 * H1x2_4 + -0.46228597203598 * H1x2_5 + 
-2.05648585275111 * H1x2_6 ;
4152135   +   H2x1_4  = H2x1_4  +     0.42433995729877 * H1x2_1
4152136   +          +    -0.48506090180667 * H1x2_2  +    -2.00023889633201 * H1x2_3
4152137   +          +    -2.18353148884875 * H1x2_4  +      1.8888560029491 * H1x2_5
4152138   +          +     0.10756694741742 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.42433995729877 * H1x2_1 + -0.48506090180667 * H1x2_2 
+ -2.00023889633201 * H1x2_3 + -2.18353148884875 * H1x2_4 + 1.8888560029491 * H1x2_5 + 
0.10756694741742 * H1x2_6 ;
4152139   +   H2x1_5  = H2x1_5  +     1.56363187716685 * H1x2_1
4152140   +          +    -1.60380055270086 * H1x2_2  +    -0.10253336309679 * H1x2_3
4152141   +          +    -0.70868484989608 * H1x2_4  +    -1.01428312449496 * H1x2_5
4152142   +          +    -0.52564497366659 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.56363187716685 * H1x2_1 + -1.60380055270086 * H1x2_2 
+ -0.10253336309679 * H1x2_3 + -0.70868484989608 * H1x2_4 + -1.01428312449496 * H1x2_5 + 
-0.52564497366659 * H1x2_6 ;
4152143   +   H2x1_6  = H2x1_6  +    -2.54663319607132 * H1x2_1
4152144   +          +    -0.26971572820094 * H1x2_2  +      0.0632302804701 * H1x2_3
4152145   +          +     0.24322354570335 * H1x2_4  +     0.66904111988013 * H1x2_5
4152146   +          +     0.74493468449949 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -2.54663319607132 * H1x2_1 + -0.26971572820094 * 
H1x2_2 + 0.0632302804701 * H1x2_3 + 0.24322354570335 * H1x2_4 + 0.66904111988013 * H1x2_5 + 
0.74493468449949 * H1x2_6 ;
4152147   +   H2x1_1  =    -0.48109096483079 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.48109096483079 + H2x1_1 ;
4152148   +   H2x1_2  =     1.80708027085243 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.80708027085243 + H2x1_2 ;
4152149   +   H2x1_3  =    -0.46023689639613 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.46023689639613 + H2x1_3 ;
4152150   +   H2x1_4  =     0.33871753804401 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.33871753804401 + H2x1_4 ;
4152151   +   H2x1_5  =    -0.31584249921712 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.31584249921712 + H2x1_5 ;
4152152   +   H2x1_6  =     0.30285416134468 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.30285416134468 + H2x1_6 ;
4152153   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
4152154   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
4152155   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
4152156   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
4152157   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
4152158   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
4152159   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
4152160   +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
4152161   +END;
MPRINT(EM_DIAGRAM):   END;
4152162   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4152163   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
4152164   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
4152165   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
4152166   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
4152167   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
4152168   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
4152169   +END;
MPRINT(EM_DIAGRAM):   END;
4152170   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4152171   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4152172   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4152173   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4152174   +   P_DepVar1  =     7.89179702798476 * H2x1_1  +    -2.13955806072986 * H2x1_2
4152175   +          +    -3.88305304025889 * H2x1_3  +     4.07340753853874 * H2x1_4
4152176   +          +     7.74293596833296 * H2x1_5  +     -3.8939011811129 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.89179702798476 * H2x1_1 + -2.13955806072986 * H2x1_2 + 
-3.88305304025889 * H2x1_3 + 4.07340753853874 * H2x1_4 + 7.74293596833296 * H2x1_5 + 
-3.8939011811129 * H2x1_6 ;
4152177   +   P_DepVar1  =    -5.20107973804597 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.20107973804597 + P_DepVar1 ;
4152178   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4152179   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4152180   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4152181   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4152182   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4152183   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4152184   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4152185   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4152186   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4152187   +END;
MPRINT(EM_DIAGRAM):   END;
4152188   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4152189   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4152190   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4152191   +END;
MPRINT(EM_DIAGRAM):   END;
4152192   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4152193   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4152194   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4152195   +END;
MPRINT(EM_DIAGRAM):   END;
4152196   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4152197   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4152198   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4152199   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4152200   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4152201   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4152202   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4152203   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4152204   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4152205   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4152206   +END;
MPRINT(EM_DIAGRAM):   END;
4152207   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4152208   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4152209   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4152210   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4152211    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
4152212    quit;
4152213    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4152214    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4152215    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4152216    retain ID 2 Node "AutoNeural11";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural11";
4152217    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4152218    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 6523 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 6523 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4152219    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4152220    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4152221    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 6523 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 6523 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4152222    proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME 
CREATOR);
4152223    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4152224    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL11_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4152225    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4152226    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4152227    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4152228    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4152229    proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
4152230    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 71 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

4152231    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4152232    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4152233    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 71 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 71 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4152234    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4152235    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4152236    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4152237    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 71 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 71 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4152238    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4152239    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4152239  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3291 rows and 5 columns.

4152240    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4152241    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
4152242    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 3291 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 3291 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4152243    filename _pref
4152243  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
4152244    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4152245    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
4152246   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4152247   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
4152248   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4152249   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
4152250   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
4152251   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4152252    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
4152253    quit;
4152254    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4152255    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4152256    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4152257    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
4152258    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4152259    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4152260    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4152261    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4152262    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4152263    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
4152264    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4152265    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4152266    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4152267    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4152268    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4152269    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4152270    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
4152271    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

4152272    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4152273    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4152274    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4152275    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4152276    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4152277    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4152278    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4152279    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4152280    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4152280  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

4152281    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4152282    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
4152283    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 3295 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4152284    filename _pref
4152284  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
4152285    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4152286    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
4152287   +
4152288   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
4152289   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
4152289  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
4152290   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
4152291   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
4152292   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
4152293   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
4152294   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4152295    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
4152296    quit;
4152297    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4152298    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4152299    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4152300    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
4152301    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4152302    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4152303    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4152304    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4152305    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4152306    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
4152307    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4152308    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4152309    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4152310    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4152311    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4152312    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4152313    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
4152314    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4152315    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4152316    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4152317    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4152318    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4152319    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4152320    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4152321    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4152322    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4152323    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4152323  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

4152324    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4152325    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
4152326    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 3334 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4152327    filename _pref
4152327  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
4152328    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4152329    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
4152330   +
4152331   +
4152332   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
4152333   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
4152334   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
4152335   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
4152336   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
4152337   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4152338   +
4152339   +
4152340   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
4152341   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
4152342   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
4152343   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
4152344   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
4152345   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4152346   +
4152347   +
4152348   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
4152349   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
4152350   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
4152351   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
4152352   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
4152353   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4152354   +
4152355   +
4152356   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
4152357   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
4152358   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
4152359   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
4152360   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
4152361   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4152362   +
4152363   +
4152364   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
4152365   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
4152366   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
4152367   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
4152368   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
4152369   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4152370   +
4152371   +
4152372   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
4152373   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
4152374   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
4152375   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
4152376   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
4152377   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4152378   +
4152379   +
4152380   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
4152381   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
4152382   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
4152383   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
4152384   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
4152385   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4152386   +
4152387   +
4152388   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
4152389   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
4152390   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
4152391   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
4152392   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
4152393   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4152394   +if
4152395   +_FILTERNORM1 not in ( '.')
4152396   + and
4152397   +_FILTERNORM2 not in ( '.')
4152398   + and
4152399   +_FILTERNORM3 not in ( '.')
4152400   + and
4152401   +_FILTERNORM4 not in ( '.')
4152402   + and
4152403   +_FILTERNORM5 not in ( '.')
4152404   + and
4152405   +_FILTERNORM6 not in ( '.')
4152406   + and
4152407   +_FILTERNORM7 not in ( ' ')
4152408   + and
4152409   +_FILTERNORM8 not in ( ' ')
4152410   +and
4152411   +( Dt_Customer ne .)
4152412   +and ( Income ne . and (Income<=107000))
4152413   +and ( Kidhome ne .)
4152414   +and ( MntFishProducts ne .)
4152415   +and ( MntFruits ne .)
4152416   +and ( MntGoldProds ne .)
4152417   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
4152418   +and ( MntSweetProducts ne .)
4152419   +and ( MntWines ne .)
4152420   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
4152421   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
4152422   +and ( NumStorePurchases ne .)
4152423   +and ( NumWebPurchases ne .)
4152424   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
4152425   +and ( Recency ne .)
4152426   +and ( Teenhome ne .)
4152427   +and ( Year_Birth ne .)
4152428   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
4152429   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
4152430   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
4152431   +end;
MPRINT(EM_DIAGRAM):   end;
4152432   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
4152433   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4152434    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
4152435    quit;
4152436    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4152437    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4152438    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4152439    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
4152440    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4152441    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4152442    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4152443    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4152444    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4152445    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
4152446    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4152447    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4152448    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4152449    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4152450    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4152451    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4152452    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
4152453    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

4152454    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4152455    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4152456    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4152457    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4152458    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4152459    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4152460    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4152461    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4152462    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4152462  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

4152463    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4152464    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
4152465    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 3400 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4152466    %macro varDept(fcmpdata=,id=);
4152467    %global nobs&id scoreFlag&id;
4152468    %let scoreFlag&id = 0;
4152469    %if &id=1 or ^&fcmpStart %then %do;
4152470    proc sort data=&fcmpdata out=_temp&id nodupkey;
4152471    by NAME;
4152472    where id=&id and LHS in( %let j=1;
4152473    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
4152474    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
4152475    "&var" %let j = %eval(&j+1);
4152476    %end;
4152477    );
4152478    run;
4152479    %let dsid = %sysfunc(open(_temp&id));
4152480    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4152481    %let dsid = %sysfunc(close(&dsid));
4152482    %if &&nobs&id %then %do;
4152483    %let scoreFlag&id = 1;
4152484    %let fcmpStart = 1;
4152485    %end;
4152486    %else %let fcmpStart = 0;
4152487    %end;
4152488    %else %do;
4152489    proc sort data=&fcmpdata out=_tempid;
4152490    where id=&id;
4152491    by LHS;
4152492    run;
4152493    %let dsid = %sysfunc(open(_tempid));
4152494    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4152495    %let dsid = %sysfunc(close(&dsid));
4152496    %if ^&&nobs&id %then %do;
4152497    proc datasets lib=work nolist;
4152498    delete _tempid;
4152499    run;
4152500    quit;
4152501    %end;
4152502    %else %do;
4152503    data _tempAll;
4152504    set %let j=%eval(&id-1);
4152505    %do x=1 %to &j;
4152506    %if &&nobs&x %then %do;
4152507    _temp&x %end;
4152508    %end;
4152509    ;
4152510    run;
4152511    proc sql;
4152512    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
4152512  ! work._tempid p2 where p.name=p2.lhs;
4152513    quit;
4152514    data _temp&id;
4152515    set _temp&id;
4152516    where LHS ne '' and NAME ne '' and Node ne '';
4152517    run;
4152518    proc datasets lib=work nolist;
4152519    delete _tempAll;
4152520    run;
4152521    %let dsid = %sysfunc(open(_temp&id));
4152522    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4152523    %let dsid = %sysfunc(close(&dsid));
4152524    %if ^&&nobs&id %then %do;
4152525    proc datasets lib=work nolist;
4152526    delete _temp&id;
4152527    run;
4152528    quit;
4152529    %end;
4152530    %else %do;
4152531    %let scoreFlag&id = 1;
4152532    data _temp&id;
4152533    set _temp&id;
4152534    where LHS ne NAME and node ne '';
4152535    run;
4152536    %let dsid = %sysfunc(open(_temp&id));
4152537    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4152538    %let dsid = %sysfunc(close(&dsid));
4152539    %if ^&&nobs&id %then %do;
4152540    proc datasets lib=work nolist;
4152541    delete _temp&id;
4152542    run;
4152543    quit;
4152544    %end;
4152545    %else %do;
4152546    proc sort data=_temp&id nodupkey;
4152547    by LHS NAME;
4152548    run;
4152549    %end;
4152550    %end;
4152551    %end;
4152552    %end;
4152553    %mend varDept;
4152554    %macro optCode(outdata=fcmpdata);
4152555    %global fcmpStart;
4152556    %let fcmpStart = 0;
4152557    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
4152558    %let NumNodes=9;
4152559    %do k=1 %to &NumNodes;
4152560    %vardept(fcmpdata=&outdata, id=&k);
4152561    %end;
4152562    %mend optCode;
4152563    %optcode(outData=EMWS8.Ensmbl38_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 188 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 136 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 52 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 52 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 56 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 95 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

4152564    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
4152565    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
4152566    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
4152567    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4152568    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
4152569    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
4152570    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
4152571    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4152572    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4152573    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
4152573  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

4152574    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4152575    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
4152576    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
4152577    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4152578    filename _pref
4152578  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
4152579    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4152580    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas.
4152581   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4152582   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
4152583   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
4152584   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
4152585   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
4152586   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
4152587   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
4152588   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
4152589   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
4152590   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
4152591   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
4152592   +LENGTH _WARN_ $4
4152593   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
4152594   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
4152595   +
4152596   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
4152597   +
4152598   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
4152599   +
4152600   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
4152601   +
4152602   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
4152603   +
4152604   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
4152605   +
4152606   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
4152607   +
4152608   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
4152609   +
4152610   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
4152611   +
4152612   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
4152613   +
4152614   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
4152615   +
4152616   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
4152617   +
4152618   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
4152619   +
4152620   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
4152621   +
4152622   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
4152623   +
4152624   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
4152625   +
4152626   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
4152627   +
4152628   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
4152629   +
4152630   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
4152631   +
4152632   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
4152633   +
4152634   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
4152635   +
4152636   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
4152637   +
4152638   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
4152639   +
4152640   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
4152641   +
4152642   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
4152643   +
4152644   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
4152645   +
4152646   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
4152647   +
4152648   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
4152649   +
4152650   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
4152651   +
4152652   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
4152653   +
4152654   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
4152655   +
4152656   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
4152657   +
4152658   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
4152659   +
4152660   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
4152661   +
4152662   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
4152663   +
4152664   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
4152665   +
4152666   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
4152667   +
4152668   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
4152669   +
4152670   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
4152671   +
4152672   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
4152673   +
4152674   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
4152675   +
4152676   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
4152677   +
4152678   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
4152679   +
4152680   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
4152681   +
4152682   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
4152683   +
4152684   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
4152685   +
4152686   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
4152687   +
4152688   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
4152689   +
4152690   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
4152691   +
4152692   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
4152693   +
4152694   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
4152695   +
4152696   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
4152697   +
4152698   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
4152699   +
4152700   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
4152701   +
4152702   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
4152703   +
4152704   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
4152705   +
4152706   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
4152707   +
4152708   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
4152709   +
4152710   +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
4152711   +
4152712   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
4152713   +
4152714   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
4152715   +
4152716   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
4152717   +
4152718   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
4152719   +
4152720   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
4152721   +
4152722   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
4152723   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
4152724   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
4152725   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4152726   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4152727   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4152728   +end;
MPRINT(EM_DIAGRAM):   end;
4152729   +else do;
MPRINT(EM_DIAGRAM):   else do;
4152730   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4152731   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
4152732   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4152733   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4152734   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
4152735   +   end;
MPRINT(EM_DIAGRAM):   end;
4152736   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4152737   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
4152738   +   end;
MPRINT(EM_DIAGRAM):   end;
4152739   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4152740   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
4152741   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4152742   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4152743   +   end;
MPRINT(EM_DIAGRAM):   end;
4152744   +end;
MPRINT(EM_DIAGRAM):   end;
4152745   +
4152746   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
4152747   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
4152748   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
4152749   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4152750   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4152751   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4152752   +end;
MPRINT(EM_DIAGRAM):   end;
4152753   +else do;
MPRINT(EM_DIAGRAM):   else do;
4152754   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4152755   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
4152756   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4152757   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4152758   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
4152759   +   end;
MPRINT(EM_DIAGRAM):   end;
4152760   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4152761   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
4152762   +   end;
MPRINT(EM_DIAGRAM):   end;
4152763   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4152764   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
4152765   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4152766   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4152767   +   end;
MPRINT(EM_DIAGRAM):   end;
4152768   +end;
MPRINT(EM_DIAGRAM):   end;
4152769   +
4152770   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
4152771   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
4152772   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
4152773   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4152774   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4152775   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4152776   +end;
MPRINT(EM_DIAGRAM):   end;
4152777   +else do;
MPRINT(EM_DIAGRAM):   else do;
4152778   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4152779   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
4152780   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4152781   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4152782   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
4152783   +   end;
MPRINT(EM_DIAGRAM):   end;
4152784   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4152785   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
4152786   +   end;
MPRINT(EM_DIAGRAM):   end;
4152787   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4152788   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
4152789   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4152790   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4152791   +   end;
MPRINT(EM_DIAGRAM):   end;
4152792   +end;
MPRINT(EM_DIAGRAM):   end;
4152793   +
4152794   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
4152795   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
4152796   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
4152797   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4152798   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4152799   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4152800   +end;
MPRINT(EM_DIAGRAM):   end;
4152801   +else do;
MPRINT(EM_DIAGRAM):   else do;
4152802   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4152803   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
4152804   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4152805   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4152806   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
4152807   +   end;
MPRINT(EM_DIAGRAM):   end;
4152808   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4152809   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
4152810   +   end;
MPRINT(EM_DIAGRAM):   end;
4152811   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4152812   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
4152813   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4152814   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4152815   +   end;
MPRINT(EM_DIAGRAM):   end;
4152816   +end;
MPRINT(EM_DIAGRAM):   end;
4152817   +
4152818   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
4152819   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
4152820   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
4152821   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4152822   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4152823   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4152824   +end;
MPRINT(EM_DIAGRAM):   end;
4152825   +else do;
MPRINT(EM_DIAGRAM):   else do;
4152826   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4152827   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
4152828   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4152829   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4152830   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
4152831   +   end;
MPRINT(EM_DIAGRAM):   end;
4152832   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4152833   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
4152834   +   end;
MPRINT(EM_DIAGRAM):   end;
4152835   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4152836   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
4152837   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4152838   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4152839   +   end;
MPRINT(EM_DIAGRAM):   end;
4152840   +end;
MPRINT(EM_DIAGRAM):   end;
4152841   +
4152842   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
4152843   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
4152844   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
4152845   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4152846   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4152847   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4152848   +end;
MPRINT(EM_DIAGRAM):   end;
4152849   +else do;
MPRINT(EM_DIAGRAM):   else do;
4152850   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4152851   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
4152852   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4152853   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
4152854   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
4152855   +   end;
MPRINT(EM_DIAGRAM):   end;
4152856   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
4152857   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
4152858   +   end;
MPRINT(EM_DIAGRAM):   end;
4152859   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4152860   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
4152861   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4152862   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4152863   +   end;
MPRINT(EM_DIAGRAM):   end;
4152864   +end;
MPRINT(EM_DIAGRAM):   end;
4152865   +
4152866   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
4152867   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
4152868   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
4152869   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4152870   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4152871   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4152872   +end;
MPRINT(EM_DIAGRAM):   end;
4152873   +else do;
MPRINT(EM_DIAGRAM):   else do;
4152874   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
4152875   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
4152876   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4152877   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
4152878   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
4152879   +   end;
MPRINT(EM_DIAGRAM):   end;
4152880   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
4152881   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
4152882   +   end;
MPRINT(EM_DIAGRAM):   end;
4152883   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4152884   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
4152885   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4152886   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4152887   +   end;
MPRINT(EM_DIAGRAM):   end;
4152888   +end;
MPRINT(EM_DIAGRAM):   end;
4152889   +
4152890   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
4152891   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
4152892   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4152893   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
4152894   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
4152895   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
4152896   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
4152897   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
4152898   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4152899   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4152900   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4152901   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4152902   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4152903   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4152904   +end;
MPRINT(EM_DIAGRAM):   end;
4152905   +else do;
MPRINT(EM_DIAGRAM):   else do;
4152906   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
4152907   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
4152908   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4152909   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
4152910   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
4152911   +   end;
MPRINT(EM_DIAGRAM):   end;
4152912   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
4152913   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
4152914   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
4152915   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
4152916   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
4152917   +   end;
MPRINT(EM_DIAGRAM):   end;
4152918   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
4152919   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
4152920   +   end;
MPRINT(EM_DIAGRAM):   end;
4152921   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
4152922   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
4152923   +   end;
MPRINT(EM_DIAGRAM):   end;
4152924   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
4152925   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
4152926   +   end;
MPRINT(EM_DIAGRAM):   end;
4152927   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4152928   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
4152929   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
4152930   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
4152931   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
4152932   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4152933   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4152934   +   end;
MPRINT(EM_DIAGRAM):   end;
4152935   +end;
MPRINT(EM_DIAGRAM):   end;
4152936   +
4152937   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
4152938   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
4152939   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
4152940   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
4152941   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
4152942   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
4152943   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
4152944   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
4152945   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
4152946   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4152947   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4152948   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4152949   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4152950   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
4152951   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4152952   +end;
MPRINT(EM_DIAGRAM):   end;
4152953   +else do;
MPRINT(EM_DIAGRAM):   else do;
4152954   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
4152955   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
4152956   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
4152957   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
4152958   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
4152959   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
4152960   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
4152961   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
4152962   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4152963   +         end;
MPRINT(EM_DIAGRAM):   end;
4152964   +         else do;
MPRINT(EM_DIAGRAM):   else do;
4152965   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
4152966   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
4152967   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4152968   +            end;
MPRINT(EM_DIAGRAM):   end;
4152969   +         end;
MPRINT(EM_DIAGRAM):   end;
4152970   +      end;
MPRINT(EM_DIAGRAM):   end;
4152971   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4152972   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
4152973   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
4152974   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4152975   +         end;
MPRINT(EM_DIAGRAM):   end;
4152976   +      end;
MPRINT(EM_DIAGRAM):   end;
4152977   +   end;
MPRINT(EM_DIAGRAM):   end;
4152978   +   else do;
MPRINT(EM_DIAGRAM):   else do;
4152979   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
4152980   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
4152981   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4152982   +      end;
MPRINT(EM_DIAGRAM):   end;
4152983   +      else do;
MPRINT(EM_DIAGRAM):   else do;
4152984   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
4152985   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
4152986   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
4152987   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
4152988   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
4152989   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
4152990   +         end;
MPRINT(EM_DIAGRAM):   end;
4152991   +      end;
MPRINT(EM_DIAGRAM):   end;
4152992   +   end;
MPRINT(EM_DIAGRAM):   end;
4152993   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
4152994   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
4152995   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
4152996   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
4152997   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
4152998   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
4152999   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4153000   +   end;
MPRINT(EM_DIAGRAM):   end;
4153001   +end;
MPRINT(EM_DIAGRAM):   end;
4153002   +
4153003   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4153004   +*** Checking missing input Interval
4153005   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
4153006   +
4153007   +IF NMISS(
4153008   +   AcceptedCmpTotal ,
4153009   +   Age ,
4153010   +   Frq ,
4153011   +   Income ,
4153012   +   Kidhome ,
4153013   +   Mnt ,
4153014   +   MntFishProducts ,
4153015   +   MntFruits ,
4153016   +   MntGoldProds ,
4153017   +   MntMeatProducts ,
4153018   +   MntSweetProducts ,
4153019   +   MntWines ,
4153020   +   MonthsAsCustomer ,
4153021   +   NumCatalogPurchases ,
4153022   +   NumDealsPurchases ,
4153023   +   NumDistPurchases ,
4153024   +   NumStorePurchases ,
4153025   +   NumWebPurchases ,
4153026   +   NumWebVisitsMonth ,
4153027   +   RFMstat ,
4153028   +   RMntFrq ,
4153029   +   Recency ,
4153030   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
4153031   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
4153032   +
4153033   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
4153034   +END;
MPRINT(EM_DIAGRAM):   END;
4153035   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4153036   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
4153037   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4153038   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4153039   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4153040   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
4153041   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4153042   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4153043   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4153044   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4153045   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4153046   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4153047   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
4153048   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4153049   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4153050   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
4153051   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4153052   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
4153053   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4153054   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
4153055   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4153056   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4153057   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
4153058   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
4153059   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
4153060   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4153061   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
4153062   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4153063   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
4153064   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4153065   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
4153066   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4153067   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
4153068   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4153069   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
4153070   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4153071   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4153072   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4153073   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4153074   +END;
MPRINT(EM_DIAGRAM):   END;
4153075   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4153076   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
4153077   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
4153078   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
4153079   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
4153080   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
4153081   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
4153082   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
4153083   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
4153084   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
4153085   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
4153086   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
4153087   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
4153088   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
4153089   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
4153090   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
4153091   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
4153092   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
4153093   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
4153094   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
4153095   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
4153096   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
4153097   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
4153098   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
4153099   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
4153100   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
4153101   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
4153102   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
4153103   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
4153104   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
4153105   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
4153106   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
4153107   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
4153108   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
4153109   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
4153110   +   ELSE S_NumCatalogPurchases
4153111   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
4153112   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
4153113   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
4153114   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
4153115   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
4153116   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
4153117   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
4153118   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
4153119   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
4153120   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
4153121   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
4153122   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
4153123   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
4153124   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
4153125   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
4153126   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
4153127   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
4153128   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
4153129   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
4153130   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
4153131   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
4153132   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
4153133   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
4153134   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
4153135   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
4153136   +END;
MPRINT(EM_DIAGRAM):   END;
4153137   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4153138   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
4153139   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4153140   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4153141   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
4153142   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4153143   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4153144   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
4153145   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4153146   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4153147   +   H1x1_1  =     0.63316204656896 * S_AcceptedCmpTotal
4153148   +          +    -0.24884200883415 * S_Age  +      -0.236584005151 * S_Frq
4153149   +          +     0.25406117591995 * S_Income  +    -0.56304122955704 *
4153150   +        S_Kidhome  +    -0.23687782938793 * S_Mnt  +    -0.09770906650074 *
4153151   +        S_MntFishProducts  +    -0.73487360819716 * S_MntFruits
4153152   +          +     0.14293909908147 * S_MntGoldProds  +     2.25015000307426 *
4153153   +        S_MntMeatProducts  +    -0.42178958150661 * S_MntSweetProducts
4153154   +          +    -2.35340366839307 * S_MntWines  +    -0.02380265380154 *
4153155   +        S_MonthsAsCustomer  +     1.16509321438746 * S_NumCatalogPurchases
4153156   +          +     1.17276395296242 * S_NumDealsPurchases
4153157   +          +     0.26632768295477 * S_NumDistPurchases
4153158   +          +    -1.26575615903579 * S_NumStorePurchases
4153159   +          +    -0.95316107557927 * S_NumWebPurchases
4153160   +          +     1.01828574356487 * S_NumWebVisitsMonth
4153161   +          +       0.795866263515 * S_RFMstat  +    -0.20490378142832 *
4153162   +        S_RMntFrq  +    -0.82943281422857 * S_Recency
4153163   +          +     0.16132418388418 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.63316204656896 * S_AcceptedCmpTotal + -0.24884200883415 * 
S_Age + -0.236584005151 * S_Frq + 0.25406117591995 * S_Income + -0.56304122955704 * S_Kidhome 
+ -0.23687782938793 * S_Mnt + -0.09770906650074 * S_MntFishProducts + -0.73487360819716 * 
S_MntFruits + 0.14293909908147 * S_MntGoldProds + 2.25015000307426 * S_MntMeatProducts + 
-0.42178958150661 * S_MntSweetProducts + -2.35340366839307 * S_MntWines + -0.02380265380154 * 
S_MonthsAsCustomer + 1.16509321438746 * S_NumCatalogPurchases + 1.17276395296242 * 
S_NumDealsPurchases + 0.26632768295477 * S_NumDistPurchases + -1.26575615903579 * 
S_NumStorePurchases + -0.95316107557927 * S_NumWebPurchases + 1.01828574356487 * 
S_NumWebVisitsMonth + 0.795866263515 * S_RFMstat + -0.20490378142832 * S_RMntFrq + 
-0.82943281422857 * S_Recency + 0.16132418388418 * S_Teenhome ;
4153164   +   H1x1_2  =    -0.43482920479481 * S_AcceptedCmpTotal
4153165   +          +     0.53350211221915 * S_Age  +    -0.06797700766223 * S_Frq
4153166   +          +     0.13771322007949 * S_Income  +     0.87012019559698 *
4153167   +        S_Kidhome  +     0.06026853274247 * S_Mnt  +    -0.43150595882972 *
4153168   +        S_MntFishProducts  +    -0.13728591661063 * S_MntFruits
4153169   +          +     0.35443873962923 * S_MntGoldProds  +     0.28102965401547 *
4153170   +        S_MntMeatProducts  +     0.52367949052365 * S_MntSweetProducts
4153171   +          +     0.35553595364078 * S_MntWines  +     0.37892120128383 *
4153172   +        S_MonthsAsCustomer  +     0.59057645965187 * S_NumCatalogPurchases
4153173   +          +     1.14485571201233 * S_NumDealsPurchases
4153174   +          +     0.21414266588987 * S_NumDistPurchases
4153175   +          +    -0.10530090074297 * S_NumStorePurchases
4153176   +          +    -0.41712321238458 * S_NumWebPurchases
4153177   +          +    -0.99760766791108 * S_NumWebVisitsMonth
4153178   +          +    -0.90203265666387 * S_RFMstat  +    -0.60947922673601 *
4153179   +        S_RMntFrq  +     1.10040128548883 * S_Recency
4153180   +          +     0.16728431679949 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.43482920479481 * S_AcceptedCmpTotal + 0.53350211221915 * 
S_Age + -0.06797700766223 * S_Frq + 0.13771322007949 * S_Income + 0.87012019559698 * S_Kidhome 
+ 0.06026853274247 * S_Mnt + -0.43150595882972 * S_MntFishProducts + -0.13728591661063 * 
S_MntFruits + 0.35443873962923 * S_MntGoldProds + 0.28102965401547 * S_MntMeatProducts + 
0.52367949052365 * S_MntSweetProducts + 0.35553595364078 * S_MntWines + 0.37892120128383 * 
S_MonthsAsCustomer + 0.59057645965187 * S_NumCatalogPurchases + 1.14485571201233 * 
S_NumDealsPurchases + 0.21414266588987 * S_NumDistPurchases + -0.10530090074297 * 
S_NumStorePurchases + -0.41712321238458 * S_NumWebPurchases + -0.99760766791108 * 
S_NumWebVisitsMonth + -0.90203265666387 * S_RFMstat + -0.60947922673601 * S_RMntFrq + 
1.10040128548883 * S_Recency + 0.16728431679949 * S_Teenhome ;
4153181   +   H1x1_3  =     0.26373486938499 * S_AcceptedCmpTotal
4153182   +          +    -0.22246756314756 * S_Age  +     0.49537720979115 * S_Frq
4153183   +          +     1.38815981786544 * S_Income  +    -0.93015968695331 *
4153184   +        S_Kidhome  +     0.11586216615481 * S_Mnt  +    -0.02105973515345 *
4153185   +        S_MntFishProducts  +    -0.28078442249811 * S_MntFruits
4153186   +          +    -0.01763878655129 * S_MntGoldProds  +     0.83934619541231 *
4153187   +        S_MntMeatProducts  +    -0.23417310915433 * S_MntSweetProducts
4153188   +          +    -0.29135819585991 * S_MntWines  +    -0.20792872642036 *
4153189   +        S_MonthsAsCustomer  +     1.05218745810839 * S_NumCatalogPurchases
4153190   +          +      0.7196418967437 * S_NumDealsPurchases
4153191   +          +     0.69035286374177 * S_NumDistPurchases
4153192   +          +     0.38027656631135 * S_NumStorePurchases
4153193   +          +    -0.18878358997924 * S_NumWebPurchases
4153194   +          +     1.61962062004798 * S_NumWebVisitsMonth
4153195   +          +    -0.04575386719745 * S_RFMstat  +     1.16358450490635 *
4153196   +        S_RMntFrq  +    -2.13821542142822 * S_Recency
4153197   +          +    -1.28960355207697 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.26373486938499 * S_AcceptedCmpTotal + -0.22246756314756 * 
S_Age + 0.49537720979115 * S_Frq + 1.38815981786544 * S_Income + -0.93015968695331 * S_Kidhome 
+ 0.11586216615481 * S_Mnt + -0.02105973515345 * S_MntFishProducts + -0.28078442249811 * 
S_MntFruits + -0.01763878655129 * S_MntGoldProds + 0.83934619541231 * S_MntMeatProducts + 
-0.23417310915433 * S_MntSweetProducts + -0.29135819585991 * S_MntWines + -0.20792872642036 * 
S_MonthsAsCustomer + 1.05218745810839 * S_NumCatalogPurchases + 0.7196418967437 * 
S_NumDealsPurchases + 0.69035286374177 * S_NumDistPurchases + 0.38027656631135 * 
S_NumStorePurchases + -0.18878358997924 * S_NumWebPurchases + 1.61962062004798 * 
S_NumWebVisitsMonth + -0.04575386719745 * S_RFMstat + 1.16358450490635 * S_RMntFrq + 
-2.13821542142822 * S_Recency + -1.28960355207697 * S_Teenhome ;
4153198   +   H1x1_4  =    -0.34331113295243 * S_AcceptedCmpTotal
4153199   +          +    -0.39878146063012 * S_Age  +     0.10068367322473 * S_Frq
4153200   +          +    -0.20171643525685 * S_Income  +    -0.76934260520569 *
4153201   +        S_Kidhome  +    -0.66782690219397 * S_Mnt  +     0.80905970181803 *
4153202   +        S_MntFishProducts  +    -0.03688782193215 * S_MntFruits
4153203   +          +     0.06641568264972 * S_MntGoldProds  +    -3.32390323965822 *
4153204   +        S_MntMeatProducts  +    -0.05413014598032 * S_MntSweetProducts
4153205   +          +     1.07708707113306 * S_MntWines  +     0.13185264889978 *
4153206   +        S_MonthsAsCustomer  +    -0.39476201074171 * S_NumCatalogPurchases
4153207   +          +    -0.00642902007204 * S_NumDealsPurchases
4153208   +          +     0.29785069480367 * S_NumDistPurchases
4153209   +          +    -0.42243322063147 * S_NumStorePurchases
4153210   +          +     0.54880896338383 * S_NumWebPurchases
4153211   +          +    -0.12525846016886 * S_NumWebVisitsMonth
4153212   +          +    -0.31397100953189 * S_RFMstat  +     -0.5192863720509 *
4153213   +        S_RMntFrq  +     0.10252211581449 * S_Recency
4153214   +          +     0.44223031313104 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.34331113295243 * S_AcceptedCmpTotal + -0.39878146063012 * 
S_Age + 0.10068367322473 * S_Frq + -0.20171643525685 * S_Income + -0.76934260520569 * 
S_Kidhome + -0.66782690219397 * S_Mnt + 0.80905970181803 * S_MntFishProducts + 
-0.03688782193215 * S_MntFruits + 0.06641568264972 * S_MntGoldProds + -3.32390323965822 * 
S_MntMeatProducts + -0.05413014598032 * S_MntSweetProducts + 1.07708707113306 * S_MntWines + 
0.13185264889978 * S_MonthsAsCustomer + -0.39476201074171 * S_NumCatalogPurchases + 
-0.00642902007204 * S_NumDealsPurchases + 0.29785069480367 * S_NumDistPurchases + 
-0.42243322063147 * S_NumStorePurchases + 0.54880896338383 * S_NumWebPurchases + 
-0.12525846016886 * S_NumWebVisitsMonth + -0.31397100953189 * S_RFMstat + -0.5192863720509 * 
S_RMntFrq + 0.10252211581449 * S_Recency + 0.44223031313104 * S_Teenhome ;
4153215   +   H1x1_5  =    -0.89949577087728 * S_AcceptedCmpTotal
4153216   +          +     -0.5133669560115 * S_Age  +     0.55814120515869 * S_Frq
4153217   +          +    -0.72790553700689 * S_Income  +     1.13470491167406 *
4153218   +        S_Kidhome  +     0.42465795563071 * S_Mnt  +     0.22642900369653 *
4153219   +        S_MntFishProducts  +    -0.10149694753146 * S_MntFruits
4153220   +          +    -0.05203167914723 * S_MntGoldProds  +    -0.42300460593042 *
4153221   +        S_MntMeatProducts  +    -0.11178206624825 * S_MntSweetProducts
4153222   +          +     1.57257994445012 * S_MntWines  +     0.02297554927807 *
4153223   +        S_MonthsAsCustomer  +    -0.60721423552141 * S_NumCatalogPurchases
4153224   +          +    -0.48404738328225 * S_NumDealsPurchases
4153225   +          +    -0.02464180457879 * S_NumDistPurchases
4153226   +          +     1.17201831082067 * S_NumStorePurchases
4153227   +          +     0.57453655167516 * S_NumWebPurchases
4153228   +          +    -1.94417019790248 * S_NumWebVisitsMonth
4153229   +          +     0.00073301476364 * S_RFMstat  +     0.12295343326875 *
4153230   +        S_RMntFrq  +      1.6169916658132 * S_Recency
4153231   +          +     0.09488579305439 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.89949577087728 * S_AcceptedCmpTotal + -0.5133669560115 * 
S_Age + 0.55814120515869 * S_Frq + -0.72790553700689 * S_Income + 1.13470491167406 * S_Kidhome 
+ 0.42465795563071 * S_Mnt + 0.22642900369653 * S_MntFishProducts + -0.10149694753146 * 
S_MntFruits + -0.05203167914723 * S_MntGoldProds + -0.42300460593042 * S_MntMeatProducts + 
-0.11178206624825 * S_MntSweetProducts + 1.57257994445012 * S_MntWines + 0.02297554927807 * 
S_MonthsAsCustomer + -0.60721423552141 * S_NumCatalogPurchases + -0.48404738328225 * 
S_NumDealsPurchases + -0.02464180457879 * S_NumDistPurchases + 1.17201831082067 * 
S_NumStorePurchases + 0.57453655167516 * S_NumWebPurchases + -1.94417019790248 * 
S_NumWebVisitsMonth + 0.00073301476364 * S_RFMstat + 0.12295343326875 * S_RMntFrq + 
1.6169916658132 * S_Recency + 0.09488579305439 * S_Teenhome ;
4153232   +   H1x1_6  =     0.01224996381937 * S_AcceptedCmpTotal
4153233   +          +     0.56818460209578 * S_Age  +    -0.50544994791872 * S_Frq
4153234   +          +    -0.39086889823619 * S_Income  +      0.2278709145292 *
4153235   +        S_Kidhome  +       0.221310975162 * S_Mnt  +     -0.2208719427117 *
4153236   +        S_MntFishProducts  +     0.33199116637803 * S_MntFruits
4153237   +          +    -0.20919304257884 * S_MntGoldProds  +     0.85155045239396 *
4153238   +        S_MntMeatProducts  +     0.32150401526792 * S_MntSweetProducts
4153239   +          +     0.24789026157513 * S_MntWines  +    -0.16427340869887 *
4153240   +        S_MonthsAsCustomer  +    -1.31657293247686 * S_NumCatalogPurchases
4153241   +          +    -1.49850531967483 * S_NumDealsPurchases
4153242   +          +    -0.82105466264223 * S_NumDistPurchases
4153243   +          +     0.29984603642824 * S_NumStorePurchases
4153244   +          +     0.06557123721611 * S_NumWebPurchases
4153245   +          +     1.04754749365002 * S_NumWebVisitsMonth
4153246   +          +     0.18881248406892 * S_RFMstat  +     0.26455728766984 *
4153247   +        S_RMntFrq  +     0.12396789666359 * S_Recency
4153248   +          +     0.04001049603668 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.01224996381937 * S_AcceptedCmpTotal + 0.56818460209578 * 
S_Age + -0.50544994791872 * S_Frq + -0.39086889823619 * S_Income + 0.2278709145292 * S_Kidhome 
+ 0.221310975162 * S_Mnt + -0.2208719427117 * S_MntFishProducts + 0.33199116637803 * 
S_MntFruits + -0.20919304257884 * S_MntGoldProds + 0.85155045239396 * S_MntMeatProducts + 
0.32150401526792 * S_MntSweetProducts + 0.24789026157513 * S_MntWines + -0.16427340869887 * 
S_MonthsAsCustomer + -1.31657293247686 * S_NumCatalogPurchases + -1.49850531967483 * 
S_NumDealsPurchases + -0.82105466264223 * S_NumDistPurchases + 0.29984603642824 * 
S_NumStorePurchases + 0.06557123721611 * S_NumWebPurchases + 1.04754749365002 * 
S_NumWebVisitsMonth + 0.18881248406892 * S_RFMstat + 0.26455728766984 * S_RMntFrq + 
0.12396789666359 * S_Recency + 0.04001049603668 * S_Teenhome ;
4153249   +   H1x1_1  = H1x1_1  +     -0.4293641198863 * AcceptedCmp10
4153250   +          +    -0.02562823362815 * AcceptedCmp20  +     0.16277388616218 *
4153251   +        AcceptedCmp30  +    -0.38952498475664 * AcceptedCmp40
4153252   +          +    -0.13756852377245 * AcceptedCmp50  +    -0.11393239206883 *
4153253   +        Complain0  +    -0.18422159910382 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.4293641198863 * AcceptedCmp10 + -0.02562823362815 * 
AcceptedCmp20 + 0.16277388616218 * AcceptedCmp30 + -0.38952498475664 * AcceptedCmp40 + 
-0.13756852377245 * AcceptedCmp50 + -0.11393239206883 * Complain0 + -0.18422159910382 * 
HigherEducationBinary0 ;
4153254   +   H1x1_2  = H1x1_2  +     -0.6690011671322 * AcceptedCmp10
4153255   +          +     0.30944418540454 * AcceptedCmp20  +     0.58989055832198 *
4153256   +        AcceptedCmp30  +    -0.11349554378017 * AcceptedCmp40
4153257   +          +     0.17747537507545 * AcceptedCmp50  +     0.31141201787728 *
4153258   +        Complain0  +    -0.14665102087088 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.6690011671322 * AcceptedCmp10 + 0.30944418540454 * 
AcceptedCmp20 + 0.58989055832198 * AcceptedCmp30 + -0.11349554378017 * AcceptedCmp40 + 
0.17747537507545 * AcceptedCmp50 + 0.31141201787728 * Complain0 + -0.14665102087088 * 
HigherEducationBinary0 ;
4153259   +   H1x1_3  = H1x1_3  +    -0.37718551551154 * AcceptedCmp10
4153260   +          +    -0.95419836616858 * AcceptedCmp20  +    -1.07782642598822 *
4153261   +        AcceptedCmp30  +    -0.36181507758379 * AcceptedCmp40
4153262   +          +    -0.20579221441057 * AcceptedCmp50  +     -0.2862570173476 *
4153263   +        Complain0  +     0.42095042003574 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.37718551551154 * AcceptedCmp10 + -0.95419836616858 
* AcceptedCmp20 + -1.07782642598822 * AcceptedCmp30 + -0.36181507758379 * AcceptedCmp40 + 
-0.20579221441057 * AcceptedCmp50 + -0.2862570173476 * Complain0 + 0.42095042003574 * 
HigherEducationBinary0 ;
4153264   +   H1x1_4  = H1x1_4  +     0.76282838117383 * AcceptedCmp10
4153265   +          +     0.17657215690894 * AcceptedCmp20  +     0.06936093547655 *
4153266   +        AcceptedCmp30  +    -0.31222684620157 * AcceptedCmp40
4153267   +          +     0.35916828202502 * AcceptedCmp50  +     0.15464859425769 *
4153268   +        Complain0  +    -0.12780871374988 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.76282838117383 * AcceptedCmp10 + 0.17657215690894 * 
AcceptedCmp20 + 0.06936093547655 * AcceptedCmp30 + -0.31222684620157 * AcceptedCmp40 + 
0.35916828202502 * AcceptedCmp50 + 0.15464859425769 * Complain0 + -0.12780871374988 * 
HigherEducationBinary0 ;
4153269   +   H1x1_5  = H1x1_5  +      0.0863832283968 * AcceptedCmp10
4153270   +          +    -0.01478152334234 * AcceptedCmp20  +    -0.25793605794945 *
4153271   +        AcceptedCmp30  +     0.75328991260718 * AcceptedCmp40
4153272   +          +     0.43869592545355 * AcceptedCmp50  +    -0.18444801256895 *
4153273   +        Complain0  +    -0.18540568245616 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0863832283968 * AcceptedCmp10 + -0.01478152334234 * 
AcceptedCmp20 + -0.25793605794945 * AcceptedCmp30 + 0.75328991260718 * AcceptedCmp40 + 
0.43869592545355 * AcceptedCmp50 + -0.18444801256895 * Complain0 + -0.18540568245616 * 
HigherEducationBinary0 ;
4153274   +   H1x1_6  = H1x1_6  +    -0.05476883960444 * AcceptedCmp10
4153275   +          +    -0.30796660956747 * AcceptedCmp20  +    -0.15332998700386 *
4153276   +        AcceptedCmp30  +     0.07190305484507 * AcceptedCmp40
4153277   +          +    -0.19344551087023 * AcceptedCmp50  +    -0.01671794402922 *
4153278   +        Complain0  +      0.4224003744836 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.05476883960444 * AcceptedCmp10 + -0.30796660956747 
* AcceptedCmp20 + -0.15332998700386 * AcceptedCmp30 + 0.07190305484507 * AcceptedCmp40 + 
-0.19344551087023 * AcceptedCmp50 + -0.01671794402922 * Complain0 + 0.4224003744836 * 
HigherEducationBinary0 ;
4153279   +   H1x1_1  = H1x1_1  +     0.06740641383122 * Education2n_Cycle
4153280   +          +      0.0427985447056 * EducationBasic  +     0.38043688251433 *
4153281   +        EducationGraduation  +     0.07595631354847 * EducationMaster
4153282   +          +     0.24583509957712 * Marital_StatusDivorced
4153283   +          +    -0.22681931588361 * Marital_StatusMarried
4153284   +          +    -0.12924106229536 * Marital_StatusSingle
4153285   +          +     -0.2262058185403 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.06740641383122 * Education2n_Cycle + 0.0427985447056 
* EducationBasic + 0.38043688251433 * EducationGraduation + 0.07595631354847 * EducationMaster 
+ 0.24583509957712 * Marital_StatusDivorced + -0.22681931588361 * Marital_StatusMarried + 
-0.12924106229536 * Marital_StatusSingle + -0.2262058185403 * Marital_StatusTogether ;
4153286   +   H1x1_2  = H1x1_2  +    -0.13120690973481 * Education2n_Cycle
4153287   +          +     0.37925506295244 * EducationBasic  +     0.31784700588218 *
4153288   +        EducationGraduation  +     0.23015089246655 * EducationMaster
4153289   +          +    -0.12585334311068 * Marital_StatusDivorced
4153290   +          +    -0.20835502467207 * Marital_StatusMarried
4153291   +          +    -0.13839534449368 * Marital_StatusSingle
4153292   +          +     0.64317572477668 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.13120690973481 * Education2n_Cycle + 
0.37925506295244 * EducationBasic + 0.31784700588218 * EducationGraduation + 0.23015089246655 
* EducationMaster + -0.12585334311068 * Marital_StatusDivorced + -0.20835502467207 * 
Marital_StatusMarried + -0.13839534449368 * Marital_StatusSingle + 0.64317572477668 * 
Marital_StatusTogether ;
4153293   +   H1x1_3  = H1x1_3  +     0.32305785926236 * Education2n_Cycle
4153294   +          +     0.23464353160373 * EducationBasic  +    -0.73832644067678 *
4153295   +        EducationGraduation  +    -0.03608560158257 * EducationMaster
4153296   +          +     0.35106363238113 * Marital_StatusDivorced
4153297   +          +     -1.3414808583918 * Marital_StatusMarried
4153298   +          +     1.40835320798486 * Marital_StatusSingle
4153299   +          +    -1.26805917396788 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.32305785926236 * Education2n_Cycle + 
0.23464353160373 * EducationBasic + -0.73832644067678 * EducationGraduation + 
-0.03608560158257 * EducationMaster + 0.35106363238113 * Marital_StatusDivorced + 
-1.3414808583918 * Marital_StatusMarried + 1.40835320798486 * Marital_StatusSingle + 
-1.26805917396788 * Marital_StatusTogether ;
4153300   +   H1x1_4  = H1x1_4  +    -0.14516593990466 * Education2n_Cycle
4153301   +          +     0.21457892528906 * EducationBasic  +      0.3693312496431 *
4153302   +        EducationGraduation  +      0.1746658332011 * EducationMaster
4153303   +          +     0.48174546958393 * Marital_StatusDivorced
4153304   +          +    -0.41416978858191 * Marital_StatusMarried
4153305   +          +    -0.23376801546265 * Marital_StatusSingle
4153306   +          +    -0.40569257078897 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.14516593990466 * Education2n_Cycle + 
0.21457892528906 * EducationBasic + 0.3693312496431 * EducationGraduation + 0.1746658332011 * 
EducationMaster + 0.48174546958393 * Marital_StatusDivorced + -0.41416978858191 * 
Marital_StatusMarried + -0.23376801546265 * Marital_StatusSingle + -0.40569257078897 * 
Marital_StatusTogether ;
4153307   +   H1x1_5  = H1x1_5  +    -0.00489214718621 * Education2n_Cycle
4153308   +          +     0.04788059649714 * EducationBasic  +      -0.479003778409 *
4153309   +        EducationGraduation  +     0.68875064631577 * EducationMaster
4153310   +          +    -0.67557643774246 * Marital_StatusDivorced
4153311   +          +     1.63844045917367 * Marital_StatusMarried
4153312   +          +    -0.70320960247699 * Marital_StatusSingle
4153313   +          +     1.26350112628909 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.00489214718621 * Education2n_Cycle + 
0.04788059649714 * EducationBasic + -0.479003778409 * EducationGraduation + 0.68875064631577 * 
EducationMaster + -0.67557643774246 * Marital_StatusDivorced + 1.63844045917367 * 
Marital_StatusMarried + -0.70320960247699 * Marital_StatusSingle + 1.26350112628909 * 
Marital_StatusTogether ;
4153314   +   H1x1_6  = H1x1_6  +     0.38566123849432 * Education2n_Cycle
4153315   +          +    -0.48006357411447 * EducationBasic  +     0.06594567975069 *
4153316   +        EducationGraduation  +    -0.68011360002443 * EducationMaster
4153317   +          +    -0.11371453086883 * Marital_StatusDivorced
4153318   +          +    -0.34226997176291 * Marital_StatusMarried
4153319   +          +    -1.01568676685754 * Marital_StatusSingle
4153320   +          +    -0.07673228755579 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.38566123849432 * Education2n_Cycle + 
-0.48006357411447 * EducationBasic + 0.06594567975069 * EducationGraduation + 
-0.68011360002443 * EducationMaster + -0.11371453086883 * Marital_StatusDivorced + 
-0.34226997176291 * Marital_StatusMarried + -1.01568676685754 * Marital_StatusSingle + 
-0.07673228755579 * Marital_StatusTogether ;
4153321   +   H1x1_1  =    -0.13665586104906 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.13665586104906 + H1x1_1 ;
4153322   +   H1x1_2  =    -1.74128345271319 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.74128345271319 + H1x1_2 ;
4153323   +   H1x1_3  =    -0.38226400326342 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.38226400326342 + H1x1_3 ;
4153324   +   H1x1_4  =    -0.64652756521333 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.64652756521333 + H1x1_4 ;
4153325   +   H1x1_5  =     0.89555568414722 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.89555568414722 + H1x1_5 ;
4153326   +   H1x1_6  =    -0.28536788363505 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.28536788363505 + H1x1_6 ;
4153327   +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
4153328   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
4153329   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , 
H1x1_7 );
4153330   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4153331   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
4153332   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
4153333   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
4153334   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
4153335   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
4153336   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
4153337   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
4153338   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
4153339   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
4153340   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
4153341   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
4153342   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
4153343   +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
4153344   +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
4153345   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
4153346   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
4153347   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
4153348   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
4153349   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
4153350   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
4153351   +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
4153352   +END;
MPRINT(EM_DIAGRAM):   END;
4153353   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4153354   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
4153355   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
4153356   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
4153357   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
4153358   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
4153359   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
4153360   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
4153361   +END;
MPRINT(EM_DIAGRAM):   END;
4153362   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4153363   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
4153364   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4153365   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4153366   +   H1x2_1  =    -0.46863593010465 * S_AcceptedCmpTotal
4153367   +          +     0.76938995153422 * S_Age  +    -0.10870665325086 * S_Frq
4153368   +          +    -0.01767709917897 * S_Income  +    -0.06564852978687 *
4153369   +        S_Kidhome  +     1.53975855599943 * S_Mnt  +     0.14885556549813 *
4153370   +        S_MntFishProducts  +     -0.3427211596875 * S_MntFruits
4153371   +          +     1.82311511422571 * S_MntGoldProds  +     1.16814585484266 *
4153372   +        S_MntMeatProducts  +    -0.03210183211362 * S_MntSweetProducts
4153373   +          +     0.21048598967441 * S_MntWines  +    -1.43075224286158 *
4153374   +        S_MonthsAsCustomer  +     0.17264791017938 * S_NumCatalogPurchases
4153375   +          +    -0.87259051567474 * S_NumDealsPurchases
4153376   +          +    -0.36454149529139 * S_NumDistPurchases
4153377   +          +     0.12447759925061 * S_NumStorePurchases
4153378   +          +    -1.08133487947367 * S_NumWebPurchases
4153379   +          +    -0.49882157745454 * S_NumWebVisitsMonth
4153380   +          +    -1.37163643041927 * S_RFMstat  +    -2.02270778627266 *
4153381   +        S_RMntFrq  +    -0.01174101172444 * S_Recency
4153382   +          +     1.37307999964517 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.46863593010465 * S_AcceptedCmpTotal + 0.76938995153422 * 
S_Age + -0.10870665325086 * S_Frq + -0.01767709917897 * S_Income + -0.06564852978687 * 
S_Kidhome + 1.53975855599943 * S_Mnt + 0.14885556549813 * S_MntFishProducts + -0.3427211596875 
* S_MntFruits + 1.82311511422571 * S_MntGoldProds + 1.16814585484266 * S_MntMeatProducts + 
-0.03210183211362 * S_MntSweetProducts + 0.21048598967441 * S_MntWines + -1.43075224286158 * 
S_MonthsAsCustomer + 0.17264791017938 * S_NumCatalogPurchases + -0.87259051567474 * 
S_NumDealsPurchases + -0.36454149529139 * S_NumDistPurchases + 0.12447759925061 * 
S_NumStorePurchases + -1.08133487947367 * S_NumWebPurchases + -0.49882157745454 * 
S_NumWebVisitsMonth + -1.37163643041927 * S_RFMstat + -2.02270778627266 * S_RMntFrq + 
-0.01174101172444 * S_Recency + 1.37307999964517 * S_Teenhome ;
4153383   +   H1x2_2  =     0.31979674377303 * S_AcceptedCmpTotal
4153384   +          +    -1.13516841608912 * S_Age  +     1.57640145941914 * S_Frq
4153385   +          +    -0.58468039509557 * S_Income  +    -1.78015996883174 *
4153386   +        S_Kidhome  +     0.51311311640127 * S_Mnt  +     0.07011815519915 *
4153387   +        S_MntFishProducts  +     0.73204832291164 * S_MntFruits
4153388   +          +     1.50837189353633 * S_MntGoldProds  +     1.39487443576743 *
4153389   +        S_MntMeatProducts  +      0.6943398196475 * S_MntSweetProducts
4153390   +          +    -0.36693028595681 * S_MntWines  +     0.86802033237442 *
4153391   +        S_MonthsAsCustomer  +     0.02384797538091 * S_NumCatalogPurchases
4153392   +          +     2.23121497416403 * S_NumDealsPurchases
4153393   +          +    -0.48674842191071 * S_NumDistPurchases
4153394   +          +     1.77510728607544 * S_NumStorePurchases
4153395   +          +     0.14647433155436 * S_NumWebPurchases
4153396   +          +    -0.95892686924419 * S_NumWebVisitsMonth
4153397   +          +    -0.26496935918704 * S_RFMstat  +     2.48765485222223 *
4153398   +        S_RMntFrq  +     2.46497777428475 * S_Recency
4153399   +          +    -0.62872033383484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.31979674377303 * S_AcceptedCmpTotal + -1.13516841608912 * 
S_Age + 1.57640145941914 * S_Frq + -0.58468039509557 * S_Income + -1.78015996883174 * 
S_Kidhome + 0.51311311640127 * S_Mnt + 0.07011815519915 * S_MntFishProducts + 0.73204832291164 
* S_MntFruits + 1.50837189353633 * S_MntGoldProds + 1.39487443576743 * S_MntMeatProducts + 
0.6943398196475 * S_MntSweetProducts + -0.36693028595681 * S_MntWines + 0.86802033237442 * 
S_MonthsAsCustomer + 0.02384797538091 * S_NumCatalogPurchases + 2.23121497416403 * 
S_NumDealsPurchases + -0.48674842191071 * S_NumDistPurchases + 1.77510728607544 * 
S_NumStorePurchases + 0.14647433155436 * S_NumWebPurchases + -0.95892686924419 * 
S_NumWebVisitsMonth + -0.26496935918704 * S_RFMstat + 2.48765485222223 * S_RMntFrq + 
2.46497777428475 * S_Recency + -0.62872033383484 * S_Teenhome ;
4153400   +   H1x2_3  =    -0.31142826583944 * S_AcceptedCmpTotal
4153401   +          +    -1.14828049895929 * S_Age  +    -0.54227584627485 * S_Frq
4153402   +          +     0.26826674711688 * S_Income  +     0.17643820666347 *
4153403   +        S_Kidhome  +    -0.12427430981043 * S_Mnt  +     0.18056887427376 *
4153404   +        S_MntFishProducts  +    -0.63010248821544 * S_MntFruits
4153405   +          +    -0.81391687529252 * S_MntGoldProds  +    -1.12306166734361 *
4153406   +        S_MntMeatProducts  +     0.92339010601965 * S_MntSweetProducts
4153407   +          +    -2.05510990050543 * S_MntWines  +    -2.02060586903244 *
4153408   +        S_MonthsAsCustomer  +     0.98841836752178 * S_NumCatalogPurchases
4153409   +          +     0.14338855349611 * S_NumDealsPurchases
4153410   +          +    -2.21071010829235 * S_NumDistPurchases
4153411   +          +    -0.21795889348002 * S_NumStorePurchases
4153412   +          +     1.98825087883535 * S_NumWebPurchases
4153413   +          +     1.02482442531149 * S_NumWebVisitsMonth
4153414   +          +    -0.47662143614905 * S_RFMstat  +    -0.17167385440535 *
4153415   +        S_RMntFrq  +     -1.0288777281766 * S_Recency
4153416   +          +    -0.10646747275734 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.31142826583944 * S_AcceptedCmpTotal + -1.14828049895929 * 
S_Age + -0.54227584627485 * S_Frq + 0.26826674711688 * S_Income + 0.17643820666347 * S_Kidhome 
+ -0.12427430981043 * S_Mnt + 0.18056887427376 * S_MntFishProducts + -0.63010248821544 * 
S_MntFruits + -0.81391687529252 * S_MntGoldProds + -1.12306166734361 * S_MntMeatProducts + 
0.92339010601965 * S_MntSweetProducts + -2.05510990050543 * S_MntWines + -2.02060586903244 * 
S_MonthsAsCustomer + 0.98841836752178 * S_NumCatalogPurchases + 0.14338855349611 * 
S_NumDealsPurchases + -2.21071010829235 * S_NumDistPurchases + -0.21795889348002 * 
S_NumStorePurchases + 1.98825087883535 * S_NumWebPurchases + 1.02482442531149 * 
S_NumWebVisitsMonth + -0.47662143614905 * S_RFMstat + -0.17167385440535 * S_RMntFrq + 
-1.0288777281766 * S_Recency + -0.10646747275734 * S_Teenhome ;
4153417   +   H1x2_4  =    -0.40813758620671 * S_AcceptedCmpTotal
4153418   +          +     0.16751361466296 * S_Age  +     0.61297021391662 * S_Frq
4153419   +          +     0.17708553296763 * S_Income  +    -0.23498000755537 *
4153420   +        S_Kidhome  +      0.6863853027948 * S_Mnt  +    -0.43649468589643 *
4153421   +        S_MntFishProducts  +    -1.03807059787368 * S_MntFruits
4153422   +          +     0.68988160282803 * S_MntGoldProds  +     1.76714128625705 *
4153423   +        S_MntMeatProducts  +     1.15458185366826 * S_MntSweetProducts
4153424   +          +     0.31267521045306 * S_MntWines  +    -3.18562841805634 *
4153425   +        S_MonthsAsCustomer  +     0.15316473812138 * S_NumCatalogPurchases
4153426   +          +     0.30041205661012 * S_NumDealsPurchases
4153427   +          +    -0.63499849986918 * S_NumDistPurchases
4153428   +          +    -0.34155713433714 * S_NumStorePurchases
4153429   +          +    -1.14183354933936 * S_NumWebPurchases
4153430   +          +    -0.42681980262973 * S_NumWebVisitsMonth
4153431   +          +    -0.18777676484111 * S_RFMstat  +      0.2522570278894 *
4153432   +        S_RMntFrq  +     1.25852246467612 * S_Recency
4153433   +          +     0.63333476238969 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.40813758620671 * S_AcceptedCmpTotal + 0.16751361466296 * 
S_Age + 0.61297021391662 * S_Frq + 0.17708553296763 * S_Income + -0.23498000755537 * S_Kidhome 
+ 0.6863853027948 * S_Mnt + -0.43649468589643 * S_MntFishProducts + -1.03807059787368 * 
S_MntFruits + 0.68988160282803 * S_MntGoldProds + 1.76714128625705 * S_MntMeatProducts + 
1.15458185366826 * S_MntSweetProducts + 0.31267521045306 * S_MntWines + -3.18562841805634 * 
S_MonthsAsCustomer + 0.15316473812138 * S_NumCatalogPurchases + 0.30041205661012 * 
S_NumDealsPurchases + -0.63499849986918 * S_NumDistPurchases + -0.34155713433714 * 
S_NumStorePurchases + -1.14183354933936 * S_NumWebPurchases + -0.42681980262973 * 
S_NumWebVisitsMonth + -0.18777676484111 * S_RFMstat + 0.2522570278894 * S_RMntFrq + 
1.25852246467612 * S_Recency + 0.63333476238969 * S_Teenhome ;
4153434   +   H1x2_5  =     1.73048436159558 * S_AcceptedCmpTotal
4153435   +          +     1.91388487556197 * S_Age  +     0.14880026885923 * S_Frq
4153436   +          +      0.5905347897806 * S_Income  +     1.67048168226736 *
4153437   +        S_Kidhome  +     0.03869174467752 * S_Mnt  +    -0.71187911364266 *
4153438   +        S_MntFishProducts  +     0.93023590693473 * S_MntFruits
4153439   +          +     0.22907372790948 * S_MntGoldProds  +    -1.05941282177437 *
4153440   +        S_MntMeatProducts  +    -0.73905281508342 * S_MntSweetProducts
4153441   +          +     0.04429898588386 * S_MntWines  +    -0.47487263648723 *
4153442   +        S_MonthsAsCustomer  +     0.00382111008361 * S_NumCatalogPurchases
4153443   +          +    -0.21237915559831 * S_NumDealsPurchases
4153444   +          +     0.48256923764182 * S_NumDistPurchases
4153445   +          +    -0.45553093140641 * S_NumStorePurchases
4153446   +          +      0.5593655963659 * S_NumWebPurchases
4153447   +          +     0.27943768691188 * S_NumWebVisitsMonth
4153448   +          +     1.94452735574997 * S_RFMstat  +    -0.89811355261154 *
4153449   +        S_RMntFrq  +    -1.62796011550484 * S_Recency
4153450   +          +     0.60487421956906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.73048436159558 * S_AcceptedCmpTotal + 1.91388487556197 * 
S_Age + 0.14880026885923 * S_Frq + 0.5905347897806 * S_Income + 1.67048168226736 * S_Kidhome + 
0.03869174467752 * S_Mnt + -0.71187911364266 * S_MntFishProducts + 0.93023590693473 * 
S_MntFruits + 0.22907372790948 * S_MntGoldProds + -1.05941282177437 * S_MntMeatProducts + 
-0.73905281508342 * S_MntSweetProducts + 0.04429898588386 * S_MntWines + -0.47487263648723 * 
S_MonthsAsCustomer + 0.00382111008361 * S_NumCatalogPurchases + -0.21237915559831 * 
S_NumDealsPurchases + 0.48256923764182 * S_NumDistPurchases + -0.45553093140641 * 
S_NumStorePurchases + 0.5593655963659 * S_NumWebPurchases + 0.27943768691188 * 
S_NumWebVisitsMonth + 1.94452735574997 * S_RFMstat + -0.89811355261154 * S_RMntFrq + 
-1.62796011550484 * S_Recency + 0.60487421956906 * S_Teenhome ;
4153451   +   H1x2_6  =    -0.32010880515459 * S_AcceptedCmpTotal
4153452   +          +     0.95304983421791 * S_Age  +      -0.316044010281 * S_Frq
4153453   +          +     1.10925678578158 * S_Income  +     1.28019020117471 *
4153454   +        S_Kidhome  +     1.02498438668688 * S_Mnt  +     -1.8898236827792 *
4153455   +        S_MntFishProducts  +     0.96543971612672 * S_MntFruits
4153456   +          +    -0.21422669977227 * S_MntGoldProds  +     -0.0840639948559 *
4153457   +        S_MntMeatProducts  +     1.27902687109389 * S_MntSweetProducts
4153458   +          +    -1.38957846154598 * S_MntWines  +     0.80004372871482 *
4153459   +        S_MonthsAsCustomer  +    -0.19381123279552 * S_NumCatalogPurchases
4153460   +          +     2.38967021388062 * S_NumDealsPurchases
4153461   +          +    -0.97722398866481 * S_NumDistPurchases
4153462   +          +     1.57612333191312 * S_NumStorePurchases
4153463   +          +    -0.75968679115983 * S_NumWebPurchases
4153464   +          +    -0.64207187757251 * S_NumWebVisitsMonth
4153465   +          +     1.06529999122381 * S_RFMstat  +     0.67095385521555 *
4153466   +        S_RMntFrq  +     1.71313869798331 * S_Recency
4153467   +          +     1.39045686636707 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.32010880515459 * S_AcceptedCmpTotal + 0.95304983421791 * 
S_Age + -0.316044010281 * S_Frq + 1.10925678578158 * S_Income + 1.28019020117471 * S_Kidhome + 
1.02498438668688 * S_Mnt + -1.8898236827792 * S_MntFishProducts + 0.96543971612672 * 
S_MntFruits + -0.21422669977227 * S_MntGoldProds + -0.0840639948559 * S_MntMeatProducts + 
1.27902687109389 * S_MntSweetProducts + -1.38957846154598 * S_MntWines + 0.80004372871482 * 
S_MonthsAsCustomer + -0.19381123279552 * S_NumCatalogPurchases + 2.38967021388062 * 
S_NumDealsPurchases + -0.97722398866481 * S_NumDistPurchases + 1.57612333191312 * 
S_NumStorePurchases + -0.75968679115983 * S_NumWebPurchases + -0.64207187757251 * 
S_NumWebVisitsMonth + 1.06529999122381 * S_RFMstat + 0.67095385521555 * S_RMntFrq + 
1.71313869798331 * S_Recency + 1.39045686636707 * S_Teenhome ;
4153468   +   H1x2_1  = H1x2_1  +    -1.32125124093028 * AcceptedCmp10
4153469   +          +    -0.61219063588492 * AcceptedCmp20  +     1.20821214973577 *
4153470   +        AcceptedCmp30  +    -1.13548727550981 * AcceptedCmp40
4153471   +          +     0.04405769197194 * AcceptedCmp50  +      0.7940658605271 *
4153472   +        Complain0  +     1.05933486404834 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.32125124093028 * AcceptedCmp10 + -0.61219063588492 
* AcceptedCmp20 + 1.20821214973577 * AcceptedCmp30 + -1.13548727550981 * AcceptedCmp40 + 
0.04405769197194 * AcceptedCmp50 + 0.7940658605271 * Complain0 + 1.05933486404834 * 
HigherEducationBinary0 ;
4153473   +   H1x2_2  = H1x2_2  +     1.56313777120806 * AcceptedCmp10
4153474   +          +    -1.12997680537456 * AcceptedCmp20  +     1.19262470365504 *
4153475   +        AcceptedCmp30  +    -0.98995493161689 * AcceptedCmp40
4153476   +          +      -1.827141957557 * AcceptedCmp50  +    -0.43809188233899 *
4153477   +        Complain0  +      -0.627000653672 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.56313777120806 * AcceptedCmp10 + -1.12997680537456 * 
AcceptedCmp20 + 1.19262470365504 * AcceptedCmp30 + -0.98995493161689 * AcceptedCmp40 + 
-1.827141957557 * AcceptedCmp50 + -0.43809188233899 * Complain0 + -0.627000653672 * 
HigherEducationBinary0 ;
4153478   +   H1x2_3  = H1x2_3  +     1.32174755827017 * AcceptedCmp10
4153479   +          +     1.00086479754098 * AcceptedCmp20  +      0.4636133487385 *
4153480   +        AcceptedCmp30  +     1.34878553883758 * AcceptedCmp40
4153481   +          +    -2.36241584924476 * AcceptedCmp50  +       1.082421071431 *
4153482   +        Complain0  +    -0.32514144517436 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.32174755827017 * AcceptedCmp10 + 1.00086479754098 * 
AcceptedCmp20 + 0.4636133487385 * AcceptedCmp30 + 1.34878553883758 * AcceptedCmp40 + 
-2.36241584924476 * AcceptedCmp50 + 1.082421071431 * Complain0 + -0.32514144517436 * 
HigherEducationBinary0 ;
4153483   +   H1x2_4  = H1x2_4  +     0.39556775796131 * AcceptedCmp10
4153484   +          +     0.06457727211285 * AcceptedCmp20  +    -1.44632749800655 *
4153485   +        AcceptedCmp30  +     1.20294678514383 * AcceptedCmp40
4153486   +          +    -0.01594330886358 * AcceptedCmp50  +    -2.06895895180485 *
4153487   +        Complain0  +    -0.01374012569775 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.39556775796131 * AcceptedCmp10 + 0.06457727211285 * 
AcceptedCmp20 + -1.44632749800655 * AcceptedCmp30 + 1.20294678514383 * AcceptedCmp40 + 
-0.01594330886358 * AcceptedCmp50 + -2.06895895180485 * Complain0 + -0.01374012569775 * 
HigherEducationBinary0 ;
4153488   +   H1x2_5  = H1x2_5  +     1.11945933535638 * AcceptedCmp10
4153489   +          +     0.26383973979566 * AcceptedCmp20  +    -0.40426240061746 *
4153490   +        AcceptedCmp30  +     1.46916781894719 * AcceptedCmp40
4153491   +          +     0.26827715088644 * AcceptedCmp50  +     1.50074465469998 *
4153492   +        Complain0  +     -1.0626185000486 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.11945933535638 * AcceptedCmp10 + 0.26383973979566 * 
AcceptedCmp20 + -0.40426240061746 * AcceptedCmp30 + 1.46916781894719 * AcceptedCmp40 + 
0.26827715088644 * AcceptedCmp50 + 1.50074465469998 * Complain0 + -1.0626185000486 * 
HigherEducationBinary0 ;
4153493   +   H1x2_6  = H1x2_6  +    -0.87625232174239 * AcceptedCmp10
4153494   +          +     0.72228047975642 * AcceptedCmp20  +     1.34904015028355 *
4153495   +        AcceptedCmp30  +     1.55639496207852 * AcceptedCmp40
4153496   +          +    -0.98741935337746 * AcceptedCmp50  +     0.99421811137074 *
4153497   +        Complain0  +    -1.69180618270074 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.87625232174239 * AcceptedCmp10 + 0.72228047975642 * 
AcceptedCmp20 + 1.34904015028355 * AcceptedCmp30 + 1.55639496207852 * AcceptedCmp40 + 
-0.98741935337746 * AcceptedCmp50 + 0.99421811137074 * Complain0 + -1.69180618270074 * 
HigherEducationBinary0 ;
4153498   +   H1x2_1  = H1x2_1  +    -0.17034446979478 * Education2n_Cycle
4153499   +          +    -0.75872196172063 * EducationBasic  +     0.44107677662894 *
4153500   +        EducationGraduation  +      0.1073450284316 * EducationMaster
4153501   +          +     0.96470902298142 * Marital_StatusDivorced
4153502   +          +     0.94805959268314 * Marital_StatusMarried
4153503   +          +     -0.6523948769616 * Marital_StatusSingle
4153504   +          +     0.07557344719737 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.17034446979478 * Education2n_Cycle + 
-0.75872196172063 * EducationBasic + 0.44107677662894 * EducationGraduation + 0.1073450284316 
* EducationMaster + 0.96470902298142 * Marital_StatusDivorced + 0.94805959268314 * 
Marital_StatusMarried + -0.6523948769616 * Marital_StatusSingle + 0.07557344719737 * 
Marital_StatusTogether ;
4153505   +   H1x2_2  = H1x2_2  +    -0.42515060901662 * Education2n_Cycle
4153506   +          +    -1.05213629639837 * EducationBasic  +     0.72603871617959 *
4153507   +        EducationGraduation  +    -1.34927753306064 * EducationMaster
4153508   +          +      0.3918249505531 * Marital_StatusDivorced
4153509   +          +    -0.00968091979586 * Marital_StatusMarried
4153510   +          +     0.84615379885071 * Marital_StatusSingle
4153511   +          +     0.34817324570682 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.42515060901662 * Education2n_Cycle + 
-1.05213629639837 * EducationBasic + 0.72603871617959 * EducationGraduation + 
-1.34927753306064 * EducationMaster + 0.3918249505531 * Marital_StatusDivorced + 
-0.00968091979586 * Marital_StatusMarried + 0.84615379885071 * Marital_StatusSingle + 
0.34817324570682 * Marital_StatusTogether ;
4153512   +   H1x2_3  = H1x2_3  +    -0.31002362860852 * Education2n_Cycle
4153513   +          +     1.40744525716089 * EducationBasic  +     2.06403096539358 *
4153514   +        EducationGraduation  +     -0.8672743321499 * EducationMaster
4153515   +          +     1.14335160313191 * Marital_StatusDivorced
4153516   +          +     0.50580517192175 * Marital_StatusMarried
4153517   +          +     0.17264295020921 * Marital_StatusSingle
4153518   +          +    -0.58193119255736 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.31002362860852 * Education2n_Cycle + 
1.40744525716089 * EducationBasic + 2.06403096539358 * EducationGraduation + -0.8672743321499 
* EducationMaster + 1.14335160313191 * Marital_StatusDivorced + 0.50580517192175 * 
Marital_StatusMarried + 0.17264295020921 * Marital_StatusSingle + -0.58193119255736 * 
Marital_StatusTogether ;
4153519   +   H1x2_4  = H1x2_4  +     0.55057637605468 * Education2n_Cycle
4153520   +          +    -0.73070803276142 * EducationBasic  +     0.40424625808481 *
4153521   +        EducationGraduation  +     1.95818378342783 * EducationMaster
4153522   +          +    -0.11238504444225 * Marital_StatusDivorced
4153523   +          +    -0.81348274043749 * Marital_StatusMarried
4153524   +          +     0.46075415610001 * Marital_StatusSingle
4153525   +          +    -0.17552649817722 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.55057637605468 * Education2n_Cycle + 
-0.73070803276142 * EducationBasic + 0.40424625808481 * EducationGraduation + 1.95818378342783 
* EducationMaster + -0.11238504444225 * Marital_StatusDivorced + -0.81348274043749 * 
Marital_StatusMarried + 0.46075415610001 * Marital_StatusSingle + -0.17552649817722 * 
Marital_StatusTogether ;
4153526   +   H1x2_5  = H1x2_5  +     0.43341125564688 * Education2n_Cycle
4153527   +          +     2.81958018976644 * EducationBasic  +     0.28773362443315 *
4153528   +        EducationGraduation  +     0.08396135672504 * EducationMaster
4153529   +          +    -0.46342068701431 * Marital_StatusDivorced
4153530   +          +    -0.41667845270204 * Marital_StatusMarried
4153531   +          +    -0.47166707496281 * Marital_StatusSingle
4153532   +          +     0.54110155717306 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.43341125564688 * Education2n_Cycle + 
2.81958018976644 * EducationBasic + 0.28773362443315 * EducationGraduation + 0.08396135672504 
* EducationMaster + -0.46342068701431 * Marital_StatusDivorced + -0.41667845270204 * 
Marital_StatusMarried + -0.47166707496281 * Marital_StatusSingle + 0.54110155717306 * 
Marital_StatusTogether ;
4153533   +   H1x2_6  = H1x2_6  +    -0.27163102711307 * Education2n_Cycle
4153534   +          +    -0.04052143781957 * EducationBasic  +     0.97902549344774 *
4153535   +        EducationGraduation  +     0.36656103863186 * EducationMaster
4153536   +          +    -0.45376613787812 * Marital_StatusDivorced
4153537   +          +     0.01337046049801 * Marital_StatusMarried
4153538   +          +    -0.92811489484121 * Marital_StatusSingle
4153539   +          +     1.52402650450634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.27163102711307 * Education2n_Cycle + 
-0.04052143781957 * EducationBasic + 0.97902549344774 * EducationGraduation + 0.36656103863186 
* EducationMaster + -0.45376613787812 * Marital_StatusDivorced + 0.01337046049801 * 
Marital_StatusMarried + -0.92811489484121 * Marital_StatusSingle + 1.52402650450634 * 
Marital_StatusTogether ;
4153540   +   H1x2_1  =     0.27200642200874 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.27200642200874 + H1x2_1 ;
4153541   +   H1x2_2  =     0.52117161047058 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.52117161047058 + H1x2_2 ;
4153542   +   H1x2_3  =    -1.04763461279984 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.04763461279984 + H1x2_3 ;
4153543   +   H1x2_4  =     0.10516307959318 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.10516307959318 + H1x2_4 ;
4153544   +   H1x2_5  =     1.24237093160919 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.24237093160919 + H1x2_5 ;
4153545   +   H1x2_6  =    -0.57977518763852 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.57977518763852 + H1x2_6 ;
4153546   +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
4153547   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
4153548   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , 
H1x2_7 );
4153549   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4153550   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
4153551   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
4153552   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
4153553   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
4153554   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
4153555   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
4153556   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
4153557   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
4153558   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
4153559   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
4153560   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
4153561   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
4153562   +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
4153563   +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
4153564   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
4153565   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
4153566   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
4153567   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
4153568   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
4153569   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
4153570   +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
4153571   +END;
MPRINT(EM_DIAGRAM):   END;
4153572   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4153573   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
4153574   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
4153575   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
4153576   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
4153577   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
4153578   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
4153579   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
4153580   +END;
MPRINT(EM_DIAGRAM):   END;
4153581   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4153582   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
4153583   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4153584   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4153585   +   H2x1_1  =     3.19986933046591 * H1x1_1  +    -0.53665634063887 * H1x1_2
4153586   +          +     1.71172628690017 * H1x1_3  +    -1.33944402954134 * H1x1_4
4153587   +          +    -1.93533827156845 * H1x1_5  +    -0.85772802964317 * H1x1_6
4153588   +          +     0.60984669129006 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.19986933046591 * H1x1_1 + -0.53665634063887 * H1x1_2 + 
1.71172628690017 * H1x1_3 + -1.33944402954134 * H1x1_4 + -1.93533827156845 * H1x1_5 + 
-0.85772802964317 * H1x1_6 + 0.60984669129006 * H1x1_7 ;
4153589   +   H2x1_2  =     -2.1883484075031 * H1x1_1  +     0.17578635446135 * H1x1_2
4153590   +          +    -1.79384950890077 * H1x1_3  +     0.88942614754722 * H1x1_4
4153591   +          +     0.41077752133457 * H1x1_5  +       0.509832853125 * H1x1_6
4153592   +          +    -0.28121910805072 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.1883484075031 * H1x1_1 + 0.17578635446135 * H1x1_2 + 
-1.79384950890077 * H1x1_3 + 0.88942614754722 * H1x1_4 + 0.41077752133457 * H1x1_5 + 
0.509832853125 * H1x1_6 + -0.28121910805072 * H1x1_7 ;
4153593   +   H2x1_3  =     0.86281981700921 * H1x1_1  +    -1.15482345233328 * H1x1_2
4153594   +          +     0.64743938802141 * H1x1_3  +     1.08117298211616 * H1x1_4
4153595   +          +      -0.363297480437 * H1x1_5  +    -1.58703254226713 * H1x1_6
4153596   +          +     0.54468402771449 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.86281981700921 * H1x1_1 + -1.15482345233328 * H1x1_2 + 
0.64743938802141 * H1x1_3 + 1.08117298211616 * H1x1_4 + -0.363297480437 * H1x1_5 + 
-1.58703254226713 * H1x1_6 + 0.54468402771449 * H1x1_7 ;
4153597   +   H2x1_4  =    -0.43420906601647 * H1x1_1  +     0.36485369627974 * H1x1_2
4153598   +          +    -2.42315183886716 * H1x1_3  +     0.22337896770247 * H1x1_4
4153599   +          +    -0.65684369622605 * H1x1_5  +     0.25211011207532 * H1x1_6
4153600   +          +     0.16704425645668 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.43420906601647 * H1x1_1 + 0.36485369627974 * H1x1_2 + 
-2.42315183886716 * H1x1_3 + 0.22337896770247 * H1x1_4 + -0.65684369622605 * H1x1_5 + 
0.25211011207532 * H1x1_6 + 0.16704425645668 * H1x1_7 ;
4153601   +   H2x1_5  =     0.61083333511105 * H1x1_1  +     1.11038871398931 * H1x1_2
4153602   +          +      0.4617674661653 * H1x1_3  +    -0.42039958365963 * H1x1_4
4153603   +          +    -1.37408000010678 * H1x1_5  +     0.03897439094411 * H1x1_6
4153604   +          +    -0.82592861674077 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.61083333511105 * H1x1_1 + 1.11038871398931 * H1x1_2 + 
0.4617674661653 * H1x1_3 + -0.42039958365963 * H1x1_4 + -1.37408000010678 * H1x1_5 + 
0.03897439094411 * H1x1_6 + -0.82592861674077 * H1x1_7 ;
4153605   +   H2x1_6  =     1.30877201101082 * H1x1_1  +     1.55143256487324 * H1x1_2
4153606   +          +    -1.20237741381937 * H1x1_3  +       2.394122059946 * H1x1_4
4153607   +          +     1.83804290225468 * H1x1_5  +     0.83132818010396 * H1x1_6
4153608   +          +     1.18399340483001 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.30877201101082 * H1x1_1 + 1.55143256487324 * H1x1_2 + 
-1.20237741381937 * H1x1_3 + 2.394122059946 * H1x1_4 + 1.83804290225468 * H1x1_5 + 
0.83132818010396 * H1x1_6 + 1.18399340483001 * H1x1_7 ;
4153609   +   H2x1_1  = H2x1_1  +    -2.41276052972753 * H1x2_1
4153610   +          +     0.38601054263899 * H1x2_2  +     0.54498789581044 * H1x2_3
4153611   +          +    -0.55304188445569 * H1x2_4  +     0.29484780749868 * H1x2_5
4153612   +          +     0.44012580105051 * H1x2_6  +     0.43086375065556 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.41276052972753 * H1x2_1 + 0.38601054263899 * H1x2_2 
+ 0.54498789581044 * H1x2_3 + -0.55304188445569 * H1x2_4 + 0.29484780749868 * H1x2_5 + 
0.44012580105051 * H1x2_6 + 0.43086375065556 * H1x2_7 ;
4153613   +   H2x1_2  = H2x1_2  +    -1.03173201511154 * H1x2_1
4153614   +          +     0.62119574580435 * H1x2_2  +     1.71782745718335 * H1x2_3
4153615   +          +     0.05391903933014 * H1x2_4  +     1.52443015967438 * H1x2_5
4153616   +          +     0.22301831343286 * H1x2_6  +     0.66204940430171 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.03173201511154 * H1x2_1 + 0.62119574580435 * H1x2_2 
+ 1.71782745718335 * H1x2_3 + 0.05391903933014 * H1x2_4 + 1.52443015967438 * H1x2_5 + 
0.22301831343286 * H1x2_6 + 0.66204940430171 * H1x2_7 ;
4153617   +   H2x1_3  = H2x1_3  +     1.37871502475142 * H1x2_1
4153618   +          +     0.02099445181492 * H1x2_2  +     0.44720218317742 * H1x2_3
4153619   +          +    -1.29625929820096 * H1x2_4  +    -1.29169956389384 * H1x2_5
4153620   +          +    -0.21403739905139 * H1x2_6  +    -0.03075946378871 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.37871502475142 * H1x2_1 + 0.02099445181492 * H1x2_2 
+ 0.44720218317742 * H1x2_3 + -1.29625929820096 * H1x2_4 + -1.29169956389384 * H1x2_5 + 
-0.21403739905139 * H1x2_6 + -0.03075946378871 * H1x2_7 ;
4153621   +   H2x1_4  = H2x1_4  +     1.94121727472617 * H1x2_1
4153622   +          +     0.23207290279299 * H1x2_2  +      0.3162872281134 * H1x2_3
4153623   +          +    -0.40199017937523 * H1x2_4  +     0.69294460110289 * H1x2_5
4153624   +          +    -1.00758272664059 * H1x2_6  +    -1.41698057960021 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.94121727472617 * H1x2_1 + 0.23207290279299 * H1x2_2 
+ 0.3162872281134 * H1x2_3 + -0.40199017937523 * H1x2_4 + 0.69294460110289 * H1x2_5 + 
-1.00758272664059 * H1x2_6 + -1.41698057960021 * H1x2_7 ;
4153625   +   H2x1_5  = H2x1_5  +     1.19546023857185 * H1x2_1
4153626   +          +    -1.00266987736442 * H1x2_2  +     0.71838447032796 * H1x2_3
4153627   +          +     1.70968347732204 * H1x2_4  +    -0.26894423802892 * H1x2_5
4153628   +          +    -0.61655519090213 * H1x2_6  +     2.21931491555405 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.19546023857185 * H1x2_1 + -1.00266987736442 * H1x2_2 
+ 0.71838447032796 * H1x2_3 + 1.70968347732204 * H1x2_4 + -0.26894423802892 * H1x2_5 + 
-0.61655519090213 * H1x2_6 + 2.21931491555405 * H1x2_7 ;
4153629   +   H2x1_6  = H2x1_6  +    -0.48559886762231 * H1x2_1
4153630   +          +     0.93218274010134 * H1x2_2  +     0.23140948782865 * H1x2_3
4153631   +          +     0.72139310562219 * H1x2_4  +    -0.11143939877368 * H1x2_5
4153632   +          +     0.74022211257293 * H1x2_6  +      1.0449314568566 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.48559886762231 * H1x2_1 + 0.93218274010134 * H1x2_2 
+ 0.23140948782865 * H1x2_3 + 0.72139310562219 * H1x2_4 + -0.11143939877368 * H1x2_5 + 
0.74022211257293 * H1x2_6 + 1.0449314568566 * H1x2_7 ;
4153633   +   H2x1_1  =     0.42952855003777 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.42952855003777 + H2x1_1 ;
4153634   +   H2x1_2  =     1.61752083096638 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.61752083096638 + H2x1_2 ;
4153635   +   H2x1_3  =    -0.71617788867723 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.71617788867723 + H2x1_3 ;
4153636   +   H2x1_4  =     0.39147546708847 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.39147546708847 + H2x1_4 ;
4153637   +   H2x1_5  =    -0.56259054185247 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.56259054185247 + H2x1_5 ;
4153638   +   H2x1_6  =     0.31857109159246 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.31857109159246 + H2x1_6 ;
4153639   +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
4153640   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
4153641   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , 
H2x1_7 );
4153642   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4153643   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
4153644   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
4153645   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
4153646   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
4153647   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
4153648   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
4153649   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
4153650   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
4153651   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
4153652   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
4153653   +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
4153654   +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
4153655   +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
4153656   +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
4153657   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
4153658   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
4153659   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
4153660   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
4153661   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
4153662   +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
4153663   +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
4153664   +END;
MPRINT(EM_DIAGRAM):   END;
4153665   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4153666   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
4153667   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
4153668   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
4153669   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
4153670   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
4153671   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
4153672   +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
4153673   +END;
MPRINT(EM_DIAGRAM):   END;
4153674   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4153675   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
4153676   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4153677   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
4153678   +   P_DepVar1  =     25.2027326018714 * H2x1_1  +    -8.05331379419082 * H2x1_2
4153679   +          +     2.64798805383536 * H2x1_3  +    -4.52736775271107 * H2x1_4
4153680   +          +     6.71812741736202 * H2x1_5  +    -12.2785047473885 * H2x1_6
4153681   +          +    -4.41291972336422 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 25.2027326018714 * H2x1_1 + -8.05331379419082 * H2x1_2 + 
2.64798805383536 * H2x1_3 + -4.52736775271107 * H2x1_4 + 6.71812741736202 * H2x1_5 + 
-12.2785047473885 * H2x1_6 + -4.41291972336422 * H2x1_7 ;
4153682   +   P_DepVar1  =     1.22134962002326 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.22134962002326 + P_DepVar1 ;
4153683   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
4153684   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
4153685   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
4153686   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
4153687   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
4153688   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
4153689   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
4153690   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
4153691   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
4153692   +END;
MPRINT(EM_DIAGRAM):   END;
4153693   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
4153694   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
4153695   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
4153696   +END;
MPRINT(EM_DIAGRAM):   END;
4153697   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
4153698   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
4153699   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
4153700   +END;
MPRINT(EM_DIAGRAM):   END;
4153701   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4153702   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
4153703   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
4153704   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
4153705   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
4153706   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
4153707   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
4153708   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
4153709   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
4153710   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
4153711   +END;
MPRINT(EM_DIAGRAM):   END;
4153712   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4153713   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
4153714   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
4153715   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4153716    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_DIAGRAM):   quit;
4153717    quit;
4153718    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4153719    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4153720    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4153721    retain ID 2 Node "AutoNeural12";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural12";
4153722    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4153723    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7460 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 7460 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4153724    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4153725    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4153726    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7460 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 7460 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4153727    proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME 
CREATOR);
4153728    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4153729    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL12_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4153730    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4153731    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4153732    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4153733    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4153734    proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
4153735    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 74 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

4153736    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4153737    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4153738    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 74 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 74 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4153739    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4153740    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4153741    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4153742    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 74 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 74 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4153743    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4153744    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4153744  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3727 rows and 5 columns.

4153745    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4153746    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
4153747    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 3727 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 3727 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4153748    filename _pref
4153748  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
4153749    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4153750    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
4153751   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4153752   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
4153753   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
4153754   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
4153755   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
4153756   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4153757    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
4153758    quit;
4153759    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4153760    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4153761    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4153762    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
4153763    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4153764    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4153765    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4153766    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4153767    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4153768    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
4153769    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4153770    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4153771    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4153772    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4153773    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4153774    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4153775    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
4153776    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

4153777    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4153778    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4153779    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4153780    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4153781    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4153782    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4153783    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4153784    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4153785    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4153785  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

4153786    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4153787    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
4153788    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 3731 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4153789    filename _pref
4153789  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
4153790    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4153791    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
4153792   +
4153793   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
4153794   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
4153794  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
4153795   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
4153796   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
4153797   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
4153798   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
4153799   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4153800    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
4153801    quit;
4153802    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4153803    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4153804    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4153805    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
4153806    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4153807    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4153808    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4153809    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4153810    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4153811    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
4153812    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4153813    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4153814    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4153815    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4153816    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4153817    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4153818    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
4153819    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4153820    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4153821    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4153822    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4153823    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4153824    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4153825    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4153826    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4153827    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4153828    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4153828  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

4153829    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4153830    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
4153831    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 3770 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4153832    filename _pref
4153832  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
4153833    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
4153834    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
4153835   +
4153836   +
4153837   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
4153838   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
4153839   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
4153840   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
4153841   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
4153842   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4153843   +
4153844   +
4153845   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
4153846   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
4153847   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
4153848   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
4153849   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
4153850   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4153851   +
4153852   +
4153853   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
4153854   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
4153855   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
4153856   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
4153857   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
4153858   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4153859   +
4153860   +
4153861   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
4153862   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
4153863   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
4153864   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
4153865   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
4153866   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4153867   +
4153868   +
4153869   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
4153870   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
4153871   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
4153872   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
4153873   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
4153874   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4153875   +
4153876   +
4153877   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
4153878   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
4153879   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
4153880   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
4153881   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
4153882   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4153883   +
4153884   +
4153885   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
4153886   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
4153887   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
4153888   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
4153889   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
4153890   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4153891   +
4153892   +
4153893   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
4153894   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
4153895   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
4153896   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
4153897   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
4153898   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
4153899   +if
4153900   +_FILTERNORM1 not in ( '.')
4153901   + and
4153902   +_FILTERNORM2 not in ( '.')
4153903   + and
4153904   +_FILTERNORM3 not in ( '.')
4153905   + and
4153906   +_FILTERNORM4 not in ( '.')
4153907   + and
4153908   +_FILTERNORM5 not in ( '.')
4153909   + and
4153910   +_FILTERNORM6 not in ( '.')
4153911   + and
4153912   +_FILTERNORM7 not in ( ' ')
4153913   + and
4153914   +_FILTERNORM8 not in ( ' ')
4153915   +and
4153916   +( Dt_Customer ne .)
4153917   +and ( Income ne . and (Income<=107000))
4153918   +and ( Kidhome ne .)
4153919   +and ( MntFishProducts ne .)
4153920   +and ( MntFruits ne .)
4153921   +and ( MntGoldProds ne .)
4153922   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
4153923   +and ( MntSweetProducts ne .)
4153924   +and ( MntWines ne .)
4153925   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
4153926   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
4153927   +and ( NumStorePurchases ne .)
4153928   +and ( NumWebPurchases ne .)
4153929   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
4153930   +and ( Recency ne .)
4153931   +and ( Teenhome ne .)
4153932   +and ( Year_Birth ne .)
4153933   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
4153934   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
4153935   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
4153936   +end;
MPRINT(EM_DIAGRAM):   end;
4153937   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
4153938   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
4153939    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
4153940    quit;
4153941    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
4153942    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
4153943    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
4153944    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
4153945    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
4153946    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4153947    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
4153948    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4153949    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4153950    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
4153951    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4153952    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4153953    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4153954    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
4153955    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
4153956    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4153957    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
4153958    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

4153959    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
4153960    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4153961    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4153962    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
4153963    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
4153964    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
4153965    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

4153966    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4153967    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
4153967  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

4153968    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4153969    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
4153970    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 3836 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4153971    %macro varDept(fcmpdata=,id=);
4153972    %global nobs&id scoreFlag&id;
4153973    %let scoreFlag&id = 0;
4153974    %if &id=1 or ^&fcmpStart %then %do;
4153975    proc sort data=&fcmpdata out=_temp&id nodupkey;
4153976    by NAME;
4153977    where id=&id and LHS in( %let j=1;
4153978    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
4153979    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
4153980    "&var" %let j = %eval(&j+1);
4153981    %end;
4153982    );
4153983    run;
4153984    %let dsid = %sysfunc(open(_temp&id));
4153985    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4153986    %let dsid = %sysfunc(close(&dsid));
4153987    %if &&nobs&id %then %do;
4153988    %let scoreFlag&id = 1;
4153989    %let fcmpStart = 1;
4153990    %end;
4153991    %else %let fcmpStart = 0;
4153992    %end;
4153993    %else %do;
4153994    proc sort data=&fcmpdata out=_tempid;
4153995    where id=&id;
4153996    by LHS;
4153997    run;
4153998    %let dsid = %sysfunc(open(_tempid));
4153999    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4154000    %let dsid = %sysfunc(close(&dsid));
4154001    %if ^&&nobs&id %then %do;
4154002    proc datasets lib=work nolist;
4154003    delete _tempid;
4154004    run;
4154005    quit;
4154006    %end;
4154007    %else %do;
4154008    data _tempAll;
4154009    set %let j=%eval(&id-1);
4154010    %do x=1 %to &j;
4154011    %if &&nobs&x %then %do;
4154012    _temp&x %end;
4154013    %end;
4154014    ;
4154015    run;
4154016    proc sql;
4154017    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
4154017  ! work._tempid p2 where p.name=p2.lhs;
4154018    quit;
4154019    data _temp&id;
4154020    set _temp&id;
4154021    where LHS ne '' and NAME ne '' and Node ne '';
4154022    run;
4154023    proc datasets lib=work nolist;
4154024    delete _tempAll;
4154025    run;
4154026    %let dsid = %sysfunc(open(_temp&id));
4154027    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4154028    %let dsid = %sysfunc(close(&dsid));
4154029    %if ^&&nobs&id %then %do;
4154030    proc datasets lib=work nolist;
4154031    delete _temp&id;
4154032    run;
4154033    quit;
4154034    %end;
4154035    %else %do;
4154036    %let scoreFlag&id = 1;
4154037    data _temp&id;
4154038    set _temp&id;
4154039    where LHS ne NAME and node ne '';
4154040    run;
4154041    %let dsid = %sysfunc(open(_temp&id));
4154042    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
4154043    %let dsid = %sysfunc(close(&dsid));
4154044    %if ^&&nobs&id %then %do;
4154045    proc datasets lib=work nolist;
4154046    delete _temp&id;
4154047    run;
4154048    quit;
4154049    %end;
4154050    %else %do;
4154051    proc sort data=_temp&id nodupkey;
4154052    by LHS NAME;
4154053    run;
4154054    %end;
4154055    %end;
4154056    %end;
4154057    %end;
4154058    %mend varDept;
4154059    %macro optCode(outdata=fcmpdata);
4154060    %global fcmpStart;
4154061    %let fcmpStart = 0;
4154062    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
4154063    %let NumNodes=9;
4154064    %do k=1 %to &NumNodes;
4154065    %vardept(fcmpdata=&outdata, id=&k);
4154066    %end;
4154067    %mend optCode;
4154068    %optcode(outData=EMWS8.Ensmbl38_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 197 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 142 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 55 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 55 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 55 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 55 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 59 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 55 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 98 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

4154069    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
4154070    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
4154071    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
4154072    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

4154073    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
4154074    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
4154075    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
4154076    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4154077    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
4154078    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
4154078  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

4154079    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

4154080    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
4154081    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
4154082    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4154083    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
4154084    * Ensmbl38: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Computing metadata for TRAIN data;
4154085    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL38_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl38\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl38_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl38_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl38_TRAIN out=WORK.M1C21HHY noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1C21HHY;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1C21HHY(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1C21HHY;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1C21HHY;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1GTZ174 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1GTZ174;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1GTZ174;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M197QNOH(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1GTZ174;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1GTZ174;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1GTZ174;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1GTZ174;
MPRINT(EMADVISECOLUMNS):   set WORK.M1GTZ174;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural6_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural6_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl38_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl38";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl38";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl38";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl38";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl38";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl38";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl38";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl38";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl38";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl38";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" 
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl38";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
4154405    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
4154406    set EMWS8.Ensmbl38_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl38_EMINFO;
4154407    where DATA='Ensmbl38' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl38' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
4154408    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_EMINFO.
      WHERE (DATA='Ensmbl38') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4154409    data EMWS8.Ensmbl38_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl38_EMINFO;
4154410    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
4154411    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
4154412    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL38_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   run;
4154416    run;
4154417    data EMWS8.Ensmbl38_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl38_EMINFO;
4154418    set EMWS8.Ensmbl38_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl38_EMINFO WORK.MODELTEMP_INFO;
4154419    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL38_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL38_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4154420    proc sort data = EMWS8.Ensmbl38_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl38_EMINFO NOTHREADS;
4154421    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
4154422    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL38_EMINFO.
NOTE: The data set EMWS8.ENSMBL38_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

4154423    proc sort data = EMWS8.AutoNeural6_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural6_EMINFO OUT=WORK.SORTEDEMINFO 
NOTHREADS;
4154424    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
4154425    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.AUTONEURAL6_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4154426    proc sort data = EMWS8.Ensmbl38_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl38_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
4154427    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
4154428    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL38_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4154429    data EMWS8.Ensmbl38_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl38_EMINFO;
4154430    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
4154431    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
4154432    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL38_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

4154433    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
4154434    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
4154435    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
4154436    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.09 seconds
      

NOTE: View EMWS8.ENSMBL38_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      
NOTE: View EMWS8.ENSMBL38_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
