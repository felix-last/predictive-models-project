MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.05 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                21. April 2016
Time:                19.05 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O25LE_BG 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl38\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O25LE_BG new;
MPRINT(EM_DIAGRAM):   run;
2306690    filename emflow
2306690  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl38\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl38\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Scoring AUTONEURAL6_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2306691    *------------------------------------------------------------*;
2306692    * Ensmbl38: Scoring AUTONEURAL6_TRAIN data;
2306693    *------------------------------------------------------------*;
2306694    data EMWS8.Ensmbl38_TRAIN
2306695    / view=EMWS8.Ensmbl38_TRAIN
2306696    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl38_TRAIN / view=EMWS8.Ensmbl38_TRAIN ;
2306697    set EMWS8.AutoNeural6_TRAIN
2306698    ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural6_TRAIN ;
2306699    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl38\EMFLOWSCORE.sas.
2306700   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2306701   +* Ensmbl38: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Combine model for DepVar;
2306702   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2306703   +* Ensmbl38: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Scoring Code of model 1 of 7;
2306704   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2306705   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2306706   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
2306707   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2306708   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
2306709   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2306710   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2306711   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
2306712   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
2306713   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
2306714   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2306715   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2306716   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
2306717   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2306718   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
2306719   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2306720   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2306721   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
2306722   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2306723   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
2306724   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2306725   +
2306726   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2306727   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2306727  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2306728   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2306729   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2306730   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2306731   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2306732   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
2306733   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2306734   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
2306735   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2306736   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
2306737   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2306738   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2306739   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2306740   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2306741   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2306742   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2306743   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
2306744   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2306745   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
2306746   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2306747   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
2306748   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2306749   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2306750   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
2306751   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2306752   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
2306753   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2306754   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2306755   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2306756   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2306757   +* NODE: AutoNeural6;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural6;
2306758   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2306759   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2306760   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2306761   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2306762   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2306763   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2306764   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2306765   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2306766   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2306767   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2306768   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2306769   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2306770   +LENGTH _WARN_ $4
2306771   +      F_DepVar  $ 12
2306772   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2306773   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2306774   +
2306775   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2306776   +
2306777   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2306778   +
2306779   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2306780   +
2306781   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2306782   +
2306783   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2306784   +
2306785   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2306786   +
2306787   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2306788   +
2306789   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2306790   +
2306791   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2306792   +
2306793   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2306794   +
2306795   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2306796   +
2306797   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2306798   +
2306799   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2306800   +
2306801   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2306802   +
2306803   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2306804   +
2306805   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2306806   +
2306807   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2306808   +
2306809   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2306810   +
2306811   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2306812   +
2306813   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2306814   +
2306815   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2306816   +
2306817   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2306818   +
2306819   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2306820   +
2306821   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2306822   +
2306823   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2306824   +
2306825   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2306826   +
2306827   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2306828   +
2306829   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2306830   +
2306831   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2306832   +
2306833   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2306834   +
2306835   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2306836   +
2306837   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2306838   +
2306839   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2306840   +
2306841   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2306842   +
2306843   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2306844   +
2306845   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2306846   +
2306847   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2306848   +
2306849   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2306850   +
2306851   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2306852   +
2306853   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2306854   +
2306855   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2306856   +
2306857   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
2306858   +
2306859   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
2306860   +
2306861   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2306862   +
2306863   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2306864   +
2306865   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2306866   +
2306867   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2306868   +
2306869   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2306870   +
2306871   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2306872   +
2306873   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2306874   +
2306875   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2306876   +
2306877   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2306878   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2306879   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2306880   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2306881   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2306882   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2306883   +end;
MPRINT(EM_DIAGRAM):   end;
2306884   +else do;
MPRINT(EM_DIAGRAM):   else do;
2306885   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2306886   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2306887   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2306888   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2306889   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2306890   +   end;
MPRINT(EM_DIAGRAM):   end;
2306891   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2306892   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2306893   +   end;
MPRINT(EM_DIAGRAM):   end;
2306894   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2306895   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2306896   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2306897   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2306898   +   end;
MPRINT(EM_DIAGRAM):   end;
2306899   +end;
MPRINT(EM_DIAGRAM):   end;
2306900   +
2306901   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2306902   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2306903   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2306904   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2306905   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2306906   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2306907   +end;
MPRINT(EM_DIAGRAM):   end;
2306908   +else do;
MPRINT(EM_DIAGRAM):   else do;
2306909   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2306910   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2306911   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2306912   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2306913   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2306914   +   end;
MPRINT(EM_DIAGRAM):   end;
2306915   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2306916   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2306917   +   end;
MPRINT(EM_DIAGRAM):   end;
2306918   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2306919   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2306920   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2306921   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2306922   +   end;
MPRINT(EM_DIAGRAM):   end;
2306923   +end;
MPRINT(EM_DIAGRAM):   end;
2306924   +
2306925   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2306926   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2306927   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2306928   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2306929   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2306930   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2306931   +end;
MPRINT(EM_DIAGRAM):   end;
2306932   +else do;
MPRINT(EM_DIAGRAM):   else do;
2306933   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2306934   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2306935   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2306936   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2306937   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2306938   +   end;
MPRINT(EM_DIAGRAM):   end;
2306939   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2306940   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2306941   +   end;
MPRINT(EM_DIAGRAM):   end;
2306942   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2306943   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2306944   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2306945   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2306946   +   end;
MPRINT(EM_DIAGRAM):   end;
2306947   +end;
MPRINT(EM_DIAGRAM):   end;
2306948   +
2306949   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2306950   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2306951   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2306952   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2306953   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2306954   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2306955   +end;
MPRINT(EM_DIAGRAM):   end;
2306956   +else do;
MPRINT(EM_DIAGRAM):   else do;
2306957   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2306958   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2306959   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2306960   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2306961   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2306962   +   end;
MPRINT(EM_DIAGRAM):   end;
2306963   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2306964   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2306965   +   end;
MPRINT(EM_DIAGRAM):   end;
2306966   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2306967   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2306968   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2306969   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2306970   +   end;
MPRINT(EM_DIAGRAM):   end;
2306971   +end;
MPRINT(EM_DIAGRAM):   end;
2306972   +
2306973   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2306974   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2306975   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2306976   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2306977   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2306978   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2306979   +end;
MPRINT(EM_DIAGRAM):   end;
2306980   +else do;
MPRINT(EM_DIAGRAM):   else do;
2306981   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2306982   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2306983   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2306984   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2306985   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2306986   +   end;
MPRINT(EM_DIAGRAM):   end;
2306987   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2306988   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2306989   +   end;
MPRINT(EM_DIAGRAM):   end;
2306990   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2306991   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2306992   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2306993   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2306994   +   end;
MPRINT(EM_DIAGRAM):   end;
2306995   +end;
MPRINT(EM_DIAGRAM):   end;
2306996   +
2306997   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2306998   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2306999   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2307000   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2307001   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2307002   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2307003   +end;
MPRINT(EM_DIAGRAM):   end;
2307004   +else do;
MPRINT(EM_DIAGRAM):   else do;
2307005   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2307006   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2307007   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2307008   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2307009   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2307010   +   end;
MPRINT(EM_DIAGRAM):   end;
2307011   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2307012   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2307013   +   end;
MPRINT(EM_DIAGRAM):   end;
2307014   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2307015   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2307016   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2307017   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2307018   +   end;
MPRINT(EM_DIAGRAM):   end;
2307019   +end;
MPRINT(EM_DIAGRAM):   end;
2307020   +
2307021   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2307022   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2307023   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2307024   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2307025   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2307026   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2307027   +end;
MPRINT(EM_DIAGRAM):   end;
2307028   +else do;
MPRINT(EM_DIAGRAM):   else do;
2307029   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2307030   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2307031   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2307032   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2307033   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2307034   +   end;
MPRINT(EM_DIAGRAM):   end;
2307035   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2307036   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2307037   +   end;
MPRINT(EM_DIAGRAM):   end;
2307038   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2307039   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2307040   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2307041   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2307042   +   end;
MPRINT(EM_DIAGRAM):   end;
2307043   +end;
MPRINT(EM_DIAGRAM):   end;
2307044   +
2307045   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2307046   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2307047   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2307048   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2307049   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2307050   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2307051   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2307052   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2307053   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2307054   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2307055   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2307056   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2307057   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2307058   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2307059   +end;
MPRINT(EM_DIAGRAM):   end;
2307060   +else do;
MPRINT(EM_DIAGRAM):   else do;
2307061   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2307062   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2307063   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2307064   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2307065   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2307066   +   end;
MPRINT(EM_DIAGRAM):   end;
2307067   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2307068   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2307069   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2307070   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2307071   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2307072   +   end;
MPRINT(EM_DIAGRAM):   end;
2307073   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2307074   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2307075   +   end;
MPRINT(EM_DIAGRAM):   end;
2307076   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2307077   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2307078   +   end;
MPRINT(EM_DIAGRAM):   end;
2307079   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2307080   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2307081   +   end;
MPRINT(EM_DIAGRAM):   end;
2307082   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2307083   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2307084   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2307085   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2307086   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2307087   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2307088   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2307089   +   end;
MPRINT(EM_DIAGRAM):   end;
2307090   +end;
MPRINT(EM_DIAGRAM):   end;
2307091   +
2307092   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2307093   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2307094   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2307095   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2307096   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2307097   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2307098   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2307099   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2307100   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2307101   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2307102   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2307103   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2307104   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2307105   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2307106   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2307107   +end;
MPRINT(EM_DIAGRAM):   end;
2307108   +else do;
MPRINT(EM_DIAGRAM):   else do;
2307109   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2307110   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2307111   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2307112   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2307113   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2307114   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2307115   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2307116   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2307117   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2307118   +         end;
MPRINT(EM_DIAGRAM):   end;
2307119   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2307120   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2307121   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2307122   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2307123   +            end;
MPRINT(EM_DIAGRAM):   end;
2307124   +         end;
MPRINT(EM_DIAGRAM):   end;
2307125   +      end;
MPRINT(EM_DIAGRAM):   end;
2307126   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2307127   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2307128   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2307129   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2307130   +         end;
MPRINT(EM_DIAGRAM):   end;
2307131   +      end;
MPRINT(EM_DIAGRAM):   end;
2307132   +   end;
MPRINT(EM_DIAGRAM):   end;
2307133   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2307134   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2307135   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2307136   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2307137   +      end;
MPRINT(EM_DIAGRAM):   end;
2307138   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2307139   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2307140   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2307141   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2307142   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2307143   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2307144   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2307145   +         end;
MPRINT(EM_DIAGRAM):   end;
2307146   +      end;
MPRINT(EM_DIAGRAM):   end;
2307147   +   end;
MPRINT(EM_DIAGRAM):   end;
2307148   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2307149   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2307150   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2307151   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2307152   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2307153   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2307154   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2307155   +   end;
MPRINT(EM_DIAGRAM):   end;
2307156   +end;
MPRINT(EM_DIAGRAM):   end;
2307157   +
2307158   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2307159   +*** Checking missing input Interval
2307160   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2307161   +
2307162   +IF NMISS(
2307163   +   AcceptedCmpTotal ,
2307164   +   Age ,
2307165   +   Frq ,
2307166   +   Income ,
2307167   +   Kidhome ,
2307168   +   Mnt ,
2307169   +   MntFishProducts ,
2307170   +   MntFruits ,
2307171   +   MntGoldProds ,
2307172   +   MntMeatProducts ,
2307173   +   MntSweetProducts ,
2307174   +   MntWines ,
2307175   +   MonthsAsCustomer ,
2307176   +   NumCatalogPurchases ,
2307177   +   NumDealsPurchases ,
2307178   +   NumDistPurchases ,
2307179   +   NumStorePurchases ,
2307180   +   NumWebPurchases ,
2307181   +   NumWebVisitsMonth ,
2307182   +   RFMstat ,
2307183   +   RMntFrq ,
2307184   +   Recency ,
2307185   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2307186   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2307187   +
2307188   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2307189   +END;
MPRINT(EM_DIAGRAM):   END;
2307190   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2307191   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2307192   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2307193   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2307194   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2307195   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2307196   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2307197   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2307198   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2307199   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2307200   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2307201   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2307202   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2307203   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2307204   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2307205   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2307206   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2307207   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2307208   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2307209   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2307210   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2307211   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2307212   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2307213   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2307214   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2307215   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2307216   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2307217   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2307218   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2307219   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2307220   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2307221   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2307222   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2307223   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2307224   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2307225   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2307226   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2307227   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2307228   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2307229   +END;
MPRINT(EM_DIAGRAM):   END;
2307230   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2307231   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2307232   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2307233   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2307234   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2307235   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2307236   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2307237   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2307238   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2307239   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2307240   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2307241   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2307242   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2307243   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2307244   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2307245   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2307246   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2307247   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2307248   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2307249   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2307250   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2307251   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2307252   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2307253   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2307254   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2307255   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2307256   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2307257   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2307258   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2307259   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2307260   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2307261   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2307262   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2307263   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2307264   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2307265   +   ELSE S_NumCatalogPurchases
2307266   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2307267   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2307268   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2307269   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2307270   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2307271   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2307272   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2307273   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2307274   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2307275   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2307276   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2307277   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2307278   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2307279   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2307280   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2307281   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2307282   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2307283   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2307284   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2307285   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2307286   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2307287   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2307288   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2307289   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2307290   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2307291   +END;
MPRINT(EM_DIAGRAM):   END;
2307292   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2307293   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2307294   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2307295   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2307296   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2307297   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2307298   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2307299   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2307300   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2307301   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2307302   +   H1x1_1  =    -3.58610125218709 * S_AcceptedCmpTotal
2307303   +          +      0.1034811843747 * S_Age  +     0.39544028595127 * S_Frq
2307304   +          +    -0.18231722539263 * S_Income  +    -0.03870407570941 *
2307305   +        S_Kidhome  +    -1.16091345020536 * S_Mnt  +     1.24392687313576 *
2307306   +        S_MntFishProducts  +      0.5171197802007 * S_MntFruits
2307307   +          +    -0.29481140967179 * S_MntGoldProds  +     -6.3245339832634 *
2307308   +        S_MntMeatProducts  +     0.05701652400298 * S_MntSweetProducts
2307309   +          +     2.01183524149713 * S_MntWines  +      0.1559752121464 *
2307310   +        S_MonthsAsCustomer  +    -0.99459554032634 * S_NumCatalogPurchases
2307311   +          +    -1.19682864242203 * S_NumDealsPurchases
2307312   +          +     0.18491015618084 * S_NumDistPurchases
2307313   +          +     1.22999585210812 * S_NumStorePurchases
2307314   +          +     1.21627782358382 * S_NumWebPurchases
2307315   +          +    -0.64580024249846 * S_NumWebVisitsMonth
2307316   +          +       -1.52926696879 * S_RFMstat  +     0.09101674367882 *
2307317   +        S_RMntFrq  +     0.46175359879811 * S_Recency
2307318   +          +      0.1705852499504 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -3.58610125218709 * S_AcceptedCmpTotal + 0.1034811843747 * 
S_Age + 0.39544028595127 * S_Frq + -0.18231722539263 * S_Income + -0.03870407570941 * 
S_Kidhome + -1.16091345020536 * S_Mnt + 1.24392687313576 * S_MntFishProducts + 0.5171197802007 
* S_MntFruits + -0.29481140967179 * S_MntGoldProds + -6.3245339832634 * S_MntMeatProducts + 
0.05701652400298 * S_MntSweetProducts + 2.01183524149713 * S_MntWines + 0.1559752121464 * 
S_MonthsAsCustomer + -0.99459554032634 * S_NumCatalogPurchases + -1.19682864242203 * 
S_NumDealsPurchases + 0.18491015618084 * S_NumDistPurchases + 1.22999585210812 * 
S_NumStorePurchases + 1.21627782358382 * S_NumWebPurchases + -0.64580024249846 * 
S_NumWebVisitsMonth + -1.52926696879 * S_RFMstat + 0.09101674367882 * S_RMntFrq + 
0.46175359879811 * S_Recency + 0.1705852499504 * S_Teenhome ;
2307319   +   H1x1_1  = H1x1_1  +     2.18474005035414 * AcceptedCmp10
2307320   +          +    -1.53162389083003 * AcceptedCmp20  +    -2.29277671168891 *
2307321   +        AcceptedCmp30  +    -1.81334015960325 * AcceptedCmp40
2307322   +          +     3.00906427900623 * AcceptedCmp50  +    -0.01785398957027 *
2307323   +        Complain0  +     0.09533245215119 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 2.18474005035414 * AcceptedCmp10 + -1.53162389083003 * 
AcceptedCmp20 + -2.29277671168891 * AcceptedCmp30 + -1.81334015960325 * AcceptedCmp40 + 
3.00906427900623 * AcceptedCmp50 + -0.01785398957027 * Complain0 + 0.09533245215119 * 
HigherEducationBinary0 ;
2307324   +   H1x1_1  = H1x1_1  +    -0.19679105832724 * Education2n_Cycle
2307325   +          +    -0.01818107423643 * EducationBasic  +    -0.18996010075668 *
2307326   +        EducationGraduation  +     0.09891975371592 * EducationMaster
2307327   +          +     0.22010007588989 * Marital_StatusDivorced
2307328   +          +    -0.15233151420698 * Marital_StatusMarried
2307329   +          +    -0.03753447021411 * Marital_StatusSingle
2307330   +          +    -0.12393264098828 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.19679105832724 * Education2n_Cycle + 
-0.01818107423643 * EducationBasic + -0.18996010075668 * EducationGraduation + 
0.09891975371592 * EducationMaster + 0.22010007588989 * Marital_StatusDivorced + 
-0.15233151420698 * Marital_StatusMarried + -0.03753447021411 * Marital_StatusSingle + 
-0.12393264098828 * Marital_StatusTogether ;
2307331   +   H1x1_1  =    -2.03360566990293 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.03360566990293 + H1x1_1 ;
2307332   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2307333   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2307334   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2307335   +END;
MPRINT(EM_DIAGRAM):   END;
2307336   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2307337   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2307338   +END;
MPRINT(EM_DIAGRAM):   END;
2307339   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2307340   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2307341   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2307342   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2307343   +   H1x2_1  =    -1.34015862386497 * S_AcceptedCmpTotal
2307344   +          +    -0.12636545702442 * S_Age  +     -0.5924835968803 * S_Frq
2307345   +          +    -1.16470189655356 * S_Income  +     0.83635320773782 *
2307346   +        S_Kidhome  +     0.46426970005348 * S_Mnt  +      0.0582061340736 *
2307347   +        S_MntFishProducts  +     0.03283536111015 * S_MntFruits
2307348   +          +    -0.17688658751969 * S_MntGoldProds  +    -1.46234100343269 *
2307349   +        S_MntMeatProducts  +     0.00799959000074 * S_MntSweetProducts
2307350   +          +    -0.08957801596115 * S_MntWines  +     0.12596915108875 *
2307351   +        S_MonthsAsCustomer  +    -1.16745981687215 * S_NumCatalogPurchases
2307352   +          +    -0.66146733174161 * S_NumDealsPurchases
2307353   +          +     1.52784459399302 * S_NumDistPurchases
2307354   +          +     1.49997699453958 * S_NumStorePurchases
2307355   +          +     0.63969125024997 * S_NumWebPurchases
2307356   +          +    -2.09769625435387 * S_NumWebVisitsMonth
2307357   +          +    -0.01970574649071 * S_RFMstat  +     1.32583910804448 *
2307358   +        S_RMntFrq  +     2.03378172701659 * S_Recency
2307359   +          +     0.55759907248821 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.34015862386497 * S_AcceptedCmpTotal + -0.12636545702442 * 
S_Age + -0.5924835968803 * S_Frq + -1.16470189655356 * S_Income + 0.83635320773782 * S_Kidhome 
+ 0.46426970005348 * S_Mnt + 0.0582061340736 * S_MntFishProducts + 0.03283536111015 * 
S_MntFruits + -0.17688658751969 * S_MntGoldProds + -1.46234100343269 * S_MntMeatProducts + 
0.00799959000074 * S_MntSweetProducts + -0.08957801596115 * S_MntWines + 0.12596915108875 * 
S_MonthsAsCustomer + -1.16745981687215 * S_NumCatalogPurchases + -0.66146733174161 * 
S_NumDealsPurchases + 1.52784459399302 * S_NumDistPurchases + 1.49997699453958 * 
S_NumStorePurchases + 0.63969125024997 * S_NumWebPurchases + -2.09769625435387 * 
S_NumWebVisitsMonth + -0.01970574649071 * S_RFMstat + 1.32583910804448 * S_RMntFrq + 
2.03378172701659 * S_Recency + 0.55759907248821 * S_Teenhome ;
2307360   +   H1x2_1  = H1x2_1  +    -0.24193029168147 * AcceptedCmp10
2307361   +          +    -0.28450683390946 * AcceptedCmp20  +     -0.0683858491191 *
2307362   +        AcceptedCmp30  +    -0.15614087988626 * AcceptedCmp40
2307363   +          +    -0.00784031523012 * AcceptedCmp50  +    -0.11434662666735 *
2307364   +        Complain0  +     0.17135914429981 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.24193029168147 * AcceptedCmp10 + -0.28450683390946 
* AcceptedCmp20 + -0.0683858491191 * AcceptedCmp30 + -0.15614087988626 * AcceptedCmp40 + 
-0.00784031523012 * AcceptedCmp50 + -0.11434662666735 * Complain0 + 0.17135914429981 * 
HigherEducationBinary0 ;
2307365   +   H1x2_1  = H1x2_1  +    -0.91069327306501 * Education2n_Cycle
2307366   +          +     0.63283182620199 * EducationBasic  +     0.06874518657922 *
2307367   +        EducationGraduation  +     0.29783240130451 * EducationMaster
2307368   +          +    -0.26556711862055 * Marital_StatusDivorced
2307369   +          +     1.14529440208202 * Marital_StatusMarried
2307370   +          +    -1.05822467297368 * Marital_StatusSingle
2307371   +          +     1.15985285453738 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.91069327306501 * Education2n_Cycle + 
0.63283182620199 * EducationBasic + 0.06874518657922 * EducationGraduation + 0.29783240130451 
* EducationMaster + -0.26556711862055 * Marital_StatusDivorced + 1.14529440208202 * 
Marital_StatusMarried + -1.05822467297368 * Marital_StatusSingle + 1.15985285453738 * 
Marital_StatusTogether ;
2307372   +   H1x2_1  =     1.34590181201712 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.34590181201712 + H1x2_1 ;
2307373   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2307374   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2307375   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
2307376   +END;
MPRINT(EM_DIAGRAM):   END;
2307377   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2307378   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2307379   +END;
MPRINT(EM_DIAGRAM):   END;
2307380   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2307381   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2307382   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2307383   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2307384   +   H1x3_1  =     -1.6712582237902 * S_AcceptedCmpTotal
2307385   +          +     0.06710548571072 * S_Age  +     0.42661812684843 * S_Frq
2307386   +          +    -0.68314976524229 * S_Income  +     1.35939207675559 *
2307387   +        S_Kidhome  +     0.81255710413612 * S_Mnt  +     1.01355330034385 *
2307388   +        S_MntFishProducts  +     0.05813114723871 * S_MntFruits
2307389   +          +    -0.71193745984367 * S_MntGoldProds  +    -1.58572681664837 *
2307390   +        S_MntMeatProducts  +     0.98292174643851 * S_MntSweetProducts
2307391   +          +     1.74207203174453 * S_MntWines  +     0.63179060297207 *
2307392   +        S_MonthsAsCustomer  +    -1.61177916346421 * S_NumCatalogPurchases
2307393   +          +    -1.65571629915953 * S_NumDealsPurchases
2307394   +          +     0.44850418598185 * S_NumDistPurchases
2307395   +          +    -1.85103994085543 * S_NumStorePurchases
2307396   +          +    -1.98087140874692 * S_NumWebPurchases
2307397   +          +    -1.35538649504681 * S_NumWebVisitsMonth
2307398   +          +    -1.81866752262562 * S_RFMstat  +    -1.10867259429962 *
2307399   +        S_RMntFrq  +     2.19147176593719 * S_Recency
2307400   +          +     1.27108112236647 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.6712582237902 * S_AcceptedCmpTotal + 0.06710548571072 * 
S_Age + 0.42661812684843 * S_Frq + -0.68314976524229 * S_Income + 1.35939207675559 * S_Kidhome 
+ 0.81255710413612 * S_Mnt + 1.01355330034385 * S_MntFishProducts + 0.05813114723871 * 
S_MntFruits + -0.71193745984367 * S_MntGoldProds + -1.58572681664837 * S_MntMeatProducts + 
0.98292174643851 * S_MntSweetProducts + 1.74207203174453 * S_MntWines + 0.63179060297207 * 
S_MonthsAsCustomer + -1.61177916346421 * S_NumCatalogPurchases + -1.65571629915953 * 
S_NumDealsPurchases + 0.44850418598185 * S_NumDistPurchases + -1.85103994085543 * 
S_NumStorePurchases + -1.98087140874692 * S_NumWebPurchases + -1.35538649504681 * 
S_NumWebVisitsMonth + -1.81866752262562 * S_RFMstat + -1.10867259429962 * S_RMntFrq + 
2.19147176593719 * S_Recency + 1.27108112236647 * S_Teenhome ;
2307401   +   H1x3_1  = H1x3_1  +     1.54306674985295 * AcceptedCmp10
2307402   +          +    -0.35167718530303 * AcceptedCmp20  +     0.20275619961982 *
2307403   +        AcceptedCmp30  +      -0.625244138431 * AcceptedCmp40
2307404   +          +     1.17899223199183 * AcceptedCmp50  +     0.20175490406986 *
2307405   +        Complain0  +     0.30147459901823 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.54306674985295 * AcceptedCmp10 + -0.35167718530303 * 
AcceptedCmp20 + 0.20275619961982 * AcceptedCmp30 + -0.625244138431 * AcceptedCmp40 + 
1.17899223199183 * AcceptedCmp50 + 0.20175490406986 * Complain0 + 0.30147459901823 * 
HigherEducationBinary0 ;
2307406   +   H1x3_1  = H1x3_1  +     0.54794864137162 * Education2n_Cycle
2307407   +          +     0.70104635636234 * EducationBasic  +    -0.09012165068068 *
2307408   +        EducationGraduation  +     1.03845439880266 * EducationMaster
2307409   +          +     0.50400969719731 * Marital_StatusDivorced
2307410   +          +    -1.34220391092458 * Marital_StatusMarried
2307411   +          +    -0.55428853923129 * Marital_StatusSingle
2307412   +          +    -0.71906176115993 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.54794864137162 * Education2n_Cycle + 
0.70104635636234 * EducationBasic + -0.09012165068068 * EducationGraduation + 1.03845439880266 
* EducationMaster + 0.50400969719731 * Marital_StatusDivorced + -1.34220391092458 * 
Marital_StatusMarried + -0.55428853923129 * Marital_StatusSingle + -0.71906176115993 * 
Marital_StatusTogether ;
2307413   +   H1x3_1  =    -1.41269563029741 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.41269563029741 + H1x3_1 ;
2307414   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2307415   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2307416   +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
2307417   +END;
MPRINT(EM_DIAGRAM):   END;
2307418   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2307419   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2307420   +END;
MPRINT(EM_DIAGRAM):   END;
2307421   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2307422   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2307423   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2307424   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2307425   +   H2x1_1  =     8.58599201391049 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 8.58599201391049 * H1x1_1 ;
2307426   +   H2x1_1  = H2x1_1  +     3.30177473520902 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 3.30177473520902 * H1x2_1 ;
2307427   +   H2x1_1  = H2x1_1  +    -2.49773716784179 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.49773716784179 * H1x3_1 ;
2307428   +   H2x1_1  =    -3.86067518358535 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -3.86067518358535 + H2x1_1 ;
2307429   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2307430   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2307431   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
2307432   +END;
MPRINT(EM_DIAGRAM):   END;
2307433   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2307434   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2307435   +END;
MPRINT(EM_DIAGRAM):   END;
2307436   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2307437   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
2307438   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2307439   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2307440   +   H2x2_1  =    -3.14108669248845 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -3.14108669248845 * H1x1_1 ;
2307441   +   H2x2_1  = H2x2_1  +     -6.4434812203166 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -6.4434812203166 * H1x2_1 ;
2307442   +   H2x2_1  = H2x2_1  +    -3.11843340791158 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -3.11843340791158 * H1x3_1 ;
2307443   +   H2x2_1  =     1.54895882132691 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.54895882132691 + H2x2_1 ;
2307444   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2307445   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2307446   +   H2x2_1  = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
2307447   +END;
MPRINT(EM_DIAGRAM):   END;
2307448   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2307449   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
2307450   +END;
MPRINT(EM_DIAGRAM):   END;
2307451   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2307452   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
2307453   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2307454   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2307455   +   H3x1_1  =     15.4504469210917 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 15.4504469210917 * H2x1_1 ;
2307456   +   H3x1_1  = H3x1_1  +    -4.98948798022725 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -4.98948798022725 * H2x2_1 ;
2307457   +   H3x1_1  =    -1.00752827777153 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -1.00752827777153 + H3x1_1 ;
2307458   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2307459   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2307460   +   H3x1_1  = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
2307461   +END;
MPRINT(EM_DIAGRAM):   END;
2307462   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2307463   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
2307464   +END;
MPRINT(EM_DIAGRAM):   END;
2307465   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2307466   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2307467   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2307468   +
2307469   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2307470   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2307471   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2307472   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2307473   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2307474   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2307475   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2307476   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2307477   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2307478   +end;
MPRINT(EM_DIAGRAM):   end;
2307479   +else do;
MPRINT(EM_DIAGRAM):   else do;
2307480   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2307481   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2307482   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2307483   +   end;
MPRINT(EM_DIAGRAM):   end;
2307484   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2307485   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2307486   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2307487   +   end;
MPRINT(EM_DIAGRAM):   end;
2307488   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2307489   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2307490   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2307491   +   end;
MPRINT(EM_DIAGRAM):   end;
2307492   +end;
MPRINT(EM_DIAGRAM):   end;
2307493   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2307494   +   P_DepVar1  =    -14.4907339799932 * H3x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -14.4907339799932 * H3x1_1 ;
2307495   +   P_DepVar1  =     3.88308334604773 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.88308334604773 + P_DepVar1 ;
2307496   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2307497   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2307498   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2307499   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2307500   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2307501   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2307502   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2307503   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2307504   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2307505   +END;
MPRINT(EM_DIAGRAM):   END;
2307506   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2307507   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2307508   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2307509   +END;
MPRINT(EM_DIAGRAM):   END;
2307510   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2307511   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2307512   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2307513   +END;
MPRINT(EM_DIAGRAM):   END;
2307514   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2307515   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2307516   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2307517   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2307518   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2307519   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2307520   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2307521   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2307522   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2307523   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2307524   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2307525   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2307526   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2307527   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2307528   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2307529   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2307530   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2307531   +END;
MPRINT(EM_DIAGRAM):   END;
2307532   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2307533   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2307534   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2307535   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2307536   +* Renaming variables for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural6;
2307537   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2307538   +* Renaming Posterior variables for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural6;
2307539   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2307540   +drop AutoNeural6_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_P_DepVar1;
2307541   +AutoNeural6_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural6_P_DepVar1 = P_DepVar1;
2307542   +drop AutoNeural6_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_P_DepVar0;
2307543   +AutoNeural6_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural6_P_DepVar0 = P_DepVar0;
2307544   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2307545   +* Renaming Into variables for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural6;
2307546   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2307547   +length AutoNeural6_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural6_I_DepVar $32;
2307548   +drop AutoNeural6_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_I_DepVar;
2307549   +AutoNeural6_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural6_I_DepVar = I_DepVar;
2307550   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2307551   +* Renaming _WARN_ variable for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural6;
2307552   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2307553   +length AutoNeural6_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural6_WARN_ $4;
2307554   +drop AutoNeural6_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_WARN_;
2307555   +AutoNeural6_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural6_WARN_ = _WARN_;
2307556   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2307557   +* Ensmbl38: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Scoring Code of model 2 of 7;
2307558   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2307559   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2307560   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2307561   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2307562   +* NODE: AutoNeural7;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural7;
2307563   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2307564   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2307565   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2307566   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2307567   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2307568   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2307569   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2307570   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2307571   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2307572   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2307573   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2307574   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2307575   +LENGTH _WARN_ $4
2307576   +      F_DepVar  $ 12
2307577   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2307578   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2307579   +
2307580   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2307581   +
2307582   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2307583   +
2307584   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2307585   +
2307586   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2307587   +
2307588   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2307589   +
2307590   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2307591   +
2307592   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2307593   +
2307594   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2307595   +
2307596   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2307597   +
2307598   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2307599   +
2307600   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2307601   +
2307602   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2307603   +
2307604   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2307605   +
2307606   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2307607   +
2307608   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2307609   +
2307610   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2307611   +
2307612   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2307613   +
2307614   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2307615   +
2307616   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2307617   +
2307618   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2307619   +
2307620   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2307621   +
2307622   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2307623   +
2307624   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2307625   +
2307626   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2307627   +
2307628   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2307629   +
2307630   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2307631   +
2307632   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2307633   +
2307634   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2307635   +
2307636   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2307637   +
2307638   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2307639   +
2307640   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2307641   +
2307642   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2307643   +
2307644   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2307645   +
2307646   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2307647   +
2307648   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2307649   +
2307650   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2307651   +
2307652   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2307653   +
2307654   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2307655   +
2307656   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2307657   +
2307658   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2307659   +
2307660   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2307661   +
2307662   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2307663   +
2307664   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2307665   +
2307666   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2307667   +
2307668   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2307669   +
2307670   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2307671   +
2307672   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2307673   +
2307674   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2307675   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2307676   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2307677   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2307678   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2307679   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2307680   +end;
MPRINT(EM_DIAGRAM):   end;
2307681   +else do;
MPRINT(EM_DIAGRAM):   else do;
2307682   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2307683   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2307684   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2307685   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2307686   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2307687   +   end;
MPRINT(EM_DIAGRAM):   end;
2307688   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2307689   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2307690   +   end;
MPRINT(EM_DIAGRAM):   end;
2307691   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2307692   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2307693   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2307694   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2307695   +   end;
MPRINT(EM_DIAGRAM):   end;
2307696   +end;
MPRINT(EM_DIAGRAM):   end;
2307697   +
2307698   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2307699   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2307700   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2307701   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2307702   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2307703   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2307704   +end;
MPRINT(EM_DIAGRAM):   end;
2307705   +else do;
MPRINT(EM_DIAGRAM):   else do;
2307706   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2307707   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2307708   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2307709   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2307710   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2307711   +   end;
MPRINT(EM_DIAGRAM):   end;
2307712   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2307713   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2307714   +   end;
MPRINT(EM_DIAGRAM):   end;
2307715   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2307716   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2307717   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2307718   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2307719   +   end;
MPRINT(EM_DIAGRAM):   end;
2307720   +end;
MPRINT(EM_DIAGRAM):   end;
2307721   +
2307722   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2307723   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2307724   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2307725   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2307726   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2307727   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2307728   +end;
MPRINT(EM_DIAGRAM):   end;
2307729   +else do;
MPRINT(EM_DIAGRAM):   else do;
2307730   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2307731   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2307732   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2307733   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2307734   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2307735   +   end;
MPRINT(EM_DIAGRAM):   end;
2307736   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2307737   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2307738   +   end;
MPRINT(EM_DIAGRAM):   end;
2307739   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2307740   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2307741   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2307742   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2307743   +   end;
MPRINT(EM_DIAGRAM):   end;
2307744   +end;
MPRINT(EM_DIAGRAM):   end;
2307745   +
2307746   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2307747   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2307748   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2307749   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2307750   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2307751   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2307752   +end;
MPRINT(EM_DIAGRAM):   end;
2307753   +else do;
MPRINT(EM_DIAGRAM):   else do;
2307754   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2307755   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2307756   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2307757   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2307758   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2307759   +   end;
MPRINT(EM_DIAGRAM):   end;
2307760   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2307761   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2307762   +   end;
MPRINT(EM_DIAGRAM):   end;
2307763   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2307764   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2307765   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2307766   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2307767   +   end;
MPRINT(EM_DIAGRAM):   end;
2307768   +end;
MPRINT(EM_DIAGRAM):   end;
2307769   +
2307770   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2307771   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2307772   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2307773   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2307774   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2307775   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2307776   +end;
MPRINT(EM_DIAGRAM):   end;
2307777   +else do;
MPRINT(EM_DIAGRAM):   else do;
2307778   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2307779   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2307780   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2307781   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2307782   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2307783   +   end;
MPRINT(EM_DIAGRAM):   end;
2307784   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2307785   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2307786   +   end;
MPRINT(EM_DIAGRAM):   end;
2307787   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2307788   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2307789   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2307790   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2307791   +   end;
MPRINT(EM_DIAGRAM):   end;
2307792   +end;
MPRINT(EM_DIAGRAM):   end;
2307793   +
2307794   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2307795   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2307796   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2307797   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2307798   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2307799   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2307800   +end;
MPRINT(EM_DIAGRAM):   end;
2307801   +else do;
MPRINT(EM_DIAGRAM):   else do;
2307802   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2307803   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2307804   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2307805   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2307806   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2307807   +   end;
MPRINT(EM_DIAGRAM):   end;
2307808   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2307809   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2307810   +   end;
MPRINT(EM_DIAGRAM):   end;
2307811   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2307812   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2307813   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2307814   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2307815   +   end;
MPRINT(EM_DIAGRAM):   end;
2307816   +end;
MPRINT(EM_DIAGRAM):   end;
2307817   +
2307818   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2307819   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2307820   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2307821   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2307822   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2307823   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2307824   +end;
MPRINT(EM_DIAGRAM):   end;
2307825   +else do;
MPRINT(EM_DIAGRAM):   else do;
2307826   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2307827   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2307828   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2307829   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2307830   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2307831   +   end;
MPRINT(EM_DIAGRAM):   end;
2307832   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2307833   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2307834   +   end;
MPRINT(EM_DIAGRAM):   end;
2307835   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2307836   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2307837   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2307838   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2307839   +   end;
MPRINT(EM_DIAGRAM):   end;
2307840   +end;
MPRINT(EM_DIAGRAM):   end;
2307841   +
2307842   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2307843   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2307844   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2307845   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2307846   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2307847   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2307848   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2307849   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2307850   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2307851   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2307852   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2307853   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2307854   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2307855   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2307856   +end;
MPRINT(EM_DIAGRAM):   end;
2307857   +else do;
MPRINT(EM_DIAGRAM):   else do;
2307858   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2307859   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2307860   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2307861   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2307862   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2307863   +   end;
MPRINT(EM_DIAGRAM):   end;
2307864   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2307865   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2307866   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2307867   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2307868   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2307869   +   end;
MPRINT(EM_DIAGRAM):   end;
2307870   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2307871   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2307872   +   end;
MPRINT(EM_DIAGRAM):   end;
2307873   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2307874   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2307875   +   end;
MPRINT(EM_DIAGRAM):   end;
2307876   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2307877   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2307878   +   end;
MPRINT(EM_DIAGRAM):   end;
2307879   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2307880   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2307881   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2307882   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2307883   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2307884   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2307885   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2307886   +   end;
MPRINT(EM_DIAGRAM):   end;
2307887   +end;
MPRINT(EM_DIAGRAM):   end;
2307888   +
2307889   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2307890   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2307891   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2307892   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2307893   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2307894   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2307895   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2307896   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2307897   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2307898   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2307899   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2307900   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2307901   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2307902   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2307903   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2307904   +end;
MPRINT(EM_DIAGRAM):   end;
2307905   +else do;
MPRINT(EM_DIAGRAM):   else do;
2307906   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2307907   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2307908   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2307909   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2307910   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2307911   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2307912   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2307913   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2307914   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2307915   +         end;
MPRINT(EM_DIAGRAM):   end;
2307916   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2307917   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2307918   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2307919   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2307920   +            end;
MPRINT(EM_DIAGRAM):   end;
2307921   +         end;
MPRINT(EM_DIAGRAM):   end;
2307922   +      end;
MPRINT(EM_DIAGRAM):   end;
2307923   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2307924   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2307925   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2307926   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2307927   +         end;
MPRINT(EM_DIAGRAM):   end;
2307928   +      end;
MPRINT(EM_DIAGRAM):   end;
2307929   +   end;
MPRINT(EM_DIAGRAM):   end;
2307930   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2307931   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2307932   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2307933   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2307934   +      end;
MPRINT(EM_DIAGRAM):   end;
2307935   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2307936   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2307937   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2307938   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2307939   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2307940   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2307941   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2307942   +         end;
MPRINT(EM_DIAGRAM):   end;
2307943   +      end;
MPRINT(EM_DIAGRAM):   end;
2307944   +   end;
MPRINT(EM_DIAGRAM):   end;
2307945   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2307946   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2307947   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2307948   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2307949   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2307950   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2307951   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2307952   +   end;
MPRINT(EM_DIAGRAM):   end;
2307953   +end;
MPRINT(EM_DIAGRAM):   end;
2307954   +
2307955   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2307956   +*** Checking missing input Interval
2307957   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2307958   +
2307959   +IF NMISS(
2307960   +   AcceptedCmpTotal ,
2307961   +   Age ,
2307962   +   Frq ,
2307963   +   Income ,
2307964   +   Kidhome ,
2307965   +   Mnt ,
2307966   +   MntFishProducts ,
2307967   +   MntFruits ,
2307968   +   MntGoldProds ,
2307969   +   MntMeatProducts ,
2307970   +   MntSweetProducts ,
2307971   +   MntWines ,
2307972   +   MonthsAsCustomer ,
2307973   +   NumCatalogPurchases ,
2307974   +   NumDealsPurchases ,
2307975   +   NumDistPurchases ,
2307976   +   NumStorePurchases ,
2307977   +   NumWebPurchases ,
2307978   +   NumWebVisitsMonth ,
2307979   +   RFMstat ,
2307980   +   RMntFrq ,
2307981   +   Recency ,
2307982   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2307983   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2307984   +
2307985   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2307986   +END;
MPRINT(EM_DIAGRAM):   END;
2307987   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2307988   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2307989   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2307990   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2307991   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2307992   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2307993   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2307994   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2307995   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2307996   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2307997   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2307998   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2307999   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2308000   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2308001   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2308002   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2308003   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2308004   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2308005   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2308006   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2308007   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2308008   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2308009   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2308010   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2308011   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2308012   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2308013   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2308014   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2308015   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2308016   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2308017   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2308018   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2308019   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2308020   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2308021   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2308022   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2308023   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2308024   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2308025   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2308026   +END;
MPRINT(EM_DIAGRAM):   END;
2308027   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2308028   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2308029   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2308030   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2308031   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2308032   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2308033   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2308034   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2308035   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2308036   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2308037   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2308038   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2308039   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2308040   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2308041   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2308042   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2308043   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2308044   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2308045   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2308046   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2308047   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2308048   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2308049   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2308050   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2308051   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2308052   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2308053   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2308054   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2308055   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2308056   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2308057   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2308058   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2308059   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2308060   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2308061   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2308062   +   ELSE S_NumCatalogPurchases
2308063   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2308064   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2308065   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2308066   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2308067   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2308068   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2308069   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2308070   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2308071   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2308072   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2308073   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2308074   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2308075   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2308076   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2308077   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2308078   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2308079   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2308080   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2308081   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2308082   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2308083   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2308084   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2308085   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2308086   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2308087   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2308088   +END;
MPRINT(EM_DIAGRAM):   END;
2308089   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2308090   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2308091   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2308092   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2308093   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2308094   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2308095   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2308096   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2308097   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2308098   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2308099   +   H1x1_1  =     0.27051750628107 * S_AcceptedCmpTotal
2308100   +          +    -0.01552488999587 * S_Age  +    -0.19918933236131 * S_Frq
2308101   +          +    -0.18053367989037 * S_Income  +     0.17934470816975 *
2308102   +        S_Kidhome  +    -0.27914859130186 * S_Mnt  +    -0.05331142159606 *
2308103   +        S_MntFishProducts  +    -0.03730503814111 * S_MntFruits
2308104   +          +     0.01217897476566 * S_MntGoldProds  +       0.241005967683 *
2308105   +        S_MntMeatProducts  +    -0.02873172523867 * S_MntSweetProducts
2308106   +          +    -0.35773732926132 * S_MntWines  +    -0.00800625524539 *
2308107   +        S_MonthsAsCustomer  +     0.14253720708201 * S_NumCatalogPurchases
2308108   +          +     0.09634439105648 * S_NumDealsPurchases
2308109   +          +     -0.2727389064287 * S_NumDistPurchases
2308110   +          +    -0.14179871978162 * S_NumStorePurchases
2308111   +          +     0.11008049559527 * S_NumWebPurchases
2308112   +          +    -0.16791463027749 * S_NumWebVisitsMonth
2308113   +          +     0.12827091331546 * S_RFMstat  +    -0.05819422771336 *
2308114   +        S_RMntFrq  +     0.17192522504917 * S_Recency
2308115   +          +     0.13379709932247 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.27051750628107 * S_AcceptedCmpTotal + -0.01552488999587 * 
S_Age + -0.19918933236131 * S_Frq + -0.18053367989037 * S_Income + 0.17934470816975 * 
S_Kidhome + -0.27914859130186 * S_Mnt + -0.05331142159606 * S_MntFishProducts + 
-0.03730503814111 * S_MntFruits + 0.01217897476566 * S_MntGoldProds + 0.241005967683 * 
S_MntMeatProducts + -0.02873172523867 * S_MntSweetProducts + -0.35773732926132 * S_MntWines + 
-0.00800625524539 * S_MonthsAsCustomer + 0.14253720708201 * S_NumCatalogPurchases + 
0.09634439105648 * S_NumDealsPurchases + -0.2727389064287 * S_NumDistPurchases + 
-0.14179871978162 * S_NumStorePurchases + 0.11008049559527 * S_NumWebPurchases + 
-0.16791463027749 * S_NumWebVisitsMonth + 0.12827091331546 * S_RFMstat + -0.05819422771336 * 
S_RMntFrq + 0.17192522504917 * S_Recency + 0.13379709932247 * S_Teenhome ;
2308116   +   H1x1_2  =      0.2625003002792 * S_AcceptedCmpTotal
2308117   +          +    -0.00409648963127 * S_Age  +    -0.08422560024107 * S_Frq
2308118   +          +      0.1678148652095 * S_Income  +      -0.122580580609 *
2308119   +        S_Kidhome  +    -0.41368311141801 * S_Mnt  +     -0.0649787838725 *
2308120   +        S_MntFishProducts  +    -0.06363287766971 * S_MntFruits
2308121   +          +     0.00810850196464 * S_MntGoldProds  +      0.2984971941271 *
2308122   +        S_MntMeatProducts  +     -0.0651075315757 * S_MntSweetProducts
2308123   +          +    -0.42717799596572 * S_MntWines  +    -0.00945771129633 *
2308124   +        S_MonthsAsCustomer  +     0.33346839008681 * S_NumCatalogPurchases
2308125   +          +     0.15835936877168 * S_NumDealsPurchases
2308126   +          +     0.04229992769587 * S_NumDistPurchases
2308127   +          +    -0.04051362547639 * S_NumStorePurchases
2308128   +          +    -0.01791546488406 * S_NumWebPurchases
2308129   +          +     0.28833008597045 * S_NumWebVisitsMonth
2308130   +          +     0.08007709098478 * S_RFMstat  +     0.37677948418886 *
2308131   +        S_RMntFrq  +    -0.32542265112765 * S_Recency
2308132   +          +    -0.10763248273834 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.2625003002792 * S_AcceptedCmpTotal + -0.00409648963127 * 
S_Age + -0.08422560024107 * S_Frq + 0.1678148652095 * S_Income + -0.122580580609 * S_Kidhome + 
-0.41368311141801 * S_Mnt + -0.0649787838725 * S_MntFishProducts + -0.06363287766971 * 
S_MntFruits + 0.00810850196464 * S_MntGoldProds + 0.2984971941271 * S_MntMeatProducts + 
-0.0651075315757 * S_MntSweetProducts + -0.42717799596572 * S_MntWines + -0.00945771129633 * 
S_MonthsAsCustomer + 0.33346839008681 * S_NumCatalogPurchases + 0.15835936877168 * 
S_NumDealsPurchases + 0.04229992769587 * S_NumDistPurchases + -0.04051362547639 * 
S_NumStorePurchases + -0.01791546488406 * S_NumWebPurchases + 0.28833008597045 * 
S_NumWebVisitsMonth + 0.08007709098478 * S_RFMstat + 0.37677948418886 * S_RMntFrq + 
-0.32542265112765 * S_Recency + -0.10763248273834 * S_Teenhome ;
2308133   +   H1x1_1  = H1x1_1  +     0.17927888078386 * AcceptedCmp10
2308134   +          +       0.309097592234 * AcceptedCmp20  +     0.30005706470617 *
2308135   +        AcceptedCmp30  +     0.30534843193785 * AcceptedCmp40
2308136   +          +     0.19575142296602 * AcceptedCmp50  +    -0.26930325741881 *
2308137   +        Complain0  +    -0.07193220591551 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.17927888078386 * AcceptedCmp10 + 0.309097592234 * 
AcceptedCmp20 + 0.30005706470617 * AcceptedCmp30 + 0.30534843193785 * AcceptedCmp40 + 
0.19575142296602 * AcceptedCmp50 + -0.26930325741881 * Complain0 + -0.07193220591551 * 
HigherEducationBinary0 ;
2308138   +   H1x1_2  = H1x1_2  +     0.01282806481889 * AcceptedCmp10
2308139   +          +     0.01542710847454 * AcceptedCmp20  +     0.03576476827309 *
2308140   +        AcceptedCmp30  +     0.04230610697529 * AcceptedCmp40
2308141   +          +     0.03405078302469 * AcceptedCmp50  +     0.13002166919554 *
2308142   +        Complain0  +    -0.08203696285033 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.01282806481889 * AcceptedCmp10 + 0.01542710847454 * 
AcceptedCmp20 + 0.03576476827309 * AcceptedCmp30 + 0.04230610697529 * AcceptedCmp40 + 
0.03405078302469 * AcceptedCmp50 + 0.13002166919554 * Complain0 + -0.08203696285033 * 
HigherEducationBinary0 ;
2308143   +   H1x1_1  = H1x1_1  +    -0.04471063478028 * Education2n_Cycle
2308144   +          +     0.15571809437849 * EducationBasic  +    -0.00113978624206 *
2308145   +        EducationGraduation  +     0.00750750981266 * EducationMaster
2308146   +          +     -0.0504367274898 * Marital_StatusDivorced
2308147   +          +     0.28345714390306 * Marital_StatusMarried
2308148   +          +     -0.2012923780435 * Marital_StatusSingle
2308149   +          +     0.20022167903492 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.04471063478028 * Education2n_Cycle + 
0.15571809437849 * EducationBasic + -0.00113978624206 * EducationGraduation + 0.00750750981266 
* EducationMaster + -0.0504367274898 * Marital_StatusDivorced + 0.28345714390306 * 
Marital_StatusMarried + -0.2012923780435 * Marital_StatusSingle + 0.20022167903492 * 
Marital_StatusTogether ;
2308150   +   H1x1_2  = H1x1_2  +     0.12691361812265 * Education2n_Cycle
2308151   +          +       0.003205191831 * EducationBasic  +    -0.04323354449955 *
2308152   +        EducationGraduation  +    -0.06699429239126 * EducationMaster
2308153   +          +     0.06828937261262 * Marital_StatusDivorced
2308154   +          +     -0.1520862543536 * Marital_StatusMarried
2308155   +          +      0.1392808464716 * Marital_StatusSingle
2308156   +          +    -0.12406922875482 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12691361812265 * Education2n_Cycle + 0.003205191831 
* EducationBasic + -0.04323354449955 * EducationGraduation + -0.06699429239126 * 
EducationMaster + 0.06828937261262 * Marital_StatusDivorced + -0.1520862543536 * 
Marital_StatusMarried + 0.1392808464716 * Marital_StatusSingle + -0.12406922875482 * 
Marital_StatusTogether ;
2308157   +   H1x1_1  =     0.89722634972069 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.89722634972069 + H1x1_1 ;
2308158   +   H1x1_2  =     -0.5979471913364 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5979471913364 + H1x1_2 ;
2308159   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
2308160   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
2308161   +END;
MPRINT(EM_DIAGRAM):   END;
2308162   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2308163   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2308164   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2308165   +END;
MPRINT(EM_DIAGRAM):   END;
2308166   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2308167   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2308168   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2308169   +
2308170   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2308171   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2308172   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2308173   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2308174   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2308175   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2308176   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2308177   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2308178   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2308179   +end;
MPRINT(EM_DIAGRAM):   end;
2308180   +else do;
MPRINT(EM_DIAGRAM):   else do;
2308181   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2308182   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2308183   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2308184   +   end;
MPRINT(EM_DIAGRAM):   end;
2308185   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2308186   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2308187   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2308188   +   end;
MPRINT(EM_DIAGRAM):   end;
2308189   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2308190   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2308191   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2308192   +   end;
MPRINT(EM_DIAGRAM):   end;
2308193   +end;
MPRINT(EM_DIAGRAM):   end;
2308194   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2308195   +   P_DepVar1  =     -11.533020189097 * H1x1_1  +     17.2320065402955 * H1x1_2
2308196   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -11.533020189097 * H1x1_1 + 17.2320065402955 * H1x1_2 ;
2308197   +   P_DepVar1  =     2.37722840752042 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.37722840752042 + P_DepVar1 ;
2308198   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2308199   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2308200   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2308201   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2308202   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2308203   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2308204   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2308205   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2308206   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2308207   +END;
MPRINT(EM_DIAGRAM):   END;
2308208   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2308209   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2308210   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2308211   +END;
MPRINT(EM_DIAGRAM):   END;
2308212   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2308213   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2308214   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2308215   +END;
MPRINT(EM_DIAGRAM):   END;
2308216   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2308217   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2308218   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2308219   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2308220   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2308221   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2308222   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2308223   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2308224   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2308225   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2308226   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2308227   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2308228   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2308229   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2308230   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2308231   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2308232   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2308233   +END;
MPRINT(EM_DIAGRAM):   END;
2308234   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2308235   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2308236   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2308237   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2308238   +* Renaming variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural7;
2308239   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2308240   +* Renaming Posterior variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural7;
2308241   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2308242   +drop AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar1;
2308243   +AutoNeural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar1 = P_DepVar1;
2308244   +drop AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar0;
2308245   +AutoNeural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar0 = P_DepVar0;
2308246   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2308247   +* Renaming Into variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural7;
2308248   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2308249   +length AutoNeural7_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural7_I_DepVar $32;
2308250   +drop AutoNeural7_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_I_DepVar;
2308251   +AutoNeural7_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural7_I_DepVar = I_DepVar;
2308252   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2308253   +* Renaming _WARN_ variable for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural7;
2308254   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2308255   +length AutoNeural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural7_WARN_ $4;
2308256   +drop AutoNeural7_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_WARN_;
2308257   +AutoNeural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural7_WARN_ = _WARN_;
2308258   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2308259   +* Ensmbl38: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Scoring Code of model 3 of 7;
2308260   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2308261   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2308262   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2308263   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2308264   +* NODE: AutoNeural8;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural8;
2308265   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2308266   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2308267   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2308268   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2308269   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2308270   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2308271   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2308272   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2308273   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2308274   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2308275   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2308276   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2308277   +LENGTH _WARN_ $4
2308278   +      F_DepVar  $ 12
2308279   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2308280   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2308281   +
2308282   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2308283   +
2308284   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2308285   +
2308286   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2308287   +
2308288   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2308289   +
2308290   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2308291   +
2308292   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2308293   +
2308294   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2308295   +
2308296   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2308297   +
2308298   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2308299   +
2308300   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2308301   +
2308302   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2308303   +
2308304   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2308305   +
2308306   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2308307   +
2308308   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2308309   +
2308310   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2308311   +
2308312   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2308313   +
2308314   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2308315   +
2308316   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2308317   +
2308318   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2308319   +
2308320   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2308321   +
2308322   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2308323   +
2308324   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2308325   +
2308326   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2308327   +
2308328   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2308329   +
2308330   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2308331   +
2308332   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2308333   +
2308334   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2308335   +
2308336   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2308337   +
2308338   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2308339   +
2308340   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2308341   +
2308342   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2308343   +
2308344   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2308345   +
2308346   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2308347   +
2308348   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2308349   +
2308350   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2308351   +
2308352   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2308353   +
2308354   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2308355   +
2308356   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2308357   +
2308358   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2308359   +
2308360   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2308361   +
2308362   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2308363   +
2308364   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2308365   +
2308366   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2308367   +
2308368   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2308369   +
2308370   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2308371   +
2308372   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2308373   +
2308374   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2308375   +
2308376   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2308377   +
2308378   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2308379   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2308380   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2308381   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2308382   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2308383   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2308384   +end;
MPRINT(EM_DIAGRAM):   end;
2308385   +else do;
MPRINT(EM_DIAGRAM):   else do;
2308386   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2308387   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2308388   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2308389   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2308390   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2308391   +   end;
MPRINT(EM_DIAGRAM):   end;
2308392   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2308393   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2308394   +   end;
MPRINT(EM_DIAGRAM):   end;
2308395   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2308396   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2308397   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2308398   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2308399   +   end;
MPRINT(EM_DIAGRAM):   end;
2308400   +end;
MPRINT(EM_DIAGRAM):   end;
2308401   +
2308402   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2308403   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2308404   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2308405   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2308406   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2308407   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2308408   +end;
MPRINT(EM_DIAGRAM):   end;
2308409   +else do;
MPRINT(EM_DIAGRAM):   else do;
2308410   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2308411   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2308412   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2308413   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2308414   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2308415   +   end;
MPRINT(EM_DIAGRAM):   end;
2308416   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2308417   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2308418   +   end;
MPRINT(EM_DIAGRAM):   end;
2308419   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2308420   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2308421   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2308422   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2308423   +   end;
MPRINT(EM_DIAGRAM):   end;
2308424   +end;
MPRINT(EM_DIAGRAM):   end;
2308425   +
2308426   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2308427   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2308428   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2308429   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2308430   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2308431   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2308432   +end;
MPRINT(EM_DIAGRAM):   end;
2308433   +else do;
MPRINT(EM_DIAGRAM):   else do;
2308434   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2308435   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2308436   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2308437   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2308438   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2308439   +   end;
MPRINT(EM_DIAGRAM):   end;
2308440   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2308441   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2308442   +   end;
MPRINT(EM_DIAGRAM):   end;
2308443   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2308444   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2308445   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2308446   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2308447   +   end;
MPRINT(EM_DIAGRAM):   end;
2308448   +end;
MPRINT(EM_DIAGRAM):   end;
2308449   +
2308450   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2308451   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2308452   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2308453   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2308454   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2308455   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2308456   +end;
MPRINT(EM_DIAGRAM):   end;
2308457   +else do;
MPRINT(EM_DIAGRAM):   else do;
2308458   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2308459   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2308460   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2308461   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2308462   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2308463   +   end;
MPRINT(EM_DIAGRAM):   end;
2308464   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2308465   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2308466   +   end;
MPRINT(EM_DIAGRAM):   end;
2308467   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2308468   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2308469   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2308470   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2308471   +   end;
MPRINT(EM_DIAGRAM):   end;
2308472   +end;
MPRINT(EM_DIAGRAM):   end;
2308473   +
2308474   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2308475   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2308476   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2308477   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2308478   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2308479   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2308480   +end;
MPRINT(EM_DIAGRAM):   end;
2308481   +else do;
MPRINT(EM_DIAGRAM):   else do;
2308482   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2308483   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2308484   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2308485   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2308486   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2308487   +   end;
MPRINT(EM_DIAGRAM):   end;
2308488   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2308489   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2308490   +   end;
MPRINT(EM_DIAGRAM):   end;
2308491   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2308492   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2308493   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2308494   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2308495   +   end;
MPRINT(EM_DIAGRAM):   end;
2308496   +end;
MPRINT(EM_DIAGRAM):   end;
2308497   +
2308498   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2308499   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2308500   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2308501   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2308502   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2308503   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2308504   +end;
MPRINT(EM_DIAGRAM):   end;
2308505   +else do;
MPRINT(EM_DIAGRAM):   else do;
2308506   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2308507   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2308508   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2308509   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2308510   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2308511   +   end;
MPRINT(EM_DIAGRAM):   end;
2308512   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2308513   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2308514   +   end;
MPRINT(EM_DIAGRAM):   end;
2308515   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2308516   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2308517   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2308518   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2308519   +   end;
MPRINT(EM_DIAGRAM):   end;
2308520   +end;
MPRINT(EM_DIAGRAM):   end;
2308521   +
2308522   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2308523   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2308524   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2308525   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2308526   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2308527   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2308528   +end;
MPRINT(EM_DIAGRAM):   end;
2308529   +else do;
MPRINT(EM_DIAGRAM):   else do;
2308530   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2308531   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2308532   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2308533   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2308534   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2308535   +   end;
MPRINT(EM_DIAGRAM):   end;
2308536   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2308537   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2308538   +   end;
MPRINT(EM_DIAGRAM):   end;
2308539   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2308540   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2308541   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2308542   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2308543   +   end;
MPRINT(EM_DIAGRAM):   end;
2308544   +end;
MPRINT(EM_DIAGRAM):   end;
2308545   +
2308546   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2308547   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2308548   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2308549   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2308550   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2308551   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2308552   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2308553   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2308554   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2308555   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2308556   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2308557   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2308558   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2308559   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2308560   +end;
MPRINT(EM_DIAGRAM):   end;
2308561   +else do;
MPRINT(EM_DIAGRAM):   else do;
2308562   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2308563   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2308564   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2308565   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2308566   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2308567   +   end;
MPRINT(EM_DIAGRAM):   end;
2308568   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2308569   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2308570   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2308571   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2308572   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2308573   +   end;
MPRINT(EM_DIAGRAM):   end;
2308574   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2308575   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2308576   +   end;
MPRINT(EM_DIAGRAM):   end;
2308577   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2308578   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2308579   +   end;
MPRINT(EM_DIAGRAM):   end;
2308580   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2308581   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2308582   +   end;
MPRINT(EM_DIAGRAM):   end;
2308583   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2308584   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2308585   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2308586   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2308587   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2308588   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2308589   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2308590   +   end;
MPRINT(EM_DIAGRAM):   end;
2308591   +end;
MPRINT(EM_DIAGRAM):   end;
2308592   +
2308593   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2308594   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2308595   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2308596   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2308597   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2308598   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2308599   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2308600   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2308601   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2308602   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2308603   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2308604   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2308605   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2308606   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2308607   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2308608   +end;
MPRINT(EM_DIAGRAM):   end;
2308609   +else do;
MPRINT(EM_DIAGRAM):   else do;
2308610   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2308611   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2308612   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2308613   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2308614   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2308615   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2308616   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2308617   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2308618   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2308619   +         end;
MPRINT(EM_DIAGRAM):   end;
2308620   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2308621   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2308622   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2308623   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2308624   +            end;
MPRINT(EM_DIAGRAM):   end;
2308625   +         end;
MPRINT(EM_DIAGRAM):   end;
2308626   +      end;
MPRINT(EM_DIAGRAM):   end;
2308627   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2308628   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2308629   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2308630   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2308631   +         end;
MPRINT(EM_DIAGRAM):   end;
2308632   +      end;
MPRINT(EM_DIAGRAM):   end;
2308633   +   end;
MPRINT(EM_DIAGRAM):   end;
2308634   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2308635   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2308636   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2308637   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2308638   +      end;
MPRINT(EM_DIAGRAM):   end;
2308639   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2308640   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2308641   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2308642   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2308643   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2308644   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2308645   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2308646   +         end;
MPRINT(EM_DIAGRAM):   end;
2308647   +      end;
MPRINT(EM_DIAGRAM):   end;
2308648   +   end;
MPRINT(EM_DIAGRAM):   end;
2308649   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2308650   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2308651   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2308652   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2308653   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2308654   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2308655   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2308656   +   end;
MPRINT(EM_DIAGRAM):   end;
2308657   +end;
MPRINT(EM_DIAGRAM):   end;
2308658   +
2308659   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2308660   +*** Checking missing input Interval
2308661   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2308662   +
2308663   +IF NMISS(
2308664   +   AcceptedCmpTotal ,
2308665   +   Age ,
2308666   +   Frq ,
2308667   +   Income ,
2308668   +   Kidhome ,
2308669   +   Mnt ,
2308670   +   MntFishProducts ,
2308671   +   MntFruits ,
2308672   +   MntGoldProds ,
2308673   +   MntMeatProducts ,
2308674   +   MntSweetProducts ,
2308675   +   MntWines ,
2308676   +   MonthsAsCustomer ,
2308677   +   NumCatalogPurchases ,
2308678   +   NumDealsPurchases ,
2308679   +   NumDistPurchases ,
2308680   +   NumStorePurchases ,
2308681   +   NumWebPurchases ,
2308682   +   NumWebVisitsMonth ,
2308683   +   RFMstat ,
2308684   +   RMntFrq ,
2308685   +   Recency ,
2308686   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2308687   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2308688   +
2308689   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2308690   +END;
MPRINT(EM_DIAGRAM):   END;
2308691   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2308692   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2308693   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2308694   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2308695   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2308696   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2308697   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2308698   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2308699   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2308700   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2308701   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2308702   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2308703   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2308704   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2308705   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2308706   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2308707   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2308708   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2308709   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2308710   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2308711   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2308712   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2308713   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2308714   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2308715   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2308716   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2308717   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2308718   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2308719   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2308720   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2308721   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2308722   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2308723   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2308724   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2308725   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2308726   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2308727   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2308728   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2308729   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2308730   +END;
MPRINT(EM_DIAGRAM):   END;
2308731   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2308732   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2308733   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2308734   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2308735   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2308736   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2308737   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2308738   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2308739   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2308740   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2308741   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2308742   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2308743   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2308744   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2308745   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2308746   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2308747   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2308748   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2308749   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2308750   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2308751   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2308752   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2308753   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2308754   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2308755   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2308756   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2308757   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2308758   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2308759   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2308760   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2308761   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2308762   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2308763   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2308764   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2308765   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2308766   +   ELSE S_NumCatalogPurchases
2308767   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2308768   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2308769   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2308770   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2308771   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2308772   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2308773   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2308774   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2308775   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2308776   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2308777   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2308778   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2308779   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2308780   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2308781   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2308782   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2308783   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2308784   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2308785   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2308786   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2308787   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2308788   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2308789   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2308790   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2308791   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2308792   +END;
MPRINT(EM_DIAGRAM):   END;
2308793   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2308794   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2308795   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2308796   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2308797   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2308798   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2308799   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2308800   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2308801   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2308802   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2308803   +   H1x1_1  =    -0.56705855466377 * S_AcceptedCmpTotal
2308804   +          +     -0.0844209787591 * S_Age  +    -0.09400438162402 * S_Frq
2308805   +          +    -0.79259985419234 * S_Income  +     0.39614485170881 *
2308806   +        S_Kidhome  +     0.08971262203296 * S_Mnt  +    -0.03646043190364 *
2308807   +        S_MntFishProducts  +    -0.01721941944663 * S_MntFruits
2308808   +          +     0.02211291589645 * S_MntGoldProds  +    -0.96925186479365 *
2308809   +        S_MntMeatProducts  +    -0.00290407614994 * S_MntSweetProducts
2308810   +          +     0.23980601137104 * S_MntWines  +    -0.04652446900605 *
2308811   +        S_MonthsAsCustomer  +    -0.56456333417509 * S_NumCatalogPurchases
2308812   +          +     0.10832450413796 * S_NumDealsPurchases
2308813   +          +     0.17985750884741 * S_NumDistPurchases
2308814   +          +     0.45794093255577 * S_NumStorePurchases
2308815   +          +     0.37000538836801 * S_NumWebPurchases
2308816   +          +    -1.28851120009285 * S_NumWebVisitsMonth
2308817   +          +     0.08002748509394 * S_RFMstat  +     1.03727311399928 *
2308818   +        S_RMntFrq  +     1.25259433123634 * S_Recency
2308819   +          +      0.6063997677797 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.56705855466377 * S_AcceptedCmpTotal + -0.0844209787591 * 
S_Age + -0.09400438162402 * S_Frq + -0.79259985419234 * S_Income + 0.39614485170881 * 
S_Kidhome + 0.08971262203296 * S_Mnt + -0.03646043190364 * S_MntFishProducts + 
-0.01721941944663 * S_MntFruits + 0.02211291589645 * S_MntGoldProds + -0.96925186479365 * 
S_MntMeatProducts + -0.00290407614994 * S_MntSweetProducts + 0.23980601137104 * S_MntWines + 
-0.04652446900605 * S_MonthsAsCustomer + -0.56456333417509 * S_NumCatalogPurchases + 
0.10832450413796 * S_NumDealsPurchases + 0.17985750884741 * S_NumDistPurchases + 
0.45794093255577 * S_NumStorePurchases + 0.37000538836801 * S_NumWebPurchases + 
-1.28851120009285 * S_NumWebVisitsMonth + 0.08002748509394 * S_RFMstat + 1.03727311399928 * 
S_RMntFrq + 1.25259433123634 * S_Recency + 0.6063997677797 * S_Teenhome ;
2308820   +   H1x1_2  =      -3.536397256703 * S_AcceptedCmpTotal
2308821   +          +     0.06755794216854 * S_Age  +     0.36034798301658 * S_Frq
2308822   +          +    -0.66995947609372 * S_Income  +    -0.14056662480751 *
2308823   +        S_Kidhome  +    -1.49350363210312 * S_Mnt  +     1.33108886676815 *
2308824   +        S_MntFishProducts  +     0.15317227423355 * S_MntFruits
2308825   +          +     -0.4334555918188 * S_MntGoldProds  +    -6.78273408538559 *
2308826   +        S_MntMeatProducts  +      0.1222923724663 * S_MntSweetProducts
2308827   +          +     2.14871443736565 * S_MntWines  +     0.02904565375257 *
2308828   +        S_MonthsAsCustomer  +    -1.29628794543724 * S_NumCatalogPurchases
2308829   +          +    -1.14287651740452 * S_NumDealsPurchases
2308830   +          +    -0.03763726936438 * S_NumDistPurchases
2308831   +          +     0.87545461519128 * S_NumStorePurchases
2308832   +          +     1.40430622837706 * S_NumWebPurchases
2308833   +          +    -0.99181125135242 * S_NumWebVisitsMonth
2308834   +          +    -0.85808782711899 * S_RFMstat  +     0.77622857392325 *
2308835   +        S_RMntFrq  +     0.74134014231496 * S_Recency
2308836   +          +     0.33602799889832 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -3.536397256703 * S_AcceptedCmpTotal + 0.06755794216854 * S_Age 
+ 0.36034798301658 * S_Frq + -0.66995947609372 * S_Income + -0.14056662480751 * S_Kidhome + 
-1.49350363210312 * S_Mnt + 1.33108886676815 * S_MntFishProducts + 0.15317227423355 * 
S_MntFruits + -0.4334555918188 * S_MntGoldProds + -6.78273408538559 * S_MntMeatProducts + 
0.1222923724663 * S_MntSweetProducts + 2.14871443736565 * S_MntWines + 0.02904565375257 * 
S_MonthsAsCustomer + -1.29628794543724 * S_NumCatalogPurchases + -1.14287651740452 * 
S_NumDealsPurchases + -0.03763726936438 * S_NumDistPurchases + 0.87545461519128 * 
S_NumStorePurchases + 1.40430622837706 * S_NumWebPurchases + -0.99181125135242 * 
S_NumWebVisitsMonth + -0.85808782711899 * S_RFMstat + 0.77622857392325 * S_RMntFrq + 
0.74134014231496 * S_Recency + 0.33602799889832 * S_Teenhome ;
2308837   +   H1x1_1  = H1x1_1  +    -0.09954698695146 * AcceptedCmp10
2308838   +          +    -0.22524310184607 * AcceptedCmp20  +     0.18740337227015 *
2308839   +        AcceptedCmp30  +     0.19026415124702 * AcceptedCmp40
2308840   +          +     0.19314620782838 * AcceptedCmp50  +      0.1912627870672 *
2308841   +        Complain0  +     -0.0121309313962 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.09954698695146 * AcceptedCmp10 + -0.22524310184607 
* AcceptedCmp20 + 0.18740337227015 * AcceptedCmp30 + 0.19026415124702 * AcceptedCmp40 + 
0.19314620782838 * AcceptedCmp50 + 0.1912627870672 * Complain0 + -0.0121309313962 * 
HigherEducationBinary0 ;
2308842   +   H1x1_2  = H1x1_2  +     4.87501418914654 * AcceptedCmp10
2308843   +          +    -2.27512281036702 * AcceptedCmp20  +    -2.26229365259357 *
2308844   +        AcceptedCmp30  +    -1.91759307257187 * AcceptedCmp40
2308845   +          +     1.89500877562385 * AcceptedCmp50  +     0.07702263203881 *
2308846   +        Complain0  +     0.22320697170891 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 4.87501418914654 * AcceptedCmp10 + -2.27512281036702 * 
AcceptedCmp20 + -2.26229365259357 * AcceptedCmp30 + -1.91759307257187 * AcceptedCmp40 + 
1.89500877562385 * AcceptedCmp50 + 0.07702263203881 * Complain0 + 0.22320697170891 * 
HigherEducationBinary0 ;
2308847   +   H1x1_1  = H1x1_1  +    -0.20577811382111 * Education2n_Cycle
2308848   +          +     0.38041603001978 * EducationBasic  +    -0.07500001714991 *
2308849   +        EducationGraduation  +    -0.07937937980079 * EducationMaster
2308850   +          +    -0.73074769535078 * Marital_StatusDivorced
2308851   +          +     1.30761047614007 * Marital_StatusMarried
2308852   +          +    -0.89398481770909 * Marital_StatusSingle
2308853   +          +     1.23033906473946 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.20577811382111 * Education2n_Cycle + 
0.38041603001978 * EducationBasic + -0.07500001714991 * EducationGraduation + 
-0.07937937980079 * EducationMaster + -0.73074769535078 * Marital_StatusDivorced + 
1.30761047614007 * Marital_StatusMarried + -0.89398481770909 * Marital_StatusSingle + 
1.23033906473946 * Marital_StatusTogether ;
2308854   +   H1x1_2  = H1x1_2  +    -0.31324299388605 * Education2n_Cycle
2308855   +          +    -0.17261511322993 * EducationBasic  +     0.18531128617792 *
2308856   +        EducationGraduation  +    -0.26755057731607 * EducationMaster
2308857   +          +     0.18252613160517 * Marital_StatusDivorced
2308858   +          +     0.12434140806967 * Marital_StatusMarried
2308859   +          +    -0.30167854485292 * Marital_StatusSingle
2308860   +          +     0.17039487484346 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.31324299388605 * Education2n_Cycle + 
-0.17261511322993 * EducationBasic + 0.18531128617792 * EducationGraduation + 
-0.26755057731607 * EducationMaster + 0.18252613160517 * Marital_StatusDivorced + 
0.12434140806967 * Marital_StatusMarried + -0.30167854485292 * Marital_StatusSingle + 
0.17039487484346 * Marital_StatusTogether ;
2308861   +   H1x1_1  =     1.34903330850071 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.34903330850071 + H1x1_1 ;
2308862   +   H1x1_2  =    -1.30570656722477 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.30570656722477 + H1x1_2 ;
2308863   +   H1x1_3  = 0;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0;
2308864   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
2308865   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2308866   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2308867   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2308868   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2308869   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2308870   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2308871   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2308872   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2308873   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2308874   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2308875   +END;
MPRINT(EM_DIAGRAM):   END;
2308876   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2308877   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2308878   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2308879   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2308880   +END;
MPRINT(EM_DIAGRAM):   END;
2308881   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2308882   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2308883   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2308884   +
2308885   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2308886   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2308887   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2308888   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2308889   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2308890   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2308891   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2308892   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2308893   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2308894   +end;
MPRINT(EM_DIAGRAM):   end;
2308895   +else do;
MPRINT(EM_DIAGRAM):   else do;
2308896   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2308897   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2308898   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2308899   +   end;
MPRINT(EM_DIAGRAM):   end;
2308900   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2308901   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2308902   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2308903   +   end;
MPRINT(EM_DIAGRAM):   end;
2308904   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2308905   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2308906   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2308907   +   end;
MPRINT(EM_DIAGRAM):   end;
2308908   +end;
MPRINT(EM_DIAGRAM):   end;
2308909   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2308910   +   P_DepVar1  =    -6.93513092547389 * H1x1_1  +    -13.9109136683704 * H1x1_2
2308911   +          +     22.9468369203579 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.93513092547389 * H1x1_1 + -13.9109136683704 * H1x1_2 + 
22.9468369203579 * H1x1_3 ;
2308912   +   P_DepVar1  =    -0.50030602649315 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.50030602649315 + P_DepVar1 ;
2308913   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2308914   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2308915   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2308916   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2308917   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2308918   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2308919   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2308920   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2308921   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2308922   +END;
MPRINT(EM_DIAGRAM):   END;
2308923   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2308924   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2308925   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2308926   +END;
MPRINT(EM_DIAGRAM):   END;
2308927   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2308928   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2308929   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2308930   +END;
MPRINT(EM_DIAGRAM):   END;
2308931   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2308932   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2308933   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2308934   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2308935   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2308936   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2308937   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2308938   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2308939   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2308940   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2308941   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2308942   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2308943   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2308944   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2308945   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2308946   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2308947   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2308948   +END;
MPRINT(EM_DIAGRAM):   END;
2308949   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2308950   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2308951   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2308952   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2308953   +* Renaming variables for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural8;
2308954   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2308955   +* Renaming Posterior variables for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural8;
2308956   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2308957   +drop AutoNeural8_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_P_DepVar1;
2308958   +AutoNeural8_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural8_P_DepVar1 = P_DepVar1;
2308959   +drop AutoNeural8_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_P_DepVar0;
2308960   +AutoNeural8_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural8_P_DepVar0 = P_DepVar0;
2308961   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2308962   +* Renaming Into variables for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural8;
2308963   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2308964   +length AutoNeural8_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural8_I_DepVar $32;
2308965   +drop AutoNeural8_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_I_DepVar;
2308966   +AutoNeural8_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural8_I_DepVar = I_DepVar;
2308967   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2308968   +* Renaming _WARN_ variable for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural8;
2308969   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2308970   +length AutoNeural8_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural8_WARN_ $4;
2308971   +drop AutoNeural8_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_WARN_;
2308972   +AutoNeural8_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural8_WARN_ = _WARN_;
2308973   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2308974   +* Ensmbl38: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Scoring Code of model 4 of 7;
2308975   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2308976   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2308977   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2308978   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2308979   +* NODE: AutoNeural10;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural10;
2308980   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2308981   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2308982   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2308983   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2308984   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2308985   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2308986   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2308987   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2308988   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2308989   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2308990   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2308991   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2308992   +LENGTH _WARN_ $4
2308993   +      F_DepVar  $ 12
2308994   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2308995   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2308996   +
2308997   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2308998   +
2308999   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2309000   +
2309001   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2309002   +
2309003   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2309004   +
2309005   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2309006   +
2309007   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2309008   +
2309009   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2309010   +
2309011   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2309012   +
2309013   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2309014   +
2309015   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2309016   +
2309017   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2309018   +
2309019   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2309020   +
2309021   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2309022   +
2309023   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2309024   +
2309025   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2309026   +
2309027   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2309028   +
2309029   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2309030   +
2309031   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2309032   +
2309033   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2309034   +
2309035   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2309036   +
2309037   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2309038   +
2309039   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2309040   +
2309041   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2309042   +
2309043   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2309044   +
2309045   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2309046   +
2309047   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2309048   +
2309049   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2309050   +
2309051   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2309052   +
2309053   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2309054   +
2309055   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2309056   +
2309057   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2309058   +
2309059   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2309060   +
2309061   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2309062   +
2309063   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2309064   +
2309065   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2309066   +
2309067   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2309068   +
2309069   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2309070   +
2309071   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2309072   +
2309073   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2309074   +
2309075   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2309076   +
2309077   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2309078   +
2309079   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2309080   +
2309081   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2309082   +
2309083   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2309084   +
2309085   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2309086   +
2309087   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2309088   +
2309089   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2309090   +
2309091   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2309092   +
2309093   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2309094   +
2309095   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2309096   +
2309097   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2309098   +
2309099   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2309100   +
2309101   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2309102   +
2309103   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2309104   +
2309105   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2309106   +
2309107   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2309108   +
2309109   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2309110   +
2309111   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2309112   +
2309113   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2309114   +
2309115   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2309116   +
2309117   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2309118   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2309119   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2309120   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2309121   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2309122   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2309123   +end;
MPRINT(EM_DIAGRAM):   end;
2309124   +else do;
MPRINT(EM_DIAGRAM):   else do;
2309125   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2309126   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2309127   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2309128   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2309129   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2309130   +   end;
MPRINT(EM_DIAGRAM):   end;
2309131   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2309132   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2309133   +   end;
MPRINT(EM_DIAGRAM):   end;
2309134   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2309135   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2309136   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2309137   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2309138   +   end;
MPRINT(EM_DIAGRAM):   end;
2309139   +end;
MPRINT(EM_DIAGRAM):   end;
2309140   +
2309141   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2309142   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2309143   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2309144   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2309145   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2309146   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2309147   +end;
MPRINT(EM_DIAGRAM):   end;
2309148   +else do;
MPRINT(EM_DIAGRAM):   else do;
2309149   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2309150   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2309151   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2309152   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2309153   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2309154   +   end;
MPRINT(EM_DIAGRAM):   end;
2309155   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2309156   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2309157   +   end;
MPRINT(EM_DIAGRAM):   end;
2309158   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2309159   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2309160   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2309161   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2309162   +   end;
MPRINT(EM_DIAGRAM):   end;
2309163   +end;
MPRINT(EM_DIAGRAM):   end;
2309164   +
2309165   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2309166   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2309167   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2309168   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2309169   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2309170   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2309171   +end;
MPRINT(EM_DIAGRAM):   end;
2309172   +else do;
MPRINT(EM_DIAGRAM):   else do;
2309173   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2309174   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2309175   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2309176   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2309177   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2309178   +   end;
MPRINT(EM_DIAGRAM):   end;
2309179   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2309180   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2309181   +   end;
MPRINT(EM_DIAGRAM):   end;
2309182   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2309183   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2309184   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2309185   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2309186   +   end;
MPRINT(EM_DIAGRAM):   end;
2309187   +end;
MPRINT(EM_DIAGRAM):   end;
2309188   +
2309189   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2309190   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2309191   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2309192   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2309193   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2309194   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2309195   +end;
MPRINT(EM_DIAGRAM):   end;
2309196   +else do;
MPRINT(EM_DIAGRAM):   else do;
2309197   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2309198   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2309199   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2309200   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2309201   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2309202   +   end;
MPRINT(EM_DIAGRAM):   end;
2309203   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2309204   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2309205   +   end;
MPRINT(EM_DIAGRAM):   end;
2309206   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2309207   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2309208   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2309209   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2309210   +   end;
MPRINT(EM_DIAGRAM):   end;
2309211   +end;
MPRINT(EM_DIAGRAM):   end;
2309212   +
2309213   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2309214   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2309215   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2309216   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2309217   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2309218   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2309219   +end;
MPRINT(EM_DIAGRAM):   end;
2309220   +else do;
MPRINT(EM_DIAGRAM):   else do;
2309221   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2309222   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2309223   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2309224   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2309225   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2309226   +   end;
MPRINT(EM_DIAGRAM):   end;
2309227   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2309228   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2309229   +   end;
MPRINT(EM_DIAGRAM):   end;
2309230   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2309231   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2309232   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2309233   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2309234   +   end;
MPRINT(EM_DIAGRAM):   end;
2309235   +end;
MPRINT(EM_DIAGRAM):   end;
2309236   +
2309237   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2309238   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2309239   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2309240   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2309241   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2309242   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2309243   +end;
MPRINT(EM_DIAGRAM):   end;
2309244   +else do;
MPRINT(EM_DIAGRAM):   else do;
2309245   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2309246   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2309247   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2309248   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2309249   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2309250   +   end;
MPRINT(EM_DIAGRAM):   end;
2309251   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2309252   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2309253   +   end;
MPRINT(EM_DIAGRAM):   end;
2309254   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2309255   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2309256   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2309257   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2309258   +   end;
MPRINT(EM_DIAGRAM):   end;
2309259   +end;
MPRINT(EM_DIAGRAM):   end;
2309260   +
2309261   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2309262   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2309263   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2309264   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2309265   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2309266   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2309267   +end;
MPRINT(EM_DIAGRAM):   end;
2309268   +else do;
MPRINT(EM_DIAGRAM):   else do;
2309269   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2309270   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2309271   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2309272   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2309273   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2309274   +   end;
MPRINT(EM_DIAGRAM):   end;
2309275   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2309276   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2309277   +   end;
MPRINT(EM_DIAGRAM):   end;
2309278   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2309279   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2309280   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2309281   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2309282   +   end;
MPRINT(EM_DIAGRAM):   end;
2309283   +end;
MPRINT(EM_DIAGRAM):   end;
2309284   +
2309285   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2309286   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2309287   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2309288   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2309289   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2309290   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2309291   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2309292   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2309293   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2309294   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2309295   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2309296   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2309297   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2309298   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2309299   +end;
MPRINT(EM_DIAGRAM):   end;
2309300   +else do;
MPRINT(EM_DIAGRAM):   else do;
2309301   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2309302   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2309303   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2309304   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2309305   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2309306   +   end;
MPRINT(EM_DIAGRAM):   end;
2309307   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2309308   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2309309   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2309310   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2309311   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2309312   +   end;
MPRINT(EM_DIAGRAM):   end;
2309313   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2309314   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2309315   +   end;
MPRINT(EM_DIAGRAM):   end;
2309316   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2309317   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2309318   +   end;
MPRINT(EM_DIAGRAM):   end;
2309319   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2309320   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2309321   +   end;
MPRINT(EM_DIAGRAM):   end;
2309322   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2309323   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2309324   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2309325   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2309326   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2309327   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2309328   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2309329   +   end;
MPRINT(EM_DIAGRAM):   end;
2309330   +end;
MPRINT(EM_DIAGRAM):   end;
2309331   +
2309332   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2309333   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2309334   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2309335   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2309336   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2309337   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2309338   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2309339   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2309340   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2309341   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2309342   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2309343   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2309344   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2309345   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2309346   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2309347   +end;
MPRINT(EM_DIAGRAM):   end;
2309348   +else do;
MPRINT(EM_DIAGRAM):   else do;
2309349   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2309350   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2309351   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2309352   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2309353   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2309354   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2309355   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2309356   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2309357   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2309358   +         end;
MPRINT(EM_DIAGRAM):   end;
2309359   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2309360   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2309361   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2309362   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2309363   +            end;
MPRINT(EM_DIAGRAM):   end;
2309364   +         end;
MPRINT(EM_DIAGRAM):   end;
2309365   +      end;
MPRINT(EM_DIAGRAM):   end;
2309366   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2309367   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2309368   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2309369   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2309370   +         end;
MPRINT(EM_DIAGRAM):   end;
2309371   +      end;
MPRINT(EM_DIAGRAM):   end;
2309372   +   end;
MPRINT(EM_DIAGRAM):   end;
2309373   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2309374   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2309375   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2309376   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2309377   +      end;
MPRINT(EM_DIAGRAM):   end;
2309378   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2309379   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2309380   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2309381   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2309382   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2309383   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2309384   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2309385   +         end;
MPRINT(EM_DIAGRAM):   end;
2309386   +      end;
MPRINT(EM_DIAGRAM):   end;
2309387   +   end;
MPRINT(EM_DIAGRAM):   end;
2309388   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2309389   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2309390   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2309391   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2309392   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2309393   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2309394   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2309395   +   end;
MPRINT(EM_DIAGRAM):   end;
2309396   +end;
MPRINT(EM_DIAGRAM):   end;
2309397   +
2309398   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2309399   +*** Checking missing input Interval
2309400   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2309401   +
2309402   +IF NMISS(
2309403   +   AcceptedCmpTotal ,
2309404   +   Age ,
2309405   +   Frq ,
2309406   +   Income ,
2309407   +   Kidhome ,
2309408   +   Mnt ,
2309409   +   MntFishProducts ,
2309410   +   MntFruits ,
2309411   +   MntGoldProds ,
2309412   +   MntMeatProducts ,
2309413   +   MntSweetProducts ,
2309414   +   MntWines ,
2309415   +   MonthsAsCustomer ,
2309416   +   NumCatalogPurchases ,
2309417   +   NumDealsPurchases ,
2309418   +   NumDistPurchases ,
2309419   +   NumStorePurchases ,
2309420   +   NumWebPurchases ,
2309421   +   NumWebVisitsMonth ,
2309422   +   RFMstat ,
2309423   +   RMntFrq ,
2309424   +   Recency ,
2309425   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2309426   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2309427   +
2309428   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2309429   +END;
MPRINT(EM_DIAGRAM):   END;
2309430   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2309431   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2309432   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2309433   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2309434   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2309435   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2309436   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2309437   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2309438   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2309439   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2309440   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2309441   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2309442   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2309443   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2309444   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2309445   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2309446   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2309447   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2309448   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2309449   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2309450   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2309451   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2309452   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2309453   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2309454   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2309455   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2309456   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2309457   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2309458   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2309459   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2309460   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2309461   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2309462   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2309463   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2309464   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2309465   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2309466   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2309467   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2309468   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2309469   +END;
MPRINT(EM_DIAGRAM):   END;
2309470   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2309471   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2309472   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2309473   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2309474   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2309475   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2309476   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2309477   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2309478   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2309479   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2309480   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2309481   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2309482   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2309483   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2309484   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2309485   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2309486   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2309487   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2309488   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2309489   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2309490   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2309491   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2309492   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2309493   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2309494   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2309495   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2309496   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2309497   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2309498   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2309499   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2309500   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2309501   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2309502   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2309503   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2309504   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2309505   +   ELSE S_NumCatalogPurchases
2309506   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2309507   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2309508   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2309509   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2309510   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2309511   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2309512   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2309513   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2309514   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2309515   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2309516   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2309517   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2309518   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2309519   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2309520   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2309521   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2309522   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2309523   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2309524   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2309525   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2309526   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2309527   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2309528   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2309529   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2309530   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2309531   +END;
MPRINT(EM_DIAGRAM):   END;
2309532   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2309533   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2309534   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2309535   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2309536   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2309537   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2309538   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2309539   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2309540   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2309541   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2309542   +   H1x1_1  =     -2.0588471958351 * S_AcceptedCmpTotal
2309543   +          +     0.38628980389456 * S_Age  +     -0.8545617733777 * S_Frq
2309544   +          +    -1.37557200210661 * S_Income  +     1.58583945545125 *
2309545   +        S_Kidhome  +    -1.49250871593186 * S_Mnt  +    -2.02986091068301 *
2309546   +        S_MntFishProducts  +     0.28845511703412 * S_MntFruits
2309547   +          +    -0.62495372005095 * S_MntGoldProds  +     3.22144698444712 *
2309548   +        S_MntMeatProducts  +    -2.67158036653801 * S_MntSweetProducts
2309549   +          +    -4.30837863985493 * S_MntWines  +     0.39603200162704 *
2309550   +        S_MonthsAsCustomer  +      1.8259166147951 * S_NumCatalogPurchases
2309551   +          +      3.4758215776031 * S_NumDealsPurchases
2309552   +          +     0.17094021755289 * S_NumDistPurchases
2309553   +          +    -2.72090095694641 * S_NumStorePurchases
2309554   +          +    -0.31877935826328 * S_NumWebPurchases
2309555   +          +    -2.03399974412918 * S_NumWebVisitsMonth
2309556   +          +     2.74309130038659 * S_RFMstat  +    -0.74941844935268 *
2309557   +        S_RMntFrq  +     0.29064555076615 * S_Recency
2309558   +          +    -0.57040700827247 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.0588471958351 * S_AcceptedCmpTotal + 0.38628980389456 * 
S_Age + -0.8545617733777 * S_Frq + -1.37557200210661 * S_Income + 1.58583945545125 * S_Kidhome 
+ -1.49250871593186 * S_Mnt + -2.02986091068301 * S_MntFishProducts + 0.28845511703412 * 
S_MntFruits + -0.62495372005095 * S_MntGoldProds + 3.22144698444712 * S_MntMeatProducts + 
-2.67158036653801 * S_MntSweetProducts + -4.30837863985493 * S_MntWines + 0.39603200162704 * 
S_MonthsAsCustomer + 1.8259166147951 * S_NumCatalogPurchases + 3.4758215776031 * 
S_NumDealsPurchases + 0.17094021755289 * S_NumDistPurchases + -2.72090095694641 * 
S_NumStorePurchases + -0.31877935826328 * S_NumWebPurchases + -2.03399974412918 * 
S_NumWebVisitsMonth + 2.74309130038659 * S_RFMstat + -0.74941844935268 * S_RMntFrq + 
0.29064555076615 * S_Recency + -0.57040700827247 * S_Teenhome ;
2309559   +   H1x1_2  =     -0.5995699177824 * S_AcceptedCmpTotal
2309560   +          +    -1.17769485933608 * S_Age  +     0.95998296288295 * S_Frq
2309561   +          +     -2.2343179478513 * S_Income  +     3.17436638275163 *
2309562   +        S_Kidhome  +     0.46987648124346 * S_Mnt  +     0.07213935656698 *
2309563   +        S_MntFishProducts  +    -1.38055808108069 * S_MntFruits
2309564   +          +     0.62140960451545 * S_MntGoldProds  +     -1.9000500396873 *
2309565   +        S_MntMeatProducts  +    -0.35707372583597 * S_MntSweetProducts
2309566   +          +     1.99720917743483 * S_MntWines  +     0.89245096364062 *
2309567   +        S_MonthsAsCustomer  +    -0.61497875715928 * S_NumCatalogPurchases
2309568   +          +    -1.21013804197082 * S_NumDealsPurchases
2309569   +          +     0.59974279122188 * S_NumDistPurchases
2309570   +          +     1.92425710681156 * S_NumStorePurchases
2309571   +          +     1.02413182452324 * S_NumWebPurchases
2309572   +          +    -3.63276285340174 * S_NumWebVisitsMonth
2309573   +          +     0.33919100670479 * S_RFMstat  +     0.84767315208026 *
2309574   +        S_RMntFrq  +     3.87352563099005 * S_Recency
2309575   +          +     2.74174964084917 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5995699177824 * S_AcceptedCmpTotal + -1.17769485933608 * 
S_Age + 0.95998296288295 * S_Frq + -2.2343179478513 * S_Income + 3.17436638275163 * S_Kidhome 
+ 0.46987648124346 * S_Mnt + 0.07213935656698 * S_MntFishProducts + -1.38055808108069 * 
S_MntFruits + 0.62140960451545 * S_MntGoldProds + -1.9000500396873 * S_MntMeatProducts + 
-0.35707372583597 * S_MntSweetProducts + 1.99720917743483 * S_MntWines + 0.89245096364062 * 
S_MonthsAsCustomer + -0.61497875715928 * S_NumCatalogPurchases + -1.21013804197082 * 
S_NumDealsPurchases + 0.59974279122188 * S_NumDistPurchases + 1.92425710681156 * 
S_NumStorePurchases + 1.02413182452324 * S_NumWebPurchases + -3.63276285340174 * 
S_NumWebVisitsMonth + 0.33919100670479 * S_RFMstat + 0.84767315208026 * S_RMntFrq + 
3.87352563099005 * S_Recency + 2.74174964084917 * S_Teenhome ;
2309576   +   H1x1_3  =    -2.27029708882419 * S_AcceptedCmpTotal
2309577   +          +     0.57558817521081 * S_Age  +     0.03666022895146 * S_Frq
2309578   +          +    -0.43764949843184 * S_Income  +     0.05202039236868 *
2309579   +        S_Kidhome  +    -0.17515517773197 * S_Mnt  +      2.1454579331563 *
2309580   +        S_MntFishProducts  +     -0.0544472234117 * S_MntFruits
2309581   +          +    -0.24751372889101 * S_MntGoldProds  +    -7.95986512066472 *
2309582   +        S_MntMeatProducts  +    -0.42258869313323 * S_MntSweetProducts
2309583   +          +      4.6542173574208 * S_MntWines  +     0.27973663838423 *
2309584   +        S_MonthsAsCustomer  +    -0.92923468464154 * S_NumCatalogPurchases
2309585   +          +      0.4928343071801 * S_NumDealsPurchases
2309586   +          +     -0.0196677325409 * S_NumDistPurchases
2309587   +          +     0.44395828164873 * S_NumStorePurchases
2309588   +          +     0.86947051591224 * S_NumWebPurchases
2309589   +          +    -0.96787241206077 * S_NumWebVisitsMonth
2309590   +          +     -0.9429396337834 * S_RFMstat  +    -1.69298966254302 *
2309591   +        S_RMntFrq  +     0.24582117217188 * S_Recency
2309592   +          +    -1.08471509540368 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.27029708882419 * S_AcceptedCmpTotal + 0.57558817521081 * 
S_Age + 0.03666022895146 * S_Frq + -0.43764949843184 * S_Income + 0.05202039236868 * S_Kidhome 
+ -0.17515517773197 * S_Mnt + 2.1454579331563 * S_MntFishProducts + -0.0544472234117 * 
S_MntFruits + -0.24751372889101 * S_MntGoldProds + -7.95986512066472 * S_MntMeatProducts + 
-0.42258869313323 * S_MntSweetProducts + 4.6542173574208 * S_MntWines + 0.27973663838423 * 
S_MonthsAsCustomer + -0.92923468464154 * S_NumCatalogPurchases + 0.4928343071801 * 
S_NumDealsPurchases + -0.0196677325409 * S_NumDistPurchases + 0.44395828164873 * 
S_NumStorePurchases + 0.86947051591224 * S_NumWebPurchases + -0.96787241206077 * 
S_NumWebVisitsMonth + -0.9429396337834 * S_RFMstat + -1.69298966254302 * S_RMntFrq + 
0.24582117217188 * S_Recency + -1.08471509540368 * S_Teenhome ;
2309593   +   H1x1_4  =     0.54181596412096 * S_AcceptedCmpTotal
2309594   +          +    -1.19331526818752 * S_Age  +     0.79853759822324 * S_Frq
2309595   +          +     0.73370928178794 * S_Income  +     0.38661834479377 *
2309596   +        S_Kidhome  +      0.3442876988888 * S_Mnt  +    -0.58769739655035 *
2309597   +        S_MntFishProducts  +     -0.8703586573687 * S_MntFruits
2309598   +          +    -0.06073044217122 * S_MntGoldProds  +     1.06031608775663 *
2309599   +        S_MntMeatProducts  +      0.1600438561366 * S_MntSweetProducts
2309600   +          +    -0.10937637342015 * S_MntWines  +     0.44423445817796 *
2309601   +        S_MonthsAsCustomer  +     2.20653376632749 * S_NumCatalogPurchases
2309602   +          +     1.10280977051932 * S_NumDealsPurchases
2309603   +          +     0.99310057404036 * S_NumDistPurchases
2309604   +          +    -0.05647459609331 * S_NumStorePurchases
2309605   +          +    -0.89852483938631 * S_NumWebPurchases
2309606   +          +     2.63022480227445 * S_NumWebVisitsMonth
2309607   +          +      0.0081819695781 * S_RFMstat  +     1.19338523211724 *
2309608   +        S_RMntFrq  +    -4.46436997560659 * S_Recency
2309609   +          +    -2.03251171372039 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.54181596412096 * S_AcceptedCmpTotal + -1.19331526818752 * 
S_Age + 0.79853759822324 * S_Frq + 0.73370928178794 * S_Income + 0.38661834479377 * S_Kidhome 
+ 0.3442876988888 * S_Mnt + -0.58769739655035 * S_MntFishProducts + -0.8703586573687 * 
S_MntFruits + -0.06073044217122 * S_MntGoldProds + 1.06031608775663 * S_MntMeatProducts + 
0.1600438561366 * S_MntSweetProducts + -0.10937637342015 * S_MntWines + 0.44423445817796 * 
S_MonthsAsCustomer + 2.20653376632749 * S_NumCatalogPurchases + 1.10280977051932 * 
S_NumDealsPurchases + 0.99310057404036 * S_NumDistPurchases + -0.05647459609331 * 
S_NumStorePurchases + -0.89852483938631 * S_NumWebPurchases + 2.63022480227445 * 
S_NumWebVisitsMonth + 0.0081819695781 * S_RFMstat + 1.19338523211724 * S_RMntFrq + 
-4.46436997560659 * S_Recency + -2.03251171372039 * S_Teenhome ;
2309610   +   H1x1_5  =    -1.03227948250072 * S_AcceptedCmpTotal
2309611   +          +     0.25510562405413 * S_Age  +     0.11938172756061 * S_Frq
2309612   +          +    -0.88855927472898 * S_Income  +    -0.98732962014399 *
2309613   +        S_Kidhome  +     0.57537935682752 * S_Mnt  +     0.07702692666996 *
2309614   +        S_MntFishProducts  +     0.69541223905843 * S_MntFruits
2309615   +          +    -0.26720187465927 * S_MntGoldProds  +    -0.03938241662919 *
2309616   +        S_MntMeatProducts  +     1.08781093588885 * S_MntSweetProducts
2309617   +          +     1.16253823123182 * S_MntWines  +    -1.60607722651025 *
2309618   +        S_MonthsAsCustomer  +    -1.69043794225498 * S_NumCatalogPurchases
2309619   +          +    -2.62220616180571 * S_NumDealsPurchases
2309620   +          +    -0.51737930835331 * S_NumDistPurchases
2309621   +          +     0.88655783158133 * S_NumStorePurchases
2309622   +          +     0.35132468809969 * S_NumWebPurchases
2309623   +          +     -1.6320869675862 * S_NumWebVisitsMonth
2309624   +          +     0.33776958473405 * S_RFMstat  +    -0.42290181425075 *
2309625   +        S_RMntFrq  +     1.06226028677401 * S_Recency
2309626   +          +     1.11855899514962 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.03227948250072 * S_AcceptedCmpTotal + 0.25510562405413 * 
S_Age + 0.11938172756061 * S_Frq + -0.88855927472898 * S_Income + -0.98732962014399 * 
S_Kidhome + 0.57537935682752 * S_Mnt + 0.07702692666996 * S_MntFishProducts + 0.69541223905843 
* S_MntFruits + -0.26720187465927 * S_MntGoldProds + -0.03938241662919 * S_MntMeatProducts + 
1.08781093588885 * S_MntSweetProducts + 1.16253823123182 * S_MntWines + -1.60607722651025 * 
S_MonthsAsCustomer + -1.69043794225498 * S_NumCatalogPurchases + -2.62220616180571 * 
S_NumDealsPurchases + -0.51737930835331 * S_NumDistPurchases + 0.88655783158133 * 
S_NumStorePurchases + 0.35132468809969 * S_NumWebPurchases + -1.6320869675862 * 
S_NumWebVisitsMonth + 0.33776958473405 * S_RFMstat + -0.42290181425075 * S_RMntFrq + 
1.06226028677401 * S_Recency + 1.11855899514962 * S_Teenhome ;
2309627   +   H1x1_1  = H1x1_1  +     0.53637737817097 * AcceptedCmp10
2309628   +          +    -1.85405146733588 * AcceptedCmp20  +    -1.47621046566649 *
2309629   +        AcceptedCmp30  +    -1.37767318086242 * AcceptedCmp40
2309630   +          +    -0.96348396070145 * AcceptedCmp50  +    -1.30976546088379 *
2309631   +        Complain0  +    -0.54848314184314 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.53637737817097 * AcceptedCmp10 + -1.85405146733588 * 
AcceptedCmp20 + -1.47621046566649 * AcceptedCmp30 + -1.37767318086242 * AcceptedCmp40 + 
-0.96348396070145 * AcceptedCmp50 + -1.30976546088379 * Complain0 + -0.54848314184314 * 
HigherEducationBinary0 ;
2309632   +   H1x1_2  = H1x1_2  +     0.18445380584184 * AcceptedCmp10
2309633   +          +    -0.69257274561716 * AcceptedCmp20  +     0.17226038285159 *
2309634   +        AcceptedCmp30  +    -1.06145995435722 * AcceptedCmp40
2309635   +          +     1.23459262841144 * AcceptedCmp50  +    -0.14674063302587 *
2309636   +        Complain0  +    -1.08422405648698 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.18445380584184 * AcceptedCmp10 + -0.69257274561716 * 
AcceptedCmp20 + 0.17226038285159 * AcceptedCmp30 + -1.06145995435722 * AcceptedCmp40 + 
1.23459262841144 * AcceptedCmp50 + -0.14674063302587 * Complain0 + -1.08422405648698 * 
HigherEducationBinary0 ;
2309637   +   H1x1_3  = H1x1_3  +     0.81272808689375 * AcceptedCmp10
2309638   +          +    -0.37057950605918 * AcceptedCmp20  +    -1.75364708883985 *
2309639   +        AcceptedCmp30  +     -1.9879502333289 * AcceptedCmp40
2309640   +          +     2.82649108460951 * AcceptedCmp50  +    -0.14219031901768 *
2309641   +        Complain0  +     -0.5514346363694 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.81272808689375 * AcceptedCmp10 + -0.37057950605918 * 
AcceptedCmp20 + -1.75364708883985 * AcceptedCmp30 + -1.9879502333289 * AcceptedCmp40 + 
2.82649108460951 * AcceptedCmp50 + -0.14219031901768 * Complain0 + -0.5514346363694 * 
HigherEducationBinary0 ;
2309642   +   H1x1_4  = H1x1_4  +    -1.12354567881562 * AcceptedCmp10
2309643   +          +    -1.64564861831306 * AcceptedCmp20  +    -1.84950171464501 *
2309644   +        AcceptedCmp30  +    -2.60581164673686 * AcceptedCmp40
2309645   +          +    -0.53568003317161 * AcceptedCmp50  +    -0.13929928866767 *
2309646   +        Complain0  +     1.18053116626218 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.12354567881562 * AcceptedCmp10 + -1.64564861831306 
* AcceptedCmp20 + -1.84950171464501 * AcceptedCmp30 + -2.60581164673686 * AcceptedCmp40 + 
-0.53568003317161 * AcceptedCmp50 + -0.13929928866767 * Complain0 + 1.18053116626218 * 
HigherEducationBinary0 ;
2309647   +   H1x1_5  = H1x1_5  +     -0.3006993305802 * AcceptedCmp10
2309648   +          +    -0.67101949915278 * AcceptedCmp20  +     0.48950637221178 *
2309649   +        AcceptedCmp30  +     0.25937105093078 * AcceptedCmp40
2309650   +          +       0.650714225549 * AcceptedCmp50  +    -0.53543482850089 *
2309651   +        Complain0  +     0.62014708316206 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.3006993305802 * AcceptedCmp10 + -0.67101949915278 * 
AcceptedCmp20 + 0.48950637221178 * AcceptedCmp30 + 0.25937105093078 * AcceptedCmp40 + 
0.650714225549 * AcceptedCmp50 + -0.53543482850089 * Complain0 + 0.62014708316206 * 
HigherEducationBinary0 ;
2309652   +   H1x1_1  = H1x1_1  +     0.78710932360637 * Education2n_Cycle
2309653   +          +    -0.34656604802235 * EducationBasic  +     0.11820082193221 *
2309654   +        EducationGraduation  +     1.42539292513854 * EducationMaster
2309655   +          +     0.34809919741136 * Marital_StatusDivorced
2309656   +          +    -0.26594093535929 * Marital_StatusMarried
2309657   +          +     0.70249715999987 * Marital_StatusSingle
2309658   +          +    -0.45710525283449 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.78710932360637 * Education2n_Cycle + 
-0.34656604802235 * EducationBasic + 0.11820082193221 * EducationGraduation + 1.42539292513854 
* EducationMaster + 0.34809919741136 * Marital_StatusDivorced + -0.26594093535929 * 
Marital_StatusMarried + 0.70249715999987 * Marital_StatusSingle + -0.45710525283449 * 
Marital_StatusTogether ;
2309659   +   H1x1_2  = H1x1_2  +    -1.00496261512915 * Education2n_Cycle
2309660   +          +     0.66783492956492 * EducationBasic  +     0.91185122922538 *
2309661   +        EducationGraduation  +    -0.28204692640004 * EducationMaster
2309662   +          +    -0.20448765627193 * Marital_StatusDivorced
2309663   +          +     1.73231344674733 * Marital_StatusMarried
2309664   +          +    -0.70956480480373 * Marital_StatusSingle
2309665   +          +      1.0926428215879 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.00496261512915 * Education2n_Cycle + 
0.66783492956492 * EducationBasic + 0.91185122922538 * EducationGraduation + -0.28204692640004 
* EducationMaster + -0.20448765627193 * Marital_StatusDivorced + 1.73231344674733 * 
Marital_StatusMarried + -0.70956480480373 * Marital_StatusSingle + 1.0926428215879 * 
Marital_StatusTogether ;
2309666   +   H1x1_3  = H1x1_3  +    -0.06222681334412 * Education2n_Cycle
2309667   +          +    -0.00009122618999 * EducationBasic  +    -0.07444046529217 *
2309668   +        EducationGraduation  +     1.01284161768787 * EducationMaster
2309669   +          +     0.30333818684353 * Marital_StatusDivorced
2309670   +          +    -1.44603535988199 * Marital_StatusMarried
2309671   +          +     0.48409598426383 * Marital_StatusSingle
2309672   +          +    -1.14528682521622 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.06222681334412 * Education2n_Cycle + 
-0.00009122618999 * EducationBasic + -0.07444046529217 * EducationGraduation + 
1.01284161768787 * EducationMaster + 0.30333818684353 * Marital_StatusDivorced + 
-1.44603535988199 * Marital_StatusMarried + 0.48409598426383 * Marital_StatusSingle + 
-1.14528682521622 * Marital_StatusTogether ;
2309673   +   H1x1_4  = H1x1_4  +    -0.92316818310935 * Education2n_Cycle
2309674   +          +     0.93590924020503 * EducationBasic  +     0.36762108040277 *
2309675   +        EducationGraduation  +    -1.17735200022013 * EducationMaster
2309676   +          +     -1.5342907846297 * Marital_StatusDivorced
2309677   +          +    -1.79544684592172 * Marital_StatusMarried
2309678   +          +     0.65604313645117 * Marital_StatusSingle
2309679   +          +    -2.08172869142628 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.92316818310935 * Education2n_Cycle + 
0.93590924020503 * EducationBasic + 0.36762108040277 * EducationGraduation + -1.17735200022013 
* EducationMaster + -1.5342907846297 * Marital_StatusDivorced + -1.79544684592172 * 
Marital_StatusMarried + 0.65604313645117 * Marital_StatusSingle + -2.08172869142628 * 
Marital_StatusTogether ;
2309680   +   H1x1_5  = H1x1_5  +    -0.56328800945753 * Education2n_Cycle
2309681   +          +    -0.06918346311418 * EducationBasic  +     -1.5176897786776 *
2309682   +        EducationGraduation  +     0.09618331198762 * EducationMaster
2309683   +          +    -3.97940893560267 * Marital_StatusDivorced
2309684   +          +      3.5880254142663 * Marital_StatusMarried
2309685   +          +     -2.9897737730927 * Marital_StatusSingle
2309686   +          +     3.75098376776525 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.56328800945753 * Education2n_Cycle + 
-0.06918346311418 * EducationBasic + -1.5176897786776 * EducationGraduation + 0.09618331198762 
* EducationMaster + -3.97940893560267 * Marital_StatusDivorced + 3.5880254142663 * 
Marital_StatusMarried + -2.9897737730927 * Marital_StatusSingle + 3.75098376776525 * 
Marital_StatusTogether ;
2309687   +   H1x1_1  =    -2.89135496095875 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.89135496095875 + H1x1_1 ;
2309688   +   H1x1_2  =     0.39943637099295 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.39943637099295 + H1x1_2 ;
2309689   +   H1x1_3  =    -1.08093114818147 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.08093114818147 + H1x1_3 ;
2309690   +   H1x1_4  =    -3.29426643182948 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.29426643182948 + H1x1_4 ;
2309691   +   H1x1_5  =    -1.76822552726746 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.76822552726746 + H1x1_5 ;
2309692   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2309693   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2309694   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2309695   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
2309696   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
2309697   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
2309698   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
2309699   +END;
MPRINT(EM_DIAGRAM):   END;
2309700   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2309701   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2309702   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2309703   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2309704   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2309705   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2309706   +END;
MPRINT(EM_DIAGRAM):   END;
2309707   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2309708   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2309709   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2309710   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2309711   +   H1x2_1  =     1.01981866144831 * S_AcceptedCmpTotal
2309712   +          +    -1.47346125364319 * S_Age  +    -0.08669650492194 * S_Frq
2309713   +          +    -0.51585471637562 * S_Income  +     1.40711190452923 *
2309714   +        S_Kidhome  +    -0.21341957199148 * S_Mnt  +    -0.31211158173505 *
2309715   +        S_MntFishProducts  +    -0.77126486046129 * S_MntFruits
2309716   +          +     -0.4503905849175 * S_MntGoldProds  +     1.01090165857015 *
2309717   +        S_MntMeatProducts  +    -0.05554268249583 * S_MntSweetProducts
2309718   +          +     2.72203992871966 * S_MntWines  +    -0.46212144021719 *
2309719   +        S_MonthsAsCustomer  +    -0.10495120677935 * S_NumCatalogPurchases
2309720   +          +     0.07279889333775 * S_NumDealsPurchases
2309721   +          +     0.07542203992452 * S_NumDistPurchases
2309722   +          +     0.16296239303342 * S_NumStorePurchases
2309723   +          +     1.59193921229231 * S_NumWebPurchases
2309724   +          +    -0.35227839362603 * S_NumWebVisitsMonth
2309725   +          +      1.3224105019117 * S_RFMstat  +    -0.77035988511057 *
2309726   +        S_RMntFrq  +     0.43315770276588 * S_Recency
2309727   +          +     0.43447147039235 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.01981866144831 * S_AcceptedCmpTotal + -1.47346125364319 * 
S_Age + -0.08669650492194 * S_Frq + -0.51585471637562 * S_Income + 1.40711190452923 * 
S_Kidhome + -0.21341957199148 * S_Mnt + -0.31211158173505 * S_MntFishProducts + 
-0.77126486046129 * S_MntFruits + -0.4503905849175 * S_MntGoldProds + 1.01090165857015 * 
S_MntMeatProducts + -0.05554268249583 * S_MntSweetProducts + 2.72203992871966 * S_MntWines + 
-0.46212144021719 * S_MonthsAsCustomer + -0.10495120677935 * S_NumCatalogPurchases + 
0.07279889333775 * S_NumDealsPurchases + 0.07542203992452 * S_NumDistPurchases + 
0.16296239303342 * S_NumStorePurchases + 1.59193921229231 * S_NumWebPurchases + 
-0.35227839362603 * S_NumWebVisitsMonth + 1.3224105019117 * S_RFMstat + -0.77035988511057 * 
S_RMntFrq + 0.43315770276588 * S_Recency + 0.43447147039235 * S_Teenhome ;
2309728   +   H1x2_2  =    -0.07629675162821 * S_AcceptedCmpTotal
2309729   +          +     0.81684969971216 * S_Age  +     0.52870818801428 * S_Frq
2309730   +          +     0.15358022485378 * S_Income  +    -0.64458879887927 *
2309731   +        S_Kidhome  +    -2.12225648421746 * S_Mnt  +     1.05240671673302 *
2309732   +        S_MntFishProducts  +    -0.89595336397918 * S_MntFruits
2309733   +          +    -0.28950558043577 * S_MntGoldProds  +     0.30996043499478 *
2309734   +        S_MntMeatProducts  +     1.27676485470274 * S_MntSweetProducts
2309735   +          +    -1.30045112439384 * S_MntWines  +     1.36110971826862 *
2309736   +        S_MonthsAsCustomer  +     -0.1778244163518 * S_NumCatalogPurchases
2309737   +          +    -0.37456959251084 * S_NumDealsPurchases
2309738   +          +    -1.15252469975668 * S_NumDistPurchases
2309739   +          +    -1.39822501888899 * S_NumStorePurchases
2309740   +          +    -0.32777847360723 * S_NumWebPurchases
2309741   +          +     0.84026499832926 * S_NumWebVisitsMonth
2309742   +          +    -1.47180193258497 * S_RFMstat  +     0.18801983980439 *
2309743   +        S_RMntFrq  +     1.21016626691186 * S_Recency
2309744   +          +    -0.82943594788748 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.07629675162821 * S_AcceptedCmpTotal + 0.81684969971216 * 
S_Age + 0.52870818801428 * S_Frq + 0.15358022485378 * S_Income + -0.64458879887927 * S_Kidhome 
+ -2.12225648421746 * S_Mnt + 1.05240671673302 * S_MntFishProducts + -0.89595336397918 * 
S_MntFruits + -0.28950558043577 * S_MntGoldProds + 0.30996043499478 * S_MntMeatProducts + 
1.27676485470274 * S_MntSweetProducts + -1.30045112439384 * S_MntWines + 1.36110971826862 * 
S_MonthsAsCustomer + -0.1778244163518 * S_NumCatalogPurchases + -0.37456959251084 * 
S_NumDealsPurchases + -1.15252469975668 * S_NumDistPurchases + -1.39822501888899 * 
S_NumStorePurchases + -0.32777847360723 * S_NumWebPurchases + 0.84026499832926 * 
S_NumWebVisitsMonth + -1.47180193258497 * S_RFMstat + 0.18801983980439 * S_RMntFrq + 
1.21016626691186 * S_Recency + -0.82943594788748 * S_Teenhome ;
2309745   +   H1x2_3  =    -0.06736000283511 * S_AcceptedCmpTotal
2309746   +          +    -0.47270148030219 * S_Age  +      1.1959707178877 * S_Frq
2309747   +          +    -1.40081626653738 * S_Income  +     0.35085595025526 *
2309748   +        S_Kidhome  +    -0.43652344252181 * S_Mnt  +     1.12197802721591 *
2309749   +        S_MntFishProducts  +     1.27079634537799 * S_MntFruits
2309750   +          +    -0.03023683680758 * S_MntGoldProds  +     0.51289568088141 *
2309751   +        S_MntMeatProducts  +     1.12894900622408 * S_MntSweetProducts
2309752   +          +    -0.66940205871871 * S_MntWines  +    -1.57211003055303 *
2309753   +        S_MonthsAsCustomer  +     1.47778465205569 * S_NumCatalogPurchases
2309754   +          +     1.14090099538367 * S_NumDealsPurchases
2309755   +          +     -0.2600155774492 * S_NumDistPurchases
2309756   +          +     1.31362002392113 * S_NumStorePurchases
2309757   +          +     1.31465307763555 * S_NumWebPurchases
2309758   +          +    -0.18041623858351 * S_NumWebVisitsMonth
2309759   +          +    -0.12685084546738 * S_RFMstat  +     0.43500462904027 *
2309760   +        S_RMntFrq  +    -0.81910738140729 * S_Recency
2309761   +          +    -0.61936793661609 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.06736000283511 * S_AcceptedCmpTotal + -0.47270148030219 * 
S_Age + 1.1959707178877 * S_Frq + -1.40081626653738 * S_Income + 0.35085595025526 * S_Kidhome 
+ -0.43652344252181 * S_Mnt + 1.12197802721591 * S_MntFishProducts + 1.27079634537799 * 
S_MntFruits + -0.03023683680758 * S_MntGoldProds + 0.51289568088141 * S_MntMeatProducts + 
1.12894900622408 * S_MntSweetProducts + -0.66940205871871 * S_MntWines + -1.57211003055303 * 
S_MonthsAsCustomer + 1.47778465205569 * S_NumCatalogPurchases + 1.14090099538367 * 
S_NumDealsPurchases + -0.2600155774492 * S_NumDistPurchases + 1.31362002392113 * 
S_NumStorePurchases + 1.31465307763555 * S_NumWebPurchases + -0.18041623858351 * 
S_NumWebVisitsMonth + -0.12685084546738 * S_RFMstat + 0.43500462904027 * S_RMntFrq + 
-0.81910738140729 * S_Recency + -0.61936793661609 * S_Teenhome ;
2309762   +   H1x2_4  =    -0.31415783692162 * S_AcceptedCmpTotal
2309763   +          +     0.11061423227332 * S_Age  +    -0.65722939551233 * S_Frq
2309764   +          +     -0.9063192568986 * S_Income  +      0.4013752851291 *
2309765   +        S_Kidhome  +    -1.06795963585271 * S_Mnt  +     0.24969441019479 *
2309766   +        S_MntFishProducts  +    -0.63550038240549 * S_MntFruits
2309767   +          +     1.04454010114015 * S_MntGoldProds  +     0.89912571026653 *
2309768   +        S_MntMeatProducts  +    -1.92356868621234 * S_MntSweetProducts
2309769   +          +     -1.8642245725538 * S_MntWines  +     0.13416556054779 *
2309770   +        S_MonthsAsCustomer  +    -1.01272407075887 * S_NumCatalogPurchases
2309771   +          +     1.06486073796679 * S_NumDealsPurchases
2309772   +          +    -0.04890191247577 * S_NumDistPurchases
2309773   +          +     0.86871320720698 * S_NumStorePurchases
2309774   +          +     0.03183587281884 * S_NumWebPurchases
2309775   +          +     -0.4863802923315 * S_NumWebVisitsMonth
2309776   +          +    -1.38034657666878 * S_RFMstat  +    -0.73640242597195 *
2309777   +        S_RMntFrq  +     0.17186861211542 * S_Recency
2309778   +          +    -0.39595339111048 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.31415783692162 * S_AcceptedCmpTotal + 0.11061423227332 * 
S_Age + -0.65722939551233 * S_Frq + -0.9063192568986 * S_Income + 0.4013752851291 * S_Kidhome 
+ -1.06795963585271 * S_Mnt + 0.24969441019479 * S_MntFishProducts + -0.63550038240549 * 
S_MntFruits + 1.04454010114015 * S_MntGoldProds + 0.89912571026653 * S_MntMeatProducts + 
-1.92356868621234 * S_MntSweetProducts + -1.8642245725538 * S_MntWines + 0.13416556054779 * 
S_MonthsAsCustomer + -1.01272407075887 * S_NumCatalogPurchases + 1.06486073796679 * 
S_NumDealsPurchases + -0.04890191247577 * S_NumDistPurchases + 0.86871320720698 * 
S_NumStorePurchases + 0.03183587281884 * S_NumWebPurchases + -0.4863802923315 * 
S_NumWebVisitsMonth + -1.38034657666878 * S_RFMstat + -0.73640242597195 * S_RMntFrq + 
0.17186861211542 * S_Recency + -0.39595339111048 * S_Teenhome ;
2309779   +   H1x2_5  =     1.68315669988315 * S_AcceptedCmpTotal
2309780   +          +    -1.67467335764173 * S_Age  +     1.29921539173109 * S_Frq
2309781   +          +    -0.52305600367899 * S_Income  +     1.06261291858944 *
2309782   +        S_Kidhome  +     1.77049882170904 * S_Mnt  +    -0.27692609509601 *
2309783   +        S_MntFishProducts  +    -1.23166107817727 * S_MntFruits
2309784   +          +    -2.21476398466362 * S_MntGoldProds  +     1.02542528622621 *
2309785   +        S_MntMeatProducts  +     1.04913114036094 * S_MntSweetProducts
2309786   +          +     0.30606520702636 * S_MntWines  +    -1.15158074964406 *
2309787   +        S_MonthsAsCustomer  +     0.77918810586275 * S_NumCatalogPurchases
2309788   +          +    -0.01160267590349 * S_NumDealsPurchases
2309789   +          +    -0.92773075463083 * S_NumDistPurchases
2309790   +          +    -0.83326680533995 * S_NumStorePurchases
2309791   +          +    -1.16991058954473 * S_NumWebPurchases
2309792   +          +    -2.07771165573723 * S_NumWebVisitsMonth
2309793   +          +     0.59832456826177 * S_RFMstat  +     0.08151078945291 *
2309794   +        S_RMntFrq  +     0.80165981122986 * S_Recency
2309795   +          +     1.41798811088435 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.68315669988315 * S_AcceptedCmpTotal + -1.67467335764173 * 
S_Age + 1.29921539173109 * S_Frq + -0.52305600367899 * S_Income + 1.06261291858944 * S_Kidhome 
+ 1.77049882170904 * S_Mnt + -0.27692609509601 * S_MntFishProducts + -1.23166107817727 * 
S_MntFruits + -2.21476398466362 * S_MntGoldProds + 1.02542528622621 * S_MntMeatProducts + 
1.04913114036094 * S_MntSweetProducts + 0.30606520702636 * S_MntWines + -1.15158074964406 * 
S_MonthsAsCustomer + 0.77918810586275 * S_NumCatalogPurchases + -0.01160267590349 * 
S_NumDealsPurchases + -0.92773075463083 * S_NumDistPurchases + -0.83326680533995 * 
S_NumStorePurchases + -1.16991058954473 * S_NumWebPurchases + -2.07771165573723 * 
S_NumWebVisitsMonth + 0.59832456826177 * S_RFMstat + 0.08151078945291 * S_RMntFrq + 
0.80165981122986 * S_Recency + 1.41798811088435 * S_Teenhome ;
2309796   +   H1x2_1  = H1x2_1  +    -0.16600737981926 * AcceptedCmp10
2309797   +          +     1.41264623988567 * AcceptedCmp20  +      1.0446306999234 *
2309798   +        AcceptedCmp30  +    -1.00688604631169 * AcceptedCmp40
2309799   +          +     0.64523782235527 * AcceptedCmp50  +    -1.76623980391232 *
2309800   +        Complain0  +     1.64644530449125 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.16600737981926 * AcceptedCmp10 + 1.41264623988567 * 
AcceptedCmp20 + 1.0446306999234 * AcceptedCmp30 + -1.00688604631169 * AcceptedCmp40 + 
0.64523782235527 * AcceptedCmp50 + -1.76623980391232 * Complain0 + 1.64644530449125 * 
HigherEducationBinary0 ;
2309801   +   H1x2_2  = H1x2_2  +    -0.39493094663506 * AcceptedCmp10
2309802   +          +    -0.99095404154277 * AcceptedCmp20  +    -0.81166937096774 *
2309803   +        AcceptedCmp30  +     0.14520361414777 * AcceptedCmp40
2309804   +          +    -1.54302055254785 * AcceptedCmp50  +    -0.60600550413714 *
2309805   +        Complain0  +    -3.04730224174859 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.39493094663506 * AcceptedCmp10 + -0.99095404154277 
* AcceptedCmp20 + -0.81166937096774 * AcceptedCmp30 + 0.14520361414777 * AcceptedCmp40 + 
-1.54302055254785 * AcceptedCmp50 + -0.60600550413714 * Complain0 + -3.04730224174859 * 
HigherEducationBinary0 ;
2309806   +   H1x2_3  = H1x2_3  +      1.8650016934441 * AcceptedCmp10
2309807   +          +     0.85335394099291 * AcceptedCmp20  +     0.47327521312159 *
2309808   +        AcceptedCmp30  +    -2.64862753506152 * AcceptedCmp40
2309809   +          +     0.65827168680229 * AcceptedCmp50  +     0.45516433167059 *
2309810   +        Complain0  +    -0.62891111222764 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.8650016934441 * AcceptedCmp10 + 0.85335394099291 * 
AcceptedCmp20 + 0.47327521312159 * AcceptedCmp30 + -2.64862753506152 * AcceptedCmp40 + 
0.65827168680229 * AcceptedCmp50 + 0.45516433167059 * Complain0 + -0.62891111222764 * 
HigherEducationBinary0 ;
2309811   +   H1x2_4  = H1x2_4  +    -0.31781332022679 * AcceptedCmp10
2309812   +          +    -0.35773084257089 * AcceptedCmp20  +      0.0486072265688 *
2309813   +        AcceptedCmp30  +     1.50494203860483 * AcceptedCmp40
2309814   +          +     0.00499691981651 * AcceptedCmp50  +    -0.29977032190776 *
2309815   +        Complain0  +     0.76473087756218 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.31781332022679 * AcceptedCmp10 + -0.35773084257089 
* AcceptedCmp20 + 0.0486072265688 * AcceptedCmp30 + 1.50494203860483 * AcceptedCmp40 + 
0.00499691981651 * AcceptedCmp50 + -0.29977032190776 * Complain0 + 0.76473087756218 * 
HigherEducationBinary0 ;
2309816   +   H1x2_5  = H1x2_5  +     -0.4639041544815 * AcceptedCmp10
2309817   +          +    -1.28977231764453 * AcceptedCmp20  +    -0.03597660273531 *
2309818   +        AcceptedCmp30  +     0.17848986397338 * AcceptedCmp40
2309819   +          +     0.06649914015182 * AcceptedCmp50  +    -0.95633404051563 *
2309820   +        Complain0  +    -0.62555630659121 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.4639041544815 * AcceptedCmp10 + -1.28977231764453 * 
AcceptedCmp20 + -0.03597660273531 * AcceptedCmp30 + 0.17848986397338 * AcceptedCmp40 + 
0.06649914015182 * AcceptedCmp50 + -0.95633404051563 * Complain0 + -0.62555630659121 * 
HigherEducationBinary0 ;
2309821   +   H1x2_1  = H1x2_1  +    -1.75926153465974 * Education2n_Cycle
2309822   +          +     0.96255168005018 * EducationBasic  +     -1.2029563052774 *
2309823   +        EducationGraduation  +    -0.22397098444024 * EducationMaster
2309824   +          +    -0.10361472385198 * Marital_StatusDivorced
2309825   +          +     0.05574820877885 * Marital_StatusMarried
2309826   +          +     0.13130988205279 * Marital_StatusSingle
2309827   +          +    -1.51165564425323 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.75926153465974 * Education2n_Cycle + 
0.96255168005018 * EducationBasic + -1.2029563052774 * EducationGraduation + -0.22397098444024 
* EducationMaster + -0.10361472385198 * Marital_StatusDivorced + 0.05574820877885 * 
Marital_StatusMarried + 0.13130988205279 * Marital_StatusSingle + -1.51165564425323 * 
Marital_StatusTogether ;
2309828   +   H1x2_2  = H1x2_2  +     1.73281005101474 * Education2n_Cycle
2309829   +          +    -0.51397811328576 * EducationBasic  +     1.64296402934617 *
2309830   +        EducationGraduation  +     1.44983505587452 * EducationMaster
2309831   +          +      0.0059353523794 * Marital_StatusDivorced
2309832   +          +    -0.59379435051653 * Marital_StatusMarried
2309833   +          +    -1.93587108708999 * Marital_StatusSingle
2309834   +          +     2.02868236823401 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.73281005101474 * Education2n_Cycle + 
-0.51397811328576 * EducationBasic + 1.64296402934617 * EducationGraduation + 1.44983505587452 
* EducationMaster + 0.0059353523794 * Marital_StatusDivorced + -0.59379435051653 * 
Marital_StatusMarried + -1.93587108708999 * Marital_StatusSingle + 2.02868236823401 * 
Marital_StatusTogether ;
2309835   +   H1x2_3  = H1x2_3  +     0.11852280587389 * Education2n_Cycle
2309836   +          +    -0.87963137637159 * EducationBasic  +      0.3212539101977 *
2309837   +        EducationGraduation  +     0.16497026569775 * EducationMaster
2309838   +          +    -0.74333797840386 * Marital_StatusDivorced
2309839   +          +    -0.93061135117658 * Marital_StatusMarried
2309840   +          +     1.04024182655844 * Marital_StatusSingle
2309841   +          +     0.58313569749679 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.11852280587389 * Education2n_Cycle + 
-0.87963137637159 * EducationBasic + 0.3212539101977 * EducationGraduation + 0.16497026569775 
* EducationMaster + -0.74333797840386 * Marital_StatusDivorced + -0.93061135117658 * 
Marital_StatusMarried + 1.04024182655844 * Marital_StatusSingle + 0.58313569749679 * 
Marital_StatusTogether ;
2309842   +   H1x2_4  = H1x2_4  +     -1.2170050337036 * Education2n_Cycle
2309843   +          +    -0.83332588435502 * EducationBasic  +     0.43242117148542 *
2309844   +        EducationGraduation  +     1.71196178631559 * EducationMaster
2309845   +          +    -3.01050675344463 * Marital_StatusDivorced
2309846   +          +      0.1638723582239 * Marital_StatusMarried
2309847   +          +     0.94548468360304 * Marital_StatusSingle
2309848   +          +    -0.67333048623615 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.2170050337036 * Education2n_Cycle + 
-0.83332588435502 * EducationBasic + 0.43242117148542 * EducationGraduation + 1.71196178631559 
* EducationMaster + -3.01050675344463 * Marital_StatusDivorced + 0.1638723582239 * 
Marital_StatusMarried + 0.94548468360304 * Marital_StatusSingle + -0.67333048623615 * 
Marital_StatusTogether ;
2309849   +   H1x2_5  = H1x2_5  +    -0.66774344191467 * Education2n_Cycle
2309850   +          +     0.75591270317285 * EducationBasic  +    -0.29337325355435 *
2309851   +        EducationGraduation  +     0.57450456442662 * EducationMaster
2309852   +          +    -1.37013926274158 * Marital_StatusDivorced
2309853   +          +    -0.34168970042779 * Marital_StatusMarried
2309854   +          +     0.63383683543962 * Marital_StatusSingle
2309855   +          +     0.75118887766443 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.66774344191467 * Education2n_Cycle + 
0.75591270317285 * EducationBasic + -0.29337325355435 * EducationGraduation + 0.57450456442662 
* EducationMaster + -1.37013926274158 * Marital_StatusDivorced + -0.34168970042779 * 
Marital_StatusMarried + 0.63383683543962 * Marital_StatusSingle + 0.75118887766443 * 
Marital_StatusTogether ;
2309856   +   H1x2_1  =    -1.05245414685459 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.05245414685459 + H1x2_1 ;
2309857   +   H1x2_2  =    -2.03581716915326 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.03581716915326 + H1x2_2 ;
2309858   +   H1x2_3  =    -0.95118365599668 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.95118365599668 + H1x2_3 ;
2309859   +   H1x2_4  =    -1.36171328515396 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.36171328515396 + H1x2_4 ;
2309860   +   H1x2_5  =    -0.09438724866767 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.09438724866767 + H1x2_5 ;
2309861   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2309862   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2309863   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
2309864   +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
2309865   +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
2309866   +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
2309867   +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
2309868   +END;
MPRINT(EM_DIAGRAM):   END;
2309869   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2309870   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2309871   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2309872   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2309873   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2309874   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2309875   +END;
MPRINT(EM_DIAGRAM):   END;
2309876   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2309877   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2309878   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2309879   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2309880   +   H2x1_1  =    -3.66869890196477 * H1x1_1  +     3.66276995899936 * H1x1_2
2309881   +          +      4.9852243803889 * H1x1_3  +    -3.40922134517979 * H1x1_4
2309882   +          +     2.26435924995065 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -3.66869890196477 * H1x1_1 + 3.66276995899936 * H1x1_2 + 
4.9852243803889 * H1x1_3 + -3.40922134517979 * H1x1_4 + 2.26435924995065 * H1x1_5 ;
2309883   +   H2x1_2  =     1.35296027814603 * H1x1_1  +     0.16236277762099 * H1x1_2
2309884   +          +      0.4094634018093 * H1x1_3  +    -1.05233334297087 * H1x1_4
2309885   +          +    -0.51735435825901 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.35296027814603 * H1x1_1 + 0.16236277762099 * H1x1_2 + 
0.4094634018093 * H1x1_3 + -1.05233334297087 * H1x1_4 + -0.51735435825901 * H1x1_5 ;
2309886   +   H2x1_3  =    -3.57467050540101 * H1x1_1  +     1.96738498758928 * H1x1_2
2309887   +          +      3.1519435691133 * H1x1_3  +    -2.73180541318793 * H1x1_4
2309888   +          +     2.53621803266955 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -3.57467050540101 * H1x1_1 + 1.96738498758928 * H1x1_2 + 
3.1519435691133 * H1x1_3 + -2.73180541318793 * H1x1_4 + 2.53621803266955 * H1x1_5 ;
2309889   +   H2x1_4  =    -1.77897865469649 * H1x1_1  +    -0.34371813002239 * H1x1_2
2309890   +          +     0.97655076671381 * H1x1_3  +    -0.53022688394362 * H1x1_4
2309891   +          +     1.78452647837415 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -1.77897865469649 * H1x1_1 + -0.34371813002239 * H1x1_2 + 
0.97655076671381 * H1x1_3 + -0.53022688394362 * H1x1_4 + 1.78452647837415 * H1x1_5 ;
2309892   +   H2x1_5  =    -2.37976522756638 * H1x1_1  +     2.07473947277607 * H1x1_2
2309893   +          +      3.6114905073808 * H1x1_3  +    -4.57668209905758 * H1x1_4
2309894   +          +     2.97931581645784 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.37976522756638 * H1x1_1 + 2.07473947277607 * H1x1_2 + 
3.6114905073808 * H1x1_3 + -4.57668209905758 * H1x1_4 + 2.97931581645784 * H1x1_5 ;
2309895   +   H2x1_1  = H2x1_1  +      0.5090021095213 * H1x2_1
2309896   +          +    -0.99996599039586 * H1x2_2  +     0.09317756017156 * H1x2_3
2309897   +          +     0.07646136890595 * H1x2_4  +    -0.86729455140311 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.5090021095213 * H1x2_1 + -0.99996599039586 * H1x2_2 
+ 0.09317756017156 * H1x2_3 + 0.07646136890595 * H1x2_4 + -0.86729455140311 * H1x2_5 ;
2309898   +   H2x1_2  = H2x1_2  +     0.54458122713319 * H1x2_1
2309899   +          +    -1.01527351866283 * H1x2_2  +    -1.05264779960249 * H1x2_3
2309900   +          +     2.00891057398994 * H1x2_4  +     0.23877185330348 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.54458122713319 * H1x2_1 + -1.01527351866283 * H1x2_2 
+ -1.05264779960249 * H1x2_3 + 2.00891057398994 * H1x2_4 + 0.23877185330348 * H1x2_5 ;
2309901   +   H2x1_3  = H2x1_3  +     0.45936122831356 * H1x2_1
2309902   +          +    -0.78158455560098 * H1x2_2  +    -0.93755507764598 * H1x2_3
2309903   +          +    -0.41290092050446 * H1x2_4  +    -1.08076286104858 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.45936122831356 * H1x2_1 + -0.78158455560098 * H1x2_2 
+ -0.93755507764598 * H1x2_3 + -0.41290092050446 * H1x2_4 + -1.08076286104858 * H1x2_5 ;
2309904   +   H2x1_4  = H2x1_4  +     0.95365620475779 * H1x2_1
2309905   +          +    -0.84100294393078 * H1x2_2  +     0.70463413466954 * H1x2_3
2309906   +          +     1.80542761219637 * H1x2_4  +     0.45881360213194 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.95365620475779 * H1x2_1 + -0.84100294393078 * H1x2_2 
+ 0.70463413466954 * H1x2_3 + 1.80542761219637 * H1x2_4 + 0.45881360213194 * H1x2_5 ;
2309907   +   H2x1_5  = H2x1_5  +     0.59629215620441 * H1x2_1
2309908   +          +    -0.66300910076078 * H1x2_2  +     0.53748646350811 * H1x2_3
2309909   +          +     0.40402787748621 * H1x2_4  +    -0.68066387330661 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.59629215620441 * H1x2_1 + -0.66300910076078 * H1x2_2 
+ 0.53748646350811 * H1x2_3 + 0.40402787748621 * H1x2_4 + -0.68066387330661 * H1x2_5 ;
2309910   +   H2x1_1  =    -1.36901208947371 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.36901208947371 + H2x1_1 ;
2309911   +   H2x1_2  =     1.02513270875023 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.02513270875023 + H2x1_2 ;
2309912   +   H2x1_3  =     0.21017025934674 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.21017025934674 + H2x1_3 ;
2309913   +   H2x1_4  =    -1.15214364807652 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -1.15214364807652 + H2x1_4 ;
2309914   +   H2x1_5  =    -1.32590257108023 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.32590257108023 + H2x1_5 ;
2309915   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2309916   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2309917   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
2309918   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
2309919   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
2309920   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
2309921   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
2309922   +END;
MPRINT(EM_DIAGRAM):   END;
2309923   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2309924   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2309925   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2309926   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2309927   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2309928   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2309929   +END;
MPRINT(EM_DIAGRAM):   END;
2309930   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2309931   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2309932   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2309933   +
2309934   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2309935   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2309936   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2309937   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2309938   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2309939   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2309940   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2309941   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2309942   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2309943   +end;
MPRINT(EM_DIAGRAM):   end;
2309944   +else do;
MPRINT(EM_DIAGRAM):   else do;
2309945   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2309946   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2309947   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2309948   +   end;
MPRINT(EM_DIAGRAM):   end;
2309949   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2309950   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2309951   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2309952   +   end;
MPRINT(EM_DIAGRAM):   end;
2309953   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2309954   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2309955   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2309956   +   end;
MPRINT(EM_DIAGRAM):   end;
2309957   +end;
MPRINT(EM_DIAGRAM):   end;
2309958   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2309959   +   P_DepVar1  =    -9.23664553457504 * H2x1_1  +     1.34611690798114 * H2x1_2
2309960   +          +    -6.67077102946651 * H2x1_3  +    -1.67245227685142 * H2x1_4
2309961   +          +    -7.67053346287177 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.23664553457504 * H2x1_1 + 1.34611690798114 * H2x1_2 + 
-6.67077102946651 * H2x1_3 + -1.67245227685142 * H2x1_4 + -7.67053346287177 * H2x1_5 ;
2309962   +   P_DepVar1  =      3.4145227149582 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.4145227149582 + P_DepVar1 ;
2309963   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2309964   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2309965   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2309966   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2309967   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2309968   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2309969   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2309970   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2309971   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2309972   +END;
MPRINT(EM_DIAGRAM):   END;
2309973   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2309974   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2309975   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2309976   +END;
MPRINT(EM_DIAGRAM):   END;
2309977   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2309978   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2309979   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2309980   +END;
MPRINT(EM_DIAGRAM):   END;
2309981   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2309982   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
The SAS System

2309983   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2309984   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2309985   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2309986   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2309987   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2309988   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2309989   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2309990   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2309991   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2309992   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2309993   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2309994   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2309995   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2309996   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2309997   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2309998   +END;
MPRINT(EM_DIAGRAM):   END;
2309999   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2310000   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2310001   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2310002   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2310003   +* Renaming variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural10;
2310004   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2310005   +* Renaming Posterior variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural10;
2310006   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2310007   +drop AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar1;
2310008   +AutoNeural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar1 = P_DepVar1;
2310009   +drop AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar0;
2310010   +AutoNeural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar0 = P_DepVar0;
2310011   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2310012   +* Renaming Into variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural10;
2310013   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2310014   +length AutoNeural10_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural10_I_DepVar $32;
2310015   +drop AutoNeural10_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_I_DepVar;
2310016   +AutoNeural10_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural10_I_DepVar = I_DepVar;
2310017   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2310018   +* Renaming _WARN_ variable for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural10;
2310019   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2310020   +length AutoNeural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural10_WARN_ $4;
2310021   +drop AutoNeural10_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_WARN_;
2310022   +AutoNeural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural10_WARN_ = _WARN_;
2310023   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2310024   +* Ensmbl38: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Scoring Code of model 5 of 7;
2310025   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2310026   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2310027   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2310028   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2310029   +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
2310030   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2310031   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2310032   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2310033   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2310034   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2310035   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2310036   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2310037   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2310038   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2310039   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2310040   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2310041   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2310042   +LENGTH _WARN_ $4
2310043   +      F_DepVar  $ 12
2310044   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2310045   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2310046   +
2310047   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2310048   +
2310049   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2310050   +
2310051   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2310052   +
2310053   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2310054   +
2310055   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2310056   +
2310057   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2310058   +
2310059   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2310060   +
2310061   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2310062   +
2310063   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2310064   +
2310065   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2310066   +
2310067   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2310068   +
2310069   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2310070   +
2310071   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2310072   +
2310073   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2310074   +
2310075   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2310076   +
2310077   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2310078   +
2310079   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2310080   +
2310081   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2310082   +
2310083   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2310084   +
2310085   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2310086   +
2310087   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2310088   +
2310089   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2310090   +
2310091   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2310092   +
2310093   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2310094   +
2310095   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2310096   +
2310097   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2310098   +
2310099   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2310100   +
2310101   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2310102   +
2310103   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2310104   +
2310105   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2310106   +
2310107   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2310108   +
2310109   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2310110   +
2310111   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2310112   +
2310113   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2310114   +
2310115   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2310116   +
2310117   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2310118   +
2310119   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2310120   +
2310121   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2310122   +
2310123   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2310124   +
2310125   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2310126   +
2310127   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2310128   +
2310129   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2310130   +
2310131   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2310132   +
2310133   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2310134   +
2310135   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2310136   +
2310137   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2310138   +
2310139   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2310140   +
2310141   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2310142   +
2310143   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2310144   +
2310145   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2310146   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2310147   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2310148   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2310149   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2310150   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2310151   +end;
MPRINT(EM_DIAGRAM):   end;
2310152   +else do;
MPRINT(EM_DIAGRAM):   else do;
2310153   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2310154   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2310155   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2310156   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2310157   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2310158   +   end;
MPRINT(EM_DIAGRAM):   end;
2310159   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2310160   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2310161   +   end;
MPRINT(EM_DIAGRAM):   end;
2310162   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2310163   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2310164   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2310165   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2310166   +   end;
MPRINT(EM_DIAGRAM):   end;
2310167   +end;
MPRINT(EM_DIAGRAM):   end;
2310168   +
2310169   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2310170   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2310171   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2310172   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2310173   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2310174   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2310175   +end;
MPRINT(EM_DIAGRAM):   end;
2310176   +else do;
MPRINT(EM_DIAGRAM):   else do;
2310177   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2310178   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2310179   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2310180   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2310181   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2310182   +   end;
MPRINT(EM_DIAGRAM):   end;
2310183   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2310184   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2310185   +   end;
MPRINT(EM_DIAGRAM):   end;
2310186   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2310187   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2310188   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2310189   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2310190   +   end;
MPRINT(EM_DIAGRAM):   end;
2310191   +end;
MPRINT(EM_DIAGRAM):   end;
2310192   +
2310193   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2310194   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2310195   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2310196   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2310197   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2310198   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2310199   +end;
MPRINT(EM_DIAGRAM):   end;
2310200   +else do;
MPRINT(EM_DIAGRAM):   else do;
2310201   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2310202   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2310203   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2310204   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2310205   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2310206   +   end;
MPRINT(EM_DIAGRAM):   end;
2310207   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2310208   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2310209   +   end;
MPRINT(EM_DIAGRAM):   end;
2310210   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2310211   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2310212   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2310213   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2310214   +   end;
MPRINT(EM_DIAGRAM):   end;
2310215   +end;
MPRINT(EM_DIAGRAM):   end;
2310216   +
2310217   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2310218   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2310219   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2310220   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2310221   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2310222   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2310223   +end;
MPRINT(EM_DIAGRAM):   end;
2310224   +else do;
MPRINT(EM_DIAGRAM):   else do;
2310225   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2310226   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2310227   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2310228   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2310229   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2310230   +   end;
MPRINT(EM_DIAGRAM):   end;
2310231   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2310232   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2310233   +   end;
MPRINT(EM_DIAGRAM):   end;
2310234   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2310235   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2310236   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2310237   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2310238   +   end;
MPRINT(EM_DIAGRAM):   end;
2310239   +end;
MPRINT(EM_DIAGRAM):   end;
2310240   +
2310241   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2310242   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2310243   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2310244   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2310245   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2310246   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2310247   +end;
MPRINT(EM_DIAGRAM):   end;
2310248   +else do;
MPRINT(EM_DIAGRAM):   else do;
2310249   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2310250   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2310251   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2310252   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2310253   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2310254   +   end;
MPRINT(EM_DIAGRAM):   end;
2310255   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2310256   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2310257   +   end;
MPRINT(EM_DIAGRAM):   end;
2310258   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2310259   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2310260   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2310261   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2310262   +   end;
MPRINT(EM_DIAGRAM):   end;
2310263   +end;
MPRINT(EM_DIAGRAM):   end;
2310264   +
2310265   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2310266   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2310267   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2310268   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2310269   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2310270   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2310271   +end;
MPRINT(EM_DIAGRAM):   end;
2310272   +else do;
MPRINT(EM_DIAGRAM):   else do;
2310273   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2310274   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2310275   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2310276   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2310277   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2310278   +   end;
MPRINT(EM_DIAGRAM):   end;
2310279   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2310280   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2310281   +   end;
MPRINT(EM_DIAGRAM):   end;
2310282   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2310283   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2310284   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2310285   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2310286   +   end;
MPRINT(EM_DIAGRAM):   end;
2310287   +end;
MPRINT(EM_DIAGRAM):   end;
2310288   +
2310289   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2310290   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2310291   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2310292   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2310293   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2310294   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2310295   +end;
MPRINT(EM_DIAGRAM):   end;
2310296   +else do;
MPRINT(EM_DIAGRAM):   else do;
2310297   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2310298   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2310299   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2310300   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2310301   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2310302   +   end;
MPRINT(EM_DIAGRAM):   end;
2310303   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2310304   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2310305   +   end;
MPRINT(EM_DIAGRAM):   end;
2310306   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2310307   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2310308   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2310309   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2310310   +   end;
MPRINT(EM_DIAGRAM):   end;
2310311   +end;
MPRINT(EM_DIAGRAM):   end;
2310312   +
2310313   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2310314   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2310315   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2310316   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2310317   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2310318   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2310319   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2310320   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2310321   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2310322   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2310323   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2310324   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2310325   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2310326   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2310327   +end;
MPRINT(EM_DIAGRAM):   end;
2310328   +else do;
MPRINT(EM_DIAGRAM):   else do;
2310329   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2310330   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2310331   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2310332   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2310333   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2310334   +   end;
MPRINT(EM_DIAGRAM):   end;
2310335   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2310336   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2310337   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2310338   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2310339   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2310340   +   end;
MPRINT(EM_DIAGRAM):   end;
2310341   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2310342   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2310343   +   end;
MPRINT(EM_DIAGRAM):   end;
2310344   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2310345   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2310346   +   end;
MPRINT(EM_DIAGRAM):   end;
2310347   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2310348   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2310349   +   end;
MPRINT(EM_DIAGRAM):   end;
2310350   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2310351   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2310352   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2310353   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2310354   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2310355   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2310356   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2310357   +   end;
MPRINT(EM_DIAGRAM):   end;
2310358   +end;
MPRINT(EM_DIAGRAM):   end;
2310359   +
2310360   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2310361   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2310362   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2310363   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2310364   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2310365   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2310366   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2310367   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2310368   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2310369   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2310370   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2310371   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2310372   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2310373   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2310374   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2310375   +end;
MPRINT(EM_DIAGRAM):   end;
2310376   +else do;
MPRINT(EM_DIAGRAM):   else do;
2310377   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2310378   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2310379   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2310380   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2310381   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2310382   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2310383   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2310384   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2310385   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2310386   +         end;
MPRINT(EM_DIAGRAM):   end;
2310387   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2310388   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2310389   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2310390   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2310391   +            end;
MPRINT(EM_DIAGRAM):   end;
2310392   +         end;
MPRINT(EM_DIAGRAM):   end;
2310393   +      end;
MPRINT(EM_DIAGRAM):   end;
2310394   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2310395   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2310396   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2310397   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2310398   +         end;
MPRINT(EM_DIAGRAM):   end;
2310399   +      end;
MPRINT(EM_DIAGRAM):   end;
2310400   +   end;
MPRINT(EM_DIAGRAM):   end;
2310401   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2310402   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2310403   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2310404   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2310405   +      end;
MPRINT(EM_DIAGRAM):   end;
2310406   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2310407   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2310408   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2310409   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2310410   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2310411   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2310412   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2310413   +         end;
MPRINT(EM_DIAGRAM):   end;
2310414   +      end;
MPRINT(EM_DIAGRAM):   end;
2310415   +   end;
MPRINT(EM_DIAGRAM):   end;
2310416   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2310417   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2310418   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2310419   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2310420   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2310421   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2310422   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2310423   +   end;
MPRINT(EM_DIAGRAM):   end;
2310424   +end;
MPRINT(EM_DIAGRAM):   end;
2310425   +
2310426   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2310427   +*** Checking missing input Interval
2310428   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2310429   +
2310430   +IF NMISS(
2310431   +   AcceptedCmpTotal ,
2310432   +   Age ,
2310433   +   Frq ,
2310434   +   Income ,
2310435   +   Kidhome ,
2310436   +   Mnt ,
2310437   +   MntFishProducts ,
2310438   +   MntFruits ,
2310439   +   MntGoldProds ,
2310440   +   MntMeatProducts ,
2310441   +   MntSweetProducts ,
2310442   +   MntWines ,
2310443   +   MonthsAsCustomer ,
2310444   +   NumCatalogPurchases ,
2310445   +   NumDealsPurchases ,
2310446   +   NumDistPurchases ,
2310447   +   NumStorePurchases ,
2310448   +   NumWebPurchases ,
2310449   +   NumWebVisitsMonth ,
2310450   +   RFMstat ,
2310451   +   RMntFrq ,
2310452   +   Recency ,
2310453   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2310454   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2310455   +
2310456   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2310457   +END;
MPRINT(EM_DIAGRAM):   END;
2310458   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2310459   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2310460   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2310461   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2310462   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2310463   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2310464   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2310465   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2310466   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2310467   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2310468   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2310469   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2310470   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2310471   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2310472   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2310473   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2310474   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2310475   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2310476   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2310477   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2310478   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2310479   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2310480   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2310481   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2310482   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2310483   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2310484   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2310485   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2310486   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2310487   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2310488   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2310489   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2310490   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2310491   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2310492   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2310493   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2310494   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2310495   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2310496   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2310497   +END;
MPRINT(EM_DIAGRAM):   END;
2310498   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2310499   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2310500   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2310501   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2310502   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2310503   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2310504   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2310505   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2310506   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2310507   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2310508   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2310509   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2310510   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2310511   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2310512   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2310513   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2310514   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2310515   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2310516   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2310517   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2310518   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2310519   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2310520   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2310521   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2310522   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2310523   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2310524   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2310525   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2310526   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2310527   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2310528   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2310529   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2310530   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2310531   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2310532   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2310533   +   ELSE S_NumCatalogPurchases
2310534   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2310535   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2310536   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2310537   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2310538   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2310539   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2310540   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2310541   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2310542   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2310543   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2310544   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2310545   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2310546   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2310547   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2310548   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2310549   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2310550   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2310551   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2310552   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2310553   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2310554   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2310555   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2310556   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2310557   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2310558   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2310559   +END;
MPRINT(EM_DIAGRAM):   END;
2310560   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2310561   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2310562   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2310563   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2310564   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2310565   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2310566   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2310567   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2310568   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2310569   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2310570   +   H1x1_1  =    -0.78941671657664 * S_AcceptedCmpTotal
2310571   +          +     0.31767378900448 * S_Age  +      -0.450304150539 * S_Frq
2310572   +          +     0.13641886985589 * S_Income  +    -0.76390352240561 *
2310573   +        S_Kidhome  +    -0.84654868800943 * S_Mnt  +     0.96945558052651 *
2310574   +        S_MntFishProducts  +     0.16268958674432 * S_MntFruits
2310575   +          +     0.02144447788014 * S_MntGoldProds  +    -3.75090210449464 *
2310576   +        S_MntMeatProducts  +    -0.22086629229442 * S_MntSweetProducts
2310577   +          +      0.8352178457402 * S_MntWines  +     0.16493907873466 *
2310578   +        S_MonthsAsCustomer  +    -1.54607390993048 * S_NumCatalogPurchases
2310579   +          +    -1.12130210731541 * S_NumDealsPurchases
2310580   +          +    -0.12343505299726 * S_NumDistPurchases
2310581   +          +     0.11863092868196 * S_NumStorePurchases
2310582   +          +       0.583917993314 * S_NumWebPurchases
2310583   +          +     0.75529732848146 * S_NumWebVisitsMonth
2310584   +          +    -0.49784215446785 * S_RFMstat  +     0.40580477815146 *
2310585   +        S_RMntFrq  +    -0.95519170979342 * S_Recency
2310586   +          +    -0.44895196625502 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.78941671657664 * S_AcceptedCmpTotal + 0.31767378900448 * 
S_Age + -0.450304150539 * S_Frq + 0.13641886985589 * S_Income + -0.76390352240561 * S_Kidhome 
+ -0.84654868800943 * S_Mnt + 0.96945558052651 * S_MntFishProducts + 0.16268958674432 * 
S_MntFruits + 0.02144447788014 * S_MntGoldProds + -3.75090210449464 * S_MntMeatProducts + 
-0.22086629229442 * S_MntSweetProducts + 0.8352178457402 * S_MntWines + 0.16493907873466 * 
S_MonthsAsCustomer + -1.54607390993048 * S_NumCatalogPurchases + -1.12130210731541 * 
S_NumDealsPurchases + -0.12343505299726 * S_NumDistPurchases + 0.11863092868196 * 
S_NumStorePurchases + 0.583917993314 * S_NumWebPurchases + 0.75529732848146 * 
S_NumWebVisitsMonth + -0.49784215446785 * S_RFMstat + 0.40580477815146 * S_RMntFrq + 
-0.95519170979342 * S_Recency + -0.44895196625502 * S_Teenhome ;
2310587   +   H1x1_2  =    -0.22984864633102 * S_AcceptedCmpTotal
2310588   +          +     0.08901810463204 * S_Age  +    -0.13007664741542 * S_Frq
2310589   +          +    -0.64174617524704 * S_Income  +     0.26599968715733 *
2310590   +        S_Kidhome  +     0.57486260655125 * S_Mnt  +    -0.56033337110694 *
2310591   +        S_MntFishProducts  +     0.16060716517673 * S_MntFruits
2310592   +          +      0.4349197289782 * S_MntGoldProds  +     1.41079767517969 *
2310593   +        S_MntMeatProducts  +      0.0615730534741 * S_MntSweetProducts
2310594   +          +    -0.09057901886639 * S_MntWines  +     0.20260454891291 *
2310595   +        S_MonthsAsCustomer  +    -1.17048742280721 * S_NumCatalogPurchases
2310596   +          +    -0.84113790640734 * S_NumDealsPurchases
2310597   +          +    -0.10512672747147 * S_NumDistPurchases
2310598   +          +     0.07268711782494 * S_NumStorePurchases
2310599   +          +     0.57578331257439 * S_NumWebPurchases
2310600   +          +    -1.34334433506558 * S_NumWebVisitsMonth
2310601   +          +     0.50079465494904 * S_RFMstat  +     0.77329849238514 *
2310602   +        S_RMntFrq  +      1.2759588366983 * S_Recency
2310603   +          +     0.17722493443222 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22984864633102 * S_AcceptedCmpTotal + 0.08901810463204 * 
S_Age + -0.13007664741542 * S_Frq + -0.64174617524704 * S_Income + 0.26599968715733 * 
S_Kidhome + 0.57486260655125 * S_Mnt + -0.56033337110694 * S_MntFishProducts + 
0.16060716517673 * S_MntFruits + 0.4349197289782 * S_MntGoldProds + 1.41079767517969 * 
S_MntMeatProducts + 0.0615730534741 * S_MntSweetProducts + -0.09057901886639 * S_MntWines + 
0.20260454891291 * S_MonthsAsCustomer + -1.17048742280721 * S_NumCatalogPurchases + 
-0.84113790640734 * S_NumDealsPurchases + -0.10512672747147 * S_NumDistPurchases + 
0.07268711782494 * S_NumStorePurchases + 0.57578331257439 * S_NumWebPurchases + 
-1.34334433506558 * S_NumWebVisitsMonth + 0.50079465494904 * S_RFMstat + 0.77329849238514 * 
S_RMntFrq + 1.2759588366983 * S_Recency + 0.17722493443222 * S_Teenhome ;
2310604   +   H1x1_3  =      1.1751297152411 * S_AcceptedCmpTotal
2310605   +          +     0.14380060376858 * S_Age  +    -0.90459868540245 * S_Frq
2310606   +          +     0.65570498233801 * S_Income  +    -0.66078213466597 *
2310607   +        S_Kidhome  +      0.5364727654141 * S_Mnt  +    -0.56452823521458 *
2310608   +        S_MntFishProducts  +     0.11401811215013 * S_MntFruits
2310609   +          +     0.42809239636494 * S_MntGoldProds  +     3.28485519579047 *
2310610   +        S_MntMeatProducts  +    -0.10959477301368 * S_MntSweetProducts
2310611   +          +     -0.5779524716069 * S_MntWines  +     0.08256957915579 *
2310612   +        S_MonthsAsCustomer  +     0.48195221766948 * S_NumCatalogPurchases
2310613   +          +     0.45924983504762 * S_NumDealsPurchases
2310614   +          +    -0.25508041581692 * S_NumDistPurchases
2310615   +          +    -1.34901283858526 * S_NumStorePurchases
2310616   +          +    -0.86388975031663 * S_NumWebPurchases
2310617   +          +     1.86136110391797 * S_NumWebVisitsMonth
2310618   +          +     0.39724376701426 * S_RFMstat  +    -1.08648755949459 *
2310619   +        S_RMntFrq  +    -2.06955456943047 * S_Recency
2310620   +          +     -0.6524420065858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.1751297152411 * S_AcceptedCmpTotal + 0.14380060376858 * S_Age 
+ -0.90459868540245 * S_Frq + 0.65570498233801 * S_Income + -0.66078213466597 * S_Kidhome + 
0.5364727654141 * S_Mnt + -0.56452823521458 * S_MntFishProducts + 0.11401811215013 * 
S_MntFruits + 0.42809239636494 * S_MntGoldProds + 3.28485519579047 * S_MntMeatProducts + 
-0.10959477301368 * S_MntSweetProducts + -0.5779524716069 * S_MntWines + 0.08256957915579 * 
S_MonthsAsCustomer + 0.48195221766948 * S_NumCatalogPurchases + 0.45924983504762 * 
S_NumDealsPurchases + -0.25508041581692 * S_NumDistPurchases + -1.34901283858526 * 
S_NumStorePurchases + -0.86388975031663 * S_NumWebPurchases + 1.86136110391797 * 
S_NumWebVisitsMonth + 0.39724376701426 * S_RFMstat + -1.08648755949459 * S_RMntFrq + 
-2.06955456943047 * S_Recency + -0.6524420065858 * S_Teenhome ;
2310621   +   H1x1_1  = H1x1_1  +     0.80545309346785 * AcceptedCmp10
2310622   +          +    -0.33518398776018 * AcceptedCmp20  +    -0.58961939502901 *
2310623   +        AcceptedCmp30  +    -0.89675052404295 * AcceptedCmp40
2310624   +          +     0.75506592249683 * AcceptedCmp50  +    -0.07335613460961 *
2310625   +        Complain0  +     0.34255762261501 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.80545309346785 * AcceptedCmp10 + -0.33518398776018 * 
AcceptedCmp20 + -0.58961939502901 * AcceptedCmp30 + -0.89675052404295 * AcceptedCmp40 + 
0.75506592249683 * AcceptedCmp50 + -0.07335613460961 * Complain0 + 0.34255762261501 * 
HigherEducationBinary0 ;
2310626   +   H1x1_2  = H1x1_2  +    -0.17834267108797 * AcceptedCmp10
2310627   +          +    -0.54414628806984 * AcceptedCmp20  +      0.8037591997808 *
2310628   +        AcceptedCmp30  +     0.37789561997689 * AcceptedCmp40
2310629   +          +    -1.39910847665731 * AcceptedCmp50  +    -0.44783176263268 *
2310630   +        Complain0  +     0.36763760090773 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.17834267108797 * AcceptedCmp10 + -0.54414628806984 
* AcceptedCmp20 + 0.8037591997808 * AcceptedCmp30 + 0.37789561997689 * AcceptedCmp40 + 
-1.39910847665731 * AcceptedCmp50 + -0.44783176263268 * Complain0 + 0.36763760090773 * 
HigherEducationBinary0 ;
2310631   +   H1x1_3  = H1x1_3  +    -0.20323890063703 * AcceptedCmp10
2310632   +          +    -0.08537895761507 * AcceptedCmp20  +     0.22533818089504 *
2310633   +        AcceptedCmp30  +    -0.22195995100127 * AcceptedCmp40
2310634   +          +    -2.01371926977123 * AcceptedCmp50  +    -0.17097719978842 *
2310635   +        Complain0  +     0.34016905753094 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.20323890063703 * AcceptedCmp10 + -0.08537895761507 
* AcceptedCmp20 + 0.22533818089504 * AcceptedCmp30 + -0.22195995100127 * AcceptedCmp40 + 
-2.01371926977123 * AcceptedCmp50 + -0.17097719978842 * Complain0 + 0.34016905753094 * 
HigherEducationBinary0 ;
2310636   +   H1x1_1  = H1x1_1  +    -0.03394180683805 * Education2n_Cycle
2310637   +          +    -0.38224926448988 * EducationBasic  +    -0.42512289883041 *
2310638   +        EducationGraduation  +    -0.59708578424036 * EducationMaster
2310639   +          +     0.48853068455666 * Marital_StatusDivorced
2310640   +          +    -0.54903474026465 * Marital_StatusMarried
2310641   +          +    -0.34079188373939 * Marital_StatusSingle
2310642   +          +    -0.64602969938868 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03394180683805 * Education2n_Cycle + 
-0.38224926448988 * EducationBasic + -0.42512289883041 * EducationGraduation + 
-0.59708578424036 * EducationMaster + 0.48853068455666 * Marital_StatusDivorced + 
-0.54903474026465 * Marital_StatusMarried + -0.34079188373939 * Marital_StatusSingle + 
-0.64602969938868 * Marital_StatusTogether ;
2310643   +   H1x1_2  = H1x1_2  +    -0.26170943801998 * Education2n_Cycle
2310644   +          +     0.06893871459175 * EducationBasic  +    -0.84123174187664 *
2310645   +        EducationGraduation  +     0.19038549912088 * EducationMaster
2310646   +          +    -1.03547689902027 * Marital_StatusDivorced
2310647   +          +     2.42164864610471 * Marital_StatusMarried
2310648   +          +    -1.95342561304942 * Marital_StatusSingle
2310649   +          +      2.1397185142046 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.26170943801998 * Education2n_Cycle + 
0.06893871459175 * EducationBasic + -0.84123174187664 * EducationGraduation + 0.19038549912088 
* EducationMaster + -1.03547689902027 * Marital_StatusDivorced + 2.42164864610471 * 
Marital_StatusMarried + -1.95342561304942 * Marital_StatusSingle + 2.1397185142046 * 
Marital_StatusTogether ;
2310650   +   H1x1_3  = H1x1_3  +    -0.04236694810886 * Education2n_Cycle
2310651   +          +    -0.57404276980591 * EducationBasic  +     -0.1441989834351 *
2310652   +        EducationGraduation  +    -0.31867831184924 * EducationMaster
2310653   +          +      0.4337638747935 * Marital_StatusDivorced
2310654   +          +    -0.38508657017615 * Marital_StatusMarried
2310655   +          +     -0.0160269708326 * Marital_StatusSingle
2310656   +          +    -0.57491004270903 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.04236694810886 * Education2n_Cycle + 
-0.57404276980591 * EducationBasic + -0.1441989834351 * EducationGraduation + 
-0.31867831184924 * EducationMaster + 0.4337638747935 * Marital_StatusDivorced + 
-0.38508657017615 * Marital_StatusMarried + -0.0160269708326 * Marital_StatusSingle + 
-0.57491004270903 * Marital_StatusTogether ;
2310657   +   H1x1_1  =    -0.53426188790968 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53426188790968 + H1x1_1 ;
2310658   +   H1x1_2  =     0.98557066823746 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.98557066823746 + H1x1_2 ;
2310659   +   H1x1_3  =     1.81937688438175 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.81937688438175 + H1x1_3 ;
2310660   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
2310661   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
2310662   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2310663   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2310664   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2310665   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2310666   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2310667   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2310668   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2310669   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2310670   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2310671   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2310672   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2310673   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2310674   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2310675   +END;
MPRINT(EM_DIAGRAM):   END;
2310676   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2310677   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2310678   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2310679   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2310680   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2310681   +END;
MPRINT(EM_DIAGRAM):   END;
2310682   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2310683   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2310684   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2310685   +
2310686   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2310687   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2310688   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2310689   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2310690   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2310691   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2310692   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2310693   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2310694   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2310695   +end;
MPRINT(EM_DIAGRAM):   end;
2310696   +else do;
MPRINT(EM_DIAGRAM):   else do;
2310697   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2310698   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2310699   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2310700   +   end;
MPRINT(EM_DIAGRAM):   end;
2310701   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2310702   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2310703   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2310704   +   end;
MPRINT(EM_DIAGRAM):   end;
2310705   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2310706   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2310707   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2310708   +   end;
MPRINT(EM_DIAGRAM):   end;
2310709   +end;
MPRINT(EM_DIAGRAM):   end;
2310710   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2310711   +   P_DepVar1  =    -3.43702380277695 * H1x1_1  +    -7.14235896425537 * H1x1_2
2310712   +          +     10.8296305415538 * H1x1_3  +    -2.20824183229369 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.43702380277695 * H1x1_1 + -7.14235896425537 * H1x1_2 + 
10.8296305415538 * H1x1_3 + -2.20824183229369 * H1x1_4 ;
2310713   +   P_DepVar1  =    -3.68304614366462 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.68304614366462 + P_DepVar1 ;
2310714   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2310715   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2310716   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2310717   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2310718   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2310719   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2310720   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2310721   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2310722   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2310723   +END;
MPRINT(EM_DIAGRAM):   END;
2310724   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2310725   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2310726   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2310727   +END;
MPRINT(EM_DIAGRAM):   END;
2310728   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2310729   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2310730   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2310731   +END;
MPRINT(EM_DIAGRAM):   END;
2310732   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2310733   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2310734   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2310735   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2310736   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2310737   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2310738   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2310739   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2310740   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2310741   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2310742   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2310743   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2310744   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2310745   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2310746   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2310747   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2310748   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2310749   +END;
MPRINT(EM_DIAGRAM):   END;
2310750   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2310751   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2310752   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2310753   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2310754   +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
2310755   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2310756   +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
2310757   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2310758   +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
2310759   +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
2310760   +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
2310761   +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
2310762   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2310763   +* Renaming Into variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural9;
2310764   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2310765   +length AutoNeural9_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural9_I_DepVar $32;
2310766   +drop AutoNeural9_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_I_DepVar;
2310767   +AutoNeural9_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural9_I_DepVar = I_DepVar;
2310768   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2310769   +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
2310770   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2310771   +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
2310772   +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
2310773   +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
2310774   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2310775   +* Ensmbl38: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Scoring Code of model 6 of 7;
2310776   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2310777   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2310778   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2310779   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2310780   +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
2310781   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2310782   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2310783   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2310784   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2310785   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2310786   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2310787   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2310788   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2310789   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2310790   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2310791   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2310792   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2310793   +LENGTH _WARN_ $4
2310794   +      F_DepVar  $ 12
2310795   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2310796   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2310797   +
2310798   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2310799   +
2310800   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2310801   +
2310802   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2310803   +
2310804   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2310805   +
2310806   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2310807   +
2310808   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2310809   +
2310810   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2310811   +
2310812   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2310813   +
2310814   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2310815   +
2310816   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2310817   +
2310818   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2310819   +
2310820   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2310821   +
2310822   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2310823   +
2310824   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2310825   +
2310826   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2310827   +
2310828   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2310829   +
2310830   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2310831   +
2310832   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2310833   +
2310834   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2310835   +
2310836   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2310837   +
2310838   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2310839   +
2310840   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2310841   +
2310842   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2310843   +
2310844   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2310845   +
2310846   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2310847   +
2310848   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2310849   +
2310850   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2310851   +
2310852   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2310853   +
2310854   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2310855   +
2310856   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2310857   +
2310858   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2310859   +
2310860   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2310861   +
2310862   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2310863   +
2310864   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2310865   +
2310866   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2310867   +
2310868   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2310869   +
2310870   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2310871   +
2310872   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2310873   +
2310874   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2310875   +
2310876   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2310877   +
2310878   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2310879   +
2310880   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2310881   +
2310882   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2310883   +
2310884   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2310885   +
2310886   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2310887   +
2310888   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2310889   +
2310890   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2310891   +
2310892   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2310893   +
2310894   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2310895   +
2310896   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2310897   +
2310898   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2310899   +
2310900   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2310901   +
2310902   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2310903   +
2310904   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2310905   +
2310906   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
2310907   +
2310908   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2310909   +
2310910   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2310911   +
2310912   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2310913   +
2310914   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2310915   +
2310916   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2310917   +
2310918   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2310919   +
2310920   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2310921   +
2310922   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2310923   +
2310924   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2310925   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2310926   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2310927   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2310928   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2310929   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2310930   +end;
MPRINT(EM_DIAGRAM):   end;
2310931   +else do;
MPRINT(EM_DIAGRAM):   else do;
2310932   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2310933   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2310934   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2310935   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2310936   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2310937   +   end;
MPRINT(EM_DIAGRAM):   end;
2310938   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2310939   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2310940   +   end;
MPRINT(EM_DIAGRAM):   end;
2310941   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2310942   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2310943   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2310944   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2310945   +   end;
MPRINT(EM_DIAGRAM):   end;
2310946   +end;
MPRINT(EM_DIAGRAM):   end;
2310947   +
2310948   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2310949   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2310950   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2310951   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2310952   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2310953   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2310954   +end;
MPRINT(EM_DIAGRAM):   end;
2310955   +else do;
MPRINT(EM_DIAGRAM):   else do;
2310956   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2310957   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2310958   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2310959   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2310960   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2310961   +   end;
MPRINT(EM_DIAGRAM):   end;
2310962   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2310963   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2310964   +   end;
MPRINT(EM_DIAGRAM):   end;
2310965   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2310966   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2310967   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2310968   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2310969   +   end;
MPRINT(EM_DIAGRAM):   end;
2310970   +end;
MPRINT(EM_DIAGRAM):   end;
2310971   +
2310972   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2310973   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2310974   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2310975   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2310976   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2310977   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2310978   +end;
MPRINT(EM_DIAGRAM):   end;
2310979   +else do;
MPRINT(EM_DIAGRAM):   else do;
2310980   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2310981   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2310982   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2310983   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2310984   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2310985   +   end;
MPRINT(EM_DIAGRAM):   end;
2310986   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2310987   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2310988   +   end;
MPRINT(EM_DIAGRAM):   end;
2310989   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2310990   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2310991   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2310992   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2310993   +   end;
MPRINT(EM_DIAGRAM):   end;
2310994   +end;
MPRINT(EM_DIAGRAM):   end;
2310995   +
2310996   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2310997   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2310998   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2310999   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2311000   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2311001   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2311002   +end;
MPRINT(EM_DIAGRAM):   end;
2311003   +else do;
MPRINT(EM_DIAGRAM):   else do;
2311004   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2311005   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2311006   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2311007   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2311008   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2311009   +   end;
MPRINT(EM_DIAGRAM):   end;
2311010   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2311011   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2311012   +   end;
MPRINT(EM_DIAGRAM):   end;
2311013   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2311014   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2311015   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2311016   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2311017   +   end;
MPRINT(EM_DIAGRAM):   end;
2311018   +end;
MPRINT(EM_DIAGRAM):   end;
2311019   +
2311020   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2311021   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2311022   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2311023   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2311024   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2311025   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2311026   +end;
MPRINT(EM_DIAGRAM):   end;
2311027   +else do;
MPRINT(EM_DIAGRAM):   else do;
2311028   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2311029   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2311030   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2311031   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2311032   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2311033   +   end;
MPRINT(EM_DIAGRAM):   end;
2311034   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2311035   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2311036   +   end;
MPRINT(EM_DIAGRAM):   end;
2311037   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2311038   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2311039   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2311040   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2311041   +   end;
MPRINT(EM_DIAGRAM):   end;
2311042   +end;
MPRINT(EM_DIAGRAM):   end;
2311043   +
2311044   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2311045   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2311046   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2311047   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2311048   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2311049   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2311050   +end;
MPRINT(EM_DIAGRAM):   end;
2311051   +else do;
MPRINT(EM_DIAGRAM):   else do;
2311052   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2311053   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2311054   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2311055   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2311056   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2311057   +   end;
MPRINT(EM_DIAGRAM):   end;
2311058   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2311059   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2311060   +   end;
MPRINT(EM_DIAGRAM):   end;
2311061   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2311062   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2311063   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2311064   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2311065   +   end;
MPRINT(EM_DIAGRAM):   end;
2311066   +end;
MPRINT(EM_DIAGRAM):   end;
2311067   +
2311068   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2311069   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2311070   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2311071   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2311072   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2311073   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2311074   +end;
MPRINT(EM_DIAGRAM):   end;
2311075   +else do;
MPRINT(EM_DIAGRAM):   else do;
2311076   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2311077   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2311078   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2311079   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2311080   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2311081   +   end;
MPRINT(EM_DIAGRAM):   end;
2311082   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2311083   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2311084   +   end;
MPRINT(EM_DIAGRAM):   end;
2311085   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2311086   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2311087   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2311088   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2311089   +   end;
MPRINT(EM_DIAGRAM):   end;
2311090   +end;
MPRINT(EM_DIAGRAM):   end;
2311091   +
2311092   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2311093   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2311094   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2311095   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2311096   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2311097   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2311098   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2311099   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2311100   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2311101   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2311102   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2311103   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2311104   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2311105   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2311106   +end;
MPRINT(EM_DIAGRAM):   end;
2311107   +else do;
MPRINT(EM_DIAGRAM):   else do;
2311108   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2311109   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2311110   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2311111   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2311112   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2311113   +   end;
MPRINT(EM_DIAGRAM):   end;
2311114   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2311115   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2311116   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2311117   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2311118   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2311119   +   end;
MPRINT(EM_DIAGRAM):   end;
2311120   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2311121   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2311122   +   end;
MPRINT(EM_DIAGRAM):   end;
2311123   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2311124   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2311125   +   end;
MPRINT(EM_DIAGRAM):   end;
2311126   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2311127   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2311128   +   end;
MPRINT(EM_DIAGRAM):   end;
2311129   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2311130   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2311131   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2311132   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2311133   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2311134   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2311135   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2311136   +   end;
MPRINT(EM_DIAGRAM):   end;
2311137   +end;
MPRINT(EM_DIAGRAM):   end;
2311138   +
2311139   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2311140   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2311141   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2311142   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2311143   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2311144   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2311145   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2311146   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2311147   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2311148   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2311149   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2311150   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2311151   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2311152   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2311153   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2311154   +end;
MPRINT(EM_DIAGRAM):   end;
2311155   +else do;
MPRINT(EM_DIAGRAM):   else do;
2311156   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2311157   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2311158   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2311159   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2311160   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2311161   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2311162   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2311163   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2311164   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2311165   +         end;
MPRINT(EM_DIAGRAM):   end;
2311166   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2311167   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2311168   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2311169   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2311170   +            end;
MPRINT(EM_DIAGRAM):   end;
2311171   +         end;
MPRINT(EM_DIAGRAM):   end;
2311172   +      end;
MPRINT(EM_DIAGRAM):   end;
2311173   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2311174   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2311175   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2311176   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2311177   +         end;
MPRINT(EM_DIAGRAM):   end;
2311178   +      end;
MPRINT(EM_DIAGRAM):   end;
2311179   +   end;
MPRINT(EM_DIAGRAM):   end;
2311180   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2311181   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2311182   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2311183   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2311184   +      end;
MPRINT(EM_DIAGRAM):   end;
2311185   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2311186   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2311187   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2311188   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2311189   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2311190   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2311191   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2311192   +         end;
MPRINT(EM_DIAGRAM):   end;
2311193   +      end;
MPRINT(EM_DIAGRAM):   end;
2311194   +   end;
MPRINT(EM_DIAGRAM):   end;
2311195   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2311196   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2311197   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2311198   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2311199   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2311200   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2311201   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2311202   +   end;
MPRINT(EM_DIAGRAM):   end;
2311203   +end;
MPRINT(EM_DIAGRAM):   end;
2311204   +
2311205   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2311206   +*** Checking missing input Interval
2311207   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2311208   +
2311209   +IF NMISS(
2311210   +   AcceptedCmpTotal ,
2311211   +   Age ,
2311212   +   Frq ,
2311213   +   Income ,
2311214   +   Kidhome ,
2311215   +   Mnt ,
2311216   +   MntFishProducts ,
2311217   +   MntFruits ,
2311218   +   MntGoldProds ,
2311219   +   MntMeatProducts ,
2311220   +   MntSweetProducts ,
2311221   +   MntWines ,
2311222   +   MonthsAsCustomer ,
2311223   +   NumCatalogPurchases ,
2311224   +   NumDealsPurchases ,
2311225   +   NumDistPurchases ,
2311226   +   NumStorePurchases ,
2311227   +   NumWebPurchases ,
2311228   +   NumWebVisitsMonth ,
2311229   +   RFMstat ,
2311230   +   RMntFrq ,
2311231   +   Recency ,
2311232   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2311233   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2311234   +
2311235   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2311236   +END;
MPRINT(EM_DIAGRAM):   END;
2311237   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2311238   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2311239   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2311240   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2311241   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2311242   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2311243   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2311244   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2311245   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2311246   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2311247   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2311248   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2311249   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2311250   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2311251   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2311252   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2311253   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2311254   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2311255   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2311256   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2311257   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2311258   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2311259   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2311260   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2311261   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2311262   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2311263   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2311264   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2311265   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2311266   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2311267   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2311268   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2311269   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2311270   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2311271   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2311272   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2311273   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2311274   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2311275   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2311276   +END;
MPRINT(EM_DIAGRAM):   END;
2311277   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2311278   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2311279   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2311280   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2311281   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2311282   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2311283   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2311284   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2311285   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2311286   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2311287   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2311288   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2311289   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2311290   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2311291   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2311292   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2311293   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2311294   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2311295   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2311296   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2311297   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2311298   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2311299   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2311300   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2311301   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2311302   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2311303   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2311304   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2311305   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2311306   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2311307   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2311308   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2311309   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2311310   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2311311   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2311312   +   ELSE S_NumCatalogPurchases
2311313   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2311314   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2311315   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2311316   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2311317   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2311318   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2311319   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2311320   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2311321   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2311322   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2311323   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2311324   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2311325   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2311326   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2311327   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2311328   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2311329   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2311330   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2311331   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2311332   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2311333   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2311334   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2311335   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2311336   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2311337   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2311338   +END;
MPRINT(EM_DIAGRAM):   END;
2311339   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2311340   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2311341   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2311342   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2311343   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2311344   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2311345   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2311346   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2311347   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2311348   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2311349   +   H1x1_1  =     0.16786131610493 * S_AcceptedCmpTotal
2311350   +          +     0.08150129707008 * S_Age  +    -0.00076335149511 * S_Frq
2311351   +          +     2.37648351383272 * S_Income  +    -1.63260278456818 *
2311352   +        S_Kidhome  +     -0.6720941090663 * S_Mnt  +    -0.03176174297509 *
2311353   +        S_MntFishProducts  +    -0.03796990721617 * S_MntFruits
2311354   +          +    -0.17020485447842 * S_MntGoldProds  +      0.7709093878281 *
2311355   +        S_MntMeatProducts  +    -0.26168538456938 * S_MntSweetProducts
2311356   +          +    -1.36275284328546 * S_MntWines  +    -0.30344694826738 *
2311357   +        S_MonthsAsCustomer  +     1.68662611500615 * S_NumCatalogPurchases
2311358   +          +     1.32037113020393 * S_NumDealsPurchases
2311359   +          +     0.42879249227132 * S_NumDistPurchases
2311360   +          +    -0.89190172778783 * S_NumStorePurchases
2311361   +          +    -0.87975442613962 * S_NumWebPurchases
2311362   +          +     2.98977282825831 * S_NumWebVisitsMonth
2311363   +          +     0.16388418187981 * S_RFMstat  +     0.63858980984599 *
2311364   +        S_RMntFrq  +    -2.53833222281652 * S_Recency
2311365   +          +    -2.72141665283523 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.16786131610493 * S_AcceptedCmpTotal + 0.08150129707008 * 
S_Age + -0.00076335149511 * S_Frq + 2.37648351383272 * S_Income + -1.63260278456818 * 
S_Kidhome + -0.6720941090663 * S_Mnt + -0.03176174297509 * S_MntFishProducts + 
-0.03796990721617 * S_MntFruits + -0.17020485447842 * S_MntGoldProds + 0.7709093878281 * 
S_MntMeatProducts + -0.26168538456938 * S_MntSweetProducts + -1.36275284328546 * S_MntWines + 
-0.30344694826738 * S_MonthsAsCustomer + 1.68662611500615 * S_NumCatalogPurchases + 
1.32037113020393 * S_NumDealsPurchases + 0.42879249227132 * S_NumDistPurchases + 
-0.89190172778783 * S_NumStorePurchases + -0.87975442613962 * S_NumWebPurchases + 
2.98977282825831 * S_NumWebVisitsMonth + 0.16388418187981 * S_RFMstat + 0.63858980984599 * 
S_RMntFrq + -2.53833222281652 * S_Recency + -2.72141665283523 * S_Teenhome ;
2311366   +   H1x1_2  =    -1.16140709294501 * S_AcceptedCmpTotal
2311367   +          +    -0.87210661607894 * S_Age  +    -0.15365607228782 * S_Frq
2311368   +          +    -1.14855351318782 * S_Income  +     -0.3792851632462 *
2311369   +        S_Kidhome  +    -1.20412080219233 * S_Mnt  +     0.98615533034973 *
2311370   +        S_MntFishProducts  +     0.44541456963703 * S_MntFruits
2311371   +          +    -0.86465923336111 * S_MntGoldProds  +    -5.15063925950455 *
2311372   +        S_MntMeatProducts  +     0.54937255903381 * S_MntSweetProducts
2311373   +          +      1.1566197343428 * S_MntWines  +     1.05956341559861 *
2311374   +        S_MonthsAsCustomer  +    -1.51353620179805 * S_NumCatalogPurchases
2311375   +          +    -1.16737670931605 * S_NumDealsPurchases
2311376   +          +     0.08205195039242 * S_NumDistPurchases
2311377   +          +    -0.65367044520084 * S_NumStorePurchases
2311378   +          +     2.39693083674757 * S_NumWebPurchases
2311379   +          +     0.18432526469897 * S_NumWebVisitsMonth
2311380   +          +    -0.81660690569703 * S_RFMstat  +      0.2679378370467 *
2311381   +        S_RMntFrq  +    -0.12214066685673 * S_Recency
2311382   +          +     1.80138107382539 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.16140709294501 * S_AcceptedCmpTotal + -0.87210661607894 * 
S_Age + -0.15365607228782 * S_Frq + -1.14855351318782 * S_Income + -0.3792851632462 * 
S_Kidhome + -1.20412080219233 * S_Mnt + 0.98615533034973 * S_MntFishProducts + 
0.44541456963703 * S_MntFruits + -0.86465923336111 * S_MntGoldProds + -5.15063925950455 * 
S_MntMeatProducts + 0.54937255903381 * S_MntSweetProducts + 1.1566197343428 * S_MntWines + 
1.05956341559861 * S_MonthsAsCustomer + -1.51353620179805 * S_NumCatalogPurchases + 
-1.16737670931605 * S_NumDealsPurchases + 0.08205195039242 * S_NumDistPurchases + 
-0.65367044520084 * S_NumStorePurchases + 2.39693083674757 * S_NumWebPurchases + 
0.18432526469897 * S_NumWebVisitsMonth + -0.81660690569703 * S_RFMstat + 0.2679378370467 * 
S_RMntFrq + -0.12214066685673 * S_Recency + 1.80138107382539 * S_Teenhome ;
2311383   +   H1x1_3  =      2.0905555295419 * S_AcceptedCmpTotal
2311384   +          +    -0.23515107640805 * S_Age  +    -0.34980320997139 * S_Frq
2311385   +          +     0.96612788543649 * S_Income  +    -0.57035066115881 *
2311386   +        S_Kidhome  +     0.22762934410578 * S_Mnt  +    -0.52536382903021 *
2311387   +        S_MntFishProducts  +    -1.18451511831956 * S_MntFruits
2311388   +          +     0.15600368092559 * S_MntGoldProds  +     2.66964572205551 *
2311389   +        S_MntMeatProducts  +    -0.66381928008493 * S_MntSweetProducts
2311390   +          +    -1.34669953562975 * S_MntWines  +     1.35404821514849 *
2311391   +        S_MonthsAsCustomer  +     1.74839628716461 * S_NumCatalogPurchases
2311392   +          +     0.76616480025024 * S_NumDealsPurchases
2311393   +          +     0.42823368706255 * S_NumDistPurchases
2311394   +          +    -1.16998364854907 * S_NumStorePurchases
2311395   +          +     -1.0841896541746 * S_NumWebPurchases
2311396   +          +     2.74837744375079 * S_NumWebVisitsMonth
2311397   +          +    -0.12893804494501 * S_RFMstat  +    -0.62922223536042 *
2311398   +        S_RMntFrq  +    -5.13438280616518 * S_Recency
2311399   +          +    -0.03717013845941 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.0905555295419 * S_AcceptedCmpTotal + -0.23515107640805 * 
S_Age + -0.34980320997139 * S_Frq + 0.96612788543649 * S_Income + -0.57035066115881 * 
S_Kidhome + 0.22762934410578 * S_Mnt + -0.52536382903021 * S_MntFishProducts + 
-1.18451511831956 * S_MntFruits + 0.15600368092559 * S_MntGoldProds + 2.66964572205551 * 
S_MntMeatProducts + -0.66381928008493 * S_MntSweetProducts + -1.34669953562975 * S_MntWines + 
1.35404821514849 * S_MonthsAsCustomer + 1.74839628716461 * S_NumCatalogPurchases + 
0.76616480025024 * S_NumDealsPurchases + 0.42823368706255 * S_NumDistPurchases + 
-1.16998364854907 * S_NumStorePurchases + -1.0841896541746 * S_NumWebPurchases + 
2.74837744375079 * S_NumWebVisitsMonth + -0.12893804494501 * S_RFMstat + -0.62922223536042 * 
S_RMntFrq + -5.13438280616518 * S_Recency + -0.03717013845941 * S_Teenhome ;
2311400   +   H1x1_4  =     0.00721395593412 * S_AcceptedCmpTotal
2311401   +          +    -0.01540387767211 * S_Age  +    -0.84860703860633 * S_Frq
2311402   +          +    -1.02288627805121 * S_Income  +    -1.09101870516967 *
2311403   +        S_Kidhome  +    -0.49364597366691 * S_Mnt  +    -0.46832600024559 *
2311404   +        S_MntFishProducts  +     0.18419647776638 * S_MntFruits
2311405   +          +     0.08548650236624 * S_MntGoldProds  +      3.4353205628246 *
2311406   +        S_MntMeatProducts  +    -0.34836704949861 * S_MntSweetProducts
2311407   +          +    -2.43294028965601 * S_MntWines  +       -0.52018014955 *
2311408   +        S_MonthsAsCustomer  +     0.64700842330282 * S_NumCatalogPurchases
2311409   +          +     0.78421010501058 * S_NumDealsPurchases
2311410   +          +     0.01075885160671 * S_NumDistPurchases
2311411   +          +    -1.99395040717832 * S_NumStorePurchases
2311412   +          +    -1.02908330834262 * S_NumWebPurchases
2311413   +          +     2.79163466516477 * S_NumWebVisitsMonth
2311414   +          +    -0.02537920152644 * S_RFMstat  +    -0.42457000565561 *
2311415   +        S_RMntFrq  +     -2.0907247135068 * S_Recency
2311416   +          +     0.74119954026621 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.00721395593412 * S_AcceptedCmpTotal + -0.01540387767211 * 
S_Age + -0.84860703860633 * S_Frq + -1.02288627805121 * S_Income + -1.09101870516967 * 
S_Kidhome + -0.49364597366691 * S_Mnt + -0.46832600024559 * S_MntFishProducts + 
0.18419647776638 * S_MntFruits + 0.08548650236624 * S_MntGoldProds + 3.4353205628246 * 
S_MntMeatProducts + -0.34836704949861 * S_MntSweetProducts + -2.43294028965601 * S_MntWines + 
-0.52018014955 * S_MonthsAsCustomer + 0.64700842330282 * S_NumCatalogPurchases + 
0.78421010501058 * S_NumDealsPurchases + 0.01075885160671 * S_NumDistPurchases + 
-1.99395040717832 * S_NumStorePurchases + -1.02908330834262 * S_NumWebPurchases + 
2.79163466516477 * S_NumWebVisitsMonth + -0.02537920152644 * S_RFMstat + -0.42457000565561 * 
S_RMntFrq + -2.0907247135068 * S_Recency + 0.74119954026621 * S_Teenhome ;
2311417   +   H1x1_5  =    -1.61701205426558 * S_AcceptedCmpTotal
2311418   +          +     0.08257295395479 * S_Age  +    -0.68185680658717 * S_Frq
2311419   +          +    -1.39465125759406 * S_Income  +    -1.25029109577242 *
2311420   +        S_Kidhome  +    -1.09090107886966 * S_Mnt  +     1.64350195586938 *
2311421   +        S_MntFishProducts  +      0.5087421773332 * S_MntFruits
2311422   +          +      0.4047616469084 * S_MntGoldProds  +    -7.16241250715453 *
2311423   +        S_MntMeatProducts  +    -0.92562420397097 * S_MntSweetProducts
2311424   +          +     1.87307481667927 * S_MntWines  +    -0.53417946416471 *
2311425   +        S_MonthsAsCustomer  +    -1.53123660652072 * S_NumCatalogPurchases
2311426   +          +    -1.04219068390022 * S_NumDealsPurchases
2311427   +          +    -0.45770204483973 * S_NumDistPurchases
2311428   +          +    -0.04941442229195 * S_NumStorePurchases
2311429   +          +     0.67187353161183 * S_NumWebPurchases
2311430   +          +     2.01907760553871 * S_NumWebVisitsMonth
2311431   +          +    -1.68329765100269 * S_RFMstat  +     0.29244142334331 *
2311432   +        S_RMntFrq  +    -1.12913051410394 * S_Recency
2311433   +          +     0.43082751824484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.61701205426558 * S_AcceptedCmpTotal + 0.08257295395479 * 
S_Age + -0.68185680658717 * S_Frq + -1.39465125759406 * S_Income + -1.25029109577242 * 
S_Kidhome + -1.09090107886966 * S_Mnt + 1.64350195586938 * S_MntFishProducts + 0.5087421773332 
* S_MntFruits + 0.4047616469084 * S_MntGoldProds + -7.16241250715453 * S_MntMeatProducts + 
-0.92562420397097 * S_MntSweetProducts + 1.87307481667927 * S_MntWines + -0.53417946416471 * 
S_MonthsAsCustomer + -1.53123660652072 * S_NumCatalogPurchases + -1.04219068390022 * 
S_NumDealsPurchases + -0.45770204483973 * S_NumDistPurchases + -0.04941442229195 * 
S_NumStorePurchases + 0.67187353161183 * S_NumWebPurchases + 2.01907760553871 * 
S_NumWebVisitsMonth + -1.68329765100269 * S_RFMstat + 0.29244142334331 * S_RMntFrq + 
-1.12913051410394 * S_Recency + 0.43082751824484 * S_Teenhome ;
2311434   +   H1x1_1  = H1x1_1  +    -0.44646416045725 * AcceptedCmp10
2311435   +          +    -0.51992887099168 * AcceptedCmp20  +    -1.12974688442196 *
2311436   +        AcceptedCmp30  +    -0.25247614927616 * AcceptedCmp40
2311437   +          +     -1.0839587453165 * AcceptedCmp50  +    -0.37542128912082 *
2311438   +        Complain0  +     0.50509109375746 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.44646416045725 * AcceptedCmp10 + -0.51992887099168 
* AcceptedCmp20 + -1.12974688442196 * AcceptedCmp30 + -0.25247614927616 * AcceptedCmp40 + 
-1.0839587453165 * AcceptedCmp50 + -0.37542128912082 * Complain0 + 0.50509109375746 * 
HigherEducationBinary0 ;
2311439   +   H1x1_2  = H1x1_2  +     1.41785862418118 * AcceptedCmp10
2311440   +          +     0.14869386732553 * AcceptedCmp20  +    -0.34292007253529 *
2311441   +        AcceptedCmp30  +    -0.46450669830265 * AcceptedCmp40
2311442   +          +    -0.84675597945703 * AcceptedCmp50  +     -0.0664649548734 *
2311443   +        Complain0  +    -0.45532665777266 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.41785862418118 * AcceptedCmp10 + 0.14869386732553 * 
AcceptedCmp20 + -0.34292007253529 * AcceptedCmp30 + -0.46450669830265 * AcceptedCmp40 + 
-0.84675597945703 * AcceptedCmp50 + -0.0664649548734 * Complain0 + -0.45532665777266 * 
HigherEducationBinary0 ;
2311444   +   H1x1_3  = H1x1_3  +    -0.77549230890552 * AcceptedCmp10
2311445   +          +    -1.36005205352388 * AcceptedCmp20  +    -0.77268925112364 *
2311446   +        AcceptedCmp30  +    -1.48651970256564 * AcceptedCmp40
2311447   +          +    -1.49771960438108 * AcceptedCmp50  +     0.05855673938529 *
2311448   +        Complain0  +      0.5650947463497 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.77549230890552 * AcceptedCmp10 + -1.36005205352388 
* AcceptedCmp20 + -0.77268925112364 * AcceptedCmp30 + -1.48651970256564 * AcceptedCmp40 + 
-1.49771960438108 * AcceptedCmp50 + 0.05855673938529 * Complain0 + 0.5650947463497 * 
HigherEducationBinary0 ;
2311449   +   H1x1_4  = H1x1_4  +    -0.67577364181798 * AcceptedCmp10
2311450   +          +    -0.90920539880387 * AcceptedCmp20  +    -0.10856872028934 *
2311451   +        AcceptedCmp30  +    -0.17408320421731 * AcceptedCmp40
2311452   +          +    -0.40718112138881 * AcceptedCmp50  +    -1.15772819875829 *
2311453   +        Complain0  +    -0.63688652305256 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.67577364181798 * AcceptedCmp10 + -0.90920539880387 
* AcceptedCmp20 + -0.10856872028934 * AcceptedCmp30 + -0.17408320421731 * AcceptedCmp40 + 
-0.40718112138881 * AcceptedCmp50 + -1.15772819875829 * Complain0 + -0.63688652305256 * 
HigherEducationBinary0 ;
2311454   +   H1x1_5  = H1x1_5  +      -0.257461635853 * AcceptedCmp10
2311455   +          +    -0.53931888306725 * AcceptedCmp20  +    -0.18314917937273 *
2311456   +        AcceptedCmp30  +    -0.63373606551928 * AcceptedCmp40
2311457   +          +    -0.22117496766649 * AcceptedCmp50  +    -0.96313784449205 *
2311458   +        Complain0  +    -0.42031825118642 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.257461635853 * AcceptedCmp10 + -0.53931888306725 * 
AcceptedCmp20 + -0.18314917937273 * AcceptedCmp30 + -0.63373606551928 * AcceptedCmp40 + 
-0.22117496766649 * AcceptedCmp50 + -0.96313784449205 * Complain0 + -0.42031825118642 * 
HigherEducationBinary0 ;
2311459   +   H1x1_1  = H1x1_1  +    -0.61947659516101 * Education2n_Cycle
2311460   +          +     0.35542867116569 * EducationBasic  +    -0.40115062807285 *
2311461   +        EducationGraduation  +     0.09596442360106 * EducationMaster
2311462   +          +     2.58907527032049 * Marital_StatusDivorced
2311463   +          +    -2.45549008158921 * Marital_StatusMarried
2311464   +          +     2.56223650840768 * Marital_StatusSingle
2311465   +          +    -2.57680442835747 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.61947659516101 * Education2n_Cycle + 
0.35542867116569 * EducationBasic + -0.40115062807285 * EducationGraduation + 0.09596442360106 
* EducationMaster + 2.58907527032049 * Marital_StatusDivorced + -2.45549008158921 * 
Marital_StatusMarried + 2.56223650840768 * Marital_StatusSingle + -2.57680442835747 * 
Marital_StatusTogether ;
2311466   +   H1x1_2  = H1x1_2  +    -0.89996232033524 * Education2n_Cycle
2311467   +          +     0.51901949778729 * EducationBasic  +     0.48428543845596 *
2311468   +        EducationGraduation  +     0.29249899969052 * EducationMaster
2311469   +          +     0.83917299191368 * Marital_StatusDivorced
2311470   +          +    -0.62624692699191 * Marital_StatusMarried
2311471   +          +    -0.22585060624911 * Marital_StatusSingle
2311472   +          +    -1.13600554287291 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.89996232033524 * Education2n_Cycle + 
0.51901949778729 * EducationBasic + 0.48428543845596 * EducationGraduation + 0.29249899969052 
* EducationMaster + 0.83917299191368 * Marital_StatusDivorced + -0.62624692699191 * 
Marital_StatusMarried + -0.22585060624911 * Marital_StatusSingle + -1.13600554287291 * 
Marital_StatusTogether ;
2311473   +   H1x1_3  = H1x1_3  +    -0.14267095105584 * Education2n_Cycle
2311474   +          +    -0.02301358792856 * EducationBasic  +     0.52040244367562 *
2311475   +        EducationGraduation  +     -1.3163356801876 * EducationMaster
2311476   +          +    -0.65063506696715 * Marital_StatusDivorced
2311477   +          +    -2.37495865381256 * Marital_StatusMarried
2311478   +          +    -0.54954654146904 * Marital_StatusSingle
2311479   +          +    -2.20184943463859 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14267095105584 * Education2n_Cycle + 
-0.02301358792856 * EducationBasic + 0.52040244367562 * EducationGraduation + -1.3163356801876 
* EducationMaster + -0.65063506696715 * Marital_StatusDivorced + -2.37495865381256 * 
Marital_StatusMarried + -0.54954654146904 * Marital_StatusSingle + -2.20184943463859 * 
Marital_StatusTogether ;
2311480   +   H1x1_4  = H1x1_4  +     0.07824072331908 * Education2n_Cycle
2311481   +          +    -0.70728597193571 * EducationBasic  +    -0.08522817414387 *
2311482   +        EducationGraduation  +     0.07916018399549 * EducationMaster
2311483   +          +     0.16185824798364 * Marital_StatusDivorced
2311484   +          +    -0.08142416735136 * Marital_StatusMarried
2311485   +          +    -0.20392270385969 * Marital_StatusSingle
2311486   +          +    -0.16702436233017 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.07824072331908 * Education2n_Cycle + 
-0.70728597193571 * EducationBasic + -0.08522817414387 * EducationGraduation + 
0.07916018399549 * EducationMaster + 0.16185824798364 * Marital_StatusDivorced + 
-0.08142416735136 * Marital_StatusMarried + -0.20392270385969 * Marital_StatusSingle + 
-0.16702436233017 * Marital_StatusTogether ;
2311487   +   H1x1_5  = H1x1_5  +    -0.24374540557838 * Education2n_Cycle
2311488   +          +    -0.69820143786999 * EducationBasic  +    -0.60198982003005 *
2311489   +        EducationGraduation  +     0.28107355175103 * EducationMaster
2311490   +          +      -0.516522631078 * Marital_StatusDivorced
2311491   +          +    -0.61661247789976 * Marital_StatusMarried
2311492   +          +    -0.99533130308294 * Marital_StatusSingle
2311493   +          +    -0.36897004084592 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.24374540557838 * Education2n_Cycle + 
-0.69820143786999 * EducationBasic + -0.60198982003005 * EducationGraduation + 
0.28107355175103 * EducationMaster + -0.516522631078 * Marital_StatusDivorced + 
-0.61661247789976 * Marital_StatusMarried + -0.99533130308294 * Marital_StatusSingle + 
-0.36897004084592 * Marital_StatusTogether ;
2311494   +   H1x1_1  =    -2.48464133714558 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.48464133714558 + H1x1_1 ;
2311495   +   H1x1_2  =    -1.27353840480002 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.27353840480002 + H1x1_2 ;
2311496   +   H1x1_3  =    -1.74000879961851 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.74000879961851 + H1x1_3 ;
2311497   +   H1x1_4  =    -0.38838285632991 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.38838285632991 + H1x1_4 ;
2311498   +   H1x1_5  =    -0.14124488553728 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.14124488553728 + H1x1_5 ;
2311499   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
2311500   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
2311501   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2311502   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2311503   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2311504   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2311505   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2311506   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2311507   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2311508   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2311509   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2311510   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
2311511   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
2311512   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
2311513   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
2311514   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2311515   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2311516   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2311517   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2311518   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
2311519   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
2311520   +END;
MPRINT(EM_DIAGRAM):   END;
2311521   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2311522   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2311523   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2311524   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2311525   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2311526   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2311527   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2311528   +END;
MPRINT(EM_DIAGRAM):   END;
2311529   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2311530   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2311531   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2311532   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2311533   +   H1x2_1  =     0.48404108721156 * S_AcceptedCmpTotal
2311534   +          +    -0.27070568741648 * S_Age  +    -0.78729393257177 * S_Frq
2311535   +          +    -0.22841203379079 * S_Income  +      1.7948359601764 *
2311536   +        S_Kidhome  +     0.16415271082275 * S_Mnt  +     0.68709045116477 *
2311537   +        S_MntFishProducts  +     1.40499150479431 * S_MntFruits
2311538   +          +     1.76690927096327 * S_MntGoldProds  +    -0.47805967324795 *
2311539   +        S_MntMeatProducts  +    -1.98462171861386 * S_MntSweetProducts
2311540   +          +     0.17732042205332 * S_MntWines  +    -2.68647979937092 *
2311541   +        S_MonthsAsCustomer  +     0.66724634672152 * S_NumCatalogPurchases
2311542   +          +    -0.03801022287706 * S_NumDealsPurchases
2311543   +          +    -1.50723574966419 * S_NumDistPurchases
2311544   +          +    -0.21514545448485 * S_NumStorePurchases
2311545   +          +    -0.50179555233865 * S_NumWebPurchases
2311546   +          +    -0.68226572560161 * S_NumWebVisitsMonth
2311547   +          +    -1.16287961930374 * S_RFMstat  +    -0.10835316604382 *
2311548   +        S_RMntFrq  +     0.78178939203913 * S_Recency
2311549   +          +     0.99430928489958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.48404108721156 * S_AcceptedCmpTotal + -0.27070568741648 * 
S_Age + -0.78729393257177 * S_Frq + -0.22841203379079 * S_Income + 1.7948359601764 * S_Kidhome 
+ 0.16415271082275 * S_Mnt + 0.68709045116477 * S_MntFishProducts + 1.40499150479431 * 
S_MntFruits + 1.76690927096327 * S_MntGoldProds + -0.47805967324795 * S_MntMeatProducts + 
-1.98462171861386 * S_MntSweetProducts + 0.17732042205332 * S_MntWines + -2.68647979937092 * 
S_MonthsAsCustomer + 0.66724634672152 * S_NumCatalogPurchases + -0.03801022287706 * 
S_NumDealsPurchases + -1.50723574966419 * S_NumDistPurchases + -0.21514545448485 * 
S_NumStorePurchases + -0.50179555233865 * S_NumWebPurchases + -0.68226572560161 * 
S_NumWebVisitsMonth + -1.16287961930374 * S_RFMstat + -0.10835316604382 * S_RMntFrq + 
0.78178939203913 * S_Recency + 0.99430928489958 * S_Teenhome ;
2311550   +   H1x2_2  =    -0.36352858735119 * S_AcceptedCmpTotal
2311551   +          +    -0.57224467079409 * S_Age  +    -1.50170848997829 * S_Frq
2311552   +          +    -0.38902839025885 * S_Income  +     -1.1798795668612 *
2311553   +        S_Kidhome  +     -0.1290183198617 * S_Mnt  +     0.76723261406072 *
2311554   +        S_MntFishProducts  +     -0.2940014517298 * S_MntFruits
2311555   +          +     1.10823983171432 * S_MntGoldProds  +    -0.31483479967732 *
2311556   +        S_MntMeatProducts  +     1.52044892546638 * S_MntSweetProducts
2311557   +          +     0.93667207634948 * S_MntWines  +     1.38654947651763 *
2311558   +        S_MonthsAsCustomer  +     0.60618457384701 * S_NumCatalogPurchases
2311559   +          +     0.70551335536975 * S_NumDealsPurchases
2311560   +          +     0.02824488988803 * S_NumDistPurchases
2311561   +          +    -0.47958123842808 * S_NumStorePurchases
2311562   +          +     1.04559003239583 * S_NumWebPurchases
2311563   +          +    -0.58386087813772 * S_NumWebVisitsMonth
2311564   +          +     0.30550498646512 * S_RFMstat  +     0.30157778523343 *
2311565   +        S_RMntFrq  +    -0.05848082255965 * S_Recency
2311566   +          +     1.93017367885145 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.36352858735119 * S_AcceptedCmpTotal + -0.57224467079409 * 
S_Age + -1.50170848997829 * S_Frq + -0.38902839025885 * S_Income + -1.1798795668612 * 
S_Kidhome + -0.1290183198617 * S_Mnt + 0.76723261406072 * S_MntFishProducts + -0.2940014517298 
* S_MntFruits + 1.10823983171432 * S_MntGoldProds + -0.31483479967732 * S_MntMeatProducts + 
1.52044892546638 * S_MntSweetProducts + 0.93667207634948 * S_MntWines + 1.38654947651763 * 
S_MonthsAsCustomer + 0.60618457384701 * S_NumCatalogPurchases + 0.70551335536975 * 
S_NumDealsPurchases + 0.02824488988803 * S_NumDistPurchases + -0.47958123842808 * 
S_NumStorePurchases + 1.04559003239583 * S_NumWebPurchases + -0.58386087813772 * 
S_NumWebVisitsMonth + 0.30550498646512 * S_RFMstat + 0.30157778523343 * S_RMntFrq + 
-0.05848082255965 * S_Recency + 1.93017367885145 * S_Teenhome ;
2311567   +   H1x2_3  =    -1.42573562358231 * S_AcceptedCmpTotal
2311568   +          +    -1.32139459670271 * S_Age  +    -0.65089374259133 * S_Frq
2311569   +          +     0.40762251828155 * S_Income  +     0.07844400105703 *
2311570   +        S_Kidhome  +     0.50965373569965 * S_Mnt  +     0.16029734923155 *
2311571   +        S_MntFishProducts  +     0.09920766855666 * S_MntFruits
2311572   +          +     1.72613699296152 * S_MntGoldProds  +    -0.05634715837952 *
2311573   +        S_MntMeatProducts  +    -0.46288044931269 * S_MntSweetProducts
2311574   +          +    -1.56275217321856 * S_MntWines  +     0.47573724745363 *
2311575   +        S_MonthsAsCustomer  +     0.24362096681468 * S_NumCatalogPurchases
2311576   +          +    -0.28907339261907 * S_NumDealsPurchases
2311577   +          +     0.04310505858352 * S_NumDistPurchases
2311578   +          +    -0.99594604666889 * S_NumStorePurchases
2311579   +          +    -0.58870940220114 * S_NumWebPurchases
2311580   +          +     0.84018399925148 * S_NumWebVisitsMonth
2311581   +          +    -0.19517311010454 * S_RFMstat  +     -0.3463233802461 *
2311582   +        S_RMntFrq  +    -1.47730936960999 * S_Recency
2311583   +          +    -0.88597688046705 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.42573562358231 * S_AcceptedCmpTotal + -1.32139459670271 * 
S_Age + -0.65089374259133 * S_Frq + 0.40762251828155 * S_Income + 0.07844400105703 * S_Kidhome 
+ 0.50965373569965 * S_Mnt + 0.16029734923155 * S_MntFishProducts + 0.09920766855666 * 
S_MntFruits + 1.72613699296152 * S_MntGoldProds + -0.05634715837952 * S_MntMeatProducts + 
-0.46288044931269 * S_MntSweetProducts + -1.56275217321856 * S_MntWines + 0.47573724745363 * 
S_MonthsAsCustomer + 0.24362096681468 * S_NumCatalogPurchases + -0.28907339261907 * 
S_NumDealsPurchases + 0.04310505858352 * S_NumDistPurchases + -0.99594604666889 * 
S_NumStorePurchases + -0.58870940220114 * S_NumWebPurchases + 0.84018399925148 * 
S_NumWebVisitsMonth + -0.19517311010454 * S_RFMstat + -0.3463233802461 * S_RMntFrq + 
-1.47730936960999 * S_Recency + -0.88597688046705 * S_Teenhome ;
2311584   +   H1x2_4  =     0.11016580381662 * S_AcceptedCmpTotal
2311585   +          +     0.30908576425954 * S_Age  +     0.34179480828109 * S_Frq
2311586   +          +     0.40584056795753 * S_Income  +    -0.45712899846476 *
2311587   +        S_Kidhome  +     1.12080510316382 * S_Mnt  +     0.48988466623601 *
2311588   +        S_MntFishProducts  +    -0.33589219598754 * S_MntFruits
2311589   +          +     0.89305356089927 * S_MntGoldProds  +    -2.00512215642683 *
2311590   +        S_MntMeatProducts  +     1.10859074670332 * S_MntSweetProducts
2311591   +          +     -1.0064133988839 * S_MntWines  +      0.7768603559605 *
2311592   +        S_MonthsAsCustomer  +     0.97922554259242 * S_NumCatalogPurchases
2311593   +          +     0.52917289878604 * S_NumDealsPurchases
2311594   +          +     0.30974142545809 * S_NumDistPurchases
2311595   +          +    -0.36081450643799 * S_NumStorePurchases
2311596   +          +    -0.28418053386759 * S_NumWebPurchases
2311597   +          +    -0.80759462497096 * S_NumWebVisitsMonth
2311598   +          +    -1.12633439579018 * S_RFMstat  +    -0.14662678398603 *
2311599   +        S_RMntFrq  +    -0.02418118976368 * S_Recency
2311600   +          +    -0.46548253671298 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.11016580381662 * S_AcceptedCmpTotal + 0.30908576425954 * 
S_Age + 0.34179480828109 * S_Frq + 0.40584056795753 * S_Income + -0.45712899846476 * S_Kidhome 
+ 1.12080510316382 * S_Mnt + 0.48988466623601 * S_MntFishProducts + -0.33589219598754 * 
S_MntFruits + 0.89305356089927 * S_MntGoldProds + -2.00512215642683 * S_MntMeatProducts + 
1.10859074670332 * S_MntSweetProducts + -1.0064133988839 * S_MntWines + 0.7768603559605 * 
S_MonthsAsCustomer + 0.97922554259242 * S_NumCatalogPurchases + 0.52917289878604 * 
S_NumDealsPurchases + 0.30974142545809 * S_NumDistPurchases + -0.36081450643799 * 
S_NumStorePurchases + -0.28418053386759 * S_NumWebPurchases + -0.80759462497096 * 
S_NumWebVisitsMonth + -1.12633439579018 * S_RFMstat + -0.14662678398603 * S_RMntFrq + 
-0.02418118976368 * S_Recency + -0.46548253671298 * S_Teenhome ;
2311601   +   H1x2_5  =    -0.55551536908819 * S_AcceptedCmpTotal
2311602   +          +    -0.09163465220674 * S_Age  +    -0.35937602626275 * S_Frq
2311603   +          +     0.61145646041534 * S_Income  +     0.28920493959955 *
2311604   +        S_Kidhome  +     0.71661843805688 * S_Mnt  +     0.25254041554237 *
2311605   +        S_MntFishProducts  +    -0.38704785732563 * S_MntFruits
2311606   +          +    -0.16912995068939 * S_MntGoldProds  +     0.21440191729631 *
2311607   +        S_MntMeatProducts  +    -0.49507693220329 * S_MntSweetProducts
2311608   +          +      0.3153765288287 * S_MntWines  +    -0.15329574285112 *
2311609   +        S_MonthsAsCustomer  +     1.28722879296429 * S_NumCatalogPurchases
2311610   +          +    -0.47500053723253 * S_NumDealsPurchases
2311611   +          +     0.41421086319635 * S_NumDistPurchases
2311612   +          +     0.69664835428137 * S_NumStorePurchases
2311613   +          +     0.66359306812968 * S_NumWebPurchases
2311614   +          +     0.77931462528741 * S_NumWebVisitsMonth
2311615   +          +     0.05868786291548 * S_RFMstat  +     0.77672802649379 *
2311616   +        S_RMntFrq  +    -1.91226042675868 * S_Recency
2311617   +          +     1.79227856637688 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.55551536908819 * S_AcceptedCmpTotal + -0.09163465220674 * 
S_Age + -0.35937602626275 * S_Frq + 0.61145646041534 * S_Income + 0.28920493959955 * S_Kidhome 
+ 0.71661843805688 * S_Mnt + 0.25254041554237 * S_MntFishProducts + -0.38704785732563 * 
S_MntFruits + -0.16912995068939 * S_MntGoldProds + 0.21440191729631 * S_MntMeatProducts + 
-0.49507693220329 * S_MntSweetProducts + 0.3153765288287 * S_MntWines + -0.15329574285112 * 
S_MonthsAsCustomer + 1.28722879296429 * S_NumCatalogPurchases + -0.47500053723253 * 
S_NumDealsPurchases + 0.41421086319635 * S_NumDistPurchases + 0.69664835428137 * 
S_NumStorePurchases + 0.66359306812968 * S_NumWebPurchases + 0.77931462528741 * 
S_NumWebVisitsMonth + 0.05868786291548 * S_RFMstat + 0.77672802649379 * S_RMntFrq + 
-1.91226042675868 * S_Recency + 1.79227856637688 * S_Teenhome ;
2311618   +   H1x2_1  = H1x2_1  +     1.13471289065691 * AcceptedCmp10
2311619   +          +     0.65974383309652 * AcceptedCmp20  +    -1.87292531678796 *
2311620   +        AcceptedCmp30  +      -1.353797047409 * AcceptedCmp40
2311621   +          +     0.20616786486771 * AcceptedCmp50  +    -0.38264326101775 *
2311622   +        Complain0  +    -0.17807638061615 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.13471289065691 * AcceptedCmp10 + 0.65974383309652 * 
AcceptedCmp20 + -1.87292531678796 * AcceptedCmp30 + -1.353797047409 * AcceptedCmp40 + 
0.20616786486771 * AcceptedCmp50 + -0.38264326101775 * Complain0 + -0.17807638061615 * 
HigherEducationBinary0 ;
2311623   +   H1x2_2  = H1x2_2  +     1.21347348622419 * AcceptedCmp10
2311624   +          +    -0.25372740217388 * AcceptedCmp20  +     1.86937589112006 *
2311625   +        AcceptedCmp30  +    -0.04754722838516 * AcceptedCmp40
2311626   +          +    -0.08078800460742 * AcceptedCmp50  +     1.62387969342769 *
2311627   +        Complain0  +    -0.78004732229344 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.21347348622419 * AcceptedCmp10 + -0.25372740217388 * 
AcceptedCmp20 + 1.86937589112006 * AcceptedCmp30 + -0.04754722838516 * AcceptedCmp40 + 
-0.08078800460742 * AcceptedCmp50 + 1.62387969342769 * Complain0 + -0.78004732229344 * 
HigherEducationBinary0 ;
2311628   +   H1x2_3  = H1x2_3  +    -0.02152665189186 * AcceptedCmp10
2311629   +          +     0.57207081192818 * AcceptedCmp20  +      0.6212177562119 *
2311630   +        AcceptedCmp30  +    -0.73691462528053 * AcceptedCmp40
2311631   +          +    -0.35326427815838 * AcceptedCmp50  +     0.14875513793176 *
2311632   +        Complain0  +    -0.13978395235915 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.02152665189186 * AcceptedCmp10 + 0.57207081192818 * 
AcceptedCmp20 + 0.6212177562119 * AcceptedCmp30 + -0.73691462528053 * AcceptedCmp40 + 
-0.35326427815838 * AcceptedCmp50 + 0.14875513793176 * Complain0 + -0.13978395235915 * 
HigherEducationBinary0 ;
2311633   +   H1x2_4  = H1x2_4  +     0.87315450122595 * AcceptedCmp10
2311634   +          +      0.7868322457627 * AcceptedCmp20  +    -0.23332719513906 *
2311635   +        AcceptedCmp30  +    -0.68817918979928 * AcceptedCmp40
2311636   +          +    -0.57204462412445 * AcceptedCmp50  +    -0.86223238269616 *
2311637   +        Complain0  +     -0.3126348645458 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.87315450122595 * AcceptedCmp10 + 0.7868322457627 * 
AcceptedCmp20 + -0.23332719513906 * AcceptedCmp30 + -0.68817918979928 * AcceptedCmp40 + 
-0.57204462412445 * AcceptedCmp50 + -0.86223238269616 * Complain0 + -0.3126348645458 * 
HigherEducationBinary0 ;
2311638   +   H1x2_5  = H1x2_5  +     0.29282165496733 * AcceptedCmp10
2311639   +          +     1.51708756092369 * AcceptedCmp20  +     1.20268215158483 *
2311640   +        AcceptedCmp30  +     0.30521477351547 * AcceptedCmp40
2311641   +          +    -0.58691162701837 * AcceptedCmp50  +     0.75641665624817 *
2311642   +        Complain0  +      0.7018761099345 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.29282165496733 * AcceptedCmp10 + 1.51708756092369 * 
AcceptedCmp20 + 1.20268215158483 * AcceptedCmp30 + 0.30521477351547 * AcceptedCmp40 + 
-0.58691162701837 * AcceptedCmp50 + 0.75641665624817 * Complain0 + 0.7018761099345 * 
HigherEducationBinary0 ;
2311643   +   H1x2_1  = H1x2_1  +    -0.68955031483686 * Education2n_Cycle
2311644   +          +    -1.63162976419312 * EducationBasic  +     1.58569020932253 *
2311645   +        EducationGraduation  +     0.89392741557091 * EducationMaster
2311646   +          +    -1.34742914042312 * Marital_StatusDivorced
2311647   +          +    -0.75378934918763 * Marital_StatusMarried
2311648   +          +    -1.85411678929217 * Marital_StatusSingle
2311649   +          +     0.34579160965376 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.68955031483686 * Education2n_Cycle + 
-1.63162976419312 * EducationBasic + 1.58569020932253 * EducationGraduation + 0.89392741557091 
* EducationMaster + -1.34742914042312 * Marital_StatusDivorced + -0.75378934918763 * 
Marital_StatusMarried + -1.85411678929217 * Marital_StatusSingle + 0.34579160965376 * 
Marital_StatusTogether ;
2311650   +   H1x2_2  = H1x2_2  +     0.91842441316819 * Education2n_Cycle
2311651   +          +    -0.10372785737624 * EducationBasic  +     1.79022097342125 *
2311652   +        EducationGraduation  +      1.4602485898642 * EducationMaster
2311653   +          +     0.47958659206261 * Marital_StatusDivorced
2311654   +          +     -0.9665584294045 * Marital_StatusMarried
2311655   +          +      0.9733784530538 * Marital_StatusSingle
2311656   +          +     0.19258101270915 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.91842441316819 * Education2n_Cycle + 
-0.10372785737624 * EducationBasic + 1.79022097342125 * EducationGraduation + 1.4602485898642 
* EducationMaster + 0.47958659206261 * Marital_StatusDivorced + -0.9665584294045 * 
Marital_StatusMarried + 0.9733784530538 * Marital_StatusSingle + 0.19258101270915 * 
Marital_StatusTogether ;
2311657   +   H1x2_3  = H1x2_3  +     1.26817216331303 * Education2n_Cycle
2311658   +          +    -1.60153781162075 * EducationBasic  +    -0.32068567398782 *
2311659   +        EducationGraduation  +     1.49772418974753 * EducationMaster
2311660   +          +    -0.56894207908284 * Marital_StatusDivorced
2311661   +          +    -0.96715106987195 * Marital_StatusMarried
2311662   +          +     1.18678144721443 * Marital_StatusSingle
2311663   +          +     1.05940264255347 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.26817216331303 * Education2n_Cycle + 
-1.60153781162075 * EducationBasic + -0.32068567398782 * EducationGraduation + 
1.49772418974753 * EducationMaster + -0.56894207908284 * Marital_StatusDivorced + 
-0.96715106987195 * Marital_StatusMarried + 1.18678144721443 * Marital_StatusSingle + 
1.05940264255347 * Marital_StatusTogether ;
2311664   +   H1x2_4  = H1x2_4  +    -1.19824707240276 * Education2n_Cycle
2311665   +          +     0.43905907692169 * EducationBasic  +    -1.18279972023424 *
2311666   +        EducationGraduation  +    -2.01250798855133 * EducationMaster
2311667   +          +     -0.6061959224661 * Marital_StatusDivorced
2311668   +          +     0.03495844244684 * Marital_StatusMarried
2311669   +          +    -0.63896361063244 * Marital_StatusSingle
2311670   +          +     0.74357887057422 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.19824707240276 * Education2n_Cycle + 
0.43905907692169 * EducationBasic + -1.18279972023424 * EducationGraduation + 
-2.01250798855133 * EducationMaster + -0.6061959224661 * Marital_StatusDivorced + 
0.03495844244684 * Marital_StatusMarried + -0.63896361063244 * Marital_StatusSingle + 
0.74357887057422 * Marital_StatusTogether ;
2311671   +   H1x2_5  = H1x2_5  +     -0.6530237200396 * Education2n_Cycle
2311672   +          +     0.90062473169279 * EducationBasic  +    -3.01933913602199 *
2311673   +        EducationGraduation  +     -0.1598988619204 * EducationMaster
2311674   +          +     0.82178907301319 * Marital_StatusDivorced
2311675   +          +     1.69543553114589 * Marital_StatusMarried
2311676   +          +     -2.1272067363559 * Marital_StatusSingle
2311677   +          +     0.24274508474634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.6530237200396 * Education2n_Cycle + 
0.90062473169279 * EducationBasic + -3.01933913602199 * EducationGraduation + -0.1598988619204 
* EducationMaster + 0.82178907301319 * Marital_StatusDivorced + 1.69543553114589 * 
Marital_StatusMarried + -2.1272067363559 * Marital_StatusSingle + 0.24274508474634 * 
Marital_StatusTogether ;
2311678   +   H1x2_1  =     0.30842509451224 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.30842509451224 + H1x2_1 ;
2311679   +   H1x2_2  =     1.79200699407075 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.79200699407075 + H1x2_2 ;
2311680   +   H1x2_3  =     0.66706944906809 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.66706944906809 + H1x2_3 ;
2311681   +   H1x2_4  =     -0.7356254138015 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.7356254138015 + H1x2_4 ;
2311682   +   H1x2_5  =    -0.68066575174095 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.68066575174095 + H1x2_5 ;
2311683   +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
2311684   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
2311685   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2311686   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
2311687   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
2311688   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
2311689   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
2311690   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
2311691   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
2311692   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
2311693   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
2311694   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
2311695   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
2311696   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
2311697   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
2311698   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
2311699   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
2311700   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
2311701   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
2311702   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
2311703   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
2311704   +END;
MPRINT(EM_DIAGRAM):   END;
2311705   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2311706   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2311707   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2311708   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2311709   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2311710   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2311711   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2311712   +END;
MPRINT(EM_DIAGRAM):   END;
2311713   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2311714   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2311715   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2311716   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2311717   +   H2x1_1  =      0.7656278374321 * H1x1_1  +     1.18988619460831 * H1x1_2
2311718   +          +    -0.68458045558713 * H1x1_3  +     0.49093980591245 * H1x1_4
2311719   +          +    -1.27959429919804 * H1x1_5  +    -1.38760297105319 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.7656278374321 * H1x1_1 + 1.18988619460831 * H1x1_2 + 
-0.68458045558713 * H1x1_3 + 0.49093980591245 * H1x1_4 + -1.27959429919804 * H1x1_5 + 
-1.38760297105319 * H1x1_6 ;
2311720   +   H2x1_2  =    -1.48941810274544 * H1x1_1  +     1.75443095464294 * H1x1_2
2311721   +          +    -1.63478694878031 * H1x1_3  +    -0.69296364459258 * H1x1_4
2311722   +          +     3.14007823471691 * H1x1_5  +     2.71965753640902 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.48941810274544 * H1x1_1 + 1.75443095464294 * H1x1_2 + 
-1.63478694878031 * H1x1_3 + -0.69296364459258 * H1x1_4 + 3.14007823471691 * H1x1_5 + 
2.71965753640902 * H1x1_6 ;
2311723   +   H2x1_3  =     1.07426996100463 * H1x1_1  +    -1.76796943416489 * H1x1_2
2311724   +          +    -0.11946940948224 * H1x1_3  +     1.25457449221991 * H1x1_4
2311725   +          +     -1.4079980040852 * H1x1_5  +    -0.94725163293394 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.07426996100463 * H1x1_1 + -1.76796943416489 * H1x1_2 + 
-0.11946940948224 * H1x1_3 + 1.25457449221991 * H1x1_4 + -1.4079980040852 * H1x1_5 + 
-0.94725163293394 * H1x1_6 ;
2311726   +   H2x1_4  =    -0.00078893231548 * H1x1_1  +     0.06396324179717 * H1x1_2
2311727   +          +    -0.13674165204668 * H1x1_3  +    -0.26576379023249 * H1x1_4
2311728   +          +     0.44513643867194 * H1x1_5  +     0.66585878141635 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.00078893231548 * H1x1_1 + 0.06396324179717 * H1x1_2 + 
-0.13674165204668 * H1x1_3 + -0.26576379023249 * H1x1_4 + 0.44513643867194 * H1x1_5 + 
0.66585878141635 * H1x1_6 ;
2311729   +   H2x1_5  =     -2.8467581879118 * H1x1_1  +     2.94182061339515 * H1x1_2
2311730   +          +    -3.43021438685063 * H1x1_3  +    -4.00045607730935 * H1x1_4
2311731   +          +     3.09230566797337 * H1x1_5  +     3.57592566919388 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.8467581879118 * H1x1_1 + 2.94182061339515 * H1x1_2 + 
-3.43021438685063 * H1x1_3 + -4.00045607730935 * H1x1_4 + 3.09230566797337 * H1x1_5 + 
3.57592566919388 * H1x1_6 ;
2311732   +   H2x1_6  =    -0.29912975132561 * H1x1_1  +     0.25554634262501 * H1x1_2
2311733   +          +    -0.62666868576544 * H1x1_3  +     1.54567563696489 * H1x1_4
2311734   +          +     1.87530466579189 * H1x1_5  +    -0.32006241006585 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.29912975132561 * H1x1_1 + 0.25554634262501 * H1x1_2 + 
-0.62666868576544 * H1x1_3 + 1.54567563696489 * H1x1_4 + 1.87530466579189 * H1x1_5 + 
-0.32006241006585 * H1x1_6 ;
2311735   +   H2x1_1  = H2x1_1  +    -0.53923803948063 * H1x2_1
2311736   +          +    -0.14551996067575 * H1x2_2  +     1.15730137448351 * H1x2_3
2311737   +          +     0.02585401686791 * H1x2_4  +     -0.9274056409194 * H1x2_5
2311738   +          +    -0.07237646966438 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.53923803948063 * H1x2_1 + -0.14551996067575 * 
H1x2_2 + 1.15730137448351 * H1x2_3 + 0.02585401686791 * H1x2_4 + -0.9274056409194 * H1x2_5 + 
-0.07237646966438 * H1x2_6 ;
2311739   +   H2x1_2  = H2x1_2  +     -0.1441321293455 * H1x2_1
2311740   +          +    -0.53271770203833 * H1x2_2  +    -2.80064282115477 * H1x2_3
2311741   +          +    -1.05759395901612 * H1x2_4  +    -0.55127059339304 * H1x2_5
2311742   +          +     0.35471332651631 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.1441321293455 * H1x2_1 + -0.53271770203833 * H1x2_2 
+ -2.80064282115477 * H1x2_3 + -1.05759395901612 * H1x2_4 + -0.55127059339304 * H1x2_5 + 
0.35471332651631 * H1x2_6 ;
2311743   +   H2x1_3  = H2x1_3  +     -0.5351190580444 * H1x2_1
2311744   +          +    -0.02107048725988 * H1x2_2  +    -0.83389437376968 * H1x2_3
2311745   +          +    -0.80183937400902 * H1x2_4  +    -0.66588385104453 * H1x2_5
2311746   +          +      0.5218140468737 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.5351190580444 * H1x2_1 + -0.02107048725988 * H1x2_2 
+ -0.83389437376968 * H1x2_3 + -0.80183937400902 * H1x2_4 + -0.66588385104453 * H1x2_5 + 
0.5218140468737 * H1x2_6 ;
2311747   +   H2x1_4  = H2x1_4  +     1.89050022127485 * H1x2_1
2311748   +          +     -2.6557601537516 * H1x2_2  +     0.99126360053411 * H1x2_3
2311749   +          +    -0.44091776054792 * H1x2_4  +    -1.48547403065153 * H1x2_5
2311750   +          +    -0.67920869444907 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.89050022127485 * H1x2_1 + -2.6557601537516 * H1x2_2 
+ 0.99126360053411 * H1x2_3 + -0.44091776054792 * H1x2_4 + -1.48547403065153 * H1x2_5 + 
-0.67920869444907 * H1x2_6 ;
2311751   +   H2x1_5  = H2x1_5  +      0.2827883572995 * H1x2_1
2311752   +          +    -0.68177519072226 * H1x2_2  +    -1.62062483607713 * H1x2_3
2311753   +          +     0.24454579481466 * H1x2_4  +    -0.07591553404219 * H1x2_5
2311754   +          +      1.1175989027563 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.2827883572995 * H1x2_1 + -0.68177519072226 * H1x2_2 
+ -1.62062483607713 * H1x2_3 + 0.24454579481466 * H1x2_4 + -0.07591553404219 * H1x2_5 + 
1.1175989027563 * H1x2_6 ;
2311755   +   H2x1_6  = H2x1_6  +    -0.00603649892235 * H1x2_1
2311756   +          +    -1.39053357060307 * H1x2_2  +    -1.34023350990878 * H1x2_3
2311757   +          +    -0.76811804565852 * H1x2_4  +    -1.40869786147662 * H1x2_5
2311758   +          +     1.54589390085972 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.00603649892235 * H1x2_1 + -1.39053357060307 * 
H1x2_2 + -1.34023350990878 * H1x2_3 + -0.76811804565852 * H1x2_4 + -1.40869786147662 * H1x2_5 
+ 1.54589390085972 * H1x2_6 ;
2311759   +   H2x1_1  =     0.47873396703524 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.47873396703524 + H2x1_1 ;
2311760   +   H2x1_2  =     -0.0000340630035 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.0000340630035 + H2x1_2 ;
2311761   +   H2x1_3  =     0.35556259592214 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.35556259592214 + H2x1_3 ;
2311762   +   H2x1_4  =     1.01896219314016 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.01896219314016 + H2x1_4 ;
2311763   +   H2x1_5  =     0.72195082860145 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.72195082860145 + H2x1_5 ;
2311764   +   H2x1_6  =     0.24171639764515 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.24171639764515 + H2x1_6 ;
2311765   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2311766   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2311767   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
2311768   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
2311769   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
2311770   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
2311771   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
2311772   +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
2311773   +END;
MPRINT(EM_DIAGRAM):   END;
2311774   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2311775   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2311776   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2311777   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2311778   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2311779   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2311780   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
2311781   +END;
MPRINT(EM_DIAGRAM):   END;
2311782   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2311783   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2311784   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2311785   +
2311786   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2311787   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2311788   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2311789   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2311790   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2311791   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2311792   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2311793   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2311794   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2311795   +end;
MPRINT(EM_DIAGRAM):   end;
2311796   +else do;
MPRINT(EM_DIAGRAM):   else do;
2311797   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2311798   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2311799   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2311800   +   end;
MPRINT(EM_DIAGRAM):   end;
2311801   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2311802   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2311803   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2311804   +   end;
MPRINT(EM_DIAGRAM):   end;
2311805   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2311806   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2311807   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2311808   +   end;
MPRINT(EM_DIAGRAM):   end;
2311809   +end;
MPRINT(EM_DIAGRAM):   end;
2311810   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2311811   +   P_DepVar1  =     7.13056975005701 * H2x1_1  +    -9.26714696465882 * H2x1_2
2311812   +          +     9.36351037194964 * H2x1_3  +     2.76582940055979 * H2x1_4
2311813   +          +    -20.1354182036801 * H2x1_5  +     1.54726164498938 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.13056975005701 * H2x1_1 + -9.26714696465882 * H2x1_2 + 
9.36351037194964 * H2x1_3 + 2.76582940055979 * H2x1_4 + -20.1354182036801 * H2x1_5 + 
1.54726164498938 * H2x1_6 ;
2311814   +   P_DepVar1  =     5.03726079820845 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.03726079820845 + P_DepVar1 ;
2311815   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2311816   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2311817   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2311818   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2311819   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2311820   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2311821   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2311822   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2311823   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2311824   +END;
MPRINT(EM_DIAGRAM):   END;
2311825   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2311826   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2311827   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2311828   +END;
MPRINT(EM_DIAGRAM):   END;
2311829   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2311830   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2311831   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2311832   +END;
MPRINT(EM_DIAGRAM):   END;
2311833   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2311834   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2311835   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2311836   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2311837   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2311838   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2311839   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2311840   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2311841   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2311842   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2311843   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2311844   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2311845   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2311846   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2311847   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2311848   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2311849   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2311850   +END;
MPRINT(EM_DIAGRAM):   END;
2311851   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2311852   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2311853   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2311854   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2311855   +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
2311856   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2311857   +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
2311858   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2311859   +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
2311860   +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
2311861   +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
2311862   +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
2311863   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2311864   +* Renaming Into variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural11;
2311865   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2311866   +length AutoNeural11_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural11_I_DepVar $32;
2311867   +drop AutoNeural11_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_I_DepVar;
2311868   +AutoNeural11_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural11_I_DepVar = I_DepVar;
2311869   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2311870   +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
2311871   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2311872   +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
2311873   +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
2311874   +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
2311875   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2311876   +* Ensmbl38: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Scoring Code of model 7 of 7;
2311877   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2311878   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2311879   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2311880   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2311881   +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
2311882   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2311883   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2311884   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2311885   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2311886   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2311887   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2311888   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2311889   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2311890   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2311891   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2311892   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2311893   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2311894   +LENGTH _WARN_ $4
2311895   +      F_DepVar  $ 12
2311896   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2311897   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2311898   +
2311899   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2311900   +
2311901   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2311902   +
2311903   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2311904   +
2311905   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2311906   +
2311907   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2311908   +
2311909   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2311910   +
2311911   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2311912   +
2311913   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2311914   +
2311915   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2311916   +
2311917   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2311918   +
2311919   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2311920   +
2311921   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2311922   +
2311923   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2311924   +
2311925   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2311926   +
2311927   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2311928   +
2311929   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2311930   +
2311931   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2311932   +
2311933   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2311934   +
2311935   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2311936   +
2311937   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2311938   +
2311939   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2311940   +
2311941   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2311942   +
2311943   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2311944   +
2311945   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2311946   +
2311947   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2311948   +
2311949   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2311950   +
2311951   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2311952   +
2311953   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2311954   +
2311955   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2311956   +
2311957   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2311958   +
2311959   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2311960   +
2311961   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2311962   +
2311963   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2311964   +
2311965   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2311966   +
2311967   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2311968   +
2311969   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2311970   +
2311971   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2311972   +
2311973   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2311974   +
2311975   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2311976   +
2311977   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2311978   +
2311979   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2311980   +
2311981   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2311982   +
2311983   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2311984   +
2311985   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
2311986   +
2311987   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2311988   +
2311989   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2311990   +
2311991   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2311992   +
2311993   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2311994   +
2311995   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2311996   +
2311997   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2311998   +
2311999   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
2312000   +
2312001   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2312002   +
2312003   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2312004   +
2312005   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
2312006   +
2312007   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
2312008   +
2312009   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
2312010   +
2312011   +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
2312012   +
2312013   +      label H1x3_7 = 'Hidden: H1x3_=7' ;
MPRINT(EM_DIAGRAM):   label H1x3_7 = 'Hidden: H1x3_=7' ;
2312014   +
2312015   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2312016   +
2312017   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2312018   +
2312019   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2312020   +
2312021   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2312022   +
2312023   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2312024   +
2312025   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
2312026   +
2312027   +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
2312028   +
2312029   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
2312030   +
2312031   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
2312032   +
2312033   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
2312034   +
2312035   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
2312036   +
2312037   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
2312038   +
2312039   +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
2312040   +
2312041   +      label H2x2_7 = 'Hidden: H2x2_=7' ;
MPRINT(EM_DIAGRAM):   label H2x2_7 = 'Hidden: H2x2_=7' ;
2312042   +
2312043   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
2312044   +
2312045   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
2312046   +
2312047   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
2312048   +
2312049   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
2312050   +
2312051   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
2312052   +
2312053   +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
2312054   +
2312055   +      label H3x1_7 = 'Hidden: H3x1_=7' ;
MPRINT(EM_DIAGRAM):   label H3x1_7 = 'Hidden: H3x1_=7' ;
2312056   +
2312057   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2312058   +
2312059   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2312060   +
2312061   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2312062   +
2312063   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2312064   +
2312065   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2312066   +
2312067   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2312068   +
2312069   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2312070   +
2312071   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2312072   +
2312073   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2312074   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2312075   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2312076   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2312077   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2312078   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2312079   +end;
MPRINT(EM_DIAGRAM):   end;
2312080   +else do;
MPRINT(EM_DIAGRAM):   else do;
2312081   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2312082   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2312083   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2312084   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2312085   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2312086   +   end;
MPRINT(EM_DIAGRAM):   end;
2312087   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2312088   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2312089   +   end;
MPRINT(EM_DIAGRAM):   end;
2312090   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2312091   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2312092   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2312093   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2312094   +   end;
MPRINT(EM_DIAGRAM):   end;
2312095   +end;
MPRINT(EM_DIAGRAM):   end;
2312096   +
2312097   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2312098   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2312099   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2312100   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2312101   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2312102   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2312103   +end;
MPRINT(EM_DIAGRAM):   end;
2312104   +else do;
MPRINT(EM_DIAGRAM):   else do;
2312105   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2312106   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2312107   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2312108   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2312109   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2312110   +   end;
MPRINT(EM_DIAGRAM):   end;
2312111   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2312112   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2312113   +   end;
MPRINT(EM_DIAGRAM):   end;
2312114   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2312115   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2312116   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2312117   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2312118   +   end;
MPRINT(EM_DIAGRAM):   end;
2312119   +end;
MPRINT(EM_DIAGRAM):   end;
2312120   +
2312121   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2312122   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2312123   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2312124   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2312125   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2312126   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2312127   +end;
MPRINT(EM_DIAGRAM):   end;
2312128   +else do;
MPRINT(EM_DIAGRAM):   else do;
2312129   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2312130   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2312131   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2312132   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2312133   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2312134   +   end;
MPRINT(EM_DIAGRAM):   end;
2312135   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2312136   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2312137   +   end;
MPRINT(EM_DIAGRAM):   end;
2312138   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2312139   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2312140   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2312141   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2312142   +   end;
MPRINT(EM_DIAGRAM):   end;
2312143   +end;
MPRINT(EM_DIAGRAM):   end;
2312144   +
2312145   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2312146   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2312147   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2312148   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2312149   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2312150   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2312151   +end;
MPRINT(EM_DIAGRAM):   end;
2312152   +else do;
MPRINT(EM_DIAGRAM):   else do;
2312153   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2312154   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2312155   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2312156   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2312157   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2312158   +   end;
MPRINT(EM_DIAGRAM):   end;
2312159   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2312160   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2312161   +   end;
MPRINT(EM_DIAGRAM):   end;
2312162   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2312163   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2312164   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2312165   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2312166   +   end;
MPRINT(EM_DIAGRAM):   end;
2312167   +end;
MPRINT(EM_DIAGRAM):   end;
2312168   +
2312169   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2312170   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2312171   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2312172   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2312173   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2312174   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2312175   +end;
MPRINT(EM_DIAGRAM):   end;
2312176   +else do;
MPRINT(EM_DIAGRAM):   else do;
2312177   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2312178   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2312179   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2312180   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2312181   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2312182   +   end;
MPRINT(EM_DIAGRAM):   end;
2312183   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2312184   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2312185   +   end;
MPRINT(EM_DIAGRAM):   end;
2312186   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2312187   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2312188   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2312189   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2312190   +   end;
MPRINT(EM_DIAGRAM):   end;
2312191   +end;
MPRINT(EM_DIAGRAM):   end;
2312192   +
2312193   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2312194   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2312195   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2312196   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2312197   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2312198   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2312199   +end;
MPRINT(EM_DIAGRAM):   end;
2312200   +else do;
MPRINT(EM_DIAGRAM):   else do;
2312201   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2312202   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2312203   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2312204   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2312205   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2312206   +   end;
MPRINT(EM_DIAGRAM):   end;
2312207   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2312208   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2312209   +   end;
MPRINT(EM_DIAGRAM):   end;
2312210   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2312211   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2312212   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2312213   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2312214   +   end;
MPRINT(EM_DIAGRAM):   end;
2312215   +end;
MPRINT(EM_DIAGRAM):   end;
2312216   +
2312217   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2312218   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2312219   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2312220   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2312221   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2312222   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2312223   +end;
MPRINT(EM_DIAGRAM):   end;
2312224   +else do;
MPRINT(EM_DIAGRAM):   else do;
2312225   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2312226   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2312227   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2312228   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2312229   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2312230   +   end;
MPRINT(EM_DIAGRAM):   end;
2312231   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2312232   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2312233   +   end;
MPRINT(EM_DIAGRAM):   end;
2312234   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2312235   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2312236   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2312237   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2312238   +   end;
MPRINT(EM_DIAGRAM):   end;
2312239   +end;
MPRINT(EM_DIAGRAM):   end;
2312240   +
2312241   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2312242   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2312243   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2312244   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2312245   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2312246   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2312247   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2312248   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2312249   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2312250   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2312251   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2312252   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2312253   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2312254   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2312255   +end;
MPRINT(EM_DIAGRAM):   end;
2312256   +else do;
MPRINT(EM_DIAGRAM):   else do;
2312257   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2312258   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2312259   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2312260   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2312261   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2312262   +   end;
MPRINT(EM_DIAGRAM):   end;
2312263   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2312264   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2312265   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2312266   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2312267   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2312268   +   end;
MPRINT(EM_DIAGRAM):   end;
2312269   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2312270   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2312271   +   end;
MPRINT(EM_DIAGRAM):   end;
2312272   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2312273   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2312274   +   end;
MPRINT(EM_DIAGRAM):   end;
2312275   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2312276   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2312277   +   end;
MPRINT(EM_DIAGRAM):   end;
2312278   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2312279   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2312280   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2312281   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2312282   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2312283   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2312284   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2312285   +   end;
MPRINT(EM_DIAGRAM):   end;
2312286   +end;
MPRINT(EM_DIAGRAM):   end;
2312287   +
2312288   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2312289   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2312290   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2312291   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2312292   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2312293   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2312294   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2312295   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2312296   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2312297   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2312298   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2312299   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2312300   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2312301   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2312302   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2312303   +end;
MPRINT(EM_DIAGRAM):   end;
2312304   +else do;
MPRINT(EM_DIAGRAM):   else do;
2312305   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2312306   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2312307   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2312308   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2312309   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2312310   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2312311   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2312312   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2312313   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2312314   +         end;
MPRINT(EM_DIAGRAM):   end;
2312315   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2312316   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2312317   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2312318   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2312319   +            end;
MPRINT(EM_DIAGRAM):   end;
2312320   +         end;
MPRINT(EM_DIAGRAM):   end;
2312321   +      end;
MPRINT(EM_DIAGRAM):   end;
2312322   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2312323   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2312324   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2312325   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2312326   +         end;
MPRINT(EM_DIAGRAM):   end;
2312327   +      end;
MPRINT(EM_DIAGRAM):   end;
2312328   +   end;
MPRINT(EM_DIAGRAM):   end;
2312329   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2312330   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2312331   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2312332   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2312333   +      end;
MPRINT(EM_DIAGRAM):   end;
2312334   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2312335   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2312336   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2312337   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2312338   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2312339   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2312340   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2312341   +         end;
MPRINT(EM_DIAGRAM):   end;
2312342   +      end;
MPRINT(EM_DIAGRAM):   end;
2312343   +   end;
MPRINT(EM_DIAGRAM):   end;
2312344   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2312345   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2312346   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2312347   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2312348   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2312349   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2312350   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2312351   +   end;
MPRINT(EM_DIAGRAM):   end;
2312352   +end;
MPRINT(EM_DIAGRAM):   end;
2312353   +
2312354   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2312355   +*** Checking missing input Interval
2312356   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2312357   +
2312358   +IF NMISS(
2312359   +   AcceptedCmpTotal ,
2312360   +   Age ,
2312361   +   Frq ,
2312362   +   Income ,
2312363   +   Kidhome ,
2312364   +   Mnt ,
2312365   +   MntFishProducts ,
2312366   +   MntFruits ,
2312367   +   MntGoldProds ,
2312368   +   MntMeatProducts ,
2312369   +   MntSweetProducts ,
2312370   +   MntWines ,
2312371   +   MonthsAsCustomer ,
2312372   +   NumCatalogPurchases ,
2312373   +   NumDealsPurchases ,
2312374   +   NumDistPurchases ,
2312375   +   NumStorePurchases ,
2312376   +   NumWebPurchases ,
2312377   +   NumWebVisitsMonth ,
2312378   +   RFMstat ,
2312379   +   RMntFrq ,
2312380   +   Recency ,
2312381   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2312382   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2312383   +
2312384   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2312385   +END;
MPRINT(EM_DIAGRAM):   END;
2312386   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2312387   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2312388   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2312389   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2312390   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2312391   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2312392   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2312393   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2312394   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2312395   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2312396   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2312397   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2312398   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2312399   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2312400   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2312401   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2312402   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2312403   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2312404   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2312405   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2312406   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2312407   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2312408   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2312409   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2312410   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2312411   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2312412   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2312413   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2312414   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2312415   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2312416   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2312417   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2312418   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2312419   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2312420   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2312421   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2312422   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2312423   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2312424   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2312425   +END;
MPRINT(EM_DIAGRAM):   END;
2312426   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2312427   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2312428   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2312429   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2312430   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2312431   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2312432   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2312433   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2312434   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2312435   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2312436   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2312437   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2312438   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2312439   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2312440   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2312441   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2312442   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2312443   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2312444   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2312445   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2312446   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2312447   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2312448   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2312449   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2312450   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2312451   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2312452   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2312453   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2312454   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2312455   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2312456   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2312457   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2312458   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2312459   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2312460   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2312461   +   ELSE S_NumCatalogPurchases
2312462   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2312463   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2312464   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2312465   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2312466   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2312467   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2312468   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2312469   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2312470   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2312471   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2312472   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2312473   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2312474   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2312475   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2312476   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2312477   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2312478   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2312479   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2312480   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2312481   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2312482   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2312483   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2312484   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2312485   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2312486   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2312487   +END;
MPRINT(EM_DIAGRAM):   END;
2312488   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2312489   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2312490   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2312491   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2312492   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2312493   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2312494   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2312495   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2312496   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2312497   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2312498   +   H1x1_1  =    -1.22979702388871 * S_AcceptedCmpTotal
2312499   +          +    -0.43104795266139 * S_Age  +     0.86889278443529 * S_Frq
2312500   +          +    -1.60769879195759 * S_Income  +     0.50863205564081 *
2312501   +        S_Kidhome  +     0.63485396330815 * S_Mnt  +     1.54715964931126 *
2312502   +        S_MntFishProducts  +     0.75185279130369 * S_MntFruits
2312503   +          +    -0.00997586610757 * S_MntGoldProds  +    -2.37203493907401 *
2312504   +        S_MntMeatProducts  +     0.38638626403468 * S_MntSweetProducts
2312505   +          +     2.26121903773395 * S_MntWines  +    -0.59651789183067 *
2312506   +        S_MonthsAsCustomer  +    -1.52699943820196 * S_NumCatalogPurchases
2312507   +          +    -1.18466001117424 * S_NumDealsPurchases
2312508   +          +     -0.1371252133567 * S_NumDistPurchases
2312509   +          +     1.92719775731123 * S_NumStorePurchases
2312510   +          +     1.23184249192116 * S_NumWebPurchases
2312511   +          +    -1.55583843197424 * S_NumWebVisitsMonth
2312512   +          +    -0.47773207532121 * S_RFMstat  +    -0.35513231558649 *
2312513   +        S_RMntFrq  +     1.63863392145333 * S_Recency
2312514   +          +     0.67173275608308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.22979702388871 * S_AcceptedCmpTotal + -0.43104795266139 * 
S_Age + 0.86889278443529 * S_Frq + -1.60769879195759 * S_Income + 0.50863205564081 * S_Kidhome 
+ 0.63485396330815 * S_Mnt + 1.54715964931126 * S_MntFishProducts + 0.75185279130369 * 
S_MntFruits + -0.00997586610757 * S_MntGoldProds + -2.37203493907401 * S_MntMeatProducts + 
0.38638626403468 * S_MntSweetProducts + 2.26121903773395 * S_MntWines + -0.59651789183067 * 
S_MonthsAsCustomer + -1.52699943820196 * S_NumCatalogPurchases + -1.18466001117424 * 
S_NumDealsPurchases + -0.1371252133567 * S_NumDistPurchases + 1.92719775731123 * 
S_NumStorePurchases + 1.23184249192116 * S_NumWebPurchases + -1.55583843197424 * 
S_NumWebVisitsMonth + -0.47773207532121 * S_RFMstat + -0.35513231558649 * S_RMntFrq + 
1.63863392145333 * S_Recency + 0.67173275608308 * S_Teenhome ;
2312515   +   H1x1_2  =    -0.02716121128584 * S_AcceptedCmpTotal
2312516   +          +     0.11518566588792 * S_Age  +    -0.03446898150571 * S_Frq
2312517   +          +    -0.19022324523346 * S_Income  +     1.06549395713708 *
2312518   +        S_Kidhome  +    -0.75490876357951 * S_Mnt  +    -0.25515163712879 *
2312519   +        S_MntFishProducts  +    -0.33372388118122 * S_MntFruits
2312520   +          +    -1.35673933518218 * S_MntGoldProds  +    -2.95766948640442 *
2312521   +        S_MntMeatProducts  +      0.2681792093191 * S_MntSweetProducts
2312522   +          +     0.68376629766032 * S_MntWines  +     1.19853579057819 *
2312523   +        S_MonthsAsCustomer  +    -1.27282116370987 * S_NumCatalogPurchases
2312524   +          +     0.63616523425865 * S_NumDealsPurchases
2312525   +          +     0.45460056261546 * S_NumDistPurchases
2312526   +          +    -0.61009999017225 * S_NumStorePurchases
2312527   +          +     1.85193755731081 * S_NumWebPurchases
2312528   +          +    -2.47698404964319 * S_NumWebVisitsMonth
2312529   +          +     -0.6995834208607 * S_RFMstat  +    -0.25646177956568 *
2312530   +        S_RMntFrq  +     1.07962222419254 * S_Recency
2312531   +          +     0.63257022999179 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.02716121128584 * S_AcceptedCmpTotal + 0.11518566588792 * 
S_Age + -0.03446898150571 * S_Frq + -0.19022324523346 * S_Income + 1.06549395713708 * 
S_Kidhome + -0.75490876357951 * S_Mnt + -0.25515163712879 * S_MntFishProducts + 
-0.33372388118122 * S_MntFruits + -1.35673933518218 * S_MntGoldProds + -2.95766948640442 * 
S_MntMeatProducts + 0.2681792093191 * S_MntSweetProducts + 0.68376629766032 * S_MntWines + 
1.19853579057819 * S_MonthsAsCustomer + -1.27282116370987 * S_NumCatalogPurchases + 
0.63616523425865 * S_NumDealsPurchases + 0.45460056261546 * S_NumDistPurchases + 
-0.61009999017225 * S_NumStorePurchases + 1.85193755731081 * S_NumWebPurchases + 
-2.47698404964319 * S_NumWebVisitsMonth + -0.6995834208607 * S_RFMstat + -0.25646177956568 * 
S_RMntFrq + 1.07962222419254 * S_Recency + 0.63257022999179 * S_Teenhome ;
2312532   +   H1x1_3  =     2.21390028099752 * S_AcceptedCmpTotal
2312533   +          +     0.05331556426178 * S_Age  +    -0.65514579137956 * S_Frq
2312534   +          +     0.64307304324121 * S_Income  +    -0.74572098598993 *
2312535   +        S_Kidhome  +     0.72146088814601 * S_Mnt  +    -0.35292583888573 *
2312536   +        S_MntFishProducts  +    -0.60011862194755 * S_MntFruits
2312537   +          +     0.41187011131735 * S_MntGoldProds  +     6.59297713742725 *
2312538   +        S_MntMeatProducts  +    -0.24427365286575 * S_MntSweetProducts
2312539   +          +    -2.72258930476853 * S_MntWines  +     0.14880721485001 *
2312540   +        S_MonthsAsCustomer  +     1.43710120897606 * S_NumCatalogPurchases
2312541   +          +      1.8907968580473 * S_NumDealsPurchases
2312542   +          +     0.01244124801764 * S_NumDistPurchases
2312543   +          +    -2.34409118104622 * S_NumStorePurchases
2312544   +          +    -1.80820043087435 * S_NumWebPurchases
2312545   +          +     2.40219682136039 * S_NumWebVisitsMonth
2312546   +          +     0.64272295101175 * S_RFMstat  +    -2.37583346151401 *
2312547   +        S_RMntFrq  +    -2.05893311376628 * S_Recency
2312548   +          +    -0.09539892763273 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.21390028099752 * S_AcceptedCmpTotal + 0.05331556426178 * 
S_Age + -0.65514579137956 * S_Frq + 0.64307304324121 * S_Income + -0.74572098598993 * 
S_Kidhome + 0.72146088814601 * S_Mnt + -0.35292583888573 * S_MntFishProducts + 
-0.60011862194755 * S_MntFruits + 0.41187011131735 * S_MntGoldProds + 6.59297713742725 * 
S_MntMeatProducts + -0.24427365286575 * S_MntSweetProducts + -2.72258930476853 * S_MntWines + 
0.14880721485001 * S_MonthsAsCustomer + 1.43710120897606 * S_NumCatalogPurchases + 
1.8907968580473 * S_NumDealsPurchases + 0.01244124801764 * S_NumDistPurchases + 
-2.34409118104622 * S_NumStorePurchases + -1.80820043087435 * S_NumWebPurchases + 
2.40219682136039 * S_NumWebVisitsMonth + 0.64272295101175 * S_RFMstat + -2.37583346151401 * 
S_RMntFrq + -2.05893311376628 * S_Recency + -0.09539892763273 * S_Teenhome ;
2312549   +   H1x1_4  =     0.39967052173479 * S_AcceptedCmpTotal
2312550   +          +    -0.07923444459672 * S_Age  +     0.62339138041893 * S_Frq
2312551   +          +     1.61789948058771 * S_Income  +     -1.4543646851274 *
2312552   +        S_Kidhome  +      0.0674362517919 * S_Mnt  +    -0.01747401903722 *
2312553   +        S_MntFishProducts  +     0.35122931976599 * S_MntFruits
2312554   +          +     0.49479569666837 * S_MntGoldProds  +     0.96598079382568 *
2312555   +        S_MntMeatProducts  +     0.00966238843619 * S_MntSweetProducts
2312556   +          +    -1.04781861730336 * S_MntWines  +    -0.60232527705864 *
2312557   +        S_MonthsAsCustomer  +     1.64183850526139 * S_NumCatalogPurchases
2312558   +          +     0.28209537604198 * S_NumDealsPurchases
2312559   +          +      0.6450277971767 * S_NumDistPurchases
2312560   +          +     0.85050092520609 * S_NumStorePurchases
2312561   +          +    -0.53920307215941 * S_NumWebPurchases
2312562   +          +     3.01106015100147 * S_NumWebVisitsMonth
2312563   +          +     0.35454480730832 * S_RFMstat  +     2.44126135489059 *
2312564   +        S_RMntFrq  +    -3.15497765450512 * S_Recency
2312565   +          +    -1.52912100940198 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.39967052173479 * S_AcceptedCmpTotal + -0.07923444459672 * 
S_Age + 0.62339138041893 * S_Frq + 1.61789948058771 * S_Income + -1.4543646851274 * S_Kidhome 
+ 0.0674362517919 * S_Mnt + -0.01747401903722 * S_MntFishProducts + 0.35122931976599 * 
S_MntFruits + 0.49479569666837 * S_MntGoldProds + 0.96598079382568 * S_MntMeatProducts + 
0.00966238843619 * S_MntSweetProducts + -1.04781861730336 * S_MntWines + -0.60232527705864 * 
S_MonthsAsCustomer + 1.64183850526139 * S_NumCatalogPurchases + 0.28209537604198 * 
S_NumDealsPurchases + 0.6450277971767 * S_NumDistPurchases + 0.85050092520609 * 
S_NumStorePurchases + -0.53920307215941 * S_NumWebPurchases + 3.01106015100147 * 
S_NumWebVisitsMonth + 0.35454480730832 * S_RFMstat + 2.44126135489059 * S_RMntFrq + 
-3.15497765450512 * S_Recency + -1.52912100940198 * S_Teenhome ;
2312566   +   H1x1_5  =    -1.36246601888598 * S_AcceptedCmpTotal
2312567   +          +     0.18494970680372 * S_Age  +    -0.48239316237012 * S_Frq
2312568   +          +    -0.07754710635082 * S_Income  +    -1.12988783865284 *
2312569   +        S_Kidhome  +    -0.99389820487435 * S_Mnt  +     0.97730928948588 *
2312570   +        S_MntFishProducts  +     0.22400827772102 * S_MntFruits
2312571   +          +     0.74486626223136 * S_MntGoldProds  +    -5.09299340099429 *
2312572   +        S_MntMeatProducts  +     -0.9293665551505 * S_MntSweetProducts
2312573   +          +     2.05621056740754 * S_MntWines  +     0.13751326047818 *
2312574   +        S_MonthsAsCustomer  +    -0.78748700520409 * S_NumCatalogPurchases
2312575   +          +    -0.36642526324451 * S_NumDealsPurchases
2312576   +          +     -0.6091014843932 * S_NumDistPurchases
2312577   +          +    -0.21154626182088 * S_NumStorePurchases
2312578   +          +    -0.10361347071364 * S_NumWebPurchases
2312579   +          +     1.36358817627784 * S_NumWebVisitsMonth
2312580   +          +    -1.12999319551924 * S_RFMstat  +    -0.19491430019245 *
2312581   +        S_RMntFrq  +    -1.04649498091784 * S_Recency
2312582   +          +     0.17452738843544 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.36246601888598 * S_AcceptedCmpTotal + 0.18494970680372 * 
S_Age + -0.48239316237012 * S_Frq + -0.07754710635082 * S_Income + -1.12988783865284 * 
S_Kidhome + -0.99389820487435 * S_Mnt + 0.97730928948588 * S_MntFishProducts + 
0.22400827772102 * S_MntFruits + 0.74486626223136 * S_MntGoldProds + -5.09299340099429 * 
S_MntMeatProducts + -0.9293665551505 * S_MntSweetProducts + 2.05621056740754 * S_MntWines + 
0.13751326047818 * S_MonthsAsCustomer + -0.78748700520409 * S_NumCatalogPurchases + 
-0.36642526324451 * S_NumDealsPurchases + -0.6091014843932 * S_NumDistPurchases + 
-0.21154626182088 * S_NumStorePurchases + -0.10361347071364 * S_NumWebPurchases + 
1.36358817627784 * S_NumWebVisitsMonth + -1.12999319551924 * S_RFMstat + -0.19491430019245 * 
S_RMntFrq + -1.04649498091784 * S_Recency + 0.17452738843544 * S_Teenhome ;
2312583   +   H1x1_6  =    -0.61844696407508 * S_AcceptedCmpTotal
2312584   +          +    -0.13181297602063 * S_Age  +        0.68456903056 * S_Frq
2312585   +          +    -0.34991774042788 * S_Income  +     1.46159955002315 *
2312586   +        S_Kidhome  +     0.21200077233877 * S_Mnt  +    -1.25754094670769 *
2312587   +        S_MntFishProducts  +    -0.09204195787339 * S_MntFruits
2312588   +          +     0.30860507694466 * S_MntGoldProds  +     2.47956356836605 *
2312589   +        S_MntMeatProducts  +     0.40882561010395 * S_MntSweetProducts
2312590   +          +    -0.31319819026957 * S_MntWines  +    -0.35678594664106 *
2312591   +        S_MonthsAsCustomer  +     0.01690494248971 * S_NumCatalogPurchases
2312592   +          +    -0.14868505161718 * S_NumDealsPurchases
2312593   +          +    -0.08395384711805 * S_NumDistPurchases
2312594   +          +     0.60525238179245 * S_NumStorePurchases
2312595   +          +     0.04555100214276 * S_NumWebPurchases
2312596   +          +    -2.31888436784305 * S_NumWebVisitsMonth
2312597   +          +     0.04533094777373 * S_RFMstat  +     1.45047684433196 *
2312598   +        S_RMntFrq  +     3.02439474266744 * S_Recency
2312599   +          +     1.00458920115313 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.61844696407508 * S_AcceptedCmpTotal + -0.13181297602063 * 
S_Age + 0.68456903056 * S_Frq + -0.34991774042788 * S_Income + 1.46159955002315 * S_Kidhome + 
0.21200077233877 * S_Mnt + -1.25754094670769 * S_MntFishProducts + -0.09204195787339 * 
S_MntFruits + 0.30860507694466 * S_MntGoldProds + 2.47956356836605 * S_MntMeatProducts + 
0.40882561010395 * S_MntSweetProducts + -0.31319819026957 * S_MntWines + -0.35678594664106 * 
S_MonthsAsCustomer + 0.01690494248971 * S_NumCatalogPurchases + -0.14868505161718 * 
S_NumDealsPurchases + -0.08395384711805 * S_NumDistPurchases + 0.60525238179245 * 
S_NumStorePurchases + 0.04555100214276 * S_NumWebPurchases + -2.31888436784305 * 
S_NumWebVisitsMonth + 0.04533094777373 * S_RFMstat + 1.45047684433196 * S_RMntFrq + 
3.02439474266744 * S_Recency + 1.00458920115313 * S_Teenhome ;
2312600   +   H1x1_1  = H1x1_1  +     1.44647846478949 * AcceptedCmp10
2312601   +          +     0.96385529143297 * AcceptedCmp20  +     0.80013060089317 *
2312602   +        AcceptedCmp30  +     1.84770198014032 * AcceptedCmp40
2312603   +          +     0.80401446607714 * AcceptedCmp50  +     0.54049538978821 *
2312604   +        Complain0  +     0.10087163212641 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.44647846478949 * AcceptedCmp10 + 0.96385529143297 * 
AcceptedCmp20 + 0.80013060089317 * AcceptedCmp30 + 1.84770198014032 * AcceptedCmp40 + 
0.80401446607714 * AcceptedCmp50 + 0.54049538978821 * Complain0 + 0.10087163212641 * 
HigherEducationBinary0 ;
2312605   +   H1x1_2  = H1x1_2  +    -1.68777270512099 * AcceptedCmp10
2312606   +          +     0.54885195015877 * AcceptedCmp20  +    -0.90402264974928 *
2312607   +        AcceptedCmp30  +    -0.42358682267334 * AcceptedCmp40
2312608   +          +     0.87016183962004 * AcceptedCmp50  +     0.42082407002478 *
2312609   +        Complain0  +    -0.37999025234308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.68777270512099 * AcceptedCmp10 + 0.54885195015877 * 
AcceptedCmp20 + -0.90402264974928 * AcceptedCmp30 + -0.42358682267334 * AcceptedCmp40 + 
0.87016183962004 * AcceptedCmp50 + 0.42082407002478 * Complain0 + -0.37999025234308 * 
HigherEducationBinary0 ;
2312610   +   H1x1_3  = H1x1_3  +    -0.40437631159129 * AcceptedCmp10
2312611   +          +      0.0972205308159 * AcceptedCmp20  +     0.81983130325412 *
2312612   +        AcceptedCmp30  +     0.11521626741585 * AcceptedCmp40
2312613   +          +    -0.67384158900854 * AcceptedCmp50  +    -0.08888648111628 *
2312614   +        Complain0  +    -0.12489144574555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.40437631159129 * AcceptedCmp10 + 0.0972205308159 * 
AcceptedCmp20 + 0.81983130325412 * AcceptedCmp30 + 0.11521626741585 * AcceptedCmp40 + 
-0.67384158900854 * AcceptedCmp50 + -0.08888648111628 * Complain0 + -0.12489144574555 * 
HigherEducationBinary0 ;
2312615   +   H1x1_4  = H1x1_4  +    -0.11861456940351 * AcceptedCmp10
2312616   +          +    -0.84401831403342 * AcceptedCmp20  +    -0.99900514370547 *
2312617   +        AcceptedCmp30  +     0.03311277744337 * AcceptedCmp40
2312618   +          +    -0.89369182681709 * AcceptedCmp50  +    -0.46321923883787 *
2312619   +        Complain0  +     0.73698890563732 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.11861456940351 * AcceptedCmp10 + -0.84401831403342 
* AcceptedCmp20 + -0.99900514370547 * AcceptedCmp30 + 0.03311277744337 * AcceptedCmp40 + 
-0.89369182681709 * AcceptedCmp50 + -0.46321923883787 * Complain0 + 0.73698890563732 * 
HigherEducationBinary0 ;
2312620   +   H1x1_5  = H1x1_5  +     1.36740346673871 * AcceptedCmp10
2312621   +          +    -0.09307995102939 * AcceptedCmp20  +    -0.99727975675265 *
2312622   +        AcceptedCmp30  +    -1.64006559974507 * AcceptedCmp40
2312623   +          +    -0.12164496778613 * AcceptedCmp50  +    -0.20852398947217 *
2312624   +        Complain0  +    -0.12903157145588 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.36740346673871 * AcceptedCmp10 + -0.09307995102939 * 
AcceptedCmp20 + -0.99727975675265 * AcceptedCmp30 + -1.64006559974507 * AcceptedCmp40 + 
-0.12164496778613 * AcceptedCmp50 + -0.20852398947217 * Complain0 + -0.12903157145588 * 
HigherEducationBinary0 ;
2312625   +   H1x1_6  = H1x1_6  +    -0.18375336439178 * AcceptedCmp10
2312626   +          +    -0.61320886099742 * AcceptedCmp20  +     1.46384578641555 *
2312627   +        AcceptedCmp30  +     1.07211075480456 * AcceptedCmp40
2312628   +          +      0.1814894663676 * AcceptedCmp50  +     0.61050756961671 *
2312629   +        Complain0  +     0.18598381049052 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.18375336439178 * AcceptedCmp10 + -0.61320886099742 
* AcceptedCmp20 + 1.46384578641555 * AcceptedCmp30 + 1.07211075480456 * AcceptedCmp40 + 
0.1814894663676 * AcceptedCmp50 + 0.61050756961671 * Complain0 + 0.18598381049052 * 
HigherEducationBinary0 ;
2312630   +   H1x1_1  = H1x1_1  +    -0.85219855086228 * Education2n_Cycle
2312631   +          +     0.72409647993559 * EducationBasic  +    -1.69896726220399 *
2312632   +        EducationGraduation  +     0.96924197858068 * EducationMaster
2312633   +          +     -0.7180104021039 * Marital_StatusDivorced
2312634   +          +      0.5957373170744 * Marital_StatusMarried
2312635   +          +    -0.86183942803988 * Marital_StatusSingle
2312636   +          +     0.92994743994713 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.85219855086228 * Education2n_Cycle + 
0.72409647993559 * EducationBasic + -1.69896726220399 * EducationGraduation + 0.96924197858068 
* EducationMaster + -0.7180104021039 * Marital_StatusDivorced + 0.5957373170744 * 
Marital_StatusMarried + -0.86183942803988 * Marital_StatusSingle + 0.92994743994713 * 
Marital_StatusTogether ;
2312637   +   H1x1_2  = H1x1_2  +    -0.29863788783823 * Education2n_Cycle
2312638   +          +    -0.03492398661463 * EducationBasic  +     1.96491183828121 *
2312639   +        EducationGraduation  +    -1.23733321574678 * EducationMaster
2312640   +          +     0.84772700244021 * Marital_StatusDivorced
2312641   +          +    -0.37049970188511 * Marital_StatusMarried
2312642   +          +     1.54291641732063 * Marital_StatusSingle
2312643   +          +      0.2036514883055 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.29863788783823 * Education2n_Cycle + 
-0.03492398661463 * EducationBasic + 1.96491183828121 * EducationGraduation + 
-1.23733321574678 * EducationMaster + 0.84772700244021 * Marital_StatusDivorced + 
-0.37049970188511 * Marital_StatusMarried + 1.54291641732063 * Marital_StatusSingle + 
0.2036514883055 * Marital_StatusTogether ;
2312644   +   H1x1_3  = H1x1_3  +     0.21600870420184 * Education2n_Cycle
2312645   +          +    -0.41247138958506 * EducationBasic  +    -0.04710356650237 *
2312646   +        EducationGraduation  +     0.02093123351397 * EducationMaster
2312647   +          +     0.73222548496385 * Marital_StatusDivorced
2312648   +          +    -0.50102202656102 * Marital_StatusMarried
2312649   +          +    -0.07207130428422 * Marital_StatusSingle
2312650   +          +     0.17349558515949 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.21600870420184 * Education2n_Cycle + 
-0.41247138958506 * EducationBasic + -0.04710356650237 * EducationGraduation + 
0.02093123351397 * EducationMaster + 0.73222548496385 * Marital_StatusDivorced + 
-0.50102202656102 * Marital_StatusMarried + -0.07207130428422 * Marital_StatusSingle + 
0.17349558515949 * Marital_StatusTogether ;
2312651   +   H1x1_4  = H1x1_4  +    -0.26695942691152 * Education2n_Cycle
2312652   +          +     0.08346486410021 * EducationBasic  +    -1.19880044804188 *
2312653   +        EducationGraduation  +     0.65366032471107 * EducationMaster
2312654   +          +     0.25894719464799 * Marital_StatusDivorced
2312655   +          +    -1.95576501275834 * Marital_StatusMarried
2312656   +          +     2.65422185276746 * Marital_StatusSingle
2312657   +          +    -3.75373924980398 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26695942691152 * Education2n_Cycle + 
0.08346486410021 * EducationBasic + -1.19880044804188 * EducationGraduation + 0.65366032471107 
* EducationMaster + 0.25894719464799 * Marital_StatusDivorced + -1.95576501275834 * 
Marital_StatusMarried + 2.65422185276746 * Marital_StatusSingle + -3.75373924980398 * 
Marital_StatusTogether ;
2312658   +   H1x1_5  = H1x1_5  +     0.17586479935526 * Education2n_Cycle
2312659   +          +    -0.60926722758624 * EducationBasic  +    -0.09613529218096 *
2312660   +        EducationGraduation  +    -0.28683119112285 * EducationMaster
2312661   +          +     0.60936191204707 * Marital_StatusDivorced
2312662   +          +    -0.52190111190458 * Marital_StatusMarried
2312663   +          +    -0.60982305233136 * Marital_StatusSingle
2312664   +          +     0.44659686388318 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.17586479935526 * Education2n_Cycle + 
-0.60926722758624 * EducationBasic + -0.09613529218096 * EducationGraduation + 
-0.28683119112285 * EducationMaster + 0.60936191204707 * Marital_StatusDivorced + 
-0.52190111190458 * Marital_StatusMarried + -0.60982305233136 * Marital_StatusSingle + 
0.44659686388318 * Marital_StatusTogether ;
2312665   +   H1x1_6  = H1x1_6  +     0.16067502362228 * Education2n_Cycle
2312666   +          +     0.18937855703296 * EducationBasic  +     0.06386817095607 *
2312667   +        EducationGraduation  +     0.51538853297606 * EducationMaster
2312668   +          +    -1.44614502228294 * Marital_StatusDivorced
2312669   +          +      2.9001493892928 * Marital_StatusMarried
2312670   +          +    -2.60467399972513 * Marital_StatusSingle
2312671   +          +     2.31815156650258 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16067502362228 * Education2n_Cycle + 
0.18937855703296 * EducationBasic + 0.06386817095607 * EducationGraduation + 0.51538853297606 
* EducationMaster + -1.44614502228294 * Marital_StatusDivorced + 2.9001493892928 * 
Marital_StatusMarried + -2.60467399972513 * Marital_StatusSingle + 2.31815156650258 * 
Marital_StatusTogether ;
2312672   +   H1x1_1  =     2.01245018737649 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.01245018737649 + H1x1_1 ;
2312673   +   H1x1_2  =    -0.13724223857423 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.13724223857423 + H1x1_2 ;
2312674   +   H1x1_3  =     0.82934879006547 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.82934879006547 + H1x1_3 ;
2312675   +   H1x1_4  =    -0.21545557935699 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.21545557935699 + H1x1_4 ;
2312676   +   H1x1_5  =     0.44835497486542 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.44835497486542 + H1x1_5 ;
2312677   +   H1x1_6  =     0.11792774897936 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.11792774897936 + H1x1_6 ;
2312678   +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
2312679   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
2312680   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , 
H1x1_7 );
2312681   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2312682   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2312683   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2312684   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2312685   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2312686   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2312687   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2312688   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2312689   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2312690   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
2312691   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
2312692   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
2312693   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
2312694   +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
2312695   +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
2312696   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2312697   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2312698   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2312699   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2312700   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
2312701   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
2312702   +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
2312703   +END;
MPRINT(EM_DIAGRAM):   END;
2312704   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2312705   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2312706   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2312707   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2312708   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2312709   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2312710   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2312711   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
2312712   +END;
MPRINT(EM_DIAGRAM):   END;
2312713   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2312714   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2312715   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2312716   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2312717   +   H1x2_1  =    -0.51245281628488 * S_AcceptedCmpTotal
2312718   +          +     0.29586551487242 * S_Age  +     1.34531593814589 * S_Frq
2312719   +          +     1.40753230099536 * S_Income  +    -1.01979935776675 *
2312720   +        S_Kidhome  +      1.0655533203194 * S_Mnt  +     0.74171867275429 *
2312721   +        S_MntFishProducts  +    -0.77881282886264 * S_MntFruits
2312722   +          +    -0.58546798489474 * S_MntGoldProds  +     0.93410444049208 *
2312723   +        S_MntMeatProducts  +     1.10536507959221 * S_MntSweetProducts
2312724   +          +     2.08723894920384 * S_MntWines  +    -0.64437193401661 *
2312725   +        S_MonthsAsCustomer  +     1.49880648713252 * S_NumCatalogPurchases
2312726   +          +    -0.46483717253931 * S_NumDealsPurchases
2312727   +          +    -0.53329008421157 * S_NumDistPurchases
2312728   +          +      0.2490774300193 * S_NumStorePurchases
2312729   +          +    -0.82755150673885 * S_NumWebPurchases
2312730   +          +     0.04007223822389 * S_NumWebVisitsMonth
2312731   +          +    -0.21044923749124 * S_RFMstat  +     0.27791352512351 *
2312732   +        S_RMntFrq  +     0.43434806411249 * S_Recency
2312733   +          +    -1.25974784572932 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.51245281628488 * S_AcceptedCmpTotal + 0.29586551487242 * 
S_Age + 1.34531593814589 * S_Frq + 1.40753230099536 * S_Income + -1.01979935776675 * S_Kidhome 
+ 1.0655533203194 * S_Mnt + 0.74171867275429 * S_MntFishProducts + -0.77881282886264 * 
S_MntFruits + -0.58546798489474 * S_MntGoldProds + 0.93410444049208 * S_MntMeatProducts + 
1.10536507959221 * S_MntSweetProducts + 2.08723894920384 * S_MntWines + -0.64437193401661 * 
S_MonthsAsCustomer + 1.49880648713252 * S_NumCatalogPurchases + -0.46483717253931 * 
S_NumDealsPurchases + -0.53329008421157 * S_NumDistPurchases + 0.2490774300193 * 
S_NumStorePurchases + -0.82755150673885 * S_NumWebPurchases + 0.04007223822389 * 
S_NumWebVisitsMonth + -0.21044923749124 * S_RFMstat + 0.27791352512351 * S_RMntFrq + 
0.43434806411249 * S_Recency + -1.25974784572932 * S_Teenhome ;
2312734   +   H1x2_2  =     0.30117516029562 * S_AcceptedCmpTotal
2312735   +          +     0.16042149118905 * S_Age  +    -2.59350323749407 * S_Frq
2312736   +          +    -0.29940842910223 * S_Income  +    -0.09168883019219 *
2312737   +        S_Kidhome  +    -0.39758312303322 * S_Mnt  +     -0.4138816285287 *
2312738   +        S_MntFishProducts  +        0.18555623351 * S_MntFruits
2312739   +          +    -0.28024159914959 * S_MntGoldProds  +     1.08084875123781 *
2312740   +        S_MntMeatProducts  +     0.29032828446632 * S_MntSweetProducts
2312741   +          +     0.47556687393839 * S_MntWines  +    -0.89795441591329 *
2312742   +        S_MonthsAsCustomer  +    -0.47081176716106 * S_NumCatalogPurchases
2312743   +          +     0.75855101382458 * S_NumDealsPurchases
2312744   +          +     1.61754951768262 * S_NumDistPurchases
2312745   +          +    -0.48146714929729 * S_NumStorePurchases
2312746   +          +    -0.76460728035552 * S_NumWebPurchases
2312747   +          +    -0.71146787112442 * S_NumWebVisitsMonth
2312748   +          +     0.42381866124588 * S_RFMstat  +     -0.3894818400451 *
2312749   +        S_RMntFrq  +    -0.01528916550509 * S_Recency
2312750   +          +     0.38823136254948 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.30117516029562 * S_AcceptedCmpTotal + 0.16042149118905 * 
S_Age + -2.59350323749407 * S_Frq + -0.29940842910223 * S_Income + -0.09168883019219 * 
S_Kidhome + -0.39758312303322 * S_Mnt + -0.4138816285287 * S_MntFishProducts + 0.18555623351 * 
S_MntFruits + -0.28024159914959 * S_MntGoldProds + 1.08084875123781 * S_MntMeatProducts + 
0.29032828446632 * S_MntSweetProducts + 0.47556687393839 * S_MntWines + -0.89795441591329 * 
S_MonthsAsCustomer + -0.47081176716106 * S_NumCatalogPurchases + 0.75855101382458 * 
S_NumDealsPurchases + 1.61754951768262 * S_NumDistPurchases + -0.48146714929729 * 
S_NumStorePurchases + -0.76460728035552 * S_NumWebPurchases + -0.71146787112442 * 
S_NumWebVisitsMonth + 0.42381866124588 * S_RFMstat + -0.3894818400451 * S_RMntFrq + 
-0.01528916550509 * S_Recency + 0.38823136254948 * S_Teenhome ;
2312751   +   H1x2_3  =    -1.28283712556699 * S_AcceptedCmpTotal
2312752   +          +    -0.62214066983867 * S_Age  +      0.0675653313166 * S_Frq
2312753   +          +     0.77098495841918 * S_Income  +    -1.36225954388119 *
2312754   +        S_Kidhome  +      0.0552831076081 * S_Mnt  +    -0.21387512812296 *
2312755   +        S_MntFishProducts  +    -1.14715718471691 * S_MntFruits
2312756   +          +    -1.15507787000433 * S_MntGoldProds  +     0.87571107504211 *
2312757   +        S_MntMeatProducts  +     0.28274178198443 * S_MntSweetProducts
2312758   +          +     0.23070204507311 * S_MntWines  +    -1.88342889522874 *
2312759   +        S_MonthsAsCustomer  +    -0.19127945486903 * S_NumCatalogPurchases
2312760   +          +     0.75255317965748 * S_NumDealsPurchases
2312761   +          +     1.34900588315783 * S_NumDistPurchases
2312762   +          +    -0.17717469778048 * S_NumStorePurchases
2312763   +          +    -0.01560551546553 * S_NumWebPurchases
2312764   +          +     1.24315988674343 * S_NumWebVisitsMonth
2312765   +          +     2.23854910235018 * S_RFMstat  +     0.55516131558838 *
2312766   +        S_RMntFrq  +    -2.01558015490584 * S_Recency
2312767   +          +     1.34178435587014 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.28283712556699 * S_AcceptedCmpTotal + -0.62214066983867 * 
S_Age + 0.0675653313166 * S_Frq + 0.77098495841918 * S_Income + -1.36225954388119 * S_Kidhome 
+ 0.0552831076081 * S_Mnt + -0.21387512812296 * S_MntFishProducts + -1.14715718471691 * 
S_MntFruits + -1.15507787000433 * S_MntGoldProds + 0.87571107504211 * S_MntMeatProducts + 
0.28274178198443 * S_MntSweetProducts + 0.23070204507311 * S_MntWines + -1.88342889522874 * 
S_MonthsAsCustomer + -0.19127945486903 * S_NumCatalogPurchases + 0.75255317965748 * 
S_NumDealsPurchases + 1.34900588315783 * S_NumDistPurchases + -0.17717469778048 * 
S_NumStorePurchases + -0.01560551546553 * S_NumWebPurchases + 1.24315988674343 * 
S_NumWebVisitsMonth + 2.23854910235018 * S_RFMstat + 0.55516131558838 * S_RMntFrq + 
-2.01558015490584 * S_Recency + 1.34178435587014 * S_Teenhome ;
2312768   +   H1x2_4  =     1.35706411211536 * S_AcceptedCmpTotal
2312769   +          +    -0.73374940975123 * S_Age  +     2.10445428870671 * S_Frq
2312770   +          +    -1.60133766439775 * S_Income  +     0.02861907512789 *
2312771   +        S_Kidhome  +    -1.61837693250001 * S_Mnt  +       0.209751533263 *
2312772   +        S_MntFishProducts  +     1.82411973889656 * S_MntFruits
2312773   +          +     1.12172774431408 * S_MntGoldProds  +     1.09610288046573 *
2312774   +        S_MntMeatProducts  +    -0.86671874280949 * S_MntSweetProducts
2312775   +          +    -0.11602638812541 * S_MntWines  +    -0.30074020863435 *
2312776   +        S_MonthsAsCustomer  +     0.46044258716085 * S_NumCatalogPurchases
2312777   +          +    -1.71127148178768 * S_NumDealsPurchases
2312778   +          +    -1.77527355221308 * S_NumDistPurchases
2312779   +          +    -1.40009594349363 * S_NumStorePurchases
2312780   +          +    -0.46471012062697 * S_NumWebPurchases
2312781   +          +     0.04619891083228 * S_NumWebVisitsMonth
2312782   +          +     0.34715614649891 * S_RFMstat  +    -0.74983051176564 *
2312783   +        S_RMntFrq  +     0.84880186653433 * S_Recency
2312784   +          +     0.20218341857265 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.35706411211536 * S_AcceptedCmpTotal + -0.73374940975123 * 
S_Age + 2.10445428870671 * S_Frq + -1.60133766439775 * S_Income + 0.02861907512789 * S_Kidhome 
+ -1.61837693250001 * S_Mnt + 0.209751533263 * S_MntFishProducts + 1.82411973889656 * 
S_MntFruits + 1.12172774431408 * S_MntGoldProds + 1.09610288046573 * S_MntMeatProducts + 
-0.86671874280949 * S_MntSweetProducts + -0.11602638812541 * S_MntWines + -0.30074020863435 * 
S_MonthsAsCustomer + 0.46044258716085 * S_NumCatalogPurchases + -1.71127148178768 * 
S_NumDealsPurchases + -1.77527355221308 * S_NumDistPurchases + -1.40009594349363 * 
S_NumStorePurchases + -0.46471012062697 * S_NumWebPurchases + 0.04619891083228 * 
S_NumWebVisitsMonth + 0.34715614649891 * S_RFMstat + -0.74983051176564 * S_RMntFrq + 
0.84880186653433 * S_Recency + 0.20218341857265 * S_Teenhome ;
2312785   +   H1x2_5  =     1.79452363233333 * S_AcceptedCmpTotal
2312786   +          +     1.70826835028511 * S_Age  +     0.08241717907016 * S_Frq
2312787   +          +    -1.15275600314196 * S_Income  +     0.87736096074094 *
2312788   +        S_Kidhome  +     0.90821427722502 * S_Mnt  +    -0.84055732556964 *
2312789   +        S_MntFishProducts  +    -0.74245639083939 * S_MntFruits
2312790   +          +     0.00204325095854 * S_MntGoldProds  +     0.37597102500134 *
2312791   +        S_MntMeatProducts  +     0.28586076288454 * S_MntSweetProducts
2312792   +          +    -1.38194310174269 * S_MntWines  +     0.10286181254259 *
2312793   +        S_MonthsAsCustomer  +    -0.82469018226034 * S_NumCatalogPurchases
2312794   +          +    -0.22204470395056 * S_NumDealsPurchases
2312795   +          +    -1.74490476011984 * S_NumDistPurchases
2312796   +          +     1.93538420108324 * S_NumStorePurchases
2312797   +          +     1.04892631742152 * S_NumWebPurchases
2312798   +          +     1.50717841566047 * S_NumWebVisitsMonth
2312799   +          +     0.61249250909375 * S_RFMstat  +    -0.54764212165911 *
2312800   +        S_RMntFrq  +      1.9918829185386 * S_Recency
2312801   +          +     0.64908540313947 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.79452363233333 * S_AcceptedCmpTotal + 1.70826835028511 * 
S_Age + 0.08241717907016 * S_Frq + -1.15275600314196 * S_Income + 0.87736096074094 * S_Kidhome 
+ 0.90821427722502 * S_Mnt + -0.84055732556964 * S_MntFishProducts + -0.74245639083939 * 
S_MntFruits + 0.00204325095854 * S_MntGoldProds + 0.37597102500134 * S_MntMeatProducts + 
0.28586076288454 * S_MntSweetProducts + -1.38194310174269 * S_MntWines + 0.10286181254259 * 
S_MonthsAsCustomer + -0.82469018226034 * S_NumCatalogPurchases + -0.22204470395056 * 
S_NumDealsPurchases + -1.74490476011984 * S_NumDistPurchases + 1.93538420108324 * 
S_NumStorePurchases + 1.04892631742152 * S_NumWebPurchases + 1.50717841566047 * 
S_NumWebVisitsMonth + 0.61249250909375 * S_RFMstat + -0.54764212165911 * S_RMntFrq + 
1.9918829185386 * S_Recency + 0.64908540313947 * S_Teenhome ;
2312802   +   H1x2_6  =     1.38705263280369 * S_AcceptedCmpTotal
2312803   +          +    -0.70531523704191 * S_Age  +     0.59125500807205 * S_Frq
2312804   +          +     0.89549490842249 * S_Income  +     1.07240562425698 *
2312805   +        S_Kidhome  +    -0.25050185694258 * S_Mnt  +    -0.77552207934024 *
2312806   +        S_MntFishProducts  +     0.18087757744856 * S_MntFruits
2312807   +          +    -1.37618517481144 * S_MntGoldProds  +      0.6557488228355 *
2312808   +        S_MntMeatProducts  +    -1.40834207395949 * S_MntSweetProducts
2312809   +          +    -0.76196689750388 * S_MntWines  +     0.85144735274506 *
2312810   +        S_MonthsAsCustomer  +     0.66349954778428 * S_NumCatalogPurchases
2312811   +          +    -0.94690420785776 * S_NumDealsPurchases
2312812   +          +     1.87932706342204 * S_NumDistPurchases
2312813   +          +     0.31232717416487 * S_NumStorePurchases
2312814   +          +     1.51889492693355 * S_NumWebPurchases
2312815   +          +     0.04376853689795 * S_NumWebVisitsMonth
2312816   +          +    -2.53979043374029 * S_RFMstat  +     1.33915580029494 *
2312817   +        S_RMntFrq  +    -1.21983510008829 * S_Recency
2312818   +          +     0.36122230024433 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.38705263280369 * S_AcceptedCmpTotal + -0.70531523704191 * 
S_Age + 0.59125500807205 * S_Frq + 0.89549490842249 * S_Income + 1.07240562425698 * S_Kidhome 
+ -0.25050185694258 * S_Mnt + -0.77552207934024 * S_MntFishProducts + 0.18087757744856 * 
S_MntFruits + -1.37618517481144 * S_MntGoldProds + 0.6557488228355 * S_MntMeatProducts + 
-1.40834207395949 * S_MntSweetProducts + -0.76196689750388 * S_MntWines + 0.85144735274506 * 
S_MonthsAsCustomer + 0.66349954778428 * S_NumCatalogPurchases + -0.94690420785776 * 
S_NumDealsPurchases + 1.87932706342204 * S_NumDistPurchases + 0.31232717416487 * 
S_NumStorePurchases + 1.51889492693355 * S_NumWebPurchases + 0.04376853689795 * 
S_NumWebVisitsMonth + -2.53979043374029 * S_RFMstat + 1.33915580029494 * S_RMntFrq + 
-1.21983510008829 * S_Recency + 0.36122230024433 * S_Teenhome ;
2312819   +   H1x2_1  = H1x2_1  +     1.89852147155601 * AcceptedCmp10
2312820   +          +     0.03501265764204 * AcceptedCmp20  +    -0.45070218241239 *
2312821   +        AcceptedCmp30  +    -1.27257966336041 * AcceptedCmp40
2312822   +          +     0.86175125820023 * AcceptedCmp50  +     1.42864024461581 *
2312823   +        Complain0  +     0.34417315915901 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.89852147155601 * AcceptedCmp10 + 0.03501265764204 * 
AcceptedCmp20 + -0.45070218241239 * AcceptedCmp30 + -1.27257966336041 * AcceptedCmp40 + 
0.86175125820023 * AcceptedCmp50 + 1.42864024461581 * Complain0 + 0.34417315915901 * 
HigherEducationBinary0 ;
2312824   +   H1x2_2  = H1x2_2  +     0.41672679168374 * AcceptedCmp10
2312825   +          +     0.10769233314512 * AcceptedCmp20  +     0.42374549876289 *
2312826   +        AcceptedCmp30  +     0.65697535989046 * AcceptedCmp40
2312827   +          +     1.49817201460948 * AcceptedCmp50  +     0.46039378640249 *
2312828   +        Complain0  +     1.34709525059573 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.41672679168374 * AcceptedCmp10 + 0.10769233314512 * 
AcceptedCmp20 + 0.42374549876289 * AcceptedCmp30 + 0.65697535989046 * AcceptedCmp40 + 
1.49817201460948 * AcceptedCmp50 + 0.46039378640249 * Complain0 + 1.34709525059573 * 
HigherEducationBinary0 ;
2312829   +   H1x2_3  = H1x2_3  +     0.75388522027745 * AcceptedCmp10
2312830   +          +     2.63069611253058 * AcceptedCmp20  +     0.30907626174766 *
2312831   +        AcceptedCmp30  +     1.10100873408666 * AcceptedCmp40
2312832   +          +    -1.08824297693055 * AcceptedCmp50  +     1.05059014395924 *
2312833   +        Complain0  +     0.67869922391732 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.75388522027745 * AcceptedCmp10 + 2.63069611253058 * 
AcceptedCmp20 + 0.30907626174766 * AcceptedCmp30 + 1.10100873408666 * AcceptedCmp40 + 
-1.08824297693055 * AcceptedCmp50 + 1.05059014395924 * Complain0 + 0.67869922391732 * 
HigherEducationBinary0 ;
2312834   +   H1x2_4  = H1x2_4  +    -0.22033664091288 * AcceptedCmp10
2312835   +          +     1.34914301916376 * AcceptedCmp20  +    -0.91465085581504 *
2312836   +        AcceptedCmp30  +    -0.19686441685837 * AcceptedCmp40
2312837   +          +     0.10683331864009 * AcceptedCmp50  +    -0.00754824810979 *
2312838   +        Complain0  +     1.52033864172921 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.22033664091288 * AcceptedCmp10 + 1.34914301916376 * 
AcceptedCmp20 + -0.91465085581504 * AcceptedCmp30 + -0.19686441685837 * AcceptedCmp40 + 
0.10683331864009 * AcceptedCmp50 + -0.00754824810979 * Complain0 + 1.52033864172921 * 
HigherEducationBinary0 ;
2312839   +   H1x2_5  = H1x2_5  +     0.83049886541915 * AcceptedCmp10
2312840   +          +    -0.74079162208987 * AcceptedCmp20  +    -0.67792505698297 *
2312841   +        AcceptedCmp30  +     0.07081190269168 * AcceptedCmp40
2312842   +          +     0.18720033568684 * AcceptedCmp50  +      2.6531318197812 *
2312843   +        Complain0  +     0.89741230471087 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.83049886541915 * AcceptedCmp10 + -0.74079162208987 * 
AcceptedCmp20 + -0.67792505698297 * AcceptedCmp30 + 0.07081190269168 * AcceptedCmp40 + 
0.18720033568684 * AcceptedCmp50 + 2.6531318197812 * Complain0 + 0.89741230471087 * 
HigherEducationBinary0 ;
2312844   +   H1x2_6  = H1x2_6  +    -0.56781516290501 * AcceptedCmp10
2312845   +          +    -1.51874938874937 * AcceptedCmp20  +     1.28621778326033 *
2312846   +        AcceptedCmp30  +    -0.68769482686243 * AcceptedCmp40
2312847   +          +     0.35592893389946 * AcceptedCmp50  +    -1.30827608061077 *
2312848   +        Complain0  +     0.32980103195099 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.56781516290501 * AcceptedCmp10 + -1.51874938874937 
* AcceptedCmp20 + 1.28621778326033 * AcceptedCmp30 + -0.68769482686243 * AcceptedCmp40 + 
0.35592893389946 * AcceptedCmp50 + -1.30827608061077 * Complain0 + 0.32980103195099 * 
HigherEducationBinary0 ;
2312849   +   H1x2_1  = H1x2_1  +     -1.3799101073197 * Education2n_Cycle
2312850   +          +     0.02501135207931 * EducationBasic  +     1.13490660748682 *
2312851   +        EducationGraduation  +    -0.11344307008943 * EducationMaster
2312852   +          +     0.56030871857835 * Marital_StatusDivorced
2312853   +          +    -1.22448534379831 * Marital_StatusMarried
2312854   +          +     0.78141783495855 * Marital_StatusSingle
2312855   +          +    -1.35807438297575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.3799101073197 * Education2n_Cycle + 
0.02501135207931 * EducationBasic + 1.13490660748682 * EducationGraduation + -0.11344307008943 
* EducationMaster + 0.56030871857835 * Marital_StatusDivorced + -1.22448534379831 * 
Marital_StatusMarried + 0.78141783495855 * Marital_StatusSingle + -1.35807438297575 * 
Marital_StatusTogether ;
2312856   +   H1x2_2  = H1x2_2  +    -0.29912132201198 * Education2n_Cycle
2312857   +          +    -0.97227735746604 * EducationBasic  +     1.05541395347718 *
2312858   +        EducationGraduation  +     0.69607179798453 * EducationMaster
2312859   +          +    -2.63452071552997 * Marital_StatusDivorced
2312860   +          +     0.61829054779121 * Marital_StatusMarried
2312861   +          +    -2.20743370246315 * Marital_StatusSingle
2312862   +          +     0.56930072654252 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.29912132201198 * Education2n_Cycle + 
-0.97227735746604 * EducationBasic + 1.05541395347718 * EducationGraduation + 0.69607179798453 
* EducationMaster + -2.63452071552997 * Marital_StatusDivorced + 0.61829054779121 * 
Marital_StatusMarried + -2.20743370246315 * Marital_StatusSingle + 0.56930072654252 * 
Marital_StatusTogether ;
2312863   +   H1x2_3  = H1x2_3  +     0.65046688904352 * Education2n_Cycle
2312864   +          +     0.03854232912474 * EducationBasic  +     0.59545004622858 *
2312865   +        EducationGraduation  +    -1.68638824011899 * EducationMaster
2312866   +          +      -1.454102516731 * Marital_StatusDivorced
2312867   +          +     0.71488291465759 * Marital_StatusMarried
2312868   +          +     0.96038830049792 * Marital_StatusSingle
2312869   +          +    -0.85244216490853 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.65046688904352 * Education2n_Cycle + 
0.03854232912474 * EducationBasic + 0.59545004622858 * EducationGraduation + -1.68638824011899 
* EducationMaster + -1.454102516731 * Marital_StatusDivorced + 0.71488291465759 * 
Marital_StatusMarried + 0.96038830049792 * Marital_StatusSingle + -0.85244216490853 * 
Marital_StatusTogether ;
2312870   +   H1x2_4  = H1x2_4  +     0.37430673318658 * Education2n_Cycle
2312871   +          +    -0.25373979771478 * EducationBasic  +    -1.65617377693247 *
2312872   +        EducationGraduation  +    -1.12481097095571 * EducationMaster
2312873   +          +    -0.01160394891598 * Marital_StatusDivorced
2312874   +          +    -1.09054636482951 * Marital_StatusMarried
2312875   +          +      0.7793855479379 * Marital_StatusSingle
2312876   +          +    -0.40649435490654 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.37430673318658 * Education2n_Cycle + 
-0.25373979771478 * EducationBasic + -1.65617377693247 * EducationGraduation + 
-1.12481097095571 * EducationMaster + -0.01160394891598 * Marital_StatusDivorced + 
-1.09054636482951 * Marital_StatusMarried + 0.7793855479379 * Marital_StatusSingle + 
-0.40649435490654 * Marital_StatusTogether ;
2312877   +   H1x2_5  = H1x2_5  +     -0.1016827992735 * Education2n_Cycle
2312878   +          +     1.07194596228219 * EducationBasic  +    -1.05800808905557 *
2312879   +        EducationGraduation  +     0.09666597691691 * EducationMaster
2312880   +          +    -0.73414854875115 * Marital_StatusDivorced
2312881   +          +     0.46421425621114 * Marital_StatusMarried
2312882   +          +    -0.54512730625469 * Marital_StatusSingle
2312883   +          +     0.76568726267448 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.1016827992735 * Education2n_Cycle + 
1.07194596228219 * EducationBasic + -1.05800808905557 * EducationGraduation + 0.09666597691691 
* EducationMaster + -0.73414854875115 * Marital_StatusDivorced + 0.46421425621114 * 
Marital_StatusMarried + -0.54512730625469 * Marital_StatusSingle + 0.76568726267448 * 
Marital_StatusTogether ;
2312884   +   H1x2_6  = H1x2_6  +    -1.15957084181454 * Education2n_Cycle
2312885   +          +     0.00847667341235 * EducationBasic  +    -1.58463832529749 *
2312886   +        EducationGraduation  +     0.56518194582557 * EducationMaster
2312887   +          +     0.25131188683384 * Marital_StatusDivorced
2312888   +          +     2.38279806963807 * Marital_StatusMarried
2312889   +          +     0.28897706448348 * Marital_StatusSingle
2312890   +          +     0.89118497255856 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.15957084181454 * Education2n_Cycle + 
0.00847667341235 * EducationBasic + -1.58463832529749 * EducationGraduation + 0.56518194582557 
* EducationMaster + 0.25131188683384 * Marital_StatusDivorced + 2.38279806963807 * 
Marital_StatusMarried + 0.28897706448348 * Marital_StatusSingle + 0.89118497255856 * 
Marital_StatusTogether ;
2312891   +   H1x2_1  =    -1.58113759763481 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.58113759763481 + H1x2_1 ;
2312892   +   H1x2_2  =    -1.19307731012977 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.19307731012977 + H1x2_2 ;
2312893   +   H1x2_3  =     0.35767811974231 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.35767811974231 + H1x2_3 ;
2312894   +   H1x2_4  =    -0.20241610577527 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.20241610577527 + H1x2_4 ;
2312895   +   H1x2_5  =     0.30120348602955 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.30120348602955 + H1x2_5 ;
2312896   +   H1x2_6  =     1.04145053611779 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.04145053611779 + H1x2_6 ;
2312897   +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
2312898   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
2312899   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , 
H1x2_7 );
2312900   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2312901   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
2312902   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
2312903   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
2312904   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
2312905   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
2312906   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
2312907   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
2312908   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
2312909   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
2312910   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
2312911   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
2312912   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
2312913   +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
2312914   +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
2312915   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
2312916   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
2312917   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
2312918   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
2312919   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
2312920   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
2312921   +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
2312922   +END;
MPRINT(EM_DIAGRAM):   END;
2312923   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2312924   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2312925   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2312926   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2312927   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2312928   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2312929   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2312930   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
2312931   +END;
MPRINT(EM_DIAGRAM):   END;
2312932   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2312933   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2312934   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2312935   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2312936   +   H1x3_1  =    -0.17891338426869 * S_AcceptedCmpTotal
2312937   +          +     0.25935021287808 * S_Age  +     -0.4211584261256 * S_Frq
2312938   +          +    -1.91007620895221 * S_Income  +     0.38954955842314 *
2312939   +        S_Kidhome  +     0.07674351412771 * S_Mnt  +    -0.00193662324959 *
2312940   +        S_MntFishProducts  +    -0.05912563364557 * S_MntFruits
2312941   +          +     0.34447908349796 * S_MntGoldProds  +      1.8146796379351 *
2312942   +        S_MntMeatProducts  +    -0.28617584915758 * S_MntSweetProducts
2312943   +          +    -0.25003395507837 * S_MntWines  +     2.70698456342857 *
2312944   +        S_MonthsAsCustomer  +     0.61560315312621 * S_NumCatalogPurchases
2312945   +          +     1.11855402225797 * S_NumDealsPurchases
2312946   +          +     0.39150287442005 * S_NumDistPurchases
2312947   +          +     0.00160244551627 * S_NumStorePurchases
2312948   +          +     1.54380043731879 * S_NumWebPurchases
2312949   +          +      0.6462755347813 * S_NumWebVisitsMonth
2312950   +          +      0.3712356571744 * S_RFMstat  +     0.31930000498313 *
2312951   +        S_RMntFrq  +     0.91533450209744 * S_Recency
2312952   +          +    -1.15144971921837 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.17891338426869 * S_AcceptedCmpTotal + 0.25935021287808 * 
S_Age + -0.4211584261256 * S_Frq + -1.91007620895221 * S_Income + 0.38954955842314 * S_Kidhome 
+ 0.07674351412771 * S_Mnt + -0.00193662324959 * S_MntFishProducts + -0.05912563364557 * 
S_MntFruits + 0.34447908349796 * S_MntGoldProds + 1.8146796379351 * S_MntMeatProducts + 
-0.28617584915758 * S_MntSweetProducts + -0.25003395507837 * S_MntWines + 2.70698456342857 * 
S_MonthsAsCustomer + 0.61560315312621 * S_NumCatalogPurchases + 1.11855402225797 * 
S_NumDealsPurchases + 0.39150287442005 * S_NumDistPurchases + 0.00160244551627 * 
S_NumStorePurchases + 1.54380043731879 * S_NumWebPurchases + 0.6462755347813 * 
S_NumWebVisitsMonth + 0.3712356571744 * S_RFMstat + 0.31930000498313 * S_RMntFrq + 
0.91533450209744 * S_Recency + -1.15144971921837 * S_Teenhome ;
2312953   +   H1x3_2  =     0.70342217458269 * S_AcceptedCmpTotal
2312954   +          +     1.00269567168731 * S_Age  +     0.28237778780972 * S_Frq
2312955   +          +     1.85610950568833 * S_Income  +    -0.88627540559449 *
2312956   +        S_Kidhome  +      -0.681406495446 * S_Mnt  +    -0.52884566607488 *
2312957   +        S_MntFishProducts  +    -1.55540056999822 * S_MntFruits
2312958   +          +    -0.86530238267543 * S_MntGoldProds  +     0.50288889191395 *
2312959   +        S_MntMeatProducts  +     0.42795025747297 * S_MntSweetProducts
2312960   +          +     1.65622561769832 * S_MntWines  +    -0.40506757052255 *
2312961   +        S_MonthsAsCustomer  +    -0.45283667973478 * S_NumCatalogPurchases
2312962   +          +     0.01911815525287 * S_NumDealsPurchases
2312963   +          +    -1.07196707915227 * S_NumDistPurchases
2312964   +          +      0.6452048321682 * S_NumStorePurchases
2312965   +          +    -0.15818575353955 * S_NumWebPurchases
2312966   +          +    -0.82586162051382 * S_NumWebVisitsMonth
2312967   +          +     0.35914598433318 * S_RFMstat  +     0.14754646817335 *
2312968   +        S_RMntFrq  +     0.23398669008843 * S_Recency
2312969   +          +      0.1494741245474 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.70342217458269 * S_AcceptedCmpTotal + 1.00269567168731 * 
S_Age + 0.28237778780972 * S_Frq + 1.85610950568833 * S_Income + -0.88627540559449 * S_Kidhome 
+ -0.681406495446 * S_Mnt + -0.52884566607488 * S_MntFishProducts + -1.55540056999822 * 
S_MntFruits + -0.86530238267543 * S_MntGoldProds + 0.50288889191395 * S_MntMeatProducts + 
0.42795025747297 * S_MntSweetProducts + 1.65622561769832 * S_MntWines + -0.40506757052255 * 
S_MonthsAsCustomer + -0.45283667973478 * S_NumCatalogPurchases + 0.01911815525287 * 
S_NumDealsPurchases + -1.07196707915227 * S_NumDistPurchases + 0.6452048321682 * 
S_NumStorePurchases + -0.15818575353955 * S_NumWebPurchases + -0.82586162051382 * 
S_NumWebVisitsMonth + 0.35914598433318 * S_RFMstat + 0.14754646817335 * S_RMntFrq + 
0.23398669008843 * S_Recency + 0.1494741245474 * S_Teenhome ;
2312970   +   H1x3_3  =     0.54929571619315 * S_AcceptedCmpTotal
2312971   +          +      -0.751329127583 * S_Age  +    -0.94592306727941 * S_Frq
2312972   +          +    -1.17625421122138 * S_Income  +     0.74760015734698 *
2312973   +        S_Kidhome  +    -1.31055967085841 * S_Mnt  +     -0.5844789069547 *
2312974   +        S_MntFishProducts  +     0.29563811382096 * S_MntFruits
2312975   +          +      2.0486671645084 * S_MntGoldProds  +      0.4596153519541 *
2312976   +        S_MntMeatProducts  +     0.43182048706593 * S_MntSweetProducts
2312977   +          +     0.06319773540648 * S_MntWines  +     -0.9320658068644 *
2312978   +        S_MonthsAsCustomer  +     0.97208201647088 * S_NumCatalogPurchases
2312979   +          +     1.56893739271853 * S_NumDealsPurchases
2312980   +          +      0.6745865425238 * S_NumDistPurchases
2312981   +          +    -0.26848765783548 * S_NumStorePurchases
2312982   +          +     0.79227081430227 * S_NumWebPurchases
2312983   +          +     0.83054874267768 * S_NumWebVisitsMonth
2312984   +          +    -0.28363014203077 * S_RFMstat  +    -0.71879552423951 *
2312985   +        S_RMntFrq  +     0.80917480816898 * S_Recency
2312986   +          +    -0.52052715034272 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.54929571619315 * S_AcceptedCmpTotal + -0.751329127583 * S_Age 
+ -0.94592306727941 * S_Frq + -1.17625421122138 * S_Income + 0.74760015734698 * S_Kidhome + 
-1.31055967085841 * S_Mnt + -0.5844789069547 * S_MntFishProducts + 0.29563811382096 * 
S_MntFruits + 2.0486671645084 * S_MntGoldProds + 0.4596153519541 * S_MntMeatProducts + 
0.43182048706593 * S_MntSweetProducts + 0.06319773540648 * S_MntWines + -0.9320658068644 * 
S_MonthsAsCustomer + 0.97208201647088 * S_NumCatalogPurchases + 1.56893739271853 * 
S_NumDealsPurchases + 0.6745865425238 * S_NumDistPurchases + -0.26848765783548 * 
S_NumStorePurchases + 0.79227081430227 * S_NumWebPurchases + 0.83054874267768 * 
S_NumWebVisitsMonth + -0.28363014203077 * S_RFMstat + -0.71879552423951 * S_RMntFrq + 
0.80917480816898 * S_Recency + -0.52052715034272 * S_Teenhome ;
2312987   +   H1x3_4  =     1.71480641781959 * S_AcceptedCmpTotal
2312988   +          +    -0.98495603767618 * S_Age  +     -0.0459665945886 * S_Frq
2312989   +          +     1.19396539246615 * S_Income  +     0.51326452746824 *
2312990   +        S_Kidhome  +    -0.22663230333642 * S_Mnt  +     0.27256846012963 *
2312991   +        S_MntFishProducts  +    -0.50661455153622 * S_MntFruits
2312992   +          +     -0.3498057126965 * S_MntGoldProds  +    -2.87000075082987 *
2312993   +        S_MntMeatProducts  +    -0.09413391100844 * S_MntSweetProducts
2312994   +          +     1.15010664811376 * S_MntWines  +    -0.48501392658783 *
2312995   +        S_MonthsAsCustomer  +      0.2688077310392 * S_NumCatalogPurchases
2312996   +          +    -0.23954856030467 * S_NumDealsPurchases
2312997   +          +    -1.61914390483829 * S_NumDistPurchases
2312998   +          +      -1.014570623016 * S_NumStorePurchases
2312999   +          +    -0.36828642098701 * S_NumWebPurchases
2313000   +          +    -0.04976922659227 * S_NumWebVisitsMonth
2313001   +          +     0.87811344320757 * S_RFMstat  +    -1.70999928232532 *
2313002   +        S_RMntFrq  +    -0.40880481304369 * S_Recency
2313003   +          +     0.75806578113158 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.71480641781959 * S_AcceptedCmpTotal + -0.98495603767618 * 
S_Age + -0.0459665945886 * S_Frq + 1.19396539246615 * S_Income + 0.51326452746824 * S_Kidhome 
+ -0.22663230333642 * S_Mnt + 0.27256846012963 * S_MntFishProducts + -0.50661455153622 * 
S_MntFruits + -0.3498057126965 * S_MntGoldProds + -2.87000075082987 * S_MntMeatProducts + 
-0.09413391100844 * S_MntSweetProducts + 1.15010664811376 * S_MntWines + -0.48501392658783 * 
S_MonthsAsCustomer + 0.2688077310392 * S_NumCatalogPurchases + -0.23954856030467 * 
S_NumDealsPurchases + -1.61914390483829 * S_NumDistPurchases + -1.014570623016 * 
S_NumStorePurchases + -0.36828642098701 * S_NumWebPurchases + -0.04976922659227 * 
S_NumWebVisitsMonth + 0.87811344320757 * S_RFMstat + -1.70999928232532 * S_RMntFrq + 
-0.40880481304369 * S_Recency + 0.75806578113158 * S_Teenhome ;
2313004   +   H1x3_5  =    -0.35033091531835 * S_AcceptedCmpTotal
2313005   +          +    -1.18148775203733 * S_Age  +    -0.17374293038138 * S_Frq
2313006   +          +    -0.36680516767012 * S_Income  +     0.57186890691757 *
2313007   +        S_Kidhome  +    -0.02612042491922 * S_Mnt  +     0.84551697375819 *
2313008   +        S_MntFishProducts  +     0.44255296354709 * S_MntFruits
2313009   +          +    -1.35259485807243 * S_MntGoldProds  +      0.3377329409199 *
2313010   +        S_MntMeatProducts  +    -1.06135100840202 * S_MntSweetProducts
2313011   +          +     0.15771394796649 * S_MntWines  +     1.55754960780486 *
2313012   +        S_MonthsAsCustomer  +    -0.76896921785988 * S_NumCatalogPurchases
2313013   +          +     1.00094082424204 * S_NumDealsPurchases
2313014   +          +      0.2724785290725 * S_NumDistPurchases
2313015   +          +     0.13170237783486 * S_NumStorePurchases
2313016   +          +    -1.31447792523743 * S_NumWebPurchases
2313017   +          +    -0.09121088371438 * S_NumWebVisitsMonth
2313018   +          +     1.46860488573551 * S_RFMstat  +     0.46491504994651 *
2313019   +        S_RMntFrq  +      0.6767512513985 * S_Recency
2313020   +          +    -1.74995034763966 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.35033091531835 * S_AcceptedCmpTotal + -1.18148775203733 * 
S_Age + -0.17374293038138 * S_Frq + -0.36680516767012 * S_Income + 0.57186890691757 * 
S_Kidhome + -0.02612042491922 * S_Mnt + 0.84551697375819 * S_MntFishProducts + 
0.44255296354709 * S_MntFruits + -1.35259485807243 * S_MntGoldProds + 0.3377329409199 * 
S_MntMeatProducts + -1.06135100840202 * S_MntSweetProducts + 0.15771394796649 * S_MntWines + 
1.55754960780486 * S_MonthsAsCustomer + -0.76896921785988 * S_NumCatalogPurchases + 
1.00094082424204 * S_NumDealsPurchases + 0.2724785290725 * S_NumDistPurchases + 
0.13170237783486 * S_NumStorePurchases + -1.31447792523743 * S_NumWebPurchases + 
-0.09121088371438 * S_NumWebVisitsMonth + 1.46860488573551 * S_RFMstat + 0.46491504994651 * 
S_RMntFrq + 0.6767512513985 * S_Recency + -1.74995034763966 * S_Teenhome ;
2313021   +   H1x3_6  =     1.05520309715672 * S_AcceptedCmpTotal
2313022   +          +    -1.05930507843633 * S_Age  +     0.07032294102853 * S_Frq
2313023   +          +    -0.05932294137503 * S_Income  +    -1.47206442598932 *
2313024   +        S_Kidhome  +     0.56661112816398 * S_Mnt  +    -0.11340132210258 *
2313025   +        S_MntFishProducts  +    -0.32177484313741 * S_MntFruits
2313026   +          +    -0.32378384178804 * S_MntGoldProds  +     0.00540737819175 *
2313027   +        S_MntMeatProducts  +     0.14834467568566 * S_MntSweetProducts
2313028   +          +    -0.95841169333668 * S_MntWines  +    -0.62902099823048 *
2313029   +        S_MonthsAsCustomer  +    -0.67434201898155 * S_NumCatalogPurchases
2313030   +          +    -0.73198872336344 * S_NumDealsPurchases
2313031   +          +     0.29368958872361 * S_NumDistPurchases
2313032   +          +     1.52772046446908 * S_NumStorePurchases
2313033   +          +    -1.75065469134874 * S_NumWebPurchases
2313034   +          +      0.0264954621772 * S_NumWebVisitsMonth
2313035   +          +    -0.88054137065815 * S_RFMstat  +     0.70371760194946 *
2313036   +        S_RMntFrq  +     1.14219878739476 * S_Recency
2313037   +          +    -1.15240998118906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 1.05520309715672 * S_AcceptedCmpTotal + -1.05930507843633 * 
S_Age + 0.07032294102853 * S_Frq + -0.05932294137503 * S_Income + -1.47206442598932 * 
S_Kidhome + 0.56661112816398 * S_Mnt + -0.11340132210258 * S_MntFishProducts + 
-0.32177484313741 * S_MntFruits + -0.32378384178804 * S_MntGoldProds + 0.00540737819175 * 
S_MntMeatProducts + 0.14834467568566 * S_MntSweetProducts + -0.95841169333668 * S_MntWines + 
-0.62902099823048 * S_MonthsAsCustomer + -0.67434201898155 * S_NumCatalogPurchases + 
-0.73198872336344 * S_NumDealsPurchases + 0.29368958872361 * S_NumDistPurchases + 
1.52772046446908 * S_NumStorePurchases + -1.75065469134874 * S_NumWebPurchases + 
0.0264954621772 * S_NumWebVisitsMonth + -0.88054137065815 * S_RFMstat + 0.70371760194946 * 
S_RMntFrq + 1.14219878739476 * S_Recency + -1.15240998118906 * S_Teenhome ;
2313038   +   H1x3_1  = H1x3_1  +     0.60800466481517 * AcceptedCmp10
2313039   +          +     0.33187245535701 * AcceptedCmp20  +    -0.13888343551044 *
2313040   +        AcceptedCmp30  +     0.93663925029857 * AcceptedCmp40
2313041   +          +     1.09340622621085 * AcceptedCmp50  +    -0.49132743156126 *
2313042   +        Complain0  +     0.45196197584946 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.60800466481517 * AcceptedCmp10 + 0.33187245535701 * 
AcceptedCmp20 + -0.13888343551044 * AcceptedCmp30 + 0.93663925029857 * AcceptedCmp40 + 
1.09340622621085 * AcceptedCmp50 + -0.49132743156126 * Complain0 + 0.45196197584946 * 
HigherEducationBinary0 ;
2313043   +   H1x3_2  = H1x3_2  +     1.40275485940553 * AcceptedCmp10
2313044   +          +    -0.15035102140746 * AcceptedCmp20  +    -0.53574064147206 *
2313045   +        AcceptedCmp30  +    -1.67324904853563 * AcceptedCmp40
2313046   +          +     0.05636486780046 * AcceptedCmp50  +    -0.39032867538703 *
2313047   +        Complain0  +    -0.74980603736258 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 1.40275485940553 * AcceptedCmp10 + -0.15035102140746 * 
AcceptedCmp20 + -0.53574064147206 * AcceptedCmp30 + -1.67324904853563 * AcceptedCmp40 + 
0.05636486780046 * AcceptedCmp50 + -0.39032867538703 * Complain0 + -0.74980603736258 * 
HigherEducationBinary0 ;
2313048   +   H1x3_3  = H1x3_3  +     0.26722647672682 * AcceptedCmp10
2313049   +          +      0.6216449242511 * AcceptedCmp20  +     0.76635966126463 *
2313050   +        AcceptedCmp30  +    -2.48978919706551 * AcceptedCmp40
2313051   +          +     0.98619070514978 * AcceptedCmp50  +    -0.19244215041297 *
2313052   +        Complain0  +    -1.19045127506692 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.26722647672682 * AcceptedCmp10 + 0.6216449242511 * 
AcceptedCmp20 + 0.76635966126463 * AcceptedCmp30 + -2.48978919706551 * AcceptedCmp40 + 
0.98619070514978 * AcceptedCmp50 + -0.19244215041297 * Complain0 + -1.19045127506692 * 
HigherEducationBinary0 ;
2313053   +   H1x3_4  = H1x3_4  +    -1.73915810074841 * AcceptedCmp10
2313054   +          +     0.72244354389321 * AcceptedCmp20  +     1.07200246076684 *
2313055   +        AcceptedCmp30  +     0.24242315318429 * AcceptedCmp40
2313056   +          +     0.48717202781909 * AcceptedCmp50  +    -1.18600714935645 *
2313057   +        Complain0  +     -1.0752062632729 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -1.73915810074841 * AcceptedCmp10 + 0.72244354389321 * 
AcceptedCmp20 + 1.07200246076684 * AcceptedCmp30 + 0.24242315318429 * AcceptedCmp40 + 
0.48717202781909 * AcceptedCmp50 + -1.18600714935645 * Complain0 + -1.0752062632729 * 
HigherEducationBinary0 ;
2313058   +   H1x3_5  = H1x3_5  +     1.07972020322696 * AcceptedCmp10
2313059   +          +     0.38275266830165 * AcceptedCmp20  +     0.45959913551609 *
2313060   +        AcceptedCmp30  +    -0.30891288234597 * AcceptedCmp40
2313061   +          +    -0.35568820567134 * AcceptedCmp50  +     -1.8045223309162 *
2313062   +        Complain0  +    -0.29380313969195 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 1.07972020322696 * AcceptedCmp10 + 0.38275266830165 * 
AcceptedCmp20 + 0.45959913551609 * AcceptedCmp30 + -0.30891288234597 * AcceptedCmp40 + 
-0.35568820567134 * AcceptedCmp50 + -1.8045223309162 * Complain0 + -0.29380313969195 * 
HigherEducationBinary0 ;
2313063   +   H1x3_6  = H1x3_6  +    -2.40002597755125 * AcceptedCmp10
2313064   +          +     0.61725427642794 * AcceptedCmp20  +      1.3438972982524 *
2313065   +        AcceptedCmp30  +    -0.66766212489049 * AcceptedCmp40
2313066   +          +     1.10709227053258 * AcceptedCmp50  +    -0.98301865424423 *
2313067   +        Complain0  +     0.83512874944952 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + -2.40002597755125 * AcceptedCmp10 + 0.61725427642794 * 
AcceptedCmp20 + 1.3438972982524 * AcceptedCmp30 + -0.66766212489049 * AcceptedCmp40 + 
1.10709227053258 * AcceptedCmp50 + -0.98301865424423 * Complain0 + 0.83512874944952 * 
HigherEducationBinary0 ;
2313068   +   H1x3_1  = H1x3_1  +    -0.49604077640433 * Education2n_Cycle
2313069   +          +    -0.60803139475446 * EducationBasic  +     0.39029834300888 *
2313070   +        EducationGraduation  +     1.49476669226441 * EducationMaster
2313071   +          +     0.32207432513904 * Marital_StatusDivorced
2313072   +          +      0.6397913221395 * Marital_StatusMarried
2313073   +          +    -0.25330032559918 * Marital_StatusSingle
2313074   +          +      0.6826963146507 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.49604077640433 * Education2n_Cycle + 
-0.60803139475446 * EducationBasic + 0.39029834300888 * EducationGraduation + 1.49476669226441 
* EducationMaster + 0.32207432513904 * Marital_StatusDivorced + 0.6397913221395 * 
Marital_StatusMarried + -0.25330032559918 * Marital_StatusSingle + 0.6826963146507 * 
Marital_StatusTogether ;
2313075   +   H1x3_2  = H1x3_2  +     0.70727271276171 * Education2n_Cycle
2313076   +          +    -0.74539861835467 * EducationBasic  +    -1.09813520505203 *
2313077   +        EducationGraduation  +      0.0913616986494 * EducationMaster
2313078   +          +     0.79430904713493 * Marital_StatusDivorced
2313079   +          +     2.54456429102799 * Marital_StatusMarried
2313080   +          +     0.59410742352499 * Marital_StatusSingle
2313081   +          +     0.62339810371964 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.70727271276171 * Education2n_Cycle + 
-0.74539861835467 * EducationBasic + -1.09813520505203 * EducationGraduation + 0.0913616986494 
* EducationMaster + 0.79430904713493 * Marital_StatusDivorced + 2.54456429102799 * 
Marital_StatusMarried + 0.59410742352499 * Marital_StatusSingle + 0.62339810371964 * 
Marital_StatusTogether ;
2313082   +   H1x3_3  = H1x3_3  +     0.41739931776571 * Education2n_Cycle
2313083   +          +     0.90042318812458 * EducationBasic  +    -0.30863999735161 *
2313084   +        EducationGraduation  +    -0.07080985966069 * EducationMaster
2313085   +          +    -0.43081775693595 * Marital_StatusDivorced
2313086   +          +    -0.78485102174552 * Marital_StatusMarried
2313087   +          +    -1.56581090110813 * Marital_StatusSingle
2313088   +          +     1.31552735466691 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.41739931776571 * Education2n_Cycle + 
0.90042318812458 * EducationBasic + -0.30863999735161 * EducationGraduation + 
-0.07080985966069 * EducationMaster + -0.43081775693595 * Marital_StatusDivorced + 
-0.78485102174552 * Marital_StatusMarried + -1.56581090110813 * Marital_StatusSingle + 
1.31552735466691 * Marital_StatusTogether ;
2313089   +   H1x3_4  = H1x3_4  +    -1.03450070870223 * Education2n_Cycle
2313090   +          +     0.12962104594991 * EducationBasic  +    -2.08320982697158 *
2313091   +        EducationGraduation  +     1.01633562820676 * EducationMaster
2313092   +          +     0.38226706522151 * Marital_StatusDivorced
2313093   +          +     0.96666958079914 * Marital_StatusMarried
2313094   +          +    -0.07771259761555 * Marital_StatusSingle
2313095   +          +    -0.15667080607342 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -1.03450070870223 * Education2n_Cycle + 
0.12962104594991 * EducationBasic + -2.08320982697158 * EducationGraduation + 1.01633562820676 
* EducationMaster + 0.38226706522151 * Marital_StatusDivorced + 0.96666958079914 * 
Marital_StatusMarried + -0.07771259761555 * Marital_StatusSingle + -0.15667080607342 * 
Marital_StatusTogether ;
2313096   +   H1x3_5  = H1x3_5  +     0.42350784953316 * Education2n_Cycle
2313097   +          +    -0.47409869250049 * EducationBasic  +     0.22752853959532 *
2313098   +        EducationGraduation  +     0.05813076059598 * EducationMaster
2313099   +          +    -0.38325393606947 * Marital_StatusDivorced
2313100   +          +    -1.43303056163299 * Marital_StatusMarried
2313101   +          +     0.11571941757387 * Marital_StatusSingle
2313102   +          +     0.42633042000729 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 0.42350784953316 * Education2n_Cycle + 
-0.47409869250049 * EducationBasic + 0.22752853959532 * EducationGraduation + 0.05813076059598 
* EducationMaster + -0.38325393606947 * Marital_StatusDivorced + -1.43303056163299 * 
Marital_StatusMarried + 0.11571941757387 * Marital_StatusSingle + 0.42633042000729 * 
Marital_StatusTogether ;
2313103   +   H1x3_6  = H1x3_6  +     1.11214831415741 * Education2n_Cycle
2313104   +          +      0.8877309144454 * EducationBasic  +     0.87390674413956 *
2313105   +        EducationGraduation  +     0.90837023676142 * EducationMaster
2313106   +          +    -0.36491799765765 * Marital_StatusDivorced
2313107   +          +     0.14142786767503 * Marital_StatusMarried
2313108   +          +     0.22643970468805 * Marital_StatusSingle
2313109   +          +     0.74162870756295 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + 1.11214831415741 * Education2n_Cycle + 0.8877309144454 
* EducationBasic + 0.87390674413956 * EducationGraduation + 0.90837023676142 * EducationMaster 
+ -0.36491799765765 * Marital_StatusDivorced + 0.14142786767503 * Marital_StatusMarried + 
0.22643970468805 * Marital_StatusSingle + 0.74162870756295 * Marital_StatusTogether ;
2313110   +   H1x3_1  =        0.17121674502 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.17121674502 + H1x3_1 ;
2313111   +   H1x3_2  =    -0.07858073871761 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.07858073871761 + H1x3_2 ;
2313112   +   H1x3_3  =     -0.1687483376367 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.1687483376367 + H1x3_3 ;
2313113   +   H1x3_4  =     0.92501573900148 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.92501573900148 + H1x3_4 ;
2313114   +   H1x3_5  =    -0.04765930254307 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.04765930254307 + H1x3_5 ;
2313115   +   H1x3_6  =     0.29532221854366 + H1x3_6 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0.29532221854366 + H1x3_6 ;
2313116   +   H1x3_7  = 0;
MPRINT(EM_DIAGRAM):   H1x3_7 = 0;
2313117   +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 , H1x3_7
2313118   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 , 
H1x3_7 );
2313119   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2313120   +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
2313121   +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
2313122   +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
2313123   +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
2313124   +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
2313125   +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
2313126   +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
2313127   +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
2313128   +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
2313129   +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
2313130   +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
2313131   +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
2313132   +   H1x3_7  = EXP(H1x3_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_7 = EXP(H1x3_7 - _MAX_);
2313133   +   _SUM_ = _SUM_ + H1x3_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_7 ;
2313134   +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
2313135   +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
2313136   +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
2313137   +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
2313138   +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
2313139   +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
2313140   +   H1x3_7  = H1x3_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_7 = H1x3_7 / _SUM_;
2313141   +END;
MPRINT(EM_DIAGRAM):   END;
2313142   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2313143   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2313144   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2313145   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
2313146   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
2313147   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
2313148   +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
2313149   +   H1x3_7  = .;
MPRINT(EM_DIAGRAM):   H1x3_7 = .;
2313150   +END;
MPRINT(EM_DIAGRAM):   END;
2313151   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2313152   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2313153   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2313154   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2313155   +   H2x1_1  =    -0.59397690687549 * H1x1_1  +     0.10790242485513 * H1x1_2
2313156   +          +     1.34957997338147 * H1x1_3  +     0.98783879769831 * H1x1_4
2313157   +          +    -1.73131698691915 * H1x1_5  +    -0.04920424431591 * H1x1_6
2313158   +          +    -0.75229173661277 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.59397690687549 * H1x1_1 + 0.10790242485513 * H1x1_2 + 
1.34957997338147 * H1x1_3 + 0.98783879769831 * H1x1_4 + -1.73131698691915 * H1x1_5 + 
-0.04920424431591 * H1x1_6 + -0.75229173661277 * H1x1_7 ;
2313159   +   H2x1_2  =    -0.98729009516736 * H1x1_1  +     0.08491210993613 * H1x1_2
2313160   +          +     0.08027654554575 * H1x1_3  +     0.06189432860142 * H1x1_4
2313161   +          +    -1.23526842489276 * H1x1_5  +    -0.17600169070197 * H1x1_6
2313162   +          +     0.70746372975481 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.98729009516736 * H1x1_1 + 0.08491210993613 * H1x1_2 + 
0.08027654554575 * H1x1_3 + 0.06189432860142 * H1x1_4 + -1.23526842489276 * H1x1_5 + 
-0.17600169070197 * H1x1_6 + 0.70746372975481 * H1x1_7 ;
2313163   +   H2x1_3  =    -0.91861478701429 * H1x1_1  +     0.18513565366261 * H1x1_2
2313164   +          +    -0.18629587955963 * H1x1_3  +     0.76802660507034 * H1x1_4
2313165   +          +    -0.47979525657638 * H1x1_5  +     0.06968142422923 * H1x1_6
2313166   +          +     2.18264864713501 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.91861478701429 * H1x1_1 + 0.18513565366261 * H1x1_2 + 
-0.18629587955963 * H1x1_3 + 0.76802660507034 * H1x1_4 + -0.47979525657638 * H1x1_5 + 
0.06968142422923 * H1x1_6 + 2.18264864713501 * H1x1_7 ;
2313167   +   H2x1_4  =     1.02774363171853 * H1x1_1  +     1.08006636098136 * H1x1_2
2313168   +          +    -2.27078540572539 * H1x1_3  +    -0.54968089382258 * H1x1_4
2313169   +          +     2.11477012099075 * H1x1_5  +     1.91368944483056 * H1x1_6
2313170   +          +     0.22313799249268 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.02774363171853 * H1x1_1 + 1.08006636098136 * H1x1_2 + 
-2.27078540572539 * H1x1_3 + -0.54968089382258 * H1x1_4 + 2.11477012099075 * H1x1_5 + 
1.91368944483056 * H1x1_6 + 0.22313799249268 * H1x1_7 ;
2313171   +   H2x1_5  =    -1.06933000183778 * H1x1_1  +     0.73081558484415 * H1x1_2
2313172   +          +    -0.78012012951065 * H1x1_3  +     0.81916081920412 * H1x1_4
2313173   +          +    -1.46358608086032 * H1x1_5  +     1.83492870022704 * H1x1_6
2313174   +          +     0.75554005406859 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.06933000183778 * H1x1_1 + 0.73081558484415 * H1x1_2 + 
-0.78012012951065 * H1x1_3 + 0.81916081920412 * H1x1_4 + -1.46358608086032 * H1x1_5 + 
1.83492870022704 * H1x1_6 + 0.75554005406859 * H1x1_7 ;
2313175   +   H2x1_6  =    -2.28576277725334 * H1x1_1  +    -0.32249555333061 * H1x1_2
2313176   +          +     3.41388795688866 * H1x1_3  +     3.30305437699117 * H1x1_4
2313177   +          +    -1.49237136034665 * H1x1_5  +    -1.64329313023006 * H1x1_6
2313178   +          +     3.08746595768905 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -2.28576277725334 * H1x1_1 + -0.32249555333061 * H1x1_2 + 
3.41388795688866 * H1x1_3 + 3.30305437699117 * H1x1_4 + -1.49237136034665 * H1x1_5 + 
-1.64329313023006 * H1x1_6 + 3.08746595768905 * H1x1_7 ;
2313179   +   H2x1_1  = H2x1_1  +    -2.56424783943845 * H1x2_1
2313180   +          +    -1.00213973107436 * H1x2_2  +    -0.47445930434013 * H1x2_3
2313181   +          +    -1.62372689856618 * H1x2_4  +     -1.1856250348479 * H1x2_5
2313182   +          +     0.04266758405533 * H1x2_6  +    -0.60071538153471 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.56424783943845 * H1x2_1 + -1.00213973107436 * 
H1x2_2 + -0.47445930434013 * H1x2_3 + -1.62372689856618 * H1x2_4 + -1.1856250348479 * H1x2_5 + 
0.04266758405533 * H1x2_6 + -0.60071538153471 * H1x2_7 ;
2313183   +   H2x1_2  = H2x1_2  +     0.00935939453146 * H1x2_1
2313184   +          +     0.55542862749222 * H1x2_2  +     -0.6066128025675 * H1x2_3
2313185   +          +    -0.53196514301497 * H1x2_4  +    -1.40549473181231 * H1x2_5
2313186   +          +    -0.08595621526876 * H1x2_6  +    -1.03953618328756 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.00935939453146 * H1x2_1 + 0.55542862749222 * H1x2_2 
+ -0.6066128025675 * H1x2_3 + -0.53196514301497 * H1x2_4 + -1.40549473181231 * H1x2_5 + 
-0.08595621526876 * H1x2_6 + -1.03953618328756 * H1x2_7 ;
2313187   +   H2x1_3  = H2x1_3  +    -1.41069312035355 * H1x2_1
2313188   +          +     0.56124490780446 * H1x2_2  +    -0.00472279335297 * H1x2_3
2313189   +          +    -1.10441771442377 * H1x2_4  +    -0.27090019786185 * H1x2_5
2313190   +          +    -0.15206855618217 * H1x2_6  +     -1.6035395520507 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -1.41069312035355 * H1x2_1 + 0.56124490780446 * H1x2_2 
+ -0.00472279335297 * H1x2_3 + -1.10441771442377 * H1x2_4 + -0.27090019786185 * H1x2_5 + 
-0.15206855618217 * H1x2_6 + -1.6035395520507 * H1x2_7 ;
2313191   +   H2x1_4  = H2x1_4  +    -0.55045399339183 * H1x2_1
2313192   +          +     0.02477552373088 * H1x2_2  +     0.19400769235958 * H1x2_3
2313193   +          +    -0.38264537483702 * H1x2_4  +     0.63479720884458 * H1x2_5
2313194   +          +    -0.60194629301645 * H1x2_6  +    -0.83490097285651 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.55045399339183 * H1x2_1 + 0.02477552373088 * H1x2_2 
+ 0.19400769235958 * H1x2_3 + -0.38264537483702 * H1x2_4 + 0.63479720884458 * H1x2_5 + 
-0.60194629301645 * H1x2_6 + -0.83490097285651 * H1x2_7 ;
2313195   +   H2x1_5  = H2x1_5  +    -1.03176133074695 * H1x2_1
2313196   +          +    -0.59926889064506 * H1x2_2  +    -1.07077012847053 * H1x2_3
2313197   +          +    -1.18998920291096 * H1x2_4  +     0.39150574258439 * H1x2_5
2313198   +          +     0.05580574741832 * H1x2_6  +    -0.32272109045259 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -1.03176133074695 * H1x2_1 + -0.59926889064506 * 
H1x2_2 + -1.07077012847053 * H1x2_3 + -1.18998920291096 * H1x2_4 + 0.39150574258439 * H1x2_5 + 
0.05580574741832 * H1x2_6 + -0.32272109045259 * H1x2_7 ;
2313199   +   H2x1_6  = H2x1_6  +    -0.61952040538587 * H1x2_1
2313200   +          +     0.35510185028829 * H1x2_2  +    -0.23901935720129 * H1x2_3
2313201   +          +     0.31752417497209 * H1x2_4  +    -1.20101515562967 * H1x2_5
2313202   +          +     0.95004398218762 * H1x2_6  +    -0.60363955740244 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.61952040538587 * H1x2_1 + 0.35510185028829 * H1x2_2 
+ -0.23901935720129 * H1x2_3 + 0.31752417497209 * H1x2_4 + -1.20101515562967 * H1x2_5 + 
0.95004398218762 * H1x2_6 + -0.60363955740244 * H1x2_7 ;
2313203   +   H2x1_1  = H2x1_1  +     0.74378922258523 * H1x3_1
2313204   +          +      0.4693103426831 * H1x3_2  +     0.82071786194731 * H1x3_3
2313205   +          +     0.46432194238141 * H1x3_4  +    -1.39760250161206 * H1x3_5
2313206   +          +     0.68725250578779 * H1x3_6  +    -0.98986331205144 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.74378922258523 * H1x3_1 + 0.4693103426831 * H1x3_2 + 
0.82071786194731 * H1x3_3 + 0.46432194238141 * H1x3_4 + -1.39760250161206 * H1x3_5 + 
0.68725250578779 * H1x3_6 + -0.98986331205144 * H1x3_7 ;
2313207   +   H2x1_2  = H2x1_2  +     0.48406734142754 * H1x3_1
2313208   +          +     1.24032575331626 * H1x3_2  +     0.10072816620895 * H1x3_3
2313209   +          +     -2.4915795108808 * H1x3_4  +    -1.20085587739472 * H1x3_5
2313210   +          +     2.57480977795816 * H1x3_6  +    -0.36127801521801 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.48406734142754 * H1x3_1 + 1.24032575331626 * H1x3_2 
+ 0.10072816620895 * H1x3_3 + -2.4915795108808 * H1x3_4 + -1.20085587739472 * H1x3_5 + 
2.57480977795816 * H1x3_6 + -0.36127801521801 * H1x3_7 ;
2313211   +   H2x1_3  = H2x1_3  +    -0.29392518978638 * H1x3_1
2313212   +          +     0.02884163093827 * H1x3_2  +     -0.7595494999576 * H1x3_3
2313213   +          +     0.32536537321799 * H1x3_4  +    -0.01283695014976 * H1x3_5
2313214   +          +     0.76895275927405 * H1x3_6  +     -0.2802859993784 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.29392518978638 * H1x3_1 + 0.02884163093827 * H1x3_2 
+ -0.7595494999576 * H1x3_3 + 0.32536537321799 * H1x3_4 + -0.01283695014976 * H1x3_5 + 
0.76895275927405 * H1x3_6 + -0.2802859993784 * H1x3_7 ;
2313215   +   H2x1_4  = H2x1_4  +     2.19833784150068 * H1x3_1
2313216   +          +     0.25528651098746 * H1x3_2  +    -0.72296156297186 * H1x3_3
2313217   +          +    -0.14360138590872 * H1x3_4  +     0.77657569331577 * H1x3_5
2313218   +          +    -1.57969278343415 * H1x3_6  +    -0.92288304588247 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 2.19833784150068 * H1x3_1 + 0.25528651098746 * H1x3_2 
+ -0.72296156297186 * H1x3_3 + -0.14360138590872 * H1x3_4 + 0.77657569331577 * H1x3_5 + 
-1.57969278343415 * H1x3_6 + -0.92288304588247 * H1x3_7 ;
2313219   +   H2x1_5  = H2x1_5  +     2.11753865409831 * H1x3_1
2313220   +          +     0.83654766112935 * H1x3_2  +     0.97472534941535 * H1x3_3
2313221   +          +     1.35030042962655 * H1x3_4  +     1.24680664824079 * H1x3_5
2313222   +          +     0.19234112612264 * H1x3_6  +    -0.90680244689294 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 2.11753865409831 * H1x3_1 + 0.83654766112935 * H1x3_2 
+ 0.97472534941535 * H1x3_3 + 1.35030042962655 * H1x3_4 + 1.24680664824079 * H1x3_5 + 
0.19234112612264 * H1x3_6 + -0.90680244689294 * H1x3_7 ;
2313223   +   H2x1_6  = H2x1_6  +     2.07923724911848 * H1x3_1
2313224   +          +     1.62526758922217 * H1x3_2  +    -0.68837627923045 * H1x3_3
2313225   +          +    -0.21127837456631 * H1x3_4  +    -1.47138526111866 * H1x3_5
2313226   +          +    -0.52275521204408 * H1x3_6  +    -0.36639952580044 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + 2.07923724911848 * H1x3_1 + 1.62526758922217 * H1x3_2 
+ -0.68837627923045 * H1x3_3 + -0.21127837456631 * H1x3_4 + -1.47138526111866 * H1x3_5 + 
-0.52275521204408 * H1x3_6 + -0.36639952580044 * H1x3_7 ;
2313227   +   H2x1_1  =    -1.05059672372056 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.05059672372056 + H2x1_1 ;
2313228   +   H2x1_2  =    -1.18404209429335 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.18404209429335 + H2x1_2 ;
2313229   +   H2x1_3  =    -0.76285494175137 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.76285494175137 + H2x1_3 ;
2313230   +   H2x1_4  =     2.22362261707253 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.22362261707253 + H2x1_4 ;
2313231   +   H2x1_5  =    -0.98793149966854 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.98793149966854 + H2x1_5 ;
2313232   +   H2x1_6  =     1.51370254076672 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.51370254076672 + H2x1_6 ;
2313233   +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
2313234   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
2313235   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , 
H2x1_7 );
2313236   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2313237   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
2313238   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
2313239   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
2313240   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
2313241   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
2313242   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
2313243   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
2313244   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
2313245   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
2313246   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
2313247   +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
2313248   +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
2313249   +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
2313250   +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
2313251   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
2313252   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
2313253   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
2313254   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
2313255   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
2313256   +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
2313257   +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
2313258   +END;
MPRINT(EM_DIAGRAM):   END;
2313259   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2313260   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2313261   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2313262   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2313263   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2313264   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2313265   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
2313266   +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
2313267   +END;
MPRINT(EM_DIAGRAM):   END;
2313268   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2313269   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
2313270   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2313271   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2313272   +   H2x2_1  =    -0.47079896252387 * H1x1_1  +      0.6132734714958 * H1x1_2
2313273   +          +     1.50300753820512 * H1x1_3  +     -0.1812621169129 * H1x1_4
2313274   +          +    -0.18531614991208 * H1x1_5  +     -0.2905105845089 * H1x1_6
2313275   +          +     1.33158539183491 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.47079896252387 * H1x1_1 + 0.6132734714958 * H1x1_2 + 
1.50300753820512 * H1x1_3 + -0.1812621169129 * H1x1_4 + -0.18531614991208 * H1x1_5 + 
-0.2905105845089 * H1x1_6 + 1.33158539183491 * H1x1_7 ;
2313276   +   H2x2_2  =    -1.90834701790953 * H1x1_1  +      0.6177658514697 * H1x1_2
2313277   +          +     0.36465199316418 * H1x1_3  +     0.85911870587838 * H1x1_4
2313278   +          +     0.02147610114602 * H1x1_5  +     0.32326590534391 * H1x1_6
2313279   +          +    -1.04241581652278 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.90834701790953 * H1x1_1 + 0.6177658514697 * H1x1_2 + 
0.36465199316418 * H1x1_3 + 0.85911870587838 * H1x1_4 + 0.02147610114602 * H1x1_5 + 
0.32326590534391 * H1x1_6 + -1.04241581652278 * H1x1_7 ;
2313280   +   H2x2_3  =       0.471130277999 * H1x1_1  +     0.96694465336161 * H1x1_2
2313281   +          +       0.141582035067 * H1x1_3  +     0.53325844993783 * H1x1_4
2313282   +          +     -0.0659115060565 * H1x1_5  +     0.38141753021852 * H1x1_6
2313283   +          +    -1.14139437080586 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.471130277999 * H1x1_1 + 0.96694465336161 * H1x1_2 + 
0.141582035067 * H1x1_3 + 0.53325844993783 * H1x1_4 + -0.0659115060565 * H1x1_5 + 
0.38141753021852 * H1x1_6 + -1.14139437080586 * H1x1_7 ;
2313284   +   H2x2_4  =     0.97070926632973 * H1x1_1  +    -0.13619191199121 * H1x1_2
2313285   +          +       0.111155554391 * H1x1_3  +    -0.50119055939436 * H1x1_4
2313286   +          +     -0.4478264228864 * H1x1_5  +    -0.07373167561096 * H1x1_6
2313287   +          +    -0.48838853015257 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.97070926632973 * H1x1_1 + -0.13619191199121 * H1x1_2 + 
0.111155554391 * H1x1_3 + -0.50119055939436 * H1x1_4 + -0.4478264228864 * H1x1_5 + 
-0.07373167561096 * H1x1_6 + -0.48838853015257 * H1x1_7 ;
2313288   +   H2x2_5  =    -0.97151785477215 * H1x1_1  +     0.21189203541458 * H1x1_2
2313289   +          +    -0.19596886882434 * H1x1_3  +      1.3474130560719 * H1x1_4
2313290   +          +     1.73119417991798 * H1x1_5  +    -0.03726270753922 * H1x1_6
2313291   +          +    -1.41850405567364 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.97151785477215 * H1x1_1 + 0.21189203541458 * H1x1_2 + 
-0.19596886882434 * H1x1_3 + 1.3474130560719 * H1x1_4 + 1.73119417991798 * H1x1_5 + 
-0.03726270753922 * H1x1_6 + -1.41850405567364 * H1x1_7 ;
2313292   +   H2x2_6  =     0.64188298957992 * H1x1_1  +     0.87835723870887 * H1x1_2
2313293   +          +     0.65705195530326 * H1x1_3  +    -1.37039626769544 * H1x1_4
2313294   +          +    -0.32238737127781 * H1x1_5  +     0.33986547881641 * H1x1_6
2313295   +          +    -0.39788950643812 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.64188298957992 * H1x1_1 + 0.87835723870887 * H1x1_2 + 
0.65705195530326 * H1x1_3 + -1.37039626769544 * H1x1_4 + -0.32238737127781 * H1x1_5 + 
0.33986547881641 * H1x1_6 + -0.39788950643812 * H1x1_7 ;
2313296   +   H2x2_1  = H2x2_1  +    -0.69934298550944 * H1x2_1
2313297   +          +    -0.34972890643898 * H1x2_2  +     0.13067071374168 * H1x2_3
2313298   +          +    -0.35163870866778 * H1x2_4  +     0.68739106758866 * H1x2_5
2313299   +          +    -0.13482628170329 * H1x2_6  +    -0.03659282127619 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.69934298550944 * H1x2_1 + -0.34972890643898 * 
H1x2_2 + 0.13067071374168 * H1x2_3 + -0.35163870866778 * H1x2_4 + 0.68739106758866 * H1x2_5 + 
-0.13482628170329 * H1x2_6 + -0.03659282127619 * H1x2_7 ;
2313300   +   H2x2_2  = H2x2_2  +    -0.16537065948373 * H1x2_1
2313301   +          +     1.88602375412723 * H1x2_2  +     0.00246313998608 * H1x2_3
2313302   +          +    -0.38678545162214 * H1x2_4  +     1.62314892910576 * H1x2_5
2313303   +          +     1.14369813266427 * H1x2_6  +    -0.04547589616076 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.16537065948373 * H1x2_1 + 1.88602375412723 * H1x2_2 
+ 0.00246313998608 * H1x2_3 + -0.38678545162214 * H1x2_4 + 1.62314892910576 * H1x2_5 + 
1.14369813266427 * H1x2_6 + -0.04547589616076 * H1x2_7 ;
2313304   +   H2x2_3  = H2x2_3  +     0.25040248389011 * H1x2_1
2313305   +          +    -1.56534319969402 * H1x2_2  +     0.07686150326519 * H1x2_3
2313306   +          +     -0.9279505919723 * H1x2_4  +    -0.40426942169792 * H1x2_5
2313307   +          +      0.0625082015929 * H1x2_6  +    -1.06140294711643 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.25040248389011 * H1x2_1 + -1.56534319969402 * H1x2_2 
+ 0.07686150326519 * H1x2_3 + -0.9279505919723 * H1x2_4 + -0.40426942169792 * H1x2_5 + 
0.0625082015929 * H1x2_6 + -1.06140294711643 * H1x2_7 ;
2313308   +   H2x2_4  = H2x2_4  +     -0.4384763018657 * H1x2_1
2313309   +          +    -1.45966734038116 * H1x2_2  +      -2.034771072409 * H1x2_3
2313310   +          +    -0.09055740067076 * H1x2_4  +     1.51504299287048 * H1x2_5
2313311   +          +     0.15439799867788 * H1x2_6  +    -1.11828371545771 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -0.4384763018657 * H1x2_1 + -1.45966734038116 * H1x2_2 
+ -2.034771072409 * H1x2_3 + -0.09055740067076 * H1x2_4 + 1.51504299287048 * H1x2_5 + 
0.15439799867788 * H1x2_6 + -1.11828371545771 * H1x2_7 ;
2313312   +   H2x2_5  = H2x2_5  +     1.25750321874643 * H1x2_1
2313313   +          +    -0.65639925770112 * H1x2_2  +     -1.7659580690496 * H1x2_3
2313314   +          +       0.375442412611 * H1x2_4  +     0.00802128415855 * H1x2_5
2313315   +          +     0.75342656671485 * H1x2_6  +     1.64939805941174 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.25750321874643 * H1x2_1 + -0.65639925770112 * H1x2_2 
+ -1.7659580690496 * H1x2_3 + 0.375442412611 * H1x2_4 + 0.00802128415855 * H1x2_5 + 
0.75342656671485 * H1x2_6 + 1.64939805941174 * H1x2_7 ;
2313316   +   H2x2_6  = H2x2_6  +     1.32293752617916 * H1x2_1
2313317   +          +     0.48969975153948 * H1x2_2  +    -0.72928783660254 * H1x2_3
2313318   +          +     0.84727905047749 * H1x2_4  +     0.04670520107938 * H1x2_5
2313319   +          +     2.02862934142232 * H1x2_6  +    -0.56510756043393 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 1.32293752617916 * H1x2_1 + 0.48969975153948 * H1x2_2 
+ -0.72928783660254 * H1x2_3 + 0.84727905047749 * H1x2_4 + 0.04670520107938 * H1x2_5 + 
2.02862934142232 * H1x2_6 + -0.56510756043393 * H1x2_7 ;
2313320   +   H2x2_1  = H2x2_1  +       1.744725276854 * H1x3_1
2313321   +          +     0.13060858789431 * H1x3_2  +    -0.96737787454303 * H1x3_3
2313322   +          +    -0.33966254732699 * H1x3_4  +     2.39360262119688 * H1x3_5
2313323   +          +     2.58016170780679 * H1x3_6  +    -0.61611732156494 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 1.744725276854 * H1x3_1 + 0.13060858789431 * H1x3_2 + 
-0.96737787454303 * H1x3_3 + -0.33966254732699 * H1x3_4 + 2.39360262119688 * H1x3_5 + 
2.58016170780679 * H1x3_6 + -0.61611732156494 * H1x3_7 ;
2313324   +   H2x2_2  = H2x2_2  +    -0.81180308935434 * H1x3_1
2313325   +          +    -1.15566778124471 * H1x3_2  +     0.08550916456261 * H1x3_3
2313326   +          +     0.54919117407314 * H1x3_4  +     0.18927188150893 * H1x3_5
2313327   +          +    -0.15464567766004 * H1x3_6  +     0.22152383228096 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.81180308935434 * H1x3_1 + -1.15566778124471 * 
H1x3_2 + 0.08550916456261 * H1x3_3 + 0.54919117407314 * H1x3_4 + 0.18927188150893 * H1x3_5 + 
-0.15464567766004 * H1x3_6 + 0.22152383228096 * H1x3_7 ;
2313328   +   H2x2_3  = H2x2_3  +    -0.57155391194888 * H1x3_1
2313329   +          +    -0.80109748621438 * H1x3_2  +     -1.0755749661031 * H1x3_3
2313330   +          +     1.03082070302539 * H1x3_4  +    -2.00320570042417 * H1x3_5
2313331   +          +    -1.96298435256616 * H1x3_6  +     1.02097262601001 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.57155391194888 * H1x3_1 + -0.80109748621438 * 
H1x3_2 + -1.0755749661031 * H1x3_3 + 1.03082070302539 * H1x3_4 + -2.00320570042417 * H1x3_5 + 
-1.96298435256616 * H1x3_6 + 1.02097262601001 * H1x3_7 ;
2313332   +   H2x2_4  = H2x2_4  +     0.24801772968599 * H1x3_1
2313333   +          +    -2.13175914157416 * H1x3_2  +    -0.52172370749235 * H1x3_3
2313334   +          +     2.04158456409986 * H1x3_4  +     1.02332318578438 * H1x3_5
2313335   +          +      -0.428263055638 * H1x3_6  +    -0.10602300040145 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.24801772968599 * H1x3_1 + -2.13175914157416 * H1x3_2 
+ -0.52172370749235 * H1x3_3 + 2.04158456409986 * H1x3_4 + 1.02332318578438 * H1x3_5 + 
-0.428263055638 * H1x3_6 + -0.10602300040145 * H1x3_7 ;
2313336   +   H2x2_5  = H2x2_5  +    -1.00177979562809 * H1x3_1
2313337   +          +    -0.45285333413007 * H1x3_2  +    -0.35882884863392 * H1x3_3
2313338   +          +     0.23001711273663 * H1x3_4  +     0.77235765656369 * H1x3_5
2313339   +          +    -0.04383242140243 * H1x3_6  +    -0.25926963615252 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -1.00177979562809 * H1x3_1 + -0.45285333413007 * 
H1x3_2 + -0.35882884863392 * H1x3_3 + 0.23001711273663 * H1x3_4 + 0.77235765656369 * H1x3_5 + 
-0.04383242140243 * H1x3_6 + -0.25926963615252 * H1x3_7 ;
2313340   +   H2x2_6  = H2x2_6  +     0.84797826043534 * H1x3_1
2313341   +          +    -0.46927154831713 * H1x3_2  +    -1.09865845985096 * H1x3_3
2313342   +          +     0.59699123454307 * H1x3_4  +     1.59564014754161 * H1x3_5
2313343   +          +     1.33413776227036 * H1x3_6  +     0.33047800872361 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.84797826043534 * H1x3_1 + -0.46927154831713 * H1x3_2 
+ -1.09865845985096 * H1x3_3 + 0.59699123454307 * H1x3_4 + 1.59564014754161 * H1x3_5 + 
1.33413776227036 * H1x3_6 + 0.33047800872361 * H1x3_7 ;
2313344   +   H2x2_1  =    -3.05344936388855 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -3.05344936388855 + H2x2_1 ;
2313345   +   H2x2_2  =     0.31382645894355 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.31382645894355 + H2x2_2 ;
2313346   +   H2x2_3  =     0.31718668306888 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.31718668306888 + H2x2_3 ;
2313347   +   H2x2_4  =    -0.72340666209054 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.72340666209054 + H2x2_4 ;
2313348   +   H2x2_5  =    -0.59585228872544 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.59585228872544 + H2x2_5 ;
2313349   +   H2x2_6  =    -1.34027540207713 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = -1.34027540207713 + H2x2_6 ;
2313350   +   H2x2_7  = 0;
MPRINT(EM_DIAGRAM):   H2x2_7 = 0;
2313351   +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 , H2x2_7
2313352   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 , 
H2x2_7 );
2313353   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2313354   +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
2313355   +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
2313356   +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
2313357   +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
2313358   +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
2313359   +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
2313360   +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
2313361   +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
2313362   +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
2313363   +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
2313364   +   H2x2_6  = EXP(H2x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_6 = EXP(H2x2_6 - _MAX_);
2313365   +   _SUM_ = _SUM_ + H2x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_6 ;
2313366   +   H2x2_7  = EXP(H2x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_7 = EXP(H2x2_7 - _MAX_);
2313367   +   _SUM_ = _SUM_ + H2x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_7 ;
2313368   +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
2313369   +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
2313370   +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
2313371   +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
2313372   +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
2313373   +   H2x2_6  = H2x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 / _SUM_;
2313374   +   H2x2_7  = H2x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_7 = H2x2_7 / _SUM_;
2313375   +END;
MPRINT(EM_DIAGRAM):   END;
2313376   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2313377   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
2313378   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
2313379   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
2313380   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
2313381   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
2313382   +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
2313383   +   H2x2_7  = .;
MPRINT(EM_DIAGRAM):   H2x2_7 = .;
2313384   +END;
MPRINT(EM_DIAGRAM):   END;
2313385   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2313386   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
2313387   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2313388   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2313389   +   H3x1_1  =    -0.39436867680464 * H2x1_1  +    -0.20604911710368 * H2x1_2
2313390   +          +     0.29458107927185 * H2x1_3  +     0.66102662477481 * H2x1_4
2313391   +          +     0.62143406345506 * H2x1_5  +     2.63969484891539 * H2x1_6
2313392   +          +     2.03785323055294 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.39436867680464 * H2x1_1 + -0.20604911710368 * H2x1_2 + 
0.29458107927185 * H2x1_3 + 0.66102662477481 * H2x1_4 + 0.62143406345506 * H2x1_5 + 
2.63969484891539 * H2x1_6 + 2.03785323055294 * H2x1_7 ;
2313393   +   H3x1_2  =     0.14668618790671 * H2x1_1  +     0.53251535375334 * H2x1_2
2313394   +          +     1.73802487245889 * H2x1_3  +    -0.48818058655944 * H2x1_4
2313395   +          +     -0.6987810213409 * H2x1_5  +     1.61216865707221 * H2x1_6
2313396   +          +     0.02086486846601 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.14668618790671 * H2x1_1 + 0.53251535375334 * H2x1_2 + 
1.73802487245889 * H2x1_3 + -0.48818058655944 * H2x1_4 + -0.6987810213409 * H2x1_5 + 
1.61216865707221 * H2x1_6 + 0.02086486846601 * H2x1_7 ;
2313397   +   H3x1_3  =    -1.14054963328594 * H2x1_1  +    -0.75433574423253 * H2x1_2
2313398   +          +     0.06268113862558 * H2x1_3  +     -0.3981826777811 * H2x1_4
2313399   +          +    -0.04081627474016 * H2x1_5  +    -0.18547979458266 * H2x1_6
2313400   +          +     0.40248247309716 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.14054963328594 * H2x1_1 + -0.75433574423253 * H2x1_2 + 
0.06268113862558 * H2x1_3 + -0.3981826777811 * H2x1_4 + -0.04081627474016 * H2x1_5 + 
-0.18547979458266 * H2x1_6 + 0.40248247309716 * H2x1_7 ;
2313401   +   H3x1_4  =    -0.41046431364634 * H2x1_1  +     0.53558649664528 * H2x1_2
2313402   +          +     0.25426413492282 * H2x1_3  +     2.32537388539524 * H2x1_4
2313403   +          +    -0.95624400041487 * H2x1_5  +     -2.1423043357326 * H2x1_6
2313404   +          +     0.70189203885946 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.41046431364634 * H2x1_1 + 0.53558649664528 * H2x1_2 + 
0.25426413492282 * H2x1_3 + 2.32537388539524 * H2x1_4 + -0.95624400041487 * H2x1_5 + 
-2.1423043357326 * H2x1_6 + 0.70189203885946 * H2x1_7 ;
2313405   +   H3x1_5  =    -0.21139932639331 * H2x1_1  +      0.8853172209881 * H2x1_2
2313406   +          +    -0.23025284278478 * H2x1_3  +     1.30433450594503 * H2x1_4
2313407   +          +     1.26145590014333 * H2x1_5  +     0.63126627865104 * H2x1_6
2313408   +          +    -1.88455429451452 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -0.21139932639331 * H2x1_1 + 0.8853172209881 * H2x1_2 + 
-0.23025284278478 * H2x1_3 + 1.30433450594503 * H2x1_4 + 1.26145590014333 * H2x1_5 + 
0.63126627865104 * H2x1_6 + -1.88455429451452 * H2x1_7 ;
2313409   +   H3x1_6  =     0.99645242104414 * H2x1_1  +    -0.17835964967148 * H2x1_2
2313410   +          +     0.06539648561603 * H2x1_3  +     0.97412284078325 * H2x1_4
2313411   +          +     -1.3247680635275 * H2x1_5  +      0.8723025918678 * H2x1_6
2313412   +          +    -0.04328836172134 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.99645242104414 * H2x1_1 + -0.17835964967148 * H2x1_2 + 
0.06539648561603 * H2x1_3 + 0.97412284078325 * H2x1_4 + -1.3247680635275 * H2x1_5 + 
0.8723025918678 * H2x1_6 + -0.04328836172134 * H2x1_7 ;
2313413   +   H3x1_7  =     2.66887548952929 * H2x1_1  +    -0.86289888310949 * H2x1_2
2313414   +          +     1.58137421487648 * H2x1_3  +    -1.37105839507635 * H2x1_4
2313415   +          +    -0.65069986041129 * H2x1_5  +     2.50322156288062 * H2x1_6
2313416   +          +     0.75157328436087 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = 2.66887548952929 * H2x1_1 + -0.86289888310949 * H2x1_2 + 
1.58137421487648 * H2x1_3 + -1.37105839507635 * H2x1_4 + -0.65069986041129 * H2x1_5 + 
2.50322156288062 * H2x1_6 + 0.75157328436087 * H2x1_7 ;
2313417   +   H3x1_1  = H3x1_1  +     1.55317132694755 * H2x2_1
2313418   +          +     1.75656976582641 * H2x2_2  +    -1.25361089552085 * H2x2_3
2313419   +          +    -0.52984461837677 * H2x2_4  +     1.29915117873447 * H2x2_5
2313420   +          +    -1.03942372926622 * H2x2_6  +     0.13722887717178 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 1.55317132694755 * H2x2_1 + 1.75656976582641 * H2x2_2 
+ -1.25361089552085 * H2x2_3 + -0.52984461837677 * H2x2_4 + 1.29915117873447 * H2x2_5 + 
-1.03942372926622 * H2x2_6 + 0.13722887717178 * H2x2_7 ;
2313421   +   H3x1_2  = H3x1_2  +     0.88902418392614 * H2x2_1
2313422   +          +     1.35198205638356 * H2x2_2  +     1.49845421410078 * H2x2_3
2313423   +          +    -1.22318137674998 * H2x2_4  +     1.03485654068494 * H2x2_5
2313424   +          +    -0.88760495649169 * H2x2_6  +    -1.94135868960024 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.88902418392614 * H2x2_1 + 1.35198205638356 * H2x2_2 
+ 1.49845421410078 * H2x2_3 + -1.22318137674998 * H2x2_4 + 1.03485654068494 * H2x2_5 + 
-0.88760495649169 * H2x2_6 + -1.94135868960024 * H2x2_7 ;
2313425   +   H3x1_3  = H3x1_3  +     -0.5232166311723 * H2x2_1
2313426   +          +    -0.49154441995792 * H2x2_2  +     1.21222773866672 * H2x2_3
2313427   +          +     0.88954765096374 * H2x2_4  +     0.32666743913318 * H2x2_5
2313428   +          +     1.26201705110892 * H2x2_6  +    -2.46564869578322 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.5232166311723 * H2x2_1 + -0.49154441995792 * H2x2_2 
+ 1.21222773866672 * H2x2_3 + 0.88954765096374 * H2x2_4 + 0.32666743913318 * H2x2_5 + 
1.26201705110892 * H2x2_6 + -2.46564869578322 * H2x2_7 ;
2313429   +   H3x1_4  = H3x1_4  +     0.93897688204524 * H2x2_1
2313430   +          +    -0.56396325682963 * H2x2_2  +     0.60312223662348 * H2x2_3
2313431   +          +     0.05506195666559 * H2x2_4  +    -1.19478701476792 * H2x2_5
2313432   +          +     1.11111060864544 * H2x2_6  +     0.07602420470068 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.93897688204524 * H2x2_1 + -0.56396325682963 * H2x2_2 
+ 0.60312223662348 * H2x2_3 + 0.05506195666559 * H2x2_4 + -1.19478701476792 * H2x2_5 + 
1.11111060864544 * H2x2_6 + 0.07602420470068 * H2x2_7 ;
2313433   +   H3x1_5  = H3x1_5  +    -2.04067007195299 * H2x2_1
2313434   +          +    -0.24511447740547 * H2x2_2  +      1.1403782608351 * H2x2_3
2313435   +          +     0.28313253531571 * H2x2_4  +    -0.31001305293935 * H2x2_5
2313436   +          +     1.43972694265244 * H2x2_6  +     0.27081966717726 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -2.04067007195299 * H2x2_1 + -0.24511447740547 * 
H2x2_2 + 1.1403782608351 * H2x2_3 + 0.28313253531571 * H2x2_4 + -0.31001305293935 * H2x2_5 + 
1.43972694265244 * H2x2_6 + 0.27081966717726 * H2x2_7 ;
2313437   +   H3x1_6  = H3x1_6  +     1.53918759970091 * H2x2_1
2313438   +          +    -1.36834652818881 * H2x2_2  +    -0.97354088259421 * H2x2_3
2313439   +          +     0.73052173697294 * H2x2_4  +     1.34716412811946 * H2x2_5
2313440   +          +     1.66261041249676 * H2x2_6  +    -0.99719318696356 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + 1.53918759970091 * H2x2_1 + -1.36834652818881 * H2x2_2 
+ -0.97354088259421 * H2x2_3 + 0.73052173697294 * H2x2_4 + 1.34716412811946 * H2x2_5 + 
1.66261041249676 * H2x2_6 + -0.99719318696356 * H2x2_7 ;
2313441   +   H3x1_7  = H3x1_7  +     1.11994694673604 * H2x2_1
2313442   +          +     -1.6803356528873 * H2x2_2  +    -0.12962793678977 * H2x2_3
2313443   +          +    -0.71896094589725 * H2x2_4  +     0.46037684620833 * H2x2_5
2313444   +          +     0.25911483872618 * H2x2_6  +     1.00876479730932 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = H3x1_7 + 1.11994694673604 * H2x2_1 + -1.6803356528873 * H2x2_2 
+ -0.12962793678977 * H2x2_3 + -0.71896094589725 * H2x2_4 + 0.46037684620833 * H2x2_5 + 
0.25911483872618 * H2x2_6 + 1.00876479730932 * H2x2_7 ;
2313445   +   H3x1_1  =     1.52228889950912 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.52228889950912 + H3x1_1 ;
2313446   +   H3x1_2  =    -0.46625781761332 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.46625781761332 + H3x1_2 ;
2313447   +   H3x1_3  =     0.11008388635615 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.11008388635615 + H3x1_3 ;
2313448   +   H3x1_4  =    -0.38333236869719 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.38333236869719 + H3x1_4 ;
2313449   +   H3x1_5  =    -1.36620648378402 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -1.36620648378402 + H3x1_5 ;
2313450   +   H3x1_6  =     0.41780608126276 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.41780608126276 + H3x1_6 ;
2313451   +   H3x1_7  =    -0.69490040783623 + H3x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = -0.69490040783623 + H3x1_7 ;
2313452   +   H3x1_1  = SIN(H3x1_1 );
MPRINT(EM_DIAGRAM):   H3x1_1 = SIN(H3x1_1 );
2313453   +   H3x1_2  = SIN(H3x1_2 );
MPRINT(EM_DIAGRAM):   H3x1_2 = SIN(H3x1_2 );
2313454   +   H3x1_3  = SIN(H3x1_3 );
MPRINT(EM_DIAGRAM):   H3x1_3 = SIN(H3x1_3 );
2313455   +   H3x1_4  = SIN(H3x1_4 );
MPRINT(EM_DIAGRAM):   H3x1_4 = SIN(H3x1_4 );
2313456   +   H3x1_5  = SIN(H3x1_5 );
MPRINT(EM_DIAGRAM):   H3x1_5 = SIN(H3x1_5 );
2313457   +   H3x1_6  = SIN(H3x1_6 );
MPRINT(EM_DIAGRAM):   H3x1_6 = SIN(H3x1_6 );
2313458   +   H3x1_7  = SIN(H3x1_7 );
MPRINT(EM_DIAGRAM):   H3x1_7 = SIN(H3x1_7 );
2313459   +END;
MPRINT(EM_DIAGRAM):   END;
2313460   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2313461   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
2313462   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
2313463   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
2313464   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
2313465   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
2313466   +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
2313467   +   H3x1_7  = .;
MPRINT(EM_DIAGRAM):   H3x1_7 = .;
2313468   +END;
MPRINT(EM_DIAGRAM):   END;
2313469   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2313470   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2313471   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2313472   +
2313473   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2313474   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2313475   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2313476   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2313477   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2313478   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2313479   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2313480   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2313481   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2313482   +end;
MPRINT(EM_DIAGRAM):   end;
2313483   +else do;
MPRINT(EM_DIAGRAM):   else do;
2313484   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2313485   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2313486   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2313487   +   end;
MPRINT(EM_DIAGRAM):   end;
2313488   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2313489   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2313490   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2313491   +   end;
MPRINT(EM_DIAGRAM):   end;
2313492   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2313493   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2313494   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2313495   +   end;
MPRINT(EM_DIAGRAM):   end;
2313496   +end;
MPRINT(EM_DIAGRAM):   end;
2313497   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2313498   +   P_DepVar1  =    -2.07102874283902 * H3x1_1  +     2.04799607124649 * H3x1_2
2313499   +          +    -0.05444449856749 * H3x1_3  +    -3.76440287030853 * H3x1_4
2313500   +          +    -0.62776678498994 * H3x1_5  +    -1.00383135301243 * H3x1_6
2313501   +          +     2.26027843968818 * H3x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.07102874283902 * H3x1_1 + 2.04799607124649 * H3x1_2 + 
-0.05444449856749 * H3x1_3 + -3.76440287030853 * H3x1_4 + -0.62776678498994 * H3x1_5 + 
-1.00383135301243 * H3x1_6 + 2.26027843968818 * H3x1_7 ;
2313502   +   P_DepVar1  =     0.51137297979162 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.51137297979162 + P_DepVar1 ;
2313503   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2313504   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2313505   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2313506   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2313507   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2313508   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2313509   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2313510   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2313511   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2313512   +END;
MPRINT(EM_DIAGRAM):   END;
2313513   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2313514   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2313515   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2313516   +END;
MPRINT(EM_DIAGRAM):   END;
2313517   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2313518   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2313519   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2313520   +END;
MPRINT(EM_DIAGRAM):   END;
2313521   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2313522   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2313523   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2313524   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2313525   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2313526   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2313527   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2313528   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2313529   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2313530   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2313531   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2313532   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2313533   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2313534   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2313535   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2313536   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2313537   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2313538   +END;
MPRINT(EM_DIAGRAM):   END;
2313539   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2313540   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2313541   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2313542   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2313543   +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
2313544   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2313545   +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
2313546   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2313547   +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
2313548   +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
2313549   +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
2313550   +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
2313551   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2313552   +* Renaming Into variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural12;
2313553   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2313554   +length AutoNeural12_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural12_I_DepVar $32;
2313555   +drop AutoNeural12_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_I_DepVar;
2313556   +AutoNeural12_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural12_I_DepVar = I_DepVar;
2313557   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2313558   +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
2313559   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2313560   +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
2313561   +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
2313562   +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
2313563   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2313564   +* Ensmbl38: Voting to produce predicted target;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Voting to produce predicted target;
2313565   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2313566   +array Ensmbl38_post{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl38_post{2} _temporary_;
2313567   +array Ensmbl38_count{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl38_count{2} _temporary_;
2313568   +array Ensmbl38_level{2} $32 _temporary_ (
2313569   +"1"
2313570   +"0"
2313571   +);
MPRINT(EM_DIAGRAM):   array Ensmbl38_level{2} $32 _temporary_ ( "1" "0" );
2313572   +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
2313573   +Ensmbl38_post{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{i} = 0;
2313574   +Ensmbl38_count{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{i} = 0;
2313575   +end;
MPRINT(EM_DIAGRAM):   end;
2313576   +if AutoNeural6_I_DepVar = Ensmbl38_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural6_I_DepVar = Ensmbl38_level{1} then do;
2313577   +Ensmbl38_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{1} + 1;
2313578   +Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural6_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural6_P_DepVar1;
2313579   +end;
MPRINT(EM_DIAGRAM):   end;
2313580   +if AutoNeural7_I_DepVar = Ensmbl38_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural7_I_DepVar = Ensmbl38_level{1} then do;
2313581   +Ensmbl38_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{1} + 1;
2313582   +Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural7_P_DepVar1;
2313583   +end;
MPRINT(EM_DIAGRAM):   end;
2313584   +if AutoNeural8_I_DepVar = Ensmbl38_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural8_I_DepVar = Ensmbl38_level{1} then do;
2313585   +Ensmbl38_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{1} + 1;
2313586   +Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural8_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural8_P_DepVar1;
2313587   +end;
MPRINT(EM_DIAGRAM):   end;
2313588   +if AutoNeural10_I_DepVar = Ensmbl38_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural10_I_DepVar = Ensmbl38_level{1} then do;
2313589   +Ensmbl38_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{1} + 1;
2313590   +Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural10_P_DepVar1;
2313591   +end;
MPRINT(EM_DIAGRAM):   end;
2313592   +if AutoNeural9_I_DepVar = Ensmbl38_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural9_I_DepVar = Ensmbl38_level{1} then do;
2313593   +Ensmbl38_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{1} + 1;
2313594   +Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural9_P_DepVar1;
2313595   +end;
MPRINT(EM_DIAGRAM):   end;
2313596   +if AutoNeural11_I_DepVar = Ensmbl38_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural11_I_DepVar = Ensmbl38_level{1} then do;
2313597   +Ensmbl38_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{1} + 1;
2313598   +Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural11_P_DepVar1;
2313599   +end;
MPRINT(EM_DIAGRAM):   end;
2313600   +if AutoNeural12_I_DepVar = Ensmbl38_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural12_I_DepVar = Ensmbl38_level{1} then do;
2313601   +Ensmbl38_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{1} + 1;
2313602   +Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural12_P_DepVar1;
2313603   +end;
MPRINT(EM_DIAGRAM):   end;
2313604   +if AutoNeural6_I_DepVar = Ensmbl38_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural6_I_DepVar = Ensmbl38_level{2} then do;
2313605   +Ensmbl38_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{2} + 1;
2313606   +Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural6_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural6_P_DepVar0;
2313607   +end;
MPRINT(EM_DIAGRAM):   end;
2313608   +if AutoNeural7_I_DepVar = Ensmbl38_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural7_I_DepVar = Ensmbl38_level{2} then do;
2313609   +Ensmbl38_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{2} + 1;
2313610   +Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural7_P_DepVar0;
2313611   +end;
MPRINT(EM_DIAGRAM):   end;
2313612   +if AutoNeural8_I_DepVar = Ensmbl38_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural8_I_DepVar = Ensmbl38_level{2} then do;
2313613   +Ensmbl38_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{2} + 1;
2313614   +Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural8_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural8_P_DepVar0;
2313615   +end;
MPRINT(EM_DIAGRAM):   end;
2313616   +if AutoNeural10_I_DepVar = Ensmbl38_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural10_I_DepVar = Ensmbl38_level{2} then do;
2313617   +Ensmbl38_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{2} + 1;
2313618   +Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural10_P_DepVar0;
2313619   +end;
MPRINT(EM_DIAGRAM):   end;
2313620   +if AutoNeural9_I_DepVar = Ensmbl38_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural9_I_DepVar = Ensmbl38_level{2} then do;
2313621   +Ensmbl38_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{2} + 1;
2313622   +Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural9_P_DepVar0;
2313623   +end;
MPRINT(EM_DIAGRAM):   end;
2313624   +if AutoNeural11_I_DepVar = Ensmbl38_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural11_I_DepVar = Ensmbl38_level{2} then do;
2313625   +Ensmbl38_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{2} + 1;
2313626   +Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural11_P_DepVar0;
2313627   +end;
MPRINT(EM_DIAGRAM):   end;
2313628   +if AutoNeural12_I_DepVar = Ensmbl38_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural12_I_DepVar = Ensmbl38_level{2} then do;
2313629   +Ensmbl38_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{2} + 1;
2313630   +Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural12_P_DepVar0;
2313631   +end;
MPRINT(EM_DIAGRAM):   end;
2313632   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2313633   +* Ensmbl38: Determine Into Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Determine Into Variable;
2313634   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2313635   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
2313636   +drop i vote_count vote_post;
MPRINT(EM_DIAGRAM):   drop i vote_count vote_post;
2313637   +vote_count = max(
2313638   +Ensmbl38_count{1} ,
2313639   +Ensmbl38_count{2}
2313640   +);
MPRINT(EM_DIAGRAM):   vote_count = max( Ensmbl38_count{1} , Ensmbl38_count{2} );
2313641   +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
2313642   +if Ensmbl38_count{i}=vote_count and Ensmbl38_post{i}>vote_post then do;
MPRINT(EM_DIAGRAM):   if Ensmbl38_count{i}=vote_count and Ensmbl38_post{i}>vote_post then do;
2313643   +I_DepVar = Ensmbl38_level{i};
MPRINT(EM_DIAGRAM):   I_DepVar = Ensmbl38_level{i};
2313644   +vote_post = Ensmbl38_count{i};
MPRINT(EM_DIAGRAM):   vote_post = Ensmbl38_count{i};
2313645   +end;
MPRINT(EM_DIAGRAM):   end;
2313646   +end;
MPRINT(EM_DIAGRAM):   end;
2313647   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2313648   +* Ensmbl38: Compute posterior vars using models predicting the chosen level;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Compute posterior vars using models predicting the chosen 
level;
2313649   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2313650   +P_DepVar1 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
2313651   +P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2313652   +if I_DepVar = AutoNeural6_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural6_I_DepVar then do;
2313653   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural6_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural6_P_DepVar1;
2313654   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural6_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural6_P_DepVar0;
2313655   +end;
MPRINT(EM_DIAGRAM):   end;
2313656   +if I_DepVar = AutoNeural7_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural7_I_DepVar then do;
2313657   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural7_P_DepVar1;
2313658   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural7_P_DepVar0;
2313659   +end;
MPRINT(EM_DIAGRAM):   end;
2313660   +if I_DepVar = AutoNeural8_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural8_I_DepVar then do;
2313661   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural8_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural8_P_DepVar1;
2313662   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural8_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural8_P_DepVar0;
2313663   +end;
MPRINT(EM_DIAGRAM):   end;
2313664   +if I_DepVar = AutoNeural10_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural10_I_DepVar then do;
2313665   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural10_P_DepVar1;
2313666   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural10_P_DepVar0;
2313667   +end;
MPRINT(EM_DIAGRAM):   end;
2313668   +if I_DepVar = AutoNeural9_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural9_I_DepVar then do;
2313669   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural9_P_DepVar1;
2313670   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural9_P_DepVar0;
2313671   +end;
MPRINT(EM_DIAGRAM):   end;
2313672   +if I_DepVar = AutoNeural11_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural11_I_DepVar then do;
2313673   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural11_P_DepVar1;
2313674   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural11_P_DepVar0;
2313675   +end;
MPRINT(EM_DIAGRAM):   end;
2313676   +if I_DepVar = AutoNeural12_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural12_I_DepVar then do;
2313677   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural12_P_DepVar1;
2313678   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural12_P_DepVar0;
2313679   +end;
MPRINT(EM_DIAGRAM):   end;
2313680   +* Ensmbl38: Averaging posterior;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Averaging posterior;
2313681   +P_DepVar1 = P_DepVar1/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1/vote_count;
2313682   +P_DepVar0 = P_DepVar0/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0/vote_count;
2313683   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2313684   +* Ensmbl38: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Producing Unformatted variable;
2313685   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2313686   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
2313687   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
2313688   +else
2313689   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
2313690   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2313691   +* Ensmbl38: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Computing _WARN_ Variable;
2313692   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2313693   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2313694   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
2313695   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
2313696   +if index(AUTONEURAL6_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2313696  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2313697   +if index(AUTONEURAL6_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2313697  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2313698   +if index(AUTONEURAL6_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2313698  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2313699   +if index(AUTONEURAL6_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2313699  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2313700   +if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2313700  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2313701   +if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2313701  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2313702   +if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2313702  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2313703   +if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2313703  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2313704   +if index(AUTONEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2313704  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2313705   +if index(AUTONEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2313705  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2313706   +if index(AUTONEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2313706  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2313707   +if index(AUTONEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2313707  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2313708   +if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2313708  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2313709   +if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2313709  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2313710   +if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2313710  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2313711   +if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2313711  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2313712   +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2313712  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2313713   +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2313713  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2313714   +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2313714  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2313715   +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2313715  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2313716   +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2313716  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2313717   +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2313717  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2313718   +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2313718  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2313719   +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2313719  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2313720   +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2313720  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2313721   +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2313721  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2313722   +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2313722  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2313723   +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2313723  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2313724   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2313725   +* Ensmbl38: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Computing Residual Vars;
2313726   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2313727   +if
2313728   +F_DepVar NE '1'
2313729   +AND F_DepVar NE '0'
2313730   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
2313731   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2313732   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2313733   +end;
MPRINT(EM_DIAGRAM):   end;
2313734   +else do;
MPRINT(EM_DIAGRAM):   else do;
2313735   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
2313736   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
2313737   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
2313738   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
2313739   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
2313740   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
2313741   +END;
MPRINT(EM_DIAGRAM):   END;
2313742   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2313743    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL38_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL6_TRAIN.VIEW used (Total process time):
      real time           0.22 seconds
      cpu time            0.21 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.23 seconds
      cpu time            0.23 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2313744    quit;
2313745    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
2313746    filename emflow
2313746  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl38\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl38\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Scoring AUTONEURAL6_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2313747    *------------------------------------------------------------*;
2313748    * Ensmbl38: Scoring AUTONEURAL6_VALIDATE data;
2313749    *------------------------------------------------------------*;
2313750    data EMWS8.Ensmbl38_VALIDATE
2313751    / view=EMWS8.Ensmbl38_VALIDATE
2313752    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl38_VALIDATE / view=EMWS8.Ensmbl38_VALIDATE ;
2313753    set EMWS8.AutoNeural6_VALIDATE
2313754    ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural6_VALIDATE ;
2313755    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl38\EMFLOWSCORE.sas.
2313756   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2313757   +* Ensmbl38: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Combine model for DepVar;
2313758   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2313759   +* Ensmbl38: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Scoring Code of model 1 of 7;
2313760   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2313761   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2313762   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
2313763   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2313764   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
2313765   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2313766   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2313767   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
2313768   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
2313769   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
2313770   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2313771   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2313772   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
2313773   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2313774   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
2313775   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2313776   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2313777   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
2313778   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2313779   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
2313780   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2313781   +
2313782   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2313783   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2313783  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2313784   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2313785   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2313786   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2313787   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2313788   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
2313789   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2313790   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
2313791   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2313792   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
2313793   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2313794   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2313795   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2313796   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2313797   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2313798   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2313799   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
2313800   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2313801   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
2313802   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2313803   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
2313804   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2313805   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2313806   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
2313807   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2313808   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
2313809   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2313810   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2313811   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2313812   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2313813   +* NODE: AutoNeural6;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural6;
2313814   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2313815   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2313816   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2313817   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2313818   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2313819   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2313820   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2313821   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2313822   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2313823   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2313824   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2313825   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2313826   +LENGTH _WARN_ $4
2313827   +      F_DepVar  $ 12
2313828   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2313829   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2313830   +
2313831   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2313832   +
2313833   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2313834   +
2313835   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2313836   +
2313837   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2313838   +
2313839   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2313840   +
2313841   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2313842   +
2313843   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2313844   +
2313845   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2313846   +
2313847   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2313848   +
2313849   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2313850   +
2313851   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2313852   +
2313853   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2313854   +
2313855   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2313856   +
2313857   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2313858   +
2313859   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2313860   +
2313861   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2313862   +
2313863   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2313864   +
2313865   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2313866   +
2313867   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2313868   +
2313869   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2313870   +
2313871   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2313872   +
2313873   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2313874   +
2313875   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2313876   +
2313877   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2313878   +
2313879   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2313880   +
2313881   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2313882   +
2313883   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2313884   +
2313885   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2313886   +
2313887   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2313888   +
2313889   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2313890   +
2313891   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2313892   +
2313893   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2313894   +
2313895   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2313896   +
2313897   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2313898   +
2313899   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2313900   +
2313901   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2313902   +
2313903   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2313904   +
2313905   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2313906   +
2313907   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2313908   +
2313909   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2313910   +
2313911   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2313912   +
2313913   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
2313914   +
2313915   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
2313916   +
2313917   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2313918   +
2313919   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2313920   +
2313921   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2313922   +
2313923   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2313924   +
2313925   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2313926   +
2313927   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2313928   +
2313929   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2313930   +
2313931   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2313932   +
2313933   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2313934   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2313935   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2313936   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2313937   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2313938   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2313939   +end;
MPRINT(EM_DIAGRAM):   end;
2313940   +else do;
MPRINT(EM_DIAGRAM):   else do;
2313941   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2313942   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2313943   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2313944   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2313945   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2313946   +   end;
MPRINT(EM_DIAGRAM):   end;
2313947   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2313948   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2313949   +   end;
MPRINT(EM_DIAGRAM):   end;
2313950   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2313951   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2313952   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2313953   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2313954   +   end;
MPRINT(EM_DIAGRAM):   end;
2313955   +end;
MPRINT(EM_DIAGRAM):   end;
2313956   +
2313957   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2313958   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2313959   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2313960   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2313961   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2313962   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2313963   +end;
MPRINT(EM_DIAGRAM):   end;
2313964   +else do;
MPRINT(EM_DIAGRAM):   else do;
2313965   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2313966   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2313967   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2313968   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2313969   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2313970   +   end;
MPRINT(EM_DIAGRAM):   end;
2313971   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2313972   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2313973   +   end;
MPRINT(EM_DIAGRAM):   end;
2313974   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2313975   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2313976   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2313977   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2313978   +   end;
MPRINT(EM_DIAGRAM):   end;
2313979   +end;
MPRINT(EM_DIAGRAM):   end;
2313980   +
2313981   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2313982   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2313983   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2313984   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2313985   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2313986   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2313987   +end;
MPRINT(EM_DIAGRAM):   end;
2313988   +else do;
MPRINT(EM_DIAGRAM):   else do;
2313989   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2313990   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2313991   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2313992   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2313993   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2313994   +   end;
MPRINT(EM_DIAGRAM):   end;
2313995   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2313996   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2313997   +   end;
MPRINT(EM_DIAGRAM):   end;
2313998   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2313999   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2314000   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2314001   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2314002   +   end;
MPRINT(EM_DIAGRAM):   end;
2314003   +end;
MPRINT(EM_DIAGRAM):   end;
2314004   +
2314005   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2314006   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2314007   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2314008   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2314009   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2314010   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2314011   +end;
MPRINT(EM_DIAGRAM):   end;
2314012   +else do;
MPRINT(EM_DIAGRAM):   else do;
2314013   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2314014   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2314015   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2314016   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2314017   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2314018   +   end;
MPRINT(EM_DIAGRAM):   end;
2314019   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2314020   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2314021   +   end;
MPRINT(EM_DIAGRAM):   end;
2314022   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2314023   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2314024   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2314025   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2314026   +   end;
MPRINT(EM_DIAGRAM):   end;
2314027   +end;
MPRINT(EM_DIAGRAM):   end;
2314028   +
2314029   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2314030   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2314031   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2314032   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2314033   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2314034   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2314035   +end;
MPRINT(EM_DIAGRAM):   end;
2314036   +else do;
MPRINT(EM_DIAGRAM):   else do;
2314037   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2314038   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2314039   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2314040   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2314041   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2314042   +   end;
MPRINT(EM_DIAGRAM):   end;
2314043   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2314044   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2314045   +   end;
MPRINT(EM_DIAGRAM):   end;
2314046   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2314047   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2314048   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2314049   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2314050   +   end;
MPRINT(EM_DIAGRAM):   end;
2314051   +end;
MPRINT(EM_DIAGRAM):   end;
2314052   +
2314053   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2314054   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2314055   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2314056   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2314057   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2314058   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2314059   +end;
MPRINT(EM_DIAGRAM):   end;
2314060   +else do;
MPRINT(EM_DIAGRAM):   else do;
2314061   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2314062   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2314063   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2314064   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2314065   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2314066   +   end;
MPRINT(EM_DIAGRAM):   end;
2314067   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2314068   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2314069   +   end;
MPRINT(EM_DIAGRAM):   end;
2314070   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2314071   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2314072   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2314073   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2314074   +   end;
MPRINT(EM_DIAGRAM):   end;
2314075   +end;
MPRINT(EM_DIAGRAM):   end;
2314076   +
2314077   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2314078   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2314079   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2314080   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2314081   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2314082   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2314083   +end;
MPRINT(EM_DIAGRAM):   end;
2314084   +else do;
MPRINT(EM_DIAGRAM):   else do;
2314085   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2314086   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2314087   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2314088   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2314089   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2314090   +   end;
MPRINT(EM_DIAGRAM):   end;
2314091   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2314092   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2314093   +   end;
MPRINT(EM_DIAGRAM):   end;
2314094   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2314095   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2314096   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2314097   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2314098   +   end;
MPRINT(EM_DIAGRAM):   end;
2314099   +end;
MPRINT(EM_DIAGRAM):   end;
2314100   +
2314101   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2314102   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2314103   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2314104   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2314105   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2314106   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2314107   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2314108   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2314109   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2314110   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2314111   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2314112   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2314113   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2314114   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2314115   +end;
MPRINT(EM_DIAGRAM):   end;
2314116   +else do;
MPRINT(EM_DIAGRAM):   else do;
2314117   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2314118   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2314119   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2314120   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2314121   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2314122   +   end;
MPRINT(EM_DIAGRAM):   end;
2314123   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2314124   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2314125   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2314126   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2314127   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2314128   +   end;
MPRINT(EM_DIAGRAM):   end;
2314129   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2314130   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2314131   +   end;
MPRINT(EM_DIAGRAM):   end;
2314132   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2314133   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2314134   +   end;
MPRINT(EM_DIAGRAM):   end;
2314135   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2314136   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2314137   +   end;
MPRINT(EM_DIAGRAM):   end;
2314138   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2314139   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2314140   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2314141   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2314142   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2314143   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2314144   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2314145   +   end;
MPRINT(EM_DIAGRAM):   end;
2314146   +end;
MPRINT(EM_DIAGRAM):   end;
2314147   +
2314148   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2314149   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2314150   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2314151   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2314152   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2314153   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2314154   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2314155   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2314156   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2314157   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2314158   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2314159   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2314160   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2314161   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2314162   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2314163   +end;
MPRINT(EM_DIAGRAM):   end;
2314164   +else do;
MPRINT(EM_DIAGRAM):   else do;
2314165   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2314166   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2314167   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2314168   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2314169   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2314170   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2314171   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2314172   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2314173   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2314174   +         end;
MPRINT(EM_DIAGRAM):   end;
2314175   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2314176   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2314177   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2314178   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2314179   +            end;
MPRINT(EM_DIAGRAM):   end;
2314180   +         end;
MPRINT(EM_DIAGRAM):   end;
2314181   +      end;
MPRINT(EM_DIAGRAM):   end;
2314182   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2314183   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2314184   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2314185   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2314186   +         end;
MPRINT(EM_DIAGRAM):   end;
2314187   +      end;
MPRINT(EM_DIAGRAM):   end;
2314188   +   end;
MPRINT(EM_DIAGRAM):   end;
2314189   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2314190   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2314191   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2314192   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2314193   +      end;
MPRINT(EM_DIAGRAM):   end;
2314194   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2314195   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2314196   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2314197   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2314198   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2314199   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2314200   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2314201   +         end;
MPRINT(EM_DIAGRAM):   end;
2314202   +      end;
MPRINT(EM_DIAGRAM):   end;
2314203   +   end;
MPRINT(EM_DIAGRAM):   end;
2314204   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2314205   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2314206   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2314207   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2314208   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2314209   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2314210   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2314211   +   end;
MPRINT(EM_DIAGRAM):   end;
2314212   +end;
MPRINT(EM_DIAGRAM):   end;
2314213   +
2314214   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2314215   +*** Checking missing input Interval
2314216   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2314217   +
2314218   +IF NMISS(
2314219   +   AcceptedCmpTotal ,
2314220   +   Age ,
2314221   +   Frq ,
2314222   +   Income ,
2314223   +   Kidhome ,
2314224   +   Mnt ,
2314225   +   MntFishProducts ,
2314226   +   MntFruits ,
2314227   +   MntGoldProds ,
2314228   +   MntMeatProducts ,
2314229   +   MntSweetProducts ,
2314230   +   MntWines ,
2314231   +   MonthsAsCustomer ,
2314232   +   NumCatalogPurchases ,
2314233   +   NumDealsPurchases ,
2314234   +   NumDistPurchases ,
2314235   +   NumStorePurchases ,
2314236   +   NumWebPurchases ,
2314237   +   NumWebVisitsMonth ,
2314238   +   RFMstat ,
2314239   +   RMntFrq ,
2314240   +   Recency ,
2314241   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2314242   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2314243   +
2314244   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2314245   +END;
MPRINT(EM_DIAGRAM):   END;
2314246   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2314247   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2314248   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2314249   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2314250   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2314251   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2314252   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2314253   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2314254   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2314255   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2314256   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2314257   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2314258   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2314259   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2314260   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2314261   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2314262   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2314263   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2314264   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2314265   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2314266   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2314267   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2314268   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2314269   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2314270   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2314271   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2314272   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2314273   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2314274   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2314275   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2314276   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2314277   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2314278   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2314279   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2314280   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2314281   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2314282   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2314283   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2314284   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2314285   +END;
MPRINT(EM_DIAGRAM):   END;
2314286   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2314287   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2314288   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2314289   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2314290   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2314291   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2314292   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2314293   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2314294   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2314295   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2314296   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2314297   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2314298   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2314299   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2314300   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2314301   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2314302   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2314303   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2314304   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2314305   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2314306   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2314307   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2314308   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2314309   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2314310   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2314311   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2314312   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2314313   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2314314   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2314315   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2314316   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2314317   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2314318   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2314319   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2314320   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2314321   +   ELSE S_NumCatalogPurchases
2314322   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2314323   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2314324   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2314325   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2314326   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2314327   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2314328   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2314329   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2314330   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2314331   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2314332   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2314333   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2314334   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2314335   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2314336   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2314337   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2314338   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2314339   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2314340   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2314341   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2314342   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2314343   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2314344   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2314345   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2314346   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2314347   +END;
MPRINT(EM_DIAGRAM):   END;
2314348   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2314349   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2314350   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2314351   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2314352   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2314353   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2314354   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2314355   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2314356   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2314357   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2314358   +   H1x1_1  =    -3.58610125218709 * S_AcceptedCmpTotal
2314359   +          +      0.1034811843747 * S_Age  +     0.39544028595127 * S_Frq
2314360   +          +    -0.18231722539263 * S_Income  +    -0.03870407570941 *
2314361   +        S_Kidhome  +    -1.16091345020536 * S_Mnt  +     1.24392687313576 *
2314362   +        S_MntFishProducts  +      0.5171197802007 * S_MntFruits
2314363   +          +    -0.29481140967179 * S_MntGoldProds  +     -6.3245339832634 *
2314364   +        S_MntMeatProducts  +     0.05701652400298 * S_MntSweetProducts
2314365   +          +     2.01183524149713 * S_MntWines  +      0.1559752121464 *
2314366   +        S_MonthsAsCustomer  +    -0.99459554032634 * S_NumCatalogPurchases
2314367   +          +    -1.19682864242203 * S_NumDealsPurchases
2314368   +          +     0.18491015618084 * S_NumDistPurchases
2314369   +          +     1.22999585210812 * S_NumStorePurchases
2314370   +          +     1.21627782358382 * S_NumWebPurchases
2314371   +          +    -0.64580024249846 * S_NumWebVisitsMonth
2314372   +          +       -1.52926696879 * S_RFMstat  +     0.09101674367882 *
2314373   +        S_RMntFrq  +     0.46175359879811 * S_Recency
2314374   +          +      0.1705852499504 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -3.58610125218709 * S_AcceptedCmpTotal + 0.1034811843747 * 
S_Age + 0.39544028595127 * S_Frq + -0.18231722539263 * S_Income + -0.03870407570941 * 
S_Kidhome + -1.16091345020536 * S_Mnt + 1.24392687313576 * S_MntFishProducts + 0.5171197802007 
* S_MntFruits + -0.29481140967179 * S_MntGoldProds + -6.3245339832634 * S_MntMeatProducts + 
0.05701652400298 * S_MntSweetProducts + 2.01183524149713 * S_MntWines + 0.1559752121464 * 
S_MonthsAsCustomer + -0.99459554032634 * S_NumCatalogPurchases + -1.19682864242203 * 
S_NumDealsPurchases + 0.18491015618084 * S_NumDistPurchases + 1.22999585210812 * 
S_NumStorePurchases + 1.21627782358382 * S_NumWebPurchases + -0.64580024249846 * 
S_NumWebVisitsMonth + -1.52926696879 * S_RFMstat + 0.09101674367882 * S_RMntFrq + 
0.46175359879811 * S_Recency + 0.1705852499504 * S_Teenhome ;
2314375   +   H1x1_1  = H1x1_1  +     2.18474005035414 * AcceptedCmp10
2314376   +          +    -1.53162389083003 * AcceptedCmp20  +    -2.29277671168891 *
2314377   +        AcceptedCmp30  +    -1.81334015960325 * AcceptedCmp40
2314378   +          +     3.00906427900623 * AcceptedCmp50  +    -0.01785398957027 *
2314379   +        Complain0  +     0.09533245215119 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 2.18474005035414 * AcceptedCmp10 + -1.53162389083003 * 
AcceptedCmp20 + -2.29277671168891 * AcceptedCmp30 + -1.81334015960325 * AcceptedCmp40 + 
3.00906427900623 * AcceptedCmp50 + -0.01785398957027 * Complain0 + 0.09533245215119 * 
HigherEducationBinary0 ;
2314380   +   H1x1_1  = H1x1_1  +    -0.19679105832724 * Education2n_Cycle
2314381   +          +    -0.01818107423643 * EducationBasic  +    -0.18996010075668 *
2314382   +        EducationGraduation  +     0.09891975371592 * EducationMaster
2314383   +          +     0.22010007588989 * Marital_StatusDivorced
2314384   +          +    -0.15233151420698 * Marital_StatusMarried
2314385   +          +    -0.03753447021411 * Marital_StatusSingle
2314386   +          +    -0.12393264098828 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.19679105832724 * Education2n_Cycle + 
-0.01818107423643 * EducationBasic + -0.18996010075668 * EducationGraduation + 
0.09891975371592 * EducationMaster + 0.22010007588989 * Marital_StatusDivorced + 
-0.15233151420698 * Marital_StatusMarried + -0.03753447021411 * Marital_StatusSingle + 
-0.12393264098828 * Marital_StatusTogether ;
2314387   +   H1x1_1  =    -2.03360566990293 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.03360566990293 + H1x1_1 ;
2314388   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2314389   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2314390   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2314391   +END;
MPRINT(EM_DIAGRAM):   END;
2314392   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2314393   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2314394   +END;
MPRINT(EM_DIAGRAM):   END;
2314395   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2314396   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2314397   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2314398   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2314399   +   H1x2_1  =    -1.34015862386497 * S_AcceptedCmpTotal
2314400   +          +    -0.12636545702442 * S_Age  +     -0.5924835968803 * S_Frq
2314401   +          +    -1.16470189655356 * S_Income  +     0.83635320773782 *
2314402   +        S_Kidhome  +     0.46426970005348 * S_Mnt  +      0.0582061340736 *
2314403   +        S_MntFishProducts  +     0.03283536111015 * S_MntFruits
2314404   +          +    -0.17688658751969 * S_MntGoldProds  +    -1.46234100343269 *
2314405   +        S_MntMeatProducts  +     0.00799959000074 * S_MntSweetProducts
2314406   +          +    -0.08957801596115 * S_MntWines  +     0.12596915108875 *
2314407   +        S_MonthsAsCustomer  +    -1.16745981687215 * S_NumCatalogPurchases
2314408   +          +    -0.66146733174161 * S_NumDealsPurchases
2314409   +          +     1.52784459399302 * S_NumDistPurchases
2314410   +          +     1.49997699453958 * S_NumStorePurchases
2314411   +          +     0.63969125024997 * S_NumWebPurchases
2314412   +          +    -2.09769625435387 * S_NumWebVisitsMonth
2314413   +          +    -0.01970574649071 * S_RFMstat  +     1.32583910804448 *
2314414   +        S_RMntFrq  +     2.03378172701659 * S_Recency
2314415   +          +     0.55759907248821 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.34015862386497 * S_AcceptedCmpTotal + -0.12636545702442 * 
S_Age + -0.5924835968803 * S_Frq + -1.16470189655356 * S_Income + 0.83635320773782 * S_Kidhome 
+ 0.46426970005348 * S_Mnt + 0.0582061340736 * S_MntFishProducts + 0.03283536111015 * 
S_MntFruits + -0.17688658751969 * S_MntGoldProds + -1.46234100343269 * S_MntMeatProducts + 
0.00799959000074 * S_MntSweetProducts + -0.08957801596115 * S_MntWines + 0.12596915108875 * 
S_MonthsAsCustomer + -1.16745981687215 * S_NumCatalogPurchases + -0.66146733174161 * 
S_NumDealsPurchases + 1.52784459399302 * S_NumDistPurchases + 1.49997699453958 * 
S_NumStorePurchases + 0.63969125024997 * S_NumWebPurchases + -2.09769625435387 * 
S_NumWebVisitsMonth + -0.01970574649071 * S_RFMstat + 1.32583910804448 * S_RMntFrq + 
2.03378172701659 * S_Recency + 0.55759907248821 * S_Teenhome ;
2314416   +   H1x2_1  = H1x2_1  +    -0.24193029168147 * AcceptedCmp10
2314417   +          +    -0.28450683390946 * AcceptedCmp20  +     -0.0683858491191 *
2314418   +        AcceptedCmp30  +    -0.15614087988626 * AcceptedCmp40
2314419   +          +    -0.00784031523012 * AcceptedCmp50  +    -0.11434662666735 *
2314420   +        Complain0  +     0.17135914429981 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.24193029168147 * AcceptedCmp10 + -0.28450683390946 
* AcceptedCmp20 + -0.0683858491191 * AcceptedCmp30 + -0.15614087988626 * AcceptedCmp40 + 
-0.00784031523012 * AcceptedCmp50 + -0.11434662666735 * Complain0 + 0.17135914429981 * 
HigherEducationBinary0 ;
2314421   +   H1x2_1  = H1x2_1  +    -0.91069327306501 * Education2n_Cycle
2314422   +          +     0.63283182620199 * EducationBasic  +     0.06874518657922 *
2314423   +        EducationGraduation  +     0.29783240130451 * EducationMaster
2314424   +          +    -0.26556711862055 * Marital_StatusDivorced
2314425   +          +     1.14529440208202 * Marital_StatusMarried
2314426   +          +    -1.05822467297368 * Marital_StatusSingle
2314427   +          +     1.15985285453738 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.91069327306501 * Education2n_Cycle + 
0.63283182620199 * EducationBasic + 0.06874518657922 * EducationGraduation + 0.29783240130451 
* EducationMaster + -0.26556711862055 * Marital_StatusDivorced + 1.14529440208202 * 
Marital_StatusMarried + -1.05822467297368 * Marital_StatusSingle + 1.15985285453738 * 
Marital_StatusTogether ;
2314428   +   H1x2_1  =     1.34590181201712 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.34590181201712 + H1x2_1 ;
2314429   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2314430   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2314431   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
2314432   +END;
MPRINT(EM_DIAGRAM):   END;
2314433   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2314434   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2314435   +END;
MPRINT(EM_DIAGRAM):   END;
2314436   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2314437   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2314438   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2314439   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2314440   +   H1x3_1  =     -1.6712582237902 * S_AcceptedCmpTotal
2314441   +          +     0.06710548571072 * S_Age  +     0.42661812684843 * S_Frq
2314442   +          +    -0.68314976524229 * S_Income  +     1.35939207675559 *
2314443   +        S_Kidhome  +     0.81255710413612 * S_Mnt  +     1.01355330034385 *
2314444   +        S_MntFishProducts  +     0.05813114723871 * S_MntFruits
2314445   +          +    -0.71193745984367 * S_MntGoldProds  +    -1.58572681664837 *
2314446   +        S_MntMeatProducts  +     0.98292174643851 * S_MntSweetProducts
2314447   +          +     1.74207203174453 * S_MntWines  +     0.63179060297207 *
2314448   +        S_MonthsAsCustomer  +    -1.61177916346421 * S_NumCatalogPurchases
2314449   +          +    -1.65571629915953 * S_NumDealsPurchases
2314450   +          +     0.44850418598185 * S_NumDistPurchases
2314451   +          +    -1.85103994085543 * S_NumStorePurchases
2314452   +          +    -1.98087140874692 * S_NumWebPurchases
2314453   +          +    -1.35538649504681 * S_NumWebVisitsMonth
2314454   +          +    -1.81866752262562 * S_RFMstat  +    -1.10867259429962 *
2314455   +        S_RMntFrq  +     2.19147176593719 * S_Recency
2314456   +          +     1.27108112236647 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.6712582237902 * S_AcceptedCmpTotal + 0.06710548571072 * 
S_Age + 0.42661812684843 * S_Frq + -0.68314976524229 * S_Income + 1.35939207675559 * S_Kidhome 
+ 0.81255710413612 * S_Mnt + 1.01355330034385 * S_MntFishProducts + 0.05813114723871 * 
S_MntFruits + -0.71193745984367 * S_MntGoldProds + -1.58572681664837 * S_MntMeatProducts + 
0.98292174643851 * S_MntSweetProducts + 1.74207203174453 * S_MntWines + 0.63179060297207 * 
S_MonthsAsCustomer + -1.61177916346421 * S_NumCatalogPurchases + -1.65571629915953 * 
S_NumDealsPurchases + 0.44850418598185 * S_NumDistPurchases + -1.85103994085543 * 
S_NumStorePurchases + -1.98087140874692 * S_NumWebPurchases + -1.35538649504681 * 
S_NumWebVisitsMonth + -1.81866752262562 * S_RFMstat + -1.10867259429962 * S_RMntFrq + 
2.19147176593719 * S_Recency + 1.27108112236647 * S_Teenhome ;
2314457   +   H1x3_1  = H1x3_1  +     1.54306674985295 * AcceptedCmp10
2314458   +          +    -0.35167718530303 * AcceptedCmp20  +     0.20275619961982 *
2314459   +        AcceptedCmp30  +      -0.625244138431 * AcceptedCmp40
2314460   +          +     1.17899223199183 * AcceptedCmp50  +     0.20175490406986 *
2314461   +        Complain0  +     0.30147459901823 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.54306674985295 * AcceptedCmp10 + -0.35167718530303 * 
AcceptedCmp20 + 0.20275619961982 * AcceptedCmp30 + -0.625244138431 * AcceptedCmp40 + 
1.17899223199183 * AcceptedCmp50 + 0.20175490406986 * Complain0 + 0.30147459901823 * 
HigherEducationBinary0 ;
2314462   +   H1x3_1  = H1x3_1  +     0.54794864137162 * Education2n_Cycle
2314463   +          +     0.70104635636234 * EducationBasic  +    -0.09012165068068 *
2314464   +        EducationGraduation  +     1.03845439880266 * EducationMaster
2314465   +          +     0.50400969719731 * Marital_StatusDivorced
2314466   +          +    -1.34220391092458 * Marital_StatusMarried
2314467   +          +    -0.55428853923129 * Marital_StatusSingle
2314468   +          +    -0.71906176115993 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.54794864137162 * Education2n_Cycle + 
0.70104635636234 * EducationBasic + -0.09012165068068 * EducationGraduation + 1.03845439880266 
* EducationMaster + 0.50400969719731 * Marital_StatusDivorced + -1.34220391092458 * 
Marital_StatusMarried + -0.55428853923129 * Marital_StatusSingle + -0.71906176115993 * 
Marital_StatusTogether ;
2314469   +   H1x3_1  =    -1.41269563029741 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.41269563029741 + H1x3_1 ;
2314470   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2314471   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2314472   +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
2314473   +END;
MPRINT(EM_DIAGRAM):   END;
2314474   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2314475   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2314476   +END;
MPRINT(EM_DIAGRAM):   END;
2314477   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2314478   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2314479   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2314480   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2314481   +   H2x1_1  =     8.58599201391049 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 8.58599201391049 * H1x1_1 ;
2314482   +   H2x1_1  = H2x1_1  +     3.30177473520902 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 3.30177473520902 * H1x2_1 ;
2314483   +   H2x1_1  = H2x1_1  +    -2.49773716784179 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.49773716784179 * H1x3_1 ;
2314484   +   H2x1_1  =    -3.86067518358535 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -3.86067518358535 + H2x1_1 ;
2314485   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2314486   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2314487   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
2314488   +END;
MPRINT(EM_DIAGRAM):   END;
2314489   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2314490   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2314491   +END;
MPRINT(EM_DIAGRAM):   END;
2314492   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2314493   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
2314494   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2314495   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2314496   +   H2x2_1  =    -3.14108669248845 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -3.14108669248845 * H1x1_1 ;
2314497   +   H2x2_1  = H2x2_1  +     -6.4434812203166 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -6.4434812203166 * H1x2_1 ;
2314498   +   H2x2_1  = H2x2_1  +    -3.11843340791158 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -3.11843340791158 * H1x3_1 ;
2314499   +   H2x2_1  =     1.54895882132691 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.54895882132691 + H2x2_1 ;
2314500   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2314501   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2314502   +   H2x2_1  = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
2314503   +END;
MPRINT(EM_DIAGRAM):   END;
2314504   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2314505   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
2314506   +END;
MPRINT(EM_DIAGRAM):   END;
2314507   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2314508   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
2314509   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2314510   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2314511   +   H3x1_1  =     15.4504469210917 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 15.4504469210917 * H2x1_1 ;
2314512   +   H3x1_1  = H3x1_1  +    -4.98948798022725 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -4.98948798022725 * H2x2_1 ;
2314513   +   H3x1_1  =    -1.00752827777153 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -1.00752827777153 + H3x1_1 ;
2314514   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2314515   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2314516   +   H3x1_1  = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
2314517   +END;
MPRINT(EM_DIAGRAM):   END;
2314518   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2314519   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
2314520   +END;
MPRINT(EM_DIAGRAM):   END;
2314521   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2314522   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2314523   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2314524   +
2314525   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2314526   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2314527   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2314528   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2314529   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2314530   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2314531   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2314532   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2314533   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2314534   +end;
MPRINT(EM_DIAGRAM):   end;
2314535   +else do;
MPRINT(EM_DIAGRAM):   else do;
2314536   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2314537   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2314538   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2314539   +   end;
MPRINT(EM_DIAGRAM):   end;
2314540   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2314541   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2314542   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2314543   +   end;
MPRINT(EM_DIAGRAM):   end;
2314544   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2314545   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2314546   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2314547   +   end;
MPRINT(EM_DIAGRAM):   end;
2314548   +end;
MPRINT(EM_DIAGRAM):   end;
2314549   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2314550   +   P_DepVar1  =    -14.4907339799932 * H3x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -14.4907339799932 * H3x1_1 ;
2314551   +   P_DepVar1  =     3.88308334604773 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.88308334604773 + P_DepVar1 ;
2314552   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2314553   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2314554   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2314555   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2314556   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2314557   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2314558   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2314559   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2314560   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2314561   +END;
MPRINT(EM_DIAGRAM):   END;
2314562   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2314563   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2314564   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2314565   +END;
MPRINT(EM_DIAGRAM):   END;
2314566   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2314567   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2314568   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2314569   +END;
MPRINT(EM_DIAGRAM):   END;
2314570   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2314571   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2314572   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2314573   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2314574   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2314575   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2314576   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2314577   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2314578   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2314579   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2314580   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2314581   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2314582   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2314583   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2314584   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2314585   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2314586   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2314587   +END;
MPRINT(EM_DIAGRAM):   END;
2314588   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2314589   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2314590   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2314591   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2314592   +* Renaming variables for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural6;
2314593   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2314594   +* Renaming Posterior variables for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural6;
2314595   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2314596   +drop AutoNeural6_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_P_DepVar1;
2314597   +AutoNeural6_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural6_P_DepVar1 = P_DepVar1;
2314598   +drop AutoNeural6_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_P_DepVar0;
2314599   +AutoNeural6_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural6_P_DepVar0 = P_DepVar0;
2314600   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2314601   +* Renaming Into variables for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural6;
2314602   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2314603   +length AutoNeural6_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural6_I_DepVar $32;
2314604   +drop AutoNeural6_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_I_DepVar;
2314605   +AutoNeural6_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural6_I_DepVar = I_DepVar;
2314606   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2314607   +* Renaming _WARN_ variable for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural6;
2314608   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2314609   +length AutoNeural6_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural6_WARN_ $4;
2314610   +drop AutoNeural6_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_WARN_;
2314611   +AutoNeural6_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural6_WARN_ = _WARN_;
2314612   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2314613   +* Ensmbl38: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Scoring Code of model 2 of 7;
2314614   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2314615   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2314616   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2314617   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2314618   +* NODE: AutoNeural7;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural7;
2314619   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2314620   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2314621   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2314622   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2314623   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2314624   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2314625   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2314626   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2314627   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2314628   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2314629   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2314630   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2314631   +LENGTH _WARN_ $4
2314632   +      F_DepVar  $ 12
2314633   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2314634   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2314635   +
2314636   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2314637   +
2314638   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2314639   +
2314640   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2314641   +
2314642   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2314643   +
2314644   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2314645   +
2314646   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2314647   +
2314648   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2314649   +
2314650   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2314651   +
2314652   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2314653   +
2314654   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2314655   +
2314656   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2314657   +
2314658   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2314659   +
2314660   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2314661   +
2314662   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2314663   +
2314664   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2314665   +
2314666   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2314667   +
2314668   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2314669   +
2314670   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2314671   +
2314672   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2314673   +
2314674   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2314675   +
2314676   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2314677   +
2314678   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2314679   +
2314680   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2314681   +
2314682   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2314683   +
2314684   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2314685   +
2314686   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2314687   +
2314688   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2314689   +
2314690   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2314691   +
2314692   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2314693   +
2314694   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2314695   +
2314696   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2314697   +
2314698   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2314699   +
2314700   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2314701   +
2314702   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2314703   +
2314704   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2314705   +
2314706   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2314707   +
2314708   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2314709   +
2314710   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2314711   +
2314712   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2314713   +
2314714   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2314715   +
2314716   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2314717   +
2314718   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2314719   +
2314720   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2314721   +
2314722   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2314723   +
2314724   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2314725   +
2314726   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2314727   +
2314728   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2314729   +
2314730   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2314731   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2314732   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2314733   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2314734   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2314735   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2314736   +end;
MPRINT(EM_DIAGRAM):   end;
2314737   +else do;
MPRINT(EM_DIAGRAM):   else do;
2314738   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2314739   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2314740   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2314741   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2314742   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2314743   +   end;
MPRINT(EM_DIAGRAM):   end;
2314744   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2314745   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2314746   +   end;
MPRINT(EM_DIAGRAM):   end;
2314747   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2314748   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2314749   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2314750   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2314751   +   end;
MPRINT(EM_DIAGRAM):   end;
2314752   +end;
MPRINT(EM_DIAGRAM):   end;
2314753   +
2314754   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2314755   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2314756   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2314757   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2314758   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2314759   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2314760   +end;
MPRINT(EM_DIAGRAM):   end;
2314761   +else do;
MPRINT(EM_DIAGRAM):   else do;
2314762   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2314763   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2314764   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2314765   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2314766   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2314767   +   end;
MPRINT(EM_DIAGRAM):   end;
2314768   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2314769   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2314770   +   end;
MPRINT(EM_DIAGRAM):   end;
2314771   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2314772   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2314773   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2314774   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2314775   +   end;
MPRINT(EM_DIAGRAM):   end;
2314776   +end;
MPRINT(EM_DIAGRAM):   end;
2314777   +
2314778   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2314779   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2314780   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2314781   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2314782   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2314783   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2314784   +end;
MPRINT(EM_DIAGRAM):   end;
2314785   +else do;
MPRINT(EM_DIAGRAM):   else do;
2314786   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2314787   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2314788   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2314789   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2314790   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2314791   +   end;
MPRINT(EM_DIAGRAM):   end;
2314792   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2314793   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2314794   +   end;
MPRINT(EM_DIAGRAM):   end;
2314795   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2314796   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2314797   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2314798   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2314799   +   end;
MPRINT(EM_DIAGRAM):   end;
2314800   +end;
MPRINT(EM_DIAGRAM):   end;
2314801   +
2314802   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2314803   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2314804   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2314805   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2314806   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2314807   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2314808   +end;
MPRINT(EM_DIAGRAM):   end;
2314809   +else do;
MPRINT(EM_DIAGRAM):   else do;
2314810   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2314811   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2314812   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2314813   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2314814   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2314815   +   end;
MPRINT(EM_DIAGRAM):   end;
2314816   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2314817   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2314818   +   end;
MPRINT(EM_DIAGRAM):   end;
2314819   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2314820   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2314821   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2314822   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2314823   +   end;
MPRINT(EM_DIAGRAM):   end;
2314824   +end;
MPRINT(EM_DIAGRAM):   end;
2314825   +
2314826   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2314827   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2314828   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2314829   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2314830   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2314831   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2314832   +end;
MPRINT(EM_DIAGRAM):   end;
2314833   +else do;
MPRINT(EM_DIAGRAM):   else do;
2314834   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2314835   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2314836   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2314837   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2314838   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2314839   +   end;
MPRINT(EM_DIAGRAM):   end;
2314840   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2314841   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2314842   +   end;
MPRINT(EM_DIAGRAM):   end;
2314843   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2314844   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2314845   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2314846   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2314847   +   end;
MPRINT(EM_DIAGRAM):   end;
2314848   +end;
MPRINT(EM_DIAGRAM):   end;
2314849   +
2314850   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2314851   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2314852   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2314853   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2314854   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2314855   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2314856   +end;
MPRINT(EM_DIAGRAM):   end;
2314857   +else do;
MPRINT(EM_DIAGRAM):   else do;
2314858   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2314859   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2314860   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2314861   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2314862   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2314863   +   end;
MPRINT(EM_DIAGRAM):   end;
2314864   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2314865   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2314866   +   end;
MPRINT(EM_DIAGRAM):   end;
2314867   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2314868   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2314869   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2314870   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2314871   +   end;
MPRINT(EM_DIAGRAM):   end;
2314872   +end;
MPRINT(EM_DIAGRAM):   end;
2314873   +
2314874   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2314875   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2314876   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2314877   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2314878   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2314879   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2314880   +end;
MPRINT(EM_DIAGRAM):   end;
2314881   +else do;
MPRINT(EM_DIAGRAM):   else do;
2314882   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2314883   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2314884   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2314885   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2314886   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2314887   +   end;
MPRINT(EM_DIAGRAM):   end;
2314888   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2314889   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2314890   +   end;
MPRINT(EM_DIAGRAM):   end;
2314891   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2314892   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2314893   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2314894   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2314895   +   end;
MPRINT(EM_DIAGRAM):   end;
2314896   +end;
MPRINT(EM_DIAGRAM):   end;
2314897   +
2314898   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2314899   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2314900   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2314901   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2314902   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2314903   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2314904   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2314905   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2314906   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2314907   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2314908   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2314909   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2314910   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2314911   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2314912   +end;
MPRINT(EM_DIAGRAM):   end;
2314913   +else do;
MPRINT(EM_DIAGRAM):   else do;
2314914   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2314915   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2314916   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2314917   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2314918   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2314919   +   end;
MPRINT(EM_DIAGRAM):   end;
2314920   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2314921   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2314922   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2314923   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2314924   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2314925   +   end;
MPRINT(EM_DIAGRAM):   end;
2314926   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2314927   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2314928   +   end;
MPRINT(EM_DIAGRAM):   end;
2314929   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2314930   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2314931   +   end;
MPRINT(EM_DIAGRAM):   end;
2314932   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2314933   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2314934   +   end;
MPRINT(EM_DIAGRAM):   end;
2314935   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2314936   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2314937   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2314938   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2314939   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2314940   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2314941   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2314942   +   end;
MPRINT(EM_DIAGRAM):   end;
2314943   +end;
MPRINT(EM_DIAGRAM):   end;
2314944   +
2314945   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2314946   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2314947   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2314948   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2314949   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2314950   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2314951   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2314952   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2314953   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2314954   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2314955   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2314956   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2314957   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2314958   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2314959   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2314960   +end;
MPRINT(EM_DIAGRAM):   end;
2314961   +else do;
MPRINT(EM_DIAGRAM):   else do;
2314962   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2314963   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2314964   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2314965   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2314966   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2314967   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2314968   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2314969   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2314970   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2314971   +         end;
MPRINT(EM_DIAGRAM):   end;
2314972   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2314973   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2314974   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2314975   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2314976   +            end;
MPRINT(EM_DIAGRAM):   end;
2314977   +         end;
MPRINT(EM_DIAGRAM):   end;
2314978   +      end;
MPRINT(EM_DIAGRAM):   end;
2314979   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2314980   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2314981   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2314982   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2314983   +         end;
MPRINT(EM_DIAGRAM):   end;
2314984   +      end;
MPRINT(EM_DIAGRAM):   end;
2314985   +   end;
MPRINT(EM_DIAGRAM):   end;
2314986   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2314987   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2314988   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2314989   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2314990   +      end;
MPRINT(EM_DIAGRAM):   end;
2314991   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2314992   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2314993   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2314994   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2314995   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2314996   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2314997   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2314998   +         end;
MPRINT(EM_DIAGRAM):   end;
2314999   +      end;
MPRINT(EM_DIAGRAM):   end;
2315000   +   end;
MPRINT(EM_DIAGRAM):   end;
2315001   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2315002   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2315003   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2315004   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2315005   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2315006   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2315007   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2315008   +   end;
MPRINT(EM_DIAGRAM):   end;
2315009   +end;
MPRINT(EM_DIAGRAM):   end;
2315010   +
2315011   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2315012   +*** Checking missing input Interval
2315013   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2315014   +
2315015   +IF NMISS(
2315016   +   AcceptedCmpTotal ,
2315017   +   Age ,
2315018   +   Frq ,
2315019   +   Income ,
2315020   +   Kidhome ,
2315021   +   Mnt ,
2315022   +   MntFishProducts ,
2315023   +   MntFruits ,
2315024   +   MntGoldProds ,
2315025   +   MntMeatProducts ,
2315026   +   MntSweetProducts ,
2315027   +   MntWines ,
2315028   +   MonthsAsCustomer ,
2315029   +   NumCatalogPurchases ,
2315030   +   NumDealsPurchases ,
2315031   +   NumDistPurchases ,
2315032   +   NumStorePurchases ,
2315033   +   NumWebPurchases ,
2315034   +   NumWebVisitsMonth ,
2315035   +   RFMstat ,
2315036   +   RMntFrq ,
2315037   +   Recency ,
2315038   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2315039   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2315040   +
2315041   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2315042   +END;
MPRINT(EM_DIAGRAM):   END;
2315043   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2315044   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2315045   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2315046   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2315047   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2315048   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2315049   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2315050   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2315051   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2315052   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2315053   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2315054   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2315055   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2315056   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2315057   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2315058   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2315059   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2315060   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2315061   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2315062   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2315063   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2315064   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2315065   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2315066   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2315067   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2315068   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2315069   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2315070   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2315071   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2315072   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2315073   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2315074   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2315075   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2315076   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2315077   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2315078   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2315079   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2315080   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2315081   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2315082   +END;
MPRINT(EM_DIAGRAM):   END;
2315083   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2315084   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2315085   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2315086   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2315087   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2315088   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2315089   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2315090   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2315091   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2315092   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2315093   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2315094   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2315095   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2315096   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2315097   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2315098   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2315099   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2315100   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2315101   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2315102   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2315103   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2315104   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2315105   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2315106   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2315107   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2315108   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2315109   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2315110   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2315111   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2315112   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2315113   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2315114   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2315115   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2315116   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2315117   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2315118   +   ELSE S_NumCatalogPurchases
2315119   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2315120   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2315121   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2315122   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2315123   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2315124   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2315125   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2315126   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2315127   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2315128   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2315129   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2315130   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2315131   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2315132   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2315133   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2315134   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2315135   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2315136   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2315137   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2315138   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2315139   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2315140   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2315141   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2315142   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2315143   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2315144   +END;
MPRINT(EM_DIAGRAM):   END;
2315145   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2315146   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2315147   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2315148   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2315149   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2315150   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2315151   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2315152   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2315153   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2315154   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2315155   +   H1x1_1  =     0.27051750628107 * S_AcceptedCmpTotal
2315156   +          +    -0.01552488999587 * S_Age  +    -0.19918933236131 * S_Frq
2315157   +          +    -0.18053367989037 * S_Income  +     0.17934470816975 *
2315158   +        S_Kidhome  +    -0.27914859130186 * S_Mnt  +    -0.05331142159606 *
2315159   +        S_MntFishProducts  +    -0.03730503814111 * S_MntFruits
2315160   +          +     0.01217897476566 * S_MntGoldProds  +       0.241005967683 *
2315161   +        S_MntMeatProducts  +    -0.02873172523867 * S_MntSweetProducts
2315162   +          +    -0.35773732926132 * S_MntWines  +    -0.00800625524539 *
2315163   +        S_MonthsAsCustomer  +     0.14253720708201 * S_NumCatalogPurchases
2315164   +          +     0.09634439105648 * S_NumDealsPurchases
2315165   +          +     -0.2727389064287 * S_NumDistPurchases
2315166   +          +    -0.14179871978162 * S_NumStorePurchases
2315167   +          +     0.11008049559527 * S_NumWebPurchases
2315168   +          +    -0.16791463027749 * S_NumWebVisitsMonth
2315169   +          +     0.12827091331546 * S_RFMstat  +    -0.05819422771336 *
2315170   +        S_RMntFrq  +     0.17192522504917 * S_Recency
2315171   +          +     0.13379709932247 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.27051750628107 * S_AcceptedCmpTotal + -0.01552488999587 * 
S_Age + -0.19918933236131 * S_Frq + -0.18053367989037 * S_Income + 0.17934470816975 * 
S_Kidhome + -0.27914859130186 * S_Mnt + -0.05331142159606 * S_MntFishProducts + 
-0.03730503814111 * S_MntFruits + 0.01217897476566 * S_MntGoldProds + 0.241005967683 * 
S_MntMeatProducts + -0.02873172523867 * S_MntSweetProducts + -0.35773732926132 * S_MntWines + 
-0.00800625524539 * S_MonthsAsCustomer + 0.14253720708201 * S_NumCatalogPurchases + 
0.09634439105648 * S_NumDealsPurchases + -0.2727389064287 * S_NumDistPurchases + 
-0.14179871978162 * S_NumStorePurchases + 0.11008049559527 * S_NumWebPurchases + 
-0.16791463027749 * S_NumWebVisitsMonth + 0.12827091331546 * S_RFMstat + -0.05819422771336 * 
S_RMntFrq + 0.17192522504917 * S_Recency + 0.13379709932247 * S_Teenhome ;
2315172   +   H1x1_2  =      0.2625003002792 * S_AcceptedCmpTotal
2315173   +          +    -0.00409648963127 * S_Age  +    -0.08422560024107 * S_Frq
2315174   +          +      0.1678148652095 * S_Income  +      -0.122580580609 *
2315175   +        S_Kidhome  +    -0.41368311141801 * S_Mnt  +     -0.0649787838725 *
2315176   +        S_MntFishProducts  +    -0.06363287766971 * S_MntFruits
2315177   +          +     0.00810850196464 * S_MntGoldProds  +      0.2984971941271 *
2315178   +        S_MntMeatProducts  +     -0.0651075315757 * S_MntSweetProducts
2315179   +          +    -0.42717799596572 * S_MntWines  +    -0.00945771129633 *
2315180   +        S_MonthsAsCustomer  +     0.33346839008681 * S_NumCatalogPurchases
2315181   +          +     0.15835936877168 * S_NumDealsPurchases
2315182   +          +     0.04229992769587 * S_NumDistPurchases
2315183   +          +    -0.04051362547639 * S_NumStorePurchases
2315184   +          +    -0.01791546488406 * S_NumWebPurchases
2315185   +          +     0.28833008597045 * S_NumWebVisitsMonth
2315186   +          +     0.08007709098478 * S_RFMstat  +     0.37677948418886 *
2315187   +        S_RMntFrq  +    -0.32542265112765 * S_Recency
2315188   +          +    -0.10763248273834 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.2625003002792 * S_AcceptedCmpTotal + -0.00409648963127 * 
S_Age + -0.08422560024107 * S_Frq + 0.1678148652095 * S_Income + -0.122580580609 * S_Kidhome + 
-0.41368311141801 * S_Mnt + -0.0649787838725 * S_MntFishProducts + -0.06363287766971 * 
S_MntFruits + 0.00810850196464 * S_MntGoldProds + 0.2984971941271 * S_MntMeatProducts + 
-0.0651075315757 * S_MntSweetProducts + -0.42717799596572 * S_MntWines + -0.00945771129633 * 
S_MonthsAsCustomer + 0.33346839008681 * S_NumCatalogPurchases + 0.15835936877168 * 
S_NumDealsPurchases + 0.04229992769587 * S_NumDistPurchases + -0.04051362547639 * 
S_NumStorePurchases + -0.01791546488406 * S_NumWebPurchases + 0.28833008597045 * 
S_NumWebVisitsMonth + 0.08007709098478 * S_RFMstat + 0.37677948418886 * S_RMntFrq + 
-0.32542265112765 * S_Recency + -0.10763248273834 * S_Teenhome ;
2315189   +   H1x1_1  = H1x1_1  +     0.17927888078386 * AcceptedCmp10
2315190   +          +       0.309097592234 * AcceptedCmp20  +     0.30005706470617 *
2315191   +        AcceptedCmp30  +     0.30534843193785 * AcceptedCmp40
2315192   +          +     0.19575142296602 * AcceptedCmp50  +    -0.26930325741881 *
2315193   +        Complain0  +    -0.07193220591551 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.17927888078386 * AcceptedCmp10 + 0.309097592234 * 
AcceptedCmp20 + 0.30005706470617 * AcceptedCmp30 + 0.30534843193785 * AcceptedCmp40 + 
0.19575142296602 * AcceptedCmp50 + -0.26930325741881 * Complain0 + -0.07193220591551 * 
HigherEducationBinary0 ;
2315194   +   H1x1_2  = H1x1_2  +     0.01282806481889 * AcceptedCmp10
2315195   +          +     0.01542710847454 * AcceptedCmp20  +     0.03576476827309 *
2315196   +        AcceptedCmp30  +     0.04230610697529 * AcceptedCmp40
2315197   +          +     0.03405078302469 * AcceptedCmp50  +     0.13002166919554 *
2315198   +        Complain0  +    -0.08203696285033 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.01282806481889 * AcceptedCmp10 + 0.01542710847454 * 
AcceptedCmp20 + 0.03576476827309 * AcceptedCmp30 + 0.04230610697529 * AcceptedCmp40 + 
0.03405078302469 * AcceptedCmp50 + 0.13002166919554 * Complain0 + -0.08203696285033 * 
HigherEducationBinary0 ;
2315199   +   H1x1_1  = H1x1_1  +    -0.04471063478028 * Education2n_Cycle
2315200   +          +     0.15571809437849 * EducationBasic  +    -0.00113978624206 *
2315201   +        EducationGraduation  +     0.00750750981266 * EducationMaster
2315202   +          +     -0.0504367274898 * Marital_StatusDivorced
2315203   +          +     0.28345714390306 * Marital_StatusMarried
2315204   +          +     -0.2012923780435 * Marital_StatusSingle
2315205   +          +     0.20022167903492 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.04471063478028 * Education2n_Cycle + 
0.15571809437849 * EducationBasic + -0.00113978624206 * EducationGraduation + 0.00750750981266 
* EducationMaster + -0.0504367274898 * Marital_StatusDivorced + 0.28345714390306 * 
Marital_StatusMarried + -0.2012923780435 * Marital_StatusSingle + 0.20022167903492 * 
Marital_StatusTogether ;
2315206   +   H1x1_2  = H1x1_2  +     0.12691361812265 * Education2n_Cycle
2315207   +          +       0.003205191831 * EducationBasic  +    -0.04323354449955 *
2315208   +        EducationGraduation  +    -0.06699429239126 * EducationMaster
2315209   +          +     0.06828937261262 * Marital_StatusDivorced
2315210   +          +     -0.1520862543536 * Marital_StatusMarried
2315211   +          +      0.1392808464716 * Marital_StatusSingle
2315212   +          +    -0.12406922875482 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12691361812265 * Education2n_Cycle + 0.003205191831 
* EducationBasic + -0.04323354449955 * EducationGraduation + -0.06699429239126 * 
EducationMaster + 0.06828937261262 * Marital_StatusDivorced + -0.1520862543536 * 
Marital_StatusMarried + 0.1392808464716 * Marital_StatusSingle + -0.12406922875482 * 
Marital_StatusTogether ;
2315213   +   H1x1_1  =     0.89722634972069 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.89722634972069 + H1x1_1 ;
2315214   +   H1x1_2  =     -0.5979471913364 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5979471913364 + H1x1_2 ;
2315215   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
2315216   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
2315217   +END;
MPRINT(EM_DIAGRAM):   END;
2315218   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2315219   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2315220   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2315221   +END;
MPRINT(EM_DIAGRAM):   END;
2315222   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2315223   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2315224   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2315225   +
2315226   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2315227   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2315228   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2315229   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2315230   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2315231   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2315232   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2315233   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2315234   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2315235   +end;
MPRINT(EM_DIAGRAM):   end;
2315236   +else do;
MPRINT(EM_DIAGRAM):   else do;
2315237   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2315238   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2315239   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2315240   +   end;
MPRINT(EM_DIAGRAM):   end;
2315241   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2315242   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2315243   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2315244   +   end;
MPRINT(EM_DIAGRAM):   end;
2315245   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2315246   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2315247   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2315248   +   end;
MPRINT(EM_DIAGRAM):   end;
2315249   +end;
MPRINT(EM_DIAGRAM):   end;
2315250   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2315251   +   P_DepVar1  =     -11.533020189097 * H1x1_1  +     17.2320065402955 * H1x1_2
2315252   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -11.533020189097 * H1x1_1 + 17.2320065402955 * H1x1_2 ;
2315253   +   P_DepVar1  =     2.37722840752042 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.37722840752042 + P_DepVar1 ;
2315254   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2315255   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2315256   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2315257   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2315258   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2315259   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2315260   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2315261   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2315262   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2315263   +END;
MPRINT(EM_DIAGRAM):   END;
2315264   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2315265   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2315266   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2315267   +END;
MPRINT(EM_DIAGRAM):   END;
2315268   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2315269   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2315270   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2315271   +END;
MPRINT(EM_DIAGRAM):   END;
2315272   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2315273   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2315274   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2315275   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2315276   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2315277   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2315278   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2315279   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2315280   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2315281   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2315282   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2315283   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2315284   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2315285   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2315286   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2315287   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2315288   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2315289   +END;
MPRINT(EM_DIAGRAM):   END;
2315290   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2315291   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2315292   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2315293   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2315294   +* Renaming variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural7;
2315295   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2315296   +* Renaming Posterior variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural7;
2315297   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2315298   +drop AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar1;
2315299   +AutoNeural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar1 = P_DepVar1;
2315300   +drop AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar0;
2315301   +AutoNeural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar0 = P_DepVar0;
2315302   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2315303   +* Renaming Into variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural7;
2315304   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2315305   +length AutoNeural7_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural7_I_DepVar $32;
2315306   +drop AutoNeural7_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_I_DepVar;
2315307   +AutoNeural7_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural7_I_DepVar = I_DepVar;
2315308   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2315309   +* Renaming _WARN_ variable for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural7;
2315310   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2315311   +length AutoNeural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural7_WARN_ $4;
2315312   +drop AutoNeural7_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_WARN_;
2315313   +AutoNeural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural7_WARN_ = _WARN_;
2315314   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2315315   +* Ensmbl38: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Scoring Code of model 3 of 7;
2315316   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2315317   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2315318   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2315319   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2315320   +* NODE: AutoNeural8;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural8;
2315321   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2315322   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2315323   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2315324   +***********************************;
The SAS System

MPRINT(EM_DIAGRAM):   ***********************************;
2315325   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2315326   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2315327   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2315328   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2315329   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2315330   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2315331   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2315332   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2315333   +LENGTH _WARN_ $4
2315334   +      F_DepVar  $ 12
2315335   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2315336   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2315337   +
2315338   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2315339   +
2315340   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2315341   +
2315342   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2315343   +
2315344   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2315345   +
2315346   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2315347   +
2315348   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2315349   +
2315350   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2315351   +
2315352   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2315353   +
2315354   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2315355   +
2315356   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2315357   +
2315358   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2315359   +
2315360   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2315361   +
2315362   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2315363   +
2315364   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2315365   +
2315366   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2315367   +
2315368   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2315369   +
2315370   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2315371   +
2315372   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2315373   +
2315374   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2315375   +
2315376   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2315377   +
2315378   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2315379   +
2315380   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2315381   +
2315382   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2315383   +
2315384   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2315385   +
2315386   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2315387   +
2315388   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2315389   +
2315390   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2315391   +
2315392   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2315393   +
2315394   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2315395   +
2315396   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2315397   +
2315398   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2315399   +
2315400   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2315401   +
2315402   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2315403   +
2315404   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2315405   +
2315406   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2315407   +
2315408   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2315409   +
2315410   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2315411   +
2315412   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2315413   +
2315414   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2315415   +
2315416   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2315417   +
2315418   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2315419   +
2315420   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2315421   +
2315422   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2315423   +
2315424   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2315425   +
2315426   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2315427   +
2315428   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2315429   +
2315430   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2315431   +
2315432   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2315433   +
2315434   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2315435   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2315436   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2315437   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2315438   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2315439   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2315440   +end;
MPRINT(EM_DIAGRAM):   end;
2315441   +else do;
MPRINT(EM_DIAGRAM):   else do;
2315442   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2315443   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2315444   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2315445   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2315446   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2315447   +   end;
MPRINT(EM_DIAGRAM):   end;
2315448   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2315449   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2315450   +   end;
MPRINT(EM_DIAGRAM):   end;
2315451   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2315452   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2315453   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2315454   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2315455   +   end;
MPRINT(EM_DIAGRAM):   end;
2315456   +end;
MPRINT(EM_DIAGRAM):   end;
2315457   +
2315458   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2315459   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2315460   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2315461   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2315462   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2315463   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2315464   +end;
MPRINT(EM_DIAGRAM):   end;
2315465   +else do;
MPRINT(EM_DIAGRAM):   else do;
2315466   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2315467   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2315468   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2315469   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2315470   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2315471   +   end;
MPRINT(EM_DIAGRAM):   end;
2315472   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2315473   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2315474   +   end;
MPRINT(EM_DIAGRAM):   end;
2315475   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2315476   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2315477   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2315478   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2315479   +   end;
MPRINT(EM_DIAGRAM):   end;
2315480   +end;
MPRINT(EM_DIAGRAM):   end;
2315481   +
2315482   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2315483   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2315484   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2315485   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2315486   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2315487   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2315488   +end;
MPRINT(EM_DIAGRAM):   end;
2315489   +else do;
MPRINT(EM_DIAGRAM):   else do;
2315490   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2315491   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2315492   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2315493   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2315494   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2315495   +   end;
MPRINT(EM_DIAGRAM):   end;
2315496   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2315497   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2315498   +   end;
MPRINT(EM_DIAGRAM):   end;
2315499   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2315500   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2315501   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2315502   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2315503   +   end;
MPRINT(EM_DIAGRAM):   end;
2315504   +end;
MPRINT(EM_DIAGRAM):   end;
2315505   +
2315506   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2315507   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2315508   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2315509   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2315510   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2315511   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2315512   +end;
MPRINT(EM_DIAGRAM):   end;
2315513   +else do;
MPRINT(EM_DIAGRAM):   else do;
2315514   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2315515   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2315516   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2315517   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2315518   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2315519   +   end;
MPRINT(EM_DIAGRAM):   end;
2315520   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2315521   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2315522   +   end;
MPRINT(EM_DIAGRAM):   end;
2315523   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2315524   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2315525   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2315526   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2315527   +   end;
MPRINT(EM_DIAGRAM):   end;
2315528   +end;
MPRINT(EM_DIAGRAM):   end;
2315529   +
2315530   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2315531   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2315532   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2315533   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2315534   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2315535   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2315536   +end;
MPRINT(EM_DIAGRAM):   end;
2315537   +else do;
MPRINT(EM_DIAGRAM):   else do;
2315538   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2315539   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2315540   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2315541   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2315542   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2315543   +   end;
MPRINT(EM_DIAGRAM):   end;
2315544   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2315545   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2315546   +   end;
MPRINT(EM_DIAGRAM):   end;
2315547   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2315548   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2315549   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2315550   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2315551   +   end;
MPRINT(EM_DIAGRAM):   end;
2315552   +end;
MPRINT(EM_DIAGRAM):   end;
2315553   +
2315554   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2315555   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2315556   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2315557   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2315558   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2315559   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2315560   +end;
MPRINT(EM_DIAGRAM):   end;
2315561   +else do;
MPRINT(EM_DIAGRAM):   else do;
2315562   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2315563   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2315564   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2315565   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2315566   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2315567   +   end;
MPRINT(EM_DIAGRAM):   end;
2315568   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2315569   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2315570   +   end;
MPRINT(EM_DIAGRAM):   end;
2315571   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2315572   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2315573   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2315574   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2315575   +   end;
MPRINT(EM_DIAGRAM):   end;
2315576   +end;
MPRINT(EM_DIAGRAM):   end;
2315577   +
2315578   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2315579   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2315580   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2315581   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2315582   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2315583   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2315584   +end;
MPRINT(EM_DIAGRAM):   end;
2315585   +else do;
MPRINT(EM_DIAGRAM):   else do;
2315586   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2315587   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2315588   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2315589   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2315590   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2315591   +   end;
MPRINT(EM_DIAGRAM):   end;
2315592   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2315593   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2315594   +   end;
MPRINT(EM_DIAGRAM):   end;
2315595   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2315596   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2315597   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2315598   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2315599   +   end;
MPRINT(EM_DIAGRAM):   end;
2315600   +end;
MPRINT(EM_DIAGRAM):   end;
2315601   +
2315602   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2315603   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2315604   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2315605   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2315606   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2315607   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2315608   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2315609   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2315610   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2315611   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2315612   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2315613   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2315614   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2315615   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2315616   +end;
MPRINT(EM_DIAGRAM):   end;
2315617   +else do;
MPRINT(EM_DIAGRAM):   else do;
2315618   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2315619   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2315620   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2315621   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2315622   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2315623   +   end;
MPRINT(EM_DIAGRAM):   end;
2315624   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2315625   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2315626   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2315627   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2315628   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2315629   +   end;
MPRINT(EM_DIAGRAM):   end;
2315630   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2315631   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2315632   +   end;
MPRINT(EM_DIAGRAM):   end;
2315633   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2315634   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2315635   +   end;
MPRINT(EM_DIAGRAM):   end;
2315636   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2315637   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2315638   +   end;
MPRINT(EM_DIAGRAM):   end;
2315639   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2315640   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2315641   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2315642   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2315643   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2315644   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2315645   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2315646   +   end;
MPRINT(EM_DIAGRAM):   end;
2315647   +end;
MPRINT(EM_DIAGRAM):   end;
2315648   +
2315649   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2315650   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2315651   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2315652   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2315653   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2315654   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2315655   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2315656   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2315657   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2315658   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2315659   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2315660   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2315661   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2315662   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2315663   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2315664   +end;
MPRINT(EM_DIAGRAM):   end;
2315665   +else do;
MPRINT(EM_DIAGRAM):   else do;
2315666   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2315667   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2315668   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2315669   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2315670   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2315671   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2315672   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2315673   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2315674   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2315675   +         end;
MPRINT(EM_DIAGRAM):   end;
2315676   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2315677   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2315678   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2315679   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2315680   +            end;
MPRINT(EM_DIAGRAM):   end;
2315681   +         end;
MPRINT(EM_DIAGRAM):   end;
2315682   +      end;
MPRINT(EM_DIAGRAM):   end;
2315683   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2315684   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2315685   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2315686   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2315687   +         end;
MPRINT(EM_DIAGRAM):   end;
2315688   +      end;
MPRINT(EM_DIAGRAM):   end;
2315689   +   end;
MPRINT(EM_DIAGRAM):   end;
2315690   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2315691   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2315692   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2315693   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2315694   +      end;
MPRINT(EM_DIAGRAM):   end;
2315695   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2315696   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2315697   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2315698   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2315699   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2315700   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2315701   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2315702   +         end;
MPRINT(EM_DIAGRAM):   end;
2315703   +      end;
MPRINT(EM_DIAGRAM):   end;
2315704   +   end;
MPRINT(EM_DIAGRAM):   end;
2315705   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2315706   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2315707   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2315708   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2315709   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2315710   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2315711   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2315712   +   end;
MPRINT(EM_DIAGRAM):   end;
2315713   +end;
MPRINT(EM_DIAGRAM):   end;
2315714   +
2315715   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2315716   +*** Checking missing input Interval
2315717   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2315718   +
2315719   +IF NMISS(
2315720   +   AcceptedCmpTotal ,
2315721   +   Age ,
2315722   +   Frq ,
2315723   +   Income ,
2315724   +   Kidhome ,
2315725   +   Mnt ,
2315726   +   MntFishProducts ,
2315727   +   MntFruits ,
2315728   +   MntGoldProds ,
2315729   +   MntMeatProducts ,
2315730   +   MntSweetProducts ,
2315731   +   MntWines ,
2315732   +   MonthsAsCustomer ,
2315733   +   NumCatalogPurchases ,
2315734   +   NumDealsPurchases ,
2315735   +   NumDistPurchases ,
2315736   +   NumStorePurchases ,
2315737   +   NumWebPurchases ,
2315738   +   NumWebVisitsMonth ,
2315739   +   RFMstat ,
2315740   +   RMntFrq ,
2315741   +   Recency ,
2315742   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2315743   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2315744   +
2315745   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2315746   +END;
MPRINT(EM_DIAGRAM):   END;
2315747   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2315748   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2315749   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2315750   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2315751   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2315752   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2315753   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2315754   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2315755   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2315756   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2315757   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2315758   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2315759   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2315760   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2315761   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2315762   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2315763   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2315764   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2315765   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2315766   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2315767   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2315768   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2315769   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2315770   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2315771   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2315772   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2315773   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2315774   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2315775   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2315776   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2315777   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2315778   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2315779   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2315780   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2315781   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2315782   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2315783   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2315784   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2315785   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2315786   +END;
MPRINT(EM_DIAGRAM):   END;
2315787   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2315788   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2315789   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2315790   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2315791   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2315792   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2315793   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2315794   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2315795   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2315796   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2315797   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2315798   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2315799   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2315800   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2315801   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2315802   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2315803   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2315804   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2315805   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2315806   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2315807   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2315808   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2315809   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2315810   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2315811   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2315812   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2315813   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2315814   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2315815   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2315816   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2315817   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2315818   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2315819   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2315820   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2315821   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2315822   +   ELSE S_NumCatalogPurchases
2315823   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2315824   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2315825   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2315826   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2315827   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2315828   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2315829   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2315830   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2315831   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2315832   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2315833   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2315834   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2315835   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2315836   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2315837   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2315838   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2315839   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2315840   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2315841   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2315842   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2315843   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2315844   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2315845   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2315846   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2315847   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2315848   +END;
MPRINT(EM_DIAGRAM):   END;
2315849   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2315850   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2315851   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2315852   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2315853   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2315854   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2315855   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2315856   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2315857   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2315858   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2315859   +   H1x1_1  =    -0.56705855466377 * S_AcceptedCmpTotal
2315860   +          +     -0.0844209787591 * S_Age  +    -0.09400438162402 * S_Frq
2315861   +          +    -0.79259985419234 * S_Income  +     0.39614485170881 *
2315862   +        S_Kidhome  +     0.08971262203296 * S_Mnt  +    -0.03646043190364 *
2315863   +        S_MntFishProducts  +    -0.01721941944663 * S_MntFruits
2315864   +          +     0.02211291589645 * S_MntGoldProds  +    -0.96925186479365 *
2315865   +        S_MntMeatProducts  +    -0.00290407614994 * S_MntSweetProducts
2315866   +          +     0.23980601137104 * S_MntWines  +    -0.04652446900605 *
2315867   +        S_MonthsAsCustomer  +    -0.56456333417509 * S_NumCatalogPurchases
2315868   +          +     0.10832450413796 * S_NumDealsPurchases
2315869   +          +     0.17985750884741 * S_NumDistPurchases
2315870   +          +     0.45794093255577 * S_NumStorePurchases
2315871   +          +     0.37000538836801 * S_NumWebPurchases
2315872   +          +    -1.28851120009285 * S_NumWebVisitsMonth
2315873   +          +     0.08002748509394 * S_RFMstat  +     1.03727311399928 *
2315874   +        S_RMntFrq  +     1.25259433123634 * S_Recency
2315875   +          +      0.6063997677797 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.56705855466377 * S_AcceptedCmpTotal + -0.0844209787591 * 
S_Age + -0.09400438162402 * S_Frq + -0.79259985419234 * S_Income + 0.39614485170881 * 
S_Kidhome + 0.08971262203296 * S_Mnt + -0.03646043190364 * S_MntFishProducts + 
-0.01721941944663 * S_MntFruits + 0.02211291589645 * S_MntGoldProds + -0.96925186479365 * 
S_MntMeatProducts + -0.00290407614994 * S_MntSweetProducts + 0.23980601137104 * S_MntWines + 
-0.04652446900605 * S_MonthsAsCustomer + -0.56456333417509 * S_NumCatalogPurchases + 
0.10832450413796 * S_NumDealsPurchases + 0.17985750884741 * S_NumDistPurchases + 
0.45794093255577 * S_NumStorePurchases + 0.37000538836801 * S_NumWebPurchases + 
-1.28851120009285 * S_NumWebVisitsMonth + 0.08002748509394 * S_RFMstat + 1.03727311399928 * 
S_RMntFrq + 1.25259433123634 * S_Recency + 0.6063997677797 * S_Teenhome ;
2315876   +   H1x1_2  =      -3.536397256703 * S_AcceptedCmpTotal
2315877   +          +     0.06755794216854 * S_Age  +     0.36034798301658 * S_Frq
2315878   +          +    -0.66995947609372 * S_Income  +    -0.14056662480751 *
2315879   +        S_Kidhome  +    -1.49350363210312 * S_Mnt  +     1.33108886676815 *
2315880   +        S_MntFishProducts  +     0.15317227423355 * S_MntFruits
2315881   +          +     -0.4334555918188 * S_MntGoldProds  +    -6.78273408538559 *
2315882   +        S_MntMeatProducts  +      0.1222923724663 * S_MntSweetProducts
2315883   +          +     2.14871443736565 * S_MntWines  +     0.02904565375257 *
2315884   +        S_MonthsAsCustomer  +    -1.29628794543724 * S_NumCatalogPurchases
2315885   +          +    -1.14287651740452 * S_NumDealsPurchases
2315886   +          +    -0.03763726936438 * S_NumDistPurchases
2315887   +          +     0.87545461519128 * S_NumStorePurchases
2315888   +          +     1.40430622837706 * S_NumWebPurchases
2315889   +          +    -0.99181125135242 * S_NumWebVisitsMonth
2315890   +          +    -0.85808782711899 * S_RFMstat  +     0.77622857392325 *
2315891   +        S_RMntFrq  +     0.74134014231496 * S_Recency
2315892   +          +     0.33602799889832 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -3.536397256703 * S_AcceptedCmpTotal + 0.06755794216854 * S_Age 
+ 0.36034798301658 * S_Frq + -0.66995947609372 * S_Income + -0.14056662480751 * S_Kidhome + 
-1.49350363210312 * S_Mnt + 1.33108886676815 * S_MntFishProducts + 0.15317227423355 * 
S_MntFruits + -0.4334555918188 * S_MntGoldProds + -6.78273408538559 * S_MntMeatProducts + 
0.1222923724663 * S_MntSweetProducts + 2.14871443736565 * S_MntWines + 0.02904565375257 * 
S_MonthsAsCustomer + -1.29628794543724 * S_NumCatalogPurchases + -1.14287651740452 * 
S_NumDealsPurchases + -0.03763726936438 * S_NumDistPurchases + 0.87545461519128 * 
S_NumStorePurchases + 1.40430622837706 * S_NumWebPurchases + -0.99181125135242 * 
S_NumWebVisitsMonth + -0.85808782711899 * S_RFMstat + 0.77622857392325 * S_RMntFrq + 
0.74134014231496 * S_Recency + 0.33602799889832 * S_Teenhome ;
2315893   +   H1x1_1  = H1x1_1  +    -0.09954698695146 * AcceptedCmp10
2315894   +          +    -0.22524310184607 * AcceptedCmp20  +     0.18740337227015 *
2315895   +        AcceptedCmp30  +     0.19026415124702 * AcceptedCmp40
2315896   +          +     0.19314620782838 * AcceptedCmp50  +      0.1912627870672 *
2315897   +        Complain0  +     -0.0121309313962 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.09954698695146 * AcceptedCmp10 + -0.22524310184607 
* AcceptedCmp20 + 0.18740337227015 * AcceptedCmp30 + 0.19026415124702 * AcceptedCmp40 + 
0.19314620782838 * AcceptedCmp50 + 0.1912627870672 * Complain0 + -0.0121309313962 * 
HigherEducationBinary0 ;
2315898   +   H1x1_2  = H1x1_2  +     4.87501418914654 * AcceptedCmp10
2315899   +          +    -2.27512281036702 * AcceptedCmp20  +    -2.26229365259357 *
2315900   +        AcceptedCmp30  +    -1.91759307257187 * AcceptedCmp40
2315901   +          +     1.89500877562385 * AcceptedCmp50  +     0.07702263203881 *
2315902   +        Complain0  +     0.22320697170891 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 4.87501418914654 * AcceptedCmp10 + -2.27512281036702 * 
AcceptedCmp20 + -2.26229365259357 * AcceptedCmp30 + -1.91759307257187 * AcceptedCmp40 + 
1.89500877562385 * AcceptedCmp50 + 0.07702263203881 * Complain0 + 0.22320697170891 * 
HigherEducationBinary0 ;
2315903   +   H1x1_1  = H1x1_1  +    -0.20577811382111 * Education2n_Cycle
2315904   +          +     0.38041603001978 * EducationBasic  +    -0.07500001714991 *
2315905   +        EducationGraduation  +    -0.07937937980079 * EducationMaster
2315906   +          +    -0.73074769535078 * Marital_StatusDivorced
2315907   +          +     1.30761047614007 * Marital_StatusMarried
2315908   +          +    -0.89398481770909 * Marital_StatusSingle
2315909   +          +     1.23033906473946 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.20577811382111 * Education2n_Cycle + 
0.38041603001978 * EducationBasic + -0.07500001714991 * EducationGraduation + 
-0.07937937980079 * EducationMaster + -0.73074769535078 * Marital_StatusDivorced + 
1.30761047614007 * Marital_StatusMarried + -0.89398481770909 * Marital_StatusSingle + 
1.23033906473946 * Marital_StatusTogether ;
2315910   +   H1x1_2  = H1x1_2  +    -0.31324299388605 * Education2n_Cycle
2315911   +          +    -0.17261511322993 * EducationBasic  +     0.18531128617792 *
2315912   +        EducationGraduation  +    -0.26755057731607 * EducationMaster
2315913   +          +     0.18252613160517 * Marital_StatusDivorced
2315914   +          +     0.12434140806967 * Marital_StatusMarried
2315915   +          +    -0.30167854485292 * Marital_StatusSingle
2315916   +          +     0.17039487484346 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.31324299388605 * Education2n_Cycle + 
-0.17261511322993 * EducationBasic + 0.18531128617792 * EducationGraduation + 
-0.26755057731607 * EducationMaster + 0.18252613160517 * Marital_StatusDivorced + 
0.12434140806967 * Marital_StatusMarried + -0.30167854485292 * Marital_StatusSingle + 
0.17039487484346 * Marital_StatusTogether ;
2315917   +   H1x1_1  =     1.34903330850071 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.34903330850071 + H1x1_1 ;
2315918   +   H1x1_2  =    -1.30570656722477 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.30570656722477 + H1x1_2 ;
2315919   +   H1x1_3  = 0;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0;
2315920   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
2315921   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2315922   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2315923   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2315924   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2315925   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2315926   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2315927   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2315928   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2315929   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2315930   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2315931   +END;
MPRINT(EM_DIAGRAM):   END;
2315932   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2315933   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2315934   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2315935   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2315936   +END;
MPRINT(EM_DIAGRAM):   END;
2315937   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2315938   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2315939   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2315940   +
2315941   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2315942   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2315943   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2315944   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2315945   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2315946   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2315947   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2315948   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2315949   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2315950   +end;
MPRINT(EM_DIAGRAM):   end;
2315951   +else do;
MPRINT(EM_DIAGRAM):   else do;
2315952   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2315953   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2315954   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2315955   +   end;
MPRINT(EM_DIAGRAM):   end;
2315956   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2315957   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2315958   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2315959   +   end;
MPRINT(EM_DIAGRAM):   end;
2315960   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2315961   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2315962   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2315963   +   end;
MPRINT(EM_DIAGRAM):   end;
2315964   +end;
MPRINT(EM_DIAGRAM):   end;
2315965   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2315966   +   P_DepVar1  =    -6.93513092547389 * H1x1_1  +    -13.9109136683704 * H1x1_2
2315967   +          +     22.9468369203579 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.93513092547389 * H1x1_1 + -13.9109136683704 * H1x1_2 + 
22.9468369203579 * H1x1_3 ;
2315968   +   P_DepVar1  =    -0.50030602649315 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.50030602649315 + P_DepVar1 ;
2315969   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2315970   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2315971   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2315972   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2315973   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2315974   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2315975   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2315976   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2315977   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2315978   +END;
MPRINT(EM_DIAGRAM):   END;
2315979   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2315980   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2315981   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2315982   +END;
MPRINT(EM_DIAGRAM):   END;
2315983   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2315984   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2315985   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2315986   +END;
MPRINT(EM_DIAGRAM):   END;
2315987   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2315988   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2315989   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2315990   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2315991   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2315992   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2315993   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2315994   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2315995   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2315996   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2315997   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2315998   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2315999   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2316000   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2316001   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2316002   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2316003   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2316004   +END;
MPRINT(EM_DIAGRAM):   END;
2316005   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2316006   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2316007   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2316008   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2316009   +* Renaming variables for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural8;
2316010   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2316011   +* Renaming Posterior variables for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural8;
2316012   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2316013   +drop AutoNeural8_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_P_DepVar1;
2316014   +AutoNeural8_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural8_P_DepVar1 = P_DepVar1;
2316015   +drop AutoNeural8_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_P_DepVar0;
2316016   +AutoNeural8_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural8_P_DepVar0 = P_DepVar0;
2316017   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2316018   +* Renaming Into variables for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural8;
2316019   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2316020   +length AutoNeural8_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural8_I_DepVar $32;
2316021   +drop AutoNeural8_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_I_DepVar;
2316022   +AutoNeural8_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural8_I_DepVar = I_DepVar;
2316023   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2316024   +* Renaming _WARN_ variable for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural8;
2316025   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2316026   +length AutoNeural8_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural8_WARN_ $4;
2316027   +drop AutoNeural8_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_WARN_;
2316028   +AutoNeural8_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural8_WARN_ = _WARN_;
2316029   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2316030   +* Ensmbl38: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Scoring Code of model 4 of 7;
2316031   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2316032   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2316033   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2316034   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2316035   +* NODE: AutoNeural10;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural10;
2316036   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2316037   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2316038   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2316039   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2316040   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2316041   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2316042   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2316043   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2316044   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2316045   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2316046   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2316047   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2316048   +LENGTH _WARN_ $4
2316049   +      F_DepVar  $ 12
2316050   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2316051   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2316052   +
2316053   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2316054   +
2316055   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2316056   +
2316057   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2316058   +
2316059   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2316060   +
2316061   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2316062   +
2316063   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2316064   +
2316065   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2316066   +
2316067   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2316068   +
2316069   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2316070   +
2316071   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2316072   +
2316073   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2316074   +
2316075   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2316076   +
2316077   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2316078   +
2316079   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2316080   +
2316081   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2316082   +
2316083   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2316084   +
2316085   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2316086   +
2316087   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2316088   +
2316089   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2316090   +
2316091   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2316092   +
2316093   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2316094   +
2316095   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2316096   +
2316097   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2316098   +
2316099   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2316100   +
2316101   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2316102   +
2316103   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2316104   +
2316105   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2316106   +
2316107   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2316108   +
2316109   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2316110   +
2316111   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2316112   +
2316113   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2316114   +
2316115   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2316116   +
2316117   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2316118   +
2316119   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2316120   +
2316121   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2316122   +
2316123   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2316124   +
2316125   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2316126   +
2316127   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2316128   +
2316129   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2316130   +
2316131   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2316132   +
2316133   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2316134   +
2316135   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2316136   +
2316137   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2316138   +
2316139   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2316140   +
2316141   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2316142   +
2316143   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2316144   +
2316145   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2316146   +
2316147   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2316148   +
2316149   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2316150   +
2316151   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2316152   +
2316153   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2316154   +
2316155   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2316156   +
2316157   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2316158   +
2316159   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2316160   +
2316161   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2316162   +
2316163   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2316164   +
2316165   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2316166   +
2316167   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2316168   +
2316169   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2316170   +
2316171   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2316172   +
2316173   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2316174   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2316175   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2316176   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2316177   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2316178   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2316179   +end;
MPRINT(EM_DIAGRAM):   end;
2316180   +else do;
MPRINT(EM_DIAGRAM):   else do;
2316181   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2316182   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2316183   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2316184   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2316185   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2316186   +   end;
MPRINT(EM_DIAGRAM):   end;
2316187   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2316188   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2316189   +   end;
MPRINT(EM_DIAGRAM):   end;
2316190   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2316191   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2316192   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2316193   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2316194   +   end;
MPRINT(EM_DIAGRAM):   end;
2316195   +end;
MPRINT(EM_DIAGRAM):   end;
2316196   +
2316197   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2316198   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2316199   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2316200   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2316201   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2316202   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2316203   +end;
MPRINT(EM_DIAGRAM):   end;
2316204   +else do;
MPRINT(EM_DIAGRAM):   else do;
2316205   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2316206   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2316207   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2316208   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2316209   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2316210   +   end;
MPRINT(EM_DIAGRAM):   end;
2316211   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2316212   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2316213   +   end;
MPRINT(EM_DIAGRAM):   end;
2316214   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2316215   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2316216   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2316217   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2316218   +   end;
MPRINT(EM_DIAGRAM):   end;
2316219   +end;
MPRINT(EM_DIAGRAM):   end;
2316220   +
2316221   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2316222   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2316223   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2316224   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2316225   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2316226   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2316227   +end;
MPRINT(EM_DIAGRAM):   end;
2316228   +else do;
MPRINT(EM_DIAGRAM):   else do;
2316229   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2316230   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2316231   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2316232   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2316233   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2316234   +   end;
MPRINT(EM_DIAGRAM):   end;
2316235   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2316236   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2316237   +   end;
MPRINT(EM_DIAGRAM):   end;
2316238   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2316239   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2316240   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2316241   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2316242   +   end;
MPRINT(EM_DIAGRAM):   end;
2316243   +end;
MPRINT(EM_DIAGRAM):   end;
2316244   +
2316245   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2316246   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2316247   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2316248   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2316249   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2316250   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2316251   +end;
MPRINT(EM_DIAGRAM):   end;
2316252   +else do;
MPRINT(EM_DIAGRAM):   else do;
2316253   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2316254   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2316255   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2316256   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2316257   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2316258   +   end;
MPRINT(EM_DIAGRAM):   end;
2316259   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2316260   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2316261   +   end;
MPRINT(EM_DIAGRAM):   end;
2316262   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2316263   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2316264   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2316265   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2316266   +   end;
MPRINT(EM_DIAGRAM):   end;
2316267   +end;
MPRINT(EM_DIAGRAM):   end;
2316268   +
2316269   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2316270   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2316271   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2316272   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2316273   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2316274   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2316275   +end;
MPRINT(EM_DIAGRAM):   end;
2316276   +else do;
MPRINT(EM_DIAGRAM):   else do;
2316277   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2316278   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2316279   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2316280   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2316281   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2316282   +   end;
MPRINT(EM_DIAGRAM):   end;
2316283   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2316284   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2316285   +   end;
MPRINT(EM_DIAGRAM):   end;
2316286   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2316287   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2316288   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2316289   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2316290   +   end;
MPRINT(EM_DIAGRAM):   end;
2316291   +end;
MPRINT(EM_DIAGRAM):   end;
2316292   +
2316293   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2316294   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2316295   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2316296   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2316297   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2316298   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2316299   +end;
MPRINT(EM_DIAGRAM):   end;
2316300   +else do;
MPRINT(EM_DIAGRAM):   else do;
2316301   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2316302   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2316303   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2316304   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2316305   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2316306   +   end;
MPRINT(EM_DIAGRAM):   end;
2316307   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2316308   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2316309   +   end;
MPRINT(EM_DIAGRAM):   end;
2316310   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2316311   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2316312   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2316313   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2316314   +   end;
MPRINT(EM_DIAGRAM):   end;
2316315   +end;
MPRINT(EM_DIAGRAM):   end;
2316316   +
2316317   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2316318   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2316319   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2316320   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2316321   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2316322   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2316323   +end;
MPRINT(EM_DIAGRAM):   end;
2316324   +else do;
MPRINT(EM_DIAGRAM):   else do;
2316325   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2316326   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2316327   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2316328   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2316329   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2316330   +   end;
MPRINT(EM_DIAGRAM):   end;
2316331   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2316332   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2316333   +   end;
MPRINT(EM_DIAGRAM):   end;
2316334   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2316335   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2316336   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2316337   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2316338   +   end;
MPRINT(EM_DIAGRAM):   end;
2316339   +end;
MPRINT(EM_DIAGRAM):   end;
2316340   +
2316341   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2316342   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2316343   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2316344   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2316345   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2316346   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2316347   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2316348   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2316349   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2316350   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2316351   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2316352   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2316353   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2316354   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2316355   +end;
MPRINT(EM_DIAGRAM):   end;
2316356   +else do;
MPRINT(EM_DIAGRAM):   else do;
2316357   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2316358   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2316359   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2316360   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2316361   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2316362   +   end;
MPRINT(EM_DIAGRAM):   end;
2316363   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2316364   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2316365   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2316366   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2316367   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2316368   +   end;
MPRINT(EM_DIAGRAM):   end;
2316369   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2316370   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2316371   +   end;
MPRINT(EM_DIAGRAM):   end;
2316372   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2316373   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2316374   +   end;
MPRINT(EM_DIAGRAM):   end;
2316375   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2316376   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2316377   +   end;
MPRINT(EM_DIAGRAM):   end;
2316378   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2316379   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2316380   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2316381   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2316382   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2316383   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2316384   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2316385   +   end;
MPRINT(EM_DIAGRAM):   end;
2316386   +end;
MPRINT(EM_DIAGRAM):   end;
2316387   +
2316388   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2316389   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2316390   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2316391   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2316392   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2316393   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2316394   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2316395   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2316396   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2316397   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2316398   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2316399   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2316400   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2316401   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2316402   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2316403   +end;
MPRINT(EM_DIAGRAM):   end;
2316404   +else do;
MPRINT(EM_DIAGRAM):   else do;
2316405   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2316406   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2316407   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2316408   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2316409   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2316410   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2316411   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2316412   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2316413   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2316414   +         end;
MPRINT(EM_DIAGRAM):   end;
2316415   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2316416   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2316417   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2316418   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2316419   +            end;
MPRINT(EM_DIAGRAM):   end;
2316420   +         end;
MPRINT(EM_DIAGRAM):   end;
2316421   +      end;
MPRINT(EM_DIAGRAM):   end;
2316422   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2316423   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2316424   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2316425   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2316426   +         end;
MPRINT(EM_DIAGRAM):   end;
2316427   +      end;
MPRINT(EM_DIAGRAM):   end;
2316428   +   end;
MPRINT(EM_DIAGRAM):   end;
2316429   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2316430   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2316431   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2316432   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2316433   +      end;
MPRINT(EM_DIAGRAM):   end;
2316434   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2316435   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2316436   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2316437   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2316438   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2316439   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2316440   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2316441   +         end;
MPRINT(EM_DIAGRAM):   end;
2316442   +      end;
MPRINT(EM_DIAGRAM):   end;
2316443   +   end;
MPRINT(EM_DIAGRAM):   end;
2316444   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2316445   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2316446   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2316447   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2316448   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2316449   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2316450   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2316451   +   end;
MPRINT(EM_DIAGRAM):   end;
2316452   +end;
MPRINT(EM_DIAGRAM):   end;
2316453   +
2316454   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2316455   +*** Checking missing input Interval
2316456   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2316457   +
2316458   +IF NMISS(
2316459   +   AcceptedCmpTotal ,
2316460   +   Age ,
2316461   +   Frq ,
2316462   +   Income ,
2316463   +   Kidhome ,
2316464   +   Mnt ,
2316465   +   MntFishProducts ,
2316466   +   MntFruits ,
2316467   +   MntGoldProds ,
2316468   +   MntMeatProducts ,
2316469   +   MntSweetProducts ,
2316470   +   MntWines ,
2316471   +   MonthsAsCustomer ,
2316472   +   NumCatalogPurchases ,
2316473   +   NumDealsPurchases ,
2316474   +   NumDistPurchases ,
2316475   +   NumStorePurchases ,
2316476   +   NumWebPurchases ,
2316477   +   NumWebVisitsMonth ,
2316478   +   RFMstat ,
2316479   +   RMntFrq ,
2316480   +   Recency ,
2316481   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2316482   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2316483   +
2316484   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2316485   +END;
MPRINT(EM_DIAGRAM):   END;
2316486   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2316487   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2316488   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2316489   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2316490   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2316491   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2316492   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2316493   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2316494   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2316495   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2316496   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2316497   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2316498   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2316499   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2316500   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2316501   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2316502   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2316503   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2316504   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2316505   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2316506   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2316507   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2316508   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2316509   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2316510   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2316511   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2316512   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2316513   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2316514   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2316515   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2316516   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2316517   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2316518   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2316519   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2316520   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2316521   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2316522   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2316523   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2316524   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2316525   +END;
MPRINT(EM_DIAGRAM):   END;
2316526   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2316527   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2316528   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2316529   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2316530   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2316531   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2316532   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2316533   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2316534   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2316535   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2316536   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2316537   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2316538   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2316539   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2316540   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2316541   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2316542   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2316543   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2316544   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2316545   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2316546   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2316547   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2316548   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2316549   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2316550   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2316551   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2316552   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2316553   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2316554   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2316555   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2316556   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2316557   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2316558   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2316559   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2316560   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2316561   +   ELSE S_NumCatalogPurchases
2316562   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2316563   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2316564   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2316565   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2316566   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2316567   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2316568   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2316569   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2316570   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2316571   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2316572   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2316573   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2316574   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2316575   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2316576   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2316577   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2316578   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2316579   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2316580   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2316581   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2316582   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2316583   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2316584   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2316585   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2316586   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2316587   +END;
MPRINT(EM_DIAGRAM):   END;
2316588   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2316589   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2316590   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2316591   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2316592   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2316593   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2316594   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2316595   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2316596   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2316597   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2316598   +   H1x1_1  =     -2.0588471958351 * S_AcceptedCmpTotal
2316599   +          +     0.38628980389456 * S_Age  +     -0.8545617733777 * S_Frq
2316600   +          +    -1.37557200210661 * S_Income  +     1.58583945545125 *
2316601   +        S_Kidhome  +    -1.49250871593186 * S_Mnt  +    -2.02986091068301 *
2316602   +        S_MntFishProducts  +     0.28845511703412 * S_MntFruits
2316603   +          +    -0.62495372005095 * S_MntGoldProds  +     3.22144698444712 *
2316604   +        S_MntMeatProducts  +    -2.67158036653801 * S_MntSweetProducts
2316605   +          +    -4.30837863985493 * S_MntWines  +     0.39603200162704 *
2316606   +        S_MonthsAsCustomer  +      1.8259166147951 * S_NumCatalogPurchases
2316607   +          +      3.4758215776031 * S_NumDealsPurchases
2316608   +          +     0.17094021755289 * S_NumDistPurchases
2316609   +          +    -2.72090095694641 * S_NumStorePurchases
2316610   +          +    -0.31877935826328 * S_NumWebPurchases
2316611   +          +    -2.03399974412918 * S_NumWebVisitsMonth
2316612   +          +     2.74309130038659 * S_RFMstat  +    -0.74941844935268 *
2316613   +        S_RMntFrq  +     0.29064555076615 * S_Recency
2316614   +          +    -0.57040700827247 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.0588471958351 * S_AcceptedCmpTotal + 0.38628980389456 * 
S_Age + -0.8545617733777 * S_Frq + -1.37557200210661 * S_Income + 1.58583945545125 * S_Kidhome 
+ -1.49250871593186 * S_Mnt + -2.02986091068301 * S_MntFishProducts + 0.28845511703412 * 
S_MntFruits + -0.62495372005095 * S_MntGoldProds + 3.22144698444712 * S_MntMeatProducts + 
-2.67158036653801 * S_MntSweetProducts + -4.30837863985493 * S_MntWines + 0.39603200162704 * 
S_MonthsAsCustomer + 1.8259166147951 * S_NumCatalogPurchases + 3.4758215776031 * 
S_NumDealsPurchases + 0.17094021755289 * S_NumDistPurchases + -2.72090095694641 * 
S_NumStorePurchases + -0.31877935826328 * S_NumWebPurchases + -2.03399974412918 * 
S_NumWebVisitsMonth + 2.74309130038659 * S_RFMstat + -0.74941844935268 * S_RMntFrq + 
0.29064555076615 * S_Recency + -0.57040700827247 * S_Teenhome ;
2316615   +   H1x1_2  =     -0.5995699177824 * S_AcceptedCmpTotal
2316616   +          +    -1.17769485933608 * S_Age  +     0.95998296288295 * S_Frq
2316617   +          +     -2.2343179478513 * S_Income  +     3.17436638275163 *
2316618   +        S_Kidhome  +     0.46987648124346 * S_Mnt  +     0.07213935656698 *
2316619   +        S_MntFishProducts  +    -1.38055808108069 * S_MntFruits
2316620   +          +     0.62140960451545 * S_MntGoldProds  +     -1.9000500396873 *
2316621   +        S_MntMeatProducts  +    -0.35707372583597 * S_MntSweetProducts
2316622   +          +     1.99720917743483 * S_MntWines  +     0.89245096364062 *
2316623   +        S_MonthsAsCustomer  +    -0.61497875715928 * S_NumCatalogPurchases
2316624   +          +    -1.21013804197082 * S_NumDealsPurchases
2316625   +          +     0.59974279122188 * S_NumDistPurchases
2316626   +          +     1.92425710681156 * S_NumStorePurchases
2316627   +          +     1.02413182452324 * S_NumWebPurchases
2316628   +          +    -3.63276285340174 * S_NumWebVisitsMonth
2316629   +          +     0.33919100670479 * S_RFMstat  +     0.84767315208026 *
2316630   +        S_RMntFrq  +     3.87352563099005 * S_Recency
2316631   +          +     2.74174964084917 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5995699177824 * S_AcceptedCmpTotal + -1.17769485933608 * 
S_Age + 0.95998296288295 * S_Frq + -2.2343179478513 * S_Income + 3.17436638275163 * S_Kidhome 
+ 0.46987648124346 * S_Mnt + 0.07213935656698 * S_MntFishProducts + -1.38055808108069 * 
S_MntFruits + 0.62140960451545 * S_MntGoldProds + -1.9000500396873 * S_MntMeatProducts + 
-0.35707372583597 * S_MntSweetProducts + 1.99720917743483 * S_MntWines + 0.89245096364062 * 
S_MonthsAsCustomer + -0.61497875715928 * S_NumCatalogPurchases + -1.21013804197082 * 
S_NumDealsPurchases + 0.59974279122188 * S_NumDistPurchases + 1.92425710681156 * 
S_NumStorePurchases + 1.02413182452324 * S_NumWebPurchases + -3.63276285340174 * 
S_NumWebVisitsMonth + 0.33919100670479 * S_RFMstat + 0.84767315208026 * S_RMntFrq + 
3.87352563099005 * S_Recency + 2.74174964084917 * S_Teenhome ;
2316632   +   H1x1_3  =    -2.27029708882419 * S_AcceptedCmpTotal
2316633   +          +     0.57558817521081 * S_Age  +     0.03666022895146 * S_Frq
2316634   +          +    -0.43764949843184 * S_Income  +     0.05202039236868 *
2316635   +        S_Kidhome  +    -0.17515517773197 * S_Mnt  +      2.1454579331563 *
2316636   +        S_MntFishProducts  +     -0.0544472234117 * S_MntFruits
2316637   +          +    -0.24751372889101 * S_MntGoldProds  +    -7.95986512066472 *
2316638   +        S_MntMeatProducts  +    -0.42258869313323 * S_MntSweetProducts
2316639   +          +      4.6542173574208 * S_MntWines  +     0.27973663838423 *
2316640   +        S_MonthsAsCustomer  +    -0.92923468464154 * S_NumCatalogPurchases
2316641   +          +      0.4928343071801 * S_NumDealsPurchases
2316642   +          +     -0.0196677325409 * S_NumDistPurchases
2316643   +          +     0.44395828164873 * S_NumStorePurchases
2316644   +          +     0.86947051591224 * S_NumWebPurchases
2316645   +          +    -0.96787241206077 * S_NumWebVisitsMonth
2316646   +          +     -0.9429396337834 * S_RFMstat  +    -1.69298966254302 *
2316647   +        S_RMntFrq  +     0.24582117217188 * S_Recency
2316648   +          +    -1.08471509540368 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.27029708882419 * S_AcceptedCmpTotal + 0.57558817521081 * 
S_Age + 0.03666022895146 * S_Frq + -0.43764949843184 * S_Income + 0.05202039236868 * S_Kidhome 
+ -0.17515517773197 * S_Mnt + 2.1454579331563 * S_MntFishProducts + -0.0544472234117 * 
S_MntFruits + -0.24751372889101 * S_MntGoldProds + -7.95986512066472 * S_MntMeatProducts + 
-0.42258869313323 * S_MntSweetProducts + 4.6542173574208 * S_MntWines + 0.27973663838423 * 
S_MonthsAsCustomer + -0.92923468464154 * S_NumCatalogPurchases + 0.4928343071801 * 
S_NumDealsPurchases + -0.0196677325409 * S_NumDistPurchases + 0.44395828164873 * 
S_NumStorePurchases + 0.86947051591224 * S_NumWebPurchases + -0.96787241206077 * 
S_NumWebVisitsMonth + -0.9429396337834 * S_RFMstat + -1.69298966254302 * S_RMntFrq + 
0.24582117217188 * S_Recency + -1.08471509540368 * S_Teenhome ;
2316649   +   H1x1_4  =     0.54181596412096 * S_AcceptedCmpTotal
2316650   +          +    -1.19331526818752 * S_Age  +     0.79853759822324 * S_Frq
2316651   +          +     0.73370928178794 * S_Income  +     0.38661834479377 *
2316652   +        S_Kidhome  +      0.3442876988888 * S_Mnt  +    -0.58769739655035 *
2316653   +        S_MntFishProducts  +     -0.8703586573687 * S_MntFruits
2316654   +          +    -0.06073044217122 * S_MntGoldProds  +     1.06031608775663 *
2316655   +        S_MntMeatProducts  +      0.1600438561366 * S_MntSweetProducts
2316656   +          +    -0.10937637342015 * S_MntWines  +     0.44423445817796 *
2316657   +        S_MonthsAsCustomer  +     2.20653376632749 * S_NumCatalogPurchases
2316658   +          +     1.10280977051932 * S_NumDealsPurchases
2316659   +          +     0.99310057404036 * S_NumDistPurchases
2316660   +          +    -0.05647459609331 * S_NumStorePurchases
2316661   +          +    -0.89852483938631 * S_NumWebPurchases
2316662   +          +     2.63022480227445 * S_NumWebVisitsMonth
2316663   +          +      0.0081819695781 * S_RFMstat  +     1.19338523211724 *
2316664   +        S_RMntFrq  +    -4.46436997560659 * S_Recency
2316665   +          +    -2.03251171372039 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.54181596412096 * S_AcceptedCmpTotal + -1.19331526818752 * 
S_Age + 0.79853759822324 * S_Frq + 0.73370928178794 * S_Income + 0.38661834479377 * S_Kidhome 
+ 0.3442876988888 * S_Mnt + -0.58769739655035 * S_MntFishProducts + -0.8703586573687 * 
S_MntFruits + -0.06073044217122 * S_MntGoldProds + 1.06031608775663 * S_MntMeatProducts + 
0.1600438561366 * S_MntSweetProducts + -0.10937637342015 * S_MntWines + 0.44423445817796 * 
S_MonthsAsCustomer + 2.20653376632749 * S_NumCatalogPurchases + 1.10280977051932 * 
S_NumDealsPurchases + 0.99310057404036 * S_NumDistPurchases + -0.05647459609331 * 
S_NumStorePurchases + -0.89852483938631 * S_NumWebPurchases + 2.63022480227445 * 
S_NumWebVisitsMonth + 0.0081819695781 * S_RFMstat + 1.19338523211724 * S_RMntFrq + 
-4.46436997560659 * S_Recency + -2.03251171372039 * S_Teenhome ;
2316666   +   H1x1_5  =    -1.03227948250072 * S_AcceptedCmpTotal
2316667   +          +     0.25510562405413 * S_Age  +     0.11938172756061 * S_Frq
2316668   +          +    -0.88855927472898 * S_Income  +    -0.98732962014399 *
2316669   +        S_Kidhome  +     0.57537935682752 * S_Mnt  +     0.07702692666996 *
2316670   +        S_MntFishProducts  +     0.69541223905843 * S_MntFruits
2316671   +          +    -0.26720187465927 * S_MntGoldProds  +    -0.03938241662919 *
2316672   +        S_MntMeatProducts  +     1.08781093588885 * S_MntSweetProducts
2316673   +          +     1.16253823123182 * S_MntWines  +    -1.60607722651025 *
2316674   +        S_MonthsAsCustomer  +    -1.69043794225498 * S_NumCatalogPurchases
2316675   +          +    -2.62220616180571 * S_NumDealsPurchases
2316676   +          +    -0.51737930835331 * S_NumDistPurchases
2316677   +          +     0.88655783158133 * S_NumStorePurchases
2316678   +          +     0.35132468809969 * S_NumWebPurchases
2316679   +          +     -1.6320869675862 * S_NumWebVisitsMonth
2316680   +          +     0.33776958473405 * S_RFMstat  +    -0.42290181425075 *
2316681   +        S_RMntFrq  +     1.06226028677401 * S_Recency
2316682   +          +     1.11855899514962 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.03227948250072 * S_AcceptedCmpTotal + 0.25510562405413 * 
S_Age + 0.11938172756061 * S_Frq + -0.88855927472898 * S_Income + -0.98732962014399 * 
S_Kidhome + 0.57537935682752 * S_Mnt + 0.07702692666996 * S_MntFishProducts + 0.69541223905843 
* S_MntFruits + -0.26720187465927 * S_MntGoldProds + -0.03938241662919 * S_MntMeatProducts + 
1.08781093588885 * S_MntSweetProducts + 1.16253823123182 * S_MntWines + -1.60607722651025 * 
S_MonthsAsCustomer + -1.69043794225498 * S_NumCatalogPurchases + -2.62220616180571 * 
S_NumDealsPurchases + -0.51737930835331 * S_NumDistPurchases + 0.88655783158133 * 
S_NumStorePurchases + 0.35132468809969 * S_NumWebPurchases + -1.6320869675862 * 
S_NumWebVisitsMonth + 0.33776958473405 * S_RFMstat + -0.42290181425075 * S_RMntFrq + 
1.06226028677401 * S_Recency + 1.11855899514962 * S_Teenhome ;
2316683   +   H1x1_1  = H1x1_1  +     0.53637737817097 * AcceptedCmp10
2316684   +          +    -1.85405146733588 * AcceptedCmp20  +    -1.47621046566649 *
2316685   +        AcceptedCmp30  +    -1.37767318086242 * AcceptedCmp40
2316686   +          +    -0.96348396070145 * AcceptedCmp50  +    -1.30976546088379 *
2316687   +        Complain0  +    -0.54848314184314 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.53637737817097 * AcceptedCmp10 + -1.85405146733588 * 
AcceptedCmp20 + -1.47621046566649 * AcceptedCmp30 + -1.37767318086242 * AcceptedCmp40 + 
-0.96348396070145 * AcceptedCmp50 + -1.30976546088379 * Complain0 + -0.54848314184314 * 
HigherEducationBinary0 ;
2316688   +   H1x1_2  = H1x1_2  +     0.18445380584184 * AcceptedCmp10
2316689   +          +    -0.69257274561716 * AcceptedCmp20  +     0.17226038285159 *
2316690   +        AcceptedCmp30  +    -1.06145995435722 * AcceptedCmp40
2316691   +          +     1.23459262841144 * AcceptedCmp50  +    -0.14674063302587 *
2316692   +        Complain0  +    -1.08422405648698 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.18445380584184 * AcceptedCmp10 + -0.69257274561716 * 
AcceptedCmp20 + 0.17226038285159 * AcceptedCmp30 + -1.06145995435722 * AcceptedCmp40 + 
1.23459262841144 * AcceptedCmp50 + -0.14674063302587 * Complain0 + -1.08422405648698 * 
HigherEducationBinary0 ;
2316693   +   H1x1_3  = H1x1_3  +     0.81272808689375 * AcceptedCmp10
2316694   +          +    -0.37057950605918 * AcceptedCmp20  +    -1.75364708883985 *
2316695   +        AcceptedCmp30  +     -1.9879502333289 * AcceptedCmp40
2316696   +          +     2.82649108460951 * AcceptedCmp50  +    -0.14219031901768 *
2316697   +        Complain0  +     -0.5514346363694 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.81272808689375 * AcceptedCmp10 + -0.37057950605918 * 
AcceptedCmp20 + -1.75364708883985 * AcceptedCmp30 + -1.9879502333289 * AcceptedCmp40 + 
2.82649108460951 * AcceptedCmp50 + -0.14219031901768 * Complain0 + -0.5514346363694 * 
HigherEducationBinary0 ;
2316698   +   H1x1_4  = H1x1_4  +    -1.12354567881562 * AcceptedCmp10
2316699   +          +    -1.64564861831306 * AcceptedCmp20  +    -1.84950171464501 *
2316700   +        AcceptedCmp30  +    -2.60581164673686 * AcceptedCmp40
2316701   +          +    -0.53568003317161 * AcceptedCmp50  +    -0.13929928866767 *
2316702   +        Complain0  +     1.18053116626218 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.12354567881562 * AcceptedCmp10 + -1.64564861831306 
* AcceptedCmp20 + -1.84950171464501 * AcceptedCmp30 + -2.60581164673686 * AcceptedCmp40 + 
-0.53568003317161 * AcceptedCmp50 + -0.13929928866767 * Complain0 + 1.18053116626218 * 
HigherEducationBinary0 ;
2316703   +   H1x1_5  = H1x1_5  +     -0.3006993305802 * AcceptedCmp10
2316704   +          +    -0.67101949915278 * AcceptedCmp20  +     0.48950637221178 *
2316705   +        AcceptedCmp30  +     0.25937105093078 * AcceptedCmp40
2316706   +          +       0.650714225549 * AcceptedCmp50  +    -0.53543482850089 *
2316707   +        Complain0  +     0.62014708316206 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.3006993305802 * AcceptedCmp10 + -0.67101949915278 * 
AcceptedCmp20 + 0.48950637221178 * AcceptedCmp30 + 0.25937105093078 * AcceptedCmp40 + 
0.650714225549 * AcceptedCmp50 + -0.53543482850089 * Complain0 + 0.62014708316206 * 
HigherEducationBinary0 ;
2316708   +   H1x1_1  = H1x1_1  +     0.78710932360637 * Education2n_Cycle
2316709   +          +    -0.34656604802235 * EducationBasic  +     0.11820082193221 *
2316710   +        EducationGraduation  +     1.42539292513854 * EducationMaster
2316711   +          +     0.34809919741136 * Marital_StatusDivorced
2316712   +          +    -0.26594093535929 * Marital_StatusMarried
2316713   +          +     0.70249715999987 * Marital_StatusSingle
2316714   +          +    -0.45710525283449 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.78710932360637 * Education2n_Cycle + 
-0.34656604802235 * EducationBasic + 0.11820082193221 * EducationGraduation + 1.42539292513854 
* EducationMaster + 0.34809919741136 * Marital_StatusDivorced + -0.26594093535929 * 
Marital_StatusMarried + 0.70249715999987 * Marital_StatusSingle + -0.45710525283449 * 
Marital_StatusTogether ;
2316715   +   H1x1_2  = H1x1_2  +    -1.00496261512915 * Education2n_Cycle
2316716   +          +     0.66783492956492 * EducationBasic  +     0.91185122922538 *
2316717   +        EducationGraduation  +    -0.28204692640004 * EducationMaster
2316718   +          +    -0.20448765627193 * Marital_StatusDivorced
2316719   +          +     1.73231344674733 * Marital_StatusMarried
2316720   +          +    -0.70956480480373 * Marital_StatusSingle
2316721   +          +      1.0926428215879 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.00496261512915 * Education2n_Cycle + 
0.66783492956492 * EducationBasic + 0.91185122922538 * EducationGraduation + -0.28204692640004 
* EducationMaster + -0.20448765627193 * Marital_StatusDivorced + 1.73231344674733 * 
Marital_StatusMarried + -0.70956480480373 * Marital_StatusSingle + 1.0926428215879 * 
Marital_StatusTogether ;
2316722   +   H1x1_3  = H1x1_3  +    -0.06222681334412 * Education2n_Cycle
2316723   +          +    -0.00009122618999 * EducationBasic  +    -0.07444046529217 *
2316724   +        EducationGraduation  +     1.01284161768787 * EducationMaster
2316725   +          +     0.30333818684353 * Marital_StatusDivorced
2316726   +          +    -1.44603535988199 * Marital_StatusMarried
2316727   +          +     0.48409598426383 * Marital_StatusSingle
2316728   +          +    -1.14528682521622 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.06222681334412 * Education2n_Cycle + 
-0.00009122618999 * EducationBasic + -0.07444046529217 * EducationGraduation + 
1.01284161768787 * EducationMaster + 0.30333818684353 * Marital_StatusDivorced + 
-1.44603535988199 * Marital_StatusMarried + 0.48409598426383 * Marital_StatusSingle + 
-1.14528682521622 * Marital_StatusTogether ;
2316729   +   H1x1_4  = H1x1_4  +    -0.92316818310935 * Education2n_Cycle
2316730   +          +     0.93590924020503 * EducationBasic  +     0.36762108040277 *
2316731   +        EducationGraduation  +    -1.17735200022013 * EducationMaster
2316732   +          +     -1.5342907846297 * Marital_StatusDivorced
2316733   +          +    -1.79544684592172 * Marital_StatusMarried
2316734   +          +     0.65604313645117 * Marital_StatusSingle
2316735   +          +    -2.08172869142628 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.92316818310935 * Education2n_Cycle + 
0.93590924020503 * EducationBasic + 0.36762108040277 * EducationGraduation + -1.17735200022013 
* EducationMaster + -1.5342907846297 * Marital_StatusDivorced + -1.79544684592172 * 
Marital_StatusMarried + 0.65604313645117 * Marital_StatusSingle + -2.08172869142628 * 
Marital_StatusTogether ;
2316736   +   H1x1_5  = H1x1_5  +    -0.56328800945753 * Education2n_Cycle
2316737   +          +    -0.06918346311418 * EducationBasic  +     -1.5176897786776 *
2316738   +        EducationGraduation  +     0.09618331198762 * EducationMaster
2316739   +          +    -3.97940893560267 * Marital_StatusDivorced
2316740   +          +      3.5880254142663 * Marital_StatusMarried
2316741   +          +     -2.9897737730927 * Marital_StatusSingle
2316742   +          +     3.75098376776525 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.56328800945753 * Education2n_Cycle + 
-0.06918346311418 * EducationBasic + -1.5176897786776 * EducationGraduation + 0.09618331198762 
* EducationMaster + -3.97940893560267 * Marital_StatusDivorced + 3.5880254142663 * 
Marital_StatusMarried + -2.9897737730927 * Marital_StatusSingle + 3.75098376776525 * 
Marital_StatusTogether ;
2316743   +   H1x1_1  =    -2.89135496095875 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.89135496095875 + H1x1_1 ;
2316744   +   H1x1_2  =     0.39943637099295 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.39943637099295 + H1x1_2 ;
2316745   +   H1x1_3  =    -1.08093114818147 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.08093114818147 + H1x1_3 ;
2316746   +   H1x1_4  =    -3.29426643182948 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.29426643182948 + H1x1_4 ;
2316747   +   H1x1_5  =    -1.76822552726746 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.76822552726746 + H1x1_5 ;
2316748   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2316749   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2316750   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2316751   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
2316752   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
2316753   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
2316754   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
2316755   +END;
MPRINT(EM_DIAGRAM):   END;
2316756   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2316757   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2316758   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2316759   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2316760   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2316761   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2316762   +END;
MPRINT(EM_DIAGRAM):   END;
2316763   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2316764   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2316765   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2316766   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2316767   +   H1x2_1  =     1.01981866144831 * S_AcceptedCmpTotal
2316768   +          +    -1.47346125364319 * S_Age  +    -0.08669650492194 * S_Frq
2316769   +          +    -0.51585471637562 * S_Income  +     1.40711190452923 *
2316770   +        S_Kidhome  +    -0.21341957199148 * S_Mnt  +    -0.31211158173505 *
2316771   +        S_MntFishProducts  +    -0.77126486046129 * S_MntFruits
2316772   +          +     -0.4503905849175 * S_MntGoldProds  +     1.01090165857015 *
2316773   +        S_MntMeatProducts  +    -0.05554268249583 * S_MntSweetProducts
2316774   +          +     2.72203992871966 * S_MntWines  +    -0.46212144021719 *
2316775   +        S_MonthsAsCustomer  +    -0.10495120677935 * S_NumCatalogPurchases
2316776   +          +     0.07279889333775 * S_NumDealsPurchases
2316777   +          +     0.07542203992452 * S_NumDistPurchases
2316778   +          +     0.16296239303342 * S_NumStorePurchases
2316779   +          +     1.59193921229231 * S_NumWebPurchases
2316780   +          +    -0.35227839362603 * S_NumWebVisitsMonth
2316781   +          +      1.3224105019117 * S_RFMstat  +    -0.77035988511057 *
2316782   +        S_RMntFrq  +     0.43315770276588 * S_Recency
2316783   +          +     0.43447147039235 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.01981866144831 * S_AcceptedCmpTotal + -1.47346125364319 * 
S_Age + -0.08669650492194 * S_Frq + -0.51585471637562 * S_Income + 1.40711190452923 * 
S_Kidhome + -0.21341957199148 * S_Mnt + -0.31211158173505 * S_MntFishProducts + 
-0.77126486046129 * S_MntFruits + -0.4503905849175 * S_MntGoldProds + 1.01090165857015 * 
S_MntMeatProducts + -0.05554268249583 * S_MntSweetProducts + 2.72203992871966 * S_MntWines + 
-0.46212144021719 * S_MonthsAsCustomer + -0.10495120677935 * S_NumCatalogPurchases + 
0.07279889333775 * S_NumDealsPurchases + 0.07542203992452 * S_NumDistPurchases + 
0.16296239303342 * S_NumStorePurchases + 1.59193921229231 * S_NumWebPurchases + 
-0.35227839362603 * S_NumWebVisitsMonth + 1.3224105019117 * S_RFMstat + -0.77035988511057 * 
S_RMntFrq + 0.43315770276588 * S_Recency + 0.43447147039235 * S_Teenhome ;
2316784   +   H1x2_2  =    -0.07629675162821 * S_AcceptedCmpTotal
2316785   +          +     0.81684969971216 * S_Age  +     0.52870818801428 * S_Frq
2316786   +          +     0.15358022485378 * S_Income  +    -0.64458879887927 *
2316787   +        S_Kidhome  +    -2.12225648421746 * S_Mnt  +     1.05240671673302 *
2316788   +        S_MntFishProducts  +    -0.89595336397918 * S_MntFruits
2316789   +          +    -0.28950558043577 * S_MntGoldProds  +     0.30996043499478 *
2316790   +        S_MntMeatProducts  +     1.27676485470274 * S_MntSweetProducts
2316791   +          +    -1.30045112439384 * S_MntWines  +     1.36110971826862 *
2316792   +        S_MonthsAsCustomer  +     -0.1778244163518 * S_NumCatalogPurchases
2316793   +          +    -0.37456959251084 * S_NumDealsPurchases
2316794   +          +    -1.15252469975668 * S_NumDistPurchases
2316795   +          +    -1.39822501888899 * S_NumStorePurchases
2316796   +          +    -0.32777847360723 * S_NumWebPurchases
2316797   +          +     0.84026499832926 * S_NumWebVisitsMonth
2316798   +          +    -1.47180193258497 * S_RFMstat  +     0.18801983980439 *
2316799   +        S_RMntFrq  +     1.21016626691186 * S_Recency
2316800   +          +    -0.82943594788748 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.07629675162821 * S_AcceptedCmpTotal + 0.81684969971216 * 
S_Age + 0.52870818801428 * S_Frq + 0.15358022485378 * S_Income + -0.64458879887927 * S_Kidhome 
+ -2.12225648421746 * S_Mnt + 1.05240671673302 * S_MntFishProducts + -0.89595336397918 * 
S_MntFruits + -0.28950558043577 * S_MntGoldProds + 0.30996043499478 * S_MntMeatProducts + 
1.27676485470274 * S_MntSweetProducts + -1.30045112439384 * S_MntWines + 1.36110971826862 * 
S_MonthsAsCustomer + -0.1778244163518 * S_NumCatalogPurchases + -0.37456959251084 * 
S_NumDealsPurchases + -1.15252469975668 * S_NumDistPurchases + -1.39822501888899 * 
S_NumStorePurchases + -0.32777847360723 * S_NumWebPurchases + 0.84026499832926 * 
S_NumWebVisitsMonth + -1.47180193258497 * S_RFMstat + 0.18801983980439 * S_RMntFrq + 
1.21016626691186 * S_Recency + -0.82943594788748 * S_Teenhome ;
2316801   +   H1x2_3  =    -0.06736000283511 * S_AcceptedCmpTotal
2316802   +          +    -0.47270148030219 * S_Age  +      1.1959707178877 * S_Frq
2316803   +          +    -1.40081626653738 * S_Income  +     0.35085595025526 *
2316804   +        S_Kidhome  +    -0.43652344252181 * S_Mnt  +     1.12197802721591 *
2316805   +        S_MntFishProducts  +     1.27079634537799 * S_MntFruits
2316806   +          +    -0.03023683680758 * S_MntGoldProds  +     0.51289568088141 *
2316807   +        S_MntMeatProducts  +     1.12894900622408 * S_MntSweetProducts
2316808   +          +    -0.66940205871871 * S_MntWines  +    -1.57211003055303 *
2316809   +        S_MonthsAsCustomer  +     1.47778465205569 * S_NumCatalogPurchases
2316810   +          +     1.14090099538367 * S_NumDealsPurchases
2316811   +          +     -0.2600155774492 * S_NumDistPurchases
2316812   +          +     1.31362002392113 * S_NumStorePurchases
2316813   +          +     1.31465307763555 * S_NumWebPurchases
2316814   +          +    -0.18041623858351 * S_NumWebVisitsMonth
2316815   +          +    -0.12685084546738 * S_RFMstat  +     0.43500462904027 *
2316816   +        S_RMntFrq  +    -0.81910738140729 * S_Recency
2316817   +          +    -0.61936793661609 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.06736000283511 * S_AcceptedCmpTotal + -0.47270148030219 * 
S_Age + 1.1959707178877 * S_Frq + -1.40081626653738 * S_Income + 0.35085595025526 * S_Kidhome 
+ -0.43652344252181 * S_Mnt + 1.12197802721591 * S_MntFishProducts + 1.27079634537799 * 
S_MntFruits + -0.03023683680758 * S_MntGoldProds + 0.51289568088141 * S_MntMeatProducts + 
1.12894900622408 * S_MntSweetProducts + -0.66940205871871 * S_MntWines + -1.57211003055303 * 
S_MonthsAsCustomer + 1.47778465205569 * S_NumCatalogPurchases + 1.14090099538367 * 
S_NumDealsPurchases + -0.2600155774492 * S_NumDistPurchases + 1.31362002392113 * 
S_NumStorePurchases + 1.31465307763555 * S_NumWebPurchases + -0.18041623858351 * 
S_NumWebVisitsMonth + -0.12685084546738 * S_RFMstat + 0.43500462904027 * S_RMntFrq + 
-0.81910738140729 * S_Recency + -0.61936793661609 * S_Teenhome ;
2316818   +   H1x2_4  =    -0.31415783692162 * S_AcceptedCmpTotal
2316819   +          +     0.11061423227332 * S_Age  +    -0.65722939551233 * S_Frq
2316820   +          +     -0.9063192568986 * S_Income  +      0.4013752851291 *
2316821   +        S_Kidhome  +    -1.06795963585271 * S_Mnt  +     0.24969441019479 *
2316822   +        S_MntFishProducts  +    -0.63550038240549 * S_MntFruits
2316823   +          +     1.04454010114015 * S_MntGoldProds  +     0.89912571026653 *
2316824   +        S_MntMeatProducts  +    -1.92356868621234 * S_MntSweetProducts
2316825   +          +     -1.8642245725538 * S_MntWines  +     0.13416556054779 *
2316826   +        S_MonthsAsCustomer  +    -1.01272407075887 * S_NumCatalogPurchases
2316827   +          +     1.06486073796679 * S_NumDealsPurchases
2316828   +          +    -0.04890191247577 * S_NumDistPurchases
2316829   +          +     0.86871320720698 * S_NumStorePurchases
2316830   +          +     0.03183587281884 * S_NumWebPurchases
2316831   +          +     -0.4863802923315 * S_NumWebVisitsMonth
2316832   +          +    -1.38034657666878 * S_RFMstat  +    -0.73640242597195 *
2316833   +        S_RMntFrq  +     0.17186861211542 * S_Recency
2316834   +          +    -0.39595339111048 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.31415783692162 * S_AcceptedCmpTotal + 0.11061423227332 * 
S_Age + -0.65722939551233 * S_Frq + -0.9063192568986 * S_Income + 0.4013752851291 * S_Kidhome 
+ -1.06795963585271 * S_Mnt + 0.24969441019479 * S_MntFishProducts + -0.63550038240549 * 
S_MntFruits + 1.04454010114015 * S_MntGoldProds + 0.89912571026653 * S_MntMeatProducts + 
-1.92356868621234 * S_MntSweetProducts + -1.8642245725538 * S_MntWines + 0.13416556054779 * 
S_MonthsAsCustomer + -1.01272407075887 * S_NumCatalogPurchases + 1.06486073796679 * 
S_NumDealsPurchases + -0.04890191247577 * S_NumDistPurchases + 0.86871320720698 * 
S_NumStorePurchases + 0.03183587281884 * S_NumWebPurchases + -0.4863802923315 * 
S_NumWebVisitsMonth + -1.38034657666878 * S_RFMstat + -0.73640242597195 * S_RMntFrq + 
0.17186861211542 * S_Recency + -0.39595339111048 * S_Teenhome ;
2316835   +   H1x2_5  =     1.68315669988315 * S_AcceptedCmpTotal
2316836   +          +    -1.67467335764173 * S_Age  +     1.29921539173109 * S_Frq
2316837   +          +    -0.52305600367899 * S_Income  +     1.06261291858944 *
2316838   +        S_Kidhome  +     1.77049882170904 * S_Mnt  +    -0.27692609509601 *
2316839   +        S_MntFishProducts  +    -1.23166107817727 * S_MntFruits
2316840   +          +    -2.21476398466362 * S_MntGoldProds  +     1.02542528622621 *
2316841   +        S_MntMeatProducts  +     1.04913114036094 * S_MntSweetProducts
2316842   +          +     0.30606520702636 * S_MntWines  +    -1.15158074964406 *
2316843   +        S_MonthsAsCustomer  +     0.77918810586275 * S_NumCatalogPurchases
2316844   +          +    -0.01160267590349 * S_NumDealsPurchases
2316845   +          +    -0.92773075463083 * S_NumDistPurchases
2316846   +          +    -0.83326680533995 * S_NumStorePurchases
2316847   +          +    -1.16991058954473 * S_NumWebPurchases
2316848   +          +    -2.07771165573723 * S_NumWebVisitsMonth
2316849   +          +     0.59832456826177 * S_RFMstat  +     0.08151078945291 *
2316850   +        S_RMntFrq  +     0.80165981122986 * S_Recency
2316851   +          +     1.41798811088435 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.68315669988315 * S_AcceptedCmpTotal + -1.67467335764173 * 
S_Age + 1.29921539173109 * S_Frq + -0.52305600367899 * S_Income + 1.06261291858944 * S_Kidhome 
+ 1.77049882170904 * S_Mnt + -0.27692609509601 * S_MntFishProducts + -1.23166107817727 * 
S_MntFruits + -2.21476398466362 * S_MntGoldProds + 1.02542528622621 * S_MntMeatProducts + 
1.04913114036094 * S_MntSweetProducts + 0.30606520702636 * S_MntWines + -1.15158074964406 * 
S_MonthsAsCustomer + 0.77918810586275 * S_NumCatalogPurchases + -0.01160267590349 * 
S_NumDealsPurchases + -0.92773075463083 * S_NumDistPurchases + -0.83326680533995 * 
S_NumStorePurchases + -1.16991058954473 * S_NumWebPurchases + -2.07771165573723 * 
S_NumWebVisitsMonth + 0.59832456826177 * S_RFMstat + 0.08151078945291 * S_RMntFrq + 
0.80165981122986 * S_Recency + 1.41798811088435 * S_Teenhome ;
2316852   +   H1x2_1  = H1x2_1  +    -0.16600737981926 * AcceptedCmp10
2316853   +          +     1.41264623988567 * AcceptedCmp20  +      1.0446306999234 *
2316854   +        AcceptedCmp30  +    -1.00688604631169 * AcceptedCmp40
2316855   +          +     0.64523782235527 * AcceptedCmp50  +    -1.76623980391232 *
2316856   +        Complain0  +     1.64644530449125 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.16600737981926 * AcceptedCmp10 + 1.41264623988567 * 
AcceptedCmp20 + 1.0446306999234 * AcceptedCmp30 + -1.00688604631169 * AcceptedCmp40 + 
0.64523782235527 * AcceptedCmp50 + -1.76623980391232 * Complain0 + 1.64644530449125 * 
HigherEducationBinary0 ;
2316857   +   H1x2_2  = H1x2_2  +    -0.39493094663506 * AcceptedCmp10
2316858   +          +    -0.99095404154277 * AcceptedCmp20  +    -0.81166937096774 *
2316859   +        AcceptedCmp30  +     0.14520361414777 * AcceptedCmp40
2316860   +          +    -1.54302055254785 * AcceptedCmp50  +    -0.60600550413714 *
2316861   +        Complain0  +    -3.04730224174859 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.39493094663506 * AcceptedCmp10 + -0.99095404154277 
* AcceptedCmp20 + -0.81166937096774 * AcceptedCmp30 + 0.14520361414777 * AcceptedCmp40 + 
-1.54302055254785 * AcceptedCmp50 + -0.60600550413714 * Complain0 + -3.04730224174859 * 
HigherEducationBinary0 ;
2316862   +   H1x2_3  = H1x2_3  +      1.8650016934441 * AcceptedCmp10
2316863   +          +     0.85335394099291 * AcceptedCmp20  +     0.47327521312159 *
2316864   +        AcceptedCmp30  +    -2.64862753506152 * AcceptedCmp40
2316865   +          +     0.65827168680229 * AcceptedCmp50  +     0.45516433167059 *
2316866   +        Complain0  +    -0.62891111222764 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.8650016934441 * AcceptedCmp10 + 0.85335394099291 * 
AcceptedCmp20 + 0.47327521312159 * AcceptedCmp30 + -2.64862753506152 * AcceptedCmp40 + 
0.65827168680229 * AcceptedCmp50 + 0.45516433167059 * Complain0 + -0.62891111222764 * 
HigherEducationBinary0 ;
2316867   +   H1x2_4  = H1x2_4  +    -0.31781332022679 * AcceptedCmp10
2316868   +          +    -0.35773084257089 * AcceptedCmp20  +      0.0486072265688 *
2316869   +        AcceptedCmp30  +     1.50494203860483 * AcceptedCmp40
2316870   +          +     0.00499691981651 * AcceptedCmp50  +    -0.29977032190776 *
2316871   +        Complain0  +     0.76473087756218 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.31781332022679 * AcceptedCmp10 + -0.35773084257089 
* AcceptedCmp20 + 0.0486072265688 * AcceptedCmp30 + 1.50494203860483 * AcceptedCmp40 + 
0.00499691981651 * AcceptedCmp50 + -0.29977032190776 * Complain0 + 0.76473087756218 * 
HigherEducationBinary0 ;
2316872   +   H1x2_5  = H1x2_5  +     -0.4639041544815 * AcceptedCmp10
2316873   +          +    -1.28977231764453 * AcceptedCmp20  +    -0.03597660273531 *
2316874   +        AcceptedCmp30  +     0.17848986397338 * AcceptedCmp40
2316875   +          +     0.06649914015182 * AcceptedCmp50  +    -0.95633404051563 *
2316876   +        Complain0  +    -0.62555630659121 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.4639041544815 * AcceptedCmp10 + -1.28977231764453 * 
AcceptedCmp20 + -0.03597660273531 * AcceptedCmp30 + 0.17848986397338 * AcceptedCmp40 + 
0.06649914015182 * AcceptedCmp50 + -0.95633404051563 * Complain0 + -0.62555630659121 * 
HigherEducationBinary0 ;
2316877   +   H1x2_1  = H1x2_1  +    -1.75926153465974 * Education2n_Cycle
2316878   +          +     0.96255168005018 * EducationBasic  +     -1.2029563052774 *
2316879   +        EducationGraduation  +    -0.22397098444024 * EducationMaster
2316880   +          +    -0.10361472385198 * Marital_StatusDivorced
2316881   +          +     0.05574820877885 * Marital_StatusMarried
2316882   +          +     0.13130988205279 * Marital_StatusSingle
2316883   +          +    -1.51165564425323 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.75926153465974 * Education2n_Cycle + 
0.96255168005018 * EducationBasic + -1.2029563052774 * EducationGraduation + -0.22397098444024 
* EducationMaster + -0.10361472385198 * Marital_StatusDivorced + 0.05574820877885 * 
Marital_StatusMarried + 0.13130988205279 * Marital_StatusSingle + -1.51165564425323 * 
Marital_StatusTogether ;
2316884   +   H1x2_2  = H1x2_2  +     1.73281005101474 * Education2n_Cycle
2316885   +          +    -0.51397811328576 * EducationBasic  +     1.64296402934617 *
2316886   +        EducationGraduation  +     1.44983505587452 * EducationMaster
2316887   +          +      0.0059353523794 * Marital_StatusDivorced
2316888   +          +    -0.59379435051653 * Marital_StatusMarried
2316889   +          +    -1.93587108708999 * Marital_StatusSingle
2316890   +          +     2.02868236823401 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.73281005101474 * Education2n_Cycle + 
-0.51397811328576 * EducationBasic + 1.64296402934617 * EducationGraduation + 1.44983505587452 
* EducationMaster + 0.0059353523794 * Marital_StatusDivorced + -0.59379435051653 * 
Marital_StatusMarried + -1.93587108708999 * Marital_StatusSingle + 2.02868236823401 * 
Marital_StatusTogether ;
2316891   +   H1x2_3  = H1x2_3  +     0.11852280587389 * Education2n_Cycle
2316892   +          +    -0.87963137637159 * EducationBasic  +      0.3212539101977 *
2316893   +        EducationGraduation  +     0.16497026569775 * EducationMaster
2316894   +          +    -0.74333797840386 * Marital_StatusDivorced
2316895   +          +    -0.93061135117658 * Marital_StatusMarried
2316896   +          +     1.04024182655844 * Marital_StatusSingle
2316897   +          +     0.58313569749679 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.11852280587389 * Education2n_Cycle + 
-0.87963137637159 * EducationBasic + 0.3212539101977 * EducationGraduation + 0.16497026569775 
* EducationMaster + -0.74333797840386 * Marital_StatusDivorced + -0.93061135117658 * 
Marital_StatusMarried + 1.04024182655844 * Marital_StatusSingle + 0.58313569749679 * 
Marital_StatusTogether ;
2316898   +   H1x2_4  = H1x2_4  +     -1.2170050337036 * Education2n_Cycle
2316899   +          +    -0.83332588435502 * EducationBasic  +     0.43242117148542 *
2316900   +        EducationGraduation  +     1.71196178631559 * EducationMaster
2316901   +          +    -3.01050675344463 * Marital_StatusDivorced
2316902   +          +      0.1638723582239 * Marital_StatusMarried
2316903   +          +     0.94548468360304 * Marital_StatusSingle
2316904   +          +    -0.67333048623615 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.2170050337036 * Education2n_Cycle + 
-0.83332588435502 * EducationBasic + 0.43242117148542 * EducationGraduation + 1.71196178631559 
* EducationMaster + -3.01050675344463 * Marital_StatusDivorced + 0.1638723582239 * 
Marital_StatusMarried + 0.94548468360304 * Marital_StatusSingle + -0.67333048623615 * 
Marital_StatusTogether ;
2316905   +   H1x2_5  = H1x2_5  +    -0.66774344191467 * Education2n_Cycle
2316906   +          +     0.75591270317285 * EducationBasic  +    -0.29337325355435 *
2316907   +        EducationGraduation  +     0.57450456442662 * EducationMaster
2316908   +          +    -1.37013926274158 * Marital_StatusDivorced
2316909   +          +    -0.34168970042779 * Marital_StatusMarried
2316910   +          +     0.63383683543962 * Marital_StatusSingle
2316911   +          +     0.75118887766443 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.66774344191467 * Education2n_Cycle + 
0.75591270317285 * EducationBasic + -0.29337325355435 * EducationGraduation + 0.57450456442662 
* EducationMaster + -1.37013926274158 * Marital_StatusDivorced + -0.34168970042779 * 
Marital_StatusMarried + 0.63383683543962 * Marital_StatusSingle + 0.75118887766443 * 
Marital_StatusTogether ;
2316912   +   H1x2_1  =    -1.05245414685459 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.05245414685459 + H1x2_1 ;
2316913   +   H1x2_2  =    -2.03581716915326 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.03581716915326 + H1x2_2 ;
2316914   +   H1x2_3  =    -0.95118365599668 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.95118365599668 + H1x2_3 ;
2316915   +   H1x2_4  =    -1.36171328515396 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.36171328515396 + H1x2_4 ;
2316916   +   H1x2_5  =    -0.09438724866767 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.09438724866767 + H1x2_5 ;
2316917   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2316918   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2316919   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
2316920   +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
2316921   +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
2316922   +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
2316923   +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
2316924   +END;
MPRINT(EM_DIAGRAM):   END;
2316925   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2316926   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2316927   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2316928   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2316929   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2316930   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2316931   +END;
MPRINT(EM_DIAGRAM):   END;
2316932   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2316933   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2316934   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2316935   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2316936   +   H2x1_1  =    -3.66869890196477 * H1x1_1  +     3.66276995899936 * H1x1_2
2316937   +          +      4.9852243803889 * H1x1_3  +    -3.40922134517979 * H1x1_4
2316938   +          +     2.26435924995065 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -3.66869890196477 * H1x1_1 + 3.66276995899936 * H1x1_2 + 
4.9852243803889 * H1x1_3 + -3.40922134517979 * H1x1_4 + 2.26435924995065 * H1x1_5 ;
2316939   +   H2x1_2  =     1.35296027814603 * H1x1_1  +     0.16236277762099 * H1x1_2
2316940   +          +      0.4094634018093 * H1x1_3  +    -1.05233334297087 * H1x1_4
2316941   +          +    -0.51735435825901 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.35296027814603 * H1x1_1 + 0.16236277762099 * H1x1_2 + 
0.4094634018093 * H1x1_3 + -1.05233334297087 * H1x1_4 + -0.51735435825901 * H1x1_5 ;
2316942   +   H2x1_3  =    -3.57467050540101 * H1x1_1  +     1.96738498758928 * H1x1_2
2316943   +          +      3.1519435691133 * H1x1_3  +    -2.73180541318793 * H1x1_4
2316944   +          +     2.53621803266955 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -3.57467050540101 * H1x1_1 + 1.96738498758928 * H1x1_2 + 
3.1519435691133 * H1x1_3 + -2.73180541318793 * H1x1_4 + 2.53621803266955 * H1x1_5 ;
2316945   +   H2x1_4  =    -1.77897865469649 * H1x1_1  +    -0.34371813002239 * H1x1_2
2316946   +          +     0.97655076671381 * H1x1_3  +    -0.53022688394362 * H1x1_4
2316947   +          +     1.78452647837415 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -1.77897865469649 * H1x1_1 + -0.34371813002239 * H1x1_2 + 
0.97655076671381 * H1x1_3 + -0.53022688394362 * H1x1_4 + 1.78452647837415 * H1x1_5 ;
2316948   +   H2x1_5  =    -2.37976522756638 * H1x1_1  +     2.07473947277607 * H1x1_2
2316949   +          +      3.6114905073808 * H1x1_3  +    -4.57668209905758 * H1x1_4
2316950   +          +     2.97931581645784 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.37976522756638 * H1x1_1 + 2.07473947277607 * H1x1_2 + 
3.6114905073808 * H1x1_3 + -4.57668209905758 * H1x1_4 + 2.97931581645784 * H1x1_5 ;
2316951   +   H2x1_1  = H2x1_1  +      0.5090021095213 * H1x2_1
2316952   +          +    -0.99996599039586 * H1x2_2  +     0.09317756017156 * H1x2_3
2316953   +          +     0.07646136890595 * H1x2_4  +    -0.86729455140311 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.5090021095213 * H1x2_1 + -0.99996599039586 * H1x2_2 
+ 0.09317756017156 * H1x2_3 + 0.07646136890595 * H1x2_4 + -0.86729455140311 * H1x2_5 ;
2316954   +   H2x1_2  = H2x1_2  +     0.54458122713319 * H1x2_1
2316955   +          +    -1.01527351866283 * H1x2_2  +    -1.05264779960249 * H1x2_3
2316956   +          +     2.00891057398994 * H1x2_4  +     0.23877185330348 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.54458122713319 * H1x2_1 + -1.01527351866283 * H1x2_2 
+ -1.05264779960249 * H1x2_3 + 2.00891057398994 * H1x2_4 + 0.23877185330348 * H1x2_5 ;
2316957   +   H2x1_3  = H2x1_3  +     0.45936122831356 * H1x2_1
2316958   +          +    -0.78158455560098 * H1x2_2  +    -0.93755507764598 * H1x2_3
2316959   +          +    -0.41290092050446 * H1x2_4  +    -1.08076286104858 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.45936122831356 * H1x2_1 + -0.78158455560098 * H1x2_2 
+ -0.93755507764598 * H1x2_3 + -0.41290092050446 * H1x2_4 + -1.08076286104858 * H1x2_5 ;
2316960   +   H2x1_4  = H2x1_4  +     0.95365620475779 * H1x2_1
2316961   +          +    -0.84100294393078 * H1x2_2  +     0.70463413466954 * H1x2_3
2316962   +          +     1.80542761219637 * H1x2_4  +     0.45881360213194 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.95365620475779 * H1x2_1 + -0.84100294393078 * H1x2_2 
+ 0.70463413466954 * H1x2_3 + 1.80542761219637 * H1x2_4 + 0.45881360213194 * H1x2_5 ;
2316963   +   H2x1_5  = H2x1_5  +     0.59629215620441 * H1x2_1
2316964   +          +    -0.66300910076078 * H1x2_2  +     0.53748646350811 * H1x2_3
2316965   +          +     0.40402787748621 * H1x2_4  +    -0.68066387330661 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.59629215620441 * H1x2_1 + -0.66300910076078 * H1x2_2 
+ 0.53748646350811 * H1x2_3 + 0.40402787748621 * H1x2_4 + -0.68066387330661 * H1x2_5 ;
2316966   +   H2x1_1  =    -1.36901208947371 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.36901208947371 + H2x1_1 ;
2316967   +   H2x1_2  =     1.02513270875023 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.02513270875023 + H2x1_2 ;
2316968   +   H2x1_3  =     0.21017025934674 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.21017025934674 + H2x1_3 ;
2316969   +   H2x1_4  =    -1.15214364807652 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -1.15214364807652 + H2x1_4 ;
2316970   +   H2x1_5  =    -1.32590257108023 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.32590257108023 + H2x1_5 ;
2316971   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2316972   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2316973   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
2316974   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
2316975   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
2316976   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
2316977   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
2316978   +END;
MPRINT(EM_DIAGRAM):   END;
2316979   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2316980   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2316981   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2316982   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2316983   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2316984   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2316985   +END;
MPRINT(EM_DIAGRAM):   END;
2316986   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2316987   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2316988   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2316989   +
2316990   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2316991   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2316992   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2316993   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2316994   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2316995   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2316996   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2316997   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2316998   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2316999   +end;
MPRINT(EM_DIAGRAM):   end;
2317000   +else do;
MPRINT(EM_DIAGRAM):   else do;
2317001   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2317002   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2317003   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2317004   +   end;
MPRINT(EM_DIAGRAM):   end;
2317005   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2317006   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2317007   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2317008   +   end;
MPRINT(EM_DIAGRAM):   end;
2317009   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2317010   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2317011   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2317012   +   end;
MPRINT(EM_DIAGRAM):   end;
2317013   +end;
MPRINT(EM_DIAGRAM):   end;
2317014   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2317015   +   P_DepVar1  =    -9.23664553457504 * H2x1_1  +     1.34611690798114 * H2x1_2
2317016   +          +    -6.67077102946651 * H2x1_3  +    -1.67245227685142 * H2x1_4
2317017   +          +    -7.67053346287177 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.23664553457504 * H2x1_1 + 1.34611690798114 * H2x1_2 + 
-6.67077102946651 * H2x1_3 + -1.67245227685142 * H2x1_4 + -7.67053346287177 * H2x1_5 ;
2317018   +   P_DepVar1  =      3.4145227149582 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.4145227149582 + P_DepVar1 ;
2317019   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2317020   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2317021   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2317022   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2317023   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2317024   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2317025   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2317026   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2317027   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2317028   +END;
MPRINT(EM_DIAGRAM):   END;
2317029   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2317030   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2317031   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2317032   +END;
MPRINT(EM_DIAGRAM):   END;
2317033   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2317034   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2317035   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2317036   +END;
MPRINT(EM_DIAGRAM):   END;
2317037   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2317038   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2317039   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2317040   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2317041   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2317042   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2317043   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2317044   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2317045   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2317046   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2317047   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2317048   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2317049   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2317050   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2317051   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2317052   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2317053   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2317054   +END;
MPRINT(EM_DIAGRAM):   END;
2317055   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2317056   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2317057   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2317058   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2317059   +* Renaming variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural10;
2317060   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2317061   +* Renaming Posterior variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural10;
2317062   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2317063   +drop AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar1;
2317064   +AutoNeural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar1 = P_DepVar1;
2317065   +drop AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar0;
2317066   +AutoNeural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar0 = P_DepVar0;
2317067   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2317068   +* Renaming Into variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural10;
2317069   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2317070   +length AutoNeural10_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural10_I_DepVar $32;
2317071   +drop AutoNeural10_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_I_DepVar;
2317072   +AutoNeural10_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural10_I_DepVar = I_DepVar;
2317073   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2317074   +* Renaming _WARN_ variable for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural10;
2317075   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2317076   +length AutoNeural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural10_WARN_ $4;
2317077   +drop AutoNeural10_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_WARN_;
2317078   +AutoNeural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural10_WARN_ = _WARN_;
2317079   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2317080   +* Ensmbl38: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Scoring Code of model 5 of 7;
2317081   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2317082   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2317083   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2317084   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2317085   +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
2317086   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2317087   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2317088   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2317089   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2317090   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2317091   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2317092   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2317093   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2317094   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2317095   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2317096   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2317097   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2317098   +LENGTH _WARN_ $4
2317099   +      F_DepVar  $ 12
2317100   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2317101   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2317102   +
2317103   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2317104   +
2317105   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2317106   +
2317107   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2317108   +
2317109   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2317110   +
2317111   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2317112   +
2317113   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2317114   +
2317115   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2317116   +
2317117   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2317118   +
2317119   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2317120   +
2317121   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2317122   +
2317123   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2317124   +
2317125   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2317126   +
2317127   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2317128   +
2317129   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2317130   +
2317131   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2317132   +
2317133   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2317134   +
2317135   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2317136   +
2317137   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2317138   +
2317139   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2317140   +
2317141   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2317142   +
2317143   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2317144   +
2317145   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2317146   +
2317147   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2317148   +
2317149   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2317150   +
2317151   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2317152   +
2317153   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2317154   +
2317155   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2317156   +
2317157   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2317158   +
2317159   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2317160   +
2317161   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2317162   +
2317163   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2317164   +
2317165   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2317166   +
2317167   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2317168   +
2317169   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2317170   +
2317171   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2317172   +
2317173   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2317174   +
2317175   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2317176   +
2317177   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2317178   +
2317179   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2317180   +
2317181   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2317182   +
2317183   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2317184   +
2317185   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2317186   +
2317187   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2317188   +
2317189   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2317190   +
2317191   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2317192   +
2317193   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2317194   +
2317195   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2317196   +
2317197   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2317198   +
2317199   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2317200   +
2317201   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2317202   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2317203   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2317204   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2317205   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2317206   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2317207   +end;
MPRINT(EM_DIAGRAM):   end;
2317208   +else do;
MPRINT(EM_DIAGRAM):   else do;
2317209   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2317210   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2317211   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2317212   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2317213   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2317214   +   end;
MPRINT(EM_DIAGRAM):   end;
2317215   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2317216   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2317217   +   end;
MPRINT(EM_DIAGRAM):   end;
2317218   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2317219   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2317220   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2317221   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2317222   +   end;
MPRINT(EM_DIAGRAM):   end;
2317223   +end;
MPRINT(EM_DIAGRAM):   end;
2317224   +
2317225   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2317226   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2317227   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2317228   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2317229   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2317230   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2317231   +end;
MPRINT(EM_DIAGRAM):   end;
2317232   +else do;
MPRINT(EM_DIAGRAM):   else do;
2317233   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2317234   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2317235   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2317236   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2317237   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2317238   +   end;
MPRINT(EM_DIAGRAM):   end;
2317239   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2317240   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2317241   +   end;
MPRINT(EM_DIAGRAM):   end;
2317242   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2317243   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2317244   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2317245   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2317246   +   end;
MPRINT(EM_DIAGRAM):   end;
2317247   +end;
MPRINT(EM_DIAGRAM):   end;
2317248   +
2317249   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2317250   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2317251   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2317252   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2317253   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2317254   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2317255   +end;
MPRINT(EM_DIAGRAM):   end;
2317256   +else do;
MPRINT(EM_DIAGRAM):   else do;
2317257   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2317258   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2317259   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2317260   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2317261   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2317262   +   end;
MPRINT(EM_DIAGRAM):   end;
2317263   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2317264   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2317265   +   end;
MPRINT(EM_DIAGRAM):   end;
2317266   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2317267   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2317268   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2317269   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2317270   +   end;
MPRINT(EM_DIAGRAM):   end;
2317271   +end;
MPRINT(EM_DIAGRAM):   end;
2317272   +
2317273   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2317274   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2317275   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2317276   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2317277   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2317278   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2317279   +end;
MPRINT(EM_DIAGRAM):   end;
2317280   +else do;
MPRINT(EM_DIAGRAM):   else do;
2317281   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2317282   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2317283   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2317284   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2317285   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2317286   +   end;
MPRINT(EM_DIAGRAM):   end;
2317287   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2317288   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2317289   +   end;
MPRINT(EM_DIAGRAM):   end;
2317290   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2317291   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2317292   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2317293   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2317294   +   end;
MPRINT(EM_DIAGRAM):   end;
2317295   +end;
MPRINT(EM_DIAGRAM):   end;
2317296   +
2317297   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2317298   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2317299   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2317300   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2317301   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2317302   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2317303   +end;
MPRINT(EM_DIAGRAM):   end;
2317304   +else do;
MPRINT(EM_DIAGRAM):   else do;
2317305   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2317306   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2317307   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2317308   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2317309   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2317310   +   end;
MPRINT(EM_DIAGRAM):   end;
2317311   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2317312   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2317313   +   end;
MPRINT(EM_DIAGRAM):   end;
2317314   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2317315   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2317316   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2317317   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2317318   +   end;
MPRINT(EM_DIAGRAM):   end;
2317319   +end;
MPRINT(EM_DIAGRAM):   end;
2317320   +
2317321   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2317322   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2317323   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2317324   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2317325   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2317326   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2317327   +end;
MPRINT(EM_DIAGRAM):   end;
2317328   +else do;
MPRINT(EM_DIAGRAM):   else do;
2317329   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2317330   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2317331   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2317332   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2317333   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2317334   +   end;
MPRINT(EM_DIAGRAM):   end;
2317335   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2317336   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2317337   +   end;
MPRINT(EM_DIAGRAM):   end;
2317338   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2317339   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2317340   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2317341   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2317342   +   end;
MPRINT(EM_DIAGRAM):   end;
2317343   +end;
MPRINT(EM_DIAGRAM):   end;
2317344   +
2317345   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2317346   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2317347   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2317348   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2317349   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2317350   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2317351   +end;
MPRINT(EM_DIAGRAM):   end;
2317352   +else do;
MPRINT(EM_DIAGRAM):   else do;
2317353   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2317354   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2317355   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2317356   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2317357   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2317358   +   end;
MPRINT(EM_DIAGRAM):   end;
2317359   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2317360   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2317361   +   end;
MPRINT(EM_DIAGRAM):   end;
2317362   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2317363   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2317364   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2317365   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2317366   +   end;
MPRINT(EM_DIAGRAM):   end;
2317367   +end;
MPRINT(EM_DIAGRAM):   end;
2317368   +
2317369   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2317370   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2317371   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2317372   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2317373   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2317374   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2317375   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2317376   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2317377   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2317378   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2317379   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2317380   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2317381   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2317382   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2317383   +end;
MPRINT(EM_DIAGRAM):   end;
2317384   +else do;
MPRINT(EM_DIAGRAM):   else do;
2317385   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2317386   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2317387   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2317388   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2317389   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2317390   +   end;
MPRINT(EM_DIAGRAM):   end;
2317391   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2317392   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2317393   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2317394   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2317395   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2317396   +   end;
MPRINT(EM_DIAGRAM):   end;
2317397   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2317398   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2317399   +   end;
MPRINT(EM_DIAGRAM):   end;
2317400   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2317401   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2317402   +   end;
MPRINT(EM_DIAGRAM):   end;
2317403   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2317404   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2317405   +   end;
MPRINT(EM_DIAGRAM):   end;
2317406   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2317407   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2317408   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2317409   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2317410   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2317411   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2317412   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2317413   +   end;
MPRINT(EM_DIAGRAM):   end;
2317414   +end;
MPRINT(EM_DIAGRAM):   end;
2317415   +
2317416   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2317417   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2317418   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2317419   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2317420   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2317421   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2317422   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2317423   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2317424   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2317425   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2317426   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2317427   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2317428   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2317429   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2317430   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2317431   +end;
MPRINT(EM_DIAGRAM):   end;
2317432   +else do;
MPRINT(EM_DIAGRAM):   else do;
2317433   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2317434   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2317435   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2317436   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2317437   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2317438   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2317439   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2317440   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2317441   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2317442   +         end;
MPRINT(EM_DIAGRAM):   end;
2317443   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2317444   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2317445   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2317446   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2317447   +            end;
MPRINT(EM_DIAGRAM):   end;
2317448   +         end;
MPRINT(EM_DIAGRAM):   end;
2317449   +      end;
MPRINT(EM_DIAGRAM):   end;
2317450   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2317451   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2317452   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2317453   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2317454   +         end;
MPRINT(EM_DIAGRAM):   end;
2317455   +      end;
MPRINT(EM_DIAGRAM):   end;
2317456   +   end;
MPRINT(EM_DIAGRAM):   end;
2317457   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2317458   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2317459   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2317460   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2317461   +      end;
MPRINT(EM_DIAGRAM):   end;
2317462   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2317463   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2317464   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2317465   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2317466   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2317467   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2317468   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2317469   +         end;
MPRINT(EM_DIAGRAM):   end;
2317470   +      end;
MPRINT(EM_DIAGRAM):   end;
2317471   +   end;
MPRINT(EM_DIAGRAM):   end;
2317472   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2317473   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2317474   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2317475   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2317476   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2317477   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2317478   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2317479   +   end;
MPRINT(EM_DIAGRAM):   end;
2317480   +end;
MPRINT(EM_DIAGRAM):   end;
2317481   +
2317482   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2317483   +*** Checking missing input Interval
2317484   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2317485   +
2317486   +IF NMISS(
2317487   +   AcceptedCmpTotal ,
2317488   +   Age ,
2317489   +   Frq ,
2317490   +   Income ,
2317491   +   Kidhome ,
2317492   +   Mnt ,
2317493   +   MntFishProducts ,
2317494   +   MntFruits ,
2317495   +   MntGoldProds ,
2317496   +   MntMeatProducts ,
2317497   +   MntSweetProducts ,
2317498   +   MntWines ,
2317499   +   MonthsAsCustomer ,
2317500   +   NumCatalogPurchases ,
2317501   +   NumDealsPurchases ,
2317502   +   NumDistPurchases ,
2317503   +   NumStorePurchases ,
2317504   +   NumWebPurchases ,
2317505   +   NumWebVisitsMonth ,
2317506   +   RFMstat ,
2317507   +   RMntFrq ,
2317508   +   Recency ,
2317509   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2317510   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2317511   +
2317512   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2317513   +END;
MPRINT(EM_DIAGRAM):   END;
2317514   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2317515   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2317516   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2317517   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2317518   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2317519   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2317520   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2317521   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2317522   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2317523   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2317524   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2317525   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2317526   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2317527   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2317528   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2317529   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2317530   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2317531   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2317532   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2317533   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2317534   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2317535   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2317536   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2317537   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2317538   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2317539   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2317540   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2317541   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2317542   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2317543   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2317544   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2317545   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2317546   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2317547   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2317548   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2317549   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2317550   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2317551   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2317552   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2317553   +END;
MPRINT(EM_DIAGRAM):   END;
2317554   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2317555   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2317556   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2317557   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2317558   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2317559   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2317560   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2317561   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2317562   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2317563   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2317564   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2317565   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2317566   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2317567   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2317568   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2317569   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2317570   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2317571   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2317572   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2317573   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2317574   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2317575   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2317576   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2317577   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2317578   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2317579   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2317580   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2317581   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2317582   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2317583   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2317584   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2317585   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2317586   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2317587   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2317588   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2317589   +   ELSE S_NumCatalogPurchases
2317590   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2317591   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2317592   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2317593   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2317594   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2317595   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2317596   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2317597   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2317598   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2317599   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2317600   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2317601   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2317602   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2317603   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2317604   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2317605   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2317606   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2317607   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2317608   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2317609   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2317610   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2317611   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2317612   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2317613   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2317614   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2317615   +END;
MPRINT(EM_DIAGRAM):   END;
2317616   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2317617   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2317618   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2317619   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2317620   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2317621   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2317622   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2317623   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2317624   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2317625   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2317626   +   H1x1_1  =    -0.78941671657664 * S_AcceptedCmpTotal
2317627   +          +     0.31767378900448 * S_Age  +      -0.450304150539 * S_Frq
2317628   +          +     0.13641886985589 * S_Income  +    -0.76390352240561 *
2317629   +        S_Kidhome  +    -0.84654868800943 * S_Mnt  +     0.96945558052651 *
2317630   +        S_MntFishProducts  +     0.16268958674432 * S_MntFruits
2317631   +          +     0.02144447788014 * S_MntGoldProds  +    -3.75090210449464 *
2317632   +        S_MntMeatProducts  +    -0.22086629229442 * S_MntSweetProducts
2317633   +          +      0.8352178457402 * S_MntWines  +     0.16493907873466 *
2317634   +        S_MonthsAsCustomer  +    -1.54607390993048 * S_NumCatalogPurchases
2317635   +          +    -1.12130210731541 * S_NumDealsPurchases
2317636   +          +    -0.12343505299726 * S_NumDistPurchases
2317637   +          +     0.11863092868196 * S_NumStorePurchases
2317638   +          +       0.583917993314 * S_NumWebPurchases
2317639   +          +     0.75529732848146 * S_NumWebVisitsMonth
2317640   +          +    -0.49784215446785 * S_RFMstat  +     0.40580477815146 *
2317641   +        S_RMntFrq  +    -0.95519170979342 * S_Recency
2317642   +          +    -0.44895196625502 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.78941671657664 * S_AcceptedCmpTotal + 0.31767378900448 * 
S_Age + -0.450304150539 * S_Frq + 0.13641886985589 * S_Income + -0.76390352240561 * S_Kidhome 
+ -0.84654868800943 * S_Mnt + 0.96945558052651 * S_MntFishProducts + 0.16268958674432 * 
S_MntFruits + 0.02144447788014 * S_MntGoldProds + -3.75090210449464 * S_MntMeatProducts + 
-0.22086629229442 * S_MntSweetProducts + 0.8352178457402 * S_MntWines + 0.16493907873466 * 
S_MonthsAsCustomer + -1.54607390993048 * S_NumCatalogPurchases + -1.12130210731541 * 
S_NumDealsPurchases + -0.12343505299726 * S_NumDistPurchases + 0.11863092868196 * 
S_NumStorePurchases + 0.583917993314 * S_NumWebPurchases + 0.75529732848146 * 
S_NumWebVisitsMonth + -0.49784215446785 * S_RFMstat + 0.40580477815146 * S_RMntFrq + 
-0.95519170979342 * S_Recency + -0.44895196625502 * S_Teenhome ;
2317643   +   H1x1_2  =    -0.22984864633102 * S_AcceptedCmpTotal
2317644   +          +     0.08901810463204 * S_Age  +    -0.13007664741542 * S_Frq
2317645   +          +    -0.64174617524704 * S_Income  +     0.26599968715733 *
2317646   +        S_Kidhome  +     0.57486260655125 * S_Mnt  +    -0.56033337110694 *
2317647   +        S_MntFishProducts  +     0.16060716517673 * S_MntFruits
2317648   +          +      0.4349197289782 * S_MntGoldProds  +     1.41079767517969 *
2317649   +        S_MntMeatProducts  +      0.0615730534741 * S_MntSweetProducts
2317650   +          +    -0.09057901886639 * S_MntWines  +     0.20260454891291 *
2317651   +        S_MonthsAsCustomer  +    -1.17048742280721 * S_NumCatalogPurchases
2317652   +          +    -0.84113790640734 * S_NumDealsPurchases
2317653   +          +    -0.10512672747147 * S_NumDistPurchases
2317654   +          +     0.07268711782494 * S_NumStorePurchases
2317655   +          +     0.57578331257439 * S_NumWebPurchases
2317656   +          +    -1.34334433506558 * S_NumWebVisitsMonth
2317657   +          +     0.50079465494904 * S_RFMstat  +     0.77329849238514 *
2317658   +        S_RMntFrq  +      1.2759588366983 * S_Recency
2317659   +          +     0.17722493443222 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22984864633102 * S_AcceptedCmpTotal + 0.08901810463204 * 
S_Age + -0.13007664741542 * S_Frq + -0.64174617524704 * S_Income + 0.26599968715733 * 
S_Kidhome + 0.57486260655125 * S_Mnt + -0.56033337110694 * S_MntFishProducts + 
0.16060716517673 * S_MntFruits + 0.4349197289782 * S_MntGoldProds + 1.41079767517969 * 
S_MntMeatProducts + 0.0615730534741 * S_MntSweetProducts + -0.09057901886639 * S_MntWines + 
0.20260454891291 * S_MonthsAsCustomer + -1.17048742280721 * S_NumCatalogPurchases + 
-0.84113790640734 * S_NumDealsPurchases + -0.10512672747147 * S_NumDistPurchases + 
0.07268711782494 * S_NumStorePurchases + 0.57578331257439 * S_NumWebPurchases + 
-1.34334433506558 * S_NumWebVisitsMonth + 0.50079465494904 * S_RFMstat + 0.77329849238514 * 
S_RMntFrq + 1.2759588366983 * S_Recency + 0.17722493443222 * S_Teenhome ;
2317660   +   H1x1_3  =      1.1751297152411 * S_AcceptedCmpTotal
2317661   +          +     0.14380060376858 * S_Age  +    -0.90459868540245 * S_Frq
2317662   +          +     0.65570498233801 * S_Income  +    -0.66078213466597 *
2317663   +        S_Kidhome  +      0.5364727654141 * S_Mnt  +    -0.56452823521458 *
2317664   +        S_MntFishProducts  +     0.11401811215013 * S_MntFruits
2317665   +          +     0.42809239636494 * S_MntGoldProds  +     3.28485519579047 *
2317666   +        S_MntMeatProducts  +    -0.10959477301368 * S_MntSweetProducts
2317667   +          +     -0.5779524716069 * S_MntWines  +     0.08256957915579 *
2317668   +        S_MonthsAsCustomer  +     0.48195221766948 * S_NumCatalogPurchases
2317669   +          +     0.45924983504762 * S_NumDealsPurchases
2317670   +          +    -0.25508041581692 * S_NumDistPurchases
2317671   +          +    -1.34901283858526 * S_NumStorePurchases
2317672   +          +    -0.86388975031663 * S_NumWebPurchases
2317673   +          +     1.86136110391797 * S_NumWebVisitsMonth
2317674   +          +     0.39724376701426 * S_RFMstat  +    -1.08648755949459 *
2317675   +        S_RMntFrq  +    -2.06955456943047 * S_Recency
2317676   +          +     -0.6524420065858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.1751297152411 * S_AcceptedCmpTotal + 0.14380060376858 * S_Age 
+ -0.90459868540245 * S_Frq + 0.65570498233801 * S_Income + -0.66078213466597 * S_Kidhome + 
0.5364727654141 * S_Mnt + -0.56452823521458 * S_MntFishProducts + 0.11401811215013 * 
S_MntFruits + 0.42809239636494 * S_MntGoldProds + 3.28485519579047 * S_MntMeatProducts + 
-0.10959477301368 * S_MntSweetProducts + -0.5779524716069 * S_MntWines + 0.08256957915579 * 
S_MonthsAsCustomer + 0.48195221766948 * S_NumCatalogPurchases + 0.45924983504762 * 
S_NumDealsPurchases + -0.25508041581692 * S_NumDistPurchases + -1.34901283858526 * 
S_NumStorePurchases + -0.86388975031663 * S_NumWebPurchases + 1.86136110391797 * 
S_NumWebVisitsMonth + 0.39724376701426 * S_RFMstat + -1.08648755949459 * S_RMntFrq + 
-2.06955456943047 * S_Recency + -0.6524420065858 * S_Teenhome ;
2317677   +   H1x1_1  = H1x1_1  +     0.80545309346785 * AcceptedCmp10
2317678   +          +    -0.33518398776018 * AcceptedCmp20  +    -0.58961939502901 *
2317679   +        AcceptedCmp30  +    -0.89675052404295 * AcceptedCmp40
2317680   +          +     0.75506592249683 * AcceptedCmp50  +    -0.07335613460961 *
2317681   +        Complain0  +     0.34255762261501 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.80545309346785 * AcceptedCmp10 + -0.33518398776018 * 
AcceptedCmp20 + -0.58961939502901 * AcceptedCmp30 + -0.89675052404295 * AcceptedCmp40 + 
0.75506592249683 * AcceptedCmp50 + -0.07335613460961 * Complain0 + 0.34255762261501 * 
HigherEducationBinary0 ;
2317682   +   H1x1_2  = H1x1_2  +    -0.17834267108797 * AcceptedCmp10
2317683   +          +    -0.54414628806984 * AcceptedCmp20  +      0.8037591997808 *
2317684   +        AcceptedCmp30  +     0.37789561997689 * AcceptedCmp40
2317685   +          +    -1.39910847665731 * AcceptedCmp50  +    -0.44783176263268 *
2317686   +        Complain0  +     0.36763760090773 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.17834267108797 * AcceptedCmp10 + -0.54414628806984 
* AcceptedCmp20 + 0.8037591997808 * AcceptedCmp30 + 0.37789561997689 * AcceptedCmp40 + 
-1.39910847665731 * AcceptedCmp50 + -0.44783176263268 * Complain0 + 0.36763760090773 * 
HigherEducationBinary0 ;
2317687   +   H1x1_3  = H1x1_3  +    -0.20323890063703 * AcceptedCmp10
2317688   +          +    -0.08537895761507 * AcceptedCmp20  +     0.22533818089504 *
2317689   +        AcceptedCmp30  +    -0.22195995100127 * AcceptedCmp40
2317690   +          +    -2.01371926977123 * AcceptedCmp50  +    -0.17097719978842 *
2317691   +        Complain0  +     0.34016905753094 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.20323890063703 * AcceptedCmp10 + -0.08537895761507 
* AcceptedCmp20 + 0.22533818089504 * AcceptedCmp30 + -0.22195995100127 * AcceptedCmp40 + 
-2.01371926977123 * AcceptedCmp50 + -0.17097719978842 * Complain0 + 0.34016905753094 * 
HigherEducationBinary0 ;
2317692   +   H1x1_1  = H1x1_1  +    -0.03394180683805 * Education2n_Cycle
2317693   +          +    -0.38224926448988 * EducationBasic  +    -0.42512289883041 *
2317694   +        EducationGraduation  +    -0.59708578424036 * EducationMaster
2317695   +          +     0.48853068455666 * Marital_StatusDivorced
2317696   +          +    -0.54903474026465 * Marital_StatusMarried
2317697   +          +    -0.34079188373939 * Marital_StatusSingle
2317698   +          +    -0.64602969938868 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03394180683805 * Education2n_Cycle + 
-0.38224926448988 * EducationBasic + -0.42512289883041 * EducationGraduation + 
-0.59708578424036 * EducationMaster + 0.48853068455666 * Marital_StatusDivorced + 
-0.54903474026465 * Marital_StatusMarried + -0.34079188373939 * Marital_StatusSingle + 
-0.64602969938868 * Marital_StatusTogether ;
2317699   +   H1x1_2  = H1x1_2  +    -0.26170943801998 * Education2n_Cycle
2317700   +          +     0.06893871459175 * EducationBasic  +    -0.84123174187664 *
2317701   +        EducationGraduation  +     0.19038549912088 * EducationMaster
2317702   +          +    -1.03547689902027 * Marital_StatusDivorced
2317703   +          +     2.42164864610471 * Marital_StatusMarried
2317704   +          +    -1.95342561304942 * Marital_StatusSingle
2317705   +          +      2.1397185142046 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.26170943801998 * Education2n_Cycle + 
0.06893871459175 * EducationBasic + -0.84123174187664 * EducationGraduation + 0.19038549912088 
* EducationMaster + -1.03547689902027 * Marital_StatusDivorced + 2.42164864610471 * 
Marital_StatusMarried + -1.95342561304942 * Marital_StatusSingle + 2.1397185142046 * 
Marital_StatusTogether ;
2317706   +   H1x1_3  = H1x1_3  +    -0.04236694810886 * Education2n_Cycle
2317707   +          +    -0.57404276980591 * EducationBasic  +     -0.1441989834351 *
2317708   +        EducationGraduation  +    -0.31867831184924 * EducationMaster
2317709   +          +      0.4337638747935 * Marital_StatusDivorced
2317710   +          +    -0.38508657017615 * Marital_StatusMarried
2317711   +          +     -0.0160269708326 * Marital_StatusSingle
2317712   +          +    -0.57491004270903 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.04236694810886 * Education2n_Cycle + 
-0.57404276980591 * EducationBasic + -0.1441989834351 * EducationGraduation + 
-0.31867831184924 * EducationMaster + 0.4337638747935 * Marital_StatusDivorced + 
-0.38508657017615 * Marital_StatusMarried + -0.0160269708326 * Marital_StatusSingle + 
-0.57491004270903 * Marital_StatusTogether ;
2317713   +   H1x1_1  =    -0.53426188790968 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53426188790968 + H1x1_1 ;
2317714   +   H1x1_2  =     0.98557066823746 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.98557066823746 + H1x1_2 ;
2317715   +   H1x1_3  =     1.81937688438175 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.81937688438175 + H1x1_3 ;
2317716   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
2317717   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
2317718   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2317719   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2317720   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2317721   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2317722   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2317723   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2317724   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2317725   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2317726   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2317727   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2317728   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2317729   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2317730   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2317731   +END;
MPRINT(EM_DIAGRAM):   END;
2317732   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2317733   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2317734   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2317735   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2317736   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2317737   +END;
MPRINT(EM_DIAGRAM):   END;
2317738   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2317739   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2317740   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2317741   +
2317742   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2317743   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2317744   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2317745   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2317746   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2317747   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2317748   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2317749   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2317750   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2317751   +end;
MPRINT(EM_DIAGRAM):   end;
2317752   +else do;
MPRINT(EM_DIAGRAM):   else do;
2317753   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2317754   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2317755   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2317756   +   end;
MPRINT(EM_DIAGRAM):   end;
2317757   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2317758   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2317759   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2317760   +   end;
MPRINT(EM_DIAGRAM):   end;
2317761   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2317762   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2317763   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2317764   +   end;
MPRINT(EM_DIAGRAM):   end;
2317765   +end;
MPRINT(EM_DIAGRAM):   end;
2317766   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2317767   +   P_DepVar1  =    -3.43702380277695 * H1x1_1  +    -7.14235896425537 * H1x1_2
2317768   +          +     10.8296305415538 * H1x1_3  +    -2.20824183229369 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.43702380277695 * H1x1_1 + -7.14235896425537 * H1x1_2 + 
10.8296305415538 * H1x1_3 + -2.20824183229369 * H1x1_4 ;
2317769   +   P_DepVar1  =    -3.68304614366462 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.68304614366462 + P_DepVar1 ;
2317770   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2317771   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2317772   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2317773   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2317774   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2317775   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2317776   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2317777   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2317778   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2317779   +END;
MPRINT(EM_DIAGRAM):   END;
2317780   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2317781   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2317782   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2317783   +END;
MPRINT(EM_DIAGRAM):   END;
2317784   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2317785   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2317786   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2317787   +END;
MPRINT(EM_DIAGRAM):   END;
2317788   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2317789   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2317790   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2317791   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2317792   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2317793   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2317794   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2317795   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2317796   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2317797   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2317798   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2317799   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2317800   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2317801   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2317802   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2317803   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2317804   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2317805   +END;
MPRINT(EM_DIAGRAM):   END;
2317806   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2317807   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2317808   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2317809   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2317810   +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
2317811   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2317812   +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
2317813   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2317814   +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
2317815   +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
2317816   +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
2317817   +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
2317818   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2317819   +* Renaming Into variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural9;
2317820   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2317821   +length AutoNeural9_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural9_I_DepVar $32;
2317822   +drop AutoNeural9_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_I_DepVar;
2317823   +AutoNeural9_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural9_I_DepVar = I_DepVar;
2317824   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2317825   +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
2317826   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2317827   +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
2317828   +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
2317829   +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
2317830   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2317831   +* Ensmbl38: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Scoring Code of model 6 of 7;
2317832   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2317833   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2317834   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2317835   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2317836   +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
2317837   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2317838   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2317839   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2317840   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2317841   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2317842   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2317843   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2317844   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2317845   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2317846   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2317847   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2317848   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2317849   +LENGTH _WARN_ $4
2317850   +      F_DepVar  $ 12
2317851   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2317852   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2317853   +
2317854   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2317855   +
2317856   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2317857   +
2317858   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2317859   +
2317860   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2317861   +
2317862   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2317863   +
2317864   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2317865   +
2317866   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2317867   +
2317868   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2317869   +
2317870   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2317871   +
2317872   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2317873   +
2317874   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2317875   +
2317876   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2317877   +
2317878   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2317879   +
2317880   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2317881   +
2317882   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2317883   +
2317884   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2317885   +
2317886   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2317887   +
2317888   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2317889   +
2317890   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2317891   +
2317892   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2317893   +
2317894   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2317895   +
2317896   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2317897   +
2317898   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2317899   +
2317900   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2317901   +
2317902   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2317903   +
2317904   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2317905   +
2317906   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2317907   +
2317908   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2317909   +
2317910   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2317911   +
2317912   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2317913   +
2317914   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2317915   +
2317916   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2317917   +
2317918   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2317919   +
2317920   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2317921   +
2317922   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2317923   +
2317924   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2317925   +
2317926   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2317927   +
2317928   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2317929   +
2317930   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2317931   +
2317932   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2317933   +
2317934   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2317935   +
2317936   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2317937   +
2317938   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2317939   +
2317940   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2317941   +
2317942   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2317943   +
2317944   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2317945   +
2317946   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2317947   +
2317948   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2317949   +
2317950   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2317951   +
2317952   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2317953   +
2317954   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2317955   +
2317956   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2317957   +
2317958   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2317959   +
2317960   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2317961   +
2317962   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
2317963   +
2317964   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2317965   +
2317966   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2317967   +
2317968   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2317969   +
2317970   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2317971   +
2317972   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2317973   +
2317974   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2317975   +
2317976   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2317977   +
2317978   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2317979   +
2317980   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2317981   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2317982   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2317983   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2317984   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2317985   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2317986   +end;
MPRINT(EM_DIAGRAM):   end;
2317987   +else do;
MPRINT(EM_DIAGRAM):   else do;
2317988   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2317989   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2317990   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2317991   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2317992   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2317993   +   end;
MPRINT(EM_DIAGRAM):   end;
2317994   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2317995   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2317996   +   end;
MPRINT(EM_DIAGRAM):   end;
2317997   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2317998   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2317999   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2318000   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2318001   +   end;
MPRINT(EM_DIAGRAM):   end;
2318002   +end;
MPRINT(EM_DIAGRAM):   end;
2318003   +
2318004   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2318005   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2318006   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2318007   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2318008   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2318009   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2318010   +end;
MPRINT(EM_DIAGRAM):   end;
2318011   +else do;
MPRINT(EM_DIAGRAM):   else do;
2318012   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2318013   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2318014   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2318015   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2318016   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2318017   +   end;
MPRINT(EM_DIAGRAM):   end;
2318018   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2318019   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2318020   +   end;
MPRINT(EM_DIAGRAM):   end;
2318021   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2318022   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2318023   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2318024   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2318025   +   end;
MPRINT(EM_DIAGRAM):   end;
2318026   +end;
MPRINT(EM_DIAGRAM):   end;
2318027   +
2318028   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2318029   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2318030   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2318031   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2318032   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2318033   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2318034   +end;
MPRINT(EM_DIAGRAM):   end;
2318035   +else do;
MPRINT(EM_DIAGRAM):   else do;
2318036   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2318037   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2318038   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2318039   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2318040   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2318041   +   end;
MPRINT(EM_DIAGRAM):   end;
2318042   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2318043   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2318044   +   end;
MPRINT(EM_DIAGRAM):   end;
2318045   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2318046   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2318047   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2318048   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2318049   +   end;
MPRINT(EM_DIAGRAM):   end;
2318050   +end;
MPRINT(EM_DIAGRAM):   end;
2318051   +
2318052   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2318053   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2318054   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2318055   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2318056   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2318057   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2318058   +end;
MPRINT(EM_DIAGRAM):   end;
2318059   +else do;
MPRINT(EM_DIAGRAM):   else do;
2318060   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2318061   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2318062   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2318063   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2318064   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2318065   +   end;
MPRINT(EM_DIAGRAM):   end;
2318066   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2318067   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2318068   +   end;
MPRINT(EM_DIAGRAM):   end;
2318069   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2318070   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2318071   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2318072   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2318073   +   end;
MPRINT(EM_DIAGRAM):   end;
2318074   +end;
MPRINT(EM_DIAGRAM):   end;
2318075   +
2318076   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2318077   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2318078   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2318079   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2318080   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2318081   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2318082   +end;
MPRINT(EM_DIAGRAM):   end;
2318083   +else do;
MPRINT(EM_DIAGRAM):   else do;
2318084   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2318085   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2318086   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2318087   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2318088   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2318089   +   end;
MPRINT(EM_DIAGRAM):   end;
2318090   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2318091   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2318092   +   end;
MPRINT(EM_DIAGRAM):   end;
2318093   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2318094   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2318095   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2318096   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2318097   +   end;
MPRINT(EM_DIAGRAM):   end;
2318098   +end;
MPRINT(EM_DIAGRAM):   end;
2318099   +
2318100   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2318101   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2318102   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2318103   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2318104   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2318105   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2318106   +end;
MPRINT(EM_DIAGRAM):   end;
2318107   +else do;
MPRINT(EM_DIAGRAM):   else do;
2318108   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2318109   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2318110   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2318111   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2318112   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2318113   +   end;
MPRINT(EM_DIAGRAM):   end;
2318114   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2318115   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2318116   +   end;
MPRINT(EM_DIAGRAM):   end;
2318117   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2318118   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2318119   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2318120   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2318121   +   end;
MPRINT(EM_DIAGRAM):   end;
2318122   +end;
MPRINT(EM_DIAGRAM):   end;
2318123   +
2318124   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2318125   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2318126   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2318127   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2318128   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2318129   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2318130   +end;
MPRINT(EM_DIAGRAM):   end;
2318131   +else do;
MPRINT(EM_DIAGRAM):   else do;
2318132   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2318133   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2318134   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2318135   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2318136   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2318137   +   end;
MPRINT(EM_DIAGRAM):   end;
2318138   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2318139   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2318140   +   end;
MPRINT(EM_DIAGRAM):   end;
2318141   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2318142   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2318143   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2318144   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2318145   +   end;
MPRINT(EM_DIAGRAM):   end;
2318146   +end;
MPRINT(EM_DIAGRAM):   end;
2318147   +
2318148   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2318149   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2318150   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2318151   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2318152   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2318153   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2318154   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2318155   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2318156   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2318157   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2318158   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2318159   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2318160   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2318161   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2318162   +end;
MPRINT(EM_DIAGRAM):   end;
2318163   +else do;
MPRINT(EM_DIAGRAM):   else do;
2318164   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2318165   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2318166   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2318167   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2318168   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2318169   +   end;
MPRINT(EM_DIAGRAM):   end;
2318170   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2318171   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2318172   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2318173   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2318174   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2318175   +   end;
MPRINT(EM_DIAGRAM):   end;
2318176   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2318177   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2318178   +   end;
MPRINT(EM_DIAGRAM):   end;
2318179   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2318180   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2318181   +   end;
MPRINT(EM_DIAGRAM):   end;
2318182   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2318183   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2318184   +   end;
MPRINT(EM_DIAGRAM):   end;
2318185   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2318186   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2318187   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2318188   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2318189   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2318190   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2318191   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2318192   +   end;
MPRINT(EM_DIAGRAM):   end;
2318193   +end;
MPRINT(EM_DIAGRAM):   end;
2318194   +
2318195   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2318196   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2318197   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2318198   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2318199   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2318200   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2318201   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2318202   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2318203   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2318204   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2318205   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2318206   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2318207   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2318208   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2318209   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2318210   +end;
MPRINT(EM_DIAGRAM):   end;
2318211   +else do;
MPRINT(EM_DIAGRAM):   else do;
2318212   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2318213   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2318214   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2318215   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2318216   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2318217   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2318218   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2318219   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2318220   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2318221   +         end;
MPRINT(EM_DIAGRAM):   end;
2318222   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2318223   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2318224   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2318225   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2318226   +            end;
MPRINT(EM_DIAGRAM):   end;
2318227   +         end;
MPRINT(EM_DIAGRAM):   end;
2318228   +      end;
MPRINT(EM_DIAGRAM):   end;
2318229   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2318230   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2318231   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2318232   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2318233   +         end;
MPRINT(EM_DIAGRAM):   end;
2318234   +      end;
MPRINT(EM_DIAGRAM):   end;
2318235   +   end;
MPRINT(EM_DIAGRAM):   end;
2318236   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2318237   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2318238   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2318239   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2318240   +      end;
MPRINT(EM_DIAGRAM):   end;
2318241   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2318242   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2318243   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2318244   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2318245   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2318246   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2318247   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2318248   +         end;
MPRINT(EM_DIAGRAM):   end;
2318249   +      end;
MPRINT(EM_DIAGRAM):   end;
2318250   +   end;
MPRINT(EM_DIAGRAM):   end;
2318251   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2318252   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2318253   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2318254   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2318255   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2318256   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2318257   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2318258   +   end;
MPRINT(EM_DIAGRAM):   end;
2318259   +end;
MPRINT(EM_DIAGRAM):   end;
2318260   +
2318261   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2318262   +*** Checking missing input Interval
2318263   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2318264   +
2318265   +IF NMISS(
2318266   +   AcceptedCmpTotal ,
2318267   +   Age ,
2318268   +   Frq ,
2318269   +   Income ,
2318270   +   Kidhome ,
2318271   +   Mnt ,
2318272   +   MntFishProducts ,
2318273   +   MntFruits ,
2318274   +   MntGoldProds ,
2318275   +   MntMeatProducts ,
2318276   +   MntSweetProducts ,
2318277   +   MntWines ,
2318278   +   MonthsAsCustomer ,
2318279   +   NumCatalogPurchases ,
2318280   +   NumDealsPurchases ,
2318281   +   NumDistPurchases ,
2318282   +   NumStorePurchases ,
2318283   +   NumWebPurchases ,
2318284   +   NumWebVisitsMonth ,
2318285   +   RFMstat ,
2318286   +   RMntFrq ,
2318287   +   Recency ,
2318288   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2318289   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2318290   +
2318291   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2318292   +END;
MPRINT(EM_DIAGRAM):   END;
2318293   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2318294   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2318295   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2318296   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2318297   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2318298   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2318299   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2318300   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2318301   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2318302   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2318303   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2318304   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2318305   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2318306   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2318307   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2318308   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2318309   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2318310   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2318311   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2318312   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2318313   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2318314   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2318315   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2318316   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2318317   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2318318   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2318319   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2318320   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2318321   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2318322   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2318323   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2318324   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2318325   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2318326   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2318327   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2318328   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2318329   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2318330   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2318331   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2318332   +END;
MPRINT(EM_DIAGRAM):   END;
2318333   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2318334   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2318335   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2318336   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2318337   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2318338   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2318339   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2318340   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2318341   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2318342   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2318343   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2318344   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2318345   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2318346   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2318347   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2318348   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2318349   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2318350   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2318351   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2318352   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2318353   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2318354   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2318355   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2318356   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2318357   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2318358   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2318359   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2318360   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2318361   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2318362   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2318363   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2318364   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2318365   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2318366   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2318367   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2318368   +   ELSE S_NumCatalogPurchases
2318369   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2318370   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2318371   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2318372   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2318373   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2318374   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2318375   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2318376   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2318377   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2318378   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2318379   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2318380   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2318381   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2318382   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2318383   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2318384   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2318385   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2318386   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2318387   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2318388   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2318389   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2318390   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2318391   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2318392   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2318393   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2318394   +END;
MPRINT(EM_DIAGRAM):   END;
2318395   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2318396   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2318397   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2318398   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2318399   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2318400   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2318401   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2318402   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2318403   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2318404   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2318405   +   H1x1_1  =     0.16786131610493 * S_AcceptedCmpTotal
2318406   +          +     0.08150129707008 * S_Age  +    -0.00076335149511 * S_Frq
2318407   +          +     2.37648351383272 * S_Income  +    -1.63260278456818 *
2318408   +        S_Kidhome  +     -0.6720941090663 * S_Mnt  +    -0.03176174297509 *
2318409   +        S_MntFishProducts  +    -0.03796990721617 * S_MntFruits
2318410   +          +    -0.17020485447842 * S_MntGoldProds  +      0.7709093878281 *
2318411   +        S_MntMeatProducts  +    -0.26168538456938 * S_MntSweetProducts
2318412   +          +    -1.36275284328546 * S_MntWines  +    -0.30344694826738 *
2318413   +        S_MonthsAsCustomer  +     1.68662611500615 * S_NumCatalogPurchases
2318414   +          +     1.32037113020393 * S_NumDealsPurchases
2318415   +          +     0.42879249227132 * S_NumDistPurchases
2318416   +          +    -0.89190172778783 * S_NumStorePurchases
2318417   +          +    -0.87975442613962 * S_NumWebPurchases
2318418   +          +     2.98977282825831 * S_NumWebVisitsMonth
2318419   +          +     0.16388418187981 * S_RFMstat  +     0.63858980984599 *
2318420   +        S_RMntFrq  +    -2.53833222281652 * S_Recency
2318421   +          +    -2.72141665283523 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.16786131610493 * S_AcceptedCmpTotal + 0.08150129707008 * 
S_Age + -0.00076335149511 * S_Frq + 2.37648351383272 * S_Income + -1.63260278456818 * 
S_Kidhome + -0.6720941090663 * S_Mnt + -0.03176174297509 * S_MntFishProducts + 
-0.03796990721617 * S_MntFruits + -0.17020485447842 * S_MntGoldProds + 0.7709093878281 * 
S_MntMeatProducts + -0.26168538456938 * S_MntSweetProducts + -1.36275284328546 * S_MntWines + 
-0.30344694826738 * S_MonthsAsCustomer + 1.68662611500615 * S_NumCatalogPurchases + 
1.32037113020393 * S_NumDealsPurchases + 0.42879249227132 * S_NumDistPurchases + 
-0.89190172778783 * S_NumStorePurchases + -0.87975442613962 * S_NumWebPurchases + 
2.98977282825831 * S_NumWebVisitsMonth + 0.16388418187981 * S_RFMstat + 0.63858980984599 * 
S_RMntFrq + -2.53833222281652 * S_Recency + -2.72141665283523 * S_Teenhome ;
2318422   +   H1x1_2  =    -1.16140709294501 * S_AcceptedCmpTotal
2318423   +          +    -0.87210661607894 * S_Age  +    -0.15365607228782 * S_Frq
2318424   +          +    -1.14855351318782 * S_Income  +     -0.3792851632462 *
2318425   +        S_Kidhome  +    -1.20412080219233 * S_Mnt  +     0.98615533034973 *
2318426   +        S_MntFishProducts  +     0.44541456963703 * S_MntFruits
2318427   +          +    -0.86465923336111 * S_MntGoldProds  +    -5.15063925950455 *
2318428   +        S_MntMeatProducts  +     0.54937255903381 * S_MntSweetProducts
2318429   +          +      1.1566197343428 * S_MntWines  +     1.05956341559861 *
2318430   +        S_MonthsAsCustomer  +    -1.51353620179805 * S_NumCatalogPurchases
2318431   +          +    -1.16737670931605 * S_NumDealsPurchases
2318432   +          +     0.08205195039242 * S_NumDistPurchases
2318433   +          +    -0.65367044520084 * S_NumStorePurchases
2318434   +          +     2.39693083674757 * S_NumWebPurchases
2318435   +          +     0.18432526469897 * S_NumWebVisitsMonth
2318436   +          +    -0.81660690569703 * S_RFMstat  +      0.2679378370467 *
2318437   +        S_RMntFrq  +    -0.12214066685673 * S_Recency
2318438   +          +     1.80138107382539 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.16140709294501 * S_AcceptedCmpTotal + -0.87210661607894 * 
S_Age + -0.15365607228782 * S_Frq + -1.14855351318782 * S_Income + -0.3792851632462 * 
S_Kidhome + -1.20412080219233 * S_Mnt + 0.98615533034973 * S_MntFishProducts + 
0.44541456963703 * S_MntFruits + -0.86465923336111 * S_MntGoldProds + -5.15063925950455 * 
S_MntMeatProducts + 0.54937255903381 * S_MntSweetProducts + 1.1566197343428 * S_MntWines + 
1.05956341559861 * S_MonthsAsCustomer + -1.51353620179805 * S_NumCatalogPurchases + 
-1.16737670931605 * S_NumDealsPurchases + 0.08205195039242 * S_NumDistPurchases + 
-0.65367044520084 * S_NumStorePurchases + 2.39693083674757 * S_NumWebPurchases + 
0.18432526469897 * S_NumWebVisitsMonth + -0.81660690569703 * S_RFMstat + 0.2679378370467 * 
S_RMntFrq + -0.12214066685673 * S_Recency + 1.80138107382539 * S_Teenhome ;
2318439   +   H1x1_3  =      2.0905555295419 * S_AcceptedCmpTotal
2318440   +          +    -0.23515107640805 * S_Age  +    -0.34980320997139 * S_Frq
2318441   +          +     0.96612788543649 * S_Income  +    -0.57035066115881 *
2318442   +        S_Kidhome  +     0.22762934410578 * S_Mnt  +    -0.52536382903021 *
2318443   +        S_MntFishProducts  +    -1.18451511831956 * S_MntFruits
2318444   +          +     0.15600368092559 * S_MntGoldProds  +     2.66964572205551 *
2318445   +        S_MntMeatProducts  +    -0.66381928008493 * S_MntSweetProducts
2318446   +          +    -1.34669953562975 * S_MntWines  +     1.35404821514849 *
2318447   +        S_MonthsAsCustomer  +     1.74839628716461 * S_NumCatalogPurchases
2318448   +          +     0.76616480025024 * S_NumDealsPurchases
2318449   +          +     0.42823368706255 * S_NumDistPurchases
2318450   +          +    -1.16998364854907 * S_NumStorePurchases
2318451   +          +     -1.0841896541746 * S_NumWebPurchases
2318452   +          +     2.74837744375079 * S_NumWebVisitsMonth
2318453   +          +    -0.12893804494501 * S_RFMstat  +    -0.62922223536042 *
2318454   +        S_RMntFrq  +    -5.13438280616518 * S_Recency
2318455   +          +    -0.03717013845941 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.0905555295419 * S_AcceptedCmpTotal + -0.23515107640805 * 
S_Age + -0.34980320997139 * S_Frq + 0.96612788543649 * S_Income + -0.57035066115881 * 
S_Kidhome + 0.22762934410578 * S_Mnt + -0.52536382903021 * S_MntFishProducts + 
-1.18451511831956 * S_MntFruits + 0.15600368092559 * S_MntGoldProds + 2.66964572205551 * 
S_MntMeatProducts + -0.66381928008493 * S_MntSweetProducts + -1.34669953562975 * S_MntWines + 
1.35404821514849 * S_MonthsAsCustomer + 1.74839628716461 * S_NumCatalogPurchases + 
0.76616480025024 * S_NumDealsPurchases + 0.42823368706255 * S_NumDistPurchases + 
-1.16998364854907 * S_NumStorePurchases + -1.0841896541746 * S_NumWebPurchases + 
2.74837744375079 * S_NumWebVisitsMonth + -0.12893804494501 * S_RFMstat + -0.62922223536042 * 
S_RMntFrq + -5.13438280616518 * S_Recency + -0.03717013845941 * S_Teenhome ;
2318456   +   H1x1_4  =     0.00721395593412 * S_AcceptedCmpTotal
2318457   +          +    -0.01540387767211 * S_Age  +    -0.84860703860633 * S_Frq
2318458   +          +    -1.02288627805121 * S_Income  +    -1.09101870516967 *
2318459   +        S_Kidhome  +    -0.49364597366691 * S_Mnt  +    -0.46832600024559 *
2318460   +        S_MntFishProducts  +     0.18419647776638 * S_MntFruits
2318461   +          +     0.08548650236624 * S_MntGoldProds  +      3.4353205628246 *
2318462   +        S_MntMeatProducts  +    -0.34836704949861 * S_MntSweetProducts
2318463   +          +    -2.43294028965601 * S_MntWines  +       -0.52018014955 *
2318464   +        S_MonthsAsCustomer  +     0.64700842330282 * S_NumCatalogPurchases
2318465   +          +     0.78421010501058 * S_NumDealsPurchases
2318466   +          +     0.01075885160671 * S_NumDistPurchases
2318467   +          +    -1.99395040717832 * S_NumStorePurchases
2318468   +          +    -1.02908330834262 * S_NumWebPurchases
2318469   +          +     2.79163466516477 * S_NumWebVisitsMonth
2318470   +          +    -0.02537920152644 * S_RFMstat  +    -0.42457000565561 *
2318471   +        S_RMntFrq  +     -2.0907247135068 * S_Recency
2318472   +          +     0.74119954026621 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.00721395593412 * S_AcceptedCmpTotal + -0.01540387767211 * 
S_Age + -0.84860703860633 * S_Frq + -1.02288627805121 * S_Income + -1.09101870516967 * 
S_Kidhome + -0.49364597366691 * S_Mnt + -0.46832600024559 * S_MntFishProducts + 
0.18419647776638 * S_MntFruits + 0.08548650236624 * S_MntGoldProds + 3.4353205628246 * 
S_MntMeatProducts + -0.34836704949861 * S_MntSweetProducts + -2.43294028965601 * S_MntWines + 
-0.52018014955 * S_MonthsAsCustomer + 0.64700842330282 * S_NumCatalogPurchases + 
0.78421010501058 * S_NumDealsPurchases + 0.01075885160671 * S_NumDistPurchases + 
-1.99395040717832 * S_NumStorePurchases + -1.02908330834262 * S_NumWebPurchases + 
2.79163466516477 * S_NumWebVisitsMonth + -0.02537920152644 * S_RFMstat + -0.42457000565561 * 
S_RMntFrq + -2.0907247135068 * S_Recency + 0.74119954026621 * S_Teenhome ;
2318473   +   H1x1_5  =    -1.61701205426558 * S_AcceptedCmpTotal
2318474   +          +     0.08257295395479 * S_Age  +    -0.68185680658717 * S_Frq
2318475   +          +    -1.39465125759406 * S_Income  +    -1.25029109577242 *
2318476   +        S_Kidhome  +    -1.09090107886966 * S_Mnt  +     1.64350195586938 *
2318477   +        S_MntFishProducts  +      0.5087421773332 * S_MntFruits
2318478   +          +      0.4047616469084 * S_MntGoldProds  +    -7.16241250715453 *
2318479   +        S_MntMeatProducts  +    -0.92562420397097 * S_MntSweetProducts
2318480   +          +     1.87307481667927 * S_MntWines  +    -0.53417946416471 *
2318481   +        S_MonthsAsCustomer  +    -1.53123660652072 * S_NumCatalogPurchases
2318482   +          +    -1.04219068390022 * S_NumDealsPurchases
2318483   +          +    -0.45770204483973 * S_NumDistPurchases
2318484   +          +    -0.04941442229195 * S_NumStorePurchases
2318485   +          +     0.67187353161183 * S_NumWebPurchases
2318486   +          +     2.01907760553871 * S_NumWebVisitsMonth
2318487   +          +    -1.68329765100269 * S_RFMstat  +     0.29244142334331 *
2318488   +        S_RMntFrq  +    -1.12913051410394 * S_Recency
2318489   +          +     0.43082751824484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.61701205426558 * S_AcceptedCmpTotal + 0.08257295395479 * 
S_Age + -0.68185680658717 * S_Frq + -1.39465125759406 * S_Income + -1.25029109577242 * 
S_Kidhome + -1.09090107886966 * S_Mnt + 1.64350195586938 * S_MntFishProducts + 0.5087421773332 
* S_MntFruits + 0.4047616469084 * S_MntGoldProds + -7.16241250715453 * S_MntMeatProducts + 
-0.92562420397097 * S_MntSweetProducts + 1.87307481667927 * S_MntWines + -0.53417946416471 * 
S_MonthsAsCustomer + -1.53123660652072 * S_NumCatalogPurchases + -1.04219068390022 * 
S_NumDealsPurchases + -0.45770204483973 * S_NumDistPurchases + -0.04941442229195 * 
S_NumStorePurchases + 0.67187353161183 * S_NumWebPurchases + 2.01907760553871 * 
S_NumWebVisitsMonth + -1.68329765100269 * S_RFMstat + 0.29244142334331 * S_RMntFrq + 
-1.12913051410394 * S_Recency + 0.43082751824484 * S_Teenhome ;
2318490   +   H1x1_1  = H1x1_1  +    -0.44646416045725 * AcceptedCmp10
2318491   +          +    -0.51992887099168 * AcceptedCmp20  +    -1.12974688442196 *
2318492   +        AcceptedCmp30  +    -0.25247614927616 * AcceptedCmp40
2318493   +          +     -1.0839587453165 * AcceptedCmp50  +    -0.37542128912082 *
2318494   +        Complain0  +     0.50509109375746 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.44646416045725 * AcceptedCmp10 + -0.51992887099168 
* AcceptedCmp20 + -1.12974688442196 * AcceptedCmp30 + -0.25247614927616 * AcceptedCmp40 + 
-1.0839587453165 * AcceptedCmp50 + -0.37542128912082 * Complain0 + 0.50509109375746 * 
HigherEducationBinary0 ;
2318495   +   H1x1_2  = H1x1_2  +     1.41785862418118 * AcceptedCmp10
2318496   +          +     0.14869386732553 * AcceptedCmp20  +    -0.34292007253529 *
2318497   +        AcceptedCmp30  +    -0.46450669830265 * AcceptedCmp40
2318498   +          +    -0.84675597945703 * AcceptedCmp50  +     -0.0664649548734 *
2318499   +        Complain0  +    -0.45532665777266 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.41785862418118 * AcceptedCmp10 + 0.14869386732553 * 
AcceptedCmp20 + -0.34292007253529 * AcceptedCmp30 + -0.46450669830265 * AcceptedCmp40 + 
-0.84675597945703 * AcceptedCmp50 + -0.0664649548734 * Complain0 + -0.45532665777266 * 
HigherEducationBinary0 ;
2318500   +   H1x1_3  = H1x1_3  +    -0.77549230890552 * AcceptedCmp10
2318501   +          +    -1.36005205352388 * AcceptedCmp20  +    -0.77268925112364 *
2318502   +        AcceptedCmp30  +    -1.48651970256564 * AcceptedCmp40
2318503   +          +    -1.49771960438108 * AcceptedCmp50  +     0.05855673938529 *
2318504   +        Complain0  +      0.5650947463497 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.77549230890552 * AcceptedCmp10 + -1.36005205352388 
* AcceptedCmp20 + -0.77268925112364 * AcceptedCmp30 + -1.48651970256564 * AcceptedCmp40 + 
-1.49771960438108 * AcceptedCmp50 + 0.05855673938529 * Complain0 + 0.5650947463497 * 
HigherEducationBinary0 ;
2318505   +   H1x1_4  = H1x1_4  +    -0.67577364181798 * AcceptedCmp10
2318506   +          +    -0.90920539880387 * AcceptedCmp20  +    -0.10856872028934 *
2318507   +        AcceptedCmp30  +    -0.17408320421731 * AcceptedCmp40
2318508   +          +    -0.40718112138881 * AcceptedCmp50  +    -1.15772819875829 *
2318509   +        Complain0  +    -0.63688652305256 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.67577364181798 * AcceptedCmp10 + -0.90920539880387 
* AcceptedCmp20 + -0.10856872028934 * AcceptedCmp30 + -0.17408320421731 * AcceptedCmp40 + 
-0.40718112138881 * AcceptedCmp50 + -1.15772819875829 * Complain0 + -0.63688652305256 * 
HigherEducationBinary0 ;
2318510   +   H1x1_5  = H1x1_5  +      -0.257461635853 * AcceptedCmp10
2318511   +          +    -0.53931888306725 * AcceptedCmp20  +    -0.18314917937273 *
2318512   +        AcceptedCmp30  +    -0.63373606551928 * AcceptedCmp40
2318513   +          +    -0.22117496766649 * AcceptedCmp50  +    -0.96313784449205 *
2318514   +        Complain0  +    -0.42031825118642 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.257461635853 * AcceptedCmp10 + -0.53931888306725 * 
AcceptedCmp20 + -0.18314917937273 * AcceptedCmp30 + -0.63373606551928 * AcceptedCmp40 + 
-0.22117496766649 * AcceptedCmp50 + -0.96313784449205 * Complain0 + -0.42031825118642 * 
HigherEducationBinary0 ;
2318515   +   H1x1_1  = H1x1_1  +    -0.61947659516101 * Education2n_Cycle
2318516   +          +     0.35542867116569 * EducationBasic  +    -0.40115062807285 *
2318517   +        EducationGraduation  +     0.09596442360106 * EducationMaster
2318518   +          +     2.58907527032049 * Marital_StatusDivorced
2318519   +          +    -2.45549008158921 * Marital_StatusMarried
2318520   +          +     2.56223650840768 * Marital_StatusSingle
2318521   +          +    -2.57680442835747 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.61947659516101 * Education2n_Cycle + 
0.35542867116569 * EducationBasic + -0.40115062807285 * EducationGraduation + 0.09596442360106 
* EducationMaster + 2.58907527032049 * Marital_StatusDivorced + -2.45549008158921 * 
Marital_StatusMarried + 2.56223650840768 * Marital_StatusSingle + -2.57680442835747 * 
Marital_StatusTogether ;
2318522   +   H1x1_2  = H1x1_2  +    -0.89996232033524 * Education2n_Cycle
2318523   +          +     0.51901949778729 * EducationBasic  +     0.48428543845596 *
2318524   +        EducationGraduation  +     0.29249899969052 * EducationMaster
2318525   +          +     0.83917299191368 * Marital_StatusDivorced
2318526   +          +    -0.62624692699191 * Marital_StatusMarried
2318527   +          +    -0.22585060624911 * Marital_StatusSingle
2318528   +          +    -1.13600554287291 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.89996232033524 * Education2n_Cycle + 
0.51901949778729 * EducationBasic + 0.48428543845596 * EducationGraduation + 0.29249899969052 
* EducationMaster + 0.83917299191368 * Marital_StatusDivorced + -0.62624692699191 * 
Marital_StatusMarried + -0.22585060624911 * Marital_StatusSingle + -1.13600554287291 * 
Marital_StatusTogether ;
2318529   +   H1x1_3  = H1x1_3  +    -0.14267095105584 * Education2n_Cycle
2318530   +          +    -0.02301358792856 * EducationBasic  +     0.52040244367562 *
2318531   +        EducationGraduation  +     -1.3163356801876 * EducationMaster
2318532   +          +    -0.65063506696715 * Marital_StatusDivorced
2318533   +          +    -2.37495865381256 * Marital_StatusMarried
2318534   +          +    -0.54954654146904 * Marital_StatusSingle
2318535   +          +    -2.20184943463859 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14267095105584 * Education2n_Cycle + 
-0.02301358792856 * EducationBasic + 0.52040244367562 * EducationGraduation + -1.3163356801876 
* EducationMaster + -0.65063506696715 * Marital_StatusDivorced + -2.37495865381256 * 
Marital_StatusMarried + -0.54954654146904 * Marital_StatusSingle + -2.20184943463859 * 
Marital_StatusTogether ;
2318536   +   H1x1_4  = H1x1_4  +     0.07824072331908 * Education2n_Cycle
2318537   +          +    -0.70728597193571 * EducationBasic  +    -0.08522817414387 *
2318538   +        EducationGraduation  +     0.07916018399549 * EducationMaster
2318539   +          +     0.16185824798364 * Marital_StatusDivorced
2318540   +          +    -0.08142416735136 * Marital_StatusMarried
2318541   +          +    -0.20392270385969 * Marital_StatusSingle
2318542   +          +    -0.16702436233017 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.07824072331908 * Education2n_Cycle + 
-0.70728597193571 * EducationBasic + -0.08522817414387 * EducationGraduation + 
0.07916018399549 * EducationMaster + 0.16185824798364 * Marital_StatusDivorced + 
-0.08142416735136 * Marital_StatusMarried + -0.20392270385969 * Marital_StatusSingle + 
-0.16702436233017 * Marital_StatusTogether ;
2318543   +   H1x1_5  = H1x1_5  +    -0.24374540557838 * Education2n_Cycle
2318544   +          +    -0.69820143786999 * EducationBasic  +    -0.60198982003005 *
2318545   +        EducationGraduation  +     0.28107355175103 * EducationMaster
2318546   +          +      -0.516522631078 * Marital_StatusDivorced
2318547   +          +    -0.61661247789976 * Marital_StatusMarried
2318548   +          +    -0.99533130308294 * Marital_StatusSingle
2318549   +          +    -0.36897004084592 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.24374540557838 * Education2n_Cycle + 
-0.69820143786999 * EducationBasic + -0.60198982003005 * EducationGraduation + 
0.28107355175103 * EducationMaster + -0.516522631078 * Marital_StatusDivorced + 
-0.61661247789976 * Marital_StatusMarried + -0.99533130308294 * Marital_StatusSingle + 
-0.36897004084592 * Marital_StatusTogether ;
2318550   +   H1x1_1  =    -2.48464133714558 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.48464133714558 + H1x1_1 ;
2318551   +   H1x1_2  =    -1.27353840480002 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.27353840480002 + H1x1_2 ;
2318552   +   H1x1_3  =    -1.74000879961851 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.74000879961851 + H1x1_3 ;
2318553   +   H1x1_4  =    -0.38838285632991 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.38838285632991 + H1x1_4 ;
2318554   +   H1x1_5  =    -0.14124488553728 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.14124488553728 + H1x1_5 ;
2318555   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
2318556   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
2318557   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2318558   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2318559   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2318560   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2318561   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2318562   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2318563   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2318564   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2318565   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2318566   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
2318567   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
2318568   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
2318569   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
2318570   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2318571   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2318572   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2318573   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2318574   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
2318575   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
2318576   +END;
MPRINT(EM_DIAGRAM):   END;
2318577   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2318578   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2318579   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2318580   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2318581   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2318582   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2318583   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2318584   +END;
MPRINT(EM_DIAGRAM):   END;
2318585   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2318586   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2318587   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2318588   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2318589   +   H1x2_1  =     0.48404108721156 * S_AcceptedCmpTotal
2318590   +          +    -0.27070568741648 * S_Age  +    -0.78729393257177 * S_Frq
2318591   +          +    -0.22841203379079 * S_Income  +      1.7948359601764 *
2318592   +        S_Kidhome  +     0.16415271082275 * S_Mnt  +     0.68709045116477 *
2318593   +        S_MntFishProducts  +     1.40499150479431 * S_MntFruits
2318594   +          +     1.76690927096327 * S_MntGoldProds  +    -0.47805967324795 *
2318595   +        S_MntMeatProducts  +    -1.98462171861386 * S_MntSweetProducts
2318596   +          +     0.17732042205332 * S_MntWines  +    -2.68647979937092 *
2318597   +        S_MonthsAsCustomer  +     0.66724634672152 * S_NumCatalogPurchases
2318598   +          +    -0.03801022287706 * S_NumDealsPurchases
2318599   +          +    -1.50723574966419 * S_NumDistPurchases
2318600   +          +    -0.21514545448485 * S_NumStorePurchases
2318601   +          +    -0.50179555233865 * S_NumWebPurchases
2318602   +          +    -0.68226572560161 * S_NumWebVisitsMonth
2318603   +          +    -1.16287961930374 * S_RFMstat  +    -0.10835316604382 *
2318604   +        S_RMntFrq  +     0.78178939203913 * S_Recency
2318605   +          +     0.99430928489958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.48404108721156 * S_AcceptedCmpTotal + -0.27070568741648 * 
S_Age + -0.78729393257177 * S_Frq + -0.22841203379079 * S_Income + 1.7948359601764 * S_Kidhome 
+ 0.16415271082275 * S_Mnt + 0.68709045116477 * S_MntFishProducts + 1.40499150479431 * 
S_MntFruits + 1.76690927096327 * S_MntGoldProds + -0.47805967324795 * S_MntMeatProducts + 
-1.98462171861386 * S_MntSweetProducts + 0.17732042205332 * S_MntWines + -2.68647979937092 * 
S_MonthsAsCustomer + 0.66724634672152 * S_NumCatalogPurchases + -0.03801022287706 * 
S_NumDealsPurchases + -1.50723574966419 * S_NumDistPurchases + -0.21514545448485 * 
S_NumStorePurchases + -0.50179555233865 * S_NumWebPurchases + -0.68226572560161 * 
S_NumWebVisitsMonth + -1.16287961930374 * S_RFMstat + -0.10835316604382 * S_RMntFrq + 
0.78178939203913 * S_Recency + 0.99430928489958 * S_Teenhome ;
2318606   +   H1x2_2  =    -0.36352858735119 * S_AcceptedCmpTotal
2318607   +          +    -0.57224467079409 * S_Age  +    -1.50170848997829 * S_Frq
2318608   +          +    -0.38902839025885 * S_Income  +     -1.1798795668612 *
2318609   +        S_Kidhome  +     -0.1290183198617 * S_Mnt  +     0.76723261406072 *
2318610   +        S_MntFishProducts  +     -0.2940014517298 * S_MntFruits
2318611   +          +     1.10823983171432 * S_MntGoldProds  +    -0.31483479967732 *
2318612   +        S_MntMeatProducts  +     1.52044892546638 * S_MntSweetProducts
2318613   +          +     0.93667207634948 * S_MntWines  +     1.38654947651763 *
2318614   +        S_MonthsAsCustomer  +     0.60618457384701 * S_NumCatalogPurchases
2318615   +          +     0.70551335536975 * S_NumDealsPurchases
2318616   +          +     0.02824488988803 * S_NumDistPurchases
2318617   +          +    -0.47958123842808 * S_NumStorePurchases
2318618   +          +     1.04559003239583 * S_NumWebPurchases
2318619   +          +    -0.58386087813772 * S_NumWebVisitsMonth
2318620   +          +     0.30550498646512 * S_RFMstat  +     0.30157778523343 *
2318621   +        S_RMntFrq  +    -0.05848082255965 * S_Recency
2318622   +          +     1.93017367885145 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.36352858735119 * S_AcceptedCmpTotal + -0.57224467079409 * 
S_Age + -1.50170848997829 * S_Frq + -0.38902839025885 * S_Income + -1.1798795668612 * 
S_Kidhome + -0.1290183198617 * S_Mnt + 0.76723261406072 * S_MntFishProducts + -0.2940014517298 
* S_MntFruits + 1.10823983171432 * S_MntGoldProds + -0.31483479967732 * S_MntMeatProducts + 
1.52044892546638 * S_MntSweetProducts + 0.93667207634948 * S_MntWines + 1.38654947651763 * 
S_MonthsAsCustomer + 0.60618457384701 * S_NumCatalogPurchases + 0.70551335536975 * 
S_NumDealsPurchases + 0.02824488988803 * S_NumDistPurchases + -0.47958123842808 * 
S_NumStorePurchases + 1.04559003239583 * S_NumWebPurchases + -0.58386087813772 * 
S_NumWebVisitsMonth + 0.30550498646512 * S_RFMstat + 0.30157778523343 * S_RMntFrq + 
-0.05848082255965 * S_Recency + 1.93017367885145 * S_Teenhome ;
2318623   +   H1x2_3  =    -1.42573562358231 * S_AcceptedCmpTotal
2318624   +          +    -1.32139459670271 * S_Age  +    -0.65089374259133 * S_Frq
2318625   +          +     0.40762251828155 * S_Income  +     0.07844400105703 *
2318626   +        S_Kidhome  +     0.50965373569965 * S_Mnt  +     0.16029734923155 *
2318627   +        S_MntFishProducts  +     0.09920766855666 * S_MntFruits
2318628   +          +     1.72613699296152 * S_MntGoldProds  +    -0.05634715837952 *
2318629   +        S_MntMeatProducts  +    -0.46288044931269 * S_MntSweetProducts
2318630   +          +    -1.56275217321856 * S_MntWines  +     0.47573724745363 *
2318631   +        S_MonthsAsCustomer  +     0.24362096681468 * S_NumCatalogPurchases
2318632   +          +    -0.28907339261907 * S_NumDealsPurchases
2318633   +          +     0.04310505858352 * S_NumDistPurchases
2318634   +          +    -0.99594604666889 * S_NumStorePurchases
2318635   +          +    -0.58870940220114 * S_NumWebPurchases
2318636   +          +     0.84018399925148 * S_NumWebVisitsMonth
2318637   +          +    -0.19517311010454 * S_RFMstat  +     -0.3463233802461 *
2318638   +        S_RMntFrq  +    -1.47730936960999 * S_Recency
2318639   +          +    -0.88597688046705 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.42573562358231 * S_AcceptedCmpTotal + -1.32139459670271 * 
S_Age + -0.65089374259133 * S_Frq + 0.40762251828155 * S_Income + 0.07844400105703 * S_Kidhome 
+ 0.50965373569965 * S_Mnt + 0.16029734923155 * S_MntFishProducts + 0.09920766855666 * 
S_MntFruits + 1.72613699296152 * S_MntGoldProds + -0.05634715837952 * S_MntMeatProducts + 
-0.46288044931269 * S_MntSweetProducts + -1.56275217321856 * S_MntWines + 0.47573724745363 * 
S_MonthsAsCustomer + 0.24362096681468 * S_NumCatalogPurchases + -0.28907339261907 * 
S_NumDealsPurchases + 0.04310505858352 * S_NumDistPurchases + -0.99594604666889 * 
S_NumStorePurchases + -0.58870940220114 * S_NumWebPurchases + 0.84018399925148 * 
S_NumWebVisitsMonth + -0.19517311010454 * S_RFMstat + -0.3463233802461 * S_RMntFrq + 
-1.47730936960999 * S_Recency + -0.88597688046705 * S_Teenhome ;
2318640   +   H1x2_4  =     0.11016580381662 * S_AcceptedCmpTotal
2318641   +          +     0.30908576425954 * S_Age  +     0.34179480828109 * S_Frq
2318642   +          +     0.40584056795753 * S_Income  +    -0.45712899846476 *
2318643   +        S_Kidhome  +     1.12080510316382 * S_Mnt  +     0.48988466623601 *
2318644   +        S_MntFishProducts  +    -0.33589219598754 * S_MntFruits
2318645   +          +     0.89305356089927 * S_MntGoldProds  +    -2.00512215642683 *
2318646   +        S_MntMeatProducts  +     1.10859074670332 * S_MntSweetProducts
2318647   +          +     -1.0064133988839 * S_MntWines  +      0.7768603559605 *
2318648   +        S_MonthsAsCustomer  +     0.97922554259242 * S_NumCatalogPurchases
2318649   +          +     0.52917289878604 * S_NumDealsPurchases
2318650   +          +     0.30974142545809 * S_NumDistPurchases
2318651   +          +    -0.36081450643799 * S_NumStorePurchases
2318652   +          +    -0.28418053386759 * S_NumWebPurchases
2318653   +          +    -0.80759462497096 * S_NumWebVisitsMonth
2318654   +          +    -1.12633439579018 * S_RFMstat  +    -0.14662678398603 *
2318655   +        S_RMntFrq  +    -0.02418118976368 * S_Recency
2318656   +          +    -0.46548253671298 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.11016580381662 * S_AcceptedCmpTotal + 0.30908576425954 * 
S_Age + 0.34179480828109 * S_Frq + 0.40584056795753 * S_Income + -0.45712899846476 * S_Kidhome 
+ 1.12080510316382 * S_Mnt + 0.48988466623601 * S_MntFishProducts + -0.33589219598754 * 
S_MntFruits + 0.89305356089927 * S_MntGoldProds + -2.00512215642683 * S_MntMeatProducts + 
1.10859074670332 * S_MntSweetProducts + -1.0064133988839 * S_MntWines + 0.7768603559605 * 
S_MonthsAsCustomer + 0.97922554259242 * S_NumCatalogPurchases + 0.52917289878604 * 
S_NumDealsPurchases + 0.30974142545809 * S_NumDistPurchases + -0.36081450643799 * 
S_NumStorePurchases + -0.28418053386759 * S_NumWebPurchases + -0.80759462497096 * 
S_NumWebVisitsMonth + -1.12633439579018 * S_RFMstat + -0.14662678398603 * S_RMntFrq + 
-0.02418118976368 * S_Recency + -0.46548253671298 * S_Teenhome ;
2318657   +   H1x2_5  =    -0.55551536908819 * S_AcceptedCmpTotal
2318658   +          +    -0.09163465220674 * S_Age  +    -0.35937602626275 * S_Frq
2318659   +          +     0.61145646041534 * S_Income  +     0.28920493959955 *
2318660   +        S_Kidhome  +     0.71661843805688 * S_Mnt  +     0.25254041554237 *
2318661   +        S_MntFishProducts  +    -0.38704785732563 * S_MntFruits
2318662   +          +    -0.16912995068939 * S_MntGoldProds  +     0.21440191729631 *
2318663   +        S_MntMeatProducts  +    -0.49507693220329 * S_MntSweetProducts
2318664   +          +      0.3153765288287 * S_MntWines  +    -0.15329574285112 *
2318665   +        S_MonthsAsCustomer  +     1.28722879296429 * S_NumCatalogPurchases
2318666   +          +    -0.47500053723253 * S_NumDealsPurchases
2318667   +          +     0.41421086319635 * S_NumDistPurchases
2318668   +          +     0.69664835428137 * S_NumStorePurchases
2318669   +          +     0.66359306812968 * S_NumWebPurchases
2318670   +          +     0.77931462528741 * S_NumWebVisitsMonth
2318671   +          +     0.05868786291548 * S_RFMstat  +     0.77672802649379 *
2318672   +        S_RMntFrq  +    -1.91226042675868 * S_Recency
2318673   +          +     1.79227856637688 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.55551536908819 * S_AcceptedCmpTotal + -0.09163465220674 * 
S_Age + -0.35937602626275 * S_Frq + 0.61145646041534 * S_Income + 0.28920493959955 * S_Kidhome 
+ 0.71661843805688 * S_Mnt + 0.25254041554237 * S_MntFishProducts + -0.38704785732563 * 
S_MntFruits + -0.16912995068939 * S_MntGoldProds + 0.21440191729631 * S_MntMeatProducts + 
-0.49507693220329 * S_MntSweetProducts + 0.3153765288287 * S_MntWines + -0.15329574285112 * 
S_MonthsAsCustomer + 1.28722879296429 * S_NumCatalogPurchases + -0.47500053723253 * 
S_NumDealsPurchases + 0.41421086319635 * S_NumDistPurchases + 0.69664835428137 * 
S_NumStorePurchases + 0.66359306812968 * S_NumWebPurchases + 0.77931462528741 * 
S_NumWebVisitsMonth + 0.05868786291548 * S_RFMstat + 0.77672802649379 * S_RMntFrq + 
-1.91226042675868 * S_Recency + 1.79227856637688 * S_Teenhome ;
2318674   +   H1x2_1  = H1x2_1  +     1.13471289065691 * AcceptedCmp10
2318675   +          +     0.65974383309652 * AcceptedCmp20  +    -1.87292531678796 *
2318676   +        AcceptedCmp30  +      -1.353797047409 * AcceptedCmp40
2318677   +          +     0.20616786486771 * AcceptedCmp50  +    -0.38264326101775 *
2318678   +        Complain0  +    -0.17807638061615 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.13471289065691 * AcceptedCmp10 + 0.65974383309652 * 
AcceptedCmp20 + -1.87292531678796 * AcceptedCmp30 + -1.353797047409 * AcceptedCmp40 + 
0.20616786486771 * AcceptedCmp50 + -0.38264326101775 * Complain0 + -0.17807638061615 * 
HigherEducationBinary0 ;
2318679   +   H1x2_2  = H1x2_2  +     1.21347348622419 * AcceptedCmp10
2318680   +          +    -0.25372740217388 * AcceptedCmp20  +     1.86937589112006 *
2318681   +        AcceptedCmp30  +    -0.04754722838516 * AcceptedCmp40
2318682   +          +    -0.08078800460742 * AcceptedCmp50  +     1.62387969342769 *
2318683   +        Complain0  +    -0.78004732229344 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.21347348622419 * AcceptedCmp10 + -0.25372740217388 * 
AcceptedCmp20 + 1.86937589112006 * AcceptedCmp30 + -0.04754722838516 * AcceptedCmp40 + 
-0.08078800460742 * AcceptedCmp50 + 1.62387969342769 * Complain0 + -0.78004732229344 * 
HigherEducationBinary0 ;
2318684   +   H1x2_3  = H1x2_3  +    -0.02152665189186 * AcceptedCmp10
2318685   +          +     0.57207081192818 * AcceptedCmp20  +      0.6212177562119 *
2318686   +        AcceptedCmp30  +    -0.73691462528053 * AcceptedCmp40
2318687   +          +    -0.35326427815838 * AcceptedCmp50  +     0.14875513793176 *
2318688   +        Complain0  +    -0.13978395235915 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.02152665189186 * AcceptedCmp10 + 0.57207081192818 * 
AcceptedCmp20 + 0.6212177562119 * AcceptedCmp30 + -0.73691462528053 * AcceptedCmp40 + 
-0.35326427815838 * AcceptedCmp50 + 0.14875513793176 * Complain0 + -0.13978395235915 * 
HigherEducationBinary0 ;
2318689   +   H1x2_4  = H1x2_4  +     0.87315450122595 * AcceptedCmp10
2318690   +          +      0.7868322457627 * AcceptedCmp20  +    -0.23332719513906 *
2318691   +        AcceptedCmp30  +    -0.68817918979928 * AcceptedCmp40
2318692   +          +    -0.57204462412445 * AcceptedCmp50  +    -0.86223238269616 *
2318693   +        Complain0  +     -0.3126348645458 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.87315450122595 * AcceptedCmp10 + 0.7868322457627 * 
AcceptedCmp20 + -0.23332719513906 * AcceptedCmp30 + -0.68817918979928 * AcceptedCmp40 + 
-0.57204462412445 * AcceptedCmp50 + -0.86223238269616 * Complain0 + -0.3126348645458 * 
HigherEducationBinary0 ;
2318694   +   H1x2_5  = H1x2_5  +     0.29282165496733 * AcceptedCmp10
2318695   +          +     1.51708756092369 * AcceptedCmp20  +     1.20268215158483 *
2318696   +        AcceptedCmp30  +     0.30521477351547 * AcceptedCmp40
2318697   +          +    -0.58691162701837 * AcceptedCmp50  +     0.75641665624817 *
2318698   +        Complain0  +      0.7018761099345 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.29282165496733 * AcceptedCmp10 + 1.51708756092369 * 
AcceptedCmp20 + 1.20268215158483 * AcceptedCmp30 + 0.30521477351547 * AcceptedCmp40 + 
-0.58691162701837 * AcceptedCmp50 + 0.75641665624817 * Complain0 + 0.7018761099345 * 
HigherEducationBinary0 ;
2318699   +   H1x2_1  = H1x2_1  +    -0.68955031483686 * Education2n_Cycle
2318700   +          +    -1.63162976419312 * EducationBasic  +     1.58569020932253 *
2318701   +        EducationGraduation  +     0.89392741557091 * EducationMaster
2318702   +          +    -1.34742914042312 * Marital_StatusDivorced
2318703   +          +    -0.75378934918763 * Marital_StatusMarried
2318704   +          +    -1.85411678929217 * Marital_StatusSingle
2318705   +          +     0.34579160965376 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.68955031483686 * Education2n_Cycle + 
-1.63162976419312 * EducationBasic + 1.58569020932253 * EducationGraduation + 0.89392741557091 
* EducationMaster + -1.34742914042312 * Marital_StatusDivorced + -0.75378934918763 * 
Marital_StatusMarried + -1.85411678929217 * Marital_StatusSingle + 0.34579160965376 * 
Marital_StatusTogether ;
2318706   +   H1x2_2  = H1x2_2  +     0.91842441316819 * Education2n_Cycle
2318707   +          +    -0.10372785737624 * EducationBasic  +     1.79022097342125 *
2318708   +        EducationGraduation  +      1.4602485898642 * EducationMaster
2318709   +          +     0.47958659206261 * Marital_StatusDivorced
2318710   +          +     -0.9665584294045 * Marital_StatusMarried
2318711   +          +      0.9733784530538 * Marital_StatusSingle
2318712   +          +     0.19258101270915 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.91842441316819 * Education2n_Cycle + 
-0.10372785737624 * EducationBasic + 1.79022097342125 * EducationGraduation + 1.4602485898642 
* EducationMaster + 0.47958659206261 * Marital_StatusDivorced + -0.9665584294045 * 
Marital_StatusMarried + 0.9733784530538 * Marital_StatusSingle + 0.19258101270915 * 
Marital_StatusTogether ;
2318713   +   H1x2_3  = H1x2_3  +     1.26817216331303 * Education2n_Cycle
2318714   +          +    -1.60153781162075 * EducationBasic  +    -0.32068567398782 *
2318715   +        EducationGraduation  +     1.49772418974753 * EducationMaster
2318716   +          +    -0.56894207908284 * Marital_StatusDivorced
2318717   +          +    -0.96715106987195 * Marital_StatusMarried
2318718   +          +     1.18678144721443 * Marital_StatusSingle
2318719   +          +     1.05940264255347 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.26817216331303 * Education2n_Cycle + 
-1.60153781162075 * EducationBasic + -0.32068567398782 * EducationGraduation + 
1.49772418974753 * EducationMaster + -0.56894207908284 * Marital_StatusDivorced + 
-0.96715106987195 * Marital_StatusMarried + 1.18678144721443 * Marital_StatusSingle + 
1.05940264255347 * Marital_StatusTogether ;
2318720   +   H1x2_4  = H1x2_4  +    -1.19824707240276 * Education2n_Cycle
2318721   +          +     0.43905907692169 * EducationBasic  +    -1.18279972023424 *
2318722   +        EducationGraduation  +    -2.01250798855133 * EducationMaster
2318723   +          +     -0.6061959224661 * Marital_StatusDivorced
2318724   +          +     0.03495844244684 * Marital_StatusMarried
2318725   +          +    -0.63896361063244 * Marital_StatusSingle
2318726   +          +     0.74357887057422 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.19824707240276 * Education2n_Cycle + 
0.43905907692169 * EducationBasic + -1.18279972023424 * EducationGraduation + 
-2.01250798855133 * EducationMaster + -0.6061959224661 * Marital_StatusDivorced + 
0.03495844244684 * Marital_StatusMarried + -0.63896361063244 * Marital_StatusSingle + 
0.74357887057422 * Marital_StatusTogether ;
2318727   +   H1x2_5  = H1x2_5  +     -0.6530237200396 * Education2n_Cycle
2318728   +          +     0.90062473169279 * EducationBasic  +    -3.01933913602199 *
2318729   +        EducationGraduation  +     -0.1598988619204 * EducationMaster
2318730   +          +     0.82178907301319 * Marital_StatusDivorced
2318731   +          +     1.69543553114589 * Marital_StatusMarried
2318732   +          +     -2.1272067363559 * Marital_StatusSingle
2318733   +          +     0.24274508474634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.6530237200396 * Education2n_Cycle + 
0.90062473169279 * EducationBasic + -3.01933913602199 * EducationGraduation + -0.1598988619204 
* EducationMaster + 0.82178907301319 * Marital_StatusDivorced + 1.69543553114589 * 
Marital_StatusMarried + -2.1272067363559 * Marital_StatusSingle + 0.24274508474634 * 
Marital_StatusTogether ;
2318734   +   H1x2_1  =     0.30842509451224 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.30842509451224 + H1x2_1 ;
2318735   +   H1x2_2  =     1.79200699407075 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.79200699407075 + H1x2_2 ;
2318736   +   H1x2_3  =     0.66706944906809 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.66706944906809 + H1x2_3 ;
2318737   +   H1x2_4  =     -0.7356254138015 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.7356254138015 + H1x2_4 ;
2318738   +   H1x2_5  =    -0.68066575174095 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.68066575174095 + H1x2_5 ;
2318739   +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
2318740   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
2318741   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2318742   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
2318743   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
2318744   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
2318745   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
2318746   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
2318747   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
2318748   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
2318749   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
2318750   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
2318751   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
2318752   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
2318753   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
2318754   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
2318755   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
2318756   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
2318757   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
2318758   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
2318759   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
2318760   +END;
MPRINT(EM_DIAGRAM):   END;
2318761   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2318762   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2318763   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2318764   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2318765   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2318766   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2318767   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2318768   +END;
MPRINT(EM_DIAGRAM):   END;
2318769   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2318770   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2318771   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2318772   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2318773   +   H2x1_1  =      0.7656278374321 * H1x1_1  +     1.18988619460831 * H1x1_2
2318774   +          +    -0.68458045558713 * H1x1_3  +     0.49093980591245 * H1x1_4
2318775   +          +    -1.27959429919804 * H1x1_5  +    -1.38760297105319 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.7656278374321 * H1x1_1 + 1.18988619460831 * H1x1_2 + 
-0.68458045558713 * H1x1_3 + 0.49093980591245 * H1x1_4 + -1.27959429919804 * H1x1_5 + 
-1.38760297105319 * H1x1_6 ;
2318776   +   H2x1_2  =    -1.48941810274544 * H1x1_1  +     1.75443095464294 * H1x1_2
2318777   +          +    -1.63478694878031 * H1x1_3  +    -0.69296364459258 * H1x1_4
2318778   +          +     3.14007823471691 * H1x1_5  +     2.71965753640902 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.48941810274544 * H1x1_1 + 1.75443095464294 * H1x1_2 + 
-1.63478694878031 * H1x1_3 + -0.69296364459258 * H1x1_4 + 3.14007823471691 * H1x1_5 + 
2.71965753640902 * H1x1_6 ;
2318779   +   H2x1_3  =     1.07426996100463 * H1x1_1  +    -1.76796943416489 * H1x1_2
2318780   +          +    -0.11946940948224 * H1x1_3  +     1.25457449221991 * H1x1_4
2318781   +          +     -1.4079980040852 * H1x1_5  +    -0.94725163293394 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.07426996100463 * H1x1_1 + -1.76796943416489 * H1x1_2 + 
-0.11946940948224 * H1x1_3 + 1.25457449221991 * H1x1_4 + -1.4079980040852 * H1x1_5 + 
-0.94725163293394 * H1x1_6 ;
2318782   +   H2x1_4  =    -0.00078893231548 * H1x1_1  +     0.06396324179717 * H1x1_2
2318783   +          +    -0.13674165204668 * H1x1_3  +    -0.26576379023249 * H1x1_4
2318784   +          +     0.44513643867194 * H1x1_5  +     0.66585878141635 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.00078893231548 * H1x1_1 + 0.06396324179717 * H1x1_2 + 
-0.13674165204668 * H1x1_3 + -0.26576379023249 * H1x1_4 + 0.44513643867194 * H1x1_5 + 
0.66585878141635 * H1x1_6 ;
2318785   +   H2x1_5  =     -2.8467581879118 * H1x1_1  +     2.94182061339515 * H1x1_2
2318786   +          +    -3.43021438685063 * H1x1_3  +    -4.00045607730935 * H1x1_4
2318787   +          +     3.09230566797337 * H1x1_5  +     3.57592566919388 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.8467581879118 * H1x1_1 + 2.94182061339515 * H1x1_2 + 
-3.43021438685063 * H1x1_3 + -4.00045607730935 * H1x1_4 + 3.09230566797337 * H1x1_5 + 
3.57592566919388 * H1x1_6 ;
2318788   +   H2x1_6  =    -0.29912975132561 * H1x1_1  +     0.25554634262501 * H1x1_2
2318789   +          +    -0.62666868576544 * H1x1_3  +     1.54567563696489 * H1x1_4
2318790   +          +     1.87530466579189 * H1x1_5  +    -0.32006241006585 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.29912975132561 * H1x1_1 + 0.25554634262501 * H1x1_2 + 
-0.62666868576544 * H1x1_3 + 1.54567563696489 * H1x1_4 + 1.87530466579189 * H1x1_5 + 
-0.32006241006585 * H1x1_6 ;
2318791   +   H2x1_1  = H2x1_1  +    -0.53923803948063 * H1x2_1
2318792   +          +    -0.14551996067575 * H1x2_2  +     1.15730137448351 * H1x2_3
2318793   +          +     0.02585401686791 * H1x2_4  +     -0.9274056409194 * H1x2_5
2318794   +          +    -0.07237646966438 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.53923803948063 * H1x2_1 + -0.14551996067575 * 
H1x2_2 + 1.15730137448351 * H1x2_3 + 0.02585401686791 * H1x2_4 + -0.9274056409194 * H1x2_5 + 
-0.07237646966438 * H1x2_6 ;
2318795   +   H2x1_2  = H2x1_2  +     -0.1441321293455 * H1x2_1
2318796   +          +    -0.53271770203833 * H1x2_2  +    -2.80064282115477 * H1x2_3
2318797   +          +    -1.05759395901612 * H1x2_4  +    -0.55127059339304 * H1x2_5
2318798   +          +     0.35471332651631 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.1441321293455 * H1x2_1 + -0.53271770203833 * H1x2_2 
+ -2.80064282115477 * H1x2_3 + -1.05759395901612 * H1x2_4 + -0.55127059339304 * H1x2_5 + 
0.35471332651631 * H1x2_6 ;
2318799   +   H2x1_3  = H2x1_3  +     -0.5351190580444 * H1x2_1
2318800   +          +    -0.02107048725988 * H1x2_2  +    -0.83389437376968 * H1x2_3
2318801   +          +    -0.80183937400902 * H1x2_4  +    -0.66588385104453 * H1x2_5
2318802   +          +      0.5218140468737 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.5351190580444 * H1x2_1 + -0.02107048725988 * H1x2_2 
+ -0.83389437376968 * H1x2_3 + -0.80183937400902 * H1x2_4 + -0.66588385104453 * H1x2_5 + 
0.5218140468737 * H1x2_6 ;
2318803   +   H2x1_4  = H2x1_4  +     1.89050022127485 * H1x2_1
2318804   +          +     -2.6557601537516 * H1x2_2  +     0.99126360053411 * H1x2_3
2318805   +          +    -0.44091776054792 * H1x2_4  +    -1.48547403065153 * H1x2_5
2318806   +          +    -0.67920869444907 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.89050022127485 * H1x2_1 + -2.6557601537516 * H1x2_2 
+ 0.99126360053411 * H1x2_3 + -0.44091776054792 * H1x2_4 + -1.48547403065153 * H1x2_5 + 
-0.67920869444907 * H1x2_6 ;
2318807   +   H2x1_5  = H2x1_5  +      0.2827883572995 * H1x2_1
2318808   +          +    -0.68177519072226 * H1x2_2  +    -1.62062483607713 * H1x2_3
2318809   +          +     0.24454579481466 * H1x2_4  +    -0.07591553404219 * H1x2_5
2318810   +          +      1.1175989027563 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.2827883572995 * H1x2_1 + -0.68177519072226 * H1x2_2 
+ -1.62062483607713 * H1x2_3 + 0.24454579481466 * H1x2_4 + -0.07591553404219 * H1x2_5 + 
1.1175989027563 * H1x2_6 ;
2318811   +   H2x1_6  = H2x1_6  +    -0.00603649892235 * H1x2_1
2318812   +          +    -1.39053357060307 * H1x2_2  +    -1.34023350990878 * H1x2_3
2318813   +          +    -0.76811804565852 * H1x2_4  +    -1.40869786147662 * H1x2_5
2318814   +          +     1.54589390085972 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.00603649892235 * H1x2_1 + -1.39053357060307 * 
H1x2_2 + -1.34023350990878 * H1x2_3 + -0.76811804565852 * H1x2_4 + -1.40869786147662 * H1x2_5 
+ 1.54589390085972 * H1x2_6 ;
2318815   +   H2x1_1  =     0.47873396703524 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.47873396703524 + H2x1_1 ;
2318816   +   H2x1_2  =     -0.0000340630035 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.0000340630035 + H2x1_2 ;
2318817   +   H2x1_3  =     0.35556259592214 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.35556259592214 + H2x1_3 ;
2318818   +   H2x1_4  =     1.01896219314016 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.01896219314016 + H2x1_4 ;
2318819   +   H2x1_5  =     0.72195082860145 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.72195082860145 + H2x1_5 ;
2318820   +   H2x1_6  =     0.24171639764515 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.24171639764515 + H2x1_6 ;
2318821   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2318822   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2318823   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
2318824   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
2318825   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
2318826   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
2318827   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
2318828   +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
2318829   +END;
MPRINT(EM_DIAGRAM):   END;
2318830   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2318831   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2318832   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2318833   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2318834   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2318835   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2318836   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
2318837   +END;
MPRINT(EM_DIAGRAM):   END;
2318838   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2318839   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2318840   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2318841   +
2318842   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2318843   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2318844   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2318845   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2318846   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2318847   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2318848   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2318849   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2318850   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2318851   +end;
MPRINT(EM_DIAGRAM):   end;
2318852   +else do;
MPRINT(EM_DIAGRAM):   else do;
2318853   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2318854   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2318855   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2318856   +   end;
MPRINT(EM_DIAGRAM):   end;
2318857   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2318858   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2318859   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2318860   +   end;
MPRINT(EM_DIAGRAM):   end;
2318861   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2318862   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2318863   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2318864   +   end;
MPRINT(EM_DIAGRAM):   end;
2318865   +end;
MPRINT(EM_DIAGRAM):   end;
2318866   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2318867   +   P_DepVar1  =     7.13056975005701 * H2x1_1  +    -9.26714696465882 * H2x1_2
2318868   +          +     9.36351037194964 * H2x1_3  +     2.76582940055979 * H2x1_4
2318869   +          +    -20.1354182036801 * H2x1_5  +     1.54726164498938 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.13056975005701 * H2x1_1 + -9.26714696465882 * H2x1_2 + 
9.36351037194964 * H2x1_3 + 2.76582940055979 * H2x1_4 + -20.1354182036801 * H2x1_5 + 
1.54726164498938 * H2x1_6 ;
2318870   +   P_DepVar1  =     5.03726079820845 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.03726079820845 + P_DepVar1 ;
2318871   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2318872   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2318873   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2318874   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2318875   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2318876   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2318877   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2318878   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2318879   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2318880   +END;
MPRINT(EM_DIAGRAM):   END;
2318881   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2318882   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2318883   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2318884   +END;
MPRINT(EM_DIAGRAM):   END;
2318885   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2318886   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2318887   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2318888   +END;
MPRINT(EM_DIAGRAM):   END;
2318889   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2318890   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2318891   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2318892   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2318893   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2318894   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2318895   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2318896   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2318897   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2318898   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2318899   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2318900   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2318901   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2318902   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2318903   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2318904   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2318905   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2318906   +END;
MPRINT(EM_DIAGRAM):   END;
2318907   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2318908   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2318909   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2318910   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2318911   +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
2318912   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2318913   +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
2318914   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2318915   +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
2318916   +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
2318917   +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
2318918   +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
2318919   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2318920   +* Renaming Into variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural11;
2318921   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2318922   +length AutoNeural11_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural11_I_DepVar $32;
2318923   +drop AutoNeural11_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_I_DepVar;
2318924   +AutoNeural11_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural11_I_DepVar = I_DepVar;
2318925   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2318926   +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
2318927   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2318928   +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
2318929   +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
2318930   +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
2318931   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2318932   +* Ensmbl38: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Scoring Code of model 7 of 7;
2318933   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2318934   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2318935   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2318936   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2318937   +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
2318938   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2318939   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2318940   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2318941   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2318942   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2318943   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2318944   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2318945   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2318946   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2318947   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2318948   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2318949   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2318950   +LENGTH _WARN_ $4
2318951   +      F_DepVar  $ 12
2318952   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2318953   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2318954   +
2318955   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2318956   +
2318957   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2318958   +
2318959   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2318960   +
2318961   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2318962   +
2318963   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2318964   +
2318965   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2318966   +
2318967   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2318968   +
2318969   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2318970   +
2318971   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2318972   +
2318973   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2318974   +
2318975   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2318976   +
2318977   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2318978   +
2318979   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2318980   +
2318981   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2318982   +
2318983   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2318984   +
2318985   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2318986   +
2318987   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2318988   +
2318989   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2318990   +
2318991   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2318992   +
2318993   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2318994   +
2318995   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2318996   +
2318997   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2318998   +
2318999   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2319000   +
2319001   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2319002   +
2319003   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2319004   +
2319005   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2319006   +
2319007   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2319008   +
2319009   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2319010   +
2319011   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2319012   +
2319013   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2319014   +
2319015   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2319016   +
2319017   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2319018   +
2319019   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2319020   +
2319021   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2319022   +
2319023   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2319024   +
2319025   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2319026   +
2319027   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2319028   +
2319029   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2319030   +
2319031   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2319032   +
2319033   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2319034   +
2319035   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2319036   +
2319037   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2319038   +
2319039   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2319040   +
2319041   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
2319042   +
2319043   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2319044   +
2319045   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2319046   +
2319047   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2319048   +
2319049   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2319050   +
2319051   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2319052   +
2319053   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2319054   +
2319055   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
2319056   +
2319057   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2319058   +
2319059   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2319060   +
2319061   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
2319062   +
2319063   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
2319064   +
2319065   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
2319066   +
2319067   +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
2319068   +
2319069   +      label H1x3_7 = 'Hidden: H1x3_=7' ;
MPRINT(EM_DIAGRAM):   label H1x3_7 = 'Hidden: H1x3_=7' ;
2319070   +
2319071   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2319072   +
2319073   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2319074   +
2319075   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2319076   +
2319077   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2319078   +
2319079   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2319080   +
2319081   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
2319082   +
2319083   +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
2319084   +
2319085   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
2319086   +
2319087   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
2319088   +
2319089   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
2319090   +
2319091   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
2319092   +
2319093   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
2319094   +
2319095   +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
2319096   +
2319097   +      label H2x2_7 = 'Hidden: H2x2_=7' ;
MPRINT(EM_DIAGRAM):   label H2x2_7 = 'Hidden: H2x2_=7' ;
2319098   +
2319099   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
2319100   +
2319101   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
2319102   +
2319103   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
2319104   +
2319105   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
2319106   +
2319107   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
2319108   +
2319109   +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
2319110   +
2319111   +      label H3x1_7 = 'Hidden: H3x1_=7' ;
MPRINT(EM_DIAGRAM):   label H3x1_7 = 'Hidden: H3x1_=7' ;
2319112   +
2319113   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2319114   +
2319115   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2319116   +
2319117   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2319118   +
2319119   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2319120   +
2319121   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2319122   +
2319123   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2319124   +
2319125   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2319126   +
2319127   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2319128   +
2319129   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2319130   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2319131   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2319132   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2319133   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2319134   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2319135   +end;
MPRINT(EM_DIAGRAM):   end;
2319136   +else do;
MPRINT(EM_DIAGRAM):   else do;
2319137   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2319138   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2319139   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2319140   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2319141   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2319142   +   end;
MPRINT(EM_DIAGRAM):   end;
2319143   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2319144   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2319145   +   end;
MPRINT(EM_DIAGRAM):   end;
2319146   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2319147   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2319148   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2319149   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2319150   +   end;
MPRINT(EM_DIAGRAM):   end;
2319151   +end;
MPRINT(EM_DIAGRAM):   end;
2319152   +
2319153   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2319154   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2319155   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2319156   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2319157   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2319158   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2319159   +end;
MPRINT(EM_DIAGRAM):   end;
2319160   +else do;
MPRINT(EM_DIAGRAM):   else do;
2319161   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2319162   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2319163   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2319164   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2319165   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2319166   +   end;
MPRINT(EM_DIAGRAM):   end;
2319167   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2319168   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2319169   +   end;
MPRINT(EM_DIAGRAM):   end;
2319170   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2319171   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2319172   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2319173   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2319174   +   end;
MPRINT(EM_DIAGRAM):   end;
2319175   +end;
MPRINT(EM_DIAGRAM):   end;
2319176   +
2319177   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2319178   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2319179   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2319180   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2319181   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2319182   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2319183   +end;
MPRINT(EM_DIAGRAM):   end;
2319184   +else do;
MPRINT(EM_DIAGRAM):   else do;
2319185   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2319186   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2319187   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2319188   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2319189   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2319190   +   end;
MPRINT(EM_DIAGRAM):   end;
2319191   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2319192   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2319193   +   end;
MPRINT(EM_DIAGRAM):   end;
2319194   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2319195   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2319196   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2319197   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2319198   +   end;
MPRINT(EM_DIAGRAM):   end;
2319199   +end;
MPRINT(EM_DIAGRAM):   end;
2319200   +
2319201   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2319202   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2319203   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2319204   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2319205   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2319206   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2319207   +end;
MPRINT(EM_DIAGRAM):   end;
2319208   +else do;
MPRINT(EM_DIAGRAM):   else do;
2319209   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2319210   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2319211   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2319212   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2319213   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2319214   +   end;
MPRINT(EM_DIAGRAM):   end;
2319215   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2319216   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2319217   +   end;
MPRINT(EM_DIAGRAM):   end;
2319218   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2319219   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2319220   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2319221   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2319222   +   end;
MPRINT(EM_DIAGRAM):   end;
2319223   +end;
MPRINT(EM_DIAGRAM):   end;
2319224   +
2319225   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2319226   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2319227   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2319228   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2319229   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2319230   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2319231   +end;
MPRINT(EM_DIAGRAM):   end;
2319232   +else do;
MPRINT(EM_DIAGRAM):   else do;
2319233   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2319234   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2319235   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2319236   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2319237   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2319238   +   end;
MPRINT(EM_DIAGRAM):   end;
2319239   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2319240   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2319241   +   end;
MPRINT(EM_DIAGRAM):   end;
2319242   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2319243   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2319244   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2319245   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2319246   +   end;
MPRINT(EM_DIAGRAM):   end;
2319247   +end;
MPRINT(EM_DIAGRAM):   end;
2319248   +
2319249   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2319250   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2319251   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2319252   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2319253   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2319254   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2319255   +end;
MPRINT(EM_DIAGRAM):   end;
2319256   +else do;
MPRINT(EM_DIAGRAM):   else do;
2319257   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2319258   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2319259   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2319260   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2319261   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2319262   +   end;
MPRINT(EM_DIAGRAM):   end;
2319263   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2319264   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2319265   +   end;
MPRINT(EM_DIAGRAM):   end;
2319266   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2319267   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2319268   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2319269   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2319270   +   end;
MPRINT(EM_DIAGRAM):   end;
2319271   +end;
MPRINT(EM_DIAGRAM):   end;
2319272   +
2319273   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2319274   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2319275   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2319276   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2319277   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2319278   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2319279   +end;
MPRINT(EM_DIAGRAM):   end;
2319280   +else do;
MPRINT(EM_DIAGRAM):   else do;
2319281   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2319282   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2319283   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2319284   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2319285   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2319286   +   end;
MPRINT(EM_DIAGRAM):   end;
2319287   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2319288   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2319289   +   end;
MPRINT(EM_DIAGRAM):   end;
2319290   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2319291   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2319292   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2319293   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2319294   +   end;
MPRINT(EM_DIAGRAM):   end;
2319295   +end;
MPRINT(EM_DIAGRAM):   end;
2319296   +
2319297   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2319298   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2319299   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2319300   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2319301   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2319302   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2319303   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2319304   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2319305   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2319306   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2319307   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2319308   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2319309   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2319310   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2319311   +end;
MPRINT(EM_DIAGRAM):   end;
2319312   +else do;
MPRINT(EM_DIAGRAM):   else do;
2319313   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2319314   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2319315   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2319316   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2319317   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2319318   +   end;
MPRINT(EM_DIAGRAM):   end;
2319319   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2319320   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2319321   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2319322   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2319323   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2319324   +   end;
MPRINT(EM_DIAGRAM):   end;
2319325   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2319326   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2319327   +   end;
MPRINT(EM_DIAGRAM):   end;
2319328   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2319329   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2319330   +   end;
MPRINT(EM_DIAGRAM):   end;
2319331   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2319332   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2319333   +   end;
MPRINT(EM_DIAGRAM):   end;
2319334   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2319335   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2319336   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2319337   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2319338   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2319339   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2319340   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2319341   +   end;
MPRINT(EM_DIAGRAM):   end;
2319342   +end;
MPRINT(EM_DIAGRAM):   end;
2319343   +
2319344   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2319345   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2319346   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2319347   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2319348   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2319349   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2319350   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2319351   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2319352   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2319353   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2319354   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2319355   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2319356   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2319357   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2319358   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2319359   +end;
MPRINT(EM_DIAGRAM):   end;
2319360   +else do;
MPRINT(EM_DIAGRAM):   else do;
2319361   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2319362   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2319363   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2319364   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2319365   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2319366   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2319367   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2319368   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2319369   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2319370   +         end;
MPRINT(EM_DIAGRAM):   end;
2319371   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2319372   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2319373   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2319374   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2319375   +            end;
MPRINT(EM_DIAGRAM):   end;
2319376   +         end;
MPRINT(EM_DIAGRAM):   end;
2319377   +      end;
MPRINT(EM_DIAGRAM):   end;
2319378   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2319379   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2319380   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2319381   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2319382   +         end;
MPRINT(EM_DIAGRAM):   end;
2319383   +      end;
MPRINT(EM_DIAGRAM):   end;
2319384   +   end;
MPRINT(EM_DIAGRAM):   end;
2319385   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2319386   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2319387   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2319388   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2319389   +      end;
MPRINT(EM_DIAGRAM):   end;
2319390   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2319391   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2319392   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2319393   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2319394   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2319395   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2319396   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2319397   +         end;
MPRINT(EM_DIAGRAM):   end;
2319398   +      end;
MPRINT(EM_DIAGRAM):   end;
2319399   +   end;
MPRINT(EM_DIAGRAM):   end;
2319400   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2319401   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2319402   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2319403   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2319404   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2319405   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2319406   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2319407   +   end;
MPRINT(EM_DIAGRAM):   end;
2319408   +end;
MPRINT(EM_DIAGRAM):   end;
2319409   +
2319410   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2319411   +*** Checking missing input Interval
2319412   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2319413   +
2319414   +IF NMISS(
2319415   +   AcceptedCmpTotal ,
2319416   +   Age ,
2319417   +   Frq ,
2319418   +   Income ,
2319419   +   Kidhome ,
2319420   +   Mnt ,
2319421   +   MntFishProducts ,
2319422   +   MntFruits ,
2319423   +   MntGoldProds ,
2319424   +   MntMeatProducts ,
2319425   +   MntSweetProducts ,
2319426   +   MntWines ,
2319427   +   MonthsAsCustomer ,
2319428   +   NumCatalogPurchases ,
2319429   +   NumDealsPurchases ,
2319430   +   NumDistPurchases ,
2319431   +   NumStorePurchases ,
2319432   +   NumWebPurchases ,
2319433   +   NumWebVisitsMonth ,
2319434   +   RFMstat ,
2319435   +   RMntFrq ,
2319436   +   Recency ,
2319437   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2319438   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2319439   +
2319440   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2319441   +END;
MPRINT(EM_DIAGRAM):   END;
2319442   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2319443   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2319444   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2319445   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2319446   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2319447   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2319448   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2319449   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2319450   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2319451   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2319452   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2319453   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2319454   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2319455   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2319456   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2319457   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2319458   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2319459   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2319460   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2319461   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2319462   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2319463   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2319464   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2319465   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2319466   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2319467   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2319468   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2319469   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2319470   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2319471   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2319472   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2319473   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2319474   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2319475   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2319476   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2319477   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2319478   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2319479   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2319480   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2319481   +END;
MPRINT(EM_DIAGRAM):   END;
2319482   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2319483   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2319484   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2319485   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2319486   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2319487   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2319488   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2319489   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2319490   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2319491   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2319492   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2319493   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2319494   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2319495   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2319496   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2319497   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2319498   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2319499   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2319500   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2319501   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2319502   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2319503   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2319504   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2319505   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2319506   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2319507   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2319508   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2319509   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2319510   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2319511   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2319512   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2319513   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2319514   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2319515   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2319516   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2319517   +   ELSE S_NumCatalogPurchases
2319518   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2319519   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2319520   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2319521   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2319522   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2319523   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2319524   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2319525   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2319526   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2319527   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2319528   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2319529   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2319530   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2319531   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2319532   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2319533   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2319534   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2319535   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2319536   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2319537   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2319538   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2319539   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2319540   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2319541   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2319542   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2319543   +END;
MPRINT(EM_DIAGRAM):   END;
2319544   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2319545   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2319546   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2319547   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2319548   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2319549   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2319550   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2319551   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2319552   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2319553   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2319554   +   H1x1_1  =    -1.22979702388871 * S_AcceptedCmpTotal
2319555   +          +    -0.43104795266139 * S_Age  +     0.86889278443529 * S_Frq
2319556   +          +    -1.60769879195759 * S_Income  +     0.50863205564081 *
2319557   +        S_Kidhome  +     0.63485396330815 * S_Mnt  +     1.54715964931126 *
2319558   +        S_MntFishProducts  +     0.75185279130369 * S_MntFruits
2319559   +          +    -0.00997586610757 * S_MntGoldProds  +    -2.37203493907401 *
2319560   +        S_MntMeatProducts  +     0.38638626403468 * S_MntSweetProducts
2319561   +          +     2.26121903773395 * S_MntWines  +    -0.59651789183067 *
2319562   +        S_MonthsAsCustomer  +    -1.52699943820196 * S_NumCatalogPurchases
2319563   +          +    -1.18466001117424 * S_NumDealsPurchases
2319564   +          +     -0.1371252133567 * S_NumDistPurchases
2319565   +          +     1.92719775731123 * S_NumStorePurchases
2319566   +          +     1.23184249192116 * S_NumWebPurchases
2319567   +          +    -1.55583843197424 * S_NumWebVisitsMonth
2319568   +          +    -0.47773207532121 * S_RFMstat  +    -0.35513231558649 *
2319569   +        S_RMntFrq  +     1.63863392145333 * S_Recency
2319570   +          +     0.67173275608308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.22979702388871 * S_AcceptedCmpTotal + -0.43104795266139 * 
S_Age + 0.86889278443529 * S_Frq + -1.60769879195759 * S_Income + 0.50863205564081 * S_Kidhome 
+ 0.63485396330815 * S_Mnt + 1.54715964931126 * S_MntFishProducts + 0.75185279130369 * 
S_MntFruits + -0.00997586610757 * S_MntGoldProds + -2.37203493907401 * S_MntMeatProducts + 
0.38638626403468 * S_MntSweetProducts + 2.26121903773395 * S_MntWines + -0.59651789183067 * 
S_MonthsAsCustomer + -1.52699943820196 * S_NumCatalogPurchases + -1.18466001117424 * 
S_NumDealsPurchases + -0.1371252133567 * S_NumDistPurchases + 1.92719775731123 * 
S_NumStorePurchases + 1.23184249192116 * S_NumWebPurchases + -1.55583843197424 * 
S_NumWebVisitsMonth + -0.47773207532121 * S_RFMstat + -0.35513231558649 * S_RMntFrq + 
1.63863392145333 * S_Recency + 0.67173275608308 * S_Teenhome ;
2319571   +   H1x1_2  =    -0.02716121128584 * S_AcceptedCmpTotal
2319572   +          +     0.11518566588792 * S_Age  +    -0.03446898150571 * S_Frq
2319573   +          +    -0.19022324523346 * S_Income  +     1.06549395713708 *
2319574   +        S_Kidhome  +    -0.75490876357951 * S_Mnt  +    -0.25515163712879 *
2319575   +        S_MntFishProducts  +    -0.33372388118122 * S_MntFruits
2319576   +          +    -1.35673933518218 * S_MntGoldProds  +    -2.95766948640442 *
2319577   +        S_MntMeatProducts  +      0.2681792093191 * S_MntSweetProducts
2319578   +          +     0.68376629766032 * S_MntWines  +     1.19853579057819 *
2319579   +        S_MonthsAsCustomer  +    -1.27282116370987 * S_NumCatalogPurchases
2319580   +          +     0.63616523425865 * S_NumDealsPurchases
2319581   +          +     0.45460056261546 * S_NumDistPurchases
2319582   +          +    -0.61009999017225 * S_NumStorePurchases
2319583   +          +     1.85193755731081 * S_NumWebPurchases
2319584   +          +    -2.47698404964319 * S_NumWebVisitsMonth
2319585   +          +     -0.6995834208607 * S_RFMstat  +    -0.25646177956568 *
2319586   +        S_RMntFrq  +     1.07962222419254 * S_Recency
2319587   +          +     0.63257022999179 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.02716121128584 * S_AcceptedCmpTotal + 0.11518566588792 * 
S_Age + -0.03446898150571 * S_Frq + -0.19022324523346 * S_Income + 1.06549395713708 * 
S_Kidhome + -0.75490876357951 * S_Mnt + -0.25515163712879 * S_MntFishProducts + 
-0.33372388118122 * S_MntFruits + -1.35673933518218 * S_MntGoldProds + -2.95766948640442 * 
S_MntMeatProducts + 0.2681792093191 * S_MntSweetProducts + 0.68376629766032 * S_MntWines + 
1.19853579057819 * S_MonthsAsCustomer + -1.27282116370987 * S_NumCatalogPurchases + 
0.63616523425865 * S_NumDealsPurchases + 0.45460056261546 * S_NumDistPurchases + 
-0.61009999017225 * S_NumStorePurchases + 1.85193755731081 * S_NumWebPurchases + 
-2.47698404964319 * S_NumWebVisitsMonth + -0.6995834208607 * S_RFMstat + -0.25646177956568 * 
S_RMntFrq + 1.07962222419254 * S_Recency + 0.63257022999179 * S_Teenhome ;
2319588   +   H1x1_3  =     2.21390028099752 * S_AcceptedCmpTotal
2319589   +          +     0.05331556426178 * S_Age  +    -0.65514579137956 * S_Frq
2319590   +          +     0.64307304324121 * S_Income  +    -0.74572098598993 *
2319591   +        S_Kidhome  +     0.72146088814601 * S_Mnt  +    -0.35292583888573 *
2319592   +        S_MntFishProducts  +    -0.60011862194755 * S_MntFruits
2319593   +          +     0.41187011131735 * S_MntGoldProds  +     6.59297713742725 *
2319594   +        S_MntMeatProducts  +    -0.24427365286575 * S_MntSweetProducts
2319595   +          +    -2.72258930476853 * S_MntWines  +     0.14880721485001 *
2319596   +        S_MonthsAsCustomer  +     1.43710120897606 * S_NumCatalogPurchases
2319597   +          +      1.8907968580473 * S_NumDealsPurchases
2319598   +          +     0.01244124801764 * S_NumDistPurchases
2319599   +          +    -2.34409118104622 * S_NumStorePurchases
2319600   +          +    -1.80820043087435 * S_NumWebPurchases
2319601   +          +     2.40219682136039 * S_NumWebVisitsMonth
2319602   +          +     0.64272295101175 * S_RFMstat  +    -2.37583346151401 *
2319603   +        S_RMntFrq  +    -2.05893311376628 * S_Recency
2319604   +          +    -0.09539892763273 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.21390028099752 * S_AcceptedCmpTotal + 0.05331556426178 * 
S_Age + -0.65514579137956 * S_Frq + 0.64307304324121 * S_Income + -0.74572098598993 * 
S_Kidhome + 0.72146088814601 * S_Mnt + -0.35292583888573 * S_MntFishProducts + 
-0.60011862194755 * S_MntFruits + 0.41187011131735 * S_MntGoldProds + 6.59297713742725 * 
S_MntMeatProducts + -0.24427365286575 * S_MntSweetProducts + -2.72258930476853 * S_MntWines + 
0.14880721485001 * S_MonthsAsCustomer + 1.43710120897606 * S_NumCatalogPurchases + 
1.8907968580473 * S_NumDealsPurchases + 0.01244124801764 * S_NumDistPurchases + 
-2.34409118104622 * S_NumStorePurchases + -1.80820043087435 * S_NumWebPurchases + 
2.40219682136039 * S_NumWebVisitsMonth + 0.64272295101175 * S_RFMstat + -2.37583346151401 * 
S_RMntFrq + -2.05893311376628 * S_Recency + -0.09539892763273 * S_Teenhome ;
2319605   +   H1x1_4  =     0.39967052173479 * S_AcceptedCmpTotal
2319606   +          +    -0.07923444459672 * S_Age  +     0.62339138041893 * S_Frq
2319607   +          +     1.61789948058771 * S_Income  +     -1.4543646851274 *
2319608   +        S_Kidhome  +      0.0674362517919 * S_Mnt  +    -0.01747401903722 *
2319609   +        S_MntFishProducts  +     0.35122931976599 * S_MntFruits
2319610   +          +     0.49479569666837 * S_MntGoldProds  +     0.96598079382568 *
2319611   +        S_MntMeatProducts  +     0.00966238843619 * S_MntSweetProducts
2319612   +          +    -1.04781861730336 * S_MntWines  +    -0.60232527705864 *
2319613   +        S_MonthsAsCustomer  +     1.64183850526139 * S_NumCatalogPurchases
2319614   +          +     0.28209537604198 * S_NumDealsPurchases
2319615   +          +      0.6450277971767 * S_NumDistPurchases
2319616   +          +     0.85050092520609 * S_NumStorePurchases
2319617   +          +    -0.53920307215941 * S_NumWebPurchases
2319618   +          +     3.01106015100147 * S_NumWebVisitsMonth
2319619   +          +     0.35454480730832 * S_RFMstat  +     2.44126135489059 *
2319620   +        S_RMntFrq  +    -3.15497765450512 * S_Recency
2319621   +          +    -1.52912100940198 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.39967052173479 * S_AcceptedCmpTotal + -0.07923444459672 * 
S_Age + 0.62339138041893 * S_Frq + 1.61789948058771 * S_Income + -1.4543646851274 * S_Kidhome 
+ 0.0674362517919 * S_Mnt + -0.01747401903722 * S_MntFishProducts + 0.35122931976599 * 
S_MntFruits + 0.49479569666837 * S_MntGoldProds + 0.96598079382568 * S_MntMeatProducts + 
0.00966238843619 * S_MntSweetProducts + -1.04781861730336 * S_MntWines + -0.60232527705864 * 
S_MonthsAsCustomer + 1.64183850526139 * S_NumCatalogPurchases + 0.28209537604198 * 
S_NumDealsPurchases + 0.6450277971767 * S_NumDistPurchases + 0.85050092520609 * 
S_NumStorePurchases + -0.53920307215941 * S_NumWebPurchases + 3.01106015100147 * 
S_NumWebVisitsMonth + 0.35454480730832 * S_RFMstat + 2.44126135489059 * S_RMntFrq + 
-3.15497765450512 * S_Recency + -1.52912100940198 * S_Teenhome ;
2319622   +   H1x1_5  =    -1.36246601888598 * S_AcceptedCmpTotal
2319623   +          +     0.18494970680372 * S_Age  +    -0.48239316237012 * S_Frq
2319624   +          +    -0.07754710635082 * S_Income  +    -1.12988783865284 *
2319625   +        S_Kidhome  +    -0.99389820487435 * S_Mnt  +     0.97730928948588 *
2319626   +        S_MntFishProducts  +     0.22400827772102 * S_MntFruits
2319627   +          +     0.74486626223136 * S_MntGoldProds  +    -5.09299340099429 *
2319628   +        S_MntMeatProducts  +     -0.9293665551505 * S_MntSweetProducts
2319629   +          +     2.05621056740754 * S_MntWines  +     0.13751326047818 *
2319630   +        S_MonthsAsCustomer  +    -0.78748700520409 * S_NumCatalogPurchases
2319631   +          +    -0.36642526324451 * S_NumDealsPurchases
2319632   +          +     -0.6091014843932 * S_NumDistPurchases
2319633   +          +    -0.21154626182088 * S_NumStorePurchases
2319634   +          +    -0.10361347071364 * S_NumWebPurchases
2319635   +          +     1.36358817627784 * S_NumWebVisitsMonth
2319636   +          +    -1.12999319551924 * S_RFMstat  +    -0.19491430019245 *
2319637   +        S_RMntFrq  +    -1.04649498091784 * S_Recency
2319638   +          +     0.17452738843544 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.36246601888598 * S_AcceptedCmpTotal + 0.18494970680372 * 
S_Age + -0.48239316237012 * S_Frq + -0.07754710635082 * S_Income + -1.12988783865284 * 
S_Kidhome + -0.99389820487435 * S_Mnt + 0.97730928948588 * S_MntFishProducts + 
0.22400827772102 * S_MntFruits + 0.74486626223136 * S_MntGoldProds + -5.09299340099429 * 
S_MntMeatProducts + -0.9293665551505 * S_MntSweetProducts + 2.05621056740754 * S_MntWines + 
0.13751326047818 * S_MonthsAsCustomer + -0.78748700520409 * S_NumCatalogPurchases + 
-0.36642526324451 * S_NumDealsPurchases + -0.6091014843932 * S_NumDistPurchases + 
-0.21154626182088 * S_NumStorePurchases + -0.10361347071364 * S_NumWebPurchases + 
1.36358817627784 * S_NumWebVisitsMonth + -1.12999319551924 * S_RFMstat + -0.19491430019245 * 
S_RMntFrq + -1.04649498091784 * S_Recency + 0.17452738843544 * S_Teenhome ;
2319639   +   H1x1_6  =    -0.61844696407508 * S_AcceptedCmpTotal
2319640   +          +    -0.13181297602063 * S_Age  +        0.68456903056 * S_Frq
2319641   +          +    -0.34991774042788 * S_Income  +     1.46159955002315 *
2319642   +        S_Kidhome  +     0.21200077233877 * S_Mnt  +    -1.25754094670769 *
2319643   +        S_MntFishProducts  +    -0.09204195787339 * S_MntFruits
2319644   +          +     0.30860507694466 * S_MntGoldProds  +     2.47956356836605 *
2319645   +        S_MntMeatProducts  +     0.40882561010395 * S_MntSweetProducts
2319646   +          +    -0.31319819026957 * S_MntWines  +    -0.35678594664106 *
2319647   +        S_MonthsAsCustomer  +     0.01690494248971 * S_NumCatalogPurchases
2319648   +          +    -0.14868505161718 * S_NumDealsPurchases
2319649   +          +    -0.08395384711805 * S_NumDistPurchases
2319650   +          +     0.60525238179245 * S_NumStorePurchases
2319651   +          +     0.04555100214276 * S_NumWebPurchases
2319652   +          +    -2.31888436784305 * S_NumWebVisitsMonth
2319653   +          +     0.04533094777373 * S_RFMstat  +     1.45047684433196 *
2319654   +        S_RMntFrq  +     3.02439474266744 * S_Recency
2319655   +          +     1.00458920115313 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.61844696407508 * S_AcceptedCmpTotal + -0.13181297602063 * 
S_Age + 0.68456903056 * S_Frq + -0.34991774042788 * S_Income + 1.46159955002315 * S_Kidhome + 
0.21200077233877 * S_Mnt + -1.25754094670769 * S_MntFishProducts + -0.09204195787339 * 
S_MntFruits + 0.30860507694466 * S_MntGoldProds + 2.47956356836605 * S_MntMeatProducts + 
0.40882561010395 * S_MntSweetProducts + -0.31319819026957 * S_MntWines + -0.35678594664106 * 
S_MonthsAsCustomer + 0.01690494248971 * S_NumCatalogPurchases + -0.14868505161718 * 
S_NumDealsPurchases + -0.08395384711805 * S_NumDistPurchases + 0.60525238179245 * 
S_NumStorePurchases + 0.04555100214276 * S_NumWebPurchases + -2.31888436784305 * 
S_NumWebVisitsMonth + 0.04533094777373 * S_RFMstat + 1.45047684433196 * S_RMntFrq + 
3.02439474266744 * S_Recency + 1.00458920115313 * S_Teenhome ;
2319656   +   H1x1_1  = H1x1_1  +     1.44647846478949 * AcceptedCmp10
2319657   +          +     0.96385529143297 * AcceptedCmp20  +     0.80013060089317 *
2319658   +        AcceptedCmp30  +     1.84770198014032 * AcceptedCmp40
2319659   +          +     0.80401446607714 * AcceptedCmp50  +     0.54049538978821 *
2319660   +        Complain0  +     0.10087163212641 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.44647846478949 * AcceptedCmp10 + 0.96385529143297 * 
AcceptedCmp20 + 0.80013060089317 * AcceptedCmp30 + 1.84770198014032 * AcceptedCmp40 + 
0.80401446607714 * AcceptedCmp50 + 0.54049538978821 * Complain0 + 0.10087163212641 * 
HigherEducationBinary0 ;
2319661   +   H1x1_2  = H1x1_2  +    -1.68777270512099 * AcceptedCmp10
2319662   +          +     0.54885195015877 * AcceptedCmp20  +    -0.90402264974928 *
2319663   +        AcceptedCmp30  +    -0.42358682267334 * AcceptedCmp40
2319664   +          +     0.87016183962004 * AcceptedCmp50  +     0.42082407002478 *
2319665   +        Complain0  +    -0.37999025234308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.68777270512099 * AcceptedCmp10 + 0.54885195015877 * 
AcceptedCmp20 + -0.90402264974928 * AcceptedCmp30 + -0.42358682267334 * AcceptedCmp40 + 
0.87016183962004 * AcceptedCmp50 + 0.42082407002478 * Complain0 + -0.37999025234308 * 
HigherEducationBinary0 ;
2319666   +   H1x1_3  = H1x1_3  +    -0.40437631159129 * AcceptedCmp10
2319667   +          +      0.0972205308159 * AcceptedCmp20  +     0.81983130325412 *
2319668   +        AcceptedCmp30  +     0.11521626741585 * AcceptedCmp40
2319669   +          +    -0.67384158900854 * AcceptedCmp50  +    -0.08888648111628 *
2319670   +        Complain0  +    -0.12489144574555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.40437631159129 * AcceptedCmp10 + 0.0972205308159 * 
AcceptedCmp20 + 0.81983130325412 * AcceptedCmp30 + 0.11521626741585 * AcceptedCmp40 + 
-0.67384158900854 * AcceptedCmp50 + -0.08888648111628 * Complain0 + -0.12489144574555 * 
HigherEducationBinary0 ;
2319671   +   H1x1_4  = H1x1_4  +    -0.11861456940351 * AcceptedCmp10
2319672   +          +    -0.84401831403342 * AcceptedCmp20  +    -0.99900514370547 *
2319673   +        AcceptedCmp30  +     0.03311277744337 * AcceptedCmp40
2319674   +          +    -0.89369182681709 * AcceptedCmp50  +    -0.46321923883787 *
2319675   +        Complain0  +     0.73698890563732 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.11861456940351 * AcceptedCmp10 + -0.84401831403342 
* AcceptedCmp20 + -0.99900514370547 * AcceptedCmp30 + 0.03311277744337 * AcceptedCmp40 + 
-0.89369182681709 * AcceptedCmp50 + -0.46321923883787 * Complain0 + 0.73698890563732 * 
HigherEducationBinary0 ;
2319676   +   H1x1_5  = H1x1_5  +     1.36740346673871 * AcceptedCmp10
2319677   +          +    -0.09307995102939 * AcceptedCmp20  +    -0.99727975675265 *
2319678   +        AcceptedCmp30  +    -1.64006559974507 * AcceptedCmp40
2319679   +          +    -0.12164496778613 * AcceptedCmp50  +    -0.20852398947217 *
2319680   +        Complain0  +    -0.12903157145588 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.36740346673871 * AcceptedCmp10 + -0.09307995102939 * 
AcceptedCmp20 + -0.99727975675265 * AcceptedCmp30 + -1.64006559974507 * AcceptedCmp40 + 
-0.12164496778613 * AcceptedCmp50 + -0.20852398947217 * Complain0 + -0.12903157145588 * 
HigherEducationBinary0 ;
2319681   +   H1x1_6  = H1x1_6  +    -0.18375336439178 * AcceptedCmp10
2319682   +          +    -0.61320886099742 * AcceptedCmp20  +     1.46384578641555 *
2319683   +        AcceptedCmp30  +     1.07211075480456 * AcceptedCmp40
2319684   +          +      0.1814894663676 * AcceptedCmp50  +     0.61050756961671 *
2319685   +        Complain0  +     0.18598381049052 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.18375336439178 * AcceptedCmp10 + -0.61320886099742 
* AcceptedCmp20 + 1.46384578641555 * AcceptedCmp30 + 1.07211075480456 * AcceptedCmp40 + 
0.1814894663676 * AcceptedCmp50 + 0.61050756961671 * Complain0 + 0.18598381049052 * 
HigherEducationBinary0 ;
2319686   +   H1x1_1  = H1x1_1  +    -0.85219855086228 * Education2n_Cycle
2319687   +          +     0.72409647993559 * EducationBasic  +    -1.69896726220399 *
2319688   +        EducationGraduation  +     0.96924197858068 * EducationMaster
2319689   +          +     -0.7180104021039 * Marital_StatusDivorced
2319690   +          +      0.5957373170744 * Marital_StatusMarried
2319691   +          +    -0.86183942803988 * Marital_StatusSingle
2319692   +          +     0.92994743994713 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.85219855086228 * Education2n_Cycle + 
0.72409647993559 * EducationBasic + -1.69896726220399 * EducationGraduation + 0.96924197858068 
* EducationMaster + -0.7180104021039 * Marital_StatusDivorced + 0.5957373170744 * 
Marital_StatusMarried + -0.86183942803988 * Marital_StatusSingle + 0.92994743994713 * 
Marital_StatusTogether ;
2319693   +   H1x1_2  = H1x1_2  +    -0.29863788783823 * Education2n_Cycle
2319694   +          +    -0.03492398661463 * EducationBasic  +     1.96491183828121 *
2319695   +        EducationGraduation  +    -1.23733321574678 * EducationMaster
2319696   +          +     0.84772700244021 * Marital_StatusDivorced
2319697   +          +    -0.37049970188511 * Marital_StatusMarried
2319698   +          +     1.54291641732063 * Marital_StatusSingle
2319699   +          +      0.2036514883055 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.29863788783823 * Education2n_Cycle + 
-0.03492398661463 * EducationBasic + 1.96491183828121 * EducationGraduation + 
-1.23733321574678 * EducationMaster + 0.84772700244021 * Marital_StatusDivorced + 
-0.37049970188511 * Marital_StatusMarried + 1.54291641732063 * Marital_StatusSingle + 
0.2036514883055 * Marital_StatusTogether ;
2319700   +   H1x1_3  = H1x1_3  +     0.21600870420184 * Education2n_Cycle
2319701   +          +    -0.41247138958506 * EducationBasic  +    -0.04710356650237 *
2319702   +        EducationGraduation  +     0.02093123351397 * EducationMaster
2319703   +          +     0.73222548496385 * Marital_StatusDivorced
2319704   +          +    -0.50102202656102 * Marital_StatusMarried
2319705   +          +    -0.07207130428422 * Marital_StatusSingle
2319706   +          +     0.17349558515949 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.21600870420184 * Education2n_Cycle + 
-0.41247138958506 * EducationBasic + -0.04710356650237 * EducationGraduation + 
0.02093123351397 * EducationMaster + 0.73222548496385 * Marital_StatusDivorced + 
-0.50102202656102 * Marital_StatusMarried + -0.07207130428422 * Marital_StatusSingle + 
0.17349558515949 * Marital_StatusTogether ;
2319707   +   H1x1_4  = H1x1_4  +    -0.26695942691152 * Education2n_Cycle
2319708   +          +     0.08346486410021 * EducationBasic  +    -1.19880044804188 *
2319709   +        EducationGraduation  +     0.65366032471107 * EducationMaster
2319710   +          +     0.25894719464799 * Marital_StatusDivorced
2319711   +          +    -1.95576501275834 * Marital_StatusMarried
2319712   +          +     2.65422185276746 * Marital_StatusSingle
2319713   +          +    -3.75373924980398 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26695942691152 * Education2n_Cycle + 
0.08346486410021 * EducationBasic + -1.19880044804188 * EducationGraduation + 0.65366032471107 
* EducationMaster + 0.25894719464799 * Marital_StatusDivorced + -1.95576501275834 * 
Marital_StatusMarried + 2.65422185276746 * Marital_StatusSingle + -3.75373924980398 * 
Marital_StatusTogether ;
2319714   +   H1x1_5  = H1x1_5  +     0.17586479935526 * Education2n_Cycle
2319715   +          +    -0.60926722758624 * EducationBasic  +    -0.09613529218096 *
2319716   +        EducationGraduation  +    -0.28683119112285 * EducationMaster
2319717   +          +     0.60936191204707 * Marital_StatusDivorced
2319718   +          +    -0.52190111190458 * Marital_StatusMarried
2319719   +          +    -0.60982305233136 * Marital_StatusSingle
2319720   +          +     0.44659686388318 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.17586479935526 * Education2n_Cycle + 
-0.60926722758624 * EducationBasic + -0.09613529218096 * EducationGraduation + 
-0.28683119112285 * EducationMaster + 0.60936191204707 * Marital_StatusDivorced + 
-0.52190111190458 * Marital_StatusMarried + -0.60982305233136 * Marital_StatusSingle + 
0.44659686388318 * Marital_StatusTogether ;
2319721   +   H1x1_6  = H1x1_6  +     0.16067502362228 * Education2n_Cycle
2319722   +          +     0.18937855703296 * EducationBasic  +     0.06386817095607 *
2319723   +        EducationGraduation  +     0.51538853297606 * EducationMaster
2319724   +          +    -1.44614502228294 * Marital_StatusDivorced
2319725   +          +      2.9001493892928 * Marital_StatusMarried
2319726   +          +    -2.60467399972513 * Marital_StatusSingle
2319727   +          +     2.31815156650258 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16067502362228 * Education2n_Cycle + 
0.18937855703296 * EducationBasic + 0.06386817095607 * EducationGraduation + 0.51538853297606 
* EducationMaster + -1.44614502228294 * Marital_StatusDivorced + 2.9001493892928 * 
Marital_StatusMarried + -2.60467399972513 * Marital_StatusSingle + 2.31815156650258 * 
Marital_StatusTogether ;
2319728   +   H1x1_1  =     2.01245018737649 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.01245018737649 + H1x1_1 ;
2319729   +   H1x1_2  =    -0.13724223857423 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.13724223857423 + H1x1_2 ;
2319730   +   H1x1_3  =     0.82934879006547 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.82934879006547 + H1x1_3 ;
2319731   +   H1x1_4  =    -0.21545557935699 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.21545557935699 + H1x1_4 ;
2319732   +   H1x1_5  =     0.44835497486542 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.44835497486542 + H1x1_5 ;
2319733   +   H1x1_6  =     0.11792774897936 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.11792774897936 + H1x1_6 ;
2319734   +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
2319735   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
2319736   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , 
H1x1_7 );
2319737   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2319738   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2319739   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2319740   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2319741   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2319742   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2319743   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2319744   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2319745   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2319746   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
2319747   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
2319748   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
2319749   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
2319750   +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
2319751   +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
2319752   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2319753   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2319754   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2319755   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2319756   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
2319757   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
2319758   +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
2319759   +END;
MPRINT(EM_DIAGRAM):   END;
2319760   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2319761   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2319762   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2319763   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2319764   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2319765   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2319766   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2319767   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
2319768   +END;
MPRINT(EM_DIAGRAM):   END;
2319769   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2319770   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2319771   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2319772   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2319773   +   H1x2_1  =    -0.51245281628488 * S_AcceptedCmpTotal
2319774   +          +     0.29586551487242 * S_Age  +     1.34531593814589 * S_Frq
2319775   +          +     1.40753230099536 * S_Income  +    -1.01979935776675 *
2319776   +        S_Kidhome  +      1.0655533203194 * S_Mnt  +     0.74171867275429 *
2319777   +        S_MntFishProducts  +    -0.77881282886264 * S_MntFruits
2319778   +          +    -0.58546798489474 * S_MntGoldProds  +     0.93410444049208 *
2319779   +        S_MntMeatProducts  +     1.10536507959221 * S_MntSweetProducts
2319780   +          +     2.08723894920384 * S_MntWines  +    -0.64437193401661 *
2319781   +        S_MonthsAsCustomer  +     1.49880648713252 * S_NumCatalogPurchases
2319782   +          +    -0.46483717253931 * S_NumDealsPurchases
2319783   +          +    -0.53329008421157 * S_NumDistPurchases
2319784   +          +      0.2490774300193 * S_NumStorePurchases
2319785   +          +    -0.82755150673885 * S_NumWebPurchases
2319786   +          +     0.04007223822389 * S_NumWebVisitsMonth
2319787   +          +    -0.21044923749124 * S_RFMstat  +     0.27791352512351 *
2319788   +        S_RMntFrq  +     0.43434806411249 * S_Recency
2319789   +          +    -1.25974784572932 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.51245281628488 * S_AcceptedCmpTotal + 0.29586551487242 * 
S_Age + 1.34531593814589 * S_Frq + 1.40753230099536 * S_Income + -1.01979935776675 * S_Kidhome 
+ 1.0655533203194 * S_Mnt + 0.74171867275429 * S_MntFishProducts + -0.77881282886264 * 
S_MntFruits + -0.58546798489474 * S_MntGoldProds + 0.93410444049208 * S_MntMeatProducts + 
1.10536507959221 * S_MntSweetProducts + 2.08723894920384 * S_MntWines + -0.64437193401661 * 
S_MonthsAsCustomer + 1.49880648713252 * S_NumCatalogPurchases + -0.46483717253931 * 
S_NumDealsPurchases + -0.53329008421157 * S_NumDistPurchases + 0.2490774300193 * 
S_NumStorePurchases + -0.82755150673885 * S_NumWebPurchases + 0.04007223822389 * 
S_NumWebVisitsMonth + -0.21044923749124 * S_RFMstat + 0.27791352512351 * S_RMntFrq + 
0.43434806411249 * S_Recency + -1.25974784572932 * S_Teenhome ;
2319790   +   H1x2_2  =     0.30117516029562 * S_AcceptedCmpTotal
2319791   +          +     0.16042149118905 * S_Age  +    -2.59350323749407 * S_Frq
2319792   +          +    -0.29940842910223 * S_Income  +    -0.09168883019219 *
2319793   +        S_Kidhome  +    -0.39758312303322 * S_Mnt  +     -0.4138816285287 *
2319794   +        S_MntFishProducts  +        0.18555623351 * S_MntFruits
2319795   +          +    -0.28024159914959 * S_MntGoldProds  +     1.08084875123781 *
2319796   +        S_MntMeatProducts  +     0.29032828446632 * S_MntSweetProducts
2319797   +          +     0.47556687393839 * S_MntWines  +    -0.89795441591329 *
2319798   +        S_MonthsAsCustomer  +    -0.47081176716106 * S_NumCatalogPurchases
2319799   +          +     0.75855101382458 * S_NumDealsPurchases
2319800   +          +     1.61754951768262 * S_NumDistPurchases
2319801   +          +    -0.48146714929729 * S_NumStorePurchases
2319802   +          +    -0.76460728035552 * S_NumWebPurchases
2319803   +          +    -0.71146787112442 * S_NumWebVisitsMonth
2319804   +          +     0.42381866124588 * S_RFMstat  +     -0.3894818400451 *
2319805   +        S_RMntFrq  +    -0.01528916550509 * S_Recency
2319806   +          +     0.38823136254948 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.30117516029562 * S_AcceptedCmpTotal + 0.16042149118905 * 
S_Age + -2.59350323749407 * S_Frq + -0.29940842910223 * S_Income + -0.09168883019219 * 
S_Kidhome + -0.39758312303322 * S_Mnt + -0.4138816285287 * S_MntFishProducts + 0.18555623351 * 
S_MntFruits + -0.28024159914959 * S_MntGoldProds + 1.08084875123781 * S_MntMeatProducts + 
0.29032828446632 * S_MntSweetProducts + 0.47556687393839 * S_MntWines + -0.89795441591329 * 
S_MonthsAsCustomer + -0.47081176716106 * S_NumCatalogPurchases + 0.75855101382458 * 
S_NumDealsPurchases + 1.61754951768262 * S_NumDistPurchases + -0.48146714929729 * 
S_NumStorePurchases + -0.76460728035552 * S_NumWebPurchases + -0.71146787112442 * 
S_NumWebVisitsMonth + 0.42381866124588 * S_RFMstat + -0.3894818400451 * S_RMntFrq + 
-0.01528916550509 * S_Recency + 0.38823136254948 * S_Teenhome ;
2319807   +   H1x2_3  =    -1.28283712556699 * S_AcceptedCmpTotal
2319808   +          +    -0.62214066983867 * S_Age  +      0.0675653313166 * S_Frq
2319809   +          +     0.77098495841918 * S_Income  +    -1.36225954388119 *
2319810   +        S_Kidhome  +      0.0552831076081 * S_Mnt  +    -0.21387512812296 *
2319811   +        S_MntFishProducts  +    -1.14715718471691 * S_MntFruits
2319812   +          +    -1.15507787000433 * S_MntGoldProds  +     0.87571107504211 *
2319813   +        S_MntMeatProducts  +     0.28274178198443 * S_MntSweetProducts
2319814   +          +     0.23070204507311 * S_MntWines  +    -1.88342889522874 *
2319815   +        S_MonthsAsCustomer  +    -0.19127945486903 * S_NumCatalogPurchases
2319816   +          +     0.75255317965748 * S_NumDealsPurchases
2319817   +          +     1.34900588315783 * S_NumDistPurchases
2319818   +          +    -0.17717469778048 * S_NumStorePurchases
2319819   +          +    -0.01560551546553 * S_NumWebPurchases
2319820   +          +     1.24315988674343 * S_NumWebVisitsMonth
2319821   +          +     2.23854910235018 * S_RFMstat  +     0.55516131558838 *
2319822   +        S_RMntFrq  +    -2.01558015490584 * S_Recency
2319823   +          +     1.34178435587014 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.28283712556699 * S_AcceptedCmpTotal + -0.62214066983867 * 
S_Age + 0.0675653313166 * S_Frq + 0.77098495841918 * S_Income + -1.36225954388119 * S_Kidhome 
+ 0.0552831076081 * S_Mnt + -0.21387512812296 * S_MntFishProducts + -1.14715718471691 * 
S_MntFruits + -1.15507787000433 * S_MntGoldProds + 0.87571107504211 * S_MntMeatProducts + 
0.28274178198443 * S_MntSweetProducts + 0.23070204507311 * S_MntWines + -1.88342889522874 * 
S_MonthsAsCustomer + -0.19127945486903 * S_NumCatalogPurchases + 0.75255317965748 * 
S_NumDealsPurchases + 1.34900588315783 * S_NumDistPurchases + -0.17717469778048 * 
S_NumStorePurchases + -0.01560551546553 * S_NumWebPurchases + 1.24315988674343 * 
S_NumWebVisitsMonth + 2.23854910235018 * S_RFMstat + 0.55516131558838 * S_RMntFrq + 
-2.01558015490584 * S_Recency + 1.34178435587014 * S_Teenhome ;
2319824   +   H1x2_4  =     1.35706411211536 * S_AcceptedCmpTotal
2319825   +          +    -0.73374940975123 * S_Age  +     2.10445428870671 * S_Frq
2319826   +          +    -1.60133766439775 * S_Income  +     0.02861907512789 *
2319827   +        S_Kidhome  +    -1.61837693250001 * S_Mnt  +       0.209751533263 *
2319828   +        S_MntFishProducts  +     1.82411973889656 * S_MntFruits
2319829   +          +     1.12172774431408 * S_MntGoldProds  +     1.09610288046573 *
2319830   +        S_MntMeatProducts  +    -0.86671874280949 * S_MntSweetProducts
2319831   +          +    -0.11602638812541 * S_MntWines  +    -0.30074020863435 *
2319832   +        S_MonthsAsCustomer  +     0.46044258716085 * S_NumCatalogPurchases
2319833   +          +    -1.71127148178768 * S_NumDealsPurchases
2319834   +          +    -1.77527355221308 * S_NumDistPurchases
2319835   +          +    -1.40009594349363 * S_NumStorePurchases
2319836   +          +    -0.46471012062697 * S_NumWebPurchases
2319837   +          +     0.04619891083228 * S_NumWebVisitsMonth
2319838   +          +     0.34715614649891 * S_RFMstat  +    -0.74983051176564 *
2319839   +        S_RMntFrq  +     0.84880186653433 * S_Recency
2319840   +          +     0.20218341857265 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.35706411211536 * S_AcceptedCmpTotal + -0.73374940975123 * 
S_Age + 2.10445428870671 * S_Frq + -1.60133766439775 * S_Income + 0.02861907512789 * S_Kidhome 
+ -1.61837693250001 * S_Mnt + 0.209751533263 * S_MntFishProducts + 1.82411973889656 * 
S_MntFruits + 1.12172774431408 * S_MntGoldProds + 1.09610288046573 * S_MntMeatProducts + 
-0.86671874280949 * S_MntSweetProducts + -0.11602638812541 * S_MntWines + -0.30074020863435 * 
S_MonthsAsCustomer + 0.46044258716085 * S_NumCatalogPurchases + -1.71127148178768 * 
S_NumDealsPurchases + -1.77527355221308 * S_NumDistPurchases + -1.40009594349363 * 
S_NumStorePurchases + -0.46471012062697 * S_NumWebPurchases + 0.04619891083228 * 
S_NumWebVisitsMonth + 0.34715614649891 * S_RFMstat + -0.74983051176564 * S_RMntFrq + 
0.84880186653433 * S_Recency + 0.20218341857265 * S_Teenhome ;
2319841   +   H1x2_5  =     1.79452363233333 * S_AcceptedCmpTotal
2319842   +          +     1.70826835028511 * S_Age  +     0.08241717907016 * S_Frq
2319843   +          +    -1.15275600314196 * S_Income  +     0.87736096074094 *
2319844   +        S_Kidhome  +     0.90821427722502 * S_Mnt  +    -0.84055732556964 *
2319845   +        S_MntFishProducts  +    -0.74245639083939 * S_MntFruits
2319846   +          +     0.00204325095854 * S_MntGoldProds  +     0.37597102500134 *
2319847   +        S_MntMeatProducts  +     0.28586076288454 * S_MntSweetProducts
2319848   +          +    -1.38194310174269 * S_MntWines  +     0.10286181254259 *
2319849   +        S_MonthsAsCustomer  +    -0.82469018226034 * S_NumCatalogPurchases
2319850   +          +    -0.22204470395056 * S_NumDealsPurchases
2319851   +          +    -1.74490476011984 * S_NumDistPurchases
2319852   +          +     1.93538420108324 * S_NumStorePurchases
2319853   +          +     1.04892631742152 * S_NumWebPurchases
2319854   +          +     1.50717841566047 * S_NumWebVisitsMonth
2319855   +          +     0.61249250909375 * S_RFMstat  +    -0.54764212165911 *
2319856   +        S_RMntFrq  +      1.9918829185386 * S_Recency
2319857   +          +     0.64908540313947 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.79452363233333 * S_AcceptedCmpTotal + 1.70826835028511 * 
S_Age + 0.08241717907016 * S_Frq + -1.15275600314196 * S_Income + 0.87736096074094 * S_Kidhome 
+ 0.90821427722502 * S_Mnt + -0.84055732556964 * S_MntFishProducts + -0.74245639083939 * 
S_MntFruits + 0.00204325095854 * S_MntGoldProds + 0.37597102500134 * S_MntMeatProducts + 
0.28586076288454 * S_MntSweetProducts + -1.38194310174269 * S_MntWines + 0.10286181254259 * 
S_MonthsAsCustomer + -0.82469018226034 * S_NumCatalogPurchases + -0.22204470395056 * 
S_NumDealsPurchases + -1.74490476011984 * S_NumDistPurchases + 1.93538420108324 * 
S_NumStorePurchases + 1.04892631742152 * S_NumWebPurchases + 1.50717841566047 * 
S_NumWebVisitsMonth + 0.61249250909375 * S_RFMstat + -0.54764212165911 * S_RMntFrq + 
1.9918829185386 * S_Recency + 0.64908540313947 * S_Teenhome ;
2319858   +   H1x2_6  =     1.38705263280369 * S_AcceptedCmpTotal
2319859   +          +    -0.70531523704191 * S_Age  +     0.59125500807205 * S_Frq
2319860   +          +     0.89549490842249 * S_Income  +     1.07240562425698 *
2319861   +        S_Kidhome  +    -0.25050185694258 * S_Mnt  +    -0.77552207934024 *
2319862   +        S_MntFishProducts  +     0.18087757744856 * S_MntFruits
2319863   +          +    -1.37618517481144 * S_MntGoldProds  +      0.6557488228355 *
2319864   +        S_MntMeatProducts  +    -1.40834207395949 * S_MntSweetProducts
2319865   +          +    -0.76196689750388 * S_MntWines  +     0.85144735274506 *
2319866   +        S_MonthsAsCustomer  +     0.66349954778428 * S_NumCatalogPurchases
2319867   +          +    -0.94690420785776 * S_NumDealsPurchases
2319868   +          +     1.87932706342204 * S_NumDistPurchases
2319869   +          +     0.31232717416487 * S_NumStorePurchases
2319870   +          +     1.51889492693355 * S_NumWebPurchases
2319871   +          +     0.04376853689795 * S_NumWebVisitsMonth
2319872   +          +    -2.53979043374029 * S_RFMstat  +     1.33915580029494 *
2319873   +        S_RMntFrq  +    -1.21983510008829 * S_Recency
2319874   +          +     0.36122230024433 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.38705263280369 * S_AcceptedCmpTotal + -0.70531523704191 * 
S_Age + 0.59125500807205 * S_Frq + 0.89549490842249 * S_Income + 1.07240562425698 * S_Kidhome 
+ -0.25050185694258 * S_Mnt + -0.77552207934024 * S_MntFishProducts + 0.18087757744856 * 
S_MntFruits + -1.37618517481144 * S_MntGoldProds + 0.6557488228355 * S_MntMeatProducts + 
-1.40834207395949 * S_MntSweetProducts + -0.76196689750388 * S_MntWines + 0.85144735274506 * 
S_MonthsAsCustomer + 0.66349954778428 * S_NumCatalogPurchases + -0.94690420785776 * 
S_NumDealsPurchases + 1.87932706342204 * S_NumDistPurchases + 0.31232717416487 * 
S_NumStorePurchases + 1.51889492693355 * S_NumWebPurchases + 0.04376853689795 * 
S_NumWebVisitsMonth + -2.53979043374029 * S_RFMstat + 1.33915580029494 * S_RMntFrq + 
-1.21983510008829 * S_Recency + 0.36122230024433 * S_Teenhome ;
2319875   +   H1x2_1  = H1x2_1  +     1.89852147155601 * AcceptedCmp10
2319876   +          +     0.03501265764204 * AcceptedCmp20  +    -0.45070218241239 *
2319877   +        AcceptedCmp30  +    -1.27257966336041 * AcceptedCmp40
2319878   +          +     0.86175125820023 * AcceptedCmp50  +     1.42864024461581 *
2319879   +        Complain0  +     0.34417315915901 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.89852147155601 * AcceptedCmp10 + 0.03501265764204 * 
AcceptedCmp20 + -0.45070218241239 * AcceptedCmp30 + -1.27257966336041 * AcceptedCmp40 + 
0.86175125820023 * AcceptedCmp50 + 1.42864024461581 * Complain0 + 0.34417315915901 * 
HigherEducationBinary0 ;
2319880   +   H1x2_2  = H1x2_2  +     0.41672679168374 * AcceptedCmp10
2319881   +          +     0.10769233314512 * AcceptedCmp20  +     0.42374549876289 *
2319882   +        AcceptedCmp30  +     0.65697535989046 * AcceptedCmp40
2319883   +          +     1.49817201460948 * AcceptedCmp50  +     0.46039378640249 *
2319884   +        Complain0  +     1.34709525059573 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.41672679168374 * AcceptedCmp10 + 0.10769233314512 * 
AcceptedCmp20 + 0.42374549876289 * AcceptedCmp30 + 0.65697535989046 * AcceptedCmp40 + 
1.49817201460948 * AcceptedCmp50 + 0.46039378640249 * Complain0 + 1.34709525059573 * 
HigherEducationBinary0 ;
2319885   +   H1x2_3  = H1x2_3  +     0.75388522027745 * AcceptedCmp10
2319886   +          +     2.63069611253058 * AcceptedCmp20  +     0.30907626174766 *
2319887   +        AcceptedCmp30  +     1.10100873408666 * AcceptedCmp40
2319888   +          +    -1.08824297693055 * AcceptedCmp50  +     1.05059014395924 *
2319889   +        Complain0  +     0.67869922391732 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.75388522027745 * AcceptedCmp10 + 2.63069611253058 * 
AcceptedCmp20 + 0.30907626174766 * AcceptedCmp30 + 1.10100873408666 * AcceptedCmp40 + 
-1.08824297693055 * AcceptedCmp50 + 1.05059014395924 * Complain0 + 0.67869922391732 * 
HigherEducationBinary0 ;
2319890   +   H1x2_4  = H1x2_4  +    -0.22033664091288 * AcceptedCmp10
2319891   +          +     1.34914301916376 * AcceptedCmp20  +    -0.91465085581504 *
2319892   +        AcceptedCmp30  +    -0.19686441685837 * AcceptedCmp40
2319893   +          +     0.10683331864009 * AcceptedCmp50  +    -0.00754824810979 *
2319894   +        Complain0  +     1.52033864172921 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.22033664091288 * AcceptedCmp10 + 1.34914301916376 * 
AcceptedCmp20 + -0.91465085581504 * AcceptedCmp30 + -0.19686441685837 * AcceptedCmp40 + 
0.10683331864009 * AcceptedCmp50 + -0.00754824810979 * Complain0 + 1.52033864172921 * 
HigherEducationBinary0 ;
2319895   +   H1x2_5  = H1x2_5  +     0.83049886541915 * AcceptedCmp10
2319896   +          +    -0.74079162208987 * AcceptedCmp20  +    -0.67792505698297 *
2319897   +        AcceptedCmp30  +     0.07081190269168 * AcceptedCmp40
2319898   +          +     0.18720033568684 * AcceptedCmp50  +      2.6531318197812 *
2319899   +        Complain0  +     0.89741230471087 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.83049886541915 * AcceptedCmp10 + -0.74079162208987 * 
AcceptedCmp20 + -0.67792505698297 * AcceptedCmp30 + 0.07081190269168 * AcceptedCmp40 + 
0.18720033568684 * AcceptedCmp50 + 2.6531318197812 * Complain0 + 0.89741230471087 * 
HigherEducationBinary0 ;
2319900   +   H1x2_6  = H1x2_6  +    -0.56781516290501 * AcceptedCmp10
2319901   +          +    -1.51874938874937 * AcceptedCmp20  +     1.28621778326033 *
2319902   +        AcceptedCmp30  +    -0.68769482686243 * AcceptedCmp40
2319903   +          +     0.35592893389946 * AcceptedCmp50  +    -1.30827608061077 *
2319904   +        Complain0  +     0.32980103195099 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.56781516290501 * AcceptedCmp10 + -1.51874938874937 
* AcceptedCmp20 + 1.28621778326033 * AcceptedCmp30 + -0.68769482686243 * AcceptedCmp40 + 
0.35592893389946 * AcceptedCmp50 + -1.30827608061077 * Complain0 + 0.32980103195099 * 
HigherEducationBinary0 ;
2319905   +   H1x2_1  = H1x2_1  +     -1.3799101073197 * Education2n_Cycle
2319906   +          +     0.02501135207931 * EducationBasic  +     1.13490660748682 *
2319907   +        EducationGraduation  +    -0.11344307008943 * EducationMaster
2319908   +          +     0.56030871857835 * Marital_StatusDivorced
2319909   +          +    -1.22448534379831 * Marital_StatusMarried
2319910   +          +     0.78141783495855 * Marital_StatusSingle
2319911   +          +    -1.35807438297575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.3799101073197 * Education2n_Cycle + 
0.02501135207931 * EducationBasic + 1.13490660748682 * EducationGraduation + -0.11344307008943 
* EducationMaster + 0.56030871857835 * Marital_StatusDivorced + -1.22448534379831 * 
Marital_StatusMarried + 0.78141783495855 * Marital_StatusSingle + -1.35807438297575 * 
Marital_StatusTogether ;
2319912   +   H1x2_2  = H1x2_2  +    -0.29912132201198 * Education2n_Cycle
2319913   +          +    -0.97227735746604 * EducationBasic  +     1.05541395347718 *
2319914   +        EducationGraduation  +     0.69607179798453 * EducationMaster
2319915   +          +    -2.63452071552997 * Marital_StatusDivorced
2319916   +          +     0.61829054779121 * Marital_StatusMarried
2319917   +          +    -2.20743370246315 * Marital_StatusSingle
2319918   +          +     0.56930072654252 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.29912132201198 * Education2n_Cycle + 
-0.97227735746604 * EducationBasic + 1.05541395347718 * EducationGraduation + 0.69607179798453 
* EducationMaster + -2.63452071552997 * Marital_StatusDivorced + 0.61829054779121 * 
Marital_StatusMarried + -2.20743370246315 * Marital_StatusSingle + 0.56930072654252 * 
Marital_StatusTogether ;
2319919   +   H1x2_3  = H1x2_3  +     0.65046688904352 * Education2n_Cycle
2319920   +          +     0.03854232912474 * EducationBasic  +     0.59545004622858 *
2319921   +        EducationGraduation  +    -1.68638824011899 * EducationMaster
2319922   +          +      -1.454102516731 * Marital_StatusDivorced
2319923   +          +     0.71488291465759 * Marital_StatusMarried
2319924   +          +     0.96038830049792 * Marital_StatusSingle
2319925   +          +    -0.85244216490853 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.65046688904352 * Education2n_Cycle + 
0.03854232912474 * EducationBasic + 0.59545004622858 * EducationGraduation + -1.68638824011899 
* EducationMaster + -1.454102516731 * Marital_StatusDivorced + 0.71488291465759 * 
Marital_StatusMarried + 0.96038830049792 * Marital_StatusSingle + -0.85244216490853 * 
Marital_StatusTogether ;
2319926   +   H1x2_4  = H1x2_4  +     0.37430673318658 * Education2n_Cycle
2319927   +          +    -0.25373979771478 * EducationBasic  +    -1.65617377693247 *
2319928   +        EducationGraduation  +    -1.12481097095571 * EducationMaster
2319929   +          +    -0.01160394891598 * Marital_StatusDivorced
2319930   +          +    -1.09054636482951 * Marital_StatusMarried
2319931   +          +      0.7793855479379 * Marital_StatusSingle
2319932   +          +    -0.40649435490654 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.37430673318658 * Education2n_Cycle + 
-0.25373979771478 * EducationBasic + -1.65617377693247 * EducationGraduation + 
-1.12481097095571 * EducationMaster + -0.01160394891598 * Marital_StatusDivorced + 
-1.09054636482951 * Marital_StatusMarried + 0.7793855479379 * Marital_StatusSingle + 
-0.40649435490654 * Marital_StatusTogether ;
2319933   +   H1x2_5  = H1x2_5  +     -0.1016827992735 * Education2n_Cycle
2319934   +          +     1.07194596228219 * EducationBasic  +    -1.05800808905557 *
2319935   +        EducationGraduation  +     0.09666597691691 * EducationMaster
2319936   +          +    -0.73414854875115 * Marital_StatusDivorced
2319937   +          +     0.46421425621114 * Marital_StatusMarried
2319938   +          +    -0.54512730625469 * Marital_StatusSingle
2319939   +          +     0.76568726267448 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.1016827992735 * Education2n_Cycle + 
1.07194596228219 * EducationBasic + -1.05800808905557 * EducationGraduation + 0.09666597691691 
* EducationMaster + -0.73414854875115 * Marital_StatusDivorced + 0.46421425621114 * 
Marital_StatusMarried + -0.54512730625469 * Marital_StatusSingle + 0.76568726267448 * 
Marital_StatusTogether ;
2319940   +   H1x2_6  = H1x2_6  +    -1.15957084181454 * Education2n_Cycle
2319941   +          +     0.00847667341235 * EducationBasic  +    -1.58463832529749 *
2319942   +        EducationGraduation  +     0.56518194582557 * EducationMaster
2319943   +          +     0.25131188683384 * Marital_StatusDivorced
2319944   +          +     2.38279806963807 * Marital_StatusMarried
2319945   +          +     0.28897706448348 * Marital_StatusSingle
2319946   +          +     0.89118497255856 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.15957084181454 * Education2n_Cycle + 
0.00847667341235 * EducationBasic + -1.58463832529749 * EducationGraduation + 0.56518194582557 
* EducationMaster + 0.25131188683384 * Marital_StatusDivorced + 2.38279806963807 * 
Marital_StatusMarried + 0.28897706448348 * Marital_StatusSingle + 0.89118497255856 * 
Marital_StatusTogether ;
2319947   +   H1x2_1  =    -1.58113759763481 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.58113759763481 + H1x2_1 ;
2319948   +   H1x2_2  =    -1.19307731012977 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.19307731012977 + H1x2_2 ;
2319949   +   H1x2_3  =     0.35767811974231 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.35767811974231 + H1x2_3 ;
2319950   +   H1x2_4  =    -0.20241610577527 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.20241610577527 + H1x2_4 ;
2319951   +   H1x2_5  =     0.30120348602955 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.30120348602955 + H1x2_5 ;
2319952   +   H1x2_6  =     1.04145053611779 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.04145053611779 + H1x2_6 ;
2319953   +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
2319954   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
2319955   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , 
H1x2_7 );
2319956   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2319957   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
2319958   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
2319959   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
2319960   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
2319961   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
2319962   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
2319963   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
2319964   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
2319965   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
2319966   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
2319967   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
2319968   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
2319969   +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
2319970   +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
2319971   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
2319972   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
2319973   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
2319974   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
2319975   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
2319976   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
2319977   +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
2319978   +END;
MPRINT(EM_DIAGRAM):   END;
2319979   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2319980   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2319981   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2319982   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2319983   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2319984   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2319985   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2319986   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
2319987   +END;
MPRINT(EM_DIAGRAM):   END;
2319988   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2319989   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2319990   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2319991   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2319992   +   H1x3_1  =    -0.17891338426869 * S_AcceptedCmpTotal
2319993   +          +     0.25935021287808 * S_Age  +     -0.4211584261256 * S_Frq
2319994   +          +    -1.91007620895221 * S_Income  +     0.38954955842314 *
2319995   +        S_Kidhome  +     0.07674351412771 * S_Mnt  +    -0.00193662324959 *
2319996   +        S_MntFishProducts  +    -0.05912563364557 * S_MntFruits
2319997   +          +     0.34447908349796 * S_MntGoldProds  +      1.8146796379351 *
2319998   +        S_MntMeatProducts  +    -0.28617584915758 * S_MntSweetProducts
2319999   +          +    -0.25003395507837 * S_MntWines  +     2.70698456342857 *
2320000   +        S_MonthsAsCustomer  +     0.61560315312621 * S_NumCatalogPurchases
2320001   +          +     1.11855402225797 * S_NumDealsPurchases
2320002   +          +     0.39150287442005 * S_NumDistPurchases
2320003   +          +     0.00160244551627 * S_NumStorePurchases
2320004   +          +     1.54380043731879 * S_NumWebPurchases
2320005   +          +      0.6462755347813 * S_NumWebVisitsMonth
2320006   +          +      0.3712356571744 * S_RFMstat  +     0.31930000498313 *
2320007   +        S_RMntFrq  +     0.91533450209744 * S_Recency
2320008   +          +    -1.15144971921837 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.17891338426869 * S_AcceptedCmpTotal + 0.25935021287808 * 
S_Age + -0.4211584261256 * S_Frq + -1.91007620895221 * S_Income + 0.38954955842314 * S_Kidhome 
+ 0.07674351412771 * S_Mnt + -0.00193662324959 * S_MntFishProducts + -0.05912563364557 * 
S_MntFruits + 0.34447908349796 * S_MntGoldProds + 1.8146796379351 * S_MntMeatProducts + 
-0.28617584915758 * S_MntSweetProducts + -0.25003395507837 * S_MntWines + 2.70698456342857 * 
S_MonthsAsCustomer + 0.61560315312621 * S_NumCatalogPurchases + 1.11855402225797 * 
S_NumDealsPurchases + 0.39150287442005 * S_NumDistPurchases + 0.00160244551627 * 
S_NumStorePurchases + 1.54380043731879 * S_NumWebPurchases + 0.6462755347813 * 
S_NumWebVisitsMonth + 0.3712356571744 * S_RFMstat + 0.31930000498313 * S_RMntFrq + 
0.91533450209744 * S_Recency + -1.15144971921837 * S_Teenhome ;
2320009   +   H1x3_2  =     0.70342217458269 * S_AcceptedCmpTotal
2320010   +          +     1.00269567168731 * S_Age  +     0.28237778780972 * S_Frq
2320011   +          +     1.85610950568833 * S_Income  +    -0.88627540559449 *
2320012   +        S_Kidhome  +      -0.681406495446 * S_Mnt  +    -0.52884566607488 *
2320013   +        S_MntFishProducts  +    -1.55540056999822 * S_MntFruits
2320014   +          +    -0.86530238267543 * S_MntGoldProds  +     0.50288889191395 *
2320015   +        S_MntMeatProducts  +     0.42795025747297 * S_MntSweetProducts
2320016   +          +     1.65622561769832 * S_MntWines  +    -0.40506757052255 *
2320017   +        S_MonthsAsCustomer  +    -0.45283667973478 * S_NumCatalogPurchases
2320018   +          +     0.01911815525287 * S_NumDealsPurchases
2320019   +          +    -1.07196707915227 * S_NumDistPurchases
2320020   +          +      0.6452048321682 * S_NumStorePurchases
2320021   +          +    -0.15818575353955 * S_NumWebPurchases
2320022   +          +    -0.82586162051382 * S_NumWebVisitsMonth
2320023   +          +     0.35914598433318 * S_RFMstat  +     0.14754646817335 *
2320024   +        S_RMntFrq  +     0.23398669008843 * S_Recency
2320025   +          +      0.1494741245474 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.70342217458269 * S_AcceptedCmpTotal + 1.00269567168731 * 
S_Age + 0.28237778780972 * S_Frq + 1.85610950568833 * S_Income + -0.88627540559449 * S_Kidhome 
+ -0.681406495446 * S_Mnt + -0.52884566607488 * S_MntFishProducts + -1.55540056999822 * 
S_MntFruits + -0.86530238267543 * S_MntGoldProds + 0.50288889191395 * S_MntMeatProducts + 
0.42795025747297 * S_MntSweetProducts + 1.65622561769832 * S_MntWines + -0.40506757052255 * 
S_MonthsAsCustomer + -0.45283667973478 * S_NumCatalogPurchases + 0.01911815525287 * 
S_NumDealsPurchases + -1.07196707915227 * S_NumDistPurchases + 0.6452048321682 * 
S_NumStorePurchases + -0.15818575353955 * S_NumWebPurchases + -0.82586162051382 * 
S_NumWebVisitsMonth + 0.35914598433318 * S_RFMstat + 0.14754646817335 * S_RMntFrq + 
0.23398669008843 * S_Recency + 0.1494741245474 * S_Teenhome ;
2320026   +   H1x3_3  =     0.54929571619315 * S_AcceptedCmpTotal
2320027   +          +      -0.751329127583 * S_Age  +    -0.94592306727941 * S_Frq
2320028   +          +    -1.17625421122138 * S_Income  +     0.74760015734698 *
2320029   +        S_Kidhome  +    -1.31055967085841 * S_Mnt  +     -0.5844789069547 *
2320030   +        S_MntFishProducts  +     0.29563811382096 * S_MntFruits
2320031   +          +      2.0486671645084 * S_MntGoldProds  +      0.4596153519541 *
2320032   +        S_MntMeatProducts  +     0.43182048706593 * S_MntSweetProducts
2320033   +          +     0.06319773540648 * S_MntWines  +     -0.9320658068644 *
2320034   +        S_MonthsAsCustomer  +     0.97208201647088 * S_NumCatalogPurchases
2320035   +          +     1.56893739271853 * S_NumDealsPurchases
2320036   +          +      0.6745865425238 * S_NumDistPurchases
2320037   +          +    -0.26848765783548 * S_NumStorePurchases
2320038   +          +     0.79227081430227 * S_NumWebPurchases
2320039   +          +     0.83054874267768 * S_NumWebVisitsMonth
2320040   +          +    -0.28363014203077 * S_RFMstat  +    -0.71879552423951 *
2320041   +        S_RMntFrq  +     0.80917480816898 * S_Recency
2320042   +          +    -0.52052715034272 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.54929571619315 * S_AcceptedCmpTotal + -0.751329127583 * S_Age 
+ -0.94592306727941 * S_Frq + -1.17625421122138 * S_Income + 0.74760015734698 * S_Kidhome + 
-1.31055967085841 * S_Mnt + -0.5844789069547 * S_MntFishProducts + 0.29563811382096 * 
S_MntFruits + 2.0486671645084 * S_MntGoldProds + 0.4596153519541 * S_MntMeatProducts + 
0.43182048706593 * S_MntSweetProducts + 0.06319773540648 * S_MntWines + -0.9320658068644 * 
S_MonthsAsCustomer + 0.97208201647088 * S_NumCatalogPurchases + 1.56893739271853 * 
S_NumDealsPurchases + 0.6745865425238 * S_NumDistPurchases + -0.26848765783548 * 
S_NumStorePurchases + 0.79227081430227 * S_NumWebPurchases + 0.83054874267768 * 
S_NumWebVisitsMonth + -0.28363014203077 * S_RFMstat + -0.71879552423951 * S_RMntFrq + 
0.80917480816898 * S_Recency + -0.52052715034272 * S_Teenhome ;
2320043   +   H1x3_4  =     1.71480641781959 * S_AcceptedCmpTotal
2320044   +          +    -0.98495603767618 * S_Age  +     -0.0459665945886 * S_Frq
2320045   +          +     1.19396539246615 * S_Income  +     0.51326452746824 *
2320046   +        S_Kidhome  +    -0.22663230333642 * S_Mnt  +     0.27256846012963 *
2320047   +        S_MntFishProducts  +    -0.50661455153622 * S_MntFruits
2320048   +          +     -0.3498057126965 * S_MntGoldProds  +    -2.87000075082987 *
2320049   +        S_MntMeatProducts  +    -0.09413391100844 * S_MntSweetProducts
2320050   +          +     1.15010664811376 * S_MntWines  +    -0.48501392658783 *
2320051   +        S_MonthsAsCustomer  +      0.2688077310392 * S_NumCatalogPurchases
2320052   +          +    -0.23954856030467 * S_NumDealsPurchases
2320053   +          +    -1.61914390483829 * S_NumDistPurchases
2320054   +          +      -1.014570623016 * S_NumStorePurchases
2320055   +          +    -0.36828642098701 * S_NumWebPurchases
2320056   +          +    -0.04976922659227 * S_NumWebVisitsMonth
2320057   +          +     0.87811344320757 * S_RFMstat  +    -1.70999928232532 *
2320058   +        S_RMntFrq  +    -0.40880481304369 * S_Recency
2320059   +          +     0.75806578113158 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.71480641781959 * S_AcceptedCmpTotal + -0.98495603767618 * 
S_Age + -0.0459665945886 * S_Frq + 1.19396539246615 * S_Income + 0.51326452746824 * S_Kidhome 
+ -0.22663230333642 * S_Mnt + 0.27256846012963 * S_MntFishProducts + -0.50661455153622 * 
S_MntFruits + -0.3498057126965 * S_MntGoldProds + -2.87000075082987 * S_MntMeatProducts + 
-0.09413391100844 * S_MntSweetProducts + 1.15010664811376 * S_MntWines + -0.48501392658783 * 
S_MonthsAsCustomer + 0.2688077310392 * S_NumCatalogPurchases + -0.23954856030467 * 
S_NumDealsPurchases + -1.61914390483829 * S_NumDistPurchases + -1.014570623016 * 
S_NumStorePurchases + -0.36828642098701 * S_NumWebPurchases + -0.04976922659227 * 
S_NumWebVisitsMonth + 0.87811344320757 * S_RFMstat + -1.70999928232532 * S_RMntFrq + 
-0.40880481304369 * S_Recency + 0.75806578113158 * S_Teenhome ;
2320060   +   H1x3_5  =    -0.35033091531835 * S_AcceptedCmpTotal
2320061   +          +    -1.18148775203733 * S_Age  +    -0.17374293038138 * S_Frq
2320062   +          +    -0.36680516767012 * S_Income  +     0.57186890691757 *
2320063   +        S_Kidhome  +    -0.02612042491922 * S_Mnt  +     0.84551697375819 *
2320064   +        S_MntFishProducts  +     0.44255296354709 * S_MntFruits
2320065   +          +    -1.35259485807243 * S_MntGoldProds  +      0.3377329409199 *
2320066   +        S_MntMeatProducts  +    -1.06135100840202 * S_MntSweetProducts
2320067   +          +     0.15771394796649 * S_MntWines  +     1.55754960780486 *
2320068   +        S_MonthsAsCustomer  +    -0.76896921785988 * S_NumCatalogPurchases
2320069   +          +     1.00094082424204 * S_NumDealsPurchases
2320070   +          +      0.2724785290725 * S_NumDistPurchases
2320071   +          +     0.13170237783486 * S_NumStorePurchases
2320072   +          +    -1.31447792523743 * S_NumWebPurchases
2320073   +          +    -0.09121088371438 * S_NumWebVisitsMonth
2320074   +          +     1.46860488573551 * S_RFMstat  +     0.46491504994651 *
2320075   +        S_RMntFrq  +      0.6767512513985 * S_Recency
2320076   +          +    -1.74995034763966 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.35033091531835 * S_AcceptedCmpTotal + -1.18148775203733 * 
S_Age + -0.17374293038138 * S_Frq + -0.36680516767012 * S_Income + 0.57186890691757 * 
S_Kidhome + -0.02612042491922 * S_Mnt + 0.84551697375819 * S_MntFishProducts + 
0.44255296354709 * S_MntFruits + -1.35259485807243 * S_MntGoldProds + 0.3377329409199 * 
S_MntMeatProducts + -1.06135100840202 * S_MntSweetProducts + 0.15771394796649 * S_MntWines + 
1.55754960780486 * S_MonthsAsCustomer + -0.76896921785988 * S_NumCatalogPurchases + 
1.00094082424204 * S_NumDealsPurchases + 0.2724785290725 * S_NumDistPurchases + 
0.13170237783486 * S_NumStorePurchases + -1.31447792523743 * S_NumWebPurchases + 
-0.09121088371438 * S_NumWebVisitsMonth + 1.46860488573551 * S_RFMstat + 0.46491504994651 * 
S_RMntFrq + 0.6767512513985 * S_Recency + -1.74995034763966 * S_Teenhome ;
2320077   +   H1x3_6  =     1.05520309715672 * S_AcceptedCmpTotal
2320078   +          +    -1.05930507843633 * S_Age  +     0.07032294102853 * S_Frq
2320079   +          +    -0.05932294137503 * S_Income  +    -1.47206442598932 *
2320080   +        S_Kidhome  +     0.56661112816398 * S_Mnt  +    -0.11340132210258 *
2320081   +        S_MntFishProducts  +    -0.32177484313741 * S_MntFruits
2320082   +          +    -0.32378384178804 * S_MntGoldProds  +     0.00540737819175 *
2320083   +        S_MntMeatProducts  +     0.14834467568566 * S_MntSweetProducts
2320084   +          +    -0.95841169333668 * S_MntWines  +    -0.62902099823048 *
2320085   +        S_MonthsAsCustomer  +    -0.67434201898155 * S_NumCatalogPurchases
2320086   +          +    -0.73198872336344 * S_NumDealsPurchases
2320087   +          +     0.29368958872361 * S_NumDistPurchases
2320088   +          +     1.52772046446908 * S_NumStorePurchases
2320089   +          +    -1.75065469134874 * S_NumWebPurchases
2320090   +          +      0.0264954621772 * S_NumWebVisitsMonth
2320091   +          +    -0.88054137065815 * S_RFMstat  +     0.70371760194946 *
2320092   +        S_RMntFrq  +     1.14219878739476 * S_Recency
2320093   +          +    -1.15240998118906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 1.05520309715672 * S_AcceptedCmpTotal + -1.05930507843633 * 
S_Age + 0.07032294102853 * S_Frq + -0.05932294137503 * S_Income + -1.47206442598932 * 
S_Kidhome + 0.56661112816398 * S_Mnt + -0.11340132210258 * S_MntFishProducts + 
-0.32177484313741 * S_MntFruits + -0.32378384178804 * S_MntGoldProds + 0.00540737819175 * 
S_MntMeatProducts + 0.14834467568566 * S_MntSweetProducts + -0.95841169333668 * S_MntWines + 
-0.62902099823048 * S_MonthsAsCustomer + -0.67434201898155 * S_NumCatalogPurchases + 
-0.73198872336344 * S_NumDealsPurchases + 0.29368958872361 * S_NumDistPurchases + 
1.52772046446908 * S_NumStorePurchases + -1.75065469134874 * S_NumWebPurchases + 
0.0264954621772 * S_NumWebVisitsMonth + -0.88054137065815 * S_RFMstat + 0.70371760194946 * 
S_RMntFrq + 1.14219878739476 * S_Recency + -1.15240998118906 * S_Teenhome ;
2320094   +   H1x3_1  = H1x3_1  +     0.60800466481517 * AcceptedCmp10
2320095   +          +     0.33187245535701 * AcceptedCmp20  +    -0.13888343551044 *
2320096   +        AcceptedCmp30  +     0.93663925029857 * AcceptedCmp40
2320097   +          +     1.09340622621085 * AcceptedCmp50  +    -0.49132743156126 *
2320098   +        Complain0  +     0.45196197584946 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.60800466481517 * AcceptedCmp10 + 0.33187245535701 * 
AcceptedCmp20 + -0.13888343551044 * AcceptedCmp30 + 0.93663925029857 * AcceptedCmp40 + 
1.09340622621085 * AcceptedCmp50 + -0.49132743156126 * Complain0 + 0.45196197584946 * 
HigherEducationBinary0 ;
2320099   +   H1x3_2  = H1x3_2  +     1.40275485940553 * AcceptedCmp10
2320100   +          +    -0.15035102140746 * AcceptedCmp20  +    -0.53574064147206 *
2320101   +        AcceptedCmp30  +    -1.67324904853563 * AcceptedCmp40
2320102   +          +     0.05636486780046 * AcceptedCmp50  +    -0.39032867538703 *
2320103   +        Complain0  +    -0.74980603736258 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 1.40275485940553 * AcceptedCmp10 + -0.15035102140746 * 
AcceptedCmp20 + -0.53574064147206 * AcceptedCmp30 + -1.67324904853563 * AcceptedCmp40 + 
0.05636486780046 * AcceptedCmp50 + -0.39032867538703 * Complain0 + -0.74980603736258 * 
HigherEducationBinary0 ;
2320104   +   H1x3_3  = H1x3_3  +     0.26722647672682 * AcceptedCmp10
2320105   +          +      0.6216449242511 * AcceptedCmp20  +     0.76635966126463 *
2320106   +        AcceptedCmp30  +    -2.48978919706551 * AcceptedCmp40
2320107   +          +     0.98619070514978 * AcceptedCmp50  +    -0.19244215041297 *
2320108   +        Complain0  +    -1.19045127506692 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.26722647672682 * AcceptedCmp10 + 0.6216449242511 * 
AcceptedCmp20 + 0.76635966126463 * AcceptedCmp30 + -2.48978919706551 * AcceptedCmp40 + 
0.98619070514978 * AcceptedCmp50 + -0.19244215041297 * Complain0 + -1.19045127506692 * 
HigherEducationBinary0 ;
2320109   +   H1x3_4  = H1x3_4  +    -1.73915810074841 * AcceptedCmp10
2320110   +          +     0.72244354389321 * AcceptedCmp20  +     1.07200246076684 *
2320111   +        AcceptedCmp30  +     0.24242315318429 * AcceptedCmp40
2320112   +          +     0.48717202781909 * AcceptedCmp50  +    -1.18600714935645 *
2320113   +        Complain0  +     -1.0752062632729 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -1.73915810074841 * AcceptedCmp10 + 0.72244354389321 * 
AcceptedCmp20 + 1.07200246076684 * AcceptedCmp30 + 0.24242315318429 * AcceptedCmp40 + 
0.48717202781909 * AcceptedCmp50 + -1.18600714935645 * Complain0 + -1.0752062632729 * 
HigherEducationBinary0 ;
2320114   +   H1x3_5  = H1x3_5  +     1.07972020322696 * AcceptedCmp10
2320115   +          +     0.38275266830165 * AcceptedCmp20  +     0.45959913551609 *
2320116   +        AcceptedCmp30  +    -0.30891288234597 * AcceptedCmp40
2320117   +          +    -0.35568820567134 * AcceptedCmp50  +     -1.8045223309162 *
2320118   +        Complain0  +    -0.29380313969195 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 1.07972020322696 * AcceptedCmp10 + 0.38275266830165 * 
AcceptedCmp20 + 0.45959913551609 * AcceptedCmp30 + -0.30891288234597 * AcceptedCmp40 + 
-0.35568820567134 * AcceptedCmp50 + -1.8045223309162 * Complain0 + -0.29380313969195 * 
HigherEducationBinary0 ;
2320119   +   H1x3_6  = H1x3_6  +    -2.40002597755125 * AcceptedCmp10
2320120   +          +     0.61725427642794 * AcceptedCmp20  +      1.3438972982524 *
2320121   +        AcceptedCmp30  +    -0.66766212489049 * AcceptedCmp40
2320122   +          +     1.10709227053258 * AcceptedCmp50  +    -0.98301865424423 *
2320123   +        Complain0  +     0.83512874944952 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + -2.40002597755125 * AcceptedCmp10 + 0.61725427642794 * 
AcceptedCmp20 + 1.3438972982524 * AcceptedCmp30 + -0.66766212489049 * AcceptedCmp40 + 
1.10709227053258 * AcceptedCmp50 + -0.98301865424423 * Complain0 + 0.83512874944952 * 
HigherEducationBinary0 ;
2320124   +   H1x3_1  = H1x3_1  +    -0.49604077640433 * Education2n_Cycle
2320125   +          +    -0.60803139475446 * EducationBasic  +     0.39029834300888 *
2320126   +        EducationGraduation  +     1.49476669226441 * EducationMaster
2320127   +          +     0.32207432513904 * Marital_StatusDivorced
2320128   +          +      0.6397913221395 * Marital_StatusMarried
2320129   +          +    -0.25330032559918 * Marital_StatusSingle
2320130   +          +      0.6826963146507 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.49604077640433 * Education2n_Cycle + 
-0.60803139475446 * EducationBasic + 0.39029834300888 * EducationGraduation + 1.49476669226441 
* EducationMaster + 0.32207432513904 * Marital_StatusDivorced + 0.6397913221395 * 
Marital_StatusMarried + -0.25330032559918 * Marital_StatusSingle + 0.6826963146507 * 
Marital_StatusTogether ;
2320131   +   H1x3_2  = H1x3_2  +     0.70727271276171 * Education2n_Cycle
2320132   +          +    -0.74539861835467 * EducationBasic  +    -1.09813520505203 *
2320133   +        EducationGraduation  +      0.0913616986494 * EducationMaster
2320134   +          +     0.79430904713493 * Marital_StatusDivorced
2320135   +          +     2.54456429102799 * Marital_StatusMarried
2320136   +          +     0.59410742352499 * Marital_StatusSingle
2320137   +          +     0.62339810371964 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.70727271276171 * Education2n_Cycle + 
-0.74539861835467 * EducationBasic + -1.09813520505203 * EducationGraduation + 0.0913616986494 
* EducationMaster + 0.79430904713493 * Marital_StatusDivorced + 2.54456429102799 * 
Marital_StatusMarried + 0.59410742352499 * Marital_StatusSingle + 0.62339810371964 * 
Marital_StatusTogether ;
2320138   +   H1x3_3  = H1x3_3  +     0.41739931776571 * Education2n_Cycle
2320139   +          +     0.90042318812458 * EducationBasic  +    -0.30863999735161 *
2320140   +        EducationGraduation  +    -0.07080985966069 * EducationMaster
2320141   +          +    -0.43081775693595 * Marital_StatusDivorced
2320142   +          +    -0.78485102174552 * Marital_StatusMarried
2320143   +          +    -1.56581090110813 * Marital_StatusSingle
2320144   +          +     1.31552735466691 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.41739931776571 * Education2n_Cycle + 
0.90042318812458 * EducationBasic + -0.30863999735161 * EducationGraduation + 
-0.07080985966069 * EducationMaster + -0.43081775693595 * Marital_StatusDivorced + 
-0.78485102174552 * Marital_StatusMarried + -1.56581090110813 * Marital_StatusSingle + 
1.31552735466691 * Marital_StatusTogether ;
2320145   +   H1x3_4  = H1x3_4  +    -1.03450070870223 * Education2n_Cycle
2320146   +          +     0.12962104594991 * EducationBasic  +    -2.08320982697158 *
2320147   +        EducationGraduation  +     1.01633562820676 * EducationMaster
2320148   +          +     0.38226706522151 * Marital_StatusDivorced
2320149   +          +     0.96666958079914 * Marital_StatusMarried
2320150   +          +    -0.07771259761555 * Marital_StatusSingle
2320151   +          +    -0.15667080607342 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -1.03450070870223 * Education2n_Cycle + 
0.12962104594991 * EducationBasic + -2.08320982697158 * EducationGraduation + 1.01633562820676 
* EducationMaster + 0.38226706522151 * Marital_StatusDivorced + 0.96666958079914 * 
Marital_StatusMarried + -0.07771259761555 * Marital_StatusSingle + -0.15667080607342 * 
Marital_StatusTogether ;
2320152   +   H1x3_5  = H1x3_5  +     0.42350784953316 * Education2n_Cycle
2320153   +          +    -0.47409869250049 * EducationBasic  +     0.22752853959532 *
2320154   +        EducationGraduation  +     0.05813076059598 * EducationMaster
2320155   +          +    -0.38325393606947 * Marital_StatusDivorced
2320156   +          +    -1.43303056163299 * Marital_StatusMarried
2320157   +          +     0.11571941757387 * Marital_StatusSingle
2320158   +          +     0.42633042000729 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 0.42350784953316 * Education2n_Cycle + 
-0.47409869250049 * EducationBasic + 0.22752853959532 * EducationGraduation + 0.05813076059598 
* EducationMaster + -0.38325393606947 * Marital_StatusDivorced + -1.43303056163299 * 
Marital_StatusMarried + 0.11571941757387 * Marital_StatusSingle + 0.42633042000729 * 
Marital_StatusTogether ;
2320159   +   H1x3_6  = H1x3_6  +     1.11214831415741 * Education2n_Cycle
2320160   +          +      0.8877309144454 * EducationBasic  +     0.87390674413956 *
2320161   +        EducationGraduation  +     0.90837023676142 * EducationMaster
2320162   +          +    -0.36491799765765 * Marital_StatusDivorced
2320163   +          +     0.14142786767503 * Marital_StatusMarried
2320164   +          +     0.22643970468805 * Marital_StatusSingle
2320165   +          +     0.74162870756295 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + 1.11214831415741 * Education2n_Cycle + 0.8877309144454 
* EducationBasic + 0.87390674413956 * EducationGraduation + 0.90837023676142 * EducationMaster 
+ -0.36491799765765 * Marital_StatusDivorced + 0.14142786767503 * Marital_StatusMarried + 
0.22643970468805 * Marital_StatusSingle + 0.74162870756295 * Marital_StatusTogether ;
2320166   +   H1x3_1  =        0.17121674502 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.17121674502 + H1x3_1 ;
2320167   +   H1x3_2  =    -0.07858073871761 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.07858073871761 + H1x3_2 ;
2320168   +   H1x3_3  =     -0.1687483376367 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.1687483376367 + H1x3_3 ;
2320169   +   H1x3_4  =     0.92501573900148 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.92501573900148 + H1x3_4 ;
2320170   +   H1x3_5  =    -0.04765930254307 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.04765930254307 + H1x3_5 ;
2320171   +   H1x3_6  =     0.29532221854366 + H1x3_6 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0.29532221854366 + H1x3_6 ;
2320172   +   H1x3_7  = 0;
MPRINT(EM_DIAGRAM):   H1x3_7 = 0;
2320173   +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 , H1x3_7
2320174   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 , 
H1x3_7 );
2320175   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2320176   +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
2320177   +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
2320178   +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
2320179   +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
2320180   +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
2320181   +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
2320182   +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
2320183   +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
2320184   +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
2320185   +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
2320186   +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
2320187   +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
2320188   +   H1x3_7  = EXP(H1x3_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_7 = EXP(H1x3_7 - _MAX_);
2320189   +   _SUM_ = _SUM_ + H1x3_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_7 ;
2320190   +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
2320191   +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
2320192   +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
2320193   +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
2320194   +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
2320195   +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
2320196   +   H1x3_7  = H1x3_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_7 = H1x3_7 / _SUM_;
2320197   +END;
MPRINT(EM_DIAGRAM):   END;
2320198   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2320199   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2320200   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2320201   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
2320202   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
2320203   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
2320204   +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
2320205   +   H1x3_7  = .;
MPRINT(EM_DIAGRAM):   H1x3_7 = .;
2320206   +END;
MPRINT(EM_DIAGRAM):   END;
2320207   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2320208   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2320209   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2320210   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2320211   +   H2x1_1  =    -0.59397690687549 * H1x1_1  +     0.10790242485513 * H1x1_2
2320212   +          +     1.34957997338147 * H1x1_3  +     0.98783879769831 * H1x1_4
2320213   +          +    -1.73131698691915 * H1x1_5  +    -0.04920424431591 * H1x1_6
2320214   +          +    -0.75229173661277 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.59397690687549 * H1x1_1 + 0.10790242485513 * H1x1_2 + 
1.34957997338147 * H1x1_3 + 0.98783879769831 * H1x1_4 + -1.73131698691915 * H1x1_5 + 
-0.04920424431591 * H1x1_6 + -0.75229173661277 * H1x1_7 ;
2320215   +   H2x1_2  =    -0.98729009516736 * H1x1_1  +     0.08491210993613 * H1x1_2
2320216   +          +     0.08027654554575 * H1x1_3  +     0.06189432860142 * H1x1_4
2320217   +          +    -1.23526842489276 * H1x1_5  +    -0.17600169070197 * H1x1_6
2320218   +          +     0.70746372975481 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.98729009516736 * H1x1_1 + 0.08491210993613 * H1x1_2 + 
0.08027654554575 * H1x1_3 + 0.06189432860142 * H1x1_4 + -1.23526842489276 * H1x1_5 + 
-0.17600169070197 * H1x1_6 + 0.70746372975481 * H1x1_7 ;
2320219   +   H2x1_3  =    -0.91861478701429 * H1x1_1  +     0.18513565366261 * H1x1_2
2320220   +          +    -0.18629587955963 * H1x1_3  +     0.76802660507034 * H1x1_4
2320221   +          +    -0.47979525657638 * H1x1_5  +     0.06968142422923 * H1x1_6
2320222   +          +     2.18264864713501 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.91861478701429 * H1x1_1 + 0.18513565366261 * H1x1_2 + 
-0.18629587955963 * H1x1_3 + 0.76802660507034 * H1x1_4 + -0.47979525657638 * H1x1_5 + 
0.06968142422923 * H1x1_6 + 2.18264864713501 * H1x1_7 ;
2320223   +   H2x1_4  =     1.02774363171853 * H1x1_1  +     1.08006636098136 * H1x1_2
2320224   +          +    -2.27078540572539 * H1x1_3  +    -0.54968089382258 * H1x1_4
2320225   +          +     2.11477012099075 * H1x1_5  +     1.91368944483056 * H1x1_6
2320226   +          +     0.22313799249268 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.02774363171853 * H1x1_1 + 1.08006636098136 * H1x1_2 + 
-2.27078540572539 * H1x1_3 + -0.54968089382258 * H1x1_4 + 2.11477012099075 * H1x1_5 + 
1.91368944483056 * H1x1_6 + 0.22313799249268 * H1x1_7 ;
2320227   +   H2x1_5  =    -1.06933000183778 * H1x1_1  +     0.73081558484415 * H1x1_2
2320228   +          +    -0.78012012951065 * H1x1_3  +     0.81916081920412 * H1x1_4
2320229   +          +    -1.46358608086032 * H1x1_5  +     1.83492870022704 * H1x1_6
2320230   +          +     0.75554005406859 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.06933000183778 * H1x1_1 + 0.73081558484415 * H1x1_2 + 
-0.78012012951065 * H1x1_3 + 0.81916081920412 * H1x1_4 + -1.46358608086032 * H1x1_5 + 
1.83492870022704 * H1x1_6 + 0.75554005406859 * H1x1_7 ;
2320231   +   H2x1_6  =    -2.28576277725334 * H1x1_1  +    -0.32249555333061 * H1x1_2
2320232   +          +     3.41388795688866 * H1x1_3  +     3.30305437699117 * H1x1_4
2320233   +          +    -1.49237136034665 * H1x1_5  +    -1.64329313023006 * H1x1_6
2320234   +          +     3.08746595768905 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -2.28576277725334 * H1x1_1 + -0.32249555333061 * H1x1_2 + 
3.41388795688866 * H1x1_3 + 3.30305437699117 * H1x1_4 + -1.49237136034665 * H1x1_5 + 
-1.64329313023006 * H1x1_6 + 3.08746595768905 * H1x1_7 ;
2320235   +   H2x1_1  = H2x1_1  +    -2.56424783943845 * H1x2_1
2320236   +          +    -1.00213973107436 * H1x2_2  +    -0.47445930434013 * H1x2_3
2320237   +          +    -1.62372689856618 * H1x2_4  +     -1.1856250348479 * H1x2_5
2320238   +          +     0.04266758405533 * H1x2_6  +    -0.60071538153471 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.56424783943845 * H1x2_1 + -1.00213973107436 * 
H1x2_2 + -0.47445930434013 * H1x2_3 + -1.62372689856618 * H1x2_4 + -1.1856250348479 * H1x2_5 + 
0.04266758405533 * H1x2_6 + -0.60071538153471 * H1x2_7 ;
2320239   +   H2x1_2  = H2x1_2  +     0.00935939453146 * H1x2_1
2320240   +          +     0.55542862749222 * H1x2_2  +     -0.6066128025675 * H1x2_3
2320241   +          +    -0.53196514301497 * H1x2_4  +    -1.40549473181231 * H1x2_5
2320242   +          +    -0.08595621526876 * H1x2_6  +    -1.03953618328756 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.00935939453146 * H1x2_1 + 0.55542862749222 * H1x2_2 
+ -0.6066128025675 * H1x2_3 + -0.53196514301497 * H1x2_4 + -1.40549473181231 * H1x2_5 + 
-0.08595621526876 * H1x2_6 + -1.03953618328756 * H1x2_7 ;
2320243   +   H2x1_3  = H2x1_3  +    -1.41069312035355 * H1x2_1
2320244   +          +     0.56124490780446 * H1x2_2  +    -0.00472279335297 * H1x2_3
2320245   +          +    -1.10441771442377 * H1x2_4  +    -0.27090019786185 * H1x2_5
2320246   +          +    -0.15206855618217 * H1x2_6  +     -1.6035395520507 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -1.41069312035355 * H1x2_1 + 0.56124490780446 * H1x2_2 
+ -0.00472279335297 * H1x2_3 + -1.10441771442377 * H1x2_4 + -0.27090019786185 * H1x2_5 + 
-0.15206855618217 * H1x2_6 + -1.6035395520507 * H1x2_7 ;
2320247   +   H2x1_4  = H2x1_4  +    -0.55045399339183 * H1x2_1
2320248   +          +     0.02477552373088 * H1x2_2  +     0.19400769235958 * H1x2_3
2320249   +          +    -0.38264537483702 * H1x2_4  +     0.63479720884458 * H1x2_5
2320250   +          +    -0.60194629301645 * H1x2_6  +    -0.83490097285651 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.55045399339183 * H1x2_1 + 0.02477552373088 * H1x2_2 
+ 0.19400769235958 * H1x2_3 + -0.38264537483702 * H1x2_4 + 0.63479720884458 * H1x2_5 + 
-0.60194629301645 * H1x2_6 + -0.83490097285651 * H1x2_7 ;
2320251   +   H2x1_5  = H2x1_5  +    -1.03176133074695 * H1x2_1
2320252   +          +    -0.59926889064506 * H1x2_2  +    -1.07077012847053 * H1x2_3
2320253   +          +    -1.18998920291096 * H1x2_4  +     0.39150574258439 * H1x2_5
2320254   +          +     0.05580574741832 * H1x2_6  +    -0.32272109045259 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -1.03176133074695 * H1x2_1 + -0.59926889064506 * 
H1x2_2 + -1.07077012847053 * H1x2_3 + -1.18998920291096 * H1x2_4 + 0.39150574258439 * H1x2_5 + 
0.05580574741832 * H1x2_6 + -0.32272109045259 * H1x2_7 ;
2320255   +   H2x1_6  = H2x1_6  +    -0.61952040538587 * H1x2_1
2320256   +          +     0.35510185028829 * H1x2_2  +    -0.23901935720129 * H1x2_3
2320257   +          +     0.31752417497209 * H1x2_4  +    -1.20101515562967 * H1x2_5
2320258   +          +     0.95004398218762 * H1x2_6  +    -0.60363955740244 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.61952040538587 * H1x2_1 + 0.35510185028829 * H1x2_2 
+ -0.23901935720129 * H1x2_3 + 0.31752417497209 * H1x2_4 + -1.20101515562967 * H1x2_5 + 
0.95004398218762 * H1x2_6 + -0.60363955740244 * H1x2_7 ;
2320259   +   H2x1_1  = H2x1_1  +     0.74378922258523 * H1x3_1
2320260   +          +      0.4693103426831 * H1x3_2  +     0.82071786194731 * H1x3_3
2320261   +          +     0.46432194238141 * H1x3_4  +    -1.39760250161206 * H1x3_5
2320262   +          +     0.68725250578779 * H1x3_6  +    -0.98986331205144 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.74378922258523 * H1x3_1 + 0.4693103426831 * H1x3_2 + 
0.82071786194731 * H1x3_3 + 0.46432194238141 * H1x3_4 + -1.39760250161206 * H1x3_5 + 
0.68725250578779 * H1x3_6 + -0.98986331205144 * H1x3_7 ;
2320263   +   H2x1_2  = H2x1_2  +     0.48406734142754 * H1x3_1
2320264   +          +     1.24032575331626 * H1x3_2  +     0.10072816620895 * H1x3_3
2320265   +          +     -2.4915795108808 * H1x3_4  +    -1.20085587739472 * H1x3_5
2320266   +          +     2.57480977795816 * H1x3_6  +    -0.36127801521801 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.48406734142754 * H1x3_1 + 1.24032575331626 * H1x3_2 
+ 0.10072816620895 * H1x3_3 + -2.4915795108808 * H1x3_4 + -1.20085587739472 * H1x3_5 + 
2.57480977795816 * H1x3_6 + -0.36127801521801 * H1x3_7 ;
2320267   +   H2x1_3  = H2x1_3  +    -0.29392518978638 * H1x3_1
2320268   +          +     0.02884163093827 * H1x3_2  +     -0.7595494999576 * H1x3_3
2320269   +          +     0.32536537321799 * H1x3_4  +    -0.01283695014976 * H1x3_5
2320270   +          +     0.76895275927405 * H1x3_6  +     -0.2802859993784 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.29392518978638 * H1x3_1 + 0.02884163093827 * H1x3_2 
+ -0.7595494999576 * H1x3_3 + 0.32536537321799 * H1x3_4 + -0.01283695014976 * H1x3_5 + 
0.76895275927405 * H1x3_6 + -0.2802859993784 * H1x3_7 ;
2320271   +   H2x1_4  = H2x1_4  +     2.19833784150068 * H1x3_1
2320272   +          +     0.25528651098746 * H1x3_2  +    -0.72296156297186 * H1x3_3
2320273   +          +    -0.14360138590872 * H1x3_4  +     0.77657569331577 * H1x3_5
2320274   +          +    -1.57969278343415 * H1x3_6  +    -0.92288304588247 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 2.19833784150068 * H1x3_1 + 0.25528651098746 * H1x3_2 
+ -0.72296156297186 * H1x3_3 + -0.14360138590872 * H1x3_4 + 0.77657569331577 * H1x3_5 + 
-1.57969278343415 * H1x3_6 + -0.92288304588247 * H1x3_7 ;
2320275   +   H2x1_5  = H2x1_5  +     2.11753865409831 * H1x3_1
2320276   +          +     0.83654766112935 * H1x3_2  +     0.97472534941535 * H1x3_3
2320277   +          +     1.35030042962655 * H1x3_4  +     1.24680664824079 * H1x3_5
2320278   +          +     0.19234112612264 * H1x3_6  +    -0.90680244689294 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 2.11753865409831 * H1x3_1 + 0.83654766112935 * H1x3_2 
+ 0.97472534941535 * H1x3_3 + 1.35030042962655 * H1x3_4 + 1.24680664824079 * H1x3_5 + 
0.19234112612264 * H1x3_6 + -0.90680244689294 * H1x3_7 ;
2320279   +   H2x1_6  = H2x1_6  +     2.07923724911848 * H1x3_1
2320280   +          +     1.62526758922217 * H1x3_2  +    -0.68837627923045 * H1x3_3
2320281   +          +    -0.21127837456631 * H1x3_4  +    -1.47138526111866 * H1x3_5
2320282   +          +    -0.52275521204408 * H1x3_6  +    -0.36639952580044 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + 2.07923724911848 * H1x3_1 + 1.62526758922217 * H1x3_2 
+ -0.68837627923045 * H1x3_3 + -0.21127837456631 * H1x3_4 + -1.47138526111866 * H1x3_5 + 
-0.52275521204408 * H1x3_6 + -0.36639952580044 * H1x3_7 ;
2320283   +   H2x1_1  =    -1.05059672372056 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.05059672372056 + H2x1_1 ;
2320284   +   H2x1_2  =    -1.18404209429335 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.18404209429335 + H2x1_2 ;
2320285   +   H2x1_3  =    -0.76285494175137 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.76285494175137 + H2x1_3 ;
2320286   +   H2x1_4  =     2.22362261707253 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.22362261707253 + H2x1_4 ;
2320287   +   H2x1_5  =    -0.98793149966854 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.98793149966854 + H2x1_5 ;
2320288   +   H2x1_6  =     1.51370254076672 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.51370254076672 + H2x1_6 ;
2320289   +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
2320290   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
2320291   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , 
H2x1_7 );
2320292   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2320293   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
2320294   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
2320295   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
2320296   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
2320297   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
2320298   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
2320299   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
2320300   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
2320301   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
2320302   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
2320303   +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
2320304   +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
2320305   +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
2320306   +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
2320307   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
2320308   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
2320309   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
2320310   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
2320311   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
2320312   +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
2320313   +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
2320314   +END;
MPRINT(EM_DIAGRAM):   END;
2320315   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2320316   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2320317   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2320318   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2320319   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2320320   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2320321   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
2320322   +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
2320323   +END;
MPRINT(EM_DIAGRAM):   END;
2320324   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2320325   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
2320326   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2320327   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2320328   +   H2x2_1  =    -0.47079896252387 * H1x1_1  +      0.6132734714958 * H1x1_2
2320329   +          +     1.50300753820512 * H1x1_3  +     -0.1812621169129 * H1x1_4
2320330   +          +    -0.18531614991208 * H1x1_5  +     -0.2905105845089 * H1x1_6
2320331   +          +     1.33158539183491 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.47079896252387 * H1x1_1 + 0.6132734714958 * H1x1_2 + 
1.50300753820512 * H1x1_3 + -0.1812621169129 * H1x1_4 + -0.18531614991208 * H1x1_5 + 
-0.2905105845089 * H1x1_6 + 1.33158539183491 * H1x1_7 ;
2320332   +   H2x2_2  =    -1.90834701790953 * H1x1_1  +      0.6177658514697 * H1x1_2
2320333   +          +     0.36465199316418 * H1x1_3  +     0.85911870587838 * H1x1_4
2320334   +          +     0.02147610114602 * H1x1_5  +     0.32326590534391 * H1x1_6
2320335   +          +    -1.04241581652278 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.90834701790953 * H1x1_1 + 0.6177658514697 * H1x1_2 + 
0.36465199316418 * H1x1_3 + 0.85911870587838 * H1x1_4 + 0.02147610114602 * H1x1_5 + 
0.32326590534391 * H1x1_6 + -1.04241581652278 * H1x1_7 ;
2320336   +   H2x2_3  =       0.471130277999 * H1x1_1  +     0.96694465336161 * H1x1_2
2320337   +          +       0.141582035067 * H1x1_3  +     0.53325844993783 * H1x1_4
2320338   +          +     -0.0659115060565 * H1x1_5  +     0.38141753021852 * H1x1_6
2320339   +          +    -1.14139437080586 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.471130277999 * H1x1_1 + 0.96694465336161 * H1x1_2 + 
0.141582035067 * H1x1_3 + 0.53325844993783 * H1x1_4 + -0.0659115060565 * H1x1_5 + 
0.38141753021852 * H1x1_6 + -1.14139437080586 * H1x1_7 ;
2320340   +   H2x2_4  =     0.97070926632973 * H1x1_1  +    -0.13619191199121 * H1x1_2
2320341   +          +       0.111155554391 * H1x1_3  +    -0.50119055939436 * H1x1_4
2320342   +          +     -0.4478264228864 * H1x1_5  +    -0.07373167561096 * H1x1_6
2320343   +          +    -0.48838853015257 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.97070926632973 * H1x1_1 + -0.13619191199121 * H1x1_2 + 
0.111155554391 * H1x1_3 + -0.50119055939436 * H1x1_4 + -0.4478264228864 * H1x1_5 + 
-0.07373167561096 * H1x1_6 + -0.48838853015257 * H1x1_7 ;
2320344   +   H2x2_5  =    -0.97151785477215 * H1x1_1  +     0.21189203541458 * H1x1_2
2320345   +          +    -0.19596886882434 * H1x1_3  +      1.3474130560719 * H1x1_4
2320346   +          +     1.73119417991798 * H1x1_5  +    -0.03726270753922 * H1x1_6
2320347   +          +    -1.41850405567364 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.97151785477215 * H1x1_1 + 0.21189203541458 * H1x1_2 + 
-0.19596886882434 * H1x1_3 + 1.3474130560719 * H1x1_4 + 1.73119417991798 * H1x1_5 + 
-0.03726270753922 * H1x1_6 + -1.41850405567364 * H1x1_7 ;
2320348   +   H2x2_6  =     0.64188298957992 * H1x1_1  +     0.87835723870887 * H1x1_2
2320349   +          +     0.65705195530326 * H1x1_3  +    -1.37039626769544 * H1x1_4
2320350   +          +    -0.32238737127781 * H1x1_5  +     0.33986547881641 * H1x1_6
2320351   +          +    -0.39788950643812 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.64188298957992 * H1x1_1 + 0.87835723870887 * H1x1_2 + 
0.65705195530326 * H1x1_3 + -1.37039626769544 * H1x1_4 + -0.32238737127781 * H1x1_5 + 
0.33986547881641 * H1x1_6 + -0.39788950643812 * H1x1_7 ;
2320352   +   H2x2_1  = H2x2_1  +    -0.69934298550944 * H1x2_1
2320353   +          +    -0.34972890643898 * H1x2_2  +     0.13067071374168 * H1x2_3
2320354   +          +    -0.35163870866778 * H1x2_4  +     0.68739106758866 * H1x2_5
2320355   +          +    -0.13482628170329 * H1x2_6  +    -0.03659282127619 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.69934298550944 * H1x2_1 + -0.34972890643898 * 
H1x2_2 + 0.13067071374168 * H1x2_3 + -0.35163870866778 * H1x2_4 + 0.68739106758866 * H1x2_5 + 
-0.13482628170329 * H1x2_6 + -0.03659282127619 * H1x2_7 ;
2320356   +   H2x2_2  = H2x2_2  +    -0.16537065948373 * H1x2_1
2320357   +          +     1.88602375412723 * H1x2_2  +     0.00246313998608 * H1x2_3
2320358   +          +    -0.38678545162214 * H1x2_4  +     1.62314892910576 * H1x2_5
2320359   +          +     1.14369813266427 * H1x2_6  +    -0.04547589616076 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.16537065948373 * H1x2_1 + 1.88602375412723 * H1x2_2 
+ 0.00246313998608 * H1x2_3 + -0.38678545162214 * H1x2_4 + 1.62314892910576 * H1x2_5 + 
1.14369813266427 * H1x2_6 + -0.04547589616076 * H1x2_7 ;
2320360   +   H2x2_3  = H2x2_3  +     0.25040248389011 * H1x2_1
2320361   +          +    -1.56534319969402 * H1x2_2  +     0.07686150326519 * H1x2_3
2320362   +          +     -0.9279505919723 * H1x2_4  +    -0.40426942169792 * H1x2_5
2320363   +          +      0.0625082015929 * H1x2_6  +    -1.06140294711643 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.25040248389011 * H1x2_1 + -1.56534319969402 * H1x2_2 
+ 0.07686150326519 * H1x2_3 + -0.9279505919723 * H1x2_4 + -0.40426942169792 * H1x2_5 + 
0.0625082015929 * H1x2_6 + -1.06140294711643 * H1x2_7 ;
2320364   +   H2x2_4  = H2x2_4  +     -0.4384763018657 * H1x2_1
2320365   +          +    -1.45966734038116 * H1x2_2  +      -2.034771072409 * H1x2_3
2320366   +          +    -0.09055740067076 * H1x2_4  +     1.51504299287048 * H1x2_5
2320367   +          +     0.15439799867788 * H1x2_6  +    -1.11828371545771 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -0.4384763018657 * H1x2_1 + -1.45966734038116 * H1x2_2 
+ -2.034771072409 * H1x2_3 + -0.09055740067076 * H1x2_4 + 1.51504299287048 * H1x2_5 + 
0.15439799867788 * H1x2_6 + -1.11828371545771 * H1x2_7 ;
2320368   +   H2x2_5  = H2x2_5  +     1.25750321874643 * H1x2_1
2320369   +          +    -0.65639925770112 * H1x2_2  +     -1.7659580690496 * H1x2_3
2320370   +          +       0.375442412611 * H1x2_4  +     0.00802128415855 * H1x2_5
2320371   +          +     0.75342656671485 * H1x2_6  +     1.64939805941174 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.25750321874643 * H1x2_1 + -0.65639925770112 * H1x2_2 
+ -1.7659580690496 * H1x2_3 + 0.375442412611 * H1x2_4 + 0.00802128415855 * H1x2_5 + 
0.75342656671485 * H1x2_6 + 1.64939805941174 * H1x2_7 ;
2320372   +   H2x2_6  = H2x2_6  +     1.32293752617916 * H1x2_1
2320373   +          +     0.48969975153948 * H1x2_2  +    -0.72928783660254 * H1x2_3
2320374   +          +     0.84727905047749 * H1x2_4  +     0.04670520107938 * H1x2_5
2320375   +          +     2.02862934142232 * H1x2_6  +    -0.56510756043393 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 1.32293752617916 * H1x2_1 + 0.48969975153948 * H1x2_2 
+ -0.72928783660254 * H1x2_3 + 0.84727905047749 * H1x2_4 + 0.04670520107938 * H1x2_5 + 
2.02862934142232 * H1x2_6 + -0.56510756043393 * H1x2_7 ;
2320376   +   H2x2_1  = H2x2_1  +       1.744725276854 * H1x3_1
2320377   +          +     0.13060858789431 * H1x3_2  +    -0.96737787454303 * H1x3_3
2320378   +          +    -0.33966254732699 * H1x3_4  +     2.39360262119688 * H1x3_5
2320379   +          +     2.58016170780679 * H1x3_6  +    -0.61611732156494 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 1.744725276854 * H1x3_1 + 0.13060858789431 * H1x3_2 + 
-0.96737787454303 * H1x3_3 + -0.33966254732699 * H1x3_4 + 2.39360262119688 * H1x3_5 + 
2.58016170780679 * H1x3_6 + -0.61611732156494 * H1x3_7 ;
2320380   +   H2x2_2  = H2x2_2  +    -0.81180308935434 * H1x3_1
2320381   +          +    -1.15566778124471 * H1x3_2  +     0.08550916456261 * H1x3_3
2320382   +          +     0.54919117407314 * H1x3_4  +     0.18927188150893 * H1x3_5
2320383   +          +    -0.15464567766004 * H1x3_6  +     0.22152383228096 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.81180308935434 * H1x3_1 + -1.15566778124471 * 
H1x3_2 + 0.08550916456261 * H1x3_3 + 0.54919117407314 * H1x3_4 + 0.18927188150893 * H1x3_5 + 
-0.15464567766004 * H1x3_6 + 0.22152383228096 * H1x3_7 ;
2320384   +   H2x2_3  = H2x2_3  +    -0.57155391194888 * H1x3_1
2320385   +          +    -0.80109748621438 * H1x3_2  +     -1.0755749661031 * H1x3_3
2320386   +          +     1.03082070302539 * H1x3_4  +    -2.00320570042417 * H1x3_5
2320387   +          +    -1.96298435256616 * H1x3_6  +     1.02097262601001 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.57155391194888 * H1x3_1 + -0.80109748621438 * 
H1x3_2 + -1.0755749661031 * H1x3_3 + 1.03082070302539 * H1x3_4 + -2.00320570042417 * H1x3_5 + 
-1.96298435256616 * H1x3_6 + 1.02097262601001 * H1x3_7 ;
2320388   +   H2x2_4  = H2x2_4  +     0.24801772968599 * H1x3_1
2320389   +          +    -2.13175914157416 * H1x3_2  +    -0.52172370749235 * H1x3_3
2320390   +          +     2.04158456409986 * H1x3_4  +     1.02332318578438 * H1x3_5
2320391   +          +      -0.428263055638 * H1x3_6  +    -0.10602300040145 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.24801772968599 * H1x3_1 + -2.13175914157416 * H1x3_2 
+ -0.52172370749235 * H1x3_3 + 2.04158456409986 * H1x3_4 + 1.02332318578438 * H1x3_5 + 
-0.428263055638 * H1x3_6 + -0.10602300040145 * H1x3_7 ;
2320392   +   H2x2_5  = H2x2_5  +    -1.00177979562809 * H1x3_1
2320393   +          +    -0.45285333413007 * H1x3_2  +    -0.35882884863392 * H1x3_3
2320394   +          +     0.23001711273663 * H1x3_4  +     0.77235765656369 * H1x3_5
2320395   +          +    -0.04383242140243 * H1x3_6  +    -0.25926963615252 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -1.00177979562809 * H1x3_1 + -0.45285333413007 * 
H1x3_2 + -0.35882884863392 * H1x3_3 + 0.23001711273663 * H1x3_4 + 0.77235765656369 * H1x3_5 + 
-0.04383242140243 * H1x3_6 + -0.25926963615252 * H1x3_7 ;
2320396   +   H2x2_6  = H2x2_6  +     0.84797826043534 * H1x3_1
2320397   +          +    -0.46927154831713 * H1x3_2  +    -1.09865845985096 * H1x3_3
2320398   +          +     0.59699123454307 * H1x3_4  +     1.59564014754161 * H1x3_5
2320399   +          +     1.33413776227036 * H1x3_6  +     0.33047800872361 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.84797826043534 * H1x3_1 + -0.46927154831713 * H1x3_2 
+ -1.09865845985096 * H1x3_3 + 0.59699123454307 * H1x3_4 + 1.59564014754161 * H1x3_5 + 
1.33413776227036 * H1x3_6 + 0.33047800872361 * H1x3_7 ;
2320400   +   H2x2_1  =    -3.05344936388855 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -3.05344936388855 + H2x2_1 ;
2320401   +   H2x2_2  =     0.31382645894355 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.31382645894355 + H2x2_2 ;
2320402   +   H2x2_3  =     0.31718668306888 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.31718668306888 + H2x2_3 ;
2320403   +   H2x2_4  =    -0.72340666209054 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.72340666209054 + H2x2_4 ;
2320404   +   H2x2_5  =    -0.59585228872544 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.59585228872544 + H2x2_5 ;
2320405   +   H2x2_6  =    -1.34027540207713 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = -1.34027540207713 + H2x2_6 ;
2320406   +   H2x2_7  = 0;
MPRINT(EM_DIAGRAM):   H2x2_7 = 0;
2320407   +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 , H2x2_7
2320408   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 , 
H2x2_7 );
2320409   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2320410   +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
2320411   +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
2320412   +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
2320413   +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
2320414   +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
2320415   +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
2320416   +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
2320417   +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
2320418   +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
2320419   +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
2320420   +   H2x2_6  = EXP(H2x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_6 = EXP(H2x2_6 - _MAX_);
2320421   +   _SUM_ = _SUM_ + H2x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_6 ;
2320422   +   H2x2_7  = EXP(H2x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_7 = EXP(H2x2_7 - _MAX_);
2320423   +   _SUM_ = _SUM_ + H2x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_7 ;
2320424   +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
2320425   +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
2320426   +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
2320427   +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
2320428   +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
2320429   +   H2x2_6  = H2x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 / _SUM_;
2320430   +   H2x2_7  = H2x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_7 = H2x2_7 / _SUM_;
2320431   +END;
MPRINT(EM_DIAGRAM):   END;
2320432   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2320433   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
2320434   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
2320435   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
2320436   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
2320437   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
2320438   +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
2320439   +   H2x2_7  = .;
MPRINT(EM_DIAGRAM):   H2x2_7 = .;
2320440   +END;
MPRINT(EM_DIAGRAM):   END;
2320441   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2320442   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
2320443   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2320444   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2320445   +   H3x1_1  =    -0.39436867680464 * H2x1_1  +    -0.20604911710368 * H2x1_2
2320446   +          +     0.29458107927185 * H2x1_3  +     0.66102662477481 * H2x1_4
2320447   +          +     0.62143406345506 * H2x1_5  +     2.63969484891539 * H2x1_6
2320448   +          +     2.03785323055294 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.39436867680464 * H2x1_1 + -0.20604911710368 * H2x1_2 + 
0.29458107927185 * H2x1_3 + 0.66102662477481 * H2x1_4 + 0.62143406345506 * H2x1_5 + 
2.63969484891539 * H2x1_6 + 2.03785323055294 * H2x1_7 ;
2320449   +   H3x1_2  =     0.14668618790671 * H2x1_1  +     0.53251535375334 * H2x1_2
2320450   +          +     1.73802487245889 * H2x1_3  +    -0.48818058655944 * H2x1_4
2320451   +          +     -0.6987810213409 * H2x1_5  +     1.61216865707221 * H2x1_6
2320452   +          +     0.02086486846601 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.14668618790671 * H2x1_1 + 0.53251535375334 * H2x1_2 + 
1.73802487245889 * H2x1_3 + -0.48818058655944 * H2x1_4 + -0.6987810213409 * H2x1_5 + 
1.61216865707221 * H2x1_6 + 0.02086486846601 * H2x1_7 ;
2320453   +   H3x1_3  =    -1.14054963328594 * H2x1_1  +    -0.75433574423253 * H2x1_2
2320454   +          +     0.06268113862558 * H2x1_3  +     -0.3981826777811 * H2x1_4
2320455   +          +    -0.04081627474016 * H2x1_5  +    -0.18547979458266 * H2x1_6
2320456   +          +     0.40248247309716 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.14054963328594 * H2x1_1 + -0.75433574423253 * H2x1_2 + 
0.06268113862558 * H2x1_3 + -0.3981826777811 * H2x1_4 + -0.04081627474016 * H2x1_5 + 
-0.18547979458266 * H2x1_6 + 0.40248247309716 * H2x1_7 ;
2320457   +   H3x1_4  =    -0.41046431364634 * H2x1_1  +     0.53558649664528 * H2x1_2
2320458   +          +     0.25426413492282 * H2x1_3  +     2.32537388539524 * H2x1_4
2320459   +          +    -0.95624400041487 * H2x1_5  +     -2.1423043357326 * H2x1_6
2320460   +          +     0.70189203885946 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.41046431364634 * H2x1_1 + 0.53558649664528 * H2x1_2 + 
0.25426413492282 * H2x1_3 + 2.32537388539524 * H2x1_4 + -0.95624400041487 * H2x1_5 + 
-2.1423043357326 * H2x1_6 + 0.70189203885946 * H2x1_7 ;
2320461   +   H3x1_5  =    -0.21139932639331 * H2x1_1  +      0.8853172209881 * H2x1_2
2320462   +          +    -0.23025284278478 * H2x1_3  +     1.30433450594503 * H2x1_4
2320463   +          +     1.26145590014333 * H2x1_5  +     0.63126627865104 * H2x1_6
2320464   +          +    -1.88455429451452 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -0.21139932639331 * H2x1_1 + 0.8853172209881 * H2x1_2 + 
-0.23025284278478 * H2x1_3 + 1.30433450594503 * H2x1_4 + 1.26145590014333 * H2x1_5 + 
0.63126627865104 * H2x1_6 + -1.88455429451452 * H2x1_7 ;
2320465   +   H3x1_6  =     0.99645242104414 * H2x1_1  +    -0.17835964967148 * H2x1_2
2320466   +          +     0.06539648561603 * H2x1_3  +     0.97412284078325 * H2x1_4
2320467   +          +     -1.3247680635275 * H2x1_5  +      0.8723025918678 * H2x1_6
2320468   +          +    -0.04328836172134 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.99645242104414 * H2x1_1 + -0.17835964967148 * H2x1_2 + 
0.06539648561603 * H2x1_3 + 0.97412284078325 * H2x1_4 + -1.3247680635275 * H2x1_5 + 
0.8723025918678 * H2x1_6 + -0.04328836172134 * H2x1_7 ;
2320469   +   H3x1_7  =     2.66887548952929 * H2x1_1  +    -0.86289888310949 * H2x1_2
2320470   +          +     1.58137421487648 * H2x1_3  +    -1.37105839507635 * H2x1_4
2320471   +          +    -0.65069986041129 * H2x1_5  +     2.50322156288062 * H2x1_6
2320472   +          +     0.75157328436087 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = 2.66887548952929 * H2x1_1 + -0.86289888310949 * H2x1_2 + 
1.58137421487648 * H2x1_3 + -1.37105839507635 * H2x1_4 + -0.65069986041129 * H2x1_5 + 
2.50322156288062 * H2x1_6 + 0.75157328436087 * H2x1_7 ;
2320473   +   H3x1_1  = H3x1_1  +     1.55317132694755 * H2x2_1
2320474   +          +     1.75656976582641 * H2x2_2  +    -1.25361089552085 * H2x2_3
2320475   +          +    -0.52984461837677 * H2x2_4  +     1.29915117873447 * H2x2_5
2320476   +          +    -1.03942372926622 * H2x2_6  +     0.13722887717178 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 1.55317132694755 * H2x2_1 + 1.75656976582641 * H2x2_2 
+ -1.25361089552085 * H2x2_3 + -0.52984461837677 * H2x2_4 + 1.29915117873447 * H2x2_5 + 
-1.03942372926622 * H2x2_6 + 0.13722887717178 * H2x2_7 ;
2320477   +   H3x1_2  = H3x1_2  +     0.88902418392614 * H2x2_1
2320478   +          +     1.35198205638356 * H2x2_2  +     1.49845421410078 * H2x2_3
2320479   +          +    -1.22318137674998 * H2x2_4  +     1.03485654068494 * H2x2_5
2320480   +          +    -0.88760495649169 * H2x2_6  +    -1.94135868960024 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.88902418392614 * H2x2_1 + 1.35198205638356 * H2x2_2 
+ 1.49845421410078 * H2x2_3 + -1.22318137674998 * H2x2_4 + 1.03485654068494 * H2x2_5 + 
-0.88760495649169 * H2x2_6 + -1.94135868960024 * H2x2_7 ;
2320481   +   H3x1_3  = H3x1_3  +     -0.5232166311723 * H2x2_1
2320482   +          +    -0.49154441995792 * H2x2_2  +     1.21222773866672 * H2x2_3
2320483   +          +     0.88954765096374 * H2x2_4  +     0.32666743913318 * H2x2_5
2320484   +          +     1.26201705110892 * H2x2_6  +    -2.46564869578322 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.5232166311723 * H2x2_1 + -0.49154441995792 * H2x2_2 
+ 1.21222773866672 * H2x2_3 + 0.88954765096374 * H2x2_4 + 0.32666743913318 * H2x2_5 + 
1.26201705110892 * H2x2_6 + -2.46564869578322 * H2x2_7 ;
2320485   +   H3x1_4  = H3x1_4  +     0.93897688204524 * H2x2_1
2320486   +          +    -0.56396325682963 * H2x2_2  +     0.60312223662348 * H2x2_3
2320487   +          +     0.05506195666559 * H2x2_4  +    -1.19478701476792 * H2x2_5
2320488   +          +     1.11111060864544 * H2x2_6  +     0.07602420470068 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.93897688204524 * H2x2_1 + -0.56396325682963 * H2x2_2 
+ 0.60312223662348 * H2x2_3 + 0.05506195666559 * H2x2_4 + -1.19478701476792 * H2x2_5 + 
1.11111060864544 * H2x2_6 + 0.07602420470068 * H2x2_7 ;
2320489   +   H3x1_5  = H3x1_5  +    -2.04067007195299 * H2x2_1
2320490   +          +    -0.24511447740547 * H2x2_2  +      1.1403782608351 * H2x2_3
2320491   +          +     0.28313253531571 * H2x2_4  +    -0.31001305293935 * H2x2_5
2320492   +          +     1.43972694265244 * H2x2_6  +     0.27081966717726 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -2.04067007195299 * H2x2_1 + -0.24511447740547 * 
H2x2_2 + 1.1403782608351 * H2x2_3 + 0.28313253531571 * H2x2_4 + -0.31001305293935 * H2x2_5 + 
1.43972694265244 * H2x2_6 + 0.27081966717726 * H2x2_7 ;
2320493   +   H3x1_6  = H3x1_6  +     1.53918759970091 * H2x2_1
2320494   +          +    -1.36834652818881 * H2x2_2  +    -0.97354088259421 * H2x2_3
2320495   +          +     0.73052173697294 * H2x2_4  +     1.34716412811946 * H2x2_5
2320496   +          +     1.66261041249676 * H2x2_6  +    -0.99719318696356 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + 1.53918759970091 * H2x2_1 + -1.36834652818881 * H2x2_2 
+ -0.97354088259421 * H2x2_3 + 0.73052173697294 * H2x2_4 + 1.34716412811946 * H2x2_5 + 
1.66261041249676 * H2x2_6 + -0.99719318696356 * H2x2_7 ;
2320497   +   H3x1_7  = H3x1_7  +     1.11994694673604 * H2x2_1
2320498   +          +     -1.6803356528873 * H2x2_2  +    -0.12962793678977 * H2x2_3
2320499   +          +    -0.71896094589725 * H2x2_4  +     0.46037684620833 * H2x2_5
2320500   +          +     0.25911483872618 * H2x2_6  +     1.00876479730932 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = H3x1_7 + 1.11994694673604 * H2x2_1 + -1.6803356528873 * H2x2_2 
+ -0.12962793678977 * H2x2_3 + -0.71896094589725 * H2x2_4 + 0.46037684620833 * H2x2_5 + 
0.25911483872618 * H2x2_6 + 1.00876479730932 * H2x2_7 ;
2320501   +   H3x1_1  =     1.52228889950912 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.52228889950912 + H3x1_1 ;
2320502   +   H3x1_2  =    -0.46625781761332 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.46625781761332 + H3x1_2 ;
2320503   +   H3x1_3  =     0.11008388635615 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.11008388635615 + H3x1_3 ;
2320504   +   H3x1_4  =    -0.38333236869719 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.38333236869719 + H3x1_4 ;
2320505   +   H3x1_5  =    -1.36620648378402 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -1.36620648378402 + H3x1_5 ;
2320506   +   H3x1_6  =     0.41780608126276 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.41780608126276 + H3x1_6 ;
2320507   +   H3x1_7  =    -0.69490040783623 + H3x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = -0.69490040783623 + H3x1_7 ;
2320508   +   H3x1_1  = SIN(H3x1_1 );
MPRINT(EM_DIAGRAM):   H3x1_1 = SIN(H3x1_1 );
2320509   +   H3x1_2  = SIN(H3x1_2 );
MPRINT(EM_DIAGRAM):   H3x1_2 = SIN(H3x1_2 );
2320510   +   H3x1_3  = SIN(H3x1_3 );
MPRINT(EM_DIAGRAM):   H3x1_3 = SIN(H3x1_3 );
2320511   +   H3x1_4  = SIN(H3x1_4 );
MPRINT(EM_DIAGRAM):   H3x1_4 = SIN(H3x1_4 );
2320512   +   H3x1_5  = SIN(H3x1_5 );
MPRINT(EM_DIAGRAM):   H3x1_5 = SIN(H3x1_5 );
2320513   +   H3x1_6  = SIN(H3x1_6 );
MPRINT(EM_DIAGRAM):   H3x1_6 = SIN(H3x1_6 );
2320514   +   H3x1_7  = SIN(H3x1_7 );
MPRINT(EM_DIAGRAM):   H3x1_7 = SIN(H3x1_7 );
2320515   +END;
MPRINT(EM_DIAGRAM):   END;
2320516   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2320517   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
2320518   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
2320519   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
2320520   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
2320521   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
2320522   +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
2320523   +   H3x1_7  = .;
MPRINT(EM_DIAGRAM):   H3x1_7 = .;
2320524   +END;
MPRINT(EM_DIAGRAM):   END;
2320525   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2320526   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2320527   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2320528   +
2320529   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2320530   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2320531   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2320532   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2320533   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2320534   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2320535   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2320536   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2320537   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2320538   +end;
MPRINT(EM_DIAGRAM):   end;
2320539   +else do;
MPRINT(EM_DIAGRAM):   else do;
2320540   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2320541   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2320542   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2320543   +   end;
MPRINT(EM_DIAGRAM):   end;
2320544   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2320545   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2320546   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2320547   +   end;
MPRINT(EM_DIAGRAM):   end;
2320548   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2320549   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2320550   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2320551   +   end;
MPRINT(EM_DIAGRAM):   end;
2320552   +end;
MPRINT(EM_DIAGRAM):   end;
2320553   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2320554   +   P_DepVar1  =    -2.07102874283902 * H3x1_1  +     2.04799607124649 * H3x1_2
2320555   +          +    -0.05444449856749 * H3x1_3  +    -3.76440287030853 * H3x1_4
2320556   +          +    -0.62776678498994 * H3x1_5  +    -1.00383135301243 * H3x1_6
2320557   +          +     2.26027843968818 * H3x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.07102874283902 * H3x1_1 + 2.04799607124649 * H3x1_2 + 
-0.05444449856749 * H3x1_3 + -3.76440287030853 * H3x1_4 + -0.62776678498994 * H3x1_5 + 
-1.00383135301243 * H3x1_6 + 2.26027843968818 * H3x1_7 ;
2320558   +   P_DepVar1  =     0.51137297979162 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.51137297979162 + P_DepVar1 ;
2320559   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2320560   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2320561   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2320562   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2320563   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2320564   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2320565   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2320566   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2320567   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2320568   +END;
MPRINT(EM_DIAGRAM):   END;
2320569   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2320570   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2320571   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2320572   +END;
MPRINT(EM_DIAGRAM):   END;
2320573   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2320574   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2320575   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2320576   +END;
MPRINT(EM_DIAGRAM):   END;
2320577   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2320578   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2320579   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2320580   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2320581   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2320582   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2320583   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2320584   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2320585   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2320586   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2320587   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2320588   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2320589   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2320590   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2320591   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2320592   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2320593   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2320594   +END;
MPRINT(EM_DIAGRAM):   END;
2320595   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2320596   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2320597   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2320598   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2320599   +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
2320600   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2320601   +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
2320602   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2320603   +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
2320604   +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
2320605   +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
2320606   +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
2320607   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2320608   +* Renaming Into variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural12;
2320609   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2320610   +length AutoNeural12_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural12_I_DepVar $32;
2320611   +drop AutoNeural12_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_I_DepVar;
2320612   +AutoNeural12_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural12_I_DepVar = I_DepVar;
2320613   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2320614   +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
2320615   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2320616   +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
2320617   +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
2320618   +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
2320619   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2320620   +* Ensmbl38: Voting to produce predicted target;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Voting to produce predicted target;
2320621   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2320622   +array Ensmbl38_post{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl38_post{2} _temporary_;
2320623   +array Ensmbl38_count{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl38_count{2} _temporary_;
2320624   +array Ensmbl38_level{2} $32 _temporary_ (
2320625   +"1"
2320626   +"0"
2320627   +);
MPRINT(EM_DIAGRAM):   array Ensmbl38_level{2} $32 _temporary_ ( "1" "0" );
2320628   +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
2320629   +Ensmbl38_post{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{i} = 0;
2320630   +Ensmbl38_count{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{i} = 0;
2320631   +end;
MPRINT(EM_DIAGRAM):   end;
2320632   +if AutoNeural6_I_DepVar = Ensmbl38_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural6_I_DepVar = Ensmbl38_level{1} then do;
2320633   +Ensmbl38_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{1} + 1;
2320634   +Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural6_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural6_P_DepVar1;
2320635   +end;
MPRINT(EM_DIAGRAM):   end;
2320636   +if AutoNeural7_I_DepVar = Ensmbl38_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural7_I_DepVar = Ensmbl38_level{1} then do;
2320637   +Ensmbl38_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{1} + 1;
2320638   +Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural7_P_DepVar1;
2320639   +end;
MPRINT(EM_DIAGRAM):   end;
2320640   +if AutoNeural8_I_DepVar = Ensmbl38_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural8_I_DepVar = Ensmbl38_level{1} then do;
2320641   +Ensmbl38_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{1} + 1;
2320642   +Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural8_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural8_P_DepVar1;
2320643   +end;
MPRINT(EM_DIAGRAM):   end;
2320644   +if AutoNeural10_I_DepVar = Ensmbl38_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural10_I_DepVar = Ensmbl38_level{1} then do;
2320645   +Ensmbl38_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{1} + 1;
2320646   +Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural10_P_DepVar1;
2320647   +end;
MPRINT(EM_DIAGRAM):   end;
2320648   +if AutoNeural9_I_DepVar = Ensmbl38_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural9_I_DepVar = Ensmbl38_level{1} then do;
2320649   +Ensmbl38_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{1} + 1;
2320650   +Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural9_P_DepVar1;
2320651   +end;
MPRINT(EM_DIAGRAM):   end;
2320652   +if AutoNeural11_I_DepVar = Ensmbl38_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural11_I_DepVar = Ensmbl38_level{1} then do;
2320653   +Ensmbl38_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{1} + 1;
2320654   +Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural11_P_DepVar1;
2320655   +end;
MPRINT(EM_DIAGRAM):   end;
2320656   +if AutoNeural12_I_DepVar = Ensmbl38_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural12_I_DepVar = Ensmbl38_level{1} then do;
2320657   +Ensmbl38_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{1} + 1;
2320658   +Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{1}=Ensmbl38_post{1}+ AutoNeural12_P_DepVar1;
2320659   +end;
MPRINT(EM_DIAGRAM):   end;
2320660   +if AutoNeural6_I_DepVar = Ensmbl38_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural6_I_DepVar = Ensmbl38_level{2} then do;
2320661   +Ensmbl38_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{2} + 1;
2320662   +Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural6_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural6_P_DepVar0;
2320663   +end;
MPRINT(EM_DIAGRAM):   end;
2320664   +if AutoNeural7_I_DepVar = Ensmbl38_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural7_I_DepVar = Ensmbl38_level{2} then do;
2320665   +Ensmbl38_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{2} + 1;
2320666   +Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural7_P_DepVar0;
2320667   +end;
MPRINT(EM_DIAGRAM):   end;
2320668   +if AutoNeural8_I_DepVar = Ensmbl38_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural8_I_DepVar = Ensmbl38_level{2} then do;
2320669   +Ensmbl38_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{2} + 1;
2320670   +Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural8_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural8_P_DepVar0;
2320671   +end;
MPRINT(EM_DIAGRAM):   end;
2320672   +if AutoNeural10_I_DepVar = Ensmbl38_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural10_I_DepVar = Ensmbl38_level{2} then do;
2320673   +Ensmbl38_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{2} + 1;
2320674   +Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural10_P_DepVar0;
2320675   +end;
MPRINT(EM_DIAGRAM):   end;
2320676   +if AutoNeural9_I_DepVar = Ensmbl38_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural9_I_DepVar = Ensmbl38_level{2} then do;
2320677   +Ensmbl38_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{2} + 1;
2320678   +Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural9_P_DepVar0;
2320679   +end;
MPRINT(EM_DIAGRAM):   end;
2320680   +if AutoNeural11_I_DepVar = Ensmbl38_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural11_I_DepVar = Ensmbl38_level{2} then do;
2320681   +Ensmbl38_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{2} + 1;
2320682   +Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural11_P_DepVar0;
2320683   +end;
MPRINT(EM_DIAGRAM):   end;
2320684   +if AutoNeural12_I_DepVar = Ensmbl38_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural12_I_DepVar = Ensmbl38_level{2} then do;
2320685   +Ensmbl38_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl38_count{2} + 1;
2320686   +Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl38_post{2}=Ensmbl38_post{2}+ AutoNeural12_P_DepVar0;
2320687   +end;
MPRINT(EM_DIAGRAM):   end;
2320688   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2320689   +* Ensmbl38: Determine Into Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Determine Into Variable;
2320690   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2320691   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
2320692   +drop i vote_count vote_post;
MPRINT(EM_DIAGRAM):   drop i vote_count vote_post;
2320693   +vote_count = max(
2320694   +Ensmbl38_count{1} ,
2320695   +Ensmbl38_count{2}
2320696   +);
MPRINT(EM_DIAGRAM):   vote_count = max( Ensmbl38_count{1} , Ensmbl38_count{2} );
2320697   +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
2320698   +if Ensmbl38_count{i}=vote_count and Ensmbl38_post{i}>vote_post then do;
MPRINT(EM_DIAGRAM):   if Ensmbl38_count{i}=vote_count and Ensmbl38_post{i}>vote_post then do;
2320699   +I_DepVar = Ensmbl38_level{i};
MPRINT(EM_DIAGRAM):   I_DepVar = Ensmbl38_level{i};
2320700   +vote_post = Ensmbl38_count{i};
MPRINT(EM_DIAGRAM):   vote_post = Ensmbl38_count{i};
2320701   +end;
MPRINT(EM_DIAGRAM):   end;
2320702   +end;
MPRINT(EM_DIAGRAM):   end;
2320703   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2320704   +* Ensmbl38: Compute posterior vars using models predicting the chosen level;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Compute posterior vars using models predicting the chosen 
level;
2320705   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2320706   +P_DepVar1 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
2320707   +P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2320708   +if I_DepVar = AutoNeural6_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural6_I_DepVar then do;
2320709   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural6_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural6_P_DepVar1;
2320710   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural6_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural6_P_DepVar0;
2320711   +end;
MPRINT(EM_DIAGRAM):   end;
2320712   +if I_DepVar = AutoNeural7_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural7_I_DepVar then do;
2320713   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural7_P_DepVar1;
2320714   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural7_P_DepVar0;
2320715   +end;
MPRINT(EM_DIAGRAM):   end;
2320716   +if I_DepVar = AutoNeural8_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural8_I_DepVar then do;
2320717   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural8_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural8_P_DepVar1;
2320718   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural8_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural8_P_DepVar0;
2320719   +end;
MPRINT(EM_DIAGRAM):   end;
2320720   +if I_DepVar = AutoNeural10_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural10_I_DepVar then do;
2320721   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural10_P_DepVar1;
2320722   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural10_P_DepVar0;
2320723   +end;
MPRINT(EM_DIAGRAM):   end;
2320724   +if I_DepVar = AutoNeural9_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural9_I_DepVar then do;
2320725   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural9_P_DepVar1;
2320726   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural9_P_DepVar0;
2320727   +end;
MPRINT(EM_DIAGRAM):   end;
2320728   +if I_DepVar = AutoNeural11_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural11_I_DepVar then do;
2320729   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural11_P_DepVar1;
2320730   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural11_P_DepVar0;
2320731   +end;
MPRINT(EM_DIAGRAM):   end;
2320732   +if I_DepVar = AutoNeural12_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural12_I_DepVar then do;
2320733   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural12_P_DepVar1;
2320734   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural12_P_DepVar0;
2320735   +end;
MPRINT(EM_DIAGRAM):   end;
2320736   +* Ensmbl38: Averaging posterior;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Averaging posterior;
2320737   +P_DepVar1 = P_DepVar1/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1/vote_count;
2320738   +P_DepVar0 = P_DepVar0/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0/vote_count;
2320739   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2320740   +* Ensmbl38: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Producing Unformatted variable;
2320741   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2320742   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
2320743   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
2320744   +else
2320745   +if I_DepVar = '0' then U_DepVar = 0;
The SAS System

MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
2320746   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2320747   +* Ensmbl38: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Computing _WARN_ Variable;
2320748   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2320749   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2320750   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
2320751   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
2320752   +if index(AUTONEURAL6_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2320752  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2320753   +if index(AUTONEURAL6_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2320753  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2320754   +if index(AUTONEURAL6_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2320754  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2320755   +if index(AUTONEURAL6_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2320755  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2320756   +if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2320756  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2320757   +if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2320757  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2320758   +if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2320758  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2320759   +if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2320759  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2320760   +if index(AUTONEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2320760  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2320761   +if index(AUTONEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2320761  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2320762   +if index(AUTONEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2320762  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2320763   +if index(AUTONEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2320763  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2320764   +if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2320764  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2320765   +if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2320765  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2320766   +if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2320766  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2320767   +if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2320767  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2320768   +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2320768  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2320769   +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2320769  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2320770   +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2320770  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2320771   +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2320771  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2320772   +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2320772  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2320773   +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2320773  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2320774   +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2320774  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2320775   +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2320775  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2320776   +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2320776  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2320777   +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2320777  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2320778   +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2320778  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2320779   +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2320779  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2320780   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2320781   +* Ensmbl38: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Computing Residual Vars;
2320782   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2320783   +if
2320784   +F_DepVar NE '1'
2320785   +AND F_DepVar NE '0'
2320786   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
2320787   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2320788   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2320789   +end;
MPRINT(EM_DIAGRAM):   end;
2320790   +else do;
MPRINT(EM_DIAGRAM):   else do;
2320791   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
2320792   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
2320793   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
2320794   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
2320795   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
2320796   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
2320797   +END;
MPRINT(EM_DIAGRAM):   END;
2320798   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2320799    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL38_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL6_VALIDATE.VIEW used (Total process time):
      real time           0.22 seconds
      cpu time            0.23 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.23 seconds
      cpu time            0.23 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2320800    quit;
2320801    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl38_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl38_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl38_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl38_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl38_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
2320861    filename _pref
2320861  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural6\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural6\EMPUBLISHSCORE.sas";
2320862    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2320863    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural6\EMPUBLISHSCORE.sas.
2320864   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2320865   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2320866   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2320867   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2320868   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2320869   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2320870   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2320871   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2320872   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2320873   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2320874   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2320875   +LENGTH _WARN_ $4
2320876   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2320877   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2320878   +
2320879   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2320880   +
2320881   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2320882   +
2320883   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2320884   +
2320885   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2320886   +
2320887   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2320888   +
2320889   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2320890   +
2320891   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2320892   +
2320893   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2320894   +
2320895   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2320896   +
2320897   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2320898   +
2320899   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2320900   +
2320901   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2320902   +
2320903   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2320904   +
2320905   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2320906   +
2320907   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2320908   +
2320909   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2320910   +
2320911   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2320912   +
2320913   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2320914   +
2320915   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2320916   +
2320917   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2320918   +
2320919   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2320920   +
2320921   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2320922   +
2320923   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2320924   +
2320925   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2320926   +
2320927   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2320928   +
2320929   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2320930   +
2320931   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2320932   +
2320933   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2320934   +
2320935   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2320936   +
2320937   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2320938   +
2320939   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2320940   +
2320941   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2320942   +
2320943   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2320944   +
2320945   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2320946   +
2320947   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2320948   +
2320949   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2320950   +
2320951   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2320952   +
2320953   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2320954   +
2320955   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2320956   +
2320957   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2320958   +
2320959   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2320960   +
2320961   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
2320962   +
2320963   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
2320964   +
2320965   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2320966   +
2320967   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2320968   +
2320969   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2320970   +
2320971   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2320972   +
2320973   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2320974   +
2320975   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2320976   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2320977   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2320978   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2320979   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2320980   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2320981   +end;
MPRINT(EM_DIAGRAM):   end;
2320982   +else do;
MPRINT(EM_DIAGRAM):   else do;
2320983   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2320984   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2320985   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2320986   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2320987   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2320988   +   end;
MPRINT(EM_DIAGRAM):   end;
2320989   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2320990   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2320991   +   end;
MPRINT(EM_DIAGRAM):   end;
2320992   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2320993   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2320994   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2320995   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2320996   +   end;
MPRINT(EM_DIAGRAM):   end;
2320997   +end;
MPRINT(EM_DIAGRAM):   end;
2320998   +
2320999   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2321000   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2321001   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2321002   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2321003   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2321004   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2321005   +end;
MPRINT(EM_DIAGRAM):   end;
2321006   +else do;
MPRINT(EM_DIAGRAM):   else do;
2321007   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2321008   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2321009   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2321010   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2321011   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2321012   +   end;
MPRINT(EM_DIAGRAM):   end;
2321013   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2321014   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2321015   +   end;
MPRINT(EM_DIAGRAM):   end;
2321016   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2321017   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2321018   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2321019   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2321020   +   end;
MPRINT(EM_DIAGRAM):   end;
2321021   +end;
MPRINT(EM_DIAGRAM):   end;
2321022   +
2321023   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2321024   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2321025   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2321026   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2321027   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2321028   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2321029   +end;
MPRINT(EM_DIAGRAM):   end;
2321030   +else do;
MPRINT(EM_DIAGRAM):   else do;
2321031   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2321032   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2321033   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2321034   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2321035   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2321036   +   end;
MPRINT(EM_DIAGRAM):   end;
2321037   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2321038   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2321039   +   end;
MPRINT(EM_DIAGRAM):   end;
2321040   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2321041   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2321042   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2321043   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2321044   +   end;
MPRINT(EM_DIAGRAM):   end;
2321045   +end;
MPRINT(EM_DIAGRAM):   end;
2321046   +
2321047   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2321048   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2321049   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2321050   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2321051   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2321052   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2321053   +end;
MPRINT(EM_DIAGRAM):   end;
2321054   +else do;
MPRINT(EM_DIAGRAM):   else do;
2321055   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2321056   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2321057   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2321058   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2321059   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2321060   +   end;
MPRINT(EM_DIAGRAM):   end;
2321061   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2321062   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2321063   +   end;
MPRINT(EM_DIAGRAM):   end;
2321064   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2321065   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2321066   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2321067   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2321068   +   end;
MPRINT(EM_DIAGRAM):   end;
2321069   +end;
MPRINT(EM_DIAGRAM):   end;
2321070   +
2321071   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2321072   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2321073   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2321074   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2321075   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2321076   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2321077   +end;
MPRINT(EM_DIAGRAM):   end;
2321078   +else do;
MPRINT(EM_DIAGRAM):   else do;
2321079   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2321080   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2321081   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2321082   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2321083   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2321084   +   end;
MPRINT(EM_DIAGRAM):   end;
2321085   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2321086   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2321087   +   end;
MPRINT(EM_DIAGRAM):   end;
2321088   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2321089   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2321090   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2321091   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2321092   +   end;
MPRINT(EM_DIAGRAM):   end;
2321093   +end;
MPRINT(EM_DIAGRAM):   end;
2321094   +
2321095   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2321096   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2321097   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2321098   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2321099   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2321100   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2321101   +end;
MPRINT(EM_DIAGRAM):   end;
2321102   +else do;
MPRINT(EM_DIAGRAM):   else do;
2321103   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2321104   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2321105   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2321106   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2321107   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2321108   +   end;
MPRINT(EM_DIAGRAM):   end;
2321109   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2321110   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2321111   +   end;
MPRINT(EM_DIAGRAM):   end;
2321112   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2321113   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2321114   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2321115   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2321116   +   end;
MPRINT(EM_DIAGRAM):   end;
2321117   +end;
MPRINT(EM_DIAGRAM):   end;
2321118   +
2321119   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2321120   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2321121   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2321122   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2321123   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2321124   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2321125   +end;
MPRINT(EM_DIAGRAM):   end;
2321126   +else do;
MPRINT(EM_DIAGRAM):   else do;
2321127   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2321128   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2321129   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2321130   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2321131   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2321132   +   end;
MPRINT(EM_DIAGRAM):   end;
2321133   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2321134   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2321135   +   end;
MPRINT(EM_DIAGRAM):   end;
2321136   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2321137   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2321138   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2321139   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2321140   +   end;
MPRINT(EM_DIAGRAM):   end;
2321141   +end;
MPRINT(EM_DIAGRAM):   end;
2321142   +
2321143   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2321144   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2321145   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2321146   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2321147   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2321148   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2321149   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2321150   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2321151   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2321152   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2321153   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2321154   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2321155   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2321156   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2321157   +end;
MPRINT(EM_DIAGRAM):   end;
2321158   +else do;
MPRINT(EM_DIAGRAM):   else do;
2321159   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2321160   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2321161   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2321162   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2321163   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2321164   +   end;
MPRINT(EM_DIAGRAM):   end;
2321165   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2321166   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2321167   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2321168   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2321169   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2321170   +   end;
MPRINT(EM_DIAGRAM):   end;
2321171   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2321172   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2321173   +   end;
MPRINT(EM_DIAGRAM):   end;
2321174   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2321175   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2321176   +   end;
MPRINT(EM_DIAGRAM):   end;
2321177   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2321178   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2321179   +   end;
MPRINT(EM_DIAGRAM):   end;
2321180   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2321181   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2321182   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2321183   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2321184   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2321185   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2321186   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2321187   +   end;
MPRINT(EM_DIAGRAM):   end;
2321188   +end;
MPRINT(EM_DIAGRAM):   end;
2321189   +
2321190   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2321191   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2321192   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2321193   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2321194   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2321195   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2321196   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2321197   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2321198   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2321199   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2321200   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2321201   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2321202   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2321203   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2321204   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2321205   +end;
MPRINT(EM_DIAGRAM):   end;
2321206   +else do;
MPRINT(EM_DIAGRAM):   else do;
2321207   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2321208   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2321209   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2321210   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2321211   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2321212   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2321213   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2321214   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2321215   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2321216   +         end;
MPRINT(EM_DIAGRAM):   end;
2321217   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2321218   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2321219   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2321220   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2321221   +            end;
MPRINT(EM_DIAGRAM):   end;
2321222   +         end;
MPRINT(EM_DIAGRAM):   end;
2321223   +      end;
MPRINT(EM_DIAGRAM):   end;
2321224   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2321225   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2321226   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2321227   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2321228   +         end;
MPRINT(EM_DIAGRAM):   end;
2321229   +      end;
MPRINT(EM_DIAGRAM):   end;
2321230   +   end;
MPRINT(EM_DIAGRAM):   end;
2321231   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2321232   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2321233   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2321234   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2321235   +      end;
MPRINT(EM_DIAGRAM):   end;
2321236   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2321237   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2321238   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2321239   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2321240   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2321241   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2321242   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2321243   +         end;
MPRINT(EM_DIAGRAM):   end;
2321244   +      end;
MPRINT(EM_DIAGRAM):   end;
2321245   +   end;
MPRINT(EM_DIAGRAM):   end;
2321246   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2321247   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2321248   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2321249   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2321250   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2321251   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2321252   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2321253   +   end;
MPRINT(EM_DIAGRAM):   end;
2321254   +end;
MPRINT(EM_DIAGRAM):   end;
2321255   +
2321256   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2321257   +*** Checking missing input Interval
2321258   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2321259   +
2321260   +IF NMISS(
2321261   +   AcceptedCmpTotal ,
2321262   +   Age ,
2321263   +   Frq ,
2321264   +   Income ,
2321265   +   Kidhome ,
2321266   +   Mnt ,
2321267   +   MntFishProducts ,
2321268   +   MntFruits ,
2321269   +   MntGoldProds ,
2321270   +   MntMeatProducts ,
2321271   +   MntSweetProducts ,
2321272   +   MntWines ,
2321273   +   MonthsAsCustomer ,
2321274   +   NumCatalogPurchases ,
2321275   +   NumDealsPurchases ,
2321276   +   NumDistPurchases ,
2321277   +   NumStorePurchases ,
2321278   +   NumWebPurchases ,
2321279   +   NumWebVisitsMonth ,
2321280   +   RFMstat ,
2321281   +   RMntFrq ,
2321282   +   Recency ,
2321283   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2321284   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2321285   +
2321286   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2321287   +END;
MPRINT(EM_DIAGRAM):   END;
2321288   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2321289   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2321290   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2321291   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2321292   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2321293   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2321294   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2321295   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2321296   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2321297   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2321298   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2321299   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2321300   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2321301   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2321302   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2321303   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2321304   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2321305   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2321306   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2321307   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2321308   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2321309   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2321310   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2321311   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2321312   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2321313   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2321314   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2321315   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2321316   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2321317   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2321318   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2321319   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2321320   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2321321   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2321322   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2321323   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2321324   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2321325   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2321326   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2321327   +END;
MPRINT(EM_DIAGRAM):   END;
2321328   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2321329   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2321330   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2321331   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2321332   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2321333   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2321334   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2321335   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2321336   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2321337   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2321338   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2321339   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2321340   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2321341   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2321342   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2321343   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2321344   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2321345   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2321346   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2321347   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2321348   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2321349   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2321350   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2321351   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2321352   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2321353   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2321354   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2321355   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2321356   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2321357   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2321358   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2321359   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2321360   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2321361   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2321362   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2321363   +   ELSE S_NumCatalogPurchases
2321364   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2321365   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2321366   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2321367   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2321368   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2321369   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2321370   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2321371   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2321372   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2321373   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2321374   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2321375   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2321376   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2321377   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2321378   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2321379   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2321380   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2321381   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2321382   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2321383   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2321384   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2321385   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2321386   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2321387   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2321388   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2321389   +END;
MPRINT(EM_DIAGRAM):   END;
2321390   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2321391   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2321392   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2321393   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2321394   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2321395   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2321396   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2321397   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2321398   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2321399   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2321400   +   H1x1_1  =    -3.58610125218709 * S_AcceptedCmpTotal
2321401   +          +      0.1034811843747 * S_Age  +     0.39544028595127 * S_Frq
2321402   +          +    -0.18231722539263 * S_Income  +    -0.03870407570941 *
2321403   +        S_Kidhome  +    -1.16091345020536 * S_Mnt  +     1.24392687313576 *
2321404   +        S_MntFishProducts  +      0.5171197802007 * S_MntFruits
2321405   +          +    -0.29481140967179 * S_MntGoldProds  +     -6.3245339832634 *
2321406   +        S_MntMeatProducts  +     0.05701652400298 * S_MntSweetProducts
2321407   +          +     2.01183524149713 * S_MntWines  +      0.1559752121464 *
2321408   +        S_MonthsAsCustomer  +    -0.99459554032634 * S_NumCatalogPurchases
2321409   +          +    -1.19682864242203 * S_NumDealsPurchases
2321410   +          +     0.18491015618084 * S_NumDistPurchases
2321411   +          +     1.22999585210812 * S_NumStorePurchases
2321412   +          +     1.21627782358382 * S_NumWebPurchases
2321413   +          +    -0.64580024249846 * S_NumWebVisitsMonth
2321414   +          +       -1.52926696879 * S_RFMstat  +     0.09101674367882 *
2321415   +        S_RMntFrq  +     0.46175359879811 * S_Recency
2321416   +          +      0.1705852499504 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -3.58610125218709 * S_AcceptedCmpTotal + 0.1034811843747 * 
S_Age + 0.39544028595127 * S_Frq + -0.18231722539263 * S_Income + -0.03870407570941 * 
S_Kidhome + -1.16091345020536 * S_Mnt + 1.24392687313576 * S_MntFishProducts + 0.5171197802007 
* S_MntFruits + -0.29481140967179 * S_MntGoldProds + -6.3245339832634 * S_MntMeatProducts + 
0.05701652400298 * S_MntSweetProducts + 2.01183524149713 * S_MntWines + 0.1559752121464 * 
S_MonthsAsCustomer + -0.99459554032634 * S_NumCatalogPurchases + -1.19682864242203 * 
S_NumDealsPurchases + 0.18491015618084 * S_NumDistPurchases + 1.22999585210812 * 
S_NumStorePurchases + 1.21627782358382 * S_NumWebPurchases + -0.64580024249846 * 
S_NumWebVisitsMonth + -1.52926696879 * S_RFMstat + 0.09101674367882 * S_RMntFrq + 
0.46175359879811 * S_Recency + 0.1705852499504 * S_Teenhome ;
2321417   +   H1x1_1  = H1x1_1  +     2.18474005035414 * AcceptedCmp10
2321418   +          +    -1.53162389083003 * AcceptedCmp20  +    -2.29277671168891 *
2321419   +        AcceptedCmp30  +    -1.81334015960325 * AcceptedCmp40
2321420   +          +     3.00906427900623 * AcceptedCmp50  +    -0.01785398957027 *
2321421   +        Complain0  +     0.09533245215119 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 2.18474005035414 * AcceptedCmp10 + -1.53162389083003 * 
AcceptedCmp20 + -2.29277671168891 * AcceptedCmp30 + -1.81334015960325 * AcceptedCmp40 + 
3.00906427900623 * AcceptedCmp50 + -0.01785398957027 * Complain0 + 0.09533245215119 * 
HigherEducationBinary0 ;
2321422   +   H1x1_1  = H1x1_1  +    -0.19679105832724 * Education2n_Cycle
2321423   +          +    -0.01818107423643 * EducationBasic  +    -0.18996010075668 *
2321424   +        EducationGraduation  +     0.09891975371592 * EducationMaster
2321425   +          +     0.22010007588989 * Marital_StatusDivorced
2321426   +          +    -0.15233151420698 * Marital_StatusMarried
2321427   +          +    -0.03753447021411 * Marital_StatusSingle
2321428   +          +    -0.12393264098828 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.19679105832724 * Education2n_Cycle + 
-0.01818107423643 * EducationBasic + -0.18996010075668 * EducationGraduation + 
0.09891975371592 * EducationMaster + 0.22010007588989 * Marital_StatusDivorced + 
-0.15233151420698 * Marital_StatusMarried + -0.03753447021411 * Marital_StatusSingle + 
-0.12393264098828 * Marital_StatusTogether ;
2321429   +   H1x1_1  =    -2.03360566990293 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.03360566990293 + H1x1_1 ;
2321430   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2321431   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2321432   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2321433   +END;
MPRINT(EM_DIAGRAM):   END;
2321434   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2321435   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2321436   +END;
MPRINT(EM_DIAGRAM):   END;
2321437   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2321438   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2321439   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2321440   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2321441   +   H1x2_1  =    -1.34015862386497 * S_AcceptedCmpTotal
2321442   +          +    -0.12636545702442 * S_Age  +     -0.5924835968803 * S_Frq
2321443   +          +    -1.16470189655356 * S_Income  +     0.83635320773782 *
2321444   +        S_Kidhome  +     0.46426970005348 * S_Mnt  +      0.0582061340736 *
2321445   +        S_MntFishProducts  +     0.03283536111015 * S_MntFruits
2321446   +          +    -0.17688658751969 * S_MntGoldProds  +    -1.46234100343269 *
2321447   +        S_MntMeatProducts  +     0.00799959000074 * S_MntSweetProducts
2321448   +          +    -0.08957801596115 * S_MntWines  +     0.12596915108875 *
2321449   +        S_MonthsAsCustomer  +    -1.16745981687215 * S_NumCatalogPurchases
2321450   +          +    -0.66146733174161 * S_NumDealsPurchases
2321451   +          +     1.52784459399302 * S_NumDistPurchases
2321452   +          +     1.49997699453958 * S_NumStorePurchases
2321453   +          +     0.63969125024997 * S_NumWebPurchases
2321454   +          +    -2.09769625435387 * S_NumWebVisitsMonth
2321455   +          +    -0.01970574649071 * S_RFMstat  +     1.32583910804448 *
2321456   +        S_RMntFrq  +     2.03378172701659 * S_Recency
2321457   +          +     0.55759907248821 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.34015862386497 * S_AcceptedCmpTotal + -0.12636545702442 * 
S_Age + -0.5924835968803 * S_Frq + -1.16470189655356 * S_Income + 0.83635320773782 * S_Kidhome 
+ 0.46426970005348 * S_Mnt + 0.0582061340736 * S_MntFishProducts + 0.03283536111015 * 
S_MntFruits + -0.17688658751969 * S_MntGoldProds + -1.46234100343269 * S_MntMeatProducts + 
0.00799959000074 * S_MntSweetProducts + -0.08957801596115 * S_MntWines + 0.12596915108875 * 
S_MonthsAsCustomer + -1.16745981687215 * S_NumCatalogPurchases + -0.66146733174161 * 
S_NumDealsPurchases + 1.52784459399302 * S_NumDistPurchases + 1.49997699453958 * 
S_NumStorePurchases + 0.63969125024997 * S_NumWebPurchases + -2.09769625435387 * 
S_NumWebVisitsMonth + -0.01970574649071 * S_RFMstat + 1.32583910804448 * S_RMntFrq + 
2.03378172701659 * S_Recency + 0.55759907248821 * S_Teenhome ;
2321458   +   H1x2_1  = H1x2_1  +    -0.24193029168147 * AcceptedCmp10
2321459   +          +    -0.28450683390946 * AcceptedCmp20  +     -0.0683858491191 *
2321460   +        AcceptedCmp30  +    -0.15614087988626 * AcceptedCmp40
2321461   +          +    -0.00784031523012 * AcceptedCmp50  +    -0.11434662666735 *
2321462   +        Complain0  +     0.17135914429981 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.24193029168147 * AcceptedCmp10 + -0.28450683390946 
* AcceptedCmp20 + -0.0683858491191 * AcceptedCmp30 + -0.15614087988626 * AcceptedCmp40 + 
-0.00784031523012 * AcceptedCmp50 + -0.11434662666735 * Complain0 + 0.17135914429981 * 
HigherEducationBinary0 ;
2321463   +   H1x2_1  = H1x2_1  +    -0.91069327306501 * Education2n_Cycle
2321464   +          +     0.63283182620199 * EducationBasic  +     0.06874518657922 *
2321465   +        EducationGraduation  +     0.29783240130451 * EducationMaster
2321466   +          +    -0.26556711862055 * Marital_StatusDivorced
2321467   +          +     1.14529440208202 * Marital_StatusMarried
2321468   +          +    -1.05822467297368 * Marital_StatusSingle
2321469   +          +     1.15985285453738 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.91069327306501 * Education2n_Cycle + 
0.63283182620199 * EducationBasic + 0.06874518657922 * EducationGraduation + 0.29783240130451 
* EducationMaster + -0.26556711862055 * Marital_StatusDivorced + 1.14529440208202 * 
Marital_StatusMarried + -1.05822467297368 * Marital_StatusSingle + 1.15985285453738 * 
Marital_StatusTogether ;
2321470   +   H1x2_1  =     1.34590181201712 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.34590181201712 + H1x2_1 ;
2321471   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2321472   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2321473   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
2321474   +END;
MPRINT(EM_DIAGRAM):   END;
2321475   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2321476   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2321477   +END;
MPRINT(EM_DIAGRAM):   END;
2321478   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2321479   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2321480   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2321481   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2321482   +   H1x3_1  =     -1.6712582237902 * S_AcceptedCmpTotal
2321483   +          +     0.06710548571072 * S_Age  +     0.42661812684843 * S_Frq
2321484   +          +    -0.68314976524229 * S_Income  +     1.35939207675559 *
2321485   +        S_Kidhome  +     0.81255710413612 * S_Mnt  +     1.01355330034385 *
2321486   +        S_MntFishProducts  +     0.05813114723871 * S_MntFruits
2321487   +          +    -0.71193745984367 * S_MntGoldProds  +    -1.58572681664837 *
2321488   +        S_MntMeatProducts  +     0.98292174643851 * S_MntSweetProducts
2321489   +          +     1.74207203174453 * S_MntWines  +     0.63179060297207 *
2321490   +        S_MonthsAsCustomer  +    -1.61177916346421 * S_NumCatalogPurchases
2321491   +          +    -1.65571629915953 * S_NumDealsPurchases
2321492   +          +     0.44850418598185 * S_NumDistPurchases
2321493   +          +    -1.85103994085543 * S_NumStorePurchases
2321494   +          +    -1.98087140874692 * S_NumWebPurchases
2321495   +          +    -1.35538649504681 * S_NumWebVisitsMonth
2321496   +          +    -1.81866752262562 * S_RFMstat  +    -1.10867259429962 *
2321497   +        S_RMntFrq  +     2.19147176593719 * S_Recency
2321498   +          +     1.27108112236647 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.6712582237902 * S_AcceptedCmpTotal + 0.06710548571072 * 
S_Age + 0.42661812684843 * S_Frq + -0.68314976524229 * S_Income + 1.35939207675559 * S_Kidhome 
+ 0.81255710413612 * S_Mnt + 1.01355330034385 * S_MntFishProducts + 0.05813114723871 * 
S_MntFruits + -0.71193745984367 * S_MntGoldProds + -1.58572681664837 * S_MntMeatProducts + 
0.98292174643851 * S_MntSweetProducts + 1.74207203174453 * S_MntWines + 0.63179060297207 * 
S_MonthsAsCustomer + -1.61177916346421 * S_NumCatalogPurchases + -1.65571629915953 * 
S_NumDealsPurchases + 0.44850418598185 * S_NumDistPurchases + -1.85103994085543 * 
S_NumStorePurchases + -1.98087140874692 * S_NumWebPurchases + -1.35538649504681 * 
S_NumWebVisitsMonth + -1.81866752262562 * S_RFMstat + -1.10867259429962 * S_RMntFrq + 
2.19147176593719 * S_Recency + 1.27108112236647 * S_Teenhome ;
2321499   +   H1x3_1  = H1x3_1  +     1.54306674985295 * AcceptedCmp10
2321500   +          +    -0.35167718530303 * AcceptedCmp20  +     0.20275619961982 *
2321501   +        AcceptedCmp30  +      -0.625244138431 * AcceptedCmp40
2321502   +          +     1.17899223199183 * AcceptedCmp50  +     0.20175490406986 *
2321503   +        Complain0  +     0.30147459901823 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.54306674985295 * AcceptedCmp10 + -0.35167718530303 * 
AcceptedCmp20 + 0.20275619961982 * AcceptedCmp30 + -0.625244138431 * AcceptedCmp40 + 
1.17899223199183 * AcceptedCmp50 + 0.20175490406986 * Complain0 + 0.30147459901823 * 
HigherEducationBinary0 ;
2321504   +   H1x3_1  = H1x3_1  +     0.54794864137162 * Education2n_Cycle
2321505   +          +     0.70104635636234 * EducationBasic  +    -0.09012165068068 *
2321506   +        EducationGraduation  +     1.03845439880266 * EducationMaster
2321507   +          +     0.50400969719731 * Marital_StatusDivorced
2321508   +          +    -1.34220391092458 * Marital_StatusMarried
2321509   +          +    -0.55428853923129 * Marital_StatusSingle
2321510   +          +    -0.71906176115993 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.54794864137162 * Education2n_Cycle + 
0.70104635636234 * EducationBasic + -0.09012165068068 * EducationGraduation + 1.03845439880266 
* EducationMaster + 0.50400969719731 * Marital_StatusDivorced + -1.34220391092458 * 
Marital_StatusMarried + -0.55428853923129 * Marital_StatusSingle + -0.71906176115993 * 
Marital_StatusTogether ;
2321511   +   H1x3_1  =    -1.41269563029741 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.41269563029741 + H1x3_1 ;
2321512   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2321513   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2321514   +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
2321515   +END;
MPRINT(EM_DIAGRAM):   END;
2321516   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2321517   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2321518   +END;
MPRINT(EM_DIAGRAM):   END;
2321519   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2321520   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2321521   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2321522   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2321523   +   H2x1_1  =     8.58599201391049 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 8.58599201391049 * H1x1_1 ;
2321524   +   H2x1_1  = H2x1_1  +     3.30177473520902 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 3.30177473520902 * H1x2_1 ;
2321525   +   H2x1_1  = H2x1_1  +    -2.49773716784179 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.49773716784179 * H1x3_1 ;
2321526   +   H2x1_1  =    -3.86067518358535 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -3.86067518358535 + H2x1_1 ;
2321527   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2321528   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2321529   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
2321530   +END;
MPRINT(EM_DIAGRAM):   END;
2321531   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2321532   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2321533   +END;
MPRINT(EM_DIAGRAM):   END;
2321534   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2321535   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
2321536   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2321537   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2321538   +   H2x2_1  =    -3.14108669248845 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -3.14108669248845 * H1x1_1 ;
2321539   +   H2x2_1  = H2x2_1  +     -6.4434812203166 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -6.4434812203166 * H1x2_1 ;
2321540   +   H2x2_1  = H2x2_1  +    -3.11843340791158 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -3.11843340791158 * H1x3_1 ;
2321541   +   H2x2_1  =     1.54895882132691 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.54895882132691 + H2x2_1 ;
2321542   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2321543   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2321544   +   H2x2_1  = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
2321545   +END;
MPRINT(EM_DIAGRAM):   END;
2321546   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2321547   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
2321548   +END;
MPRINT(EM_DIAGRAM):   END;
2321549   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2321550   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
2321551   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2321552   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2321553   +   H3x1_1  =     15.4504469210917 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 15.4504469210917 * H2x1_1 ;
2321554   +   H3x1_1  = H3x1_1  +    -4.98948798022725 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -4.98948798022725 * H2x2_1 ;
2321555   +   H3x1_1  =    -1.00752827777153 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -1.00752827777153 + H3x1_1 ;
2321556   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2321557   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2321558   +   H3x1_1  = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
2321559   +END;
MPRINT(EM_DIAGRAM):   END;
2321560   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2321561   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
2321562   +END;
MPRINT(EM_DIAGRAM):   END;
2321563   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2321564   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2321565   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2321566   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2321567   +   P_DepVar1  =    -14.4907339799932 * H3x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -14.4907339799932 * H3x1_1 ;
2321568   +   P_DepVar1  =     3.88308334604773 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.88308334604773 + P_DepVar1 ;
2321569   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2321570   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2321571   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2321572   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2321573   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2321574   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2321575   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2321576   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2321577   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2321578   +END;
MPRINT(EM_DIAGRAM):   END;
2321579   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2321580   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2321581   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2321582   +END;
MPRINT(EM_DIAGRAM):   END;
2321583   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2321584   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2321585   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2321586   +END;
MPRINT(EM_DIAGRAM):   END;
2321587   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2321588   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2321589   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2321590   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2321591   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2321592   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2321593   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2321594   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2321595   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2321596   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2321597   +END;
MPRINT(EM_DIAGRAM):   END;
2321598   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2321599   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2321600   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2321601   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2321602    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2321603    quit;
2321604    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2321605    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2321606    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2321607    retain ID 2 Node "AutoNeural6";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural6";
2321608    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2321609    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2979 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2979 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2321610    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2321611    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2321612    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2979 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2979 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2321613    proc sort data=EMWS8.AutoNeural6_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural6_variableset out=_temp2(keep=NAME 
CREATOR);
2321614    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2321615    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL6_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2321616    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2321617    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2321618    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2321619    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2321620    proc contents data=EMWS8.AutoNeural6_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural6_train out=_meta(keep=NAME) noprint;
2321621    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2321622    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2321623    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2321624    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2321625    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2321626    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2321627    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2321628    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2321629    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2321630    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2321630  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1717 rows and 5 columns.

2321631    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2321632    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2321633    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1717 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 1717 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2321634    filename _pref
2321634  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2321635    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2321636    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2321637   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2321638   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2321639   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2321640   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2321641   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2321642   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2321643    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2321644    quit;
2321645    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2321646    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2321647    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2321648    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2321649    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2321650    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2321651    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2321652    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2321653    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2321654    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2321655    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2321656    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2321657    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2321658    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2321659    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2321660    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2321661    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2321662    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2321663    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2321664    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2321665    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2321666    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2321667    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2321668    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2321669    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2321670    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2321671    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2321671  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2321672    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2321673    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2321674    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 1721 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2321675    filename _pref
2321675  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2321676    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2321677    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2321678   +
2321679   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2321680   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2321680  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2321681   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2321682   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2321683   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2321684   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2321685   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2321686    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2321687    quit;
2321688    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2321689    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2321690    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2321691    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2321692    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2321693    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2321694    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2321695    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2321696    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2321697    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2321698    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2321699    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2321700    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2321701    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2321702    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2321703    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2321704    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2321705    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2321706    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2321707    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2321708    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2321709    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2321710    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2321711    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2321712    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2321713    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2321714    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2321714  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2321715    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2321716    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2321717    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 1760 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2321718    filename _pref
2321718  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2321719    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2321720    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2321721   +
2321722   +
2321723   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2321724   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2321725   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2321726   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2321727   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2321728   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2321729   +
2321730   +
2321731   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2321732   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2321733   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2321734   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2321735   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2321736   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2321737   +
2321738   +
2321739   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2321740   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2321741   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2321742   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2321743   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2321744   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2321745   +
2321746   +
2321747   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2321748   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2321749   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2321750   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2321751   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2321752   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2321753   +
2321754   +
2321755   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2321756   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2321757   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2321758   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2321759   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2321760   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2321761   +
2321762   +
2321763   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2321764   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2321765   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2321766   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2321767   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2321768   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2321769   +
2321770   +
2321771   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2321772   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2321773   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2321774   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2321775   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2321776   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2321777   +
2321778   +
2321779   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2321780   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2321781   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2321782   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2321783   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2321784   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2321785   +if
2321786   +_FILTERNORM1 not in ( '.')
2321787   + and
2321788   +_FILTERNORM2 not in ( '.')
2321789   + and
2321790   +_FILTERNORM3 not in ( '.')
2321791   + and
2321792   +_FILTERNORM4 not in ( '.')
2321793   + and
2321794   +_FILTERNORM5 not in ( '.')
2321795   + and
2321796   +_FILTERNORM6 not in ( '.')
2321797   + and
2321798   +_FILTERNORM7 not in ( ' ')
2321799   + and
2321800   +_FILTERNORM8 not in ( ' ')
2321801   +and
2321802   +( Dt_Customer ne .)
2321803   +and ( Income ne . and (Income<=107000))
2321804   +and ( Kidhome ne .)
2321805   +and ( MntFishProducts ne .)
2321806   +and ( MntFruits ne .)
2321807   +and ( MntGoldProds ne .)
2321808   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2321809   +and ( MntSweetProducts ne .)
2321810   +and ( MntWines ne .)
2321811   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2321812   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2321813   +and ( NumStorePurchases ne .)
2321814   +and ( NumWebPurchases ne .)
2321815   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2321816   +and ( Recency ne .)
2321817   +and ( Teenhome ne .)
2321818   +and ( Year_Birth ne .)
2321819   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2321820   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2321821   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2321822   +end;
MPRINT(EM_DIAGRAM):   end;
2321823   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2321824   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2321825    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2321826    quit;
2321827    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2321828    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2321829    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2321830    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2321831    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2321832    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2321833    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2321834    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2321835    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2321836    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2321837    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2321838    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2321839    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2321840    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2321841    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2321842    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2321843    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2321844    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2321845    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2321846    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2321847    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2321848    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2321849    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2321850    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2321851    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2321852    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2321853    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2321853  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2321854    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2321855    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2321856    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 1826 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2321857    %macro varDept(fcmpdata=,id=);
2321858    %global nobs&id scoreFlag&id;
2321859    %let scoreFlag&id = 0;
2321860    %if &id=1 or ^&fcmpStart %then %do;
2321861    proc sort data=&fcmpdata out=_temp&id nodupkey;
2321862    by NAME;
2321863    where id=&id and LHS in( %let j=1;
2321864    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2321865    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2321866    "&var" %let j = %eval(&j+1);
2321867    %end;
2321868    );
2321869    run;
2321870    %let dsid = %sysfunc(open(_temp&id));
2321871    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2321872    %let dsid = %sysfunc(close(&dsid));
2321873    %if &&nobs&id %then %do;
2321874    %let scoreFlag&id = 1;
2321875    %let fcmpStart = 1;
2321876    %end;
2321877    %else %let fcmpStart = 0;
2321878    %end;
2321879    %else %do;
2321880    proc sort data=&fcmpdata out=_tempid;
2321881    where id=&id;
2321882    by LHS;
2321883    run;
2321884    %let dsid = %sysfunc(open(_tempid));
2321885    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2321886    %let dsid = %sysfunc(close(&dsid));
2321887    %if ^&&nobs&id %then %do;
2321888    proc datasets lib=work nolist;
2321889    delete _tempid;
2321890    run;
2321891    quit;
2321892    %end;
2321893    %else %do;
2321894    data _tempAll;
2321895    set %let j=%eval(&id-1);
2321896    %do x=1 %to &j;
2321897    %if &&nobs&x %then %do;
2321898    _temp&x %end;
2321899    %end;
2321900    ;
2321901    run;
2321902    proc sql;
2321903    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2321903  ! work._tempid p2 where p.name=p2.lhs;
2321904    quit;
2321905    data _temp&id;
2321906    set _temp&id;
2321907    where LHS ne '' and NAME ne '' and Node ne '';
2321908    run;
2321909    proc datasets lib=work nolist;
2321910    delete _tempAll;
2321911    run;
2321912    %let dsid = %sysfunc(open(_temp&id));
2321913    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2321914    %let dsid = %sysfunc(close(&dsid));
2321915    %if ^&&nobs&id %then %do;
2321916    proc datasets lib=work nolist;
2321917    delete _temp&id;
2321918    run;
2321919    quit;
2321920    %end;
2321921    %else %do;
2321922    %let scoreFlag&id = 1;
2321923    data _temp&id;
2321924    set _temp&id;
2321925    where LHS ne NAME and node ne '';
2321926    run;
2321927    %let dsid = %sysfunc(open(_temp&id));
2321928    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2321929    %let dsid = %sysfunc(close(&dsid));
2321930    %if ^&&nobs&id %then %do;
2321931    proc datasets lib=work nolist;
2321932    delete _temp&id;
2321933    run;
2321934    quit;
2321935    %end;
2321936    %else %do;
2321937    proc sort data=_temp&id nodupkey;
2321938    by LHS NAME;
2321939    run;
2321940    %end;
2321941    %end;
2321942    %end;
2321943    %end;
2321944    %mend varDept;
2321945    %macro optCode(outdata=fcmpdata);
2321946    %global fcmpStart;
2321947    %let fcmpStart = 0;
2321948    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2321949    %let NumNodes=9;
2321950    %do k=1 %to &NumNodes;
2321951    %vardept(fcmpdata=&outdata, id=&k);
2321952    %end;
2321953    %mend optCode;
2321954    %optcode(outData=EMWS8.Ensmbl38_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 152 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 112 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 40 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 40 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 40 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 40 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 44 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 40 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 83 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2321955    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2321956    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2321957    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2321958    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2321959    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2321960    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2321961    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2321962    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2321963    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2321964    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2321964  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

2321965    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2321966    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2321967    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2321968    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2321969    filename _pref
2321969  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas";
2321970    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2321971    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas.
2321972   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2321973   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2321974   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2321975   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2321976   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2321977   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2321978   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2321979   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2321980   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2321981   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2321982   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2321983   +LENGTH _WARN_ $4
2321984   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2321985   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2321986   +
2321987   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2321988   +
2321989   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2321990   +
2321991   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2321992   +
2321993   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2321994   +
2321995   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2321996   +
2321997   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2321998   +
2321999   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2322000   +
2322001   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2322002   +
2322003   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2322004   +
2322005   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2322006   +
2322007   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2322008   +
2322009   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2322010   +
2322011   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2322012   +
2322013   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2322014   +
2322015   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2322016   +
2322017   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2322018   +
2322019   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2322020   +
2322021   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2322022   +
2322023   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2322024   +
2322025   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2322026   +
2322027   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2322028   +
2322029   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2322030   +
2322031   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2322032   +
2322033   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2322034   +
2322035   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2322036   +
2322037   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2322038   +
2322039   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2322040   +
2322041   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2322042   +
2322043   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2322044   +
2322045   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2322046   +
2322047   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2322048   +
2322049   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2322050   +
2322051   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2322052   +
2322053   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2322054   +
2322055   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2322056   +
2322057   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2322058   +
2322059   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2322060   +
2322061   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2322062   +
2322063   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2322064   +
2322065   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2322066   +
2322067   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2322068   +
2322069   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2322070   +
2322071   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2322072   +
2322073   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2322074   +
2322075   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2322076   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2322077   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2322078   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2322079   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2322080   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2322081   +end;
MPRINT(EM_DIAGRAM):   end;
2322082   +else do;
MPRINT(EM_DIAGRAM):   else do;
2322083   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2322084   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2322085   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2322086   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2322087   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2322088   +   end;
MPRINT(EM_DIAGRAM):   end;
2322089   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2322090   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2322091   +   end;
MPRINT(EM_DIAGRAM):   end;
2322092   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2322093   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2322094   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2322095   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2322096   +   end;
MPRINT(EM_DIAGRAM):   end;
2322097   +end;
MPRINT(EM_DIAGRAM):   end;
2322098   +
2322099   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2322100   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2322101   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2322102   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2322103   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2322104   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2322105   +end;
MPRINT(EM_DIAGRAM):   end;
2322106   +else do;
MPRINT(EM_DIAGRAM):   else do;
2322107   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2322108   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2322109   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2322110   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2322111   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2322112   +   end;
MPRINT(EM_DIAGRAM):   end;
2322113   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2322114   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2322115   +   end;
MPRINT(EM_DIAGRAM):   end;
2322116   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2322117   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2322118   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2322119   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2322120   +   end;
MPRINT(EM_DIAGRAM):   end;
2322121   +end;
MPRINT(EM_DIAGRAM):   end;
2322122   +
2322123   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2322124   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2322125   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2322126   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2322127   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2322128   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2322129   +end;
MPRINT(EM_DIAGRAM):   end;
2322130   +else do;
MPRINT(EM_DIAGRAM):   else do;
2322131   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2322132   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2322133   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2322134   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2322135   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2322136   +   end;
MPRINT(EM_DIAGRAM):   end;
2322137   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2322138   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2322139   +   end;
MPRINT(EM_DIAGRAM):   end;
2322140   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2322141   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2322142   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2322143   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2322144   +   end;
MPRINT(EM_DIAGRAM):   end;
2322145   +end;
MPRINT(EM_DIAGRAM):   end;
2322146   +
2322147   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2322148   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2322149   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2322150   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2322151   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2322152   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2322153   +end;
MPRINT(EM_DIAGRAM):   end;
2322154   +else do;
MPRINT(EM_DIAGRAM):   else do;
2322155   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2322156   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2322157   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2322158   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2322159   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2322160   +   end;
MPRINT(EM_DIAGRAM):   end;
2322161   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2322162   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2322163   +   end;
MPRINT(EM_DIAGRAM):   end;
2322164   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2322165   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2322166   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2322167   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2322168   +   end;
MPRINT(EM_DIAGRAM):   end;
2322169   +end;
MPRINT(EM_DIAGRAM):   end;
2322170   +
2322171   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2322172   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2322173   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2322174   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2322175   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2322176   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2322177   +end;
MPRINT(EM_DIAGRAM):   end;
2322178   +else do;
MPRINT(EM_DIAGRAM):   else do;
2322179   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2322180   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2322181   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2322182   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2322183   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2322184   +   end;
MPRINT(EM_DIAGRAM):   end;
2322185   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2322186   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2322187   +   end;
MPRINT(EM_DIAGRAM):   end;
2322188   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2322189   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2322190   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2322191   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2322192   +   end;
MPRINT(EM_DIAGRAM):   end;
2322193   +end;
MPRINT(EM_DIAGRAM):   end;
2322194   +
2322195   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2322196   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2322197   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2322198   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2322199   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2322200   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2322201   +end;
MPRINT(EM_DIAGRAM):   end;
2322202   +else do;
MPRINT(EM_DIAGRAM):   else do;
2322203   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2322204   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2322205   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2322206   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2322207   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2322208   +   end;
MPRINT(EM_DIAGRAM):   end;
2322209   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2322210   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2322211   +   end;
MPRINT(EM_DIAGRAM):   end;
2322212   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2322213   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2322214   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2322215   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2322216   +   end;
MPRINT(EM_DIAGRAM):   end;
2322217   +end;
MPRINT(EM_DIAGRAM):   end;
2322218   +
2322219   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2322220   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2322221   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2322222   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2322223   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2322224   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2322225   +end;
MPRINT(EM_DIAGRAM):   end;
2322226   +else do;
MPRINT(EM_DIAGRAM):   else do;
2322227   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2322228   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2322229   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2322230   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2322231   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2322232   +   end;
MPRINT(EM_DIAGRAM):   end;
2322233   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2322234   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2322235   +   end;
MPRINT(EM_DIAGRAM):   end;
2322236   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2322237   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2322238   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2322239   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2322240   +   end;
MPRINT(EM_DIAGRAM):   end;
2322241   +end;
MPRINT(EM_DIAGRAM):   end;
2322242   +
2322243   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2322244   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2322245   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2322246   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2322247   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2322248   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2322249   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2322250   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2322251   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2322252   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2322253   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2322254   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2322255   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2322256   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2322257   +end;
MPRINT(EM_DIAGRAM):   end;
2322258   +else do;
MPRINT(EM_DIAGRAM):   else do;
2322259   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2322260   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2322261   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2322262   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2322263   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2322264   +   end;
MPRINT(EM_DIAGRAM):   end;
2322265   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2322266   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2322267   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2322268   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2322269   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2322270   +   end;
MPRINT(EM_DIAGRAM):   end;
2322271   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2322272   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2322273   +   end;
MPRINT(EM_DIAGRAM):   end;
2322274   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2322275   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2322276   +   end;
MPRINT(EM_DIAGRAM):   end;
2322277   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2322278   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2322279   +   end;
MPRINT(EM_DIAGRAM):   end;
2322280   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2322281   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2322282   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2322283   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2322284   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2322285   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2322286   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2322287   +   end;
MPRINT(EM_DIAGRAM):   end;
2322288   +end;
MPRINT(EM_DIAGRAM):   end;
2322289   +
2322290   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2322291   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2322292   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2322293   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2322294   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2322295   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2322296   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2322297   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2322298   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2322299   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2322300   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2322301   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2322302   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2322303   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2322304   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2322305   +end;
MPRINT(EM_DIAGRAM):   end;
2322306   +else do;
MPRINT(EM_DIAGRAM):   else do;
2322307   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2322308   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2322309   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2322310   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2322311   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2322312   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2322313   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2322314   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2322315   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2322316   +         end;
MPRINT(EM_DIAGRAM):   end;
2322317   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2322318   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2322319   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2322320   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2322321   +            end;
MPRINT(EM_DIAGRAM):   end;
2322322   +         end;
MPRINT(EM_DIAGRAM):   end;
2322323   +      end;
MPRINT(EM_DIAGRAM):   end;
2322324   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2322325   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2322326   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2322327   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2322328   +         end;
MPRINT(EM_DIAGRAM):   end;
2322329   +      end;
MPRINT(EM_DIAGRAM):   end;
2322330   +   end;
MPRINT(EM_DIAGRAM):   end;
2322331   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2322332   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2322333   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2322334   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2322335   +      end;
MPRINT(EM_DIAGRAM):   end;
2322336   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2322337   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2322338   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2322339   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2322340   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2322341   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2322342   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2322343   +         end;
MPRINT(EM_DIAGRAM):   end;
2322344   +      end;
MPRINT(EM_DIAGRAM):   end;
2322345   +   end;
MPRINT(EM_DIAGRAM):   end;
2322346   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2322347   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2322348   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2322349   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2322350   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2322351   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2322352   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2322353   +   end;
MPRINT(EM_DIAGRAM):   end;
2322354   +end;
MPRINT(EM_DIAGRAM):   end;
2322355   +
2322356   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2322357   +*** Checking missing input Interval
2322358   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2322359   +
2322360   +IF NMISS(
2322361   +   AcceptedCmpTotal ,
2322362   +   Age ,
2322363   +   Frq ,
2322364   +   Income ,
2322365   +   Kidhome ,
2322366   +   Mnt ,
2322367   +   MntFishProducts ,
2322368   +   MntFruits ,
2322369   +   MntGoldProds ,
2322370   +   MntMeatProducts ,
2322371   +   MntSweetProducts ,
2322372   +   MntWines ,
2322373   +   MonthsAsCustomer ,
2322374   +   NumCatalogPurchases ,
2322375   +   NumDealsPurchases ,
2322376   +   NumDistPurchases ,
2322377   +   NumStorePurchases ,
2322378   +   NumWebPurchases ,
2322379   +   NumWebVisitsMonth ,
2322380   +   RFMstat ,
2322381   +   RMntFrq ,
2322382   +   Recency ,
2322383   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2322384   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2322385   +
2322386   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2322387   +END;
MPRINT(EM_DIAGRAM):   END;
2322388   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2322389   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2322390   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2322391   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2322392   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2322393   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2322394   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2322395   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2322396   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2322397   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2322398   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2322399   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2322400   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2322401   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2322402   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2322403   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2322404   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2322405   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2322406   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2322407   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2322408   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2322409   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2322410   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2322411   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2322412   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2322413   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2322414   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2322415   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2322416   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2322417   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2322418   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2322419   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2322420   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2322421   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2322422   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2322423   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2322424   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2322425   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2322426   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2322427   +END;
MPRINT(EM_DIAGRAM):   END;
2322428   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2322429   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2322430   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2322431   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2322432   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2322433   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2322434   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2322435   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2322436   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2322437   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2322438   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2322439   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2322440   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2322441   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2322442   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2322443   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2322444   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2322445   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2322446   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2322447   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2322448   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2322449   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2322450   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2322451   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2322452   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2322453   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2322454   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2322455   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2322456   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2322457   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2322458   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2322459   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2322460   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2322461   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2322462   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2322463   +   ELSE S_NumCatalogPurchases
2322464   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2322465   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2322466   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2322467   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2322468   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2322469   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2322470   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2322471   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2322472   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2322473   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2322474   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2322475   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2322476   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2322477   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2322478   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2322479   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2322480   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2322481   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2322482   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2322483   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2322484   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2322485   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2322486   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2322487   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2322488   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2322489   +END;
MPRINT(EM_DIAGRAM):   END;
2322490   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2322491   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2322492   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2322493   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2322494   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2322495   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2322496   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2322497   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2322498   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2322499   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2322500   +   H1x1_1  =     0.27051750628107 * S_AcceptedCmpTotal
2322501   +          +    -0.01552488999587 * S_Age  +    -0.19918933236131 * S_Frq
2322502   +          +    -0.18053367989037 * S_Income  +     0.17934470816975 *
2322503   +        S_Kidhome  +    -0.27914859130186 * S_Mnt  +    -0.05331142159606 *
2322504   +        S_MntFishProducts  +    -0.03730503814111 * S_MntFruits
2322505   +          +     0.01217897476566 * S_MntGoldProds  +       0.241005967683 *
2322506   +        S_MntMeatProducts  +    -0.02873172523867 * S_MntSweetProducts
2322507   +          +    -0.35773732926132 * S_MntWines  +    -0.00800625524539 *
2322508   +        S_MonthsAsCustomer  +     0.14253720708201 * S_NumCatalogPurchases
2322509   +          +     0.09634439105648 * S_NumDealsPurchases
2322510   +          +     -0.2727389064287 * S_NumDistPurchases
2322511   +          +    -0.14179871978162 * S_NumStorePurchases
2322512   +          +     0.11008049559527 * S_NumWebPurchases
2322513   +          +    -0.16791463027749 * S_NumWebVisitsMonth
2322514   +          +     0.12827091331546 * S_RFMstat  +    -0.05819422771336 *
2322515   +        S_RMntFrq  +     0.17192522504917 * S_Recency
2322516   +          +     0.13379709932247 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.27051750628107 * S_AcceptedCmpTotal + -0.01552488999587 * 
S_Age + -0.19918933236131 * S_Frq + -0.18053367989037 * S_Income + 0.17934470816975 * 
S_Kidhome + -0.27914859130186 * S_Mnt + -0.05331142159606 * S_MntFishProducts + 
-0.03730503814111 * S_MntFruits + 0.01217897476566 * S_MntGoldProds + 0.241005967683 * 
S_MntMeatProducts + -0.02873172523867 * S_MntSweetProducts + -0.35773732926132 * S_MntWines + 
-0.00800625524539 * S_MonthsAsCustomer + 0.14253720708201 * S_NumCatalogPurchases + 
0.09634439105648 * S_NumDealsPurchases + -0.2727389064287 * S_NumDistPurchases + 
-0.14179871978162 * S_NumStorePurchases + 0.11008049559527 * S_NumWebPurchases + 
-0.16791463027749 * S_NumWebVisitsMonth + 0.12827091331546 * S_RFMstat + -0.05819422771336 * 
S_RMntFrq + 0.17192522504917 * S_Recency + 0.13379709932247 * S_Teenhome ;
2322517   +   H1x1_2  =      0.2625003002792 * S_AcceptedCmpTotal
2322518   +          +    -0.00409648963127 * S_Age  +    -0.08422560024107 * S_Frq
2322519   +          +      0.1678148652095 * S_Income  +      -0.122580580609 *
2322520   +        S_Kidhome  +    -0.41368311141801 * S_Mnt  +     -0.0649787838725 *
2322521   +        S_MntFishProducts  +    -0.06363287766971 * S_MntFruits
2322522   +          +     0.00810850196464 * S_MntGoldProds  +      0.2984971941271 *
2322523   +        S_MntMeatProducts  +     -0.0651075315757 * S_MntSweetProducts
2322524   +          +    -0.42717799596572 * S_MntWines  +    -0.00945771129633 *
2322525   +        S_MonthsAsCustomer  +     0.33346839008681 * S_NumCatalogPurchases
2322526   +          +     0.15835936877168 * S_NumDealsPurchases
2322527   +          +     0.04229992769587 * S_NumDistPurchases
2322528   +          +    -0.04051362547639 * S_NumStorePurchases
2322529   +          +    -0.01791546488406 * S_NumWebPurchases
2322530   +          +     0.28833008597045 * S_NumWebVisitsMonth
2322531   +          +     0.08007709098478 * S_RFMstat  +     0.37677948418886 *
2322532   +        S_RMntFrq  +    -0.32542265112765 * S_Recency
2322533   +          +    -0.10763248273834 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.2625003002792 * S_AcceptedCmpTotal + -0.00409648963127 * 
S_Age + -0.08422560024107 * S_Frq + 0.1678148652095 * S_Income + -0.122580580609 * S_Kidhome + 
-0.41368311141801 * S_Mnt + -0.0649787838725 * S_MntFishProducts + -0.06363287766971 * 
S_MntFruits + 0.00810850196464 * S_MntGoldProds + 0.2984971941271 * S_MntMeatProducts + 
-0.0651075315757 * S_MntSweetProducts + -0.42717799596572 * S_MntWines + -0.00945771129633 * 
S_MonthsAsCustomer + 0.33346839008681 * S_NumCatalogPurchases + 0.15835936877168 * 
S_NumDealsPurchases + 0.04229992769587 * S_NumDistPurchases + -0.04051362547639 * 
S_NumStorePurchases + -0.01791546488406 * S_NumWebPurchases + 0.28833008597045 * 
S_NumWebVisitsMonth + 0.08007709098478 * S_RFMstat + 0.37677948418886 * S_RMntFrq + 
-0.32542265112765 * S_Recency + -0.10763248273834 * S_Teenhome ;
2322534   +   H1x1_1  = H1x1_1  +     0.17927888078386 * AcceptedCmp10
2322535   +          +       0.309097592234 * AcceptedCmp20  +     0.30005706470617 *
2322536   +        AcceptedCmp30  +     0.30534843193785 * AcceptedCmp40
2322537   +          +     0.19575142296602 * AcceptedCmp50  +    -0.26930325741881 *
2322538   +        Complain0  +    -0.07193220591551 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.17927888078386 * AcceptedCmp10 + 0.309097592234 * 
AcceptedCmp20 + 0.30005706470617 * AcceptedCmp30 + 0.30534843193785 * AcceptedCmp40 + 
0.19575142296602 * AcceptedCmp50 + -0.26930325741881 * Complain0 + -0.07193220591551 * 
HigherEducationBinary0 ;
2322539   +   H1x1_2  = H1x1_2  +     0.01282806481889 * AcceptedCmp10
2322540   +          +     0.01542710847454 * AcceptedCmp20  +     0.03576476827309 *
2322541   +        AcceptedCmp30  +     0.04230610697529 * AcceptedCmp40
2322542   +          +     0.03405078302469 * AcceptedCmp50  +     0.13002166919554 *
2322543   +        Complain0  +    -0.08203696285033 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.01282806481889 * AcceptedCmp10 + 0.01542710847454 * 
AcceptedCmp20 + 0.03576476827309 * AcceptedCmp30 + 0.04230610697529 * AcceptedCmp40 + 
0.03405078302469 * AcceptedCmp50 + 0.13002166919554 * Complain0 + -0.08203696285033 * 
HigherEducationBinary0 ;
2322544   +   H1x1_1  = H1x1_1  +    -0.04471063478028 * Education2n_Cycle
2322545   +          +     0.15571809437849 * EducationBasic  +    -0.00113978624206 *
2322546   +        EducationGraduation  +     0.00750750981266 * EducationMaster
2322547   +          +     -0.0504367274898 * Marital_StatusDivorced
2322548   +          +     0.28345714390306 * Marital_StatusMarried
2322549   +          +     -0.2012923780435 * Marital_StatusSingle
2322550   +          +     0.20022167903492 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.04471063478028 * Education2n_Cycle + 
0.15571809437849 * EducationBasic + -0.00113978624206 * EducationGraduation + 0.00750750981266 
* EducationMaster + -0.0504367274898 * Marital_StatusDivorced + 0.28345714390306 * 
Marital_StatusMarried + -0.2012923780435 * Marital_StatusSingle + 0.20022167903492 * 
Marital_StatusTogether ;
2322551   +   H1x1_2  = H1x1_2  +     0.12691361812265 * Education2n_Cycle
2322552   +          +       0.003205191831 * EducationBasic  +    -0.04323354449955 *
2322553   +        EducationGraduation  +    -0.06699429239126 * EducationMaster
2322554   +          +     0.06828937261262 * Marital_StatusDivorced
2322555   +          +     -0.1520862543536 * Marital_StatusMarried
2322556   +          +      0.1392808464716 * Marital_StatusSingle
2322557   +          +    -0.12406922875482 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12691361812265 * Education2n_Cycle + 0.003205191831 
* EducationBasic + -0.04323354449955 * EducationGraduation + -0.06699429239126 * 
EducationMaster + 0.06828937261262 * Marital_StatusDivorced + -0.1520862543536 * 
Marital_StatusMarried + 0.1392808464716 * Marital_StatusSingle + -0.12406922875482 * 
Marital_StatusTogether ;
2322558   +   H1x1_1  =     0.89722634972069 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.89722634972069 + H1x1_1 ;
2322559   +   H1x1_2  =     -0.5979471913364 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5979471913364 + H1x1_2 ;
2322560   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
2322561   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
2322562   +END;
MPRINT(EM_DIAGRAM):   END;
2322563   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2322564   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2322565   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2322566   +END;
MPRINT(EM_DIAGRAM):   END;
2322567   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2322568   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2322569   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2322570   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2322571   +   P_DepVar1  =     -11.533020189097 * H1x1_1  +     17.2320065402955 * H1x1_2
2322572   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -11.533020189097 * H1x1_1 + 17.2320065402955 * H1x1_2 ;
2322573   +   P_DepVar1  =     2.37722840752042 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.37722840752042 + P_DepVar1 ;
2322574   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2322575   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2322576   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2322577   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2322578   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2322579   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2322580   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2322581   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2322582   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2322583   +END;
MPRINT(EM_DIAGRAM):   END;
2322584   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2322585   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2322586   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2322587   +END;
MPRINT(EM_DIAGRAM):   END;
2322588   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2322589   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2322590   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2322591   +END;
MPRINT(EM_DIAGRAM):   END;
2322592   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2322593   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2322594   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2322595   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2322596   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2322597   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2322598   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2322599   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2322600   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2322601   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2322602   +END;
MPRINT(EM_DIAGRAM):   END;
2322603   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2322604   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2322605   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2322606   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2322607    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2322608    quit;
2322609    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2322610    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2322611    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2322612    retain ID 2 Node "AutoNeural7";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural7";
2322613    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2322614    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2322615    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2322616    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2322617    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2322618    proc sort data=EMWS8.AutoNeural7_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural7_variableset out=_temp2(keep=NAME 
CREATOR);
2322619    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2322620    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL7_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2322621    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2322622    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2322623    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2322624    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2322625    proc contents data=EMWS8.AutoNeural7_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural7_train out=_meta(keep=NAME) noprint;
2322626    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 55 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2322627    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2322628    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2322629    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 55 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 55 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2322630    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2322631    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2322632    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2322633    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 55 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 55 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2322634    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2322635    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2322635  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1359 rows and 5 columns.

2322636    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2322637    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2322638    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1359 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 1359 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2322639    filename _pref
2322639  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2322640    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2322641    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2322642   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2322643   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2322644   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2322645   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2322646   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2322647   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2322648    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2322649    quit;
2322650    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2322651    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2322652    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2322653    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2322654    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2322655    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2322656    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2322657    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2322658    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2322659    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2322660    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2322661    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2322662    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2322663    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2322664    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2322665    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2322666    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2322667    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2322668    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2322669    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2322670    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2322671    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2322672    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2322673    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2322674    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2322675    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2322676    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2322676  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2322677    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2322678    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2322679    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 1363 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2322680    filename _pref
2322680  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2322681    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2322682    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2322683   +
2322684   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2322685   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2322685  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2322686   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2322687   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2322688   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2322689   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2322690   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2322691    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2322692    quit;
2322693    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2322694    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2322695    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2322696    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2322697    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2322698    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2322699    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2322700    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2322701    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2322702    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2322703    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2322704    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2322705    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2322706    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2322707    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2322708    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2322709    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2322710    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2322711    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2322712    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2322713    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2322714    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2322715    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2322716    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2322717    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2322718    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2322719    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2322719  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2322720    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2322721    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2322722    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 1402 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2322723    filename _pref
2322723  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2322724    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2322725    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2322726   +
2322727   +
2322728   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2322729   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2322730   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2322731   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2322732   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2322733   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2322734   +
2322735   +
2322736   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2322737   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2322738   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2322739   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2322740   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2322741   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2322742   +
2322743   +
2322744   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2322745   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2322746   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2322747   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2322748   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2322749   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2322750   +
2322751   +
2322752   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2322753   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2322754   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2322755   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2322756   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2322757   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2322758   +
2322759   +
2322760   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2322761   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2322762   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2322763   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2322764   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2322765   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2322766   +
2322767   +
2322768   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2322769   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2322770   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2322771   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2322772   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2322773   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2322774   +
2322775   +
2322776   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2322777   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2322778   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2322779   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2322780   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2322781   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2322782   +
2322783   +
2322784   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2322785   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2322786   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2322787   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2322788   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2322789   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2322790   +if
2322791   +_FILTERNORM1 not in ( '.')
2322792   + and
2322793   +_FILTERNORM2 not in ( '.')
2322794   + and
2322795   +_FILTERNORM3 not in ( '.')
2322796   + and
2322797   +_FILTERNORM4 not in ( '.')
2322798   + and
2322799   +_FILTERNORM5 not in ( '.')
2322800   + and
2322801   +_FILTERNORM6 not in ( '.')
2322802   + and
2322803   +_FILTERNORM7 not in ( ' ')
2322804   + and
2322805   +_FILTERNORM8 not in ( ' ')
2322806   +and
2322807   +( Dt_Customer ne .)
2322808   +and ( Income ne . and (Income<=107000))
2322809   +and ( Kidhome ne .)
2322810   +and ( MntFishProducts ne .)
2322811   +and ( MntFruits ne .)
2322812   +and ( MntGoldProds ne .)
2322813   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2322814   +and ( MntSweetProducts ne .)
2322815   +and ( MntWines ne .)
2322816   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2322817   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2322818   +and ( NumStorePurchases ne .)
2322819   +and ( NumWebPurchases ne .)
2322820   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2322821   +and ( Recency ne .)
2322822   +and ( Teenhome ne .)
2322823   +and ( Year_Birth ne .)
2322824   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2322825   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2322826   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2322827   +end;
MPRINT(EM_DIAGRAM):   end;
2322828   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2322829   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2322830    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2322831    quit;
2322832    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2322833    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2322834    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2322835    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2322836    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2322837    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2322838    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2322839    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2322840    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2322841    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2322842    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2322843    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2322844    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2322845    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2322846    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2322847    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2322848    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2322849    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.04 seconds
      

2322850    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2322851    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2322852    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2322853    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2322854    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2322855    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2322856    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2322857    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2322858    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2322858  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2322859    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2322860    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2322861    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 1468 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2322862    %macro varDept(fcmpdata=,id=);
2322863    %global nobs&id scoreFlag&id;
2322864    %let scoreFlag&id = 0;
2322865    %if &id=1 or ^&fcmpStart %then %do;
2322866    proc sort data=&fcmpdata out=_temp&id nodupkey;
2322867    by NAME;
2322868    where id=&id and LHS in( %let j=1;
2322869    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2322870    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2322871    "&var" %let j = %eval(&j+1);
2322872    %end;
2322873    );
2322874    run;
2322875    %let dsid = %sysfunc(open(_temp&id));
2322876    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2322877    %let dsid = %sysfunc(close(&dsid));
2322878    %if &&nobs&id %then %do;
2322879    %let scoreFlag&id = 1;
2322880    %let fcmpStart = 1;
2322881    %end;
2322882    %else %let fcmpStart = 0;
2322883    %end;
2322884    %else %do;
2322885    proc sort data=&fcmpdata out=_tempid;
2322886    where id=&id;
2322887    by LHS;
2322888    run;
2322889    %let dsid = %sysfunc(open(_tempid));
2322890    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2322891    %let dsid = %sysfunc(close(&dsid));
2322892    %if ^&&nobs&id %then %do;
2322893    proc datasets lib=work nolist;
2322894    delete _tempid;
2322895    run;
2322896    quit;
2322897    %end;
2322898    %else %do;
2322899    data _tempAll;
2322900    set %let j=%eval(&id-1);
2322901    %do x=1 %to &j;
2322902    %if &&nobs&x %then %do;
2322903    _temp&x %end;
2322904    %end;
2322905    ;
2322906    run;
2322907    proc sql;
2322908    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2322908  ! work._tempid p2 where p.name=p2.lhs;
2322909    quit;
2322910    data _temp&id;
2322911    set _temp&id;
2322912    where LHS ne '' and NAME ne '' and Node ne '';
2322913    run;
2322914    proc datasets lib=work nolist;
2322915    delete _tempAll;
2322916    run;
2322917    %let dsid = %sysfunc(open(_temp&id));
2322918    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2322919    %let dsid = %sysfunc(close(&dsid));
2322920    %if ^&&nobs&id %then %do;
2322921    proc datasets lib=work nolist;
2322922    delete _temp&id;
2322923    run;
2322924    quit;
2322925    %end;
2322926    %else %do;
2322927    %let scoreFlag&id = 1;
2322928    data _temp&id;
2322929    set _temp&id;
2322930    where LHS ne NAME and node ne '';
2322931    run;
2322932    %let dsid = %sysfunc(open(_temp&id));
2322933    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2322934    %let dsid = %sysfunc(close(&dsid));
2322935    %if ^&&nobs&id %then %do;
2322936    proc datasets lib=work nolist;
2322937    delete _temp&id;
2322938    run;
2322939    quit;
2322940    %end;
2322941    %else %do;
2322942    proc sort data=_temp&id nodupkey;
2322943    by LHS NAME;
2322944    run;
2322945    %end;
2322946    %end;
2322947    %end;
2322948    %end;
2322949    %mend varDept;
2322950    %macro optCode(outdata=fcmpdata);
2322951    %global fcmpStart;
2322952    %let fcmpStart = 0;
2322953    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2322954    %let NumNodes=9;
2322955    %do k=1 %to &NumNodes;
2322956    %vardept(fcmpdata=&outdata, id=&k);
2322957    %end;
2322958    %mend optCode;
2322959    %optcode(outData=EMWS8.Ensmbl38_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 140 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 104 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 36 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 36 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 40 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 79 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.18 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2322960    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2322961    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2322962    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2322963    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2322964    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2322965    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2322966    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2322967    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2322968    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2322969    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2322969  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

2322970    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

2322971    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2322972    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2322973    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2322974    filename _pref
2322974  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural8\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural8\EMPUBLISHSCORE.sas";
2322975    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2322976    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural8\EMPUBLISHSCORE.sas.
2322977   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2322978   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2322979   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2322980   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2322981   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2322982   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2322983   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2322984   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2322985   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2322986   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2322987   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2322988   +LENGTH _WARN_ $4
2322989   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2322990   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2322991   +
2322992   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2322993   +
2322994   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2322995   +
2322996   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2322997   +
2322998   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2322999   +
2323000   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2323001   +
2323002   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2323003   +
2323004   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2323005   +
2323006   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2323007   +
2323008   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2323009   +
2323010   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2323011   +
2323012   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2323013   +
2323014   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2323015   +
2323016   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2323017   +
2323018   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2323019   +
2323020   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2323021   +
2323022   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2323023   +
2323024   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2323025   +
2323026   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2323027   +
2323028   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2323029   +
2323030   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2323031   +
2323032   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2323033   +
2323034   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2323035   +
2323036   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2323037   +
2323038   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2323039   +
2323040   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2323041   +
2323042   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2323043   +
2323044   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2323045   +
2323046   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2323047   +
2323048   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2323049   +
2323050   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2323051   +
2323052   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2323053   +
2323054   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2323055   +
2323056   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2323057   +
2323058   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2323059   +
2323060   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2323061   +
2323062   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2323063   +
2323064   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2323065   +
2323066   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2323067   +
2323068   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2323069   +
2323070   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2323071   +
2323072   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2323073   +
2323074   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2323075   +
2323076   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2323077   +
2323078   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2323079   +
2323080   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2323081   +
2323082   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2323083   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2323084   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2323085   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2323086   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2323087   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2323088   +end;
MPRINT(EM_DIAGRAM):   end;
2323089   +else do;
MPRINT(EM_DIAGRAM):   else do;
2323090   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2323091   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2323092   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2323093   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2323094   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2323095   +   end;
MPRINT(EM_DIAGRAM):   end;
2323096   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2323097   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2323098   +   end;
MPRINT(EM_DIAGRAM):   end;
2323099   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2323100   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2323101   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2323102   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2323103   +   end;
MPRINT(EM_DIAGRAM):   end;
2323104   +end;
MPRINT(EM_DIAGRAM):   end;
2323105   +
2323106   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2323107   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2323108   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2323109   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2323110   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2323111   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2323112   +end;
MPRINT(EM_DIAGRAM):   end;
2323113   +else do;
MPRINT(EM_DIAGRAM):   else do;
2323114   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2323115   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2323116   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2323117   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2323118   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2323119   +   end;
MPRINT(EM_DIAGRAM):   end;
2323120   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2323121   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2323122   +   end;
MPRINT(EM_DIAGRAM):   end;
2323123   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2323124   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2323125   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2323126   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2323127   +   end;
MPRINT(EM_DIAGRAM):   end;
2323128   +end;
MPRINT(EM_DIAGRAM):   end;
2323129   +
2323130   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2323131   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2323132   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2323133   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2323134   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2323135   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2323136   +end;
MPRINT(EM_DIAGRAM):   end;
2323137   +else do;
MPRINT(EM_DIAGRAM):   else do;
2323138   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2323139   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2323140   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2323141   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2323142   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2323143   +   end;
MPRINT(EM_DIAGRAM):   end;
2323144   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2323145   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2323146   +   end;
MPRINT(EM_DIAGRAM):   end;
2323147   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2323148   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2323149   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2323150   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2323151   +   end;
MPRINT(EM_DIAGRAM):   end;
2323152   +end;
MPRINT(EM_DIAGRAM):   end;
2323153   +
2323154   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2323155   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2323156   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2323157   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2323158   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2323159   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2323160   +end;
MPRINT(EM_DIAGRAM):   end;
2323161   +else do;
MPRINT(EM_DIAGRAM):   else do;
2323162   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2323163   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2323164   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2323165   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2323166   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2323167   +   end;
MPRINT(EM_DIAGRAM):   end;
2323168   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2323169   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2323170   +   end;
MPRINT(EM_DIAGRAM):   end;
2323171   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2323172   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2323173   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2323174   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2323175   +   end;
MPRINT(EM_DIAGRAM):   end;
2323176   +end;
MPRINT(EM_DIAGRAM):   end;
2323177   +
2323178   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2323179   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2323180   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2323181   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2323182   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2323183   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2323184   +end;
MPRINT(EM_DIAGRAM):   end;
2323185   +else do;
MPRINT(EM_DIAGRAM):   else do;
2323186   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2323187   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2323188   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2323189   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2323190   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2323191   +   end;
MPRINT(EM_DIAGRAM):   end;
2323192   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2323193   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2323194   +   end;
MPRINT(EM_DIAGRAM):   end;
2323195   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2323196   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2323197   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2323198   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2323199   +   end;
MPRINT(EM_DIAGRAM):   end;
2323200   +end;
MPRINT(EM_DIAGRAM):   end;
2323201   +
2323202   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2323203   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2323204   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2323205   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2323206   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2323207   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2323208   +end;
MPRINT(EM_DIAGRAM):   end;
2323209   +else do;
MPRINT(EM_DIAGRAM):   else do;
2323210   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2323211   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2323212   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2323213   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2323214   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2323215   +   end;
MPRINT(EM_DIAGRAM):   end;
2323216   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2323217   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2323218   +   end;
MPRINT(EM_DIAGRAM):   end;
2323219   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2323220   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2323221   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2323222   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2323223   +   end;
MPRINT(EM_DIAGRAM):   end;
2323224   +end;
MPRINT(EM_DIAGRAM):   end;
2323225   +
2323226   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2323227   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2323228   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2323229   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2323230   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2323231   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2323232   +end;
MPRINT(EM_DIAGRAM):   end;
2323233   +else do;
MPRINT(EM_DIAGRAM):   else do;
2323234   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2323235   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2323236   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2323237   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2323238   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2323239   +   end;
MPRINT(EM_DIAGRAM):   end;
2323240   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2323241   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2323242   +   end;
MPRINT(EM_DIAGRAM):   end;
2323243   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2323244   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2323245   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2323246   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2323247   +   end;
MPRINT(EM_DIAGRAM):   end;
2323248   +end;
MPRINT(EM_DIAGRAM):   end;
2323249   +
2323250   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2323251   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2323252   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2323253   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2323254   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2323255   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2323256   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2323257   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2323258   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2323259   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2323260   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2323261   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2323262   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2323263   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2323264   +end;
MPRINT(EM_DIAGRAM):   end;
2323265   +else do;
MPRINT(EM_DIAGRAM):   else do;
2323266   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2323267   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2323268   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2323269   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2323270   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2323271   +   end;
MPRINT(EM_DIAGRAM):   end;
2323272   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2323273   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2323274   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2323275   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2323276   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2323277   +   end;
MPRINT(EM_DIAGRAM):   end;
2323278   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2323279   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2323280   +   end;
MPRINT(EM_DIAGRAM):   end;
2323281   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2323282   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2323283   +   end;
MPRINT(EM_DIAGRAM):   end;
2323284   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2323285   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2323286   +   end;
MPRINT(EM_DIAGRAM):   end;
2323287   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2323288   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2323289   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2323290   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2323291   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2323292   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2323293   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2323294   +   end;
MPRINT(EM_DIAGRAM):   end;
2323295   +end;
MPRINT(EM_DIAGRAM):   end;
2323296   +
2323297   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2323298   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2323299   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2323300   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2323301   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2323302   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2323303   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2323304   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2323305   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2323306   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2323307   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2323308   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2323309   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2323310   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2323311   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2323312   +end;
MPRINT(EM_DIAGRAM):   end;
2323313   +else do;
MPRINT(EM_DIAGRAM):   else do;
2323314   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2323315   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2323316   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2323317   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2323318   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2323319   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2323320   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2323321   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2323322   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2323323   +         end;
MPRINT(EM_DIAGRAM):   end;
2323324   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2323325   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2323326   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2323327   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2323328   +            end;
MPRINT(EM_DIAGRAM):   end;
2323329   +         end;
MPRINT(EM_DIAGRAM):   end;
2323330   +      end;
MPRINT(EM_DIAGRAM):   end;
2323331   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2323332   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2323333   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2323334   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2323335   +         end;
MPRINT(EM_DIAGRAM):   end;
2323336   +      end;
MPRINT(EM_DIAGRAM):   end;
2323337   +   end;
MPRINT(EM_DIAGRAM):   end;
2323338   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2323339   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2323340   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2323341   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2323342   +      end;
MPRINT(EM_DIAGRAM):   end;
2323343   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2323344   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2323345   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2323346   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2323347   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2323348   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2323349   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2323350   +         end;
MPRINT(EM_DIAGRAM):   end;
2323351   +      end;
MPRINT(EM_DIAGRAM):   end;
2323352   +   end;
MPRINT(EM_DIAGRAM):   end;
2323353   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2323354   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2323355   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2323356   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2323357   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2323358   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2323359   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2323360   +   end;
MPRINT(EM_DIAGRAM):   end;
2323361   +end;
MPRINT(EM_DIAGRAM):   end;
2323362   +
2323363   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2323364   +*** Checking missing input Interval
2323365   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2323366   +
2323367   +IF NMISS(
2323368   +   AcceptedCmpTotal ,
2323369   +   Age ,
2323370   +   Frq ,
2323371   +   Income ,
2323372   +   Kidhome ,
2323373   +   Mnt ,
2323374   +   MntFishProducts ,
2323375   +   MntFruits ,
2323376   +   MntGoldProds ,
2323377   +   MntMeatProducts ,
2323378   +   MntSweetProducts ,
2323379   +   MntWines ,
2323380   +   MonthsAsCustomer ,
2323381   +   NumCatalogPurchases ,
2323382   +   NumDealsPurchases ,
2323383   +   NumDistPurchases ,
2323384   +   NumStorePurchases ,
2323385   +   NumWebPurchases ,
2323386   +   NumWebVisitsMonth ,
2323387   +   RFMstat ,
2323388   +   RMntFrq ,
2323389   +   Recency ,
2323390   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2323391   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2323392   +
2323393   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2323394   +END;
MPRINT(EM_DIAGRAM):   END;
2323395   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2323396   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2323397   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2323398   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2323399   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2323400   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2323401   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2323402   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2323403   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2323404   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2323405   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2323406   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2323407   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2323408   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2323409   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2323410   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2323411   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2323412   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2323413   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2323414   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2323415   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2323416   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2323417   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2323418   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2323419   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2323420   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2323421   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2323422   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2323423   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2323424   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2323425   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2323426   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2323427   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2323428   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2323429   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2323430   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2323431   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2323432   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2323433   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2323434   +END;
MPRINT(EM_DIAGRAM):   END;
2323435   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2323436   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2323437   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2323438   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2323439   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2323440   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2323441   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2323442   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2323443   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2323444   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2323445   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2323446   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2323447   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2323448   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2323449   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2323450   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2323451   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2323452   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2323453   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2323454   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2323455   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2323456   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2323457   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2323458   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2323459   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2323460   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2323461   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2323462   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2323463   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2323464   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2323465   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2323466   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2323467   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2323468   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2323469   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2323470   +   ELSE S_NumCatalogPurchases
2323471   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2323472   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2323473   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2323474   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2323475   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2323476   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2323477   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2323478   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2323479   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2323480   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2323481   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2323482   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2323483   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2323484   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2323485   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2323486   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2323487   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2323488   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2323489   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2323490   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2323491   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2323492   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2323493   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2323494   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2323495   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2323496   +END;
MPRINT(EM_DIAGRAM):   END;
2323497   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2323498   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2323499   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2323500   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2323501   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2323502   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2323503   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2323504   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2323505   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2323506   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2323507   +   H1x1_1  =    -0.56705855466377 * S_AcceptedCmpTotal
2323508   +          +     -0.0844209787591 * S_Age  +    -0.09400438162402 * S_Frq
2323509   +          +    -0.79259985419234 * S_Income  +     0.39614485170881 *
2323510   +        S_Kidhome  +     0.08971262203296 * S_Mnt  +    -0.03646043190364 *
2323511   +        S_MntFishProducts  +    -0.01721941944663 * S_MntFruits
2323512   +          +     0.02211291589645 * S_MntGoldProds  +    -0.96925186479365 *
2323513   +        S_MntMeatProducts  +    -0.00290407614994 * S_MntSweetProducts
2323514   +          +     0.23980601137104 * S_MntWines  +    -0.04652446900605 *
2323515   +        S_MonthsAsCustomer  +    -0.56456333417509 * S_NumCatalogPurchases
2323516   +          +     0.10832450413796 * S_NumDealsPurchases
2323517   +          +     0.17985750884741 * S_NumDistPurchases
2323518   +          +     0.45794093255577 * S_NumStorePurchases
2323519   +          +     0.37000538836801 * S_NumWebPurchases
2323520   +          +    -1.28851120009285 * S_NumWebVisitsMonth
2323521   +          +     0.08002748509394 * S_RFMstat  +     1.03727311399928 *
2323522   +        S_RMntFrq  +     1.25259433123634 * S_Recency
2323523   +          +      0.6063997677797 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.56705855466377 * S_AcceptedCmpTotal + -0.0844209787591 * 
S_Age + -0.09400438162402 * S_Frq + -0.79259985419234 * S_Income + 0.39614485170881 * 
S_Kidhome + 0.08971262203296 * S_Mnt + -0.03646043190364 * S_MntFishProducts + 
-0.01721941944663 * S_MntFruits + 0.02211291589645 * S_MntGoldProds + -0.96925186479365 * 
S_MntMeatProducts + -0.00290407614994 * S_MntSweetProducts + 0.23980601137104 * S_MntWines + 
-0.04652446900605 * S_MonthsAsCustomer + -0.56456333417509 * S_NumCatalogPurchases + 
0.10832450413796 * S_NumDealsPurchases + 0.17985750884741 * S_NumDistPurchases + 
0.45794093255577 * S_NumStorePurchases + 0.37000538836801 * S_NumWebPurchases + 
-1.28851120009285 * S_NumWebVisitsMonth + 0.08002748509394 * S_RFMstat + 1.03727311399928 * 
S_RMntFrq + 1.25259433123634 * S_Recency + 0.6063997677797 * S_Teenhome ;
2323524   +   H1x1_2  =      -3.536397256703 * S_AcceptedCmpTotal
2323525   +          +     0.06755794216854 * S_Age  +     0.36034798301658 * S_Frq
2323526   +          +    -0.66995947609372 * S_Income  +    -0.14056662480751 *
2323527   +        S_Kidhome  +    -1.49350363210312 * S_Mnt  +     1.33108886676815 *
2323528   +        S_MntFishProducts  +     0.15317227423355 * S_MntFruits
2323529   +          +     -0.4334555918188 * S_MntGoldProds  +    -6.78273408538559 *
2323530   +        S_MntMeatProducts  +      0.1222923724663 * S_MntSweetProducts
2323531   +          +     2.14871443736565 * S_MntWines  +     0.02904565375257 *
2323532   +        S_MonthsAsCustomer  +    -1.29628794543724 * S_NumCatalogPurchases
2323533   +          +    -1.14287651740452 * S_NumDealsPurchases
2323534   +          +    -0.03763726936438 * S_NumDistPurchases
2323535   +          +     0.87545461519128 * S_NumStorePurchases
2323536   +          +     1.40430622837706 * S_NumWebPurchases
2323537   +          +    -0.99181125135242 * S_NumWebVisitsMonth
2323538   +          +    -0.85808782711899 * S_RFMstat  +     0.77622857392325 *
2323539   +        S_RMntFrq  +     0.74134014231496 * S_Recency
2323540   +          +     0.33602799889832 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -3.536397256703 * S_AcceptedCmpTotal + 0.06755794216854 * S_Age 
+ 0.36034798301658 * S_Frq + -0.66995947609372 * S_Income + -0.14056662480751 * S_Kidhome + 
-1.49350363210312 * S_Mnt + 1.33108886676815 * S_MntFishProducts + 0.15317227423355 * 
S_MntFruits + -0.4334555918188 * S_MntGoldProds + -6.78273408538559 * S_MntMeatProducts + 
0.1222923724663 * S_MntSweetProducts + 2.14871443736565 * S_MntWines + 0.02904565375257 * 
S_MonthsAsCustomer + -1.29628794543724 * S_NumCatalogPurchases + -1.14287651740452 * 
S_NumDealsPurchases + -0.03763726936438 * S_NumDistPurchases + 0.87545461519128 * 
S_NumStorePurchases + 1.40430622837706 * S_NumWebPurchases + -0.99181125135242 * 
S_NumWebVisitsMonth + -0.85808782711899 * S_RFMstat + 0.77622857392325 * S_RMntFrq + 
0.74134014231496 * S_Recency + 0.33602799889832 * S_Teenhome ;
2323541   +   H1x1_1  = H1x1_1  +    -0.09954698695146 * AcceptedCmp10
2323542   +          +    -0.22524310184607 * AcceptedCmp20  +     0.18740337227015 *
2323543   +        AcceptedCmp30  +     0.19026415124702 * AcceptedCmp40
2323544   +          +     0.19314620782838 * AcceptedCmp50  +      0.1912627870672 *
2323545   +        Complain0  +     -0.0121309313962 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.09954698695146 * AcceptedCmp10 + -0.22524310184607 
* AcceptedCmp20 + 0.18740337227015 * AcceptedCmp30 + 0.19026415124702 * AcceptedCmp40 + 
0.19314620782838 * AcceptedCmp50 + 0.1912627870672 * Complain0 + -0.0121309313962 * 
HigherEducationBinary0 ;
2323546   +   H1x1_2  = H1x1_2  +     4.87501418914654 * AcceptedCmp10
2323547   +          +    -2.27512281036702 * AcceptedCmp20  +    -2.26229365259357 *
2323548   +        AcceptedCmp30  +    -1.91759307257187 * AcceptedCmp40
2323549   +          +     1.89500877562385 * AcceptedCmp50  +     0.07702263203881 *
2323550   +        Complain0  +     0.22320697170891 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 4.87501418914654 * AcceptedCmp10 + -2.27512281036702 * 
AcceptedCmp20 + -2.26229365259357 * AcceptedCmp30 + -1.91759307257187 * AcceptedCmp40 + 
1.89500877562385 * AcceptedCmp50 + 0.07702263203881 * Complain0 + 0.22320697170891 * 
HigherEducationBinary0 ;
2323551   +   H1x1_1  = H1x1_1  +    -0.20577811382111 * Education2n_Cycle
2323552   +          +     0.38041603001978 * EducationBasic  +    -0.07500001714991 *
2323553   +        EducationGraduation  +    -0.07937937980079 * EducationMaster
2323554   +          +    -0.73074769535078 * Marital_StatusDivorced
2323555   +          +     1.30761047614007 * Marital_StatusMarried
2323556   +          +    -0.89398481770909 * Marital_StatusSingle
2323557   +          +     1.23033906473946 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.20577811382111 * Education2n_Cycle + 
0.38041603001978 * EducationBasic + -0.07500001714991 * EducationGraduation + 
-0.07937937980079 * EducationMaster + -0.73074769535078 * Marital_StatusDivorced + 
1.30761047614007 * Marital_StatusMarried + -0.89398481770909 * Marital_StatusSingle + 
1.23033906473946 * Marital_StatusTogether ;
2323558   +   H1x1_2  = H1x1_2  +    -0.31324299388605 * Education2n_Cycle
2323559   +          +    -0.17261511322993 * EducationBasic  +     0.18531128617792 *
2323560   +        EducationGraduation  +    -0.26755057731607 * EducationMaster
2323561   +          +     0.18252613160517 * Marital_StatusDivorced
2323562   +          +     0.12434140806967 * Marital_StatusMarried
2323563   +          +    -0.30167854485292 * Marital_StatusSingle
2323564   +          +     0.17039487484346 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.31324299388605 * Education2n_Cycle + 
-0.17261511322993 * EducationBasic + 0.18531128617792 * EducationGraduation + 
-0.26755057731607 * EducationMaster + 0.18252613160517 * Marital_StatusDivorced + 
0.12434140806967 * Marital_StatusMarried + -0.30167854485292 * Marital_StatusSingle + 
0.17039487484346 * Marital_StatusTogether ;
2323565   +   H1x1_1  =     1.34903330850071 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.34903330850071 + H1x1_1 ;
2323566   +   H1x1_2  =    -1.30570656722477 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.30570656722477 + H1x1_2 ;
2323567   +   H1x1_3  = 0;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0;
2323568   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
2323569   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2323570   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2323571   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2323572   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2323573   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2323574   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2323575   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2323576   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2323577   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2323578   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2323579   +END;
MPRINT(EM_DIAGRAM):   END;
2323580   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2323581   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2323582   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2323583   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2323584   +END;
MPRINT(EM_DIAGRAM):   END;
2323585   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2323586   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2323587   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2323588   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2323589   +   P_DepVar1  =    -6.93513092547389 * H1x1_1  +    -13.9109136683704 * H1x1_2
2323590   +          +     22.9468369203579 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.93513092547389 * H1x1_1 + -13.9109136683704 * H1x1_2 + 
22.9468369203579 * H1x1_3 ;
2323591   +   P_DepVar1  =    -0.50030602649315 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.50030602649315 + P_DepVar1 ;
2323592   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2323593   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2323594   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2323595   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2323596   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2323597   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2323598   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2323599   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2323600   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2323601   +END;
MPRINT(EM_DIAGRAM):   END;
2323602   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2323603   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2323604   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2323605   +END;
MPRINT(EM_DIAGRAM):   END;
2323606   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2323607   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2323608   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2323609   +END;
MPRINT(EM_DIAGRAM):   END;
2323610   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2323611   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2323612   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2323613   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2323614   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2323615   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2323616   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2323617   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2323618   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2323619   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2323620   +END;
MPRINT(EM_DIAGRAM):   END;
2323621   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2323622   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2323623   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2323624   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2323625    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2323626    quit;
2323627    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2323628    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2323629    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2323630    retain ID 2 Node "AutoNeural8";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural8";
2323631    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2323632    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2420 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2420 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2323633    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2323634    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2323635    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2420 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2420 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2323636    proc sort data=EMWS8.AutoNeural8_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural8_variableset out=_temp2(keep=NAME 
CREATOR);
2323637    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2323638    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL8_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2323639    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2323640    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2323641    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2323642    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2323643    proc contents data=EMWS8.AutoNeural8_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural8_train out=_meta(keep=NAME) noprint;
2323644    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 56 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2323645    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2323646    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2323647    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 56 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 56 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2323648    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2323649    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2323650    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2323651    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 56 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 56 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2323652    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2323653    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2323653  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1459 rows and 5 columns.

2323654    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2323655    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2323656    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1459 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 1459 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2323657    filename _pref
2323657  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2323658    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2323659    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2323660   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2323661   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2323662   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2323663   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2323664   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2323665   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2323666    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2323667    quit;
2323668    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2323669    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2323670    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2323671    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2323672    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2323673    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2323674    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2323675    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2323676    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2323677    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2323678    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2323679    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2323680    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2323681    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2323682    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2323683    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2323684    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2323685    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.04 seconds
      

2323686    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2323687    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2323688    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2323689    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2323690    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2323691    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2323692    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2323693    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2323694    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2323694  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2323695    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2323696    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2323697    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 1463 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2323698    filename _pref
2323698  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2323699    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2323700    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2323701   +
2323702   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2323703   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2323703  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2323704   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2323705   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2323706   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2323707   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2323708   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2323709    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2323710    quit;
2323711    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2323712    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2323713    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2323714    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2323715    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2323716    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2323717    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2323718    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2323719    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2323720    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2323721    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2323722    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2323723    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2323724    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2323725    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2323726    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2323727    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2323728    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2323729    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2323730    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2323731    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2323732    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2323733    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2323734    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2323735    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2323736    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2323737    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2323737  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2323738    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2323739    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2323740    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 1502 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2323741    filename _pref
2323741  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2323742    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2323743    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2323744   +
2323745   +
2323746   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2323747   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2323748   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2323749   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2323750   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2323751   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2323752   +
2323753   +
2323754   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2323755   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2323756   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2323757   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2323758   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2323759   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2323760   +
2323761   +
2323762   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2323763   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2323764   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2323765   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2323766   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2323767   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2323768   +
2323769   +
2323770   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2323771   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2323772   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2323773   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2323774   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2323775   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2323776   +
2323777   +
2323778   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2323779   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2323780   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2323781   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2323782   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2323783   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2323784   +
2323785   +
2323786   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2323787   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2323788   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2323789   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2323790   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2323791   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2323792   +
2323793   +
2323794   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2323795   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2323796   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2323797   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2323798   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2323799   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2323800   +
2323801   +
2323802   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2323803   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2323804   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2323805   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2323806   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2323807   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2323808   +if
2323809   +_FILTERNORM1 not in ( '.')
2323810   + and
2323811   +_FILTERNORM2 not in ( '.')
2323812   + and
2323813   +_FILTERNORM3 not in ( '.')
2323814   + and
2323815   +_FILTERNORM4 not in ( '.')
2323816   + and
2323817   +_FILTERNORM5 not in ( '.')
2323818   + and
2323819   +_FILTERNORM6 not in ( '.')
2323820   + and
2323821   +_FILTERNORM7 not in ( ' ')
2323822   + and
2323823   +_FILTERNORM8 not in ( ' ')
2323824   +and
2323825   +( Dt_Customer ne .)
2323826   +and ( Income ne . and (Income<=107000))
2323827   +and ( Kidhome ne .)
2323828   +and ( MntFishProducts ne .)
2323829   +and ( MntFruits ne .)
2323830   +and ( MntGoldProds ne .)
2323831   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2323832   +and ( MntSweetProducts ne .)
2323833   +and ( MntWines ne .)
2323834   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2323835   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2323836   +and ( NumStorePurchases ne .)
2323837   +and ( NumWebPurchases ne .)
2323838   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2323839   +and ( Recency ne .)
2323840   +and ( Teenhome ne .)
2323841   +and ( Year_Birth ne .)
2323842   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2323843   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2323844   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2323845   +end;
MPRINT(EM_DIAGRAM):   end;
2323846   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2323847   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2323848    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2323849    quit;
2323850    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2323851    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2323852    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2323853    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2323854    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2323855    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2323856    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2323857    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2323858    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2323859    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2323860    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2323861    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2323862    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2323863    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2323864    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2323865    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2323866    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2323867    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2323868    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2323869    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2323870    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2323871    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2323872    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2323873    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2323874    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2323875    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2323876    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2323876  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2323877    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2323878    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2323879    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 1568 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2323880    %macro varDept(fcmpdata=,id=);
2323881    %global nobs&id scoreFlag&id;
2323882    %let scoreFlag&id = 0;
2323883    %if &id=1 or ^&fcmpStart %then %do;
2323884    proc sort data=&fcmpdata out=_temp&id nodupkey;
2323885    by NAME;
2323886    where id=&id and LHS in( %let j=1;
2323887    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2323888    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2323889    "&var" %let j = %eval(&j+1);
2323890    %end;
2323891    );
2323892    run;
2323893    %let dsid = %sysfunc(open(_temp&id));
2323894    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2323895    %let dsid = %sysfunc(close(&dsid));
2323896    %if &&nobs&id %then %do;
2323897    %let scoreFlag&id = 1;
2323898    %let fcmpStart = 1;
2323899    %end;
2323900    %else %let fcmpStart = 0;
2323901    %end;
2323902    %else %do;
2323903    proc sort data=&fcmpdata out=_tempid;
2323904    where id=&id;
2323905    by LHS;
2323906    run;
2323907    %let dsid = %sysfunc(open(_tempid));
2323908    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2323909    %let dsid = %sysfunc(close(&dsid));
2323910    %if ^&&nobs&id %then %do;
2323911    proc datasets lib=work nolist;
2323912    delete _tempid;
2323913    run;
2323914    quit;
2323915    %end;
2323916    %else %do;
2323917    data _tempAll;
2323918    set %let j=%eval(&id-1);
2323919    %do x=1 %to &j;
2323920    %if &&nobs&x %then %do;
2323921    _temp&x %end;
2323922    %end;
2323923    ;
2323924    run;
2323925    proc sql;
2323926    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2323926  ! work._tempid p2 where p.name=p2.lhs;
2323927    quit;
2323928    data _temp&id;
2323929    set _temp&id;
2323930    where LHS ne '' and NAME ne '' and Node ne '';
2323931    run;
2323932    proc datasets lib=work nolist;
2323933    delete _tempAll;
2323934    run;
2323935    %let dsid = %sysfunc(open(_temp&id));
2323936    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2323937    %let dsid = %sysfunc(close(&dsid));
2323938    %if ^&&nobs&id %then %do;
2323939    proc datasets lib=work nolist;
2323940    delete _temp&id;
2323941    run;
2323942    quit;
2323943    %end;
2323944    %else %do;
2323945    %let scoreFlag&id = 1;
2323946    data _temp&id;
2323947    set _temp&id;
2323948    where LHS ne NAME and node ne '';
2323949    run;
2323950    %let dsid = %sysfunc(open(_temp&id));
2323951    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2323952    %let dsid = %sysfunc(close(&dsid));
2323953    %if ^&&nobs&id %then %do;
2323954    proc datasets lib=work nolist;
2323955    delete _temp&id;
2323956    run;
2323957    quit;
2323958    %end;
2323959    %else %do;
2323960    proc sort data=_temp&id nodupkey;
2323961    by LHS NAME;
2323962    run;
2323963    %end;
2323964    %end;
2323965    %end;
2323966    %end;
2323967    %mend varDept;
2323968    %macro optCode(outdata=fcmpdata);
2323969    %global fcmpStart;
2323970    %let fcmpStart = 0;
2323971    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2323972    %let NumNodes=9;
2323973    %do k=1 %to &NumNodes;
2323974    %vardept(fcmpdata=&outdata, id=&k);
2323975    %end;
2323976    %mend optCode;
2323977    %optcode(outData=EMWS8.Ensmbl38_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 143 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 106 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 37 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 37 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 41 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 80 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2323978    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2323979    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2323980    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2323981    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2323982    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2323983    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2323984    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2323985    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2323986    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2323987    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2323987  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

2323988    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2323989    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2323990    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2323991    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2323992    filename _pref
2323992  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMPUBLISHSCORE.sas";
2323993    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2323994    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMPUBLISHSCORE.sas.
2323995   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2323996   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2323997   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2323998   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2323999   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2324000   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2324001   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2324002   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2324003   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2324004   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2324005   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2324006   +LENGTH _WARN_ $4
2324007   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2324008   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2324009   +
2324010   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2324011   +
2324012   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2324013   +
2324014   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2324015   +
2324016   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2324017   +
2324018   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2324019   +
2324020   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2324021   +
2324022   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2324023   +
2324024   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2324025   +
2324026   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2324027   +
2324028   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2324029   +
2324030   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2324031   +
2324032   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2324033   +
2324034   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2324035   +
2324036   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2324037   +
2324038   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2324039   +
2324040   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2324041   +
2324042   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2324043   +
2324044   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2324045   +
2324046   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2324047   +
2324048   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2324049   +
2324050   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2324051   +
2324052   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2324053   +
2324054   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2324055   +
2324056   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2324057   +
2324058   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2324059   +
2324060   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2324061   +
2324062   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2324063   +
2324064   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2324065   +
2324066   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2324067   +
2324068   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2324069   +
2324070   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2324071   +
2324072   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2324073   +
2324074   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2324075   +
2324076   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2324077   +
2324078   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2324079   +
2324080   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2324081   +
2324082   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2324083   +
2324084   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2324085   +
2324086   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2324087   +
2324088   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2324089   +
2324090   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2324091   +
2324092   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2324093   +
2324094   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2324095   +
2324096   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2324097   +
2324098   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2324099   +
2324100   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2324101   +
2324102   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2324103   +
2324104   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2324105   +
2324106   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2324107   +
2324108   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2324109   +
2324110   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2324111   +
2324112   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2324113   +
2324114   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2324115   +
2324116   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2324117   +
2324118   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2324119   +
2324120   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2324121   +
2324122   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2324123   +
2324124   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2324125   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2324126   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2324127   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2324128   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2324129   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324130   +end;
MPRINT(EM_DIAGRAM):   end;
2324131   +else do;
MPRINT(EM_DIAGRAM):   else do;
2324132   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2324133   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2324134   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2324135   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2324136   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2324137   +   end;
MPRINT(EM_DIAGRAM):   end;
2324138   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2324139   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2324140   +   end;
MPRINT(EM_DIAGRAM):   end;
2324141   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2324142   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2324143   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2324144   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324145   +   end;
MPRINT(EM_DIAGRAM):   end;
2324146   +end;
MPRINT(EM_DIAGRAM):   end;
2324147   +
2324148   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2324149   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2324150   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2324151   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2324152   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2324153   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324154   +end;
MPRINT(EM_DIAGRAM):   end;
2324155   +else do;
MPRINT(EM_DIAGRAM):   else do;
2324156   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2324157   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2324158   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2324159   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2324160   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2324161   +   end;
MPRINT(EM_DIAGRAM):   end;
2324162   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2324163   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2324164   +   end;
MPRINT(EM_DIAGRAM):   end;
2324165   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2324166   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2324167   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2324168   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324169   +   end;
MPRINT(EM_DIAGRAM):   end;
2324170   +end;
MPRINT(EM_DIAGRAM):   end;
2324171   +
2324172   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2324173   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2324174   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2324175   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2324176   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2324177   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324178   +end;
MPRINT(EM_DIAGRAM):   end;
2324179   +else do;
MPRINT(EM_DIAGRAM):   else do;
2324180   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2324181   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2324182   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2324183   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2324184   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2324185   +   end;
MPRINT(EM_DIAGRAM):   end;
2324186   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2324187   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2324188   +   end;
MPRINT(EM_DIAGRAM):   end;
2324189   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2324190   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2324191   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2324192   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324193   +   end;
MPRINT(EM_DIAGRAM):   end;
2324194   +end;
MPRINT(EM_DIAGRAM):   end;
2324195   +
2324196   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2324197   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2324198   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2324199   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2324200   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2324201   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324202   +end;
MPRINT(EM_DIAGRAM):   end;
2324203   +else do;
MPRINT(EM_DIAGRAM):   else do;
2324204   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2324205   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2324206   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2324207   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2324208   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2324209   +   end;
MPRINT(EM_DIAGRAM):   end;
2324210   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2324211   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2324212   +   end;
MPRINT(EM_DIAGRAM):   end;
2324213   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2324214   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2324215   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2324216   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324217   +   end;
MPRINT(EM_DIAGRAM):   end;
2324218   +end;
MPRINT(EM_DIAGRAM):   end;
2324219   +
2324220   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2324221   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2324222   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2324223   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2324224   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2324225   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324226   +end;
MPRINT(EM_DIAGRAM):   end;
2324227   +else do;
MPRINT(EM_DIAGRAM):   else do;
2324228   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2324229   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2324230   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2324231   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2324232   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2324233   +   end;
MPRINT(EM_DIAGRAM):   end;
2324234   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2324235   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2324236   +   end;
MPRINT(EM_DIAGRAM):   end;
2324237   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2324238   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2324239   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2324240   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324241   +   end;
MPRINT(EM_DIAGRAM):   end;
2324242   +end;
MPRINT(EM_DIAGRAM):   end;
2324243   +
2324244   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2324245   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2324246   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2324247   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2324248   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2324249   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324250   +end;
MPRINT(EM_DIAGRAM):   end;
2324251   +else do;
MPRINT(EM_DIAGRAM):   else do;
2324252   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2324253   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2324254   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2324255   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2324256   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2324257   +   end;
MPRINT(EM_DIAGRAM):   end;
2324258   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2324259   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2324260   +   end;
MPRINT(EM_DIAGRAM):   end;
2324261   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2324262   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2324263   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2324264   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324265   +   end;
MPRINT(EM_DIAGRAM):   end;
2324266   +end;
MPRINT(EM_DIAGRAM):   end;
2324267   +
2324268   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2324269   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2324270   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2324271   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2324272   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2324273   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324274   +end;
MPRINT(EM_DIAGRAM):   end;
2324275   +else do;
MPRINT(EM_DIAGRAM):   else do;
2324276   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2324277   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2324278   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2324279   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2324280   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2324281   +   end;
MPRINT(EM_DIAGRAM):   end;
2324282   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2324283   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2324284   +   end;
MPRINT(EM_DIAGRAM):   end;
2324285   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2324286   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2324287   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2324288   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324289   +   end;
MPRINT(EM_DIAGRAM):   end;
2324290   +end;
MPRINT(EM_DIAGRAM):   end;
2324291   +
2324292   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2324293   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2324294   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2324295   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2324296   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2324297   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2324298   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2324299   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2324300   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2324301   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2324302   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2324303   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2324304   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2324305   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324306   +end;
MPRINT(EM_DIAGRAM):   end;
2324307   +else do;
MPRINT(EM_DIAGRAM):   else do;
2324308   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2324309   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2324310   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2324311   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2324312   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2324313   +   end;
MPRINT(EM_DIAGRAM):   end;
2324314   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2324315   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2324316   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2324317   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2324318   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2324319   +   end;
MPRINT(EM_DIAGRAM):   end;
2324320   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2324321   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2324322   +   end;
MPRINT(EM_DIAGRAM):   end;
2324323   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2324324   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2324325   +   end;
MPRINT(EM_DIAGRAM):   end;
2324326   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2324327   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2324328   +   end;
MPRINT(EM_DIAGRAM):   end;
2324329   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2324330   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2324331   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2324332   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2324333   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2324334   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2324335   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324336   +   end;
MPRINT(EM_DIAGRAM):   end;
2324337   +end;
MPRINT(EM_DIAGRAM):   end;
2324338   +
2324339   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2324340   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2324341   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2324342   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2324343   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2324344   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2324345   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2324346   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2324347   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2324348   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2324349   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2324350   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2324351   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2324352   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2324353   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324354   +end;
MPRINT(EM_DIAGRAM):   end;
2324355   +else do;
MPRINT(EM_DIAGRAM):   else do;
2324356   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2324357   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2324358   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2324359   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2324360   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2324361   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2324362   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2324363   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2324364   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2324365   +         end;
MPRINT(EM_DIAGRAM):   end;
2324366   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2324367   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2324368   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2324369   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2324370   +            end;
MPRINT(EM_DIAGRAM):   end;
2324371   +         end;
MPRINT(EM_DIAGRAM):   end;
2324372   +      end;
MPRINT(EM_DIAGRAM):   end;
2324373   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2324374   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2324375   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2324376   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2324377   +         end;
MPRINT(EM_DIAGRAM):   end;
2324378   +      end;
MPRINT(EM_DIAGRAM):   end;
2324379   +   end;
MPRINT(EM_DIAGRAM):   end;
2324380   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2324381   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2324382   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2324383   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2324384   +      end;
MPRINT(EM_DIAGRAM):   end;
2324385   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2324386   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2324387   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2324388   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2324389   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2324390   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2324391   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2324392   +         end;
MPRINT(EM_DIAGRAM):   end;
2324393   +      end;
MPRINT(EM_DIAGRAM):   end;
2324394   +   end;
MPRINT(EM_DIAGRAM):   end;
2324395   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2324396   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2324397   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2324398   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2324399   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2324400   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2324401   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324402   +   end;
MPRINT(EM_DIAGRAM):   end;
2324403   +end;
MPRINT(EM_DIAGRAM):   end;
2324404   +
2324405   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2324406   +*** Checking missing input Interval
2324407   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2324408   +
2324409   +IF NMISS(
2324410   +   AcceptedCmpTotal ,
2324411   +   Age ,
2324412   +   Frq ,
2324413   +   Income ,
2324414   +   Kidhome ,
2324415   +   Mnt ,
2324416   +   MntFishProducts ,
2324417   +   MntFruits ,
2324418   +   MntGoldProds ,
2324419   +   MntMeatProducts ,
2324420   +   MntSweetProducts ,
2324421   +   MntWines ,
2324422   +   MonthsAsCustomer ,
2324423   +   NumCatalogPurchases ,
2324424   +   NumDealsPurchases ,
2324425   +   NumDistPurchases ,
2324426   +   NumStorePurchases ,
2324427   +   NumWebPurchases ,
2324428   +   NumWebVisitsMonth ,
2324429   +   RFMstat ,
2324430   +   RMntFrq ,
2324431   +   Recency ,
2324432   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2324433   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2324434   +
2324435   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2324436   +END;
MPRINT(EM_DIAGRAM):   END;
2324437   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2324438   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2324439   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2324440   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2324441   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2324442   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2324443   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2324444   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2324445   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2324446   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2324447   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2324448   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2324449   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2324450   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2324451   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2324452   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2324453   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2324454   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2324455   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2324456   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2324457   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2324458   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2324459   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2324460   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2324461   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2324462   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2324463   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2324464   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2324465   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2324466   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2324467   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2324468   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2324469   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2324470   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2324471   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2324472   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2324473   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2324474   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2324475   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2324476   +END;
MPRINT(EM_DIAGRAM):   END;
2324477   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2324478   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2324479   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2324480   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2324481   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2324482   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2324483   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2324484   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2324485   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2324486   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2324487   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2324488   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2324489   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2324490   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2324491   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2324492   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2324493   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2324494   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2324495   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2324496   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2324497   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2324498   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2324499   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2324500   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2324501   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2324502   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2324503   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2324504   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2324505   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2324506   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2324507   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2324508   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2324509   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2324510   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2324511   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2324512   +   ELSE S_NumCatalogPurchases
2324513   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2324514   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2324515   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2324516   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2324517   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2324518   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2324519   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2324520   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2324521   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2324522   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2324523   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2324524   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2324525   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2324526   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2324527   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2324528   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2324529   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2324530   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2324531   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2324532   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2324533   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2324534   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2324535   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2324536   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2324537   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2324538   +END;
MPRINT(EM_DIAGRAM):   END;
2324539   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2324540   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2324541   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2324542   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2324543   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2324544   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2324545   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2324546   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2324547   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2324548   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2324549   +   H1x1_1  =     -2.0588471958351 * S_AcceptedCmpTotal
2324550   +          +     0.38628980389456 * S_Age  +     -0.8545617733777 * S_Frq
2324551   +          +    -1.37557200210661 * S_Income  +     1.58583945545125 *
2324552   +        S_Kidhome  +    -1.49250871593186 * S_Mnt  +    -2.02986091068301 *
2324553   +        S_MntFishProducts  +     0.28845511703412 * S_MntFruits
2324554   +          +    -0.62495372005095 * S_MntGoldProds  +     3.22144698444712 *
2324555   +        S_MntMeatProducts  +    -2.67158036653801 * S_MntSweetProducts
2324556   +          +    -4.30837863985493 * S_MntWines  +     0.39603200162704 *
2324557   +        S_MonthsAsCustomer  +      1.8259166147951 * S_NumCatalogPurchases
2324558   +          +      3.4758215776031 * S_NumDealsPurchases
2324559   +          +     0.17094021755289 * S_NumDistPurchases
2324560   +          +    -2.72090095694641 * S_NumStorePurchases
2324561   +          +    -0.31877935826328 * S_NumWebPurchases
2324562   +          +    -2.03399974412918 * S_NumWebVisitsMonth
2324563   +          +     2.74309130038659 * S_RFMstat  +    -0.74941844935268 *
2324564   +        S_RMntFrq  +     0.29064555076615 * S_Recency
2324565   +          +    -0.57040700827247 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.0588471958351 * S_AcceptedCmpTotal + 0.38628980389456 * 
S_Age + -0.8545617733777 * S_Frq + -1.37557200210661 * S_Income + 1.58583945545125 * S_Kidhome 
+ -1.49250871593186 * S_Mnt + -2.02986091068301 * S_MntFishProducts + 0.28845511703412 * 
S_MntFruits + -0.62495372005095 * S_MntGoldProds + 3.22144698444712 * S_MntMeatProducts + 
-2.67158036653801 * S_MntSweetProducts + -4.30837863985493 * S_MntWines + 0.39603200162704 * 
S_MonthsAsCustomer + 1.8259166147951 * S_NumCatalogPurchases + 3.4758215776031 * 
S_NumDealsPurchases + 0.17094021755289 * S_NumDistPurchases + -2.72090095694641 * 
S_NumStorePurchases + -0.31877935826328 * S_NumWebPurchases + -2.03399974412918 * 
S_NumWebVisitsMonth + 2.74309130038659 * S_RFMstat + -0.74941844935268 * S_RMntFrq + 
0.29064555076615 * S_Recency + -0.57040700827247 * S_Teenhome ;
2324566   +   H1x1_2  =     -0.5995699177824 * S_AcceptedCmpTotal
2324567   +          +    -1.17769485933608 * S_Age  +     0.95998296288295 * S_Frq
2324568   +          +     -2.2343179478513 * S_Income  +     3.17436638275163 *
2324569   +        S_Kidhome  +     0.46987648124346 * S_Mnt  +     0.07213935656698 *
2324570   +        S_MntFishProducts  +    -1.38055808108069 * S_MntFruits
2324571   +          +     0.62140960451545 * S_MntGoldProds  +     -1.9000500396873 *
2324572   +        S_MntMeatProducts  +    -0.35707372583597 * S_MntSweetProducts
2324573   +          +     1.99720917743483 * S_MntWines  +     0.89245096364062 *
2324574   +        S_MonthsAsCustomer  +    -0.61497875715928 * S_NumCatalogPurchases
2324575   +          +    -1.21013804197082 * S_NumDealsPurchases
2324576   +          +     0.59974279122188 * S_NumDistPurchases
2324577   +          +     1.92425710681156 * S_NumStorePurchases
2324578   +          +     1.02413182452324 * S_NumWebPurchases
2324579   +          +    -3.63276285340174 * S_NumWebVisitsMonth
2324580   +          +     0.33919100670479 * S_RFMstat  +     0.84767315208026 *
2324581   +        S_RMntFrq  +     3.87352563099005 * S_Recency
2324582   +          +     2.74174964084917 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5995699177824 * S_AcceptedCmpTotal + -1.17769485933608 * 
S_Age + 0.95998296288295 * S_Frq + -2.2343179478513 * S_Income + 3.17436638275163 * S_Kidhome 
+ 0.46987648124346 * S_Mnt + 0.07213935656698 * S_MntFishProducts + -1.38055808108069 * 
S_MntFruits + 0.62140960451545 * S_MntGoldProds + -1.9000500396873 * S_MntMeatProducts + 
-0.35707372583597 * S_MntSweetProducts + 1.99720917743483 * S_MntWines + 0.89245096364062 * 
S_MonthsAsCustomer + -0.61497875715928 * S_NumCatalogPurchases + -1.21013804197082 * 
S_NumDealsPurchases + 0.59974279122188 * S_NumDistPurchases + 1.92425710681156 * 
S_NumStorePurchases + 1.02413182452324 * S_NumWebPurchases + -3.63276285340174 * 
S_NumWebVisitsMonth + 0.33919100670479 * S_RFMstat + 0.84767315208026 * S_RMntFrq + 
3.87352563099005 * S_Recency + 2.74174964084917 * S_Teenhome ;
2324583   +   H1x1_3  =    -2.27029708882419 * S_AcceptedCmpTotal
2324584   +          +     0.57558817521081 * S_Age  +     0.03666022895146 * S_Frq
2324585   +          +    -0.43764949843184 * S_Income  +     0.05202039236868 *
2324586   +        S_Kidhome  +    -0.17515517773197 * S_Mnt  +      2.1454579331563 *
2324587   +        S_MntFishProducts  +     -0.0544472234117 * S_MntFruits
2324588   +          +    -0.24751372889101 * S_MntGoldProds  +    -7.95986512066472 *
2324589   +        S_MntMeatProducts  +    -0.42258869313323 * S_MntSweetProducts
2324590   +          +      4.6542173574208 * S_MntWines  +     0.27973663838423 *
2324591   +        S_MonthsAsCustomer  +    -0.92923468464154 * S_NumCatalogPurchases
2324592   +          +      0.4928343071801 * S_NumDealsPurchases
2324593   +          +     -0.0196677325409 * S_NumDistPurchases
2324594   +          +     0.44395828164873 * S_NumStorePurchases
2324595   +          +     0.86947051591224 * S_NumWebPurchases
2324596   +          +    -0.96787241206077 * S_NumWebVisitsMonth
2324597   +          +     -0.9429396337834 * S_RFMstat  +    -1.69298966254302 *
2324598   +        S_RMntFrq  +     0.24582117217188 * S_Recency
2324599   +          +    -1.08471509540368 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.27029708882419 * S_AcceptedCmpTotal + 0.57558817521081 * 
S_Age + 0.03666022895146 * S_Frq + -0.43764949843184 * S_Income + 0.05202039236868 * S_Kidhome 
+ -0.17515517773197 * S_Mnt + 2.1454579331563 * S_MntFishProducts + -0.0544472234117 * 
S_MntFruits + -0.24751372889101 * S_MntGoldProds + -7.95986512066472 * S_MntMeatProducts + 
-0.42258869313323 * S_MntSweetProducts + 4.6542173574208 * S_MntWines + 0.27973663838423 * 
S_MonthsAsCustomer + -0.92923468464154 * S_NumCatalogPurchases + 0.4928343071801 * 
S_NumDealsPurchases + -0.0196677325409 * S_NumDistPurchases + 0.44395828164873 * 
S_NumStorePurchases + 0.86947051591224 * S_NumWebPurchases + -0.96787241206077 * 
S_NumWebVisitsMonth + -0.9429396337834 * S_RFMstat + -1.69298966254302 * S_RMntFrq + 
0.24582117217188 * S_Recency + -1.08471509540368 * S_Teenhome ;
2324600   +   H1x1_4  =     0.54181596412096 * S_AcceptedCmpTotal
2324601   +          +    -1.19331526818752 * S_Age  +     0.79853759822324 * S_Frq
2324602   +          +     0.73370928178794 * S_Income  +     0.38661834479377 *
2324603   +        S_Kidhome  +      0.3442876988888 * S_Mnt  +    -0.58769739655035 *
2324604   +        S_MntFishProducts  +     -0.8703586573687 * S_MntFruits
2324605   +          +    -0.06073044217122 * S_MntGoldProds  +     1.06031608775663 *
2324606   +        S_MntMeatProducts  +      0.1600438561366 * S_MntSweetProducts
2324607   +          +    -0.10937637342015 * S_MntWines  +     0.44423445817796 *
2324608   +        S_MonthsAsCustomer  +     2.20653376632749 * S_NumCatalogPurchases
2324609   +          +     1.10280977051932 * S_NumDealsPurchases
2324610   +          +     0.99310057404036 * S_NumDistPurchases
2324611   +          +    -0.05647459609331 * S_NumStorePurchases
2324612   +          +    -0.89852483938631 * S_NumWebPurchases
2324613   +          +     2.63022480227445 * S_NumWebVisitsMonth
2324614   +          +      0.0081819695781 * S_RFMstat  +     1.19338523211724 *
2324615   +        S_RMntFrq  +    -4.46436997560659 * S_Recency
2324616   +          +    -2.03251171372039 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.54181596412096 * S_AcceptedCmpTotal + -1.19331526818752 * 
S_Age + 0.79853759822324 * S_Frq + 0.73370928178794 * S_Income + 0.38661834479377 * S_Kidhome 
+ 0.3442876988888 * S_Mnt + -0.58769739655035 * S_MntFishProducts + -0.8703586573687 * 
S_MntFruits + -0.06073044217122 * S_MntGoldProds + 1.06031608775663 * S_MntMeatProducts + 
0.1600438561366 * S_MntSweetProducts + -0.10937637342015 * S_MntWines + 0.44423445817796 * 
S_MonthsAsCustomer + 2.20653376632749 * S_NumCatalogPurchases + 1.10280977051932 * 
S_NumDealsPurchases + 0.99310057404036 * S_NumDistPurchases + -0.05647459609331 * 
S_NumStorePurchases + -0.89852483938631 * S_NumWebPurchases + 2.63022480227445 * 
S_NumWebVisitsMonth + 0.0081819695781 * S_RFMstat + 1.19338523211724 * S_RMntFrq + 
-4.46436997560659 * S_Recency + -2.03251171372039 * S_Teenhome ;
2324617   +   H1x1_5  =    -1.03227948250072 * S_AcceptedCmpTotal
2324618   +          +     0.25510562405413 * S_Age  +     0.11938172756061 * S_Frq
2324619   +          +    -0.88855927472898 * S_Income  +    -0.98732962014399 *
2324620   +        S_Kidhome  +     0.57537935682752 * S_Mnt  +     0.07702692666996 *
2324621   +        S_MntFishProducts  +     0.69541223905843 * S_MntFruits
2324622   +          +    -0.26720187465927 * S_MntGoldProds  +    -0.03938241662919 *
2324623   +        S_MntMeatProducts  +     1.08781093588885 * S_MntSweetProducts
2324624   +          +     1.16253823123182 * S_MntWines  +    -1.60607722651025 *
2324625   +        S_MonthsAsCustomer  +    -1.69043794225498 * S_NumCatalogPurchases
2324626   +          +    -2.62220616180571 * S_NumDealsPurchases
2324627   +          +    -0.51737930835331 * S_NumDistPurchases
2324628   +          +     0.88655783158133 * S_NumStorePurchases
2324629   +          +     0.35132468809969 * S_NumWebPurchases
2324630   +          +     -1.6320869675862 * S_NumWebVisitsMonth
2324631   +          +     0.33776958473405 * S_RFMstat  +    -0.42290181425075 *
2324632   +        S_RMntFrq  +     1.06226028677401 * S_Recency
2324633   +          +     1.11855899514962 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.03227948250072 * S_AcceptedCmpTotal + 0.25510562405413 * 
S_Age + 0.11938172756061 * S_Frq + -0.88855927472898 * S_Income + -0.98732962014399 * 
S_Kidhome + 0.57537935682752 * S_Mnt + 0.07702692666996 * S_MntFishProducts + 0.69541223905843 
* S_MntFruits + -0.26720187465927 * S_MntGoldProds + -0.03938241662919 * S_MntMeatProducts + 
1.08781093588885 * S_MntSweetProducts + 1.16253823123182 * S_MntWines + -1.60607722651025 * 
S_MonthsAsCustomer + -1.69043794225498 * S_NumCatalogPurchases + -2.62220616180571 * 
S_NumDealsPurchases + -0.51737930835331 * S_NumDistPurchases + 0.88655783158133 * 
S_NumStorePurchases + 0.35132468809969 * S_NumWebPurchases + -1.6320869675862 * 
S_NumWebVisitsMonth + 0.33776958473405 * S_RFMstat + -0.42290181425075 * S_RMntFrq + 
1.06226028677401 * S_Recency + 1.11855899514962 * S_Teenhome ;
2324634   +   H1x1_1  = H1x1_1  +     0.53637737817097 * AcceptedCmp10
2324635   +          +    -1.85405146733588 * AcceptedCmp20  +    -1.47621046566649 *
2324636   +        AcceptedCmp30  +    -1.37767318086242 * AcceptedCmp40
2324637   +          +    -0.96348396070145 * AcceptedCmp50  +    -1.30976546088379 *
2324638   +        Complain0  +    -0.54848314184314 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.53637737817097 * AcceptedCmp10 + -1.85405146733588 * 
AcceptedCmp20 + -1.47621046566649 * AcceptedCmp30 + -1.37767318086242 * AcceptedCmp40 + 
-0.96348396070145 * AcceptedCmp50 + -1.30976546088379 * Complain0 + -0.54848314184314 * 
HigherEducationBinary0 ;
2324639   +   H1x1_2  = H1x1_2  +     0.18445380584184 * AcceptedCmp10
2324640   +          +    -0.69257274561716 * AcceptedCmp20  +     0.17226038285159 *
2324641   +        AcceptedCmp30  +    -1.06145995435722 * AcceptedCmp40
2324642   +          +     1.23459262841144 * AcceptedCmp50  +    -0.14674063302587 *
2324643   +        Complain0  +    -1.08422405648698 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.18445380584184 * AcceptedCmp10 + -0.69257274561716 * 
AcceptedCmp20 + 0.17226038285159 * AcceptedCmp30 + -1.06145995435722 * AcceptedCmp40 + 
1.23459262841144 * AcceptedCmp50 + -0.14674063302587 * Complain0 + -1.08422405648698 * 
HigherEducationBinary0 ;
2324644   +   H1x1_3  = H1x1_3  +     0.81272808689375 * AcceptedCmp10
2324645   +          +    -0.37057950605918 * AcceptedCmp20  +    -1.75364708883985 *
2324646   +        AcceptedCmp30  +     -1.9879502333289 * AcceptedCmp40
2324647   +          +     2.82649108460951 * AcceptedCmp50  +    -0.14219031901768 *
2324648   +        Complain0  +     -0.5514346363694 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.81272808689375 * AcceptedCmp10 + -0.37057950605918 * 
AcceptedCmp20 + -1.75364708883985 * AcceptedCmp30 + -1.9879502333289 * AcceptedCmp40 + 
2.82649108460951 * AcceptedCmp50 + -0.14219031901768 * Complain0 + -0.5514346363694 * 
HigherEducationBinary0 ;
2324649   +   H1x1_4  = H1x1_4  +    -1.12354567881562 * AcceptedCmp10
2324650   +          +    -1.64564861831306 * AcceptedCmp20  +    -1.84950171464501 *
2324651   +        AcceptedCmp30  +    -2.60581164673686 * AcceptedCmp40
2324652   +          +    -0.53568003317161 * AcceptedCmp50  +    -0.13929928866767 *
2324653   +        Complain0  +     1.18053116626218 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.12354567881562 * AcceptedCmp10 + -1.64564861831306 
* AcceptedCmp20 + -1.84950171464501 * AcceptedCmp30 + -2.60581164673686 * AcceptedCmp40 + 
-0.53568003317161 * AcceptedCmp50 + -0.13929928866767 * Complain0 + 1.18053116626218 * 
HigherEducationBinary0 ;
2324654   +   H1x1_5  = H1x1_5  +     -0.3006993305802 * AcceptedCmp10
2324655   +          +    -0.67101949915278 * AcceptedCmp20  +     0.48950637221178 *
2324656   +        AcceptedCmp30  +     0.25937105093078 * AcceptedCmp40
2324657   +          +       0.650714225549 * AcceptedCmp50  +    -0.53543482850089 *
2324658   +        Complain0  +     0.62014708316206 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.3006993305802 * AcceptedCmp10 + -0.67101949915278 * 
AcceptedCmp20 + 0.48950637221178 * AcceptedCmp30 + 0.25937105093078 * AcceptedCmp40 + 
0.650714225549 * AcceptedCmp50 + -0.53543482850089 * Complain0 + 0.62014708316206 * 
HigherEducationBinary0 ;
2324659   +   H1x1_1  = H1x1_1  +     0.78710932360637 * Education2n_Cycle
2324660   +          +    -0.34656604802235 * EducationBasic  +     0.11820082193221 *
2324661   +        EducationGraduation  +     1.42539292513854 * EducationMaster
2324662   +          +     0.34809919741136 * Marital_StatusDivorced
2324663   +          +    -0.26594093535929 * Marital_StatusMarried
2324664   +          +     0.70249715999987 * Marital_StatusSingle
2324665   +          +    -0.45710525283449 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.78710932360637 * Education2n_Cycle + 
-0.34656604802235 * EducationBasic + 0.11820082193221 * EducationGraduation + 1.42539292513854 
* EducationMaster + 0.34809919741136 * Marital_StatusDivorced + -0.26594093535929 * 
Marital_StatusMarried + 0.70249715999987 * Marital_StatusSingle + -0.45710525283449 * 
Marital_StatusTogether ;
2324666   +   H1x1_2  = H1x1_2  +    -1.00496261512915 * Education2n_Cycle
2324667   +          +     0.66783492956492 * EducationBasic  +     0.91185122922538 *
2324668   +        EducationGraduation  +    -0.28204692640004 * EducationMaster
2324669   +          +    -0.20448765627193 * Marital_StatusDivorced
2324670   +          +     1.73231344674733 * Marital_StatusMarried
2324671   +          +    -0.70956480480373 * Marital_StatusSingle
2324672   +          +      1.0926428215879 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.00496261512915 * Education2n_Cycle + 
0.66783492956492 * EducationBasic + 0.91185122922538 * EducationGraduation + -0.28204692640004 
* EducationMaster + -0.20448765627193 * Marital_StatusDivorced + 1.73231344674733 * 
Marital_StatusMarried + -0.70956480480373 * Marital_StatusSingle + 1.0926428215879 * 
Marital_StatusTogether ;
2324673   +   H1x1_3  = H1x1_3  +    -0.06222681334412 * Education2n_Cycle
2324674   +          +    -0.00009122618999 * EducationBasic  +    -0.07444046529217 *
2324675   +        EducationGraduation  +     1.01284161768787 * EducationMaster
2324676   +          +     0.30333818684353 * Marital_StatusDivorced
2324677   +          +    -1.44603535988199 * Marital_StatusMarried
2324678   +          +     0.48409598426383 * Marital_StatusSingle
2324679   +          +    -1.14528682521622 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.06222681334412 * Education2n_Cycle + 
-0.00009122618999 * EducationBasic + -0.07444046529217 * EducationGraduation + 
1.01284161768787 * EducationMaster + 0.30333818684353 * Marital_StatusDivorced + 
-1.44603535988199 * Marital_StatusMarried + 0.48409598426383 * Marital_StatusSingle + 
-1.14528682521622 * Marital_StatusTogether ;
2324680   +   H1x1_4  = H1x1_4  +    -0.92316818310935 * Education2n_Cycle
2324681   +          +     0.93590924020503 * EducationBasic  +     0.36762108040277 *
2324682   +        EducationGraduation  +    -1.17735200022013 * EducationMaster
2324683   +          +     -1.5342907846297 * Marital_StatusDivorced
2324684   +          +    -1.79544684592172 * Marital_StatusMarried
2324685   +          +     0.65604313645117 * Marital_StatusSingle
2324686   +          +    -2.08172869142628 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.92316818310935 * Education2n_Cycle + 
0.93590924020503 * EducationBasic + 0.36762108040277 * EducationGraduation + -1.17735200022013 
* EducationMaster + -1.5342907846297 * Marital_StatusDivorced + -1.79544684592172 * 
Marital_StatusMarried + 0.65604313645117 * Marital_StatusSingle + -2.08172869142628 * 
Marital_StatusTogether ;
2324687   +   H1x1_5  = H1x1_5  +    -0.56328800945753 * Education2n_Cycle
2324688   +          +    -0.06918346311418 * EducationBasic  +     -1.5176897786776 *
2324689   +        EducationGraduation  +     0.09618331198762 * EducationMaster
2324690   +          +    -3.97940893560267 * Marital_StatusDivorced
2324691   +          +      3.5880254142663 * Marital_StatusMarried
2324692   +          +     -2.9897737730927 * Marital_StatusSingle
2324693   +          +     3.75098376776525 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.56328800945753 * Education2n_Cycle + 
-0.06918346311418 * EducationBasic + -1.5176897786776 * EducationGraduation + 0.09618331198762 
* EducationMaster + -3.97940893560267 * Marital_StatusDivorced + 3.5880254142663 * 
Marital_StatusMarried + -2.9897737730927 * Marital_StatusSingle + 3.75098376776525 * 
Marital_StatusTogether ;
2324694   +   H1x1_1  =    -2.89135496095875 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.89135496095875 + H1x1_1 ;
2324695   +   H1x1_2  =     0.39943637099295 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.39943637099295 + H1x1_2 ;
2324696   +   H1x1_3  =    -1.08093114818147 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.08093114818147 + H1x1_3 ;
2324697   +   H1x1_4  =    -3.29426643182948 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.29426643182948 + H1x1_4 ;
2324698   +   H1x1_5  =    -1.76822552726746 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.76822552726746 + H1x1_5 ;
2324699   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2324700   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2324701   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2324702   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
2324703   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
2324704   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
2324705   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
2324706   +END;
MPRINT(EM_DIAGRAM):   END;
2324707   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2324708   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2324709   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2324710   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2324711   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2324712   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2324713   +END;
MPRINT(EM_DIAGRAM):   END;
2324714   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2324715   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2324716   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2324717   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2324718   +   H1x2_1  =     1.01981866144831 * S_AcceptedCmpTotal
2324719   +          +    -1.47346125364319 * S_Age  +    -0.08669650492194 * S_Frq
2324720   +          +    -0.51585471637562 * S_Income  +     1.40711190452923 *
2324721   +        S_Kidhome  +    -0.21341957199148 * S_Mnt  +    -0.31211158173505 *
2324722   +        S_MntFishProducts  +    -0.77126486046129 * S_MntFruits
2324723   +          +     -0.4503905849175 * S_MntGoldProds  +     1.01090165857015 *
2324724   +        S_MntMeatProducts  +    -0.05554268249583 * S_MntSweetProducts
2324725   +          +     2.72203992871966 * S_MntWines  +    -0.46212144021719 *
2324726   +        S_MonthsAsCustomer  +    -0.10495120677935 * S_NumCatalogPurchases
2324727   +          +     0.07279889333775 * S_NumDealsPurchases
2324728   +          +     0.07542203992452 * S_NumDistPurchases
2324729   +          +     0.16296239303342 * S_NumStorePurchases
2324730   +          +     1.59193921229231 * S_NumWebPurchases
2324731   +          +    -0.35227839362603 * S_NumWebVisitsMonth
2324732   +          +      1.3224105019117 * S_RFMstat  +    -0.77035988511057 *
2324733   +        S_RMntFrq  +     0.43315770276588 * S_Recency
2324734   +          +     0.43447147039235 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.01981866144831 * S_AcceptedCmpTotal + -1.47346125364319 * 
S_Age + -0.08669650492194 * S_Frq + -0.51585471637562 * S_Income + 1.40711190452923 * 
S_Kidhome + -0.21341957199148 * S_Mnt + -0.31211158173505 * S_MntFishProducts + 
-0.77126486046129 * S_MntFruits + -0.4503905849175 * S_MntGoldProds + 1.01090165857015 * 
S_MntMeatProducts + -0.05554268249583 * S_MntSweetProducts + 2.72203992871966 * S_MntWines + 
-0.46212144021719 * S_MonthsAsCustomer + -0.10495120677935 * S_NumCatalogPurchases + 
0.07279889333775 * S_NumDealsPurchases + 0.07542203992452 * S_NumDistPurchases + 
0.16296239303342 * S_NumStorePurchases + 1.59193921229231 * S_NumWebPurchases + 
-0.35227839362603 * S_NumWebVisitsMonth + 1.3224105019117 * S_RFMstat + -0.77035988511057 * 
S_RMntFrq + 0.43315770276588 * S_Recency + 0.43447147039235 * S_Teenhome ;
2324735   +   H1x2_2  =    -0.07629675162821 * S_AcceptedCmpTotal
2324736   +          +     0.81684969971216 * S_Age  +     0.52870818801428 * S_Frq
2324737   +          +     0.15358022485378 * S_Income  +    -0.64458879887927 *
2324738   +        S_Kidhome  +    -2.12225648421746 * S_Mnt  +     1.05240671673302 *
2324739   +        S_MntFishProducts  +    -0.89595336397918 * S_MntFruits
2324740   +          +    -0.28950558043577 * S_MntGoldProds  +     0.30996043499478 *
2324741   +        S_MntMeatProducts  +     1.27676485470274 * S_MntSweetProducts
2324742   +          +    -1.30045112439384 * S_MntWines  +     1.36110971826862 *
2324743   +        S_MonthsAsCustomer  +     -0.1778244163518 * S_NumCatalogPurchases
2324744   +          +    -0.37456959251084 * S_NumDealsPurchases
2324745   +          +    -1.15252469975668 * S_NumDistPurchases
2324746   +          +    -1.39822501888899 * S_NumStorePurchases
2324747   +          +    -0.32777847360723 * S_NumWebPurchases
2324748   +          +     0.84026499832926 * S_NumWebVisitsMonth
2324749   +          +    -1.47180193258497 * S_RFMstat  +     0.18801983980439 *
2324750   +        S_RMntFrq  +     1.21016626691186 * S_Recency
2324751   +          +    -0.82943594788748 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.07629675162821 * S_AcceptedCmpTotal + 0.81684969971216 * 
S_Age + 0.52870818801428 * S_Frq + 0.15358022485378 * S_Income + -0.64458879887927 * S_Kidhome 
+ -2.12225648421746 * S_Mnt + 1.05240671673302 * S_MntFishProducts + -0.89595336397918 * 
S_MntFruits + -0.28950558043577 * S_MntGoldProds + 0.30996043499478 * S_MntMeatProducts + 
1.27676485470274 * S_MntSweetProducts + -1.30045112439384 * S_MntWines + 1.36110971826862 * 
S_MonthsAsCustomer + -0.1778244163518 * S_NumCatalogPurchases + -0.37456959251084 * 
S_NumDealsPurchases + -1.15252469975668 * S_NumDistPurchases + -1.39822501888899 * 
S_NumStorePurchases + -0.32777847360723 * S_NumWebPurchases + 0.84026499832926 * 
S_NumWebVisitsMonth + -1.47180193258497 * S_RFMstat + 0.18801983980439 * S_RMntFrq + 
1.21016626691186 * S_Recency + -0.82943594788748 * S_Teenhome ;
2324752   +   H1x2_3  =    -0.06736000283511 * S_AcceptedCmpTotal
2324753   +          +    -0.47270148030219 * S_Age  +      1.1959707178877 * S_Frq
2324754   +          +    -1.40081626653738 * S_Income  +     0.35085595025526 *
2324755   +        S_Kidhome  +    -0.43652344252181 * S_Mnt  +     1.12197802721591 *
2324756   +        S_MntFishProducts  +     1.27079634537799 * S_MntFruits
2324757   +          +    -0.03023683680758 * S_MntGoldProds  +     0.51289568088141 *
2324758   +        S_MntMeatProducts  +     1.12894900622408 * S_MntSweetProducts
2324759   +          +    -0.66940205871871 * S_MntWines  +    -1.57211003055303 *
2324760   +        S_MonthsAsCustomer  +     1.47778465205569 * S_NumCatalogPurchases
2324761   +          +     1.14090099538367 * S_NumDealsPurchases
2324762   +          +     -0.2600155774492 * S_NumDistPurchases
2324763   +          +     1.31362002392113 * S_NumStorePurchases
2324764   +          +     1.31465307763555 * S_NumWebPurchases
2324765   +          +    -0.18041623858351 * S_NumWebVisitsMonth
2324766   +          +    -0.12685084546738 * S_RFMstat  +     0.43500462904027 *
2324767   +        S_RMntFrq  +    -0.81910738140729 * S_Recency
2324768   +          +    -0.61936793661609 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.06736000283511 * S_AcceptedCmpTotal + -0.47270148030219 * 
S_Age + 1.1959707178877 * S_Frq + -1.40081626653738 * S_Income + 0.35085595025526 * S_Kidhome 
+ -0.43652344252181 * S_Mnt + 1.12197802721591 * S_MntFishProducts + 1.27079634537799 * 
S_MntFruits + -0.03023683680758 * S_MntGoldProds + 0.51289568088141 * S_MntMeatProducts + 
1.12894900622408 * S_MntSweetProducts + -0.66940205871871 * S_MntWines + -1.57211003055303 * 
S_MonthsAsCustomer + 1.47778465205569 * S_NumCatalogPurchases + 1.14090099538367 * 
S_NumDealsPurchases + -0.2600155774492 * S_NumDistPurchases + 1.31362002392113 * 
S_NumStorePurchases + 1.31465307763555 * S_NumWebPurchases + -0.18041623858351 * 
S_NumWebVisitsMonth + -0.12685084546738 * S_RFMstat + 0.43500462904027 * S_RMntFrq + 
-0.81910738140729 * S_Recency + -0.61936793661609 * S_Teenhome ;
2324769   +   H1x2_4  =    -0.31415783692162 * S_AcceptedCmpTotal
2324770   +          +     0.11061423227332 * S_Age  +    -0.65722939551233 * S_Frq
2324771   +          +     -0.9063192568986 * S_Income  +      0.4013752851291 *
2324772   +        S_Kidhome  +    -1.06795963585271 * S_Mnt  +     0.24969441019479 *
2324773   +        S_MntFishProducts  +    -0.63550038240549 * S_MntFruits
2324774   +          +     1.04454010114015 * S_MntGoldProds  +     0.89912571026653 *
2324775   +        S_MntMeatProducts  +    -1.92356868621234 * S_MntSweetProducts
2324776   +          +     -1.8642245725538 * S_MntWines  +     0.13416556054779 *
2324777   +        S_MonthsAsCustomer  +    -1.01272407075887 * S_NumCatalogPurchases
2324778   +          +     1.06486073796679 * S_NumDealsPurchases
2324779   +          +    -0.04890191247577 * S_NumDistPurchases
2324780   +          +     0.86871320720698 * S_NumStorePurchases
2324781   +          +     0.03183587281884 * S_NumWebPurchases
2324782   +          +     -0.4863802923315 * S_NumWebVisitsMonth
2324783   +          +    -1.38034657666878 * S_RFMstat  +    -0.73640242597195 *
2324784   +        S_RMntFrq  +     0.17186861211542 * S_Recency
2324785   +          +    -0.39595339111048 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.31415783692162 * S_AcceptedCmpTotal + 0.11061423227332 * 
S_Age + -0.65722939551233 * S_Frq + -0.9063192568986 * S_Income + 0.4013752851291 * S_Kidhome 
+ -1.06795963585271 * S_Mnt + 0.24969441019479 * S_MntFishProducts + -0.63550038240549 * 
S_MntFruits + 1.04454010114015 * S_MntGoldProds + 0.89912571026653 * S_MntMeatProducts + 
-1.92356868621234 * S_MntSweetProducts + -1.8642245725538 * S_MntWines + 0.13416556054779 * 
S_MonthsAsCustomer + -1.01272407075887 * S_NumCatalogPurchases + 1.06486073796679 * 
S_NumDealsPurchases + -0.04890191247577 * S_NumDistPurchases + 0.86871320720698 * 
S_NumStorePurchases + 0.03183587281884 * S_NumWebPurchases + -0.4863802923315 * 
S_NumWebVisitsMonth + -1.38034657666878 * S_RFMstat + -0.73640242597195 * S_RMntFrq + 
0.17186861211542 * S_Recency + -0.39595339111048 * S_Teenhome ;
2324786   +   H1x2_5  =     1.68315669988315 * S_AcceptedCmpTotal
2324787   +          +    -1.67467335764173 * S_Age  +     1.29921539173109 * S_Frq
2324788   +          +    -0.52305600367899 * S_Income  +     1.06261291858944 *
2324789   +        S_Kidhome  +     1.77049882170904 * S_Mnt  +    -0.27692609509601 *
2324790   +        S_MntFishProducts  +    -1.23166107817727 * S_MntFruits
2324791   +          +    -2.21476398466362 * S_MntGoldProds  +     1.02542528622621 *
2324792   +        S_MntMeatProducts  +     1.04913114036094 * S_MntSweetProducts
2324793   +          +     0.30606520702636 * S_MntWines  +    -1.15158074964406 *
2324794   +        S_MonthsAsCustomer  +     0.77918810586275 * S_NumCatalogPurchases
2324795   +          +    -0.01160267590349 * S_NumDealsPurchases
2324796   +          +    -0.92773075463083 * S_NumDistPurchases
2324797   +          +    -0.83326680533995 * S_NumStorePurchases
2324798   +          +    -1.16991058954473 * S_NumWebPurchases
2324799   +          +    -2.07771165573723 * S_NumWebVisitsMonth
2324800   +          +     0.59832456826177 * S_RFMstat  +     0.08151078945291 *
2324801   +        S_RMntFrq  +     0.80165981122986 * S_Recency
2324802   +          +     1.41798811088435 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.68315669988315 * S_AcceptedCmpTotal + -1.67467335764173 * 
S_Age + 1.29921539173109 * S_Frq + -0.52305600367899 * S_Income + 1.06261291858944 * S_Kidhome 
+ 1.77049882170904 * S_Mnt + -0.27692609509601 * S_MntFishProducts + -1.23166107817727 * 
S_MntFruits + -2.21476398466362 * S_MntGoldProds + 1.02542528622621 * S_MntMeatProducts + 
1.04913114036094 * S_MntSweetProducts + 0.30606520702636 * S_MntWines + -1.15158074964406 * 
S_MonthsAsCustomer + 0.77918810586275 * S_NumCatalogPurchases + -0.01160267590349 * 
S_NumDealsPurchases + -0.92773075463083 * S_NumDistPurchases + -0.83326680533995 * 
S_NumStorePurchases + -1.16991058954473 * S_NumWebPurchases + -2.07771165573723 * 
S_NumWebVisitsMonth + 0.59832456826177 * S_RFMstat + 0.08151078945291 * S_RMntFrq + 
0.80165981122986 * S_Recency + 1.41798811088435 * S_Teenhome ;
2324803   +   H1x2_1  = H1x2_1  +    -0.16600737981926 * AcceptedCmp10
2324804   +          +     1.41264623988567 * AcceptedCmp20  +      1.0446306999234 *
2324805   +        AcceptedCmp30  +    -1.00688604631169 * AcceptedCmp40
2324806   +          +     0.64523782235527 * AcceptedCmp50  +    -1.76623980391232 *
2324807   +        Complain0  +     1.64644530449125 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.16600737981926 * AcceptedCmp10 + 1.41264623988567 * 
AcceptedCmp20 + 1.0446306999234 * AcceptedCmp30 + -1.00688604631169 * AcceptedCmp40 + 
0.64523782235527 * AcceptedCmp50 + -1.76623980391232 * Complain0 + 1.64644530449125 * 
HigherEducationBinary0 ;
2324808   +   H1x2_2  = H1x2_2  +    -0.39493094663506 * AcceptedCmp10
2324809   +          +    -0.99095404154277 * AcceptedCmp20  +    -0.81166937096774 *
2324810   +        AcceptedCmp30  +     0.14520361414777 * AcceptedCmp40
2324811   +          +    -1.54302055254785 * AcceptedCmp50  +    -0.60600550413714 *
2324812   +        Complain0  +    -3.04730224174859 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.39493094663506 * AcceptedCmp10 + -0.99095404154277 
* AcceptedCmp20 + -0.81166937096774 * AcceptedCmp30 + 0.14520361414777 * AcceptedCmp40 + 
-1.54302055254785 * AcceptedCmp50 + -0.60600550413714 * Complain0 + -3.04730224174859 * 
HigherEducationBinary0 ;
2324813   +   H1x2_3  = H1x2_3  +      1.8650016934441 * AcceptedCmp10
2324814   +          +     0.85335394099291 * AcceptedCmp20  +     0.47327521312159 *
2324815   +        AcceptedCmp30  +    -2.64862753506152 * AcceptedCmp40
2324816   +          +     0.65827168680229 * AcceptedCmp50  +     0.45516433167059 *
2324817   +        Complain0  +    -0.62891111222764 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.8650016934441 * AcceptedCmp10 + 0.85335394099291 * 
AcceptedCmp20 + 0.47327521312159 * AcceptedCmp30 + -2.64862753506152 * AcceptedCmp40 + 
0.65827168680229 * AcceptedCmp50 + 0.45516433167059 * Complain0 + -0.62891111222764 * 
HigherEducationBinary0 ;
2324818   +   H1x2_4  = H1x2_4  +    -0.31781332022679 * AcceptedCmp10
2324819   +          +    -0.35773084257089 * AcceptedCmp20  +      0.0486072265688 *
2324820   +        AcceptedCmp30  +     1.50494203860483 * AcceptedCmp40
2324821   +          +     0.00499691981651 * AcceptedCmp50  +    -0.29977032190776 *
2324822   +        Complain0  +     0.76473087756218 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.31781332022679 * AcceptedCmp10 + -0.35773084257089 
* AcceptedCmp20 + 0.0486072265688 * AcceptedCmp30 + 1.50494203860483 * AcceptedCmp40 + 
0.00499691981651 * AcceptedCmp50 + -0.29977032190776 * Complain0 + 0.76473087756218 * 
HigherEducationBinary0 ;
2324823   +   H1x2_5  = H1x2_5  +     -0.4639041544815 * AcceptedCmp10
2324824   +          +    -1.28977231764453 * AcceptedCmp20  +    -0.03597660273531 *
2324825   +        AcceptedCmp30  +     0.17848986397338 * AcceptedCmp40
2324826   +          +     0.06649914015182 * AcceptedCmp50  +    -0.95633404051563 *
2324827   +        Complain0  +    -0.62555630659121 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.4639041544815 * AcceptedCmp10 + -1.28977231764453 * 
AcceptedCmp20 + -0.03597660273531 * AcceptedCmp30 + 0.17848986397338 * AcceptedCmp40 + 
0.06649914015182 * AcceptedCmp50 + -0.95633404051563 * Complain0 + -0.62555630659121 * 
HigherEducationBinary0 ;
2324828   +   H1x2_1  = H1x2_1  +    -1.75926153465974 * Education2n_Cycle
2324829   +          +     0.96255168005018 * EducationBasic  +     -1.2029563052774 *
2324830   +        EducationGraduation  +    -0.22397098444024 * EducationMaster
2324831   +          +    -0.10361472385198 * Marital_StatusDivorced
2324832   +          +     0.05574820877885 * Marital_StatusMarried
2324833   +          +     0.13130988205279 * Marital_StatusSingle
2324834   +          +    -1.51165564425323 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.75926153465974 * Education2n_Cycle + 
0.96255168005018 * EducationBasic + -1.2029563052774 * EducationGraduation + -0.22397098444024 
* EducationMaster + -0.10361472385198 * Marital_StatusDivorced + 0.05574820877885 * 
Marital_StatusMarried + 0.13130988205279 * Marital_StatusSingle + -1.51165564425323 * 
Marital_StatusTogether ;
2324835   +   H1x2_2  = H1x2_2  +     1.73281005101474 * Education2n_Cycle
2324836   +          +    -0.51397811328576 * EducationBasic  +     1.64296402934617 *
2324837   +        EducationGraduation  +     1.44983505587452 * EducationMaster
2324838   +          +      0.0059353523794 * Marital_StatusDivorced
2324839   +          +    -0.59379435051653 * Marital_StatusMarried
2324840   +          +    -1.93587108708999 * Marital_StatusSingle
2324841   +          +     2.02868236823401 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.73281005101474 * Education2n_Cycle + 
-0.51397811328576 * EducationBasic + 1.64296402934617 * EducationGraduation + 1.44983505587452 
* EducationMaster + 0.0059353523794 * Marital_StatusDivorced + -0.59379435051653 * 
Marital_StatusMarried + -1.93587108708999 * Marital_StatusSingle + 2.02868236823401 * 
Marital_StatusTogether ;
2324842   +   H1x2_3  = H1x2_3  +     0.11852280587389 * Education2n_Cycle
2324843   +          +    -0.87963137637159 * EducationBasic  +      0.3212539101977 *
2324844   +        EducationGraduation  +     0.16497026569775 * EducationMaster
2324845   +          +    -0.74333797840386 * Marital_StatusDivorced
2324846   +          +    -0.93061135117658 * Marital_StatusMarried
2324847   +          +     1.04024182655844 * Marital_StatusSingle
2324848   +          +     0.58313569749679 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.11852280587389 * Education2n_Cycle + 
-0.87963137637159 * EducationBasic + 0.3212539101977 * EducationGraduation + 0.16497026569775 
* EducationMaster + -0.74333797840386 * Marital_StatusDivorced + -0.93061135117658 * 
Marital_StatusMarried + 1.04024182655844 * Marital_StatusSingle + 0.58313569749679 * 
Marital_StatusTogether ;
2324849   +   H1x2_4  = H1x2_4  +     -1.2170050337036 * Education2n_Cycle
2324850   +          +    -0.83332588435502 * EducationBasic  +     0.43242117148542 *
2324851   +        EducationGraduation  +     1.71196178631559 * EducationMaster
2324852   +          +    -3.01050675344463 * Marital_StatusDivorced
2324853   +          +      0.1638723582239 * Marital_StatusMarried
2324854   +          +     0.94548468360304 * Marital_StatusSingle
2324855   +          +    -0.67333048623615 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.2170050337036 * Education2n_Cycle + 
-0.83332588435502 * EducationBasic + 0.43242117148542 * EducationGraduation + 1.71196178631559 
* EducationMaster + -3.01050675344463 * Marital_StatusDivorced + 0.1638723582239 * 
Marital_StatusMarried + 0.94548468360304 * Marital_StatusSingle + -0.67333048623615 * 
Marital_StatusTogether ;
2324856   +   H1x2_5  = H1x2_5  +    -0.66774344191467 * Education2n_Cycle
2324857   +          +     0.75591270317285 * EducationBasic  +    -0.29337325355435 *
2324858   +        EducationGraduation  +     0.57450456442662 * EducationMaster
2324859   +          +    -1.37013926274158 * Marital_StatusDivorced
2324860   +          +    -0.34168970042779 * Marital_StatusMarried
2324861   +          +     0.63383683543962 * Marital_StatusSingle
2324862   +          +     0.75118887766443 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.66774344191467 * Education2n_Cycle + 
0.75591270317285 * EducationBasic + -0.29337325355435 * EducationGraduation + 0.57450456442662 
* EducationMaster + -1.37013926274158 * Marital_StatusDivorced + -0.34168970042779 * 
Marital_StatusMarried + 0.63383683543962 * Marital_StatusSingle + 0.75118887766443 * 
Marital_StatusTogether ;
2324863   +   H1x2_1  =    -1.05245414685459 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.05245414685459 + H1x2_1 ;
2324864   +   H1x2_2  =    -2.03581716915326 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.03581716915326 + H1x2_2 ;
2324865   +   H1x2_3  =    -0.95118365599668 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.95118365599668 + H1x2_3 ;
2324866   +   H1x2_4  =    -1.36171328515396 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.36171328515396 + H1x2_4 ;
2324867   +   H1x2_5  =    -0.09438724866767 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.09438724866767 + H1x2_5 ;
2324868   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2324869   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2324870   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
2324871   +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
2324872   +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
2324873   +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
2324874   +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
2324875   +END;
MPRINT(EM_DIAGRAM):   END;
2324876   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2324877   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2324878   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2324879   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2324880   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2324881   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2324882   +END;
MPRINT(EM_DIAGRAM):   END;
2324883   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2324884   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2324885   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2324886   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2324887   +   H2x1_1  =    -3.66869890196477 * H1x1_1  +     3.66276995899936 * H1x1_2
2324888   +          +      4.9852243803889 * H1x1_3  +    -3.40922134517979 * H1x1_4
2324889   +          +     2.26435924995065 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -3.66869890196477 * H1x1_1 + 3.66276995899936 * H1x1_2 + 
4.9852243803889 * H1x1_3 + -3.40922134517979 * H1x1_4 + 2.26435924995065 * H1x1_5 ;
2324890   +   H2x1_2  =     1.35296027814603 * H1x1_1  +     0.16236277762099 * H1x1_2
2324891   +          +      0.4094634018093 * H1x1_3  +    -1.05233334297087 * H1x1_4
2324892   +          +    -0.51735435825901 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.35296027814603 * H1x1_1 + 0.16236277762099 * H1x1_2 + 
0.4094634018093 * H1x1_3 + -1.05233334297087 * H1x1_4 + -0.51735435825901 * H1x1_5 ;
2324893   +   H2x1_3  =    -3.57467050540101 * H1x1_1  +     1.96738498758928 * H1x1_2
2324894   +          +      3.1519435691133 * H1x1_3  +    -2.73180541318793 * H1x1_4
2324895   +          +     2.53621803266955 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -3.57467050540101 * H1x1_1 + 1.96738498758928 * H1x1_2 + 
3.1519435691133 * H1x1_3 + -2.73180541318793 * H1x1_4 + 2.53621803266955 * H1x1_5 ;
2324896   +   H2x1_4  =    -1.77897865469649 * H1x1_1  +    -0.34371813002239 * H1x1_2
2324897   +          +     0.97655076671381 * H1x1_3  +    -0.53022688394362 * H1x1_4
2324898   +          +     1.78452647837415 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -1.77897865469649 * H1x1_1 + -0.34371813002239 * H1x1_2 + 
0.97655076671381 * H1x1_3 + -0.53022688394362 * H1x1_4 + 1.78452647837415 * H1x1_5 ;
2324899   +   H2x1_5  =    -2.37976522756638 * H1x1_1  +     2.07473947277607 * H1x1_2
2324900   +          +      3.6114905073808 * H1x1_3  +    -4.57668209905758 * H1x1_4
2324901   +          +     2.97931581645784 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.37976522756638 * H1x1_1 + 2.07473947277607 * H1x1_2 + 
3.6114905073808 * H1x1_3 + -4.57668209905758 * H1x1_4 + 2.97931581645784 * H1x1_5 ;
2324902   +   H2x1_1  = H2x1_1  +      0.5090021095213 * H1x2_1
2324903   +          +    -0.99996599039586 * H1x2_2  +     0.09317756017156 * H1x2_3
2324904   +          +     0.07646136890595 * H1x2_4  +    -0.86729455140311 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.5090021095213 * H1x2_1 + -0.99996599039586 * H1x2_2 
+ 0.09317756017156 * H1x2_3 + 0.07646136890595 * H1x2_4 + -0.86729455140311 * H1x2_5 ;
2324905   +   H2x1_2  = H2x1_2  +     0.54458122713319 * H1x2_1
2324906   +          +    -1.01527351866283 * H1x2_2  +    -1.05264779960249 * H1x2_3
2324907   +          +     2.00891057398994 * H1x2_4  +     0.23877185330348 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.54458122713319 * H1x2_1 + -1.01527351866283 * H1x2_2 
+ -1.05264779960249 * H1x2_3 + 2.00891057398994 * H1x2_4 + 0.23877185330348 * H1x2_5 ;
2324908   +   H2x1_3  = H2x1_3  +     0.45936122831356 * H1x2_1
2324909   +          +    -0.78158455560098 * H1x2_2  +    -0.93755507764598 * H1x2_3
2324910   +          +    -0.41290092050446 * H1x2_4  +    -1.08076286104858 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.45936122831356 * H1x2_1 + -0.78158455560098 * H1x2_2 
+ -0.93755507764598 * H1x2_3 + -0.41290092050446 * H1x2_4 + -1.08076286104858 * H1x2_5 ;
2324911   +   H2x1_4  = H2x1_4  +     0.95365620475779 * H1x2_1
2324912   +          +    -0.84100294393078 * H1x2_2  +     0.70463413466954 * H1x2_3
2324913   +          +     1.80542761219637 * H1x2_4  +     0.45881360213194 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.95365620475779 * H1x2_1 + -0.84100294393078 * H1x2_2 
+ 0.70463413466954 * H1x2_3 + 1.80542761219637 * H1x2_4 + 0.45881360213194 * H1x2_5 ;
2324914   +   H2x1_5  = H2x1_5  +     0.59629215620441 * H1x2_1
2324915   +          +    -0.66300910076078 * H1x2_2  +     0.53748646350811 * H1x2_3
2324916   +          +     0.40402787748621 * H1x2_4  +    -0.68066387330661 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.59629215620441 * H1x2_1 + -0.66300910076078 * H1x2_2 
+ 0.53748646350811 * H1x2_3 + 0.40402787748621 * H1x2_4 + -0.68066387330661 * H1x2_5 ;
2324917   +   H2x1_1  =    -1.36901208947371 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.36901208947371 + H2x1_1 ;
2324918   +   H2x1_2  =     1.02513270875023 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.02513270875023 + H2x1_2 ;
2324919   +   H2x1_3  =     0.21017025934674 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.21017025934674 + H2x1_3 ;
2324920   +   H2x1_4  =    -1.15214364807652 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -1.15214364807652 + H2x1_4 ;
2324921   +   H2x1_5  =    -1.32590257108023 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.32590257108023 + H2x1_5 ;
2324922   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2324923   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2324924   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
2324925   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
2324926   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
2324927   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
2324928   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
2324929   +END;
MPRINT(EM_DIAGRAM):   END;
2324930   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2324931   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2324932   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2324933   +   H2x1_3  = .;
The SAS System

MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2324934   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2324935   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2324936   +END;
MPRINT(EM_DIAGRAM):   END;
2324937   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2324938   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2324939   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2324940   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2324941   +   P_DepVar1  =    -9.23664553457504 * H2x1_1  +     1.34611690798114 * H2x1_2
2324942   +          +    -6.67077102946651 * H2x1_3  +    -1.67245227685142 * H2x1_4
2324943   +          +    -7.67053346287177 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.23664553457504 * H2x1_1 + 1.34611690798114 * H2x1_2 + 
-6.67077102946651 * H2x1_3 + -1.67245227685142 * H2x1_4 + -7.67053346287177 * H2x1_5 ;
2324944   +   P_DepVar1  =      3.4145227149582 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.4145227149582 + P_DepVar1 ;
2324945   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2324946   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2324947   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2324948   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2324949   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2324950   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2324951   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2324952   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2324953   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2324954   +END;
MPRINT(EM_DIAGRAM):   END;
2324955   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2324956   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2324957   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2324958   +END;
MPRINT(EM_DIAGRAM):   END;
2324959   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2324960   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2324961   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2324962   +END;
MPRINT(EM_DIAGRAM):   END;
2324963   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2324964   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2324965   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2324966   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2324967   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2324968   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2324969   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2324970   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2324971   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2324972   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2324973   +END;
MPRINT(EM_DIAGRAM):   END;
2324974   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2324975   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2324976   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2324977   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2324978    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2324979    quit;
2324980    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2324981    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2324982    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2324983    retain ID 2 Node "AutoNeural10";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural10";
2324984    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2324985    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4719 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4719 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2324986    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2324987    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2324988    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4719 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4719 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2324989    proc sort data=EMWS8.AutoNeural10_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural10_variableset out=_temp2(keep=NAME 
CREATOR);
2324990    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2324991    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL10_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2324992    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2324993    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2324994    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2324995    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2324996    proc contents data=EMWS8.AutoNeural10_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural10_train out=_meta(keep=NAME) noprint;
2324997    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 68 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2324998    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2324999    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2325000    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 68 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 68 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2325001    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2325002    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2325003    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2325004    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 68 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 68 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2325005    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2325006    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2325006  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 2479 rows and 5 columns.

2325007    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2325008    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2325009    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 2479 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 2479 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2325010    filename _pref
2325010  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2325011    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2325012    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2325013   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2325014   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2325015   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2325016   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2325017   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2325018   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2325019    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2325020    quit;
2325021    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2325022    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2325023    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2325024    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2325025    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2325026    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2325027    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2325028    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2325029    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2325030    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2325031    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2325032    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2325033    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2325034    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2325035    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2325036    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2325037    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2325038    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2325039    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2325040    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2325041    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2325042    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2325043    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2325044    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2325045    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2325046    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2325047    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2325047  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2325048    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2325049    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2325050    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 2483 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2325051    filename _pref
2325051  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2325052    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2325053    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2325054   +
2325055   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2325056   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2325056  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2325057   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2325058   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2325059   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2325060   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2325061   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2325062    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2325063    quit;
2325064    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2325065    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2325066    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2325067    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2325068    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2325069    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2325070    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2325071    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2325072    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2325073    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2325074    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2325075    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2325076    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2325077    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2325078    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2325079    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2325080    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2325081    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2325082    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2325083    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2325084    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2325085    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2325086    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2325087    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2325088    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2325089    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2325090    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2325090  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2325091    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2325092    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2325093    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 2522 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2325094    filename _pref
2325094  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2325095    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2325096    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2325097   +
2325098   +
2325099   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2325100   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2325101   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2325102   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2325103   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2325104   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2325105   +
2325106   +
2325107   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2325108   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2325109   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2325110   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2325111   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2325112   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2325113   +
2325114   +
2325115   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2325116   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2325117   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2325118   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2325119   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2325120   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2325121   +
2325122   +
2325123   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2325124   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2325125   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2325126   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2325127   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2325128   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2325129   +
2325130   +
2325131   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2325132   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2325133   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2325134   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2325135   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2325136   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2325137   +
2325138   +
2325139   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2325140   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2325141   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2325142   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2325143   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2325144   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2325145   +
2325146   +
2325147   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2325148   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2325149   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2325150   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2325151   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2325152   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2325153   +
2325154   +
2325155   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2325156   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2325157   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2325158   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2325159   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2325160   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2325161   +if
2325162   +_FILTERNORM1 not in ( '.')
2325163   + and
2325164   +_FILTERNORM2 not in ( '.')
2325165   + and
2325166   +_FILTERNORM3 not in ( '.')
2325167   + and
2325168   +_FILTERNORM4 not in ( '.')
2325169   + and
2325170   +_FILTERNORM5 not in ( '.')
2325171   + and
2325172   +_FILTERNORM6 not in ( '.')
2325173   + and
2325174   +_FILTERNORM7 not in ( ' ')
2325175   + and
2325176   +_FILTERNORM8 not in ( ' ')
2325177   +and
2325178   +( Dt_Customer ne .)
2325179   +and ( Income ne . and (Income<=107000))
2325180   +and ( Kidhome ne .)
2325181   +and ( MntFishProducts ne .)
2325182   +and ( MntFruits ne .)
2325183   +and ( MntGoldProds ne .)
2325184   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2325185   +and ( MntSweetProducts ne .)
2325186   +and ( MntWines ne .)
2325187   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2325188   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2325189   +and ( NumStorePurchases ne .)
2325190   +and ( NumWebPurchases ne .)
2325191   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2325192   +and ( Recency ne .)
2325193   +and ( Teenhome ne .)
2325194   +and ( Year_Birth ne .)
2325195   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2325196   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2325197   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2325198   +end;
MPRINT(EM_DIAGRAM):   end;
2325199   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2325200   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2325201    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2325202    quit;
2325203    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2325204    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2325205    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2325206    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2325207    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2325208    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2325209    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2325210    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2325211    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2325212    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2325213    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2325214    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2325215    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2325216    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2325217    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2325218    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2325219    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2325220    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2325221    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2325222    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2325223    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2325224    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2325225    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2325226    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2325227    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2325228    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2325229    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2325229  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2325230    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2325231    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2325232    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 2588 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2325233    %macro varDept(fcmpdata=,id=);
2325234    %global nobs&id scoreFlag&id;
2325235    %let scoreFlag&id = 0;
2325236    %if &id=1 or ^&fcmpStart %then %do;
2325237    proc sort data=&fcmpdata out=_temp&id nodupkey;
2325238    by NAME;
2325239    where id=&id and LHS in( %let j=1;
2325240    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2325241    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2325242    "&var" %let j = %eval(&j+1);
2325243    %end;
2325244    );
2325245    run;
2325246    %let dsid = %sysfunc(open(_temp&id));
2325247    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2325248    %let dsid = %sysfunc(close(&dsid));
2325249    %if &&nobs&id %then %do;
2325250    %let scoreFlag&id = 1;
2325251    %let fcmpStart = 1;
2325252    %end;
2325253    %else %let fcmpStart = 0;
2325254    %end;
2325255    %else %do;
2325256    proc sort data=&fcmpdata out=_tempid;
2325257    where id=&id;
2325258    by LHS;
2325259    run;
2325260    %let dsid = %sysfunc(open(_tempid));
2325261    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2325262    %let dsid = %sysfunc(close(&dsid));
2325263    %if ^&&nobs&id %then %do;
2325264    proc datasets lib=work nolist;
2325265    delete _tempid;
2325266    run;
2325267    quit;
2325268    %end;
2325269    %else %do;
2325270    data _tempAll;
2325271    set %let j=%eval(&id-1);
2325272    %do x=1 %to &j;
2325273    %if &&nobs&x %then %do;
2325274    _temp&x %end;
2325275    %end;
2325276    ;
2325277    run;
2325278    proc sql;
2325279    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2325279  ! work._tempid p2 where p.name=p2.lhs;
2325280    quit;
2325281    data _temp&id;
2325282    set _temp&id;
2325283    where LHS ne '' and NAME ne '' and Node ne '';
2325284    run;
2325285    proc datasets lib=work nolist;
2325286    delete _tempAll;
2325287    run;
2325288    %let dsid = %sysfunc(open(_temp&id));
2325289    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2325290    %let dsid = %sysfunc(close(&dsid));
2325291    %if ^&&nobs&id %then %do;
2325292    proc datasets lib=work nolist;
2325293    delete _temp&id;
2325294    run;
2325295    quit;
2325296    %end;
2325297    %else %do;
2325298    %let scoreFlag&id = 1;
2325299    data _temp&id;
2325300    set _temp&id;
2325301    where LHS ne NAME and node ne '';
2325302    run;
2325303    %let dsid = %sysfunc(open(_temp&id));
2325304    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2325305    %let dsid = %sysfunc(close(&dsid));
2325306    %if ^&&nobs&id %then %do;
2325307    proc datasets lib=work nolist;
2325308    delete _temp&id;
2325309    run;
2325310    quit;
2325311    %end;
2325312    %else %do;
2325313    proc sort data=_temp&id nodupkey;
2325314    by LHS NAME;
2325315    run;
2325316    %end;
2325317    %end;
2325318    %end;
2325319    %end;
2325320    %mend varDept;
2325321    %macro optCode(outdata=fcmpdata);
2325322    %global fcmpStart;
2325323    %let fcmpStart = 0;
2325324    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2325325    %let NumNodes=9;
2325326    %do k=1 %to &NumNodes;
2325327    %vardept(fcmpdata=&outdata, id=&k);
2325328    %end;
2325329    %mend optCode;
2325330    %optcode(outData=EMWS8.Ensmbl38_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 179 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 130 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 49 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 49 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 49 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 49 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 53 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 49 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 92 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2325331    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2325332    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2325333    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2325334    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2325335    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2325336    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2325337    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2325338    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2325339    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2325340    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2325340  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

2325341    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

2325342    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2325343    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2325344    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2325345    filename _pref
2325345  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
2325346    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2325347    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas.
2325348   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2325349   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2325350   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2325351   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2325352   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2325353   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2325354   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2325355   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2325356   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2325357   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2325358   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2325359   +LENGTH _WARN_ $4
2325360   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2325361   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2325362   +
2325363   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2325364   +
2325365   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2325366   +
2325367   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2325368   +
2325369   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2325370   +
2325371   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2325372   +
2325373   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2325374   +
2325375   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2325376   +
2325377   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2325378   +
2325379   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2325380   +
2325381   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2325382   +
2325383   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2325384   +
2325385   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2325386   +
2325387   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2325388   +
2325389   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2325390   +
2325391   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2325392   +
2325393   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2325394   +
2325395   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2325396   +
2325397   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2325398   +
2325399   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2325400   +
2325401   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2325402   +
2325403   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2325404   +
2325405   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2325406   +
2325407   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2325408   +
2325409   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2325410   +
2325411   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2325412   +
2325413   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2325414   +
2325415   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2325416   +
2325417   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2325418   +
2325419   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2325420   +
2325421   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2325422   +
2325423   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2325424   +
2325425   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2325426   +
2325427   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2325428   +
2325429   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2325430   +
2325431   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2325432   +
2325433   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2325434   +
2325435   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2325436   +
2325437   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2325438   +
2325439   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2325440   +
2325441   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2325442   +
2325443   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2325444   +
2325445   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2325446   +
2325447   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2325448   +
2325449   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2325450   +
2325451   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2325452   +
2325453   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2325454   +
2325455   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2325456   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2325457   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2325458   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2325459   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2325460   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2325461   +end;
MPRINT(EM_DIAGRAM):   end;
2325462   +else do;
MPRINT(EM_DIAGRAM):   else do;
2325463   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2325464   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2325465   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2325466   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2325467   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2325468   +   end;
MPRINT(EM_DIAGRAM):   end;
2325469   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2325470   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2325471   +   end;
MPRINT(EM_DIAGRAM):   end;
2325472   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2325473   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2325474   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2325475   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2325476   +   end;
MPRINT(EM_DIAGRAM):   end;
2325477   +end;
MPRINT(EM_DIAGRAM):   end;
2325478   +
2325479   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2325480   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2325481   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2325482   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2325483   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2325484   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2325485   +end;
MPRINT(EM_DIAGRAM):   end;
2325486   +else do;
MPRINT(EM_DIAGRAM):   else do;
2325487   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2325488   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2325489   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2325490   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2325491   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2325492   +   end;
MPRINT(EM_DIAGRAM):   end;
2325493   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2325494   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2325495   +   end;
MPRINT(EM_DIAGRAM):   end;
2325496   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2325497   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2325498   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2325499   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2325500   +   end;
MPRINT(EM_DIAGRAM):   end;
2325501   +end;
MPRINT(EM_DIAGRAM):   end;
2325502   +
2325503   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2325504   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2325505   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2325506   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2325507   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2325508   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2325509   +end;
MPRINT(EM_DIAGRAM):   end;
2325510   +else do;
MPRINT(EM_DIAGRAM):   else do;
2325511   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2325512   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2325513   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2325514   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2325515   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2325516   +   end;
MPRINT(EM_DIAGRAM):   end;
2325517   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2325518   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2325519   +   end;
MPRINT(EM_DIAGRAM):   end;
2325520   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2325521   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2325522   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2325523   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2325524   +   end;
MPRINT(EM_DIAGRAM):   end;
2325525   +end;
MPRINT(EM_DIAGRAM):   end;
2325526   +
2325527   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2325528   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2325529   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2325530   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2325531   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2325532   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2325533   +end;
MPRINT(EM_DIAGRAM):   end;
2325534   +else do;
MPRINT(EM_DIAGRAM):   else do;
2325535   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2325536   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2325537   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2325538   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2325539   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2325540   +   end;
MPRINT(EM_DIAGRAM):   end;
2325541   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2325542   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2325543   +   end;
MPRINT(EM_DIAGRAM):   end;
2325544   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2325545   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2325546   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2325547   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2325548   +   end;
MPRINT(EM_DIAGRAM):   end;
2325549   +end;
MPRINT(EM_DIAGRAM):   end;
2325550   +
2325551   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2325552   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2325553   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2325554   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2325555   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2325556   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2325557   +end;
MPRINT(EM_DIAGRAM):   end;
2325558   +else do;
MPRINT(EM_DIAGRAM):   else do;
2325559   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2325560   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2325561   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2325562   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2325563   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2325564   +   end;
MPRINT(EM_DIAGRAM):   end;
2325565   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2325566   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2325567   +   end;
MPRINT(EM_DIAGRAM):   end;
2325568   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2325569   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2325570   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2325571   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2325572   +   end;
MPRINT(EM_DIAGRAM):   end;
2325573   +end;
MPRINT(EM_DIAGRAM):   end;
2325574   +
2325575   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2325576   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2325577   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2325578   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2325579   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2325580   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2325581   +end;
MPRINT(EM_DIAGRAM):   end;
2325582   +else do;
MPRINT(EM_DIAGRAM):   else do;
2325583   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2325584   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2325585   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2325586   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2325587   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2325588   +   end;
MPRINT(EM_DIAGRAM):   end;
2325589   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2325590   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2325591   +   end;
MPRINT(EM_DIAGRAM):   end;
2325592   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2325593   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2325594   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2325595   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2325596   +   end;
MPRINT(EM_DIAGRAM):   end;
2325597   +end;
MPRINT(EM_DIAGRAM):   end;
2325598   +
2325599   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2325600   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2325601   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2325602   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2325603   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2325604   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2325605   +end;
MPRINT(EM_DIAGRAM):   end;
2325606   +else do;
MPRINT(EM_DIAGRAM):   else do;
2325607   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2325608   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2325609   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2325610   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2325611   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2325612   +   end;
MPRINT(EM_DIAGRAM):   end;
2325613   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2325614   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2325615   +   end;
MPRINT(EM_DIAGRAM):   end;
2325616   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2325617   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2325618   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2325619   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2325620   +   end;
MPRINT(EM_DIAGRAM):   end;
2325621   +end;
MPRINT(EM_DIAGRAM):   end;
2325622   +
2325623   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2325624   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2325625   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2325626   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2325627   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2325628   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2325629   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2325630   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2325631   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2325632   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2325633   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2325634   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2325635   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2325636   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2325637   +end;
MPRINT(EM_DIAGRAM):   end;
2325638   +else do;
MPRINT(EM_DIAGRAM):   else do;
2325639   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2325640   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2325641   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2325642   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2325643   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2325644   +   end;
MPRINT(EM_DIAGRAM):   end;
2325645   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2325646   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2325647   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2325648   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2325649   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2325650   +   end;
MPRINT(EM_DIAGRAM):   end;
2325651   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2325652   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2325653   +   end;
MPRINT(EM_DIAGRAM):   end;
2325654   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2325655   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2325656   +   end;
MPRINT(EM_DIAGRAM):   end;
2325657   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2325658   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2325659   +   end;
MPRINT(EM_DIAGRAM):   end;
2325660   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2325661   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2325662   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2325663   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2325664   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2325665   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2325666   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2325667   +   end;
MPRINT(EM_DIAGRAM):   end;
2325668   +end;
MPRINT(EM_DIAGRAM):   end;
2325669   +
2325670   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2325671   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2325672   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2325673   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2325674   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2325675   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2325676   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2325677   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2325678   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2325679   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2325680   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2325681   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2325682   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2325683   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2325684   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2325685   +end;
MPRINT(EM_DIAGRAM):   end;
2325686   +else do;
MPRINT(EM_DIAGRAM):   else do;
2325687   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2325688   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2325689   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2325690   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2325691   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2325692   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2325693   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2325694   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2325695   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2325696   +         end;
MPRINT(EM_DIAGRAM):   end;
2325697   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2325698   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2325699   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2325700   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2325701   +            end;
MPRINT(EM_DIAGRAM):   end;
2325702   +         end;
MPRINT(EM_DIAGRAM):   end;
2325703   +      end;
MPRINT(EM_DIAGRAM):   end;
2325704   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2325705   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2325706   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2325707   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2325708   +         end;
MPRINT(EM_DIAGRAM):   end;
2325709   +      end;
MPRINT(EM_DIAGRAM):   end;
2325710   +   end;
MPRINT(EM_DIAGRAM):   end;
2325711   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2325712   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2325713   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2325714   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2325715   +      end;
MPRINT(EM_DIAGRAM):   end;
2325716   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2325717   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2325718   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2325719   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2325720   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2325721   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2325722   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2325723   +         end;
MPRINT(EM_DIAGRAM):   end;
2325724   +      end;
MPRINT(EM_DIAGRAM):   end;
2325725   +   end;
MPRINT(EM_DIAGRAM):   end;
2325726   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2325727   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2325728   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2325729   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2325730   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2325731   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2325732   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2325733   +   end;
MPRINT(EM_DIAGRAM):   end;
2325734   +end;
MPRINT(EM_DIAGRAM):   end;
2325735   +
2325736   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2325737   +*** Checking missing input Interval
2325738   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2325739   +
2325740   +IF NMISS(
2325741   +   AcceptedCmpTotal ,
2325742   +   Age ,
2325743   +   Frq ,
2325744   +   Income ,
2325745   +   Kidhome ,
2325746   +   Mnt ,
2325747   +   MntFishProducts ,
2325748   +   MntFruits ,
2325749   +   MntGoldProds ,
2325750   +   MntMeatProducts ,
2325751   +   MntSweetProducts ,
2325752   +   MntWines ,
2325753   +   MonthsAsCustomer ,
2325754   +   NumCatalogPurchases ,
2325755   +   NumDealsPurchases ,
2325756   +   NumDistPurchases ,
2325757   +   NumStorePurchases ,
2325758   +   NumWebPurchases ,
2325759   +   NumWebVisitsMonth ,
2325760   +   RFMstat ,
2325761   +   RMntFrq ,
2325762   +   Recency ,
2325763   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2325764   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2325765   +
2325766   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2325767   +END;
MPRINT(EM_DIAGRAM):   END;
2325768   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2325769   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2325770   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2325771   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2325772   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2325773   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2325774   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2325775   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2325776   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2325777   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2325778   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2325779   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2325780   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2325781   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2325782   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2325783   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2325784   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2325785   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2325786   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2325787   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2325788   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2325789   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2325790   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2325791   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2325792   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2325793   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2325794   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2325795   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2325796   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2325797   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2325798   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2325799   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2325800   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2325801   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2325802   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2325803   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2325804   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2325805   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2325806   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2325807   +END;
MPRINT(EM_DIAGRAM):   END;
2325808   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2325809   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2325810   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2325811   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2325812   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2325813   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2325814   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2325815   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2325816   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2325817   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2325818   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2325819   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2325820   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2325821   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2325822   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2325823   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2325824   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2325825   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2325826   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2325827   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2325828   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2325829   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2325830   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2325831   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2325832   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2325833   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2325834   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2325835   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2325836   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2325837   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2325838   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2325839   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2325840   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2325841   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2325842   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2325843   +   ELSE S_NumCatalogPurchases
2325844   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2325845   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2325846   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2325847   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2325848   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2325849   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2325850   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2325851   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2325852   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2325853   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2325854   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2325855   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2325856   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2325857   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2325858   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2325859   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2325860   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2325861   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2325862   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2325863   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2325864   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2325865   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2325866   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2325867   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2325868   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2325869   +END;
MPRINT(EM_DIAGRAM):   END;
2325870   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2325871   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2325872   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2325873   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2325874   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2325875   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2325876   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2325877   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2325878   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2325879   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2325880   +   H1x1_1  =    -0.78941671657664 * S_AcceptedCmpTotal
2325881   +          +     0.31767378900448 * S_Age  +      -0.450304150539 * S_Frq
2325882   +          +     0.13641886985589 * S_Income  +    -0.76390352240561 *
2325883   +        S_Kidhome  +    -0.84654868800943 * S_Mnt  +     0.96945558052651 *
2325884   +        S_MntFishProducts  +     0.16268958674432 * S_MntFruits
2325885   +          +     0.02144447788014 * S_MntGoldProds  +    -3.75090210449464 *
2325886   +        S_MntMeatProducts  +    -0.22086629229442 * S_MntSweetProducts
2325887   +          +      0.8352178457402 * S_MntWines  +     0.16493907873466 *
2325888   +        S_MonthsAsCustomer  +    -1.54607390993048 * S_NumCatalogPurchases
2325889   +          +    -1.12130210731541 * S_NumDealsPurchases
2325890   +          +    -0.12343505299726 * S_NumDistPurchases
2325891   +          +     0.11863092868196 * S_NumStorePurchases
2325892   +          +       0.583917993314 * S_NumWebPurchases
2325893   +          +     0.75529732848146 * S_NumWebVisitsMonth
2325894   +          +    -0.49784215446785 * S_RFMstat  +     0.40580477815146 *
2325895   +        S_RMntFrq  +    -0.95519170979342 * S_Recency
2325896   +          +    -0.44895196625502 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.78941671657664 * S_AcceptedCmpTotal + 0.31767378900448 * 
S_Age + -0.450304150539 * S_Frq + 0.13641886985589 * S_Income + -0.76390352240561 * S_Kidhome 
+ -0.84654868800943 * S_Mnt + 0.96945558052651 * S_MntFishProducts + 0.16268958674432 * 
S_MntFruits + 0.02144447788014 * S_MntGoldProds + -3.75090210449464 * S_MntMeatProducts + 
-0.22086629229442 * S_MntSweetProducts + 0.8352178457402 * S_MntWines + 0.16493907873466 * 
S_MonthsAsCustomer + -1.54607390993048 * S_NumCatalogPurchases + -1.12130210731541 * 
S_NumDealsPurchases + -0.12343505299726 * S_NumDistPurchases + 0.11863092868196 * 
S_NumStorePurchases + 0.583917993314 * S_NumWebPurchases + 0.75529732848146 * 
S_NumWebVisitsMonth + -0.49784215446785 * S_RFMstat + 0.40580477815146 * S_RMntFrq + 
-0.95519170979342 * S_Recency + -0.44895196625502 * S_Teenhome ;
2325897   +   H1x1_2  =    -0.22984864633102 * S_AcceptedCmpTotal
2325898   +          +     0.08901810463204 * S_Age  +    -0.13007664741542 * S_Frq
2325899   +          +    -0.64174617524704 * S_Income  +     0.26599968715733 *
2325900   +        S_Kidhome  +     0.57486260655125 * S_Mnt  +    -0.56033337110694 *
2325901   +        S_MntFishProducts  +     0.16060716517673 * S_MntFruits
2325902   +          +      0.4349197289782 * S_MntGoldProds  +     1.41079767517969 *
2325903   +        S_MntMeatProducts  +      0.0615730534741 * S_MntSweetProducts
2325904   +          +    -0.09057901886639 * S_MntWines  +     0.20260454891291 *
2325905   +        S_MonthsAsCustomer  +    -1.17048742280721 * S_NumCatalogPurchases
2325906   +          +    -0.84113790640734 * S_NumDealsPurchases
2325907   +          +    -0.10512672747147 * S_NumDistPurchases
2325908   +          +     0.07268711782494 * S_NumStorePurchases
2325909   +          +     0.57578331257439 * S_NumWebPurchases
2325910   +          +    -1.34334433506558 * S_NumWebVisitsMonth
2325911   +          +     0.50079465494904 * S_RFMstat  +     0.77329849238514 *
2325912   +        S_RMntFrq  +      1.2759588366983 * S_Recency
2325913   +          +     0.17722493443222 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22984864633102 * S_AcceptedCmpTotal + 0.08901810463204 * 
S_Age + -0.13007664741542 * S_Frq + -0.64174617524704 * S_Income + 0.26599968715733 * 
S_Kidhome + 0.57486260655125 * S_Mnt + -0.56033337110694 * S_MntFishProducts + 
0.16060716517673 * S_MntFruits + 0.4349197289782 * S_MntGoldProds + 1.41079767517969 * 
S_MntMeatProducts + 0.0615730534741 * S_MntSweetProducts + -0.09057901886639 * S_MntWines + 
0.20260454891291 * S_MonthsAsCustomer + -1.17048742280721 * S_NumCatalogPurchases + 
-0.84113790640734 * S_NumDealsPurchases + -0.10512672747147 * S_NumDistPurchases + 
0.07268711782494 * S_NumStorePurchases + 0.57578331257439 * S_NumWebPurchases + 
-1.34334433506558 * S_NumWebVisitsMonth + 0.50079465494904 * S_RFMstat + 0.77329849238514 * 
S_RMntFrq + 1.2759588366983 * S_Recency + 0.17722493443222 * S_Teenhome ;
2325914   +   H1x1_3  =      1.1751297152411 * S_AcceptedCmpTotal
2325915   +          +     0.14380060376858 * S_Age  +    -0.90459868540245 * S_Frq
2325916   +          +     0.65570498233801 * S_Income  +    -0.66078213466597 *
2325917   +        S_Kidhome  +      0.5364727654141 * S_Mnt  +    -0.56452823521458 *
2325918   +        S_MntFishProducts  +     0.11401811215013 * S_MntFruits
2325919   +          +     0.42809239636494 * S_MntGoldProds  +     3.28485519579047 *
2325920   +        S_MntMeatProducts  +    -0.10959477301368 * S_MntSweetProducts
2325921   +          +     -0.5779524716069 * S_MntWines  +     0.08256957915579 *
2325922   +        S_MonthsAsCustomer  +     0.48195221766948 * S_NumCatalogPurchases
2325923   +          +     0.45924983504762 * S_NumDealsPurchases
2325924   +          +    -0.25508041581692 * S_NumDistPurchases
2325925   +          +    -1.34901283858526 * S_NumStorePurchases
2325926   +          +    -0.86388975031663 * S_NumWebPurchases
2325927   +          +     1.86136110391797 * S_NumWebVisitsMonth
2325928   +          +     0.39724376701426 * S_RFMstat  +    -1.08648755949459 *
2325929   +        S_RMntFrq  +    -2.06955456943047 * S_Recency
2325930   +          +     -0.6524420065858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.1751297152411 * S_AcceptedCmpTotal + 0.14380060376858 * S_Age 
+ -0.90459868540245 * S_Frq + 0.65570498233801 * S_Income + -0.66078213466597 * S_Kidhome + 
0.5364727654141 * S_Mnt + -0.56452823521458 * S_MntFishProducts + 0.11401811215013 * 
S_MntFruits + 0.42809239636494 * S_MntGoldProds + 3.28485519579047 * S_MntMeatProducts + 
-0.10959477301368 * S_MntSweetProducts + -0.5779524716069 * S_MntWines + 0.08256957915579 * 
S_MonthsAsCustomer + 0.48195221766948 * S_NumCatalogPurchases + 0.45924983504762 * 
S_NumDealsPurchases + -0.25508041581692 * S_NumDistPurchases + -1.34901283858526 * 
S_NumStorePurchases + -0.86388975031663 * S_NumWebPurchases + 1.86136110391797 * 
S_NumWebVisitsMonth + 0.39724376701426 * S_RFMstat + -1.08648755949459 * S_RMntFrq + 
-2.06955456943047 * S_Recency + -0.6524420065858 * S_Teenhome ;
2325931   +   H1x1_1  = H1x1_1  +     0.80545309346785 * AcceptedCmp10
2325932   +          +    -0.33518398776018 * AcceptedCmp20  +    -0.58961939502901 *
2325933   +        AcceptedCmp30  +    -0.89675052404295 * AcceptedCmp40
2325934   +          +     0.75506592249683 * AcceptedCmp50  +    -0.07335613460961 *
2325935   +        Complain0  +     0.34255762261501 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.80545309346785 * AcceptedCmp10 + -0.33518398776018 * 
AcceptedCmp20 + -0.58961939502901 * AcceptedCmp30 + -0.89675052404295 * AcceptedCmp40 + 
0.75506592249683 * AcceptedCmp50 + -0.07335613460961 * Complain0 + 0.34255762261501 * 
HigherEducationBinary0 ;
2325936   +   H1x1_2  = H1x1_2  +    -0.17834267108797 * AcceptedCmp10
2325937   +          +    -0.54414628806984 * AcceptedCmp20  +      0.8037591997808 *
2325938   +        AcceptedCmp30  +     0.37789561997689 * AcceptedCmp40
2325939   +          +    -1.39910847665731 * AcceptedCmp50  +    -0.44783176263268 *
2325940   +        Complain0  +     0.36763760090773 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.17834267108797 * AcceptedCmp10 + -0.54414628806984 
* AcceptedCmp20 + 0.8037591997808 * AcceptedCmp30 + 0.37789561997689 * AcceptedCmp40 + 
-1.39910847665731 * AcceptedCmp50 + -0.44783176263268 * Complain0 + 0.36763760090773 * 
HigherEducationBinary0 ;
2325941   +   H1x1_3  = H1x1_3  +    -0.20323890063703 * AcceptedCmp10
2325942   +          +    -0.08537895761507 * AcceptedCmp20  +     0.22533818089504 *
2325943   +        AcceptedCmp30  +    -0.22195995100127 * AcceptedCmp40
2325944   +          +    -2.01371926977123 * AcceptedCmp50  +    -0.17097719978842 *
2325945   +        Complain0  +     0.34016905753094 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.20323890063703 * AcceptedCmp10 + -0.08537895761507 
* AcceptedCmp20 + 0.22533818089504 * AcceptedCmp30 + -0.22195995100127 * AcceptedCmp40 + 
-2.01371926977123 * AcceptedCmp50 + -0.17097719978842 * Complain0 + 0.34016905753094 * 
HigherEducationBinary0 ;
2325946   +   H1x1_1  = H1x1_1  +    -0.03394180683805 * Education2n_Cycle
2325947   +          +    -0.38224926448988 * EducationBasic  +    -0.42512289883041 *
2325948   +        EducationGraduation  +    -0.59708578424036 * EducationMaster
2325949   +          +     0.48853068455666 * Marital_StatusDivorced
2325950   +          +    -0.54903474026465 * Marital_StatusMarried
2325951   +          +    -0.34079188373939 * Marital_StatusSingle
2325952   +          +    -0.64602969938868 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03394180683805 * Education2n_Cycle + 
-0.38224926448988 * EducationBasic + -0.42512289883041 * EducationGraduation + 
-0.59708578424036 * EducationMaster + 0.48853068455666 * Marital_StatusDivorced + 
-0.54903474026465 * Marital_StatusMarried + -0.34079188373939 * Marital_StatusSingle + 
-0.64602969938868 * Marital_StatusTogether ;
2325953   +   H1x1_2  = H1x1_2  +    -0.26170943801998 * Education2n_Cycle
2325954   +          +     0.06893871459175 * EducationBasic  +    -0.84123174187664 *
2325955   +        EducationGraduation  +     0.19038549912088 * EducationMaster
2325956   +          +    -1.03547689902027 * Marital_StatusDivorced
2325957   +          +     2.42164864610471 * Marital_StatusMarried
2325958   +          +    -1.95342561304942 * Marital_StatusSingle
2325959   +          +      2.1397185142046 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.26170943801998 * Education2n_Cycle + 
0.06893871459175 * EducationBasic + -0.84123174187664 * EducationGraduation + 0.19038549912088 
* EducationMaster + -1.03547689902027 * Marital_StatusDivorced + 2.42164864610471 * 
Marital_StatusMarried + -1.95342561304942 * Marital_StatusSingle + 2.1397185142046 * 
Marital_StatusTogether ;
2325960   +   H1x1_3  = H1x1_3  +    -0.04236694810886 * Education2n_Cycle
2325961   +          +    -0.57404276980591 * EducationBasic  +     -0.1441989834351 *
2325962   +        EducationGraduation  +    -0.31867831184924 * EducationMaster
2325963   +          +      0.4337638747935 * Marital_StatusDivorced
2325964   +          +    -0.38508657017615 * Marital_StatusMarried
2325965   +          +     -0.0160269708326 * Marital_StatusSingle
2325966   +          +    -0.57491004270903 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.04236694810886 * Education2n_Cycle + 
-0.57404276980591 * EducationBasic + -0.1441989834351 * EducationGraduation + 
-0.31867831184924 * EducationMaster + 0.4337638747935 * Marital_StatusDivorced + 
-0.38508657017615 * Marital_StatusMarried + -0.0160269708326 * Marital_StatusSingle + 
-0.57491004270903 * Marital_StatusTogether ;
2325967   +   H1x1_1  =    -0.53426188790968 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53426188790968 + H1x1_1 ;
2325968   +   H1x1_2  =     0.98557066823746 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.98557066823746 + H1x1_2 ;
2325969   +   H1x1_3  =     1.81937688438175 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.81937688438175 + H1x1_3 ;
2325970   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
2325971   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
2325972   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2325973   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2325974   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2325975   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2325976   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2325977   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2325978   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2325979   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2325980   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2325981   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2325982   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2325983   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2325984   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2325985   +END;
MPRINT(EM_DIAGRAM):   END;
2325986   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2325987   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2325988   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2325989   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2325990   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2325991   +END;
MPRINT(EM_DIAGRAM):   END;
2325992   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2325993   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2325994   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2325995   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2325996   +   P_DepVar1  =    -3.43702380277695 * H1x1_1  +    -7.14235896425537 * H1x1_2
2325997   +          +     10.8296305415538 * H1x1_3  +    -2.20824183229369 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.43702380277695 * H1x1_1 + -7.14235896425537 * H1x1_2 + 
10.8296305415538 * H1x1_3 + -2.20824183229369 * H1x1_4 ;
2325998   +   P_DepVar1  =    -3.68304614366462 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.68304614366462 + P_DepVar1 ;
2325999   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2326000   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2326001   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2326002   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2326003   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2326004   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2326005   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2326006   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2326007   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2326008   +END;
MPRINT(EM_DIAGRAM):   END;
2326009   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2326010   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2326011   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2326012   +END;
MPRINT(EM_DIAGRAM):   END;
2326013   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2326014   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2326015   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2326016   +END;
MPRINT(EM_DIAGRAM):   END;
2326017   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2326018   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2326019   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2326020   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2326021   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2326022   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2326023   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2326024   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2326025   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2326026   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2326027   +END;
MPRINT(EM_DIAGRAM):   END;
2326028   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2326029   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2326030   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2326031   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2326032    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2326033    quit;
2326034    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2326035    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2326036    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2326037    retain ID 2 Node "AutoNeural9";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural9";
2326038    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2326039    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2326040    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2326041    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2326042    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2326043    proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME 
CREATOR);
2326044    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2326045    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL9_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2326046    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2326047    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2326048    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2326049    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2326050    proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
2326051    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2326052    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2326053    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2326054    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 57 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2326055    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2326056    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2326057    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2326058    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 57 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 57 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2326059    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2326060    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2326060  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1551 rows and 5 columns.

2326061    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2326062    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2326063    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1551 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 1551 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2326064    filename _pref
2326064  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2326065    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2326066    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2326067   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2326068   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2326069   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2326070   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2326071   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2326072   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2326073    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2326074    quit;
2326075    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2326076    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2326077    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2326078    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2326079    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2326080    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2326081    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2326082    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2326083    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2326084    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2326085    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2326086    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2326087    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2326088    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2326089    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2326090    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2326091    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2326092    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2326093    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2326094    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2326095    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2326096    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2326097    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2326098    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2326099    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2326100    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2326101    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2326101  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2326102    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2326103    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2326104    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 1555 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2326105    filename _pref
2326105  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2326106    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2326107    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2326108   +
2326109   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2326110   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2326110  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2326111   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2326112   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2326113   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2326114   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2326115   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2326116    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2326117    quit;
2326118    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2326119    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2326120    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2326121    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2326122    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2326123    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2326124    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2326125    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2326126    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2326127    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2326128    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2326129    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2326130    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2326131    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2326132    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2326133    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2326134    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2326135    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2326136    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2326137    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2326138    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2326139    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2326140    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2326141    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2326142    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2326143    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2326144    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2326144  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2326145    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2326146    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2326147    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 1594 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2326148    filename _pref
2326148  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2326149    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2326150    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2326151   +
2326152   +
2326153   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2326154   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2326155   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2326156   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2326157   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2326158   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2326159   +
2326160   +
2326161   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2326162   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2326163   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2326164   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2326165   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2326166   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2326167   +
2326168   +
2326169   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2326170   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2326171   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2326172   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2326173   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2326174   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2326175   +
2326176   +
2326177   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2326178   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2326179   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2326180   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2326181   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2326182   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2326183   +
2326184   +
2326185   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2326186   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2326187   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2326188   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2326189   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2326190   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2326191   +
2326192   +
2326193   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2326194   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2326195   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2326196   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2326197   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2326198   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2326199   +
2326200   +
2326201   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2326202   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2326203   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2326204   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2326205   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2326206   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2326207   +
2326208   +
2326209   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2326210   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2326211   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2326212   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2326213   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2326214   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2326215   +if
2326216   +_FILTERNORM1 not in ( '.')
2326217   + and
2326218   +_FILTERNORM2 not in ( '.')
2326219   + and
2326220   +_FILTERNORM3 not in ( '.')
2326221   + and
2326222   +_FILTERNORM4 not in ( '.')
2326223   + and
2326224   +_FILTERNORM5 not in ( '.')
2326225   + and
2326226   +_FILTERNORM6 not in ( '.')
2326227   + and
2326228   +_FILTERNORM7 not in ( ' ')
2326229   + and
2326230   +_FILTERNORM8 not in ( ' ')
2326231   +and
2326232   +( Dt_Customer ne .)
2326233   +and ( Income ne . and (Income<=107000))
2326234   +and ( Kidhome ne .)
2326235   +and ( MntFishProducts ne .)
2326236   +and ( MntFruits ne .)
2326237   +and ( MntGoldProds ne .)
2326238   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2326239   +and ( MntSweetProducts ne .)
2326240   +and ( MntWines ne .)
2326241   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2326242   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2326243   +and ( NumStorePurchases ne .)
2326244   +and ( NumWebPurchases ne .)
2326245   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2326246   +and ( Recency ne .)
2326247   +and ( Teenhome ne .)
2326248   +and ( Year_Birth ne .)
2326249   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2326250   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2326251   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2326252   +end;
MPRINT(EM_DIAGRAM):   end;
2326253   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2326254   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2326255    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2326256    quit;
2326257    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2326258    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2326259    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2326260    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2326261    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2326262    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2326263    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2326264    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2326265    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2326266    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2326267    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2326268    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2326269    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2326270    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2326271    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2326272    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2326273    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2326274    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2326275    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2326276    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2326277    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2326278    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2326279    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2326280    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2326281    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2326282    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2326283    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2326283  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2326284    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2326285    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2326286    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 1660 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2326287    %macro varDept(fcmpdata=,id=);
2326288    %global nobs&id scoreFlag&id;
2326289    %let scoreFlag&id = 0;
2326290    %if &id=1 or ^&fcmpStart %then %do;
2326291    proc sort data=&fcmpdata out=_temp&id nodupkey;
2326292    by NAME;
2326293    where id=&id and LHS in( %let j=1;
2326294    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2326295    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2326296    "&var" %let j = %eval(&j+1);
2326297    %end;
2326298    );
2326299    run;
2326300    %let dsid = %sysfunc(open(_temp&id));
2326301    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2326302    %let dsid = %sysfunc(close(&dsid));
2326303    %if &&nobs&id %then %do;
2326304    %let scoreFlag&id = 1;
2326305    %let fcmpStart = 1;
2326306    %end;
2326307    %else %let fcmpStart = 0;
2326308    %end;
2326309    %else %do;
2326310    proc sort data=&fcmpdata out=_tempid;
2326311    where id=&id;
2326312    by LHS;
2326313    run;
2326314    %let dsid = %sysfunc(open(_tempid));
2326315    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2326316    %let dsid = %sysfunc(close(&dsid));
2326317    %if ^&&nobs&id %then %do;
2326318    proc datasets lib=work nolist;
2326319    delete _tempid;
2326320    run;
2326321    quit;
2326322    %end;
2326323    %else %do;
2326324    data _tempAll;
2326325    set %let j=%eval(&id-1);
2326326    %do x=1 %to &j;
2326327    %if &&nobs&x %then %do;
2326328    _temp&x %end;
2326329    %end;
2326330    ;
2326331    run;
2326332    proc sql;
2326333    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2326333  ! work._tempid p2 where p.name=p2.lhs;
2326334    quit;
2326335    data _temp&id;
2326336    set _temp&id;
2326337    where LHS ne '' and NAME ne '' and Node ne '';
2326338    run;
2326339    proc datasets lib=work nolist;
2326340    delete _tempAll;
2326341    run;
2326342    %let dsid = %sysfunc(open(_temp&id));
2326343    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2326344    %let dsid = %sysfunc(close(&dsid));
2326345    %if ^&&nobs&id %then %do;
2326346    proc datasets lib=work nolist;
2326347    delete _temp&id;
2326348    run;
2326349    quit;
2326350    %end;
2326351    %else %do;
2326352    %let scoreFlag&id = 1;
2326353    data _temp&id;
2326354    set _temp&id;
2326355    where LHS ne NAME and node ne '';
2326356    run;
2326357    %let dsid = %sysfunc(open(_temp&id));
2326358    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2326359    %let dsid = %sysfunc(close(&dsid));
2326360    %if ^&&nobs&id %then %do;
2326361    proc datasets lib=work nolist;
2326362    delete _temp&id;
2326363    run;
2326364    quit;
2326365    %end;
2326366    %else %do;
2326367    proc sort data=_temp&id nodupkey;
2326368    by LHS NAME;
2326369    run;
2326370    %end;
2326371    %end;
2326372    %end;
2326373    %end;
2326374    %mend varDept;
2326375    %macro optCode(outdata=fcmpdata);
2326376    %global fcmpStart;
2326377    %let fcmpStart = 0;
2326378    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2326379    %let NumNodes=9;
2326380    %do k=1 %to &NumNodes;
2326381    %vardept(fcmpdata=&outdata, id=&k);
2326382    %end;
2326383    %mend optCode;
2326384    %optcode(outData=EMWS8.Ensmbl38_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 146 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 108 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 38 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 42 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 81 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2326385    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2326386    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2326387    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2326388    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2326389    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2326390    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2326391    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2326392    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.03 seconds
      

2326393    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2326394    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2326394  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

2326395    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2326396    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2326397    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2326398    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2326399    filename _pref
2326399  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
2326400    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2326401    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas.
2326402   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2326403   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2326404   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2326405   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2326406   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2326407   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2326408   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2326409   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2326410   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2326411   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2326412   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2326413   +LENGTH _WARN_ $4
2326414   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2326415   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2326416   +
2326417   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2326418   +
2326419   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2326420   +
2326421   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2326422   +
2326423   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2326424   +
2326425   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2326426   +
2326427   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2326428   +
2326429   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2326430   +
2326431   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2326432   +
2326433   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2326434   +
2326435   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2326436   +
2326437   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2326438   +
2326439   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2326440   +
2326441   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2326442   +
2326443   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2326444   +
2326445   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2326446   +
2326447   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2326448   +
2326449   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2326450   +
2326451   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2326452   +
2326453   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2326454   +
2326455   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2326456   +
2326457   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2326458   +
2326459   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2326460   +
2326461   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2326462   +
2326463   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2326464   +
2326465   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2326466   +
2326467   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2326468   +
2326469   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2326470   +
2326471   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2326472   +
2326473   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2326474   +
2326475   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2326476   +
2326477   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2326478   +
2326479   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2326480   +
2326481   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2326482   +
2326483   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2326484   +
2326485   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2326486   +
2326487   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2326488   +
2326489   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2326490   +
2326491   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2326492   +
2326493   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2326494   +
2326495   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2326496   +
2326497   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2326498   +
2326499   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2326500   +
2326501   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2326502   +
2326503   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2326504   +
2326505   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2326506   +
2326507   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2326508   +
2326509   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2326510   +
2326511   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2326512   +
2326513   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2326514   +
2326515   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2326516   +
2326517   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2326518   +
2326519   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2326520   +
2326521   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2326522   +
2326523   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2326524   +
2326525   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
2326526   +
2326527   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2326528   +
2326529   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2326530   +
2326531   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2326532   +
2326533   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2326534   +
2326535   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2326536   +
2326537   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2326538   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2326539   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2326540   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2326541   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2326542   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2326543   +end;
MPRINT(EM_DIAGRAM):   end;
2326544   +else do;
MPRINT(EM_DIAGRAM):   else do;
2326545   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2326546   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2326547   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2326548   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2326549   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2326550   +   end;
MPRINT(EM_DIAGRAM):   end;
2326551   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2326552   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2326553   +   end;
MPRINT(EM_DIAGRAM):   end;
2326554   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2326555   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2326556   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2326557   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2326558   +   end;
MPRINT(EM_DIAGRAM):   end;
2326559   +end;
MPRINT(EM_DIAGRAM):   end;
2326560   +
2326561   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2326562   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2326563   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2326564   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2326565   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2326566   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2326567   +end;
MPRINT(EM_DIAGRAM):   end;
2326568   +else do;
MPRINT(EM_DIAGRAM):   else do;
2326569   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2326570   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2326571   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2326572   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2326573   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2326574   +   end;
MPRINT(EM_DIAGRAM):   end;
2326575   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2326576   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2326577   +   end;
MPRINT(EM_DIAGRAM):   end;
2326578   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2326579   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2326580   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2326581   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2326582   +   end;
MPRINT(EM_DIAGRAM):   end;
2326583   +end;
MPRINT(EM_DIAGRAM):   end;
2326584   +
2326585   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2326586   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2326587   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2326588   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2326589   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2326590   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2326591   +end;
MPRINT(EM_DIAGRAM):   end;
2326592   +else do;
MPRINT(EM_DIAGRAM):   else do;
2326593   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2326594   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2326595   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2326596   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2326597   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2326598   +   end;
MPRINT(EM_DIAGRAM):   end;
2326599   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2326600   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2326601   +   end;
MPRINT(EM_DIAGRAM):   end;
2326602   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2326603   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2326604   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2326605   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2326606   +   end;
MPRINT(EM_DIAGRAM):   end;
2326607   +end;
MPRINT(EM_DIAGRAM):   end;
2326608   +
2326609   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2326610   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2326611   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2326612   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2326613   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2326614   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2326615   +end;
MPRINT(EM_DIAGRAM):   end;
2326616   +else do;
MPRINT(EM_DIAGRAM):   else do;
2326617   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2326618   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2326619   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2326620   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2326621   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2326622   +   end;
MPRINT(EM_DIAGRAM):   end;
2326623   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2326624   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2326625   +   end;
MPRINT(EM_DIAGRAM):   end;
2326626   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2326627   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2326628   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2326629   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2326630   +   end;
MPRINT(EM_DIAGRAM):   end;
2326631   +end;
MPRINT(EM_DIAGRAM):   end;
2326632   +
2326633   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2326634   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2326635   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2326636   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2326637   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2326638   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2326639   +end;
MPRINT(EM_DIAGRAM):   end;
2326640   +else do;
MPRINT(EM_DIAGRAM):   else do;
2326641   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2326642   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2326643   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2326644   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2326645   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2326646   +   end;
MPRINT(EM_DIAGRAM):   end;
2326647   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2326648   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2326649   +   end;
MPRINT(EM_DIAGRAM):   end;
2326650   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2326651   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2326652   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2326653   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2326654   +   end;
MPRINT(EM_DIAGRAM):   end;
2326655   +end;
MPRINT(EM_DIAGRAM):   end;
2326656   +
2326657   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2326658   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2326659   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2326660   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2326661   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2326662   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2326663   +end;
MPRINT(EM_DIAGRAM):   end;
2326664   +else do;
MPRINT(EM_DIAGRAM):   else do;
2326665   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2326666   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2326667   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2326668   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2326669   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2326670   +   end;
MPRINT(EM_DIAGRAM):   end;
2326671   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2326672   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2326673   +   end;
MPRINT(EM_DIAGRAM):   end;
2326674   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2326675   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2326676   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2326677   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2326678   +   end;
MPRINT(EM_DIAGRAM):   end;
2326679   +end;
MPRINT(EM_DIAGRAM):   end;
2326680   +
2326681   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2326682   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2326683   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2326684   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2326685   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2326686   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2326687   +end;
MPRINT(EM_DIAGRAM):   end;
2326688   +else do;
MPRINT(EM_DIAGRAM):   else do;
2326689   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2326690   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2326691   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2326692   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2326693   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2326694   +   end;
MPRINT(EM_DIAGRAM):   end;
2326695   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2326696   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2326697   +   end;
MPRINT(EM_DIAGRAM):   end;
2326698   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2326699   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2326700   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2326701   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2326702   +   end;
MPRINT(EM_DIAGRAM):   end;
2326703   +end;
MPRINT(EM_DIAGRAM):   end;
2326704   +
2326705   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2326706   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2326707   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2326708   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2326709   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2326710   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2326711   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2326712   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2326713   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2326714   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2326715   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2326716   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2326717   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2326718   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2326719   +end;
MPRINT(EM_DIAGRAM):   end;
2326720   +else do;
MPRINT(EM_DIAGRAM):   else do;
2326721   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2326722   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2326723   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2326724   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2326725   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2326726   +   end;
MPRINT(EM_DIAGRAM):   end;
2326727   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2326728   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2326729   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2326730   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2326731   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2326732   +   end;
MPRINT(EM_DIAGRAM):   end;
2326733   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2326734   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2326735   +   end;
MPRINT(EM_DIAGRAM):   end;
2326736   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2326737   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2326738   +   end;
MPRINT(EM_DIAGRAM):   end;
2326739   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2326740   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2326741   +   end;
MPRINT(EM_DIAGRAM):   end;
2326742   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2326743   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2326744   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2326745   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2326746   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2326747   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2326748   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2326749   +   end;
MPRINT(EM_DIAGRAM):   end;
2326750   +end;
MPRINT(EM_DIAGRAM):   end;
2326751   +
2326752   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2326753   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2326754   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2326755   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2326756   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2326757   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2326758   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2326759   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2326760   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2326761   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2326762   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2326763   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2326764   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2326765   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2326766   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2326767   +end;
MPRINT(EM_DIAGRAM):   end;
2326768   +else do;
MPRINT(EM_DIAGRAM):   else do;
2326769   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2326770   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2326771   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2326772   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2326773   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2326774   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2326775   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2326776   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2326777   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2326778   +         end;
MPRINT(EM_DIAGRAM):   end;
2326779   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2326780   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2326781   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2326782   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2326783   +            end;
MPRINT(EM_DIAGRAM):   end;
2326784   +         end;
MPRINT(EM_DIAGRAM):   end;
2326785   +      end;
MPRINT(EM_DIAGRAM):   end;
2326786   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2326787   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2326788   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2326789   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2326790   +         end;
MPRINT(EM_DIAGRAM):   end;
2326791   +      end;
MPRINT(EM_DIAGRAM):   end;
2326792   +   end;
MPRINT(EM_DIAGRAM):   end;
2326793   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2326794   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2326795   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2326796   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2326797   +      end;
MPRINT(EM_DIAGRAM):   end;
2326798   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2326799   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2326800   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2326801   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2326802   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2326803   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2326804   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2326805   +         end;
MPRINT(EM_DIAGRAM):   end;
2326806   +      end;
MPRINT(EM_DIAGRAM):   end;
2326807   +   end;
MPRINT(EM_DIAGRAM):   end;
2326808   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2326809   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2326810   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2326811   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2326812   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2326813   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2326814   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2326815   +   end;
MPRINT(EM_DIAGRAM):   end;
2326816   +end;
MPRINT(EM_DIAGRAM):   end;
2326817   +
2326818   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2326819   +*** Checking missing input Interval
2326820   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2326821   +
2326822   +IF NMISS(
2326823   +   AcceptedCmpTotal ,
2326824   +   Age ,
2326825   +   Frq ,
2326826   +   Income ,
2326827   +   Kidhome ,
2326828   +   Mnt ,
2326829   +   MntFishProducts ,
2326830   +   MntFruits ,
2326831   +   MntGoldProds ,
2326832   +   MntMeatProducts ,
2326833   +   MntSweetProducts ,
2326834   +   MntWines ,
2326835   +   MonthsAsCustomer ,
2326836   +   NumCatalogPurchases ,
2326837   +   NumDealsPurchases ,
2326838   +   NumDistPurchases ,
2326839   +   NumStorePurchases ,
2326840   +   NumWebPurchases ,
2326841   +   NumWebVisitsMonth ,
2326842   +   RFMstat ,
2326843   +   RMntFrq ,
2326844   +   Recency ,
2326845   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2326846   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2326847   +
2326848   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2326849   +END;
MPRINT(EM_DIAGRAM):   END;
2326850   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2326851   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2326852   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2326853   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2326854   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2326855   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2326856   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2326857   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2326858   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2326859   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2326860   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2326861   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2326862   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2326863   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2326864   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2326865   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2326866   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2326867   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2326868   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2326869   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2326870   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2326871   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2326872   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2326873   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2326874   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2326875   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2326876   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2326877   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2326878   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2326879   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2326880   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2326881   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2326882   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2326883   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2326884   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2326885   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2326886   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2326887   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2326888   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2326889   +END;
MPRINT(EM_DIAGRAM):   END;
2326890   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2326891   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2326892   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2326893   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2326894   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2326895   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2326896   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2326897   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2326898   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2326899   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2326900   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2326901   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2326902   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2326903   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2326904   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2326905   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2326906   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2326907   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2326908   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2326909   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2326910   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2326911   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2326912   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2326913   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2326914   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2326915   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2326916   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2326917   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2326918   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2326919   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2326920   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2326921   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2326922   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2326923   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2326924   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2326925   +   ELSE S_NumCatalogPurchases
2326926   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2326927   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2326928   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2326929   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2326930   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2326931   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2326932   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2326933   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2326934   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2326935   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2326936   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2326937   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2326938   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2326939   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2326940   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2326941   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2326942   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2326943   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2326944   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2326945   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2326946   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2326947   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2326948   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2326949   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2326950   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2326951   +END;
MPRINT(EM_DIAGRAM):   END;
2326952   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2326953   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2326954   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2326955   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2326956   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2326957   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2326958   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2326959   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2326960   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2326961   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2326962   +   H1x1_1  =     0.16786131610493 * S_AcceptedCmpTotal
2326963   +          +     0.08150129707008 * S_Age  +    -0.00076335149511 * S_Frq
2326964   +          +     2.37648351383272 * S_Income  +    -1.63260278456818 *
2326965   +        S_Kidhome  +     -0.6720941090663 * S_Mnt  +    -0.03176174297509 *
2326966   +        S_MntFishProducts  +    -0.03796990721617 * S_MntFruits
2326967   +          +    -0.17020485447842 * S_MntGoldProds  +      0.7709093878281 *
2326968   +        S_MntMeatProducts  +    -0.26168538456938 * S_MntSweetProducts
2326969   +          +    -1.36275284328546 * S_MntWines  +    -0.30344694826738 *
2326970   +        S_MonthsAsCustomer  +     1.68662611500615 * S_NumCatalogPurchases
2326971   +          +     1.32037113020393 * S_NumDealsPurchases
2326972   +          +     0.42879249227132 * S_NumDistPurchases
2326973   +          +    -0.89190172778783 * S_NumStorePurchases
2326974   +          +    -0.87975442613962 * S_NumWebPurchases
2326975   +          +     2.98977282825831 * S_NumWebVisitsMonth
2326976   +          +     0.16388418187981 * S_RFMstat  +     0.63858980984599 *
2326977   +        S_RMntFrq  +    -2.53833222281652 * S_Recency
2326978   +          +    -2.72141665283523 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.16786131610493 * S_AcceptedCmpTotal + 0.08150129707008 * 
S_Age + -0.00076335149511 * S_Frq + 2.37648351383272 * S_Income + -1.63260278456818 * 
S_Kidhome + -0.6720941090663 * S_Mnt + -0.03176174297509 * S_MntFishProducts + 
-0.03796990721617 * S_MntFruits + -0.17020485447842 * S_MntGoldProds + 0.7709093878281 * 
S_MntMeatProducts + -0.26168538456938 * S_MntSweetProducts + -1.36275284328546 * S_MntWines + 
-0.30344694826738 * S_MonthsAsCustomer + 1.68662611500615 * S_NumCatalogPurchases + 
1.32037113020393 * S_NumDealsPurchases + 0.42879249227132 * S_NumDistPurchases + 
-0.89190172778783 * S_NumStorePurchases + -0.87975442613962 * S_NumWebPurchases + 
2.98977282825831 * S_NumWebVisitsMonth + 0.16388418187981 * S_RFMstat + 0.63858980984599 * 
S_RMntFrq + -2.53833222281652 * S_Recency + -2.72141665283523 * S_Teenhome ;
2326979   +   H1x1_2  =    -1.16140709294501 * S_AcceptedCmpTotal
2326980   +          +    -0.87210661607894 * S_Age  +    -0.15365607228782 * S_Frq
2326981   +          +    -1.14855351318782 * S_Income  +     -0.3792851632462 *
2326982   +        S_Kidhome  +    -1.20412080219233 * S_Mnt  +     0.98615533034973 *
2326983   +        S_MntFishProducts  +     0.44541456963703 * S_MntFruits
2326984   +          +    -0.86465923336111 * S_MntGoldProds  +    -5.15063925950455 *
2326985   +        S_MntMeatProducts  +     0.54937255903381 * S_MntSweetProducts
2326986   +          +      1.1566197343428 * S_MntWines  +     1.05956341559861 *
2326987   +        S_MonthsAsCustomer  +    -1.51353620179805 * S_NumCatalogPurchases
2326988   +          +    -1.16737670931605 * S_NumDealsPurchases
2326989   +          +     0.08205195039242 * S_NumDistPurchases
2326990   +          +    -0.65367044520084 * S_NumStorePurchases
2326991   +          +     2.39693083674757 * S_NumWebPurchases
2326992   +          +     0.18432526469897 * S_NumWebVisitsMonth
2326993   +          +    -0.81660690569703 * S_RFMstat  +      0.2679378370467 *
2326994   +        S_RMntFrq  +    -0.12214066685673 * S_Recency
2326995   +          +     1.80138107382539 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.16140709294501 * S_AcceptedCmpTotal + -0.87210661607894 * 
S_Age + -0.15365607228782 * S_Frq + -1.14855351318782 * S_Income + -0.3792851632462 * 
S_Kidhome + -1.20412080219233 * S_Mnt + 0.98615533034973 * S_MntFishProducts + 
0.44541456963703 * S_MntFruits + -0.86465923336111 * S_MntGoldProds + -5.15063925950455 * 
S_MntMeatProducts + 0.54937255903381 * S_MntSweetProducts + 1.1566197343428 * S_MntWines + 
1.05956341559861 * S_MonthsAsCustomer + -1.51353620179805 * S_NumCatalogPurchases + 
-1.16737670931605 * S_NumDealsPurchases + 0.08205195039242 * S_NumDistPurchases + 
-0.65367044520084 * S_NumStorePurchases + 2.39693083674757 * S_NumWebPurchases + 
0.18432526469897 * S_NumWebVisitsMonth + -0.81660690569703 * S_RFMstat + 0.2679378370467 * 
S_RMntFrq + -0.12214066685673 * S_Recency + 1.80138107382539 * S_Teenhome ;
2326996   +   H1x1_3  =      2.0905555295419 * S_AcceptedCmpTotal
2326997   +          +    -0.23515107640805 * S_Age  +    -0.34980320997139 * S_Frq
2326998   +          +     0.96612788543649 * S_Income  +    -0.57035066115881 *
2326999   +        S_Kidhome  +     0.22762934410578 * S_Mnt  +    -0.52536382903021 *
2327000   +        S_MntFishProducts  +    -1.18451511831956 * S_MntFruits
2327001   +          +     0.15600368092559 * S_MntGoldProds  +     2.66964572205551 *
2327002   +        S_MntMeatProducts  +    -0.66381928008493 * S_MntSweetProducts
2327003   +          +    -1.34669953562975 * S_MntWines  +     1.35404821514849 *
2327004   +        S_MonthsAsCustomer  +     1.74839628716461 * S_NumCatalogPurchases
2327005   +          +     0.76616480025024 * S_NumDealsPurchases
2327006   +          +     0.42823368706255 * S_NumDistPurchases
2327007   +          +    -1.16998364854907 * S_NumStorePurchases
2327008   +          +     -1.0841896541746 * S_NumWebPurchases
2327009   +          +     2.74837744375079 * S_NumWebVisitsMonth
2327010   +          +    -0.12893804494501 * S_RFMstat  +    -0.62922223536042 *
2327011   +        S_RMntFrq  +    -5.13438280616518 * S_Recency
2327012   +          +    -0.03717013845941 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.0905555295419 * S_AcceptedCmpTotal + -0.23515107640805 * 
S_Age + -0.34980320997139 * S_Frq + 0.96612788543649 * S_Income + -0.57035066115881 * 
S_Kidhome + 0.22762934410578 * S_Mnt + -0.52536382903021 * S_MntFishProducts + 
-1.18451511831956 * S_MntFruits + 0.15600368092559 * S_MntGoldProds + 2.66964572205551 * 
S_MntMeatProducts + -0.66381928008493 * S_MntSweetProducts + -1.34669953562975 * S_MntWines + 
1.35404821514849 * S_MonthsAsCustomer + 1.74839628716461 * S_NumCatalogPurchases + 
0.76616480025024 * S_NumDealsPurchases + 0.42823368706255 * S_NumDistPurchases + 
-1.16998364854907 * S_NumStorePurchases + -1.0841896541746 * S_NumWebPurchases + 
2.74837744375079 * S_NumWebVisitsMonth + -0.12893804494501 * S_RFMstat + -0.62922223536042 * 
S_RMntFrq + -5.13438280616518 * S_Recency + -0.03717013845941 * S_Teenhome ;
2327013   +   H1x1_4  =     0.00721395593412 * S_AcceptedCmpTotal
2327014   +          +    -0.01540387767211 * S_Age  +    -0.84860703860633 * S_Frq
2327015   +          +    -1.02288627805121 * S_Income  +    -1.09101870516967 *
2327016   +        S_Kidhome  +    -0.49364597366691 * S_Mnt  +    -0.46832600024559 *
2327017   +        S_MntFishProducts  +     0.18419647776638 * S_MntFruits
2327018   +          +     0.08548650236624 * S_MntGoldProds  +      3.4353205628246 *
2327019   +        S_MntMeatProducts  +    -0.34836704949861 * S_MntSweetProducts
2327020   +          +    -2.43294028965601 * S_MntWines  +       -0.52018014955 *
2327021   +        S_MonthsAsCustomer  +     0.64700842330282 * S_NumCatalogPurchases
2327022   +          +     0.78421010501058 * S_NumDealsPurchases
2327023   +          +     0.01075885160671 * S_NumDistPurchases
2327024   +          +    -1.99395040717832 * S_NumStorePurchases
2327025   +          +    -1.02908330834262 * S_NumWebPurchases
2327026   +          +     2.79163466516477 * S_NumWebVisitsMonth
2327027   +          +    -0.02537920152644 * S_RFMstat  +    -0.42457000565561 *
2327028   +        S_RMntFrq  +     -2.0907247135068 * S_Recency
2327029   +          +     0.74119954026621 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.00721395593412 * S_AcceptedCmpTotal + -0.01540387767211 * 
S_Age + -0.84860703860633 * S_Frq + -1.02288627805121 * S_Income + -1.09101870516967 * 
S_Kidhome + -0.49364597366691 * S_Mnt + -0.46832600024559 * S_MntFishProducts + 
0.18419647776638 * S_MntFruits + 0.08548650236624 * S_MntGoldProds + 3.4353205628246 * 
S_MntMeatProducts + -0.34836704949861 * S_MntSweetProducts + -2.43294028965601 * S_MntWines + 
-0.52018014955 * S_MonthsAsCustomer + 0.64700842330282 * S_NumCatalogPurchases + 
0.78421010501058 * S_NumDealsPurchases + 0.01075885160671 * S_NumDistPurchases + 
-1.99395040717832 * S_NumStorePurchases + -1.02908330834262 * S_NumWebPurchases + 
2.79163466516477 * S_NumWebVisitsMonth + -0.02537920152644 * S_RFMstat + -0.42457000565561 * 
S_RMntFrq + -2.0907247135068 * S_Recency + 0.74119954026621 * S_Teenhome ;
2327030   +   H1x1_5  =    -1.61701205426558 * S_AcceptedCmpTotal
2327031   +          +     0.08257295395479 * S_Age  +    -0.68185680658717 * S_Frq
2327032   +          +    -1.39465125759406 * S_Income  +    -1.25029109577242 *
2327033   +        S_Kidhome  +    -1.09090107886966 * S_Mnt  +     1.64350195586938 *
2327034   +        S_MntFishProducts  +      0.5087421773332 * S_MntFruits
2327035   +          +      0.4047616469084 * S_MntGoldProds  +    -7.16241250715453 *
2327036   +        S_MntMeatProducts  +    -0.92562420397097 * S_MntSweetProducts
2327037   +          +     1.87307481667927 * S_MntWines  +    -0.53417946416471 *
2327038   +        S_MonthsAsCustomer  +    -1.53123660652072 * S_NumCatalogPurchases
2327039   +          +    -1.04219068390022 * S_NumDealsPurchases
2327040   +          +    -0.45770204483973 * S_NumDistPurchases
2327041   +          +    -0.04941442229195 * S_NumStorePurchases
2327042   +          +     0.67187353161183 * S_NumWebPurchases
2327043   +          +     2.01907760553871 * S_NumWebVisitsMonth
2327044   +          +    -1.68329765100269 * S_RFMstat  +     0.29244142334331 *
2327045   +        S_RMntFrq  +    -1.12913051410394 * S_Recency
2327046   +          +     0.43082751824484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.61701205426558 * S_AcceptedCmpTotal + 0.08257295395479 * 
S_Age + -0.68185680658717 * S_Frq + -1.39465125759406 * S_Income + -1.25029109577242 * 
S_Kidhome + -1.09090107886966 * S_Mnt + 1.64350195586938 * S_MntFishProducts + 0.5087421773332 
* S_MntFruits + 0.4047616469084 * S_MntGoldProds + -7.16241250715453 * S_MntMeatProducts + 
-0.92562420397097 * S_MntSweetProducts + 1.87307481667927 * S_MntWines + -0.53417946416471 * 
S_MonthsAsCustomer + -1.53123660652072 * S_NumCatalogPurchases + -1.04219068390022 * 
S_NumDealsPurchases + -0.45770204483973 * S_NumDistPurchases + -0.04941442229195 * 
S_NumStorePurchases + 0.67187353161183 * S_NumWebPurchases + 2.01907760553871 * 
S_NumWebVisitsMonth + -1.68329765100269 * S_RFMstat + 0.29244142334331 * S_RMntFrq + 
-1.12913051410394 * S_Recency + 0.43082751824484 * S_Teenhome ;
2327047   +   H1x1_1  = H1x1_1  +    -0.44646416045725 * AcceptedCmp10
2327048   +          +    -0.51992887099168 * AcceptedCmp20  +    -1.12974688442196 *
2327049   +        AcceptedCmp30  +    -0.25247614927616 * AcceptedCmp40
2327050   +          +     -1.0839587453165 * AcceptedCmp50  +    -0.37542128912082 *
2327051   +        Complain0  +     0.50509109375746 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.44646416045725 * AcceptedCmp10 + -0.51992887099168 
* AcceptedCmp20 + -1.12974688442196 * AcceptedCmp30 + -0.25247614927616 * AcceptedCmp40 + 
-1.0839587453165 * AcceptedCmp50 + -0.37542128912082 * Complain0 + 0.50509109375746 * 
HigherEducationBinary0 ;
2327052   +   H1x1_2  = H1x1_2  +     1.41785862418118 * AcceptedCmp10
2327053   +          +     0.14869386732553 * AcceptedCmp20  +    -0.34292007253529 *
2327054   +        AcceptedCmp30  +    -0.46450669830265 * AcceptedCmp40
2327055   +          +    -0.84675597945703 * AcceptedCmp50  +     -0.0664649548734 *
2327056   +        Complain0  +    -0.45532665777266 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.41785862418118 * AcceptedCmp10 + 0.14869386732553 * 
AcceptedCmp20 + -0.34292007253529 * AcceptedCmp30 + -0.46450669830265 * AcceptedCmp40 + 
-0.84675597945703 * AcceptedCmp50 + -0.0664649548734 * Complain0 + -0.45532665777266 * 
HigherEducationBinary0 ;
2327057   +   H1x1_3  = H1x1_3  +    -0.77549230890552 * AcceptedCmp10
2327058   +          +    -1.36005205352388 * AcceptedCmp20  +    -0.77268925112364 *
2327059   +        AcceptedCmp30  +    -1.48651970256564 * AcceptedCmp40
2327060   +          +    -1.49771960438108 * AcceptedCmp50  +     0.05855673938529 *
2327061   +        Complain0  +      0.5650947463497 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.77549230890552 * AcceptedCmp10 + -1.36005205352388 
* AcceptedCmp20 + -0.77268925112364 * AcceptedCmp30 + -1.48651970256564 * AcceptedCmp40 + 
-1.49771960438108 * AcceptedCmp50 + 0.05855673938529 * Complain0 + 0.5650947463497 * 
HigherEducationBinary0 ;
2327062   +   H1x1_4  = H1x1_4  +    -0.67577364181798 * AcceptedCmp10
2327063   +          +    -0.90920539880387 * AcceptedCmp20  +    -0.10856872028934 *
2327064   +        AcceptedCmp30  +    -0.17408320421731 * AcceptedCmp40
2327065   +          +    -0.40718112138881 * AcceptedCmp50  +    -1.15772819875829 *
2327066   +        Complain0  +    -0.63688652305256 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.67577364181798 * AcceptedCmp10 + -0.90920539880387 
* AcceptedCmp20 + -0.10856872028934 * AcceptedCmp30 + -0.17408320421731 * AcceptedCmp40 + 
-0.40718112138881 * AcceptedCmp50 + -1.15772819875829 * Complain0 + -0.63688652305256 * 
HigherEducationBinary0 ;
2327067   +   H1x1_5  = H1x1_5  +      -0.257461635853 * AcceptedCmp10
2327068   +          +    -0.53931888306725 * AcceptedCmp20  +    -0.18314917937273 *
2327069   +        AcceptedCmp30  +    -0.63373606551928 * AcceptedCmp40
2327070   +          +    -0.22117496766649 * AcceptedCmp50  +    -0.96313784449205 *
2327071   +        Complain0  +    -0.42031825118642 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.257461635853 * AcceptedCmp10 + -0.53931888306725 * 
AcceptedCmp20 + -0.18314917937273 * AcceptedCmp30 + -0.63373606551928 * AcceptedCmp40 + 
-0.22117496766649 * AcceptedCmp50 + -0.96313784449205 * Complain0 + -0.42031825118642 * 
HigherEducationBinary0 ;
2327072   +   H1x1_1  = H1x1_1  +    -0.61947659516101 * Education2n_Cycle
2327073   +          +     0.35542867116569 * EducationBasic  +    -0.40115062807285 *
2327074   +        EducationGraduation  +     0.09596442360106 * EducationMaster
2327075   +          +     2.58907527032049 * Marital_StatusDivorced
2327076   +          +    -2.45549008158921 * Marital_StatusMarried
2327077   +          +     2.56223650840768 * Marital_StatusSingle
2327078   +          +    -2.57680442835747 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.61947659516101 * Education2n_Cycle + 
0.35542867116569 * EducationBasic + -0.40115062807285 * EducationGraduation + 0.09596442360106 
* EducationMaster + 2.58907527032049 * Marital_StatusDivorced + -2.45549008158921 * 
Marital_StatusMarried + 2.56223650840768 * Marital_StatusSingle + -2.57680442835747 * 
Marital_StatusTogether ;
2327079   +   H1x1_2  = H1x1_2  +    -0.89996232033524 * Education2n_Cycle
2327080   +          +     0.51901949778729 * EducationBasic  +     0.48428543845596 *
2327081   +        EducationGraduation  +     0.29249899969052 * EducationMaster
2327082   +          +     0.83917299191368 * Marital_StatusDivorced
2327083   +          +    -0.62624692699191 * Marital_StatusMarried
2327084   +          +    -0.22585060624911 * Marital_StatusSingle
2327085   +          +    -1.13600554287291 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.89996232033524 * Education2n_Cycle + 
0.51901949778729 * EducationBasic + 0.48428543845596 * EducationGraduation + 0.29249899969052 
* EducationMaster + 0.83917299191368 * Marital_StatusDivorced + -0.62624692699191 * 
Marital_StatusMarried + -0.22585060624911 * Marital_StatusSingle + -1.13600554287291 * 
Marital_StatusTogether ;
2327086   +   H1x1_3  = H1x1_3  +    -0.14267095105584 * Education2n_Cycle
2327087   +          +    -0.02301358792856 * EducationBasic  +     0.52040244367562 *
2327088   +        EducationGraduation  +     -1.3163356801876 * EducationMaster
2327089   +          +    -0.65063506696715 * Marital_StatusDivorced
2327090   +          +    -2.37495865381256 * Marital_StatusMarried
2327091   +          +    -0.54954654146904 * Marital_StatusSingle
2327092   +          +    -2.20184943463859 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14267095105584 * Education2n_Cycle + 
-0.02301358792856 * EducationBasic + 0.52040244367562 * EducationGraduation + -1.3163356801876 
* EducationMaster + -0.65063506696715 * Marital_StatusDivorced + -2.37495865381256 * 
Marital_StatusMarried + -0.54954654146904 * Marital_StatusSingle + -2.20184943463859 * 
Marital_StatusTogether ;
2327093   +   H1x1_4  = H1x1_4  +     0.07824072331908 * Education2n_Cycle
2327094   +          +    -0.70728597193571 * EducationBasic  +    -0.08522817414387 *
2327095   +        EducationGraduation  +     0.07916018399549 * EducationMaster
2327096   +          +     0.16185824798364 * Marital_StatusDivorced
2327097   +          +    -0.08142416735136 * Marital_StatusMarried
2327098   +          +    -0.20392270385969 * Marital_StatusSingle
2327099   +          +    -0.16702436233017 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.07824072331908 * Education2n_Cycle + 
-0.70728597193571 * EducationBasic + -0.08522817414387 * EducationGraduation + 
0.07916018399549 * EducationMaster + 0.16185824798364 * Marital_StatusDivorced + 
-0.08142416735136 * Marital_StatusMarried + -0.20392270385969 * Marital_StatusSingle + 
-0.16702436233017 * Marital_StatusTogether ;
2327100   +   H1x1_5  = H1x1_5  +    -0.24374540557838 * Education2n_Cycle
2327101   +          +    -0.69820143786999 * EducationBasic  +    -0.60198982003005 *
2327102   +        EducationGraduation  +     0.28107355175103 * EducationMaster
2327103   +          +      -0.516522631078 * Marital_StatusDivorced
2327104   +          +    -0.61661247789976 * Marital_StatusMarried
2327105   +          +    -0.99533130308294 * Marital_StatusSingle
2327106   +          +    -0.36897004084592 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.24374540557838 * Education2n_Cycle + 
-0.69820143786999 * EducationBasic + -0.60198982003005 * EducationGraduation + 
0.28107355175103 * EducationMaster + -0.516522631078 * Marital_StatusDivorced + 
-0.61661247789976 * Marital_StatusMarried + -0.99533130308294 * Marital_StatusSingle + 
-0.36897004084592 * Marital_StatusTogether ;
2327107   +   H1x1_1  =    -2.48464133714558 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.48464133714558 + H1x1_1 ;
2327108   +   H1x1_2  =    -1.27353840480002 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.27353840480002 + H1x1_2 ;
2327109   +   H1x1_3  =    -1.74000879961851 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.74000879961851 + H1x1_3 ;
2327110   +   H1x1_4  =    -0.38838285632991 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.38838285632991 + H1x1_4 ;
2327111   +   H1x1_5  =    -0.14124488553728 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.14124488553728 + H1x1_5 ;
2327112   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
2327113   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
2327114   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2327115   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2327116   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2327117   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2327118   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2327119   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2327120   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2327121   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2327122   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2327123   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
2327124   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
2327125   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
2327126   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
2327127   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2327128   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2327129   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2327130   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2327131   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
2327132   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
2327133   +END;
MPRINT(EM_DIAGRAM):   END;
2327134   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2327135   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2327136   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2327137   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2327138   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2327139   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2327140   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2327141   +END;
MPRINT(EM_DIAGRAM):   END;
2327142   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2327143   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2327144   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2327145   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2327146   +   H1x2_1  =     0.48404108721156 * S_AcceptedCmpTotal
2327147   +          +    -0.27070568741648 * S_Age  +    -0.78729393257177 * S_Frq
2327148   +          +    -0.22841203379079 * S_Income  +      1.7948359601764 *
2327149   +        S_Kidhome  +     0.16415271082275 * S_Mnt  +     0.68709045116477 *
2327150   +        S_MntFishProducts  +     1.40499150479431 * S_MntFruits
2327151   +          +     1.76690927096327 * S_MntGoldProds  +    -0.47805967324795 *
2327152   +        S_MntMeatProducts  +    -1.98462171861386 * S_MntSweetProducts
2327153   +          +     0.17732042205332 * S_MntWines  +    -2.68647979937092 *
2327154   +        S_MonthsAsCustomer  +     0.66724634672152 * S_NumCatalogPurchases
2327155   +          +    -0.03801022287706 * S_NumDealsPurchases
2327156   +          +    -1.50723574966419 * S_NumDistPurchases
2327157   +          +    -0.21514545448485 * S_NumStorePurchases
2327158   +          +    -0.50179555233865 * S_NumWebPurchases
2327159   +          +    -0.68226572560161 * S_NumWebVisitsMonth
2327160   +          +    -1.16287961930374 * S_RFMstat  +    -0.10835316604382 *
2327161   +        S_RMntFrq  +     0.78178939203913 * S_Recency
2327162   +          +     0.99430928489958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.48404108721156 * S_AcceptedCmpTotal + -0.27070568741648 * 
S_Age + -0.78729393257177 * S_Frq + -0.22841203379079 * S_Income + 1.7948359601764 * S_Kidhome 
+ 0.16415271082275 * S_Mnt + 0.68709045116477 * S_MntFishProducts + 1.40499150479431 * 
S_MntFruits + 1.76690927096327 * S_MntGoldProds + -0.47805967324795 * S_MntMeatProducts + 
-1.98462171861386 * S_MntSweetProducts + 0.17732042205332 * S_MntWines + -2.68647979937092 * 
S_MonthsAsCustomer + 0.66724634672152 * S_NumCatalogPurchases + -0.03801022287706 * 
S_NumDealsPurchases + -1.50723574966419 * S_NumDistPurchases + -0.21514545448485 * 
S_NumStorePurchases + -0.50179555233865 * S_NumWebPurchases + -0.68226572560161 * 
S_NumWebVisitsMonth + -1.16287961930374 * S_RFMstat + -0.10835316604382 * S_RMntFrq + 
0.78178939203913 * S_Recency + 0.99430928489958 * S_Teenhome ;
2327163   +   H1x2_2  =    -0.36352858735119 * S_AcceptedCmpTotal
2327164   +          +    -0.57224467079409 * S_Age  +    -1.50170848997829 * S_Frq
2327165   +          +    -0.38902839025885 * S_Income  +     -1.1798795668612 *
2327166   +        S_Kidhome  +     -0.1290183198617 * S_Mnt  +     0.76723261406072 *
2327167   +        S_MntFishProducts  +     -0.2940014517298 * S_MntFruits
2327168   +          +     1.10823983171432 * S_MntGoldProds  +    -0.31483479967732 *
2327169   +        S_MntMeatProducts  +     1.52044892546638 * S_MntSweetProducts
2327170   +          +     0.93667207634948 * S_MntWines  +     1.38654947651763 *
2327171   +        S_MonthsAsCustomer  +     0.60618457384701 * S_NumCatalogPurchases
2327172   +          +     0.70551335536975 * S_NumDealsPurchases
2327173   +          +     0.02824488988803 * S_NumDistPurchases
2327174   +          +    -0.47958123842808 * S_NumStorePurchases
2327175   +          +     1.04559003239583 * S_NumWebPurchases
2327176   +          +    -0.58386087813772 * S_NumWebVisitsMonth
2327177   +          +     0.30550498646512 * S_RFMstat  +     0.30157778523343 *
2327178   +        S_RMntFrq  +    -0.05848082255965 * S_Recency
2327179   +          +     1.93017367885145 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.36352858735119 * S_AcceptedCmpTotal + -0.57224467079409 * 
S_Age + -1.50170848997829 * S_Frq + -0.38902839025885 * S_Income + -1.1798795668612 * 
S_Kidhome + -0.1290183198617 * S_Mnt + 0.76723261406072 * S_MntFishProducts + -0.2940014517298 
* S_MntFruits + 1.10823983171432 * S_MntGoldProds + -0.31483479967732 * S_MntMeatProducts + 
1.52044892546638 * S_MntSweetProducts + 0.93667207634948 * S_MntWines + 1.38654947651763 * 
S_MonthsAsCustomer + 0.60618457384701 * S_NumCatalogPurchases + 0.70551335536975 * 
S_NumDealsPurchases + 0.02824488988803 * S_NumDistPurchases + -0.47958123842808 * 
S_NumStorePurchases + 1.04559003239583 * S_NumWebPurchases + -0.58386087813772 * 
S_NumWebVisitsMonth + 0.30550498646512 * S_RFMstat + 0.30157778523343 * S_RMntFrq + 
-0.05848082255965 * S_Recency + 1.93017367885145 * S_Teenhome ;
2327180   +   H1x2_3  =    -1.42573562358231 * S_AcceptedCmpTotal
2327181   +          +    -1.32139459670271 * S_Age  +    -0.65089374259133 * S_Frq
2327182   +          +     0.40762251828155 * S_Income  +     0.07844400105703 *
2327183   +        S_Kidhome  +     0.50965373569965 * S_Mnt  +     0.16029734923155 *
2327184   +        S_MntFishProducts  +     0.09920766855666 * S_MntFruits
2327185   +          +     1.72613699296152 * S_MntGoldProds  +    -0.05634715837952 *
2327186   +        S_MntMeatProducts  +    -0.46288044931269 * S_MntSweetProducts
2327187   +          +    -1.56275217321856 * S_MntWines  +     0.47573724745363 *
2327188   +        S_MonthsAsCustomer  +     0.24362096681468 * S_NumCatalogPurchases
2327189   +          +    -0.28907339261907 * S_NumDealsPurchases
2327190   +          +     0.04310505858352 * S_NumDistPurchases
2327191   +          +    -0.99594604666889 * S_NumStorePurchases
2327192   +          +    -0.58870940220114 * S_NumWebPurchases
2327193   +          +     0.84018399925148 * S_NumWebVisitsMonth
2327194   +          +    -0.19517311010454 * S_RFMstat  +     -0.3463233802461 *
2327195   +        S_RMntFrq  +    -1.47730936960999 * S_Recency
2327196   +          +    -0.88597688046705 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.42573562358231 * S_AcceptedCmpTotal + -1.32139459670271 * 
S_Age + -0.65089374259133 * S_Frq + 0.40762251828155 * S_Income + 0.07844400105703 * S_Kidhome 
+ 0.50965373569965 * S_Mnt + 0.16029734923155 * S_MntFishProducts + 0.09920766855666 * 
S_MntFruits + 1.72613699296152 * S_MntGoldProds + -0.05634715837952 * S_MntMeatProducts + 
-0.46288044931269 * S_MntSweetProducts + -1.56275217321856 * S_MntWines + 0.47573724745363 * 
S_MonthsAsCustomer + 0.24362096681468 * S_NumCatalogPurchases + -0.28907339261907 * 
S_NumDealsPurchases + 0.04310505858352 * S_NumDistPurchases + -0.99594604666889 * 
S_NumStorePurchases + -0.58870940220114 * S_NumWebPurchases + 0.84018399925148 * 
S_NumWebVisitsMonth + -0.19517311010454 * S_RFMstat + -0.3463233802461 * S_RMntFrq + 
-1.47730936960999 * S_Recency + -0.88597688046705 * S_Teenhome ;
2327197   +   H1x2_4  =     0.11016580381662 * S_AcceptedCmpTotal
2327198   +          +     0.30908576425954 * S_Age  +     0.34179480828109 * S_Frq
2327199   +          +     0.40584056795753 * S_Income  +    -0.45712899846476 *
2327200   +        S_Kidhome  +     1.12080510316382 * S_Mnt  +     0.48988466623601 *
2327201   +        S_MntFishProducts  +    -0.33589219598754 * S_MntFruits
2327202   +          +     0.89305356089927 * S_MntGoldProds  +    -2.00512215642683 *
2327203   +        S_MntMeatProducts  +     1.10859074670332 * S_MntSweetProducts
2327204   +          +     -1.0064133988839 * S_MntWines  +      0.7768603559605 *
2327205   +        S_MonthsAsCustomer  +     0.97922554259242 * S_NumCatalogPurchases
2327206   +          +     0.52917289878604 * S_NumDealsPurchases
2327207   +          +     0.30974142545809 * S_NumDistPurchases
2327208   +          +    -0.36081450643799 * S_NumStorePurchases
2327209   +          +    -0.28418053386759 * S_NumWebPurchases
2327210   +          +    -0.80759462497096 * S_NumWebVisitsMonth
2327211   +          +    -1.12633439579018 * S_RFMstat  +    -0.14662678398603 *
2327212   +        S_RMntFrq  +    -0.02418118976368 * S_Recency
2327213   +          +    -0.46548253671298 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.11016580381662 * S_AcceptedCmpTotal + 0.30908576425954 * 
S_Age + 0.34179480828109 * S_Frq + 0.40584056795753 * S_Income + -0.45712899846476 * S_Kidhome 
+ 1.12080510316382 * S_Mnt + 0.48988466623601 * S_MntFishProducts + -0.33589219598754 * 
S_MntFruits + 0.89305356089927 * S_MntGoldProds + -2.00512215642683 * S_MntMeatProducts + 
1.10859074670332 * S_MntSweetProducts + -1.0064133988839 * S_MntWines + 0.7768603559605 * 
S_MonthsAsCustomer + 0.97922554259242 * S_NumCatalogPurchases + 0.52917289878604 * 
S_NumDealsPurchases + 0.30974142545809 * S_NumDistPurchases + -0.36081450643799 * 
S_NumStorePurchases + -0.28418053386759 * S_NumWebPurchases + -0.80759462497096 * 
S_NumWebVisitsMonth + -1.12633439579018 * S_RFMstat + -0.14662678398603 * S_RMntFrq + 
-0.02418118976368 * S_Recency + -0.46548253671298 * S_Teenhome ;
2327214   +   H1x2_5  =    -0.55551536908819 * S_AcceptedCmpTotal
2327215   +          +    -0.09163465220674 * S_Age  +    -0.35937602626275 * S_Frq
2327216   +          +     0.61145646041534 * S_Income  +     0.28920493959955 *
2327217   +        S_Kidhome  +     0.71661843805688 * S_Mnt  +     0.25254041554237 *
2327218   +        S_MntFishProducts  +    -0.38704785732563 * S_MntFruits
2327219   +          +    -0.16912995068939 * S_MntGoldProds  +     0.21440191729631 *
2327220   +        S_MntMeatProducts  +    -0.49507693220329 * S_MntSweetProducts
2327221   +          +      0.3153765288287 * S_MntWines  +    -0.15329574285112 *
2327222   +        S_MonthsAsCustomer  +     1.28722879296429 * S_NumCatalogPurchases
2327223   +          +    -0.47500053723253 * S_NumDealsPurchases
2327224   +          +     0.41421086319635 * S_NumDistPurchases
2327225   +          +     0.69664835428137 * S_NumStorePurchases
2327226   +          +     0.66359306812968 * S_NumWebPurchases
2327227   +          +     0.77931462528741 * S_NumWebVisitsMonth
2327228   +          +     0.05868786291548 * S_RFMstat  +     0.77672802649379 *
2327229   +        S_RMntFrq  +    -1.91226042675868 * S_Recency
2327230   +          +     1.79227856637688 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.55551536908819 * S_AcceptedCmpTotal + -0.09163465220674 * 
S_Age + -0.35937602626275 * S_Frq + 0.61145646041534 * S_Income + 0.28920493959955 * S_Kidhome 
+ 0.71661843805688 * S_Mnt + 0.25254041554237 * S_MntFishProducts + -0.38704785732563 * 
S_MntFruits + -0.16912995068939 * S_MntGoldProds + 0.21440191729631 * S_MntMeatProducts + 
-0.49507693220329 * S_MntSweetProducts + 0.3153765288287 * S_MntWines + -0.15329574285112 * 
S_MonthsAsCustomer + 1.28722879296429 * S_NumCatalogPurchases + -0.47500053723253 * 
S_NumDealsPurchases + 0.41421086319635 * S_NumDistPurchases + 0.69664835428137 * 
S_NumStorePurchases + 0.66359306812968 * S_NumWebPurchases + 0.77931462528741 * 
S_NumWebVisitsMonth + 0.05868786291548 * S_RFMstat + 0.77672802649379 * S_RMntFrq + 
-1.91226042675868 * S_Recency + 1.79227856637688 * S_Teenhome ;
2327231   +   H1x2_1  = H1x2_1  +     1.13471289065691 * AcceptedCmp10
2327232   +          +     0.65974383309652 * AcceptedCmp20  +    -1.87292531678796 *
2327233   +        AcceptedCmp30  +      -1.353797047409 * AcceptedCmp40
2327234   +          +     0.20616786486771 * AcceptedCmp50  +    -0.38264326101775 *
2327235   +        Complain0  +    -0.17807638061615 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.13471289065691 * AcceptedCmp10 + 0.65974383309652 * 
AcceptedCmp20 + -1.87292531678796 * AcceptedCmp30 + -1.353797047409 * AcceptedCmp40 + 
0.20616786486771 * AcceptedCmp50 + -0.38264326101775 * Complain0 + -0.17807638061615 * 
HigherEducationBinary0 ;
2327236   +   H1x2_2  = H1x2_2  +     1.21347348622419 * AcceptedCmp10
2327237   +          +    -0.25372740217388 * AcceptedCmp20  +     1.86937589112006 *
2327238   +        AcceptedCmp30  +    -0.04754722838516 * AcceptedCmp40
2327239   +          +    -0.08078800460742 * AcceptedCmp50  +     1.62387969342769 *
2327240   +        Complain0  +    -0.78004732229344 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.21347348622419 * AcceptedCmp10 + -0.25372740217388 * 
AcceptedCmp20 + 1.86937589112006 * AcceptedCmp30 + -0.04754722838516 * AcceptedCmp40 + 
-0.08078800460742 * AcceptedCmp50 + 1.62387969342769 * Complain0 + -0.78004732229344 * 
HigherEducationBinary0 ;
2327241   +   H1x2_3  = H1x2_3  +    -0.02152665189186 * AcceptedCmp10
2327242   +          +     0.57207081192818 * AcceptedCmp20  +      0.6212177562119 *
2327243   +        AcceptedCmp30  +    -0.73691462528053 * AcceptedCmp40
2327244   +          +    -0.35326427815838 * AcceptedCmp50  +     0.14875513793176 *
2327245   +        Complain0  +    -0.13978395235915 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.02152665189186 * AcceptedCmp10 + 0.57207081192818 * 
AcceptedCmp20 + 0.6212177562119 * AcceptedCmp30 + -0.73691462528053 * AcceptedCmp40 + 
-0.35326427815838 * AcceptedCmp50 + 0.14875513793176 * Complain0 + -0.13978395235915 * 
HigherEducationBinary0 ;
2327246   +   H1x2_4  = H1x2_4  +     0.87315450122595 * AcceptedCmp10
2327247   +          +      0.7868322457627 * AcceptedCmp20  +    -0.23332719513906 *
2327248   +        AcceptedCmp30  +    -0.68817918979928 * AcceptedCmp40
2327249   +          +    -0.57204462412445 * AcceptedCmp50  +    -0.86223238269616 *
2327250   +        Complain0  +     -0.3126348645458 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.87315450122595 * AcceptedCmp10 + 0.7868322457627 * 
AcceptedCmp20 + -0.23332719513906 * AcceptedCmp30 + -0.68817918979928 * AcceptedCmp40 + 
-0.57204462412445 * AcceptedCmp50 + -0.86223238269616 * Complain0 + -0.3126348645458 * 
HigherEducationBinary0 ;
2327251   +   H1x2_5  = H1x2_5  +     0.29282165496733 * AcceptedCmp10
2327252   +          +     1.51708756092369 * AcceptedCmp20  +     1.20268215158483 *
2327253   +        AcceptedCmp30  +     0.30521477351547 * AcceptedCmp40
2327254   +          +    -0.58691162701837 * AcceptedCmp50  +     0.75641665624817 *
2327255   +        Complain0  +      0.7018761099345 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.29282165496733 * AcceptedCmp10 + 1.51708756092369 * 
AcceptedCmp20 + 1.20268215158483 * AcceptedCmp30 + 0.30521477351547 * AcceptedCmp40 + 
-0.58691162701837 * AcceptedCmp50 + 0.75641665624817 * Complain0 + 0.7018761099345 * 
HigherEducationBinary0 ;
2327256   +   H1x2_1  = H1x2_1  +    -0.68955031483686 * Education2n_Cycle
2327257   +          +    -1.63162976419312 * EducationBasic  +     1.58569020932253 *
2327258   +        EducationGraduation  +     0.89392741557091 * EducationMaster
2327259   +          +    -1.34742914042312 * Marital_StatusDivorced
2327260   +          +    -0.75378934918763 * Marital_StatusMarried
2327261   +          +    -1.85411678929217 * Marital_StatusSingle
2327262   +          +     0.34579160965376 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.68955031483686 * Education2n_Cycle + 
-1.63162976419312 * EducationBasic + 1.58569020932253 * EducationGraduation + 0.89392741557091 
* EducationMaster + -1.34742914042312 * Marital_StatusDivorced + -0.75378934918763 * 
Marital_StatusMarried + -1.85411678929217 * Marital_StatusSingle + 0.34579160965376 * 
Marital_StatusTogether ;
2327263   +   H1x2_2  = H1x2_2  +     0.91842441316819 * Education2n_Cycle
2327264   +          +    -0.10372785737624 * EducationBasic  +     1.79022097342125 *
2327265   +        EducationGraduation  +      1.4602485898642 * EducationMaster
2327266   +          +     0.47958659206261 * Marital_StatusDivorced
2327267   +          +     -0.9665584294045 * Marital_StatusMarried
2327268   +          +      0.9733784530538 * Marital_StatusSingle
2327269   +          +     0.19258101270915 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.91842441316819 * Education2n_Cycle + 
-0.10372785737624 * EducationBasic + 1.79022097342125 * EducationGraduation + 1.4602485898642 
* EducationMaster + 0.47958659206261 * Marital_StatusDivorced + -0.9665584294045 * 
Marital_StatusMarried + 0.9733784530538 * Marital_StatusSingle + 0.19258101270915 * 
Marital_StatusTogether ;
2327270   +   H1x2_3  = H1x2_3  +     1.26817216331303 * Education2n_Cycle
2327271   +          +    -1.60153781162075 * EducationBasic  +    -0.32068567398782 *
2327272   +        EducationGraduation  +     1.49772418974753 * EducationMaster
2327273   +          +    -0.56894207908284 * Marital_StatusDivorced
2327274   +          +    -0.96715106987195 * Marital_StatusMarried
2327275   +          +     1.18678144721443 * Marital_StatusSingle
2327276   +          +     1.05940264255347 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.26817216331303 * Education2n_Cycle + 
-1.60153781162075 * EducationBasic + -0.32068567398782 * EducationGraduation + 
1.49772418974753 * EducationMaster + -0.56894207908284 * Marital_StatusDivorced + 
-0.96715106987195 * Marital_StatusMarried + 1.18678144721443 * Marital_StatusSingle + 
1.05940264255347 * Marital_StatusTogether ;
2327277   +   H1x2_4  = H1x2_4  +    -1.19824707240276 * Education2n_Cycle
2327278   +          +     0.43905907692169 * EducationBasic  +    -1.18279972023424 *
2327279   +        EducationGraduation  +    -2.01250798855133 * EducationMaster
2327280   +          +     -0.6061959224661 * Marital_StatusDivorced
2327281   +          +     0.03495844244684 * Marital_StatusMarried
2327282   +          +    -0.63896361063244 * Marital_StatusSingle
2327283   +          +     0.74357887057422 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.19824707240276 * Education2n_Cycle + 
0.43905907692169 * EducationBasic + -1.18279972023424 * EducationGraduation + 
-2.01250798855133 * EducationMaster + -0.6061959224661 * Marital_StatusDivorced + 
0.03495844244684 * Marital_StatusMarried + -0.63896361063244 * Marital_StatusSingle + 
0.74357887057422 * Marital_StatusTogether ;
2327284   +   H1x2_5  = H1x2_5  +     -0.6530237200396 * Education2n_Cycle
2327285   +          +     0.90062473169279 * EducationBasic  +    -3.01933913602199 *
2327286   +        EducationGraduation  +     -0.1598988619204 * EducationMaster
2327287   +          +     0.82178907301319 * Marital_StatusDivorced
2327288   +          +     1.69543553114589 * Marital_StatusMarried
2327289   +          +     -2.1272067363559 * Marital_StatusSingle
2327290   +          +     0.24274508474634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.6530237200396 * Education2n_Cycle + 
0.90062473169279 * EducationBasic + -3.01933913602199 * EducationGraduation + -0.1598988619204 
* EducationMaster + 0.82178907301319 * Marital_StatusDivorced + 1.69543553114589 * 
Marital_StatusMarried + -2.1272067363559 * Marital_StatusSingle + 0.24274508474634 * 
Marital_StatusTogether ;
2327291   +   H1x2_1  =     0.30842509451224 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.30842509451224 + H1x2_1 ;
2327292   +   H1x2_2  =     1.79200699407075 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.79200699407075 + H1x2_2 ;
2327293   +   H1x2_3  =     0.66706944906809 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.66706944906809 + H1x2_3 ;
2327294   +   H1x2_4  =     -0.7356254138015 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.7356254138015 + H1x2_4 ;
2327295   +   H1x2_5  =    -0.68066575174095 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.68066575174095 + H1x2_5 ;
2327296   +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
2327297   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
2327298   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2327299   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
2327300   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
2327301   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
2327302   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
2327303   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
2327304   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
2327305   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
2327306   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
2327307   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
2327308   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
2327309   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
2327310   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
2327311   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
2327312   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
2327313   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
2327314   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
2327315   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
2327316   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
2327317   +END;
MPRINT(EM_DIAGRAM):   END;
2327318   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2327319   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2327320   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2327321   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2327322   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2327323   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2327324   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2327325   +END;
MPRINT(EM_DIAGRAM):   END;
2327326   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2327327   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2327328   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2327329   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2327330   +   H2x1_1  =      0.7656278374321 * H1x1_1  +     1.18988619460831 * H1x1_2
2327331   +          +    -0.68458045558713 * H1x1_3  +     0.49093980591245 * H1x1_4
2327332   +          +    -1.27959429919804 * H1x1_5  +    -1.38760297105319 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.7656278374321 * H1x1_1 + 1.18988619460831 * H1x1_2 + 
-0.68458045558713 * H1x1_3 + 0.49093980591245 * H1x1_4 + -1.27959429919804 * H1x1_5 + 
-1.38760297105319 * H1x1_6 ;
2327333   +   H2x1_2  =    -1.48941810274544 * H1x1_1  +     1.75443095464294 * H1x1_2
2327334   +          +    -1.63478694878031 * H1x1_3  +    -0.69296364459258 * H1x1_4
2327335   +          +     3.14007823471691 * H1x1_5  +     2.71965753640902 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.48941810274544 * H1x1_1 + 1.75443095464294 * H1x1_2 + 
-1.63478694878031 * H1x1_3 + -0.69296364459258 * H1x1_4 + 3.14007823471691 * H1x1_5 + 
2.71965753640902 * H1x1_6 ;
2327336   +   H2x1_3  =     1.07426996100463 * H1x1_1  +    -1.76796943416489 * H1x1_2
2327337   +          +    -0.11946940948224 * H1x1_3  +     1.25457449221991 * H1x1_4
2327338   +          +     -1.4079980040852 * H1x1_5  +    -0.94725163293394 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.07426996100463 * H1x1_1 + -1.76796943416489 * H1x1_2 + 
-0.11946940948224 * H1x1_3 + 1.25457449221991 * H1x1_4 + -1.4079980040852 * H1x1_5 + 
-0.94725163293394 * H1x1_6 ;
2327339   +   H2x1_4  =    -0.00078893231548 * H1x1_1  +     0.06396324179717 * H1x1_2
2327340   +          +    -0.13674165204668 * H1x1_3  +    -0.26576379023249 * H1x1_4
2327341   +          +     0.44513643867194 * H1x1_5  +     0.66585878141635 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.00078893231548 * H1x1_1 + 0.06396324179717 * H1x1_2 + 
-0.13674165204668 * H1x1_3 + -0.26576379023249 * H1x1_4 + 0.44513643867194 * H1x1_5 + 
0.66585878141635 * H1x1_6 ;
2327342   +   H2x1_5  =     -2.8467581879118 * H1x1_1  +     2.94182061339515 * H1x1_2
2327343   +          +    -3.43021438685063 * H1x1_3  +    -4.00045607730935 * H1x1_4
2327344   +          +     3.09230566797337 * H1x1_5  +     3.57592566919388 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.8467581879118 * H1x1_1 + 2.94182061339515 * H1x1_2 + 
-3.43021438685063 * H1x1_3 + -4.00045607730935 * H1x1_4 + 3.09230566797337 * H1x1_5 + 
3.57592566919388 * H1x1_6 ;
2327345   +   H2x1_6  =    -0.29912975132561 * H1x1_1  +     0.25554634262501 * H1x1_2
2327346   +          +    -0.62666868576544 * H1x1_3  +     1.54567563696489 * H1x1_4
2327347   +          +     1.87530466579189 * H1x1_5  +    -0.32006241006585 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.29912975132561 * H1x1_1 + 0.25554634262501 * H1x1_2 + 
-0.62666868576544 * H1x1_3 + 1.54567563696489 * H1x1_4 + 1.87530466579189 * H1x1_5 + 
-0.32006241006585 * H1x1_6 ;
2327348   +   H2x1_1  = H2x1_1  +    -0.53923803948063 * H1x2_1
2327349   +          +    -0.14551996067575 * H1x2_2  +     1.15730137448351 * H1x2_3
2327350   +          +     0.02585401686791 * H1x2_4  +     -0.9274056409194 * H1x2_5
2327351   +          +    -0.07237646966438 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.53923803948063 * H1x2_1 + -0.14551996067575 * 
H1x2_2 + 1.15730137448351 * H1x2_3 + 0.02585401686791 * H1x2_4 + -0.9274056409194 * H1x2_5 + 
-0.07237646966438 * H1x2_6 ;
2327352   +   H2x1_2  = H2x1_2  +     -0.1441321293455 * H1x2_1
2327353   +          +    -0.53271770203833 * H1x2_2  +    -2.80064282115477 * H1x2_3
2327354   +          +    -1.05759395901612 * H1x2_4  +    -0.55127059339304 * H1x2_5
2327355   +          +     0.35471332651631 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.1441321293455 * H1x2_1 + -0.53271770203833 * H1x2_2 
+ -2.80064282115477 * H1x2_3 + -1.05759395901612 * H1x2_4 + -0.55127059339304 * H1x2_5 + 
0.35471332651631 * H1x2_6 ;
2327356   +   H2x1_3  = H2x1_3  +     -0.5351190580444 * H1x2_1
2327357   +          +    -0.02107048725988 * H1x2_2  +    -0.83389437376968 * H1x2_3
2327358   +          +    -0.80183937400902 * H1x2_4  +    -0.66588385104453 * H1x2_5
2327359   +          +      0.5218140468737 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.5351190580444 * H1x2_1 + -0.02107048725988 * H1x2_2 
+ -0.83389437376968 * H1x2_3 + -0.80183937400902 * H1x2_4 + -0.66588385104453 * H1x2_5 + 
0.5218140468737 * H1x2_6 ;
2327360   +   H2x1_4  = H2x1_4  +     1.89050022127485 * H1x2_1
2327361   +          +     -2.6557601537516 * H1x2_2  +     0.99126360053411 * H1x2_3
2327362   +          +    -0.44091776054792 * H1x2_4  +    -1.48547403065153 * H1x2_5
2327363   +          +    -0.67920869444907 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.89050022127485 * H1x2_1 + -2.6557601537516 * H1x2_2 
+ 0.99126360053411 * H1x2_3 + -0.44091776054792 * H1x2_4 + -1.48547403065153 * H1x2_5 + 
-0.67920869444907 * H1x2_6 ;
2327364   +   H2x1_5  = H2x1_5  +      0.2827883572995 * H1x2_1
2327365   +          +    -0.68177519072226 * H1x2_2  +    -1.62062483607713 * H1x2_3
2327366   +          +     0.24454579481466 * H1x2_4  +    -0.07591553404219 * H1x2_5
2327367   +          +      1.1175989027563 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.2827883572995 * H1x2_1 + -0.68177519072226 * H1x2_2 
+ -1.62062483607713 * H1x2_3 + 0.24454579481466 * H1x2_4 + -0.07591553404219 * H1x2_5 + 
1.1175989027563 * H1x2_6 ;
2327368   +   H2x1_6  = H2x1_6  +    -0.00603649892235 * H1x2_1
2327369   +          +    -1.39053357060307 * H1x2_2  +    -1.34023350990878 * H1x2_3
2327370   +          +    -0.76811804565852 * H1x2_4  +    -1.40869786147662 * H1x2_5
2327371   +          +     1.54589390085972 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.00603649892235 * H1x2_1 + -1.39053357060307 * 
H1x2_2 + -1.34023350990878 * H1x2_3 + -0.76811804565852 * H1x2_4 + -1.40869786147662 * H1x2_5 
+ 1.54589390085972 * H1x2_6 ;
2327372   +   H2x1_1  =     0.47873396703524 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.47873396703524 + H2x1_1 ;
2327373   +   H2x1_2  =     -0.0000340630035 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.0000340630035 + H2x1_2 ;
2327374   +   H2x1_3  =     0.35556259592214 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.35556259592214 + H2x1_3 ;
2327375   +   H2x1_4  =     1.01896219314016 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.01896219314016 + H2x1_4 ;
2327376   +   H2x1_5  =     0.72195082860145 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.72195082860145 + H2x1_5 ;
2327377   +   H2x1_6  =     0.24171639764515 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.24171639764515 + H2x1_6 ;
2327378   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2327379   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2327380   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
2327381   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
2327382   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
2327383   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
2327384   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
2327385   +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
2327386   +END;
MPRINT(EM_DIAGRAM):   END;
2327387   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2327388   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2327389   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2327390   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2327391   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2327392   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2327393   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
2327394   +END;
MPRINT(EM_DIAGRAM):   END;
2327395   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2327396   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2327397   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2327398   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2327399   +   P_DepVar1  =     7.13056975005701 * H2x1_1  +    -9.26714696465882 * H2x1_2
2327400   +          +     9.36351037194964 * H2x1_3  +     2.76582940055979 * H2x1_4
2327401   +          +    -20.1354182036801 * H2x1_5  +     1.54726164498938 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.13056975005701 * H2x1_1 + -9.26714696465882 * H2x1_2 + 
9.36351037194964 * H2x1_3 + 2.76582940055979 * H2x1_4 + -20.1354182036801 * H2x1_5 + 
1.54726164498938 * H2x1_6 ;
2327402   +   P_DepVar1  =     5.03726079820845 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.03726079820845 + P_DepVar1 ;
2327403   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2327404   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2327405   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2327406   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2327407   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2327408   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2327409   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2327410   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2327411   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2327412   +END;
MPRINT(EM_DIAGRAM):   END;
2327413   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2327414   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2327415   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2327416   +END;
MPRINT(EM_DIAGRAM):   END;
2327417   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2327418   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2327419   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2327420   +END;
MPRINT(EM_DIAGRAM):   END;
2327421   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2327422   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2327423   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2327424   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2327425   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2327426   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2327427   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2327428   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2327429   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2327430   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2327431   +END;
MPRINT(EM_DIAGRAM):   END;
2327432   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2327433   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2327434   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2327435   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2327436    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2327437    quit;
2327438    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2327439    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2327440    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2327441    retain ID 2 Node "AutoNeural11";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural11";
2327442    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2327443    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 6523 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 6523 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2327444    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2327445    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2327446    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 6523 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 6523 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2327447    proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME 
CREATOR);
2327448    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2327449    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL11_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2327450    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2327451    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2327452    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2327453    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2327454    proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
2327455    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 71 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2327456    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2327457    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2327458    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 71 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 71 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2327459    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2327460    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2327461    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2327462    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 71 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 71 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2327463    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2327464    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2327464  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3291 rows and 5 columns.

2327465    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2327466    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2327467    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 3291 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 3291 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2327468    filename _pref
2327468  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2327469    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2327470    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2327471   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2327472   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2327473   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2327474   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2327475   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2327476   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2327477    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2327478    quit;
2327479    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2327480    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2327481    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2327482    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2327483    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2327484    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2327485    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2327486    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2327487    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2327488    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2327489    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2327490    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2327491    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2327492    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2327493    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2327494    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2327495    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2327496    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2327497    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2327498    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2327499    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2327500    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2327501    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2327502    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2327503    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2327504    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2327505    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2327505  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2327506    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2327507    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2327508    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 3295 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2327509    filename _pref
2327509  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2327510    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2327511    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2327512   +
2327513   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2327514   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2327514  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2327515   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2327516   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2327517   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2327518   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2327519   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2327520    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2327521    quit;
2327522    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2327523    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2327524    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2327525    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2327526    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2327527    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2327528    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2327529    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2327530    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2327531    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2327532    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2327533    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2327534    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2327535    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2327536    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2327537    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2327538    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2327539    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2327540    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2327541    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2327542    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2327543    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2327544    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2327545    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2327546    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2327547    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2327548    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2327548  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2327549    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2327550    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2327551    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 3334 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2327552    filename _pref
2327552  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2327553    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2327554    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2327555   +
2327556   +
2327557   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2327558   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2327559   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2327560   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2327561   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2327562   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2327563   +
2327564   +
2327565   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2327566   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2327567   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2327568   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2327569   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2327570   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2327571   +
2327572   +
2327573   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2327574   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2327575   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2327576   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2327577   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2327578   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2327579   +
2327580   +
2327581   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2327582   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2327583   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2327584   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2327585   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2327586   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2327587   +
2327588   +
2327589   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2327590   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2327591   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2327592   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2327593   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2327594   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2327595   +
2327596   +
2327597   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2327598   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2327599   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2327600   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2327601   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2327602   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2327603   +
2327604   +
2327605   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2327606   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2327607   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2327608   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2327609   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2327610   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2327611   +
2327612   +
2327613   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2327614   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2327615   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2327616   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2327617   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2327618   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2327619   +if
2327620   +_FILTERNORM1 not in ( '.')
2327621   + and
2327622   +_FILTERNORM2 not in ( '.')
2327623   + and
2327624   +_FILTERNORM3 not in ( '.')
2327625   + and
2327626   +_FILTERNORM4 not in ( '.')
2327627   + and
2327628   +_FILTERNORM5 not in ( '.')
2327629   + and
2327630   +_FILTERNORM6 not in ( '.')
2327631   + and
2327632   +_FILTERNORM7 not in ( ' ')
2327633   + and
2327634   +_FILTERNORM8 not in ( ' ')
2327635   +and
2327636   +( Dt_Customer ne .)
2327637   +and ( Income ne . and (Income<=107000))
2327638   +and ( Kidhome ne .)
2327639   +and ( MntFishProducts ne .)
2327640   +and ( MntFruits ne .)
2327641   +and ( MntGoldProds ne .)
2327642   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2327643   +and ( MntSweetProducts ne .)
2327644   +and ( MntWines ne .)
2327645   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2327646   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2327647   +and ( NumStorePurchases ne .)
2327648   +and ( NumWebPurchases ne .)
2327649   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2327650   +and ( Recency ne .)
2327651   +and ( Teenhome ne .)
2327652   +and ( Year_Birth ne .)
2327653   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2327654   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2327655   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2327656   +end;
MPRINT(EM_DIAGRAM):   end;
2327657   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2327658   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2327659    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2327660    quit;
2327661    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2327662    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2327663    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2327664    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2327665    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2327666    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2327667    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2327668    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2327669    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2327670    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2327671    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2327672    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2327673    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2327674    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2327675    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2327676    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2327677    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2327678    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2327679    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2327680    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2327681    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2327682    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2327683    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2327684    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2327685    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2327686    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2327687    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2327687  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2327688    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2327689    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2327690    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 3400 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2327691    %macro varDept(fcmpdata=,id=);
2327692    %global nobs&id scoreFlag&id;
2327693    %let scoreFlag&id = 0;
2327694    %if &id=1 or ^&fcmpStart %then %do;
2327695    proc sort data=&fcmpdata out=_temp&id nodupkey;
2327696    by NAME;
2327697    where id=&id and LHS in( %let j=1;
2327698    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2327699    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2327700    "&var" %let j = %eval(&j+1);
2327701    %end;
2327702    );
2327703    run;
2327704    %let dsid = %sysfunc(open(_temp&id));
2327705    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2327706    %let dsid = %sysfunc(close(&dsid));
2327707    %if &&nobs&id %then %do;
2327708    %let scoreFlag&id = 1;
2327709    %let fcmpStart = 1;
2327710    %end;
2327711    %else %let fcmpStart = 0;
2327712    %end;
2327713    %else %do;
2327714    proc sort data=&fcmpdata out=_tempid;
2327715    where id=&id;
2327716    by LHS;
2327717    run;
2327718    %let dsid = %sysfunc(open(_tempid));
2327719    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2327720    %let dsid = %sysfunc(close(&dsid));
2327721    %if ^&&nobs&id %then %do;
2327722    proc datasets lib=work nolist;
2327723    delete _tempid;
2327724    run;
2327725    quit;
2327726    %end;
2327727    %else %do;
2327728    data _tempAll;
2327729    set %let j=%eval(&id-1);
2327730    %do x=1 %to &j;
2327731    %if &&nobs&x %then %do;
2327732    _temp&x %end;
2327733    %end;
2327734    ;
2327735    run;
2327736    proc sql;
2327737    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2327737  ! work._tempid p2 where p.name=p2.lhs;
2327738    quit;
2327739    data _temp&id;
2327740    set _temp&id;
2327741    where LHS ne '' and NAME ne '' and Node ne '';
2327742    run;
2327743    proc datasets lib=work nolist;
2327744    delete _tempAll;
2327745    run;
2327746    %let dsid = %sysfunc(open(_temp&id));
2327747    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2327748    %let dsid = %sysfunc(close(&dsid));
2327749    %if ^&&nobs&id %then %do;
2327750    proc datasets lib=work nolist;
2327751    delete _temp&id;
2327752    run;
2327753    quit;
2327754    %end;
2327755    %else %do;
2327756    %let scoreFlag&id = 1;
2327757    data _temp&id;
2327758    set _temp&id;
2327759    where LHS ne NAME and node ne '';
2327760    run;
2327761    %let dsid = %sysfunc(open(_temp&id));
2327762    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2327763    %let dsid = %sysfunc(close(&dsid));
2327764    %if ^&&nobs&id %then %do;
2327765    proc datasets lib=work nolist;
2327766    delete _temp&id;
2327767    run;
2327768    quit;
2327769    %end;
2327770    %else %do;
2327771    proc sort data=_temp&id nodupkey;
2327772    by LHS NAME;
2327773    run;
2327774    %end;
2327775    %end;
2327776    %end;
2327777    %end;
2327778    %mend varDept;
2327779    %macro optCode(outdata=fcmpdata);
2327780    %global fcmpStart;
2327781    %let fcmpStart = 0;
2327782    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2327783    %let NumNodes=9;
2327784    %do k=1 %to &NumNodes;
2327785    %vardept(fcmpdata=&outdata, id=&k);
2327786    %end;
2327787    %mend optCode;
2327788    %optcode(outData=EMWS8.Ensmbl38_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 188 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 136 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 52 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 52 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 56 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 95 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2327789    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2327790    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2327791    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2327792    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2327793    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2327794    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2327795    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2327796    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2327797    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2327798    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2327798  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

2327799    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2327800    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2327801    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2327802    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2327803    filename _pref
2327803  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
2327804    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2327805    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas.
2327806   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2327807   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2327808   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2327809   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2327810   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2327811   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2327812   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2327813   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2327814   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2327815   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2327816   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2327817   +LENGTH _WARN_ $4
2327818   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2327819   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2327820   +
2327821   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2327822   +
2327823   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2327824   +
2327825   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2327826   +
2327827   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2327828   +
2327829   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2327830   +
2327831   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2327832   +
2327833   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2327834   +
2327835   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2327836   +
2327837   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2327838   +
2327839   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2327840   +
2327841   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2327842   +
2327843   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2327844   +
2327845   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2327846   +
2327847   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2327848   +
2327849   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2327850   +
2327851   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2327852   +
2327853   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2327854   +
2327855   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2327856   +
2327857   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2327858   +
2327859   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2327860   +
2327861   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2327862   +
2327863   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2327864   +
2327865   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2327866   +
2327867   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2327868   +
2327869   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2327870   +
2327871   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2327872   +
2327873   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2327874   +
2327875   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2327876   +
2327877   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2327878   +
2327879   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2327880   +
2327881   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2327882   +
2327883   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2327884   +
2327885   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2327886   +
2327887   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2327888   +
2327889   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2327890   +
2327891   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2327892   +
2327893   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2327894   +
2327895   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2327896   +
2327897   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2327898   +
2327899   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2327900   +
2327901   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2327902   +
2327903   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2327904   +
2327905   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2327906   +
2327907   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
2327908   +
2327909   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2327910   +
2327911   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2327912   +
2327913   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2327914   +
2327915   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2327916   +
2327917   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2327918   +
2327919   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2327920   +
2327921   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
2327922   +
2327923   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2327924   +
2327925   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2327926   +
2327927   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
2327928   +
2327929   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
2327930   +
2327931   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
2327932   +
2327933   +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
2327934   +
2327935   +      label H1x3_7 = 'Hidden: H1x3_=7' ;
MPRINT(EM_DIAGRAM):   label H1x3_7 = 'Hidden: H1x3_=7' ;
2327936   +
2327937   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2327938   +
2327939   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2327940   +
2327941   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2327942   +
2327943   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2327944   +
2327945   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2327946   +
2327947   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
2327948   +
2327949   +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
2327950   +
2327951   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
2327952   +
2327953   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
2327954   +
2327955   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
2327956   +
2327957   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
2327958   +
2327959   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
2327960   +
2327961   +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
2327962   +
2327963   +      label H2x2_7 = 'Hidden: H2x2_=7' ;
MPRINT(EM_DIAGRAM):   label H2x2_7 = 'Hidden: H2x2_=7' ;
2327964   +
2327965   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
2327966   +
2327967   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
2327968   +
2327969   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
2327970   +
2327971   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
2327972   +
2327973   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
2327974   +
2327975   +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
2327976   +
2327977   +      label H3x1_7 = 'Hidden: H3x1_=7' ;
MPRINT(EM_DIAGRAM):   label H3x1_7 = 'Hidden: H3x1_=7' ;
2327978   +
2327979   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2327980   +
2327981   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2327982   +
2327983   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2327984   +
2327985   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2327986   +
2327987   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2327988   +
2327989   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2327990   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2327991   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2327992   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2327993   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2327994   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2327995   +end;
MPRINT(EM_DIAGRAM):   end;
2327996   +else do;
MPRINT(EM_DIAGRAM):   else do;
2327997   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2327998   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2327999   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2328000   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2328001   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2328002   +   end;
MPRINT(EM_DIAGRAM):   end;
2328003   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2328004   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2328005   +   end;
MPRINT(EM_DIAGRAM):   end;
2328006   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2328007   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2328008   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2328009   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2328010   +   end;
MPRINT(EM_DIAGRAM):   end;
2328011   +end;
MPRINT(EM_DIAGRAM):   end;
2328012   +
2328013   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2328014   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2328015   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2328016   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2328017   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2328018   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2328019   +end;
MPRINT(EM_DIAGRAM):   end;
2328020   +else do;
MPRINT(EM_DIAGRAM):   else do;
2328021   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2328022   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2328023   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2328024   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2328025   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2328026   +   end;
MPRINT(EM_DIAGRAM):   end;
2328027   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2328028   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2328029   +   end;
MPRINT(EM_DIAGRAM):   end;
2328030   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2328031   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2328032   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2328033   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2328034   +   end;
MPRINT(EM_DIAGRAM):   end;
2328035   +end;
MPRINT(EM_DIAGRAM):   end;
2328036   +
2328037   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2328038   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2328039   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2328040   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2328041   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2328042   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2328043   +end;
MPRINT(EM_DIAGRAM):   end;
2328044   +else do;
MPRINT(EM_DIAGRAM):   else do;
2328045   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2328046   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2328047   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2328048   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2328049   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2328050   +   end;
MPRINT(EM_DIAGRAM):   end;
2328051   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2328052   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2328053   +   end;
MPRINT(EM_DIAGRAM):   end;
2328054   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2328055   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2328056   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2328057   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2328058   +   end;
MPRINT(EM_DIAGRAM):   end;
2328059   +end;
MPRINT(EM_DIAGRAM):   end;
2328060   +
2328061   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2328062   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2328063   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2328064   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2328065   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2328066   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2328067   +end;
MPRINT(EM_DIAGRAM):   end;
2328068   +else do;
MPRINT(EM_DIAGRAM):   else do;
2328069   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2328070   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2328071   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2328072   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2328073   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2328074   +   end;
MPRINT(EM_DIAGRAM):   end;
2328075   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2328076   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2328077   +   end;
MPRINT(EM_DIAGRAM):   end;
2328078   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2328079   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2328080   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2328081   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2328082   +   end;
MPRINT(EM_DIAGRAM):   end;
2328083   +end;
MPRINT(EM_DIAGRAM):   end;
2328084   +
2328085   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2328086   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2328087   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2328088   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2328089   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2328090   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2328091   +end;
MPRINT(EM_DIAGRAM):   end;
2328092   +else do;
MPRINT(EM_DIAGRAM):   else do;
2328093   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2328094   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2328095   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2328096   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2328097   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2328098   +   end;
MPRINT(EM_DIAGRAM):   end;
2328099   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2328100   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2328101   +   end;
MPRINT(EM_DIAGRAM):   end;
2328102   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2328103   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2328104   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2328105   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2328106   +   end;
MPRINT(EM_DIAGRAM):   end;
2328107   +end;
MPRINT(EM_DIAGRAM):   end;
2328108   +
2328109   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2328110   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2328111   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2328112   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2328113   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2328114   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2328115   +end;
MPRINT(EM_DIAGRAM):   end;
2328116   +else do;
MPRINT(EM_DIAGRAM):   else do;
2328117   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2328118   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2328119   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2328120   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2328121   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2328122   +   end;
MPRINT(EM_DIAGRAM):   end;
2328123   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2328124   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2328125   +   end;
MPRINT(EM_DIAGRAM):   end;
2328126   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2328127   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2328128   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2328129   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2328130   +   end;
MPRINT(EM_DIAGRAM):   end;
2328131   +end;
MPRINT(EM_DIAGRAM):   end;
2328132   +
2328133   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2328134   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2328135   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2328136   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2328137   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2328138   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2328139   +end;
MPRINT(EM_DIAGRAM):   end;
2328140   +else do;
MPRINT(EM_DIAGRAM):   else do;
2328141   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2328142   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2328143   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2328144   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2328145   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2328146   +   end;
MPRINT(EM_DIAGRAM):   end;
2328147   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2328148   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2328149   +   end;
MPRINT(EM_DIAGRAM):   end;
2328150   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2328151   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2328152   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2328153   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2328154   +   end;
MPRINT(EM_DIAGRAM):   end;
2328155   +end;
MPRINT(EM_DIAGRAM):   end;
2328156   +
2328157   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2328158   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2328159   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2328160   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2328161   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2328162   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2328163   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2328164   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2328165   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2328166   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2328167   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2328168   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2328169   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2328170   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2328171   +end;
MPRINT(EM_DIAGRAM):   end;
2328172   +else do;
MPRINT(EM_DIAGRAM):   else do;
2328173   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2328174   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2328175   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2328176   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2328177   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2328178   +   end;
MPRINT(EM_DIAGRAM):   end;
2328179   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2328180   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2328181   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2328182   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2328183   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2328184   +   end;
MPRINT(EM_DIAGRAM):   end;
2328185   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2328186   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2328187   +   end;
MPRINT(EM_DIAGRAM):   end;
2328188   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2328189   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2328190   +   end;
MPRINT(EM_DIAGRAM):   end;
2328191   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2328192   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2328193   +   end;
MPRINT(EM_DIAGRAM):   end;
2328194   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2328195   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2328196   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2328197   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2328198   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2328199   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2328200   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2328201   +   end;
MPRINT(EM_DIAGRAM):   end;
2328202   +end;
MPRINT(EM_DIAGRAM):   end;
2328203   +
2328204   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2328205   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2328206   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2328207   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2328208   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2328209   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2328210   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2328211   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2328212   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2328213   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2328214   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2328215   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2328216   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2328217   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2328218   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2328219   +end;
MPRINT(EM_DIAGRAM):   end;
2328220   +else do;
MPRINT(EM_DIAGRAM):   else do;
2328221   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2328222   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2328223   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2328224   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2328225   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2328226   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2328227   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2328228   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2328229   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2328230   +         end;
MPRINT(EM_DIAGRAM):   end;
2328231   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2328232   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2328233   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2328234   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2328235   +            end;
MPRINT(EM_DIAGRAM):   end;
2328236   +         end;
MPRINT(EM_DIAGRAM):   end;
2328237   +      end;
MPRINT(EM_DIAGRAM):   end;
2328238   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2328239   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2328240   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2328241   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2328242   +         end;
MPRINT(EM_DIAGRAM):   end;
2328243   +      end;
MPRINT(EM_DIAGRAM):   end;
2328244   +   end;
MPRINT(EM_DIAGRAM):   end;
2328245   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2328246   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2328247   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2328248   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2328249   +      end;
MPRINT(EM_DIAGRAM):   end;
2328250   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2328251   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2328252   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2328253   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2328254   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2328255   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2328256   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2328257   +         end;
MPRINT(EM_DIAGRAM):   end;
2328258   +      end;
MPRINT(EM_DIAGRAM):   end;
2328259   +   end;
MPRINT(EM_DIAGRAM):   end;
2328260   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2328261   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2328262   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2328263   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2328264   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2328265   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2328266   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2328267   +   end;
MPRINT(EM_DIAGRAM):   end;
2328268   +end;
MPRINT(EM_DIAGRAM):   end;
2328269   +
2328270   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2328271   +*** Checking missing input Interval
2328272   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2328273   +
2328274   +IF NMISS(
2328275   +   AcceptedCmpTotal ,
2328276   +   Age ,
2328277   +   Frq ,
2328278   +   Income ,
2328279   +   Kidhome ,
2328280   +   Mnt ,
2328281   +   MntFishProducts ,
2328282   +   MntFruits ,
2328283   +   MntGoldProds ,
2328284   +   MntMeatProducts ,
2328285   +   MntSweetProducts ,
2328286   +   MntWines ,
2328287   +   MonthsAsCustomer ,
2328288   +   NumCatalogPurchases ,
2328289   +   NumDealsPurchases ,
2328290   +   NumDistPurchases ,
2328291   +   NumStorePurchases ,
2328292   +   NumWebPurchases ,
2328293   +   NumWebVisitsMonth ,
2328294   +   RFMstat ,
2328295   +   RMntFrq ,
2328296   +   Recency ,
2328297   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2328298   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2328299   +
2328300   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2328301   +END;
MPRINT(EM_DIAGRAM):   END;
2328302   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2328303   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2328304   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2328305   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2328306   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2328307   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2328308   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2328309   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2328310   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2328311   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2328312   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2328313   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2328314   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2328315   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2328316   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2328317   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2328318   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2328319   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2328320   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2328321   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2328322   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2328323   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2328324   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2328325   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2328326   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2328327   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2328328   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2328329   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2328330   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2328331   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2328332   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2328333   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2328334   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2328335   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2328336   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2328337   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2328338   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2328339   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2328340   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2328341   +END;
MPRINT(EM_DIAGRAM):   END;
2328342   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2328343   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2328344   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2328345   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2328346   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2328347   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2328348   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2328349   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2328350   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2328351   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2328352   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2328353   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2328354   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2328355   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2328356   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2328357   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2328358   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2328359   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2328360   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2328361   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2328362   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2328363   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2328364   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2328365   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2328366   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2328367   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2328368   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2328369   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2328370   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2328371   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2328372   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2328373   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2328374   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2328375   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2328376   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2328377   +   ELSE S_NumCatalogPurchases
2328378   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2328379   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2328380   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2328381   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2328382   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2328383   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2328384   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2328385   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2328386   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2328387   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2328388   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2328389   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2328390   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2328391   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2328392   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2328393   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2328394   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2328395   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2328396   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2328397   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2328398   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2328399   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2328400   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2328401   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2328402   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2328403   +END;
MPRINT(EM_DIAGRAM):   END;
2328404   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2328405   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2328406   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2328407   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2328408   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2328409   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2328410   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2328411   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2328412   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2328413   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2328414   +   H1x1_1  =    -1.22979702388871 * S_AcceptedCmpTotal
2328415   +          +    -0.43104795266139 * S_Age  +     0.86889278443529 * S_Frq
2328416   +          +    -1.60769879195759 * S_Income  +     0.50863205564081 *
2328417   +        S_Kidhome  +     0.63485396330815 * S_Mnt  +     1.54715964931126 *
2328418   +        S_MntFishProducts  +     0.75185279130369 * S_MntFruits
2328419   +          +    -0.00997586610757 * S_MntGoldProds  +    -2.37203493907401 *
2328420   +        S_MntMeatProducts  +     0.38638626403468 * S_MntSweetProducts
2328421   +          +     2.26121903773395 * S_MntWines  +    -0.59651789183067 *
2328422   +        S_MonthsAsCustomer  +    -1.52699943820196 * S_NumCatalogPurchases
2328423   +          +    -1.18466001117424 * S_NumDealsPurchases
2328424   +          +     -0.1371252133567 * S_NumDistPurchases
2328425   +          +     1.92719775731123 * S_NumStorePurchases
2328426   +          +     1.23184249192116 * S_NumWebPurchases
2328427   +          +    -1.55583843197424 * S_NumWebVisitsMonth
2328428   +          +    -0.47773207532121 * S_RFMstat  +    -0.35513231558649 *
2328429   +        S_RMntFrq  +     1.63863392145333 * S_Recency
2328430   +          +     0.67173275608308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.22979702388871 * S_AcceptedCmpTotal + -0.43104795266139 * 
S_Age + 0.86889278443529 * S_Frq + -1.60769879195759 * S_Income + 0.50863205564081 * S_Kidhome 
+ 0.63485396330815 * S_Mnt + 1.54715964931126 * S_MntFishProducts + 0.75185279130369 * 
S_MntFruits + -0.00997586610757 * S_MntGoldProds + -2.37203493907401 * S_MntMeatProducts + 
0.38638626403468 * S_MntSweetProducts + 2.26121903773395 * S_MntWines + -0.59651789183067 * 
S_MonthsAsCustomer + -1.52699943820196 * S_NumCatalogPurchases + -1.18466001117424 * 
S_NumDealsPurchases + -0.1371252133567 * S_NumDistPurchases + 1.92719775731123 * 
S_NumStorePurchases + 1.23184249192116 * S_NumWebPurchases + -1.55583843197424 * 
S_NumWebVisitsMonth + -0.47773207532121 * S_RFMstat + -0.35513231558649 * S_RMntFrq + 
1.63863392145333 * S_Recency + 0.67173275608308 * S_Teenhome ;
2328431   +   H1x1_2  =    -0.02716121128584 * S_AcceptedCmpTotal
2328432   +          +     0.11518566588792 * S_Age  +    -0.03446898150571 * S_Frq
2328433   +          +    -0.19022324523346 * S_Income  +     1.06549395713708 *
2328434   +        S_Kidhome  +    -0.75490876357951 * S_Mnt  +    -0.25515163712879 *
2328435   +        S_MntFishProducts  +    -0.33372388118122 * S_MntFruits
2328436   +          +    -1.35673933518218 * S_MntGoldProds  +    -2.95766948640442 *
2328437   +        S_MntMeatProducts  +      0.2681792093191 * S_MntSweetProducts
2328438   +          +     0.68376629766032 * S_MntWines  +     1.19853579057819 *
2328439   +        S_MonthsAsCustomer  +    -1.27282116370987 * S_NumCatalogPurchases
2328440   +          +     0.63616523425865 * S_NumDealsPurchases
2328441   +          +     0.45460056261546 * S_NumDistPurchases
2328442   +          +    -0.61009999017225 * S_NumStorePurchases
2328443   +          +     1.85193755731081 * S_NumWebPurchases
2328444   +          +    -2.47698404964319 * S_NumWebVisitsMonth
2328445   +          +     -0.6995834208607 * S_RFMstat  +    -0.25646177956568 *
2328446   +        S_RMntFrq  +     1.07962222419254 * S_Recency
2328447   +          +     0.63257022999179 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.02716121128584 * S_AcceptedCmpTotal + 0.11518566588792 * 
S_Age + -0.03446898150571 * S_Frq + -0.19022324523346 * S_Income + 1.06549395713708 * 
S_Kidhome + -0.75490876357951 * S_Mnt + -0.25515163712879 * S_MntFishProducts + 
-0.33372388118122 * S_MntFruits + -1.35673933518218 * S_MntGoldProds + -2.95766948640442 * 
S_MntMeatProducts + 0.2681792093191 * S_MntSweetProducts + 0.68376629766032 * S_MntWines + 
1.19853579057819 * S_MonthsAsCustomer + -1.27282116370987 * S_NumCatalogPurchases + 
0.63616523425865 * S_NumDealsPurchases + 0.45460056261546 * S_NumDistPurchases + 
-0.61009999017225 * S_NumStorePurchases + 1.85193755731081 * S_NumWebPurchases + 
-2.47698404964319 * S_NumWebVisitsMonth + -0.6995834208607 * S_RFMstat + -0.25646177956568 * 
S_RMntFrq + 1.07962222419254 * S_Recency + 0.63257022999179 * S_Teenhome ;
2328448   +   H1x1_3  =     2.21390028099752 * S_AcceptedCmpTotal
2328449   +          +     0.05331556426178 * S_Age  +    -0.65514579137956 * S_Frq
2328450   +          +     0.64307304324121 * S_Income  +    -0.74572098598993 *
2328451   +        S_Kidhome  +     0.72146088814601 * S_Mnt  +    -0.35292583888573 *
2328452   +        S_MntFishProducts  +    -0.60011862194755 * S_MntFruits
2328453   +          +     0.41187011131735 * S_MntGoldProds  +     6.59297713742725 *
2328454   +        S_MntMeatProducts  +    -0.24427365286575 * S_MntSweetProducts
2328455   +          +    -2.72258930476853 * S_MntWines  +     0.14880721485001 *
2328456   +        S_MonthsAsCustomer  +     1.43710120897606 * S_NumCatalogPurchases
2328457   +          +      1.8907968580473 * S_NumDealsPurchases
2328458   +          +     0.01244124801764 * S_NumDistPurchases
2328459   +          +    -2.34409118104622 * S_NumStorePurchases
2328460   +          +    -1.80820043087435 * S_NumWebPurchases
2328461   +          +     2.40219682136039 * S_NumWebVisitsMonth
2328462   +          +     0.64272295101175 * S_RFMstat  +    -2.37583346151401 *
2328463   +        S_RMntFrq  +    -2.05893311376628 * S_Recency
2328464   +          +    -0.09539892763273 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.21390028099752 * S_AcceptedCmpTotal + 0.05331556426178 * 
S_Age + -0.65514579137956 * S_Frq + 0.64307304324121 * S_Income + -0.74572098598993 * 
S_Kidhome + 0.72146088814601 * S_Mnt + -0.35292583888573 * S_MntFishProducts + 
-0.60011862194755 * S_MntFruits + 0.41187011131735 * S_MntGoldProds + 6.59297713742725 * 
S_MntMeatProducts + -0.24427365286575 * S_MntSweetProducts + -2.72258930476853 * S_MntWines + 
0.14880721485001 * S_MonthsAsCustomer + 1.43710120897606 * S_NumCatalogPurchases + 
1.8907968580473 * S_NumDealsPurchases + 0.01244124801764 * S_NumDistPurchases + 
-2.34409118104622 * S_NumStorePurchases + -1.80820043087435 * S_NumWebPurchases + 
2.40219682136039 * S_NumWebVisitsMonth + 0.64272295101175 * S_RFMstat + -2.37583346151401 * 
S_RMntFrq + -2.05893311376628 * S_Recency + -0.09539892763273 * S_Teenhome ;
2328465   +   H1x1_4  =     0.39967052173479 * S_AcceptedCmpTotal
2328466   +          +    -0.07923444459672 * S_Age  +     0.62339138041893 * S_Frq
2328467   +          +     1.61789948058771 * S_Income  +     -1.4543646851274 *
2328468   +        S_Kidhome  +      0.0674362517919 * S_Mnt  +    -0.01747401903722 *
2328469   +        S_MntFishProducts  +     0.35122931976599 * S_MntFruits
2328470   +          +     0.49479569666837 * S_MntGoldProds  +     0.96598079382568 *
2328471   +        S_MntMeatProducts  +     0.00966238843619 * S_MntSweetProducts
2328472   +          +    -1.04781861730336 * S_MntWines  +    -0.60232527705864 *
2328473   +        S_MonthsAsCustomer  +     1.64183850526139 * S_NumCatalogPurchases
2328474   +          +     0.28209537604198 * S_NumDealsPurchases
2328475   +          +      0.6450277971767 * S_NumDistPurchases
2328476   +          +     0.85050092520609 * S_NumStorePurchases
2328477   +          +    -0.53920307215941 * S_NumWebPurchases
2328478   +          +     3.01106015100147 * S_NumWebVisitsMonth
2328479   +          +     0.35454480730832 * S_RFMstat  +     2.44126135489059 *
2328480   +        S_RMntFrq  +    -3.15497765450512 * S_Recency
2328481   +          +    -1.52912100940198 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.39967052173479 * S_AcceptedCmpTotal + -0.07923444459672 * 
S_Age + 0.62339138041893 * S_Frq + 1.61789948058771 * S_Income + -1.4543646851274 * S_Kidhome 
+ 0.0674362517919 * S_Mnt + -0.01747401903722 * S_MntFishProducts + 0.35122931976599 * 
S_MntFruits + 0.49479569666837 * S_MntGoldProds + 0.96598079382568 * S_MntMeatProducts + 
0.00966238843619 * S_MntSweetProducts + -1.04781861730336 * S_MntWines + -0.60232527705864 * 
S_MonthsAsCustomer + 1.64183850526139 * S_NumCatalogPurchases + 0.28209537604198 * 
S_NumDealsPurchases + 0.6450277971767 * S_NumDistPurchases + 0.85050092520609 * 
S_NumStorePurchases + -0.53920307215941 * S_NumWebPurchases + 3.01106015100147 * 
S_NumWebVisitsMonth + 0.35454480730832 * S_RFMstat + 2.44126135489059 * S_RMntFrq + 
-3.15497765450512 * S_Recency + -1.52912100940198 * S_Teenhome ;
2328482   +   H1x1_5  =    -1.36246601888598 * S_AcceptedCmpTotal
2328483   +          +     0.18494970680372 * S_Age  +    -0.48239316237012 * S_Frq
2328484   +          +    -0.07754710635082 * S_Income  +    -1.12988783865284 *
2328485   +        S_Kidhome  +    -0.99389820487435 * S_Mnt  +     0.97730928948588 *
2328486   +        S_MntFishProducts  +     0.22400827772102 * S_MntFruits
2328487   +          +     0.74486626223136 * S_MntGoldProds  +    -5.09299340099429 *
2328488   +        S_MntMeatProducts  +     -0.9293665551505 * S_MntSweetProducts
2328489   +          +     2.05621056740754 * S_MntWines  +     0.13751326047818 *
2328490   +        S_MonthsAsCustomer  +    -0.78748700520409 * S_NumCatalogPurchases
2328491   +          +    -0.36642526324451 * S_NumDealsPurchases
2328492   +          +     -0.6091014843932 * S_NumDistPurchases
2328493   +          +    -0.21154626182088 * S_NumStorePurchases
2328494   +          +    -0.10361347071364 * S_NumWebPurchases
2328495   +          +     1.36358817627784 * S_NumWebVisitsMonth
2328496   +          +    -1.12999319551924 * S_RFMstat  +    -0.19491430019245 *
2328497   +        S_RMntFrq  +    -1.04649498091784 * S_Recency
2328498   +          +     0.17452738843544 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.36246601888598 * S_AcceptedCmpTotal + 0.18494970680372 * 
S_Age + -0.48239316237012 * S_Frq + -0.07754710635082 * S_Income + -1.12988783865284 * 
S_Kidhome + -0.99389820487435 * S_Mnt + 0.97730928948588 * S_MntFishProducts + 
0.22400827772102 * S_MntFruits + 0.74486626223136 * S_MntGoldProds + -5.09299340099429 * 
S_MntMeatProducts + -0.9293665551505 * S_MntSweetProducts + 2.05621056740754 * S_MntWines + 
0.13751326047818 * S_MonthsAsCustomer + -0.78748700520409 * S_NumCatalogPurchases + 
-0.36642526324451 * S_NumDealsPurchases + -0.6091014843932 * S_NumDistPurchases + 
-0.21154626182088 * S_NumStorePurchases + -0.10361347071364 * S_NumWebPurchases + 
1.36358817627784 * S_NumWebVisitsMonth + -1.12999319551924 * S_RFMstat + -0.19491430019245 * 
S_RMntFrq + -1.04649498091784 * S_Recency + 0.17452738843544 * S_Teenhome ;
2328499   +   H1x1_6  =    -0.61844696407508 * S_AcceptedCmpTotal
2328500   +          +    -0.13181297602063 * S_Age  +        0.68456903056 * S_Frq
2328501   +          +    -0.34991774042788 * S_Income  +     1.46159955002315 *
2328502   +        S_Kidhome  +     0.21200077233877 * S_Mnt  +    -1.25754094670769 *
2328503   +        S_MntFishProducts  +    -0.09204195787339 * S_MntFruits
2328504   +          +     0.30860507694466 * S_MntGoldProds  +     2.47956356836605 *
2328505   +        S_MntMeatProducts  +     0.40882561010395 * S_MntSweetProducts
2328506   +          +    -0.31319819026957 * S_MntWines  +    -0.35678594664106 *
2328507   +        S_MonthsAsCustomer  +     0.01690494248971 * S_NumCatalogPurchases
2328508   +          +    -0.14868505161718 * S_NumDealsPurchases
2328509   +          +    -0.08395384711805 * S_NumDistPurchases
2328510   +          +     0.60525238179245 * S_NumStorePurchases
2328511   +          +     0.04555100214276 * S_NumWebPurchases
2328512   +          +    -2.31888436784305 * S_NumWebVisitsMonth
2328513   +          +     0.04533094777373 * S_RFMstat  +     1.45047684433196 *
2328514   +        S_RMntFrq  +     3.02439474266744 * S_Recency
2328515   +          +     1.00458920115313 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.61844696407508 * S_AcceptedCmpTotal + -0.13181297602063 * 
S_Age + 0.68456903056 * S_Frq + -0.34991774042788 * S_Income + 1.46159955002315 * S_Kidhome + 
0.21200077233877 * S_Mnt + -1.25754094670769 * S_MntFishProducts + -0.09204195787339 * 
S_MntFruits + 0.30860507694466 * S_MntGoldProds + 2.47956356836605 * S_MntMeatProducts + 
0.40882561010395 * S_MntSweetProducts + -0.31319819026957 * S_MntWines + -0.35678594664106 * 
S_MonthsAsCustomer + 0.01690494248971 * S_NumCatalogPurchases + -0.14868505161718 * 
S_NumDealsPurchases + -0.08395384711805 * S_NumDistPurchases + 0.60525238179245 * 
S_NumStorePurchases + 0.04555100214276 * S_NumWebPurchases + -2.31888436784305 * 
S_NumWebVisitsMonth + 0.04533094777373 * S_RFMstat + 1.45047684433196 * S_RMntFrq + 
3.02439474266744 * S_Recency + 1.00458920115313 * S_Teenhome ;
2328516   +   H1x1_1  = H1x1_1  +     1.44647846478949 * AcceptedCmp10
2328517   +          +     0.96385529143297 * AcceptedCmp20  +     0.80013060089317 *
2328518   +        AcceptedCmp30  +     1.84770198014032 * AcceptedCmp40
2328519   +          +     0.80401446607714 * AcceptedCmp50  +     0.54049538978821 *
2328520   +        Complain0  +     0.10087163212641 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.44647846478949 * AcceptedCmp10 + 0.96385529143297 * 
AcceptedCmp20 + 0.80013060089317 * AcceptedCmp30 + 1.84770198014032 * AcceptedCmp40 + 
0.80401446607714 * AcceptedCmp50 + 0.54049538978821 * Complain0 + 0.10087163212641 * 
HigherEducationBinary0 ;
2328521   +   H1x1_2  = H1x1_2  +    -1.68777270512099 * AcceptedCmp10
2328522   +          +     0.54885195015877 * AcceptedCmp20  +    -0.90402264974928 *
2328523   +        AcceptedCmp30  +    -0.42358682267334 * AcceptedCmp40
2328524   +          +     0.87016183962004 * AcceptedCmp50  +     0.42082407002478 *
2328525   +        Complain0  +    -0.37999025234308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.68777270512099 * AcceptedCmp10 + 0.54885195015877 * 
AcceptedCmp20 + -0.90402264974928 * AcceptedCmp30 + -0.42358682267334 * AcceptedCmp40 + 
0.87016183962004 * AcceptedCmp50 + 0.42082407002478 * Complain0 + -0.37999025234308 * 
HigherEducationBinary0 ;
2328526   +   H1x1_3  = H1x1_3  +    -0.40437631159129 * AcceptedCmp10
2328527   +          +      0.0972205308159 * AcceptedCmp20  +     0.81983130325412 *
2328528   +        AcceptedCmp30  +     0.11521626741585 * AcceptedCmp40
2328529   +          +    -0.67384158900854 * AcceptedCmp50  +    -0.08888648111628 *
2328530   +        Complain0  +    -0.12489144574555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.40437631159129 * AcceptedCmp10 + 0.0972205308159 * 
AcceptedCmp20 + 0.81983130325412 * AcceptedCmp30 + 0.11521626741585 * AcceptedCmp40 + 
-0.67384158900854 * AcceptedCmp50 + -0.08888648111628 * Complain0 + -0.12489144574555 * 
HigherEducationBinary0 ;
2328531   +   H1x1_4  = H1x1_4  +    -0.11861456940351 * AcceptedCmp10
2328532   +          +    -0.84401831403342 * AcceptedCmp20  +    -0.99900514370547 *
2328533   +        AcceptedCmp30  +     0.03311277744337 * AcceptedCmp40
2328534   +          +    -0.89369182681709 * AcceptedCmp50  +    -0.46321923883787 *
2328535   +        Complain0  +     0.73698890563732 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.11861456940351 * AcceptedCmp10 + -0.84401831403342 
* AcceptedCmp20 + -0.99900514370547 * AcceptedCmp30 + 0.03311277744337 * AcceptedCmp40 + 
-0.89369182681709 * AcceptedCmp50 + -0.46321923883787 * Complain0 + 0.73698890563732 * 
HigherEducationBinary0 ;
2328536   +   H1x1_5  = H1x1_5  +     1.36740346673871 * AcceptedCmp10
2328537   +          +    -0.09307995102939 * AcceptedCmp20  +    -0.99727975675265 *
2328538   +        AcceptedCmp30  +    -1.64006559974507 * AcceptedCmp40
2328539   +          +    -0.12164496778613 * AcceptedCmp50  +    -0.20852398947217 *
2328540   +        Complain0  +    -0.12903157145588 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.36740346673871 * AcceptedCmp10 + -0.09307995102939 * 
AcceptedCmp20 + -0.99727975675265 * AcceptedCmp30 + -1.64006559974507 * AcceptedCmp40 + 
-0.12164496778613 * AcceptedCmp50 + -0.20852398947217 * Complain0 + -0.12903157145588 * 
HigherEducationBinary0 ;
2328541   +   H1x1_6  = H1x1_6  +    -0.18375336439178 * AcceptedCmp10
2328542   +          +    -0.61320886099742 * AcceptedCmp20  +     1.46384578641555 *
2328543   +        AcceptedCmp30  +     1.07211075480456 * AcceptedCmp40
2328544   +          +      0.1814894663676 * AcceptedCmp50  +     0.61050756961671 *
2328545   +        Complain0  +     0.18598381049052 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.18375336439178 * AcceptedCmp10 + -0.61320886099742 
* AcceptedCmp20 + 1.46384578641555 * AcceptedCmp30 + 1.07211075480456 * AcceptedCmp40 + 
0.1814894663676 * AcceptedCmp50 + 0.61050756961671 * Complain0 + 0.18598381049052 * 
HigherEducationBinary0 ;
2328546   +   H1x1_1  = H1x1_1  +    -0.85219855086228 * Education2n_Cycle
2328547   +          +     0.72409647993559 * EducationBasic  +    -1.69896726220399 *
2328548   +        EducationGraduation  +     0.96924197858068 * EducationMaster
2328549   +          +     -0.7180104021039 * Marital_StatusDivorced
2328550   +          +      0.5957373170744 * Marital_StatusMarried
2328551   +          +    -0.86183942803988 * Marital_StatusSingle
2328552   +          +     0.92994743994713 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.85219855086228 * Education2n_Cycle + 
0.72409647993559 * EducationBasic + -1.69896726220399 * EducationGraduation + 0.96924197858068 
* EducationMaster + -0.7180104021039 * Marital_StatusDivorced + 0.5957373170744 * 
Marital_StatusMarried + -0.86183942803988 * Marital_StatusSingle + 0.92994743994713 * 
Marital_StatusTogether ;
2328553   +   H1x1_2  = H1x1_2  +    -0.29863788783823 * Education2n_Cycle
2328554   +          +    -0.03492398661463 * EducationBasic  +     1.96491183828121 *
2328555   +        EducationGraduation  +    -1.23733321574678 * EducationMaster
2328556   +          +     0.84772700244021 * Marital_StatusDivorced
2328557   +          +    -0.37049970188511 * Marital_StatusMarried
2328558   +          +     1.54291641732063 * Marital_StatusSingle
2328559   +          +      0.2036514883055 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.29863788783823 * Education2n_Cycle + 
-0.03492398661463 * EducationBasic + 1.96491183828121 * EducationGraduation + 
-1.23733321574678 * EducationMaster + 0.84772700244021 * Marital_StatusDivorced + 
-0.37049970188511 * Marital_StatusMarried + 1.54291641732063 * Marital_StatusSingle + 
0.2036514883055 * Marital_StatusTogether ;
2328560   +   H1x1_3  = H1x1_3  +     0.21600870420184 * Education2n_Cycle
2328561   +          +    -0.41247138958506 * EducationBasic  +    -0.04710356650237 *
2328562   +        EducationGraduation  +     0.02093123351397 * EducationMaster
2328563   +          +     0.73222548496385 * Marital_StatusDivorced
2328564   +          +    -0.50102202656102 * Marital_StatusMarried
2328565   +          +    -0.07207130428422 * Marital_StatusSingle
2328566   +          +     0.17349558515949 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.21600870420184 * Education2n_Cycle + 
-0.41247138958506 * EducationBasic + -0.04710356650237 * EducationGraduation + 
0.02093123351397 * EducationMaster + 0.73222548496385 * Marital_StatusDivorced + 
-0.50102202656102 * Marital_StatusMarried + -0.07207130428422 * Marital_StatusSingle + 
0.17349558515949 * Marital_StatusTogether ;
2328567   +   H1x1_4  = H1x1_4  +    -0.26695942691152 * Education2n_Cycle
2328568   +          +     0.08346486410021 * EducationBasic  +    -1.19880044804188 *
2328569   +        EducationGraduation  +     0.65366032471107 * EducationMaster
2328570   +          +     0.25894719464799 * Marital_StatusDivorced
2328571   +          +    -1.95576501275834 * Marital_StatusMarried
2328572   +          +     2.65422185276746 * Marital_StatusSingle
2328573   +          +    -3.75373924980398 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26695942691152 * Education2n_Cycle + 
0.08346486410021 * EducationBasic + -1.19880044804188 * EducationGraduation + 0.65366032471107 
* EducationMaster + 0.25894719464799 * Marital_StatusDivorced + -1.95576501275834 * 
Marital_StatusMarried + 2.65422185276746 * Marital_StatusSingle + -3.75373924980398 * 
Marital_StatusTogether ;
2328574   +   H1x1_5  = H1x1_5  +     0.17586479935526 * Education2n_Cycle
2328575   +          +    -0.60926722758624 * EducationBasic  +    -0.09613529218096 *
2328576   +        EducationGraduation  +    -0.28683119112285 * EducationMaster
2328577   +          +     0.60936191204707 * Marital_StatusDivorced
2328578   +          +    -0.52190111190458 * Marital_StatusMarried
2328579   +          +    -0.60982305233136 * Marital_StatusSingle
2328580   +          +     0.44659686388318 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.17586479935526 * Education2n_Cycle + 
-0.60926722758624 * EducationBasic + -0.09613529218096 * EducationGraduation + 
-0.28683119112285 * EducationMaster + 0.60936191204707 * Marital_StatusDivorced + 
-0.52190111190458 * Marital_StatusMarried + -0.60982305233136 * Marital_StatusSingle + 
0.44659686388318 * Marital_StatusTogether ;
2328581   +   H1x1_6  = H1x1_6  +     0.16067502362228 * Education2n_Cycle
2328582   +          +     0.18937855703296 * EducationBasic  +     0.06386817095607 *
2328583   +        EducationGraduation  +     0.51538853297606 * EducationMaster
2328584   +          +    -1.44614502228294 * Marital_StatusDivorced
2328585   +          +      2.9001493892928 * Marital_StatusMarried
2328586   +          +    -2.60467399972513 * Marital_StatusSingle
2328587   +          +     2.31815156650258 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16067502362228 * Education2n_Cycle + 
0.18937855703296 * EducationBasic + 0.06386817095607 * EducationGraduation + 0.51538853297606 
* EducationMaster + -1.44614502228294 * Marital_StatusDivorced + 2.9001493892928 * 
Marital_StatusMarried + -2.60467399972513 * Marital_StatusSingle + 2.31815156650258 * 
Marital_StatusTogether ;
2328588   +   H1x1_1  =     2.01245018737649 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.01245018737649 + H1x1_1 ;
2328589   +   H1x1_2  =    -0.13724223857423 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.13724223857423 + H1x1_2 ;
2328590   +   H1x1_3  =     0.82934879006547 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.82934879006547 + H1x1_3 ;
2328591   +   H1x1_4  =    -0.21545557935699 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.21545557935699 + H1x1_4 ;
2328592   +   H1x1_5  =     0.44835497486542 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.44835497486542 + H1x1_5 ;
2328593   +   H1x1_6  =     0.11792774897936 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.11792774897936 + H1x1_6 ;
2328594   +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
2328595   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
2328596   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , 
H1x1_7 );
2328597   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2328598   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2328599   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2328600   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2328601   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2328602   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2328603   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2328604   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2328605   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2328606   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
2328607   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
2328608   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
2328609   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
2328610   +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
2328611   +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
2328612   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2328613   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2328614   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2328615   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2328616   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
2328617   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
2328618   +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
2328619   +END;
MPRINT(EM_DIAGRAM):   END;
2328620   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2328621   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2328622   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2328623   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2328624   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2328625   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2328626   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2328627   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
2328628   +END;
MPRINT(EM_DIAGRAM):   END;
2328629   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2328630   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2328631   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2328632   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2328633   +   H1x2_1  =    -0.51245281628488 * S_AcceptedCmpTotal
2328634   +          +     0.29586551487242 * S_Age  +     1.34531593814589 * S_Frq
2328635   +          +     1.40753230099536 * S_Income  +    -1.01979935776675 *
2328636   +        S_Kidhome  +      1.0655533203194 * S_Mnt  +     0.74171867275429 *
2328637   +        S_MntFishProducts  +    -0.77881282886264 * S_MntFruits
2328638   +          +    -0.58546798489474 * S_MntGoldProds  +     0.93410444049208 *
2328639   +        S_MntMeatProducts  +     1.10536507959221 * S_MntSweetProducts
2328640   +          +     2.08723894920384 * S_MntWines  +    -0.64437193401661 *
2328641   +        S_MonthsAsCustomer  +     1.49880648713252 * S_NumCatalogPurchases
2328642   +          +    -0.46483717253931 * S_NumDealsPurchases
2328643   +          +    -0.53329008421157 * S_NumDistPurchases
2328644   +          +      0.2490774300193 * S_NumStorePurchases
2328645   +          +    -0.82755150673885 * S_NumWebPurchases
2328646   +          +     0.04007223822389 * S_NumWebVisitsMonth
2328647   +          +    -0.21044923749124 * S_RFMstat  +     0.27791352512351 *
2328648   +        S_RMntFrq  +     0.43434806411249 * S_Recency
2328649   +          +    -1.25974784572932 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.51245281628488 * S_AcceptedCmpTotal + 0.29586551487242 * 
S_Age + 1.34531593814589 * S_Frq + 1.40753230099536 * S_Income + -1.01979935776675 * S_Kidhome 
+ 1.0655533203194 * S_Mnt + 0.74171867275429 * S_MntFishProducts + -0.77881282886264 * 
S_MntFruits + -0.58546798489474 * S_MntGoldProds + 0.93410444049208 * S_MntMeatProducts + 
1.10536507959221 * S_MntSweetProducts + 2.08723894920384 * S_MntWines + -0.64437193401661 * 
S_MonthsAsCustomer + 1.49880648713252 * S_NumCatalogPurchases + -0.46483717253931 * 
S_NumDealsPurchases + -0.53329008421157 * S_NumDistPurchases + 0.2490774300193 * 
S_NumStorePurchases + -0.82755150673885 * S_NumWebPurchases + 0.04007223822389 * 
S_NumWebVisitsMonth + -0.21044923749124 * S_RFMstat + 0.27791352512351 * S_RMntFrq + 
0.43434806411249 * S_Recency + -1.25974784572932 * S_Teenhome ;
2328650   +   H1x2_2  =     0.30117516029562 * S_AcceptedCmpTotal
2328651   +          +     0.16042149118905 * S_Age  +    -2.59350323749407 * S_Frq
2328652   +          +    -0.29940842910223 * S_Income  +    -0.09168883019219 *
2328653   +        S_Kidhome  +    -0.39758312303322 * S_Mnt  +     -0.4138816285287 *
2328654   +        S_MntFishProducts  +        0.18555623351 * S_MntFruits
2328655   +          +    -0.28024159914959 * S_MntGoldProds  +     1.08084875123781 *
2328656   +        S_MntMeatProducts  +     0.29032828446632 * S_MntSweetProducts
2328657   +          +     0.47556687393839 * S_MntWines  +    -0.89795441591329 *
2328658   +        S_MonthsAsCustomer  +    -0.47081176716106 * S_NumCatalogPurchases
2328659   +          +     0.75855101382458 * S_NumDealsPurchases
2328660   +          +     1.61754951768262 * S_NumDistPurchases
2328661   +          +    -0.48146714929729 * S_NumStorePurchases
2328662   +          +    -0.76460728035552 * S_NumWebPurchases
2328663   +          +    -0.71146787112442 * S_NumWebVisitsMonth
2328664   +          +     0.42381866124588 * S_RFMstat  +     -0.3894818400451 *
2328665   +        S_RMntFrq  +    -0.01528916550509 * S_Recency
2328666   +          +     0.38823136254948 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.30117516029562 * S_AcceptedCmpTotal + 0.16042149118905 * 
S_Age + -2.59350323749407 * S_Frq + -0.29940842910223 * S_Income + -0.09168883019219 * 
S_Kidhome + -0.39758312303322 * S_Mnt + -0.4138816285287 * S_MntFishProducts + 0.18555623351 * 
S_MntFruits + -0.28024159914959 * S_MntGoldProds + 1.08084875123781 * S_MntMeatProducts + 
0.29032828446632 * S_MntSweetProducts + 0.47556687393839 * S_MntWines + -0.89795441591329 * 
S_MonthsAsCustomer + -0.47081176716106 * S_NumCatalogPurchases + 0.75855101382458 * 
S_NumDealsPurchases + 1.61754951768262 * S_NumDistPurchases + -0.48146714929729 * 
S_NumStorePurchases + -0.76460728035552 * S_NumWebPurchases + -0.71146787112442 * 
S_NumWebVisitsMonth + 0.42381866124588 * S_RFMstat + -0.3894818400451 * S_RMntFrq + 
-0.01528916550509 * S_Recency + 0.38823136254948 * S_Teenhome ;
2328667   +   H1x2_3  =    -1.28283712556699 * S_AcceptedCmpTotal
2328668   +          +    -0.62214066983867 * S_Age  +      0.0675653313166 * S_Frq
2328669   +          +     0.77098495841918 * S_Income  +    -1.36225954388119 *
2328670   +        S_Kidhome  +      0.0552831076081 * S_Mnt  +    -0.21387512812296 *
2328671   +        S_MntFishProducts  +    -1.14715718471691 * S_MntFruits
2328672   +          +    -1.15507787000433 * S_MntGoldProds  +     0.87571107504211 *
2328673   +        S_MntMeatProducts  +     0.28274178198443 * S_MntSweetProducts
2328674   +          +     0.23070204507311 * S_MntWines  +    -1.88342889522874 *
2328675   +        S_MonthsAsCustomer  +    -0.19127945486903 * S_NumCatalogPurchases
2328676   +          +     0.75255317965748 * S_NumDealsPurchases
2328677   +          +     1.34900588315783 * S_NumDistPurchases
2328678   +          +    -0.17717469778048 * S_NumStorePurchases
2328679   +          +    -0.01560551546553 * S_NumWebPurchases
2328680   +          +     1.24315988674343 * S_NumWebVisitsMonth
2328681   +          +     2.23854910235018 * S_RFMstat  +     0.55516131558838 *
2328682   +        S_RMntFrq  +    -2.01558015490584 * S_Recency
2328683   +          +     1.34178435587014 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.28283712556699 * S_AcceptedCmpTotal + -0.62214066983867 * 
S_Age + 0.0675653313166 * S_Frq + 0.77098495841918 * S_Income + -1.36225954388119 * S_Kidhome 
+ 0.0552831076081 * S_Mnt + -0.21387512812296 * S_MntFishProducts + -1.14715718471691 * 
S_MntFruits + -1.15507787000433 * S_MntGoldProds + 0.87571107504211 * S_MntMeatProducts + 
0.28274178198443 * S_MntSweetProducts + 0.23070204507311 * S_MntWines + -1.88342889522874 * 
S_MonthsAsCustomer + -0.19127945486903 * S_NumCatalogPurchases + 0.75255317965748 * 
S_NumDealsPurchases + 1.34900588315783 * S_NumDistPurchases + -0.17717469778048 * 
S_NumStorePurchases + -0.01560551546553 * S_NumWebPurchases + 1.24315988674343 * 
S_NumWebVisitsMonth + 2.23854910235018 * S_RFMstat + 0.55516131558838 * S_RMntFrq + 
-2.01558015490584 * S_Recency + 1.34178435587014 * S_Teenhome ;
2328684   +   H1x2_4  =     1.35706411211536 * S_AcceptedCmpTotal
2328685   +          +    -0.73374940975123 * S_Age  +     2.10445428870671 * S_Frq
2328686   +          +    -1.60133766439775 * S_Income  +     0.02861907512789 *
2328687   +        S_Kidhome  +    -1.61837693250001 * S_Mnt  +       0.209751533263 *
2328688   +        S_MntFishProducts  +     1.82411973889656 * S_MntFruits
2328689   +          +     1.12172774431408 * S_MntGoldProds  +     1.09610288046573 *
2328690   +        S_MntMeatProducts  +    -0.86671874280949 * S_MntSweetProducts
2328691   +          +    -0.11602638812541 * S_MntWines  +    -0.30074020863435 *
2328692   +        S_MonthsAsCustomer  +     0.46044258716085 * S_NumCatalogPurchases
2328693   +          +    -1.71127148178768 * S_NumDealsPurchases
2328694   +          +    -1.77527355221308 * S_NumDistPurchases
2328695   +          +    -1.40009594349363 * S_NumStorePurchases
2328696   +          +    -0.46471012062697 * S_NumWebPurchases
2328697   +          +     0.04619891083228 * S_NumWebVisitsMonth
2328698   +          +     0.34715614649891 * S_RFMstat  +    -0.74983051176564 *
2328699   +        S_RMntFrq  +     0.84880186653433 * S_Recency
2328700   +          +     0.20218341857265 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.35706411211536 * S_AcceptedCmpTotal + -0.73374940975123 * 
S_Age + 2.10445428870671 * S_Frq + -1.60133766439775 * S_Income + 0.02861907512789 * S_Kidhome 
+ -1.61837693250001 * S_Mnt + 0.209751533263 * S_MntFishProducts + 1.82411973889656 * 
S_MntFruits + 1.12172774431408 * S_MntGoldProds + 1.09610288046573 * S_MntMeatProducts + 
-0.86671874280949 * S_MntSweetProducts + -0.11602638812541 * S_MntWines + -0.30074020863435 * 
S_MonthsAsCustomer + 0.46044258716085 * S_NumCatalogPurchases + -1.71127148178768 * 
S_NumDealsPurchases + -1.77527355221308 * S_NumDistPurchases + -1.40009594349363 * 
S_NumStorePurchases + -0.46471012062697 * S_NumWebPurchases + 0.04619891083228 * 
S_NumWebVisitsMonth + 0.34715614649891 * S_RFMstat + -0.74983051176564 * S_RMntFrq + 
0.84880186653433 * S_Recency + 0.20218341857265 * S_Teenhome ;
2328701   +   H1x2_5  =     1.79452363233333 * S_AcceptedCmpTotal
2328702   +          +     1.70826835028511 * S_Age  +     0.08241717907016 * S_Frq
2328703   +          +    -1.15275600314196 * S_Income  +     0.87736096074094 *
2328704   +        S_Kidhome  +     0.90821427722502 * S_Mnt  +    -0.84055732556964 *
2328705   +        S_MntFishProducts  +    -0.74245639083939 * S_MntFruits
2328706   +          +     0.00204325095854 * S_MntGoldProds  +     0.37597102500134 *
2328707   +        S_MntMeatProducts  +     0.28586076288454 * S_MntSweetProducts
2328708   +          +    -1.38194310174269 * S_MntWines  +     0.10286181254259 *
2328709   +        S_MonthsAsCustomer  +    -0.82469018226034 * S_NumCatalogPurchases
2328710   +          +    -0.22204470395056 * S_NumDealsPurchases
2328711   +          +    -1.74490476011984 * S_NumDistPurchases
2328712   +          +     1.93538420108324 * S_NumStorePurchases
2328713   +          +     1.04892631742152 * S_NumWebPurchases
2328714   +          +     1.50717841566047 * S_NumWebVisitsMonth
2328715   +          +     0.61249250909375 * S_RFMstat  +    -0.54764212165911 *
2328716   +        S_RMntFrq  +      1.9918829185386 * S_Recency
2328717   +          +     0.64908540313947 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.79452363233333 * S_AcceptedCmpTotal + 1.70826835028511 * 
S_Age + 0.08241717907016 * S_Frq + -1.15275600314196 * S_Income + 0.87736096074094 * S_Kidhome 
+ 0.90821427722502 * S_Mnt + -0.84055732556964 * S_MntFishProducts + -0.74245639083939 * 
S_MntFruits + 0.00204325095854 * S_MntGoldProds + 0.37597102500134 * S_MntMeatProducts + 
0.28586076288454 * S_MntSweetProducts + -1.38194310174269 * S_MntWines + 0.10286181254259 * 
S_MonthsAsCustomer + -0.82469018226034 * S_NumCatalogPurchases + -0.22204470395056 * 
S_NumDealsPurchases + -1.74490476011984 * S_NumDistPurchases + 1.93538420108324 * 
S_NumStorePurchases + 1.04892631742152 * S_NumWebPurchases + 1.50717841566047 * 
S_NumWebVisitsMonth + 0.61249250909375 * S_RFMstat + -0.54764212165911 * S_RMntFrq + 
1.9918829185386 * S_Recency + 0.64908540313947 * S_Teenhome ;
2328718   +   H1x2_6  =     1.38705263280369 * S_AcceptedCmpTotal
2328719   +          +    -0.70531523704191 * S_Age  +     0.59125500807205 * S_Frq
2328720   +          +     0.89549490842249 * S_Income  +     1.07240562425698 *
2328721   +        S_Kidhome  +    -0.25050185694258 * S_Mnt  +    -0.77552207934024 *
2328722   +        S_MntFishProducts  +     0.18087757744856 * S_MntFruits
2328723   +          +    -1.37618517481144 * S_MntGoldProds  +      0.6557488228355 *
2328724   +        S_MntMeatProducts  +    -1.40834207395949 * S_MntSweetProducts
2328725   +          +    -0.76196689750388 * S_MntWines  +     0.85144735274506 *
2328726   +        S_MonthsAsCustomer  +     0.66349954778428 * S_NumCatalogPurchases
2328727   +          +    -0.94690420785776 * S_NumDealsPurchases
2328728   +          +     1.87932706342204 * S_NumDistPurchases
2328729   +          +     0.31232717416487 * S_NumStorePurchases
2328730   +          +     1.51889492693355 * S_NumWebPurchases
2328731   +          +     0.04376853689795 * S_NumWebVisitsMonth
2328732   +          +    -2.53979043374029 * S_RFMstat  +     1.33915580029494 *
2328733   +        S_RMntFrq  +    -1.21983510008829 * S_Recency
2328734   +          +     0.36122230024433 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.38705263280369 * S_AcceptedCmpTotal + -0.70531523704191 * 
S_Age + 0.59125500807205 * S_Frq + 0.89549490842249 * S_Income + 1.07240562425698 * S_Kidhome 
+ -0.25050185694258 * S_Mnt + -0.77552207934024 * S_MntFishProducts + 0.18087757744856 * 
S_MntFruits + -1.37618517481144 * S_MntGoldProds + 0.6557488228355 * S_MntMeatProducts + 
-1.40834207395949 * S_MntSweetProducts + -0.76196689750388 * S_MntWines + 0.85144735274506 * 
S_MonthsAsCustomer + 0.66349954778428 * S_NumCatalogPurchases + -0.94690420785776 * 
S_NumDealsPurchases + 1.87932706342204 * S_NumDistPurchases + 0.31232717416487 * 
S_NumStorePurchases + 1.51889492693355 * S_NumWebPurchases + 0.04376853689795 * 
S_NumWebVisitsMonth + -2.53979043374029 * S_RFMstat + 1.33915580029494 * S_RMntFrq + 
-1.21983510008829 * S_Recency + 0.36122230024433 * S_Teenhome ;
2328735   +   H1x2_1  = H1x2_1  +     1.89852147155601 * AcceptedCmp10
2328736   +          +     0.03501265764204 * AcceptedCmp20  +    -0.45070218241239 *
2328737   +        AcceptedCmp30  +    -1.27257966336041 * AcceptedCmp40
2328738   +          +     0.86175125820023 * AcceptedCmp50  +     1.42864024461581 *
2328739   +        Complain0  +     0.34417315915901 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.89852147155601 * AcceptedCmp10 + 0.03501265764204 * 
AcceptedCmp20 + -0.45070218241239 * AcceptedCmp30 + -1.27257966336041 * AcceptedCmp40 + 
0.86175125820023 * AcceptedCmp50 + 1.42864024461581 * Complain0 + 0.34417315915901 * 
HigherEducationBinary0 ;
2328740   +   H1x2_2  = H1x2_2  +     0.41672679168374 * AcceptedCmp10
2328741   +          +     0.10769233314512 * AcceptedCmp20  +     0.42374549876289 *
2328742   +        AcceptedCmp30  +     0.65697535989046 * AcceptedCmp40
2328743   +          +     1.49817201460948 * AcceptedCmp50  +     0.46039378640249 *
2328744   +        Complain0  +     1.34709525059573 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.41672679168374 * AcceptedCmp10 + 0.10769233314512 * 
AcceptedCmp20 + 0.42374549876289 * AcceptedCmp30 + 0.65697535989046 * AcceptedCmp40 + 
1.49817201460948 * AcceptedCmp50 + 0.46039378640249 * Complain0 + 1.34709525059573 * 
HigherEducationBinary0 ;
2328745   +   H1x2_3  = H1x2_3  +     0.75388522027745 * AcceptedCmp10
2328746   +          +     2.63069611253058 * AcceptedCmp20  +     0.30907626174766 *
2328747   +        AcceptedCmp30  +     1.10100873408666 * AcceptedCmp40
2328748   +          +    -1.08824297693055 * AcceptedCmp50  +     1.05059014395924 *
2328749   +        Complain0  +     0.67869922391732 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.75388522027745 * AcceptedCmp10 + 2.63069611253058 * 
AcceptedCmp20 + 0.30907626174766 * AcceptedCmp30 + 1.10100873408666 * AcceptedCmp40 + 
-1.08824297693055 * AcceptedCmp50 + 1.05059014395924 * Complain0 + 0.67869922391732 * 
HigherEducationBinary0 ;
2328750   +   H1x2_4  = H1x2_4  +    -0.22033664091288 * AcceptedCmp10
2328751   +          +     1.34914301916376 * AcceptedCmp20  +    -0.91465085581504 *
2328752   +        AcceptedCmp30  +    -0.19686441685837 * AcceptedCmp40
2328753   +          +     0.10683331864009 * AcceptedCmp50  +    -0.00754824810979 *
2328754   +        Complain0  +     1.52033864172921 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.22033664091288 * AcceptedCmp10 + 1.34914301916376 * 
AcceptedCmp20 + -0.91465085581504 * AcceptedCmp30 + -0.19686441685837 * AcceptedCmp40 + 
0.10683331864009 * AcceptedCmp50 + -0.00754824810979 * Complain0 + 1.52033864172921 * 
HigherEducationBinary0 ;
2328755   +   H1x2_5  = H1x2_5  +     0.83049886541915 * AcceptedCmp10
2328756   +          +    -0.74079162208987 * AcceptedCmp20  +    -0.67792505698297 *
2328757   +        AcceptedCmp30  +     0.07081190269168 * AcceptedCmp40
2328758   +          +     0.18720033568684 * AcceptedCmp50  +      2.6531318197812 *
2328759   +        Complain0  +     0.89741230471087 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.83049886541915 * AcceptedCmp10 + -0.74079162208987 * 
AcceptedCmp20 + -0.67792505698297 * AcceptedCmp30 + 0.07081190269168 * AcceptedCmp40 + 
0.18720033568684 * AcceptedCmp50 + 2.6531318197812 * Complain0 + 0.89741230471087 * 
HigherEducationBinary0 ;
2328760   +   H1x2_6  = H1x2_6  +    -0.56781516290501 * AcceptedCmp10
2328761   +          +    -1.51874938874937 * AcceptedCmp20  +     1.28621778326033 *
2328762   +        AcceptedCmp30  +    -0.68769482686243 * AcceptedCmp40
2328763   +          +     0.35592893389946 * AcceptedCmp50  +    -1.30827608061077 *
2328764   +        Complain0  +     0.32980103195099 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.56781516290501 * AcceptedCmp10 + -1.51874938874937 
* AcceptedCmp20 + 1.28621778326033 * AcceptedCmp30 + -0.68769482686243 * AcceptedCmp40 + 
0.35592893389946 * AcceptedCmp50 + -1.30827608061077 * Complain0 + 0.32980103195099 * 
HigherEducationBinary0 ;
2328765   +   H1x2_1  = H1x2_1  +     -1.3799101073197 * Education2n_Cycle
2328766   +          +     0.02501135207931 * EducationBasic  +     1.13490660748682 *
2328767   +        EducationGraduation  +    -0.11344307008943 * EducationMaster
2328768   +          +     0.56030871857835 * Marital_StatusDivorced
2328769   +          +    -1.22448534379831 * Marital_StatusMarried
2328770   +          +     0.78141783495855 * Marital_StatusSingle
2328771   +          +    -1.35807438297575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.3799101073197 * Education2n_Cycle + 
0.02501135207931 * EducationBasic + 1.13490660748682 * EducationGraduation + -0.11344307008943 
* EducationMaster + 0.56030871857835 * Marital_StatusDivorced + -1.22448534379831 * 
Marital_StatusMarried + 0.78141783495855 * Marital_StatusSingle + -1.35807438297575 * 
Marital_StatusTogether ;
2328772   +   H1x2_2  = H1x2_2  +    -0.29912132201198 * Education2n_Cycle
2328773   +          +    -0.97227735746604 * EducationBasic  +     1.05541395347718 *
2328774   +        EducationGraduation  +     0.69607179798453 * EducationMaster
2328775   +          +    -2.63452071552997 * Marital_StatusDivorced
2328776   +          +     0.61829054779121 * Marital_StatusMarried
2328777   +          +    -2.20743370246315 * Marital_StatusSingle
2328778   +          +     0.56930072654252 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.29912132201198 * Education2n_Cycle + 
-0.97227735746604 * EducationBasic + 1.05541395347718 * EducationGraduation + 0.69607179798453 
* EducationMaster + -2.63452071552997 * Marital_StatusDivorced + 0.61829054779121 * 
Marital_StatusMarried + -2.20743370246315 * Marital_StatusSingle + 0.56930072654252 * 
Marital_StatusTogether ;
2328779   +   H1x2_3  = H1x2_3  +     0.65046688904352 * Education2n_Cycle
2328780   +          +     0.03854232912474 * EducationBasic  +     0.59545004622858 *
2328781   +        EducationGraduation  +    -1.68638824011899 * EducationMaster
2328782   +          +      -1.454102516731 * Marital_StatusDivorced
2328783   +          +     0.71488291465759 * Marital_StatusMarried
2328784   +          +     0.96038830049792 * Marital_StatusSingle
2328785   +          +    -0.85244216490853 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.65046688904352 * Education2n_Cycle + 
0.03854232912474 * EducationBasic + 0.59545004622858 * EducationGraduation + -1.68638824011899 
* EducationMaster + -1.454102516731 * Marital_StatusDivorced + 0.71488291465759 * 
Marital_StatusMarried + 0.96038830049792 * Marital_StatusSingle + -0.85244216490853 * 
Marital_StatusTogether ;
2328786   +   H1x2_4  = H1x2_4  +     0.37430673318658 * Education2n_Cycle
2328787   +          +    -0.25373979771478 * EducationBasic  +    -1.65617377693247 *
2328788   +        EducationGraduation  +    -1.12481097095571 * EducationMaster
2328789   +          +    -0.01160394891598 * Marital_StatusDivorced
2328790   +          +    -1.09054636482951 * Marital_StatusMarried
2328791   +          +      0.7793855479379 * Marital_StatusSingle
2328792   +          +    -0.40649435490654 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.37430673318658 * Education2n_Cycle + 
-0.25373979771478 * EducationBasic + -1.65617377693247 * EducationGraduation + 
-1.12481097095571 * EducationMaster + -0.01160394891598 * Marital_StatusDivorced + 
-1.09054636482951 * Marital_StatusMarried + 0.7793855479379 * Marital_StatusSingle + 
-0.40649435490654 * Marital_StatusTogether ;
2328793   +   H1x2_5  = H1x2_5  +     -0.1016827992735 * Education2n_Cycle
2328794   +          +     1.07194596228219 * EducationBasic  +    -1.05800808905557 *
2328795   +        EducationGraduation  +     0.09666597691691 * EducationMaster
2328796   +          +    -0.73414854875115 * Marital_StatusDivorced
2328797   +          +     0.46421425621114 * Marital_StatusMarried
2328798   +          +    -0.54512730625469 * Marital_StatusSingle
2328799   +          +     0.76568726267448 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.1016827992735 * Education2n_Cycle + 
1.07194596228219 * EducationBasic + -1.05800808905557 * EducationGraduation + 0.09666597691691 
* EducationMaster + -0.73414854875115 * Marital_StatusDivorced + 0.46421425621114 * 
Marital_StatusMarried + -0.54512730625469 * Marital_StatusSingle + 0.76568726267448 * 
Marital_StatusTogether ;
2328800   +   H1x2_6  = H1x2_6  +    -1.15957084181454 * Education2n_Cycle
2328801   +          +     0.00847667341235 * EducationBasic  +    -1.58463832529749 *
2328802   +        EducationGraduation  +     0.56518194582557 * EducationMaster
2328803   +          +     0.25131188683384 * Marital_StatusDivorced
2328804   +          +     2.38279806963807 * Marital_StatusMarried
2328805   +          +     0.28897706448348 * Marital_StatusSingle
2328806   +          +     0.89118497255856 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.15957084181454 * Education2n_Cycle + 
0.00847667341235 * EducationBasic + -1.58463832529749 * EducationGraduation + 0.56518194582557 
* EducationMaster + 0.25131188683384 * Marital_StatusDivorced + 2.38279806963807 * 
Marital_StatusMarried + 0.28897706448348 * Marital_StatusSingle + 0.89118497255856 * 
Marital_StatusTogether ;
2328807   +   H1x2_1  =    -1.58113759763481 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.58113759763481 + H1x2_1 ;
2328808   +   H1x2_2  =    -1.19307731012977 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.19307731012977 + H1x2_2 ;
2328809   +   H1x2_3  =     0.35767811974231 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.35767811974231 + H1x2_3 ;
2328810   +   H1x2_4  =    -0.20241610577527 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.20241610577527 + H1x2_4 ;
2328811   +   H1x2_5  =     0.30120348602955 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.30120348602955 + H1x2_5 ;
2328812   +   H1x2_6  =     1.04145053611779 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.04145053611779 + H1x2_6 ;
2328813   +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
2328814   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
2328815   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , 
H1x2_7 );
2328816   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2328817   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
2328818   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
2328819   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
2328820   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
2328821   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
2328822   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
2328823   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
2328824   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
2328825   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
2328826   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
2328827   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
2328828   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
2328829   +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
2328830   +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
2328831   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
2328832   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
2328833   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
2328834   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
2328835   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
2328836   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
2328837   +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
2328838   +END;
MPRINT(EM_DIAGRAM):   END;
2328839   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2328840   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2328841   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2328842   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2328843   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2328844   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2328845   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2328846   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
2328847   +END;
MPRINT(EM_DIAGRAM):   END;
2328848   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2328849   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2328850   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2328851   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2328852   +   H1x3_1  =    -0.17891338426869 * S_AcceptedCmpTotal
2328853   +          +     0.25935021287808 * S_Age  +     -0.4211584261256 * S_Frq
2328854   +          +    -1.91007620895221 * S_Income  +     0.38954955842314 *
2328855   +        S_Kidhome  +     0.07674351412771 * S_Mnt  +    -0.00193662324959 *
2328856   +        S_MntFishProducts  +    -0.05912563364557 * S_MntFruits
2328857   +          +     0.34447908349796 * S_MntGoldProds  +      1.8146796379351 *
2328858   +        S_MntMeatProducts  +    -0.28617584915758 * S_MntSweetProducts
2328859   +          +    -0.25003395507837 * S_MntWines  +     2.70698456342857 *
2328860   +        S_MonthsAsCustomer  +     0.61560315312621 * S_NumCatalogPurchases
2328861   +          +     1.11855402225797 * S_NumDealsPurchases
2328862   +          +     0.39150287442005 * S_NumDistPurchases
2328863   +          +     0.00160244551627 * S_NumStorePurchases
2328864   +          +     1.54380043731879 * S_NumWebPurchases
2328865   +          +      0.6462755347813 * S_NumWebVisitsMonth
2328866   +          +      0.3712356571744 * S_RFMstat  +     0.31930000498313 *
2328867   +        S_RMntFrq  +     0.91533450209744 * S_Recency
2328868   +          +    -1.15144971921837 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.17891338426869 * S_AcceptedCmpTotal + 0.25935021287808 * 
S_Age + -0.4211584261256 * S_Frq + -1.91007620895221 * S_Income + 0.38954955842314 * S_Kidhome 
+ 0.07674351412771 * S_Mnt + -0.00193662324959 * S_MntFishProducts + -0.05912563364557 * 
S_MntFruits + 0.34447908349796 * S_MntGoldProds + 1.8146796379351 * S_MntMeatProducts + 
-0.28617584915758 * S_MntSweetProducts + -0.25003395507837 * S_MntWines + 2.70698456342857 * 
S_MonthsAsCustomer + 0.61560315312621 * S_NumCatalogPurchases + 1.11855402225797 * 
S_NumDealsPurchases + 0.39150287442005 * S_NumDistPurchases + 0.00160244551627 * 
S_NumStorePurchases + 1.54380043731879 * S_NumWebPurchases + 0.6462755347813 * 
S_NumWebVisitsMonth + 0.3712356571744 * S_RFMstat + 0.31930000498313 * S_RMntFrq + 
0.91533450209744 * S_Recency + -1.15144971921837 * S_Teenhome ;
2328869   +   H1x3_2  =     0.70342217458269 * S_AcceptedCmpTotal
2328870   +          +     1.00269567168731 * S_Age  +     0.28237778780972 * S_Frq
2328871   +          +     1.85610950568833 * S_Income  +    -0.88627540559449 *
2328872   +        S_Kidhome  +      -0.681406495446 * S_Mnt  +    -0.52884566607488 *
2328873   +        S_MntFishProducts  +    -1.55540056999822 * S_MntFruits
2328874   +          +    -0.86530238267543 * S_MntGoldProds  +     0.50288889191395 *
2328875   +        S_MntMeatProducts  +     0.42795025747297 * S_MntSweetProducts
2328876   +          +     1.65622561769832 * S_MntWines  +    -0.40506757052255 *
2328877   +        S_MonthsAsCustomer  +    -0.45283667973478 * S_NumCatalogPurchases
2328878   +          +     0.01911815525287 * S_NumDealsPurchases
2328879   +          +    -1.07196707915227 * S_NumDistPurchases
2328880   +          +      0.6452048321682 * S_NumStorePurchases
2328881   +          +    -0.15818575353955 * S_NumWebPurchases
2328882   +          +    -0.82586162051382 * S_NumWebVisitsMonth
2328883   +          +     0.35914598433318 * S_RFMstat  +     0.14754646817335 *
2328884   +        S_RMntFrq  +     0.23398669008843 * S_Recency
2328885   +          +      0.1494741245474 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.70342217458269 * S_AcceptedCmpTotal + 1.00269567168731 * 
S_Age + 0.28237778780972 * S_Frq + 1.85610950568833 * S_Income + -0.88627540559449 * S_Kidhome 
+ -0.681406495446 * S_Mnt + -0.52884566607488 * S_MntFishProducts + -1.55540056999822 * 
S_MntFruits + -0.86530238267543 * S_MntGoldProds + 0.50288889191395 * S_MntMeatProducts + 
0.42795025747297 * S_MntSweetProducts + 1.65622561769832 * S_MntWines + -0.40506757052255 * 
S_MonthsAsCustomer + -0.45283667973478 * S_NumCatalogPurchases + 0.01911815525287 * 
S_NumDealsPurchases + -1.07196707915227 * S_NumDistPurchases + 0.6452048321682 * 
S_NumStorePurchases + -0.15818575353955 * S_NumWebPurchases + -0.82586162051382 * 
S_NumWebVisitsMonth + 0.35914598433318 * S_RFMstat + 0.14754646817335 * S_RMntFrq + 
0.23398669008843 * S_Recency + 0.1494741245474 * S_Teenhome ;
2328886   +   H1x3_3  =     0.54929571619315 * S_AcceptedCmpTotal
2328887   +          +      -0.751329127583 * S_Age  +    -0.94592306727941 * S_Frq
2328888   +          +    -1.17625421122138 * S_Income  +     0.74760015734698 *
2328889   +        S_Kidhome  +    -1.31055967085841 * S_Mnt  +     -0.5844789069547 *
2328890   +        S_MntFishProducts  +     0.29563811382096 * S_MntFruits
2328891   +          +      2.0486671645084 * S_MntGoldProds  +      0.4596153519541 *
2328892   +        S_MntMeatProducts  +     0.43182048706593 * S_MntSweetProducts
2328893   +          +     0.06319773540648 * S_MntWines  +     -0.9320658068644 *
2328894   +        S_MonthsAsCustomer  +     0.97208201647088 * S_NumCatalogPurchases
2328895   +          +     1.56893739271853 * S_NumDealsPurchases
2328896   +          +      0.6745865425238 * S_NumDistPurchases
2328897   +          +    -0.26848765783548 * S_NumStorePurchases
2328898   +          +     0.79227081430227 * S_NumWebPurchases
2328899   +          +     0.83054874267768 * S_NumWebVisitsMonth
2328900   +          +    -0.28363014203077 * S_RFMstat  +    -0.71879552423951 *
2328901   +        S_RMntFrq  +     0.80917480816898 * S_Recency
2328902   +          +    -0.52052715034272 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.54929571619315 * S_AcceptedCmpTotal + -0.751329127583 * S_Age 
+ -0.94592306727941 * S_Frq + -1.17625421122138 * S_Income + 0.74760015734698 * S_Kidhome + 
-1.31055967085841 * S_Mnt + -0.5844789069547 * S_MntFishProducts + 0.29563811382096 * 
S_MntFruits + 2.0486671645084 * S_MntGoldProds + 0.4596153519541 * S_MntMeatProducts + 
0.43182048706593 * S_MntSweetProducts + 0.06319773540648 * S_MntWines + -0.9320658068644 * 
S_MonthsAsCustomer + 0.97208201647088 * S_NumCatalogPurchases + 1.56893739271853 * 
S_NumDealsPurchases + 0.6745865425238 * S_NumDistPurchases + -0.26848765783548 * 
S_NumStorePurchases + 0.79227081430227 * S_NumWebPurchases + 0.83054874267768 * 
S_NumWebVisitsMonth + -0.28363014203077 * S_RFMstat + -0.71879552423951 * S_RMntFrq + 
0.80917480816898 * S_Recency + -0.52052715034272 * S_Teenhome ;
2328903   +   H1x3_4  =     1.71480641781959 * S_AcceptedCmpTotal
2328904   +          +    -0.98495603767618 * S_Age  +     -0.0459665945886 * S_Frq
2328905   +          +     1.19396539246615 * S_Income  +     0.51326452746824 *
2328906   +        S_Kidhome  +    -0.22663230333642 * S_Mnt  +     0.27256846012963 *
2328907   +        S_MntFishProducts  +    -0.50661455153622 * S_MntFruits
2328908   +          +     -0.3498057126965 * S_MntGoldProds  +    -2.87000075082987 *
2328909   +        S_MntMeatProducts  +    -0.09413391100844 * S_MntSweetProducts
2328910   +          +     1.15010664811376 * S_MntWines  +    -0.48501392658783 *
2328911   +        S_MonthsAsCustomer  +      0.2688077310392 * S_NumCatalogPurchases
2328912   +          +    -0.23954856030467 * S_NumDealsPurchases
2328913   +          +    -1.61914390483829 * S_NumDistPurchases
2328914   +          +      -1.014570623016 * S_NumStorePurchases
2328915   +          +    -0.36828642098701 * S_NumWebPurchases
2328916   +          +    -0.04976922659227 * S_NumWebVisitsMonth
2328917   +          +     0.87811344320757 * S_RFMstat  +    -1.70999928232532 *
2328918   +        S_RMntFrq  +    -0.40880481304369 * S_Recency
2328919   +          +     0.75806578113158 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.71480641781959 * S_AcceptedCmpTotal + -0.98495603767618 * 
S_Age + -0.0459665945886 * S_Frq + 1.19396539246615 * S_Income + 0.51326452746824 * S_Kidhome 
+ -0.22663230333642 * S_Mnt + 0.27256846012963 * S_MntFishProducts + -0.50661455153622 * 
S_MntFruits + -0.3498057126965 * S_MntGoldProds + -2.87000075082987 * S_MntMeatProducts + 
-0.09413391100844 * S_MntSweetProducts + 1.15010664811376 * S_MntWines + -0.48501392658783 * 
S_MonthsAsCustomer + 0.2688077310392 * S_NumCatalogPurchases + -0.23954856030467 * 
S_NumDealsPurchases + -1.61914390483829 * S_NumDistPurchases + -1.014570623016 * 
S_NumStorePurchases + -0.36828642098701 * S_NumWebPurchases + -0.04976922659227 * 
S_NumWebVisitsMonth + 0.87811344320757 * S_RFMstat + -1.70999928232532 * S_RMntFrq + 
-0.40880481304369 * S_Recency + 0.75806578113158 * S_Teenhome ;
2328920   +   H1x3_5  =    -0.35033091531835 * S_AcceptedCmpTotal
2328921   +          +    -1.18148775203733 * S_Age  +    -0.17374293038138 * S_Frq
2328922   +          +    -0.36680516767012 * S_Income  +     0.57186890691757 *
2328923   +        S_Kidhome  +    -0.02612042491922 * S_Mnt  +     0.84551697375819 *
2328924   +        S_MntFishProducts  +     0.44255296354709 * S_MntFruits
2328925   +          +    -1.35259485807243 * S_MntGoldProds  +      0.3377329409199 *
2328926   +        S_MntMeatProducts  +    -1.06135100840202 * S_MntSweetProducts
2328927   +          +     0.15771394796649 * S_MntWines  +     1.55754960780486 *
2328928   +        S_MonthsAsCustomer  +    -0.76896921785988 * S_NumCatalogPurchases
2328929   +          +     1.00094082424204 * S_NumDealsPurchases
2328930   +          +      0.2724785290725 * S_NumDistPurchases
2328931   +          +     0.13170237783486 * S_NumStorePurchases
2328932   +          +    -1.31447792523743 * S_NumWebPurchases
2328933   +          +    -0.09121088371438 * S_NumWebVisitsMonth
2328934   +          +     1.46860488573551 * S_RFMstat  +     0.46491504994651 *
2328935   +        S_RMntFrq  +      0.6767512513985 * S_Recency
2328936   +          +    -1.74995034763966 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.35033091531835 * S_AcceptedCmpTotal + -1.18148775203733 * 
S_Age + -0.17374293038138 * S_Frq + -0.36680516767012 * S_Income + 0.57186890691757 * 
S_Kidhome + -0.02612042491922 * S_Mnt + 0.84551697375819 * S_MntFishProducts + 
0.44255296354709 * S_MntFruits + -1.35259485807243 * S_MntGoldProds + 0.3377329409199 * 
S_MntMeatProducts + -1.06135100840202 * S_MntSweetProducts + 0.15771394796649 * S_MntWines + 
1.55754960780486 * S_MonthsAsCustomer + -0.76896921785988 * S_NumCatalogPurchases + 
1.00094082424204 * S_NumDealsPurchases + 0.2724785290725 * S_NumDistPurchases + 
0.13170237783486 * S_NumStorePurchases + -1.31447792523743 * S_NumWebPurchases + 
-0.09121088371438 * S_NumWebVisitsMonth + 1.46860488573551 * S_RFMstat + 0.46491504994651 * 
S_RMntFrq + 0.6767512513985 * S_Recency + -1.74995034763966 * S_Teenhome ;
2328937   +   H1x3_6  =     1.05520309715672 * S_AcceptedCmpTotal
2328938   +          +    -1.05930507843633 * S_Age  +     0.07032294102853 * S_Frq
2328939   +          +    -0.05932294137503 * S_Income  +    -1.47206442598932 *
2328940   +        S_Kidhome  +     0.56661112816398 * S_Mnt  +    -0.11340132210258 *
2328941   +        S_MntFishProducts  +    -0.32177484313741 * S_MntFruits
2328942   +          +    -0.32378384178804 * S_MntGoldProds  +     0.00540737819175 *
2328943   +        S_MntMeatProducts  +     0.14834467568566 * S_MntSweetProducts
2328944   +          +    -0.95841169333668 * S_MntWines  +    -0.62902099823048 *
2328945   +        S_MonthsAsCustomer  +    -0.67434201898155 * S_NumCatalogPurchases
2328946   +          +    -0.73198872336344 * S_NumDealsPurchases
2328947   +          +     0.29368958872361 * S_NumDistPurchases
2328948   +          +     1.52772046446908 * S_NumStorePurchases
2328949   +          +    -1.75065469134874 * S_NumWebPurchases
2328950   +          +      0.0264954621772 * S_NumWebVisitsMonth
2328951   +          +    -0.88054137065815 * S_RFMstat  +     0.70371760194946 *
2328952   +        S_RMntFrq  +     1.14219878739476 * S_Recency
2328953   +          +    -1.15240998118906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 1.05520309715672 * S_AcceptedCmpTotal + -1.05930507843633 * 
S_Age + 0.07032294102853 * S_Frq + -0.05932294137503 * S_Income + -1.47206442598932 * 
S_Kidhome + 0.56661112816398 * S_Mnt + -0.11340132210258 * S_MntFishProducts + 
-0.32177484313741 * S_MntFruits + -0.32378384178804 * S_MntGoldProds + 0.00540737819175 * 
S_MntMeatProducts + 0.14834467568566 * S_MntSweetProducts + -0.95841169333668 * S_MntWines + 
-0.62902099823048 * S_MonthsAsCustomer + -0.67434201898155 * S_NumCatalogPurchases + 
-0.73198872336344 * S_NumDealsPurchases + 0.29368958872361 * S_NumDistPurchases + 
1.52772046446908 * S_NumStorePurchases + -1.75065469134874 * S_NumWebPurchases + 
0.0264954621772 * S_NumWebVisitsMonth + -0.88054137065815 * S_RFMstat + 0.70371760194946 * 
S_RMntFrq + 1.14219878739476 * S_Recency + -1.15240998118906 * S_Teenhome ;
2328954   +   H1x3_1  = H1x3_1  +     0.60800466481517 * AcceptedCmp10
2328955   +          +     0.33187245535701 * AcceptedCmp20  +    -0.13888343551044 *
2328956   +        AcceptedCmp30  +     0.93663925029857 * AcceptedCmp40
2328957   +          +     1.09340622621085 * AcceptedCmp50  +    -0.49132743156126 *
2328958   +        Complain0  +     0.45196197584946 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.60800466481517 * AcceptedCmp10 + 0.33187245535701 * 
AcceptedCmp20 + -0.13888343551044 * AcceptedCmp30 + 0.93663925029857 * AcceptedCmp40 + 
1.09340622621085 * AcceptedCmp50 + -0.49132743156126 * Complain0 + 0.45196197584946 * 
HigherEducationBinary0 ;
2328959   +   H1x3_2  = H1x3_2  +     1.40275485940553 * AcceptedCmp10
2328960   +          +    -0.15035102140746 * AcceptedCmp20  +    -0.53574064147206 *
2328961   +        AcceptedCmp30  +    -1.67324904853563 * AcceptedCmp40
2328962   +          +     0.05636486780046 * AcceptedCmp50  +    -0.39032867538703 *
2328963   +        Complain0  +    -0.74980603736258 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 1.40275485940553 * AcceptedCmp10 + -0.15035102140746 * 
AcceptedCmp20 + -0.53574064147206 * AcceptedCmp30 + -1.67324904853563 * AcceptedCmp40 + 
0.05636486780046 * AcceptedCmp50 + -0.39032867538703 * Complain0 + -0.74980603736258 * 
HigherEducationBinary0 ;
2328964   +   H1x3_3  = H1x3_3  +     0.26722647672682 * AcceptedCmp10
2328965   +          +      0.6216449242511 * AcceptedCmp20  +     0.76635966126463 *
2328966   +        AcceptedCmp30  +    -2.48978919706551 * AcceptedCmp40
2328967   +          +     0.98619070514978 * AcceptedCmp50  +    -0.19244215041297 *
2328968   +        Complain0  +    -1.19045127506692 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.26722647672682 * AcceptedCmp10 + 0.6216449242511 * 
AcceptedCmp20 + 0.76635966126463 * AcceptedCmp30 + -2.48978919706551 * AcceptedCmp40 + 
0.98619070514978 * AcceptedCmp50 + -0.19244215041297 * Complain0 + -1.19045127506692 * 
HigherEducationBinary0 ;
2328969   +   H1x3_4  = H1x3_4  +    -1.73915810074841 * AcceptedCmp10
2328970   +          +     0.72244354389321 * AcceptedCmp20  +     1.07200246076684 *
2328971   +        AcceptedCmp30  +     0.24242315318429 * AcceptedCmp40
2328972   +          +     0.48717202781909 * AcceptedCmp50  +    -1.18600714935645 *
2328973   +        Complain0  +     -1.0752062632729 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -1.73915810074841 * AcceptedCmp10 + 0.72244354389321 * 
AcceptedCmp20 + 1.07200246076684 * AcceptedCmp30 + 0.24242315318429 * AcceptedCmp40 + 
0.48717202781909 * AcceptedCmp50 + -1.18600714935645 * Complain0 + -1.0752062632729 * 
HigherEducationBinary0 ;
2328974   +   H1x3_5  = H1x3_5  +     1.07972020322696 * AcceptedCmp10
2328975   +          +     0.38275266830165 * AcceptedCmp20  +     0.45959913551609 *
2328976   +        AcceptedCmp30  +    -0.30891288234597 * AcceptedCmp40
2328977   +          +    -0.35568820567134 * AcceptedCmp50  +     -1.8045223309162 *
2328978   +        Complain0  +    -0.29380313969195 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 1.07972020322696 * AcceptedCmp10 + 0.38275266830165 * 
AcceptedCmp20 + 0.45959913551609 * AcceptedCmp30 + -0.30891288234597 * AcceptedCmp40 + 
-0.35568820567134 * AcceptedCmp50 + -1.8045223309162 * Complain0 + -0.29380313969195 * 
HigherEducationBinary0 ;
2328979   +   H1x3_6  = H1x3_6  +    -2.40002597755125 * AcceptedCmp10
2328980   +          +     0.61725427642794 * AcceptedCmp20  +      1.3438972982524 *
2328981   +        AcceptedCmp30  +    -0.66766212489049 * AcceptedCmp40
2328982   +          +     1.10709227053258 * AcceptedCmp50  +    -0.98301865424423 *
2328983   +        Complain0  +     0.83512874944952 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + -2.40002597755125 * AcceptedCmp10 + 0.61725427642794 * 
AcceptedCmp20 + 1.3438972982524 * AcceptedCmp30 + -0.66766212489049 * AcceptedCmp40 + 
1.10709227053258 * AcceptedCmp50 + -0.98301865424423 * Complain0 + 0.83512874944952 * 
HigherEducationBinary0 ;
2328984   +   H1x3_1  = H1x3_1  +    -0.49604077640433 * Education2n_Cycle
2328985   +          +    -0.60803139475446 * EducationBasic  +     0.39029834300888 *
2328986   +        EducationGraduation  +     1.49476669226441 * EducationMaster
2328987   +          +     0.32207432513904 * Marital_StatusDivorced
2328988   +          +      0.6397913221395 * Marital_StatusMarried
2328989   +          +    -0.25330032559918 * Marital_StatusSingle
2328990   +          +      0.6826963146507 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.49604077640433 * Education2n_Cycle + 
-0.60803139475446 * EducationBasic + 0.39029834300888 * EducationGraduation + 1.49476669226441 
* EducationMaster + 0.32207432513904 * Marital_StatusDivorced + 0.6397913221395 * 
Marital_StatusMarried + -0.25330032559918 * Marital_StatusSingle + 0.6826963146507 * 
Marital_StatusTogether ;
2328991   +   H1x3_2  = H1x3_2  +     0.70727271276171 * Education2n_Cycle
2328992   +          +    -0.74539861835467 * EducationBasic  +    -1.09813520505203 *
2328993   +        EducationGraduation  +      0.0913616986494 * EducationMaster
2328994   +          +     0.79430904713493 * Marital_StatusDivorced
2328995   +          +     2.54456429102799 * Marital_StatusMarried
2328996   +          +     0.59410742352499 * Marital_StatusSingle
2328997   +          +     0.62339810371964 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.70727271276171 * Education2n_Cycle + 
-0.74539861835467 * EducationBasic + -1.09813520505203 * EducationGraduation + 0.0913616986494 
* EducationMaster + 0.79430904713493 * Marital_StatusDivorced + 2.54456429102799 * 
Marital_StatusMarried + 0.59410742352499 * Marital_StatusSingle + 0.62339810371964 * 
Marital_StatusTogether ;
2328998   +   H1x3_3  = H1x3_3  +     0.41739931776571 * Education2n_Cycle
2328999   +          +     0.90042318812458 * EducationBasic  +    -0.30863999735161 *
2329000   +        EducationGraduation  +    -0.07080985966069 * EducationMaster
2329001   +          +    -0.43081775693595 * Marital_StatusDivorced
2329002   +          +    -0.78485102174552 * Marital_StatusMarried
2329003   +          +    -1.56581090110813 * Marital_StatusSingle
2329004   +          +     1.31552735466691 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.41739931776571 * Education2n_Cycle + 
0.90042318812458 * EducationBasic + -0.30863999735161 * EducationGraduation + 
-0.07080985966069 * EducationMaster + -0.43081775693595 * Marital_StatusDivorced + 
-0.78485102174552 * Marital_StatusMarried + -1.56581090110813 * Marital_StatusSingle + 
1.31552735466691 * Marital_StatusTogether ;
2329005   +   H1x3_4  = H1x3_4  +    -1.03450070870223 * Education2n_Cycle
2329006   +          +     0.12962104594991 * EducationBasic  +    -2.08320982697158 *
2329007   +        EducationGraduation  +     1.01633562820676 * EducationMaster
2329008   +          +     0.38226706522151 * Marital_StatusDivorced
2329009   +          +     0.96666958079914 * Marital_StatusMarried
2329010   +          +    -0.07771259761555 * Marital_StatusSingle
2329011   +          +    -0.15667080607342 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -1.03450070870223 * Education2n_Cycle + 
0.12962104594991 * EducationBasic + -2.08320982697158 * EducationGraduation + 1.01633562820676 
* EducationMaster + 0.38226706522151 * Marital_StatusDivorced + 0.96666958079914 * 
Marital_StatusMarried + -0.07771259761555 * Marital_StatusSingle + -0.15667080607342 * 
Marital_StatusTogether ;
2329012   +   H1x3_5  = H1x3_5  +     0.42350784953316 * Education2n_Cycle
2329013   +          +    -0.47409869250049 * EducationBasic  +     0.22752853959532 *
2329014   +        EducationGraduation  +     0.05813076059598 * EducationMaster
2329015   +          +    -0.38325393606947 * Marital_StatusDivorced
2329016   +          +    -1.43303056163299 * Marital_StatusMarried
2329017   +          +     0.11571941757387 * Marital_StatusSingle
2329018   +          +     0.42633042000729 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 0.42350784953316 * Education2n_Cycle + 
-0.47409869250049 * EducationBasic + 0.22752853959532 * EducationGraduation + 0.05813076059598 
* EducationMaster + -0.38325393606947 * Marital_StatusDivorced + -1.43303056163299 * 
Marital_StatusMarried + 0.11571941757387 * Marital_StatusSingle + 0.42633042000729 * 
Marital_StatusTogether ;
2329019   +   H1x3_6  = H1x3_6  +     1.11214831415741 * Education2n_Cycle
2329020   +          +      0.8877309144454 * EducationBasic  +     0.87390674413956 *
2329021   +        EducationGraduation  +     0.90837023676142 * EducationMaster
2329022   +          +    -0.36491799765765 * Marital_StatusDivorced
2329023   +          +     0.14142786767503 * Marital_StatusMarried
2329024   +          +     0.22643970468805 * Marital_StatusSingle
2329025   +          +     0.74162870756295 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + 1.11214831415741 * Education2n_Cycle + 0.8877309144454 
* EducationBasic + 0.87390674413956 * EducationGraduation + 0.90837023676142 * EducationMaster 
+ -0.36491799765765 * Marital_StatusDivorced + 0.14142786767503 * Marital_StatusMarried + 
0.22643970468805 * Marital_StatusSingle + 0.74162870756295 * Marital_StatusTogether ;
2329026   +   H1x3_1  =        0.17121674502 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.17121674502 + H1x3_1 ;
2329027   +   H1x3_2  =    -0.07858073871761 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.07858073871761 + H1x3_2 ;
2329028   +   H1x3_3  =     -0.1687483376367 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.1687483376367 + H1x3_3 ;
2329029   +   H1x3_4  =     0.92501573900148 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.92501573900148 + H1x3_4 ;
2329030   +   H1x3_5  =    -0.04765930254307 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.04765930254307 + H1x3_5 ;
2329031   +   H1x3_6  =     0.29532221854366 + H1x3_6 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0.29532221854366 + H1x3_6 ;
2329032   +   H1x3_7  = 0;
MPRINT(EM_DIAGRAM):   H1x3_7 = 0;
2329033   +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 , H1x3_7
2329034   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 , 
H1x3_7 );
2329035   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2329036   +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
2329037   +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
2329038   +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
2329039   +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
2329040   +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
2329041   +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
2329042   +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
2329043   +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
2329044   +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
2329045   +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
2329046   +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
2329047   +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
2329048   +   H1x3_7  = EXP(H1x3_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_7 = EXP(H1x3_7 - _MAX_);
2329049   +   _SUM_ = _SUM_ + H1x3_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_7 ;
2329050   +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
2329051   +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
2329052   +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
2329053   +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
2329054   +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
2329055   +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
2329056   +   H1x3_7  = H1x3_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_7 = H1x3_7 / _SUM_;
2329057   +END;
MPRINT(EM_DIAGRAM):   END;
2329058   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2329059   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2329060   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2329061   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
2329062   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
2329063   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
2329064   +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
2329065   +   H1x3_7  = .;
MPRINT(EM_DIAGRAM):   H1x3_7 = .;
2329066   +END;
MPRINT(EM_DIAGRAM):   END;
2329067   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2329068   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2329069   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2329070   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2329071   +   H2x1_1  =    -0.59397690687549 * H1x1_1  +     0.10790242485513 * H1x1_2
2329072   +          +     1.34957997338147 * H1x1_3  +     0.98783879769831 * H1x1_4
2329073   +          +    -1.73131698691915 * H1x1_5  +    -0.04920424431591 * H1x1_6
2329074   +          +    -0.75229173661277 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.59397690687549 * H1x1_1 + 0.10790242485513 * H1x1_2 + 
1.34957997338147 * H1x1_3 + 0.98783879769831 * H1x1_4 + -1.73131698691915 * H1x1_5 + 
-0.04920424431591 * H1x1_6 + -0.75229173661277 * H1x1_7 ;
2329075   +   H2x1_2  =    -0.98729009516736 * H1x1_1  +     0.08491210993613 * H1x1_2
2329076   +          +     0.08027654554575 * H1x1_3  +     0.06189432860142 * H1x1_4
2329077   +          +    -1.23526842489276 * H1x1_5  +    -0.17600169070197 * H1x1_6
2329078   +          +     0.70746372975481 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.98729009516736 * H1x1_1 + 0.08491210993613 * H1x1_2 + 
0.08027654554575 * H1x1_3 + 0.06189432860142 * H1x1_4 + -1.23526842489276 * H1x1_5 + 
-0.17600169070197 * H1x1_6 + 0.70746372975481 * H1x1_7 ;
2329079   +   H2x1_3  =    -0.91861478701429 * H1x1_1  +     0.18513565366261 * H1x1_2
2329080   +          +    -0.18629587955963 * H1x1_3  +     0.76802660507034 * H1x1_4
2329081   +          +    -0.47979525657638 * H1x1_5  +     0.06968142422923 * H1x1_6
2329082   +          +     2.18264864713501 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.91861478701429 * H1x1_1 + 0.18513565366261 * H1x1_2 + 
-0.18629587955963 * H1x1_3 + 0.76802660507034 * H1x1_4 + -0.47979525657638 * H1x1_5 + 
0.06968142422923 * H1x1_6 + 2.18264864713501 * H1x1_7 ;
2329083   +   H2x1_4  =     1.02774363171853 * H1x1_1  +     1.08006636098136 * H1x1_2
2329084   +          +    -2.27078540572539 * H1x1_3  +    -0.54968089382258 * H1x1_4
2329085   +          +     2.11477012099075 * H1x1_5  +     1.91368944483056 * H1x1_6
2329086   +          +     0.22313799249268 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.02774363171853 * H1x1_1 + 1.08006636098136 * H1x1_2 + 
-2.27078540572539 * H1x1_3 + -0.54968089382258 * H1x1_4 + 2.11477012099075 * H1x1_5 + 
1.91368944483056 * H1x1_6 + 0.22313799249268 * H1x1_7 ;
2329087   +   H2x1_5  =    -1.06933000183778 * H1x1_1  +     0.73081558484415 * H1x1_2
2329088   +          +    -0.78012012951065 * H1x1_3  +     0.81916081920412 * H1x1_4
2329089   +          +    -1.46358608086032 * H1x1_5  +     1.83492870022704 * H1x1_6
2329090   +          +     0.75554005406859 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.06933000183778 * H1x1_1 + 0.73081558484415 * H1x1_2 + 
-0.78012012951065 * H1x1_3 + 0.81916081920412 * H1x1_4 + -1.46358608086032 * H1x1_5 + 
1.83492870022704 * H1x1_6 + 0.75554005406859 * H1x1_7 ;
2329091   +   H2x1_6  =    -2.28576277725334 * H1x1_1  +    -0.32249555333061 * H1x1_2
2329092   +          +     3.41388795688866 * H1x1_3  +     3.30305437699117 * H1x1_4
2329093   +          +    -1.49237136034665 * H1x1_5  +    -1.64329313023006 * H1x1_6
2329094   +          +     3.08746595768905 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -2.28576277725334 * H1x1_1 + -0.32249555333061 * H1x1_2 + 
3.41388795688866 * H1x1_3 + 3.30305437699117 * H1x1_4 + -1.49237136034665 * H1x1_5 + 
-1.64329313023006 * H1x1_6 + 3.08746595768905 * H1x1_7 ;
2329095   +   H2x1_1  = H2x1_1  +    -2.56424783943845 * H1x2_1
2329096   +          +    -1.00213973107436 * H1x2_2  +    -0.47445930434013 * H1x2_3
2329097   +          +    -1.62372689856618 * H1x2_4  +     -1.1856250348479 * H1x2_5
2329098   +          +     0.04266758405533 * H1x2_6  +    -0.60071538153471 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.56424783943845 * H1x2_1 + -1.00213973107436 * 
H1x2_2 + -0.47445930434013 * H1x2_3 + -1.62372689856618 * H1x2_4 + -1.1856250348479 * H1x2_5 + 
0.04266758405533 * H1x2_6 + -0.60071538153471 * H1x2_7 ;
2329099   +   H2x1_2  = H2x1_2  +     0.00935939453146 * H1x2_1
2329100   +          +     0.55542862749222 * H1x2_2  +     -0.6066128025675 * H1x2_3
2329101   +          +    -0.53196514301497 * H1x2_4  +    -1.40549473181231 * H1x2_5
2329102   +          +    -0.08595621526876 * H1x2_6  +    -1.03953618328756 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.00935939453146 * H1x2_1 + 0.55542862749222 * H1x2_2 
+ -0.6066128025675 * H1x2_3 + -0.53196514301497 * H1x2_4 + -1.40549473181231 * H1x2_5 + 
-0.08595621526876 * H1x2_6 + -1.03953618328756 * H1x2_7 ;
2329103   +   H2x1_3  = H2x1_3  +    -1.41069312035355 * H1x2_1
2329104   +          +     0.56124490780446 * H1x2_2  +    -0.00472279335297 * H1x2_3
2329105   +          +    -1.10441771442377 * H1x2_4  +    -0.27090019786185 * H1x2_5
2329106   +          +    -0.15206855618217 * H1x2_6  +     -1.6035395520507 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -1.41069312035355 * H1x2_1 + 0.56124490780446 * H1x2_2 
+ -0.00472279335297 * H1x2_3 + -1.10441771442377 * H1x2_4 + -0.27090019786185 * H1x2_5 + 
-0.15206855618217 * H1x2_6 + -1.6035395520507 * H1x2_7 ;
2329107   +   H2x1_4  = H2x1_4  +    -0.55045399339183 * H1x2_1
2329108   +          +     0.02477552373088 * H1x2_2  +     0.19400769235958 * H1x2_3
2329109   +          +    -0.38264537483702 * H1x2_4  +     0.63479720884458 * H1x2_5
2329110   +          +    -0.60194629301645 * H1x2_6  +    -0.83490097285651 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.55045399339183 * H1x2_1 + 0.02477552373088 * H1x2_2 
+ 0.19400769235958 * H1x2_3 + -0.38264537483702 * H1x2_4 + 0.63479720884458 * H1x2_5 + 
-0.60194629301645 * H1x2_6 + -0.83490097285651 * H1x2_7 ;
2329111   +   H2x1_5  = H2x1_5  +    -1.03176133074695 * H1x2_1
2329112   +          +    -0.59926889064506 * H1x2_2  +    -1.07077012847053 * H1x2_3
2329113   +          +    -1.18998920291096 * H1x2_4  +     0.39150574258439 * H1x2_5
2329114   +          +     0.05580574741832 * H1x2_6  +    -0.32272109045259 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -1.03176133074695 * H1x2_1 + -0.59926889064506 * 
H1x2_2 + -1.07077012847053 * H1x2_3 + -1.18998920291096 * H1x2_4 + 0.39150574258439 * H1x2_5 + 
0.05580574741832 * H1x2_6 + -0.32272109045259 * H1x2_7 ;
2329115   +   H2x1_6  = H2x1_6  +    -0.61952040538587 * H1x2_1
2329116   +          +     0.35510185028829 * H1x2_2  +    -0.23901935720129 * H1x2_3
2329117   +          +     0.31752417497209 * H1x2_4  +    -1.20101515562967 * H1x2_5
2329118   +          +     0.95004398218762 * H1x2_6  +    -0.60363955740244 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.61952040538587 * H1x2_1 + 0.35510185028829 * H1x2_2 
+ -0.23901935720129 * H1x2_3 + 0.31752417497209 * H1x2_4 + -1.20101515562967 * H1x2_5 + 
0.95004398218762 * H1x2_6 + -0.60363955740244 * H1x2_7 ;
2329119   +   H2x1_1  = H2x1_1  +     0.74378922258523 * H1x3_1
2329120   +          +      0.4693103426831 * H1x3_2  +     0.82071786194731 * H1x3_3
2329121   +          +     0.46432194238141 * H1x3_4  +    -1.39760250161206 * H1x3_5
2329122   +          +     0.68725250578779 * H1x3_6  +    -0.98986331205144 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.74378922258523 * H1x3_1 + 0.4693103426831 * H1x3_2 + 
0.82071786194731 * H1x3_3 + 0.46432194238141 * H1x3_4 + -1.39760250161206 * H1x3_5 + 
0.68725250578779 * H1x3_6 + -0.98986331205144 * H1x3_7 ;
2329123   +   H2x1_2  = H2x1_2  +     0.48406734142754 * H1x3_1
2329124   +          +     1.24032575331626 * H1x3_2  +     0.10072816620895 * H1x3_3
2329125   +          +     -2.4915795108808 * H1x3_4  +    -1.20085587739472 * H1x3_5
2329126   +          +     2.57480977795816 * H1x3_6  +    -0.36127801521801 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.48406734142754 * H1x3_1 + 1.24032575331626 * H1x3_2 
+ 0.10072816620895 * H1x3_3 + -2.4915795108808 * H1x3_4 + -1.20085587739472 * H1x3_5 + 
2.57480977795816 * H1x3_6 + -0.36127801521801 * H1x3_7 ;
2329127   +   H2x1_3  = H2x1_3  +    -0.29392518978638 * H1x3_1
2329128   +          +     0.02884163093827 * H1x3_2  +     -0.7595494999576 * H1x3_3
2329129   +          +     0.32536537321799 * H1x3_4  +    -0.01283695014976 * H1x3_5
2329130   +          +     0.76895275927405 * H1x3_6  +     -0.2802859993784 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.29392518978638 * H1x3_1 + 0.02884163093827 * H1x3_2 
+ -0.7595494999576 * H1x3_3 + 0.32536537321799 * H1x3_4 + -0.01283695014976 * H1x3_5 + 
0.76895275927405 * H1x3_6 + -0.2802859993784 * H1x3_7 ;
2329131   +   H2x1_4  = H2x1_4  +     2.19833784150068 * H1x3_1
2329132   +          +     0.25528651098746 * H1x3_2  +    -0.72296156297186 * H1x3_3
2329133   +          +    -0.14360138590872 * H1x3_4  +     0.77657569331577 * H1x3_5
2329134   +          +    -1.57969278343415 * H1x3_6  +    -0.92288304588247 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 2.19833784150068 * H1x3_1 + 0.25528651098746 * H1x3_2 
+ -0.72296156297186 * H1x3_3 + -0.14360138590872 * H1x3_4 + 0.77657569331577 * H1x3_5 + 
-1.57969278343415 * H1x3_6 + -0.92288304588247 * H1x3_7 ;
2329135   +   H2x1_5  = H2x1_5  +     2.11753865409831 * H1x3_1
2329136   +          +     0.83654766112935 * H1x3_2  +     0.97472534941535 * H1x3_3
2329137   +          +     1.35030042962655 * H1x3_4  +     1.24680664824079 * H1x3_5
2329138   +          +     0.19234112612264 * H1x3_6  +    -0.90680244689294 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 2.11753865409831 * H1x3_1 + 0.83654766112935 * H1x3_2 
+ 0.97472534941535 * H1x3_3 + 1.35030042962655 * H1x3_4 + 1.24680664824079 * H1x3_5 + 
0.19234112612264 * H1x3_6 + -0.90680244689294 * H1x3_7 ;
2329139   +   H2x1_6  = H2x1_6  +     2.07923724911848 * H1x3_1
2329140   +          +     1.62526758922217 * H1x3_2  +    -0.68837627923045 * H1x3_3
2329141   +          +    -0.21127837456631 * H1x3_4  +    -1.47138526111866 * H1x3_5
2329142   +          +    -0.52275521204408 * H1x3_6  +    -0.36639952580044 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + 2.07923724911848 * H1x3_1 + 1.62526758922217 * H1x3_2 
+ -0.68837627923045 * H1x3_3 + -0.21127837456631 * H1x3_4 + -1.47138526111866 * H1x3_5 + 
-0.52275521204408 * H1x3_6 + -0.36639952580044 * H1x3_7 ;
2329143   +   H2x1_1  =    -1.05059672372056 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.05059672372056 + H2x1_1 ;
2329144   +   H2x1_2  =    -1.18404209429335 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.18404209429335 + H2x1_2 ;
2329145   +   H2x1_3  =    -0.76285494175137 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.76285494175137 + H2x1_3 ;
2329146   +   H2x1_4  =     2.22362261707253 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.22362261707253 + H2x1_4 ;
2329147   +   H2x1_5  =    -0.98793149966854 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.98793149966854 + H2x1_5 ;
2329148   +   H2x1_6  =     1.51370254076672 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.51370254076672 + H2x1_6 ;
2329149   +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
2329150   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
2329151   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , 
H2x1_7 );
2329152   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2329153   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
2329154   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
2329155   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
2329156   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
2329157   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
2329158   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
2329159   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
2329160   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
2329161   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
2329162   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
2329163   +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
2329164   +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
2329165   +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
2329166   +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
2329167   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
2329168   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
2329169   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
2329170   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
2329171   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
2329172   +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
2329173   +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
2329174   +END;
MPRINT(EM_DIAGRAM):   END;
2329175   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2329176   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2329177   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2329178   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2329179   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2329180   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2329181   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
2329182   +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
2329183   +END;
MPRINT(EM_DIAGRAM):   END;
2329184   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2329185   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
2329186   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2329187   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2329188   +   H2x2_1  =    -0.47079896252387 * H1x1_1  +      0.6132734714958 * H1x1_2
2329189   +          +     1.50300753820512 * H1x1_3  +     -0.1812621169129 * H1x1_4
2329190   +          +    -0.18531614991208 * H1x1_5  +     -0.2905105845089 * H1x1_6
2329191   +          +     1.33158539183491 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.47079896252387 * H1x1_1 + 0.6132734714958 * H1x1_2 + 
1.50300753820512 * H1x1_3 + -0.1812621169129 * H1x1_4 + -0.18531614991208 * H1x1_5 + 
-0.2905105845089 * H1x1_6 + 1.33158539183491 * H1x1_7 ;
2329192   +   H2x2_2  =    -1.90834701790953 * H1x1_1  +      0.6177658514697 * H1x1_2
2329193   +          +     0.36465199316418 * H1x1_3  +     0.85911870587838 * H1x1_4
2329194   +          +     0.02147610114602 * H1x1_5  +     0.32326590534391 * H1x1_6
2329195   +          +    -1.04241581652278 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.90834701790953 * H1x1_1 + 0.6177658514697 * H1x1_2 + 
0.36465199316418 * H1x1_3 + 0.85911870587838 * H1x1_4 + 0.02147610114602 * H1x1_5 + 
0.32326590534391 * H1x1_6 + -1.04241581652278 * H1x1_7 ;
2329196   +   H2x2_3  =       0.471130277999 * H1x1_1  +     0.96694465336161 * H1x1_2
2329197   +          +       0.141582035067 * H1x1_3  +     0.53325844993783 * H1x1_4
2329198   +          +     -0.0659115060565 * H1x1_5  +     0.38141753021852 * H1x1_6
2329199   +          +    -1.14139437080586 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.471130277999 * H1x1_1 + 0.96694465336161 * H1x1_2 + 
0.141582035067 * H1x1_3 + 0.53325844993783 * H1x1_4 + -0.0659115060565 * H1x1_5 + 
0.38141753021852 * H1x1_6 + -1.14139437080586 * H1x1_7 ;
2329200   +   H2x2_4  =     0.97070926632973 * H1x1_1  +    -0.13619191199121 * H1x1_2
2329201   +          +       0.111155554391 * H1x1_3  +    -0.50119055939436 * H1x1_4
2329202   +          +     -0.4478264228864 * H1x1_5  +    -0.07373167561096 * H1x1_6
2329203   +          +    -0.48838853015257 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.97070926632973 * H1x1_1 + -0.13619191199121 * H1x1_2 + 
0.111155554391 * H1x1_3 + -0.50119055939436 * H1x1_4 + -0.4478264228864 * H1x1_5 + 
-0.07373167561096 * H1x1_6 + -0.48838853015257 * H1x1_7 ;
2329204   +   H2x2_5  =    -0.97151785477215 * H1x1_1  +     0.21189203541458 * H1x1_2
2329205   +          +    -0.19596886882434 * H1x1_3  +      1.3474130560719 * H1x1_4
2329206   +          +     1.73119417991798 * H1x1_5  +    -0.03726270753922 * H1x1_6
2329207   +          +    -1.41850405567364 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.97151785477215 * H1x1_1 + 0.21189203541458 * H1x1_2 + 
-0.19596886882434 * H1x1_3 + 1.3474130560719 * H1x1_4 + 1.73119417991798 * H1x1_5 + 
-0.03726270753922 * H1x1_6 + -1.41850405567364 * H1x1_7 ;
2329208   +   H2x2_6  =     0.64188298957992 * H1x1_1  +     0.87835723870887 * H1x1_2
2329209   +          +     0.65705195530326 * H1x1_3  +    -1.37039626769544 * H1x1_4
2329210   +          +    -0.32238737127781 * H1x1_5  +     0.33986547881641 * H1x1_6
2329211   +          +    -0.39788950643812 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.64188298957992 * H1x1_1 + 0.87835723870887 * H1x1_2 + 
0.65705195530326 * H1x1_3 + -1.37039626769544 * H1x1_4 + -0.32238737127781 * H1x1_5 + 
0.33986547881641 * H1x1_6 + -0.39788950643812 * H1x1_7 ;
2329212   +   H2x2_1  = H2x2_1  +    -0.69934298550944 * H1x2_1
2329213   +          +    -0.34972890643898 * H1x2_2  +     0.13067071374168 * H1x2_3
2329214   +          +    -0.35163870866778 * H1x2_4  +     0.68739106758866 * H1x2_5
2329215   +          +    -0.13482628170329 * H1x2_6  +    -0.03659282127619 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.69934298550944 * H1x2_1 + -0.34972890643898 * 
H1x2_2 + 0.13067071374168 * H1x2_3 + -0.35163870866778 * H1x2_4 + 0.68739106758866 * H1x2_5 + 
-0.13482628170329 * H1x2_6 + -0.03659282127619 * H1x2_7 ;
2329216   +   H2x2_2  = H2x2_2  +    -0.16537065948373 * H1x2_1
2329217   +          +     1.88602375412723 * H1x2_2  +     0.00246313998608 * H1x2_3
2329218   +          +    -0.38678545162214 * H1x2_4  +     1.62314892910576 * H1x2_5
2329219   +          +     1.14369813266427 * H1x2_6  +    -0.04547589616076 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.16537065948373 * H1x2_1 + 1.88602375412723 * H1x2_2 
+ 0.00246313998608 * H1x2_3 + -0.38678545162214 * H1x2_4 + 1.62314892910576 * H1x2_5 + 
1.14369813266427 * H1x2_6 + -0.04547589616076 * H1x2_7 ;
2329220   +   H2x2_3  = H2x2_3  +     0.25040248389011 * H1x2_1
2329221   +          +    -1.56534319969402 * H1x2_2  +     0.07686150326519 * H1x2_3
2329222   +          +     -0.9279505919723 * H1x2_4  +    -0.40426942169792 * H1x2_5
2329223   +          +      0.0625082015929 * H1x2_6  +    -1.06140294711643 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.25040248389011 * H1x2_1 + -1.56534319969402 * H1x2_2 
+ 0.07686150326519 * H1x2_3 + -0.9279505919723 * H1x2_4 + -0.40426942169792 * H1x2_5 + 
0.0625082015929 * H1x2_6 + -1.06140294711643 * H1x2_7 ;
2329224   +   H2x2_4  = H2x2_4  +     -0.4384763018657 * H1x2_1
2329225   +          +    -1.45966734038116 * H1x2_2  +      -2.034771072409 * H1x2_3
The SAS System

2329226   +          +    -0.09055740067076 * H1x2_4  +     1.51504299287048 * H1x2_5
2329227   +          +     0.15439799867788 * H1x2_6  +    -1.11828371545771 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -0.4384763018657 * H1x2_1 + -1.45966734038116 * H1x2_2 
+ -2.034771072409 * H1x2_3 + -0.09055740067076 * H1x2_4 + 1.51504299287048 * H1x2_5 + 
0.15439799867788 * H1x2_6 + -1.11828371545771 * H1x2_7 ;
2329228   +   H2x2_5  = H2x2_5  +     1.25750321874643 * H1x2_1
2329229   +          +    -0.65639925770112 * H1x2_2  +     -1.7659580690496 * H1x2_3
2329230   +          +       0.375442412611 * H1x2_4  +     0.00802128415855 * H1x2_5
2329231   +          +     0.75342656671485 * H1x2_6  +     1.64939805941174 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.25750321874643 * H1x2_1 + -0.65639925770112 * H1x2_2 
+ -1.7659580690496 * H1x2_3 + 0.375442412611 * H1x2_4 + 0.00802128415855 * H1x2_5 + 
0.75342656671485 * H1x2_6 + 1.64939805941174 * H1x2_7 ;
2329232   +   H2x2_6  = H2x2_6  +     1.32293752617916 * H1x2_1
2329233   +          +     0.48969975153948 * H1x2_2  +    -0.72928783660254 * H1x2_3
2329234   +          +     0.84727905047749 * H1x2_4  +     0.04670520107938 * H1x2_5
2329235   +          +     2.02862934142232 * H1x2_6  +    -0.56510756043393 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 1.32293752617916 * H1x2_1 + 0.48969975153948 * H1x2_2 
+ -0.72928783660254 * H1x2_3 + 0.84727905047749 * H1x2_4 + 0.04670520107938 * H1x2_5 + 
2.02862934142232 * H1x2_6 + -0.56510756043393 * H1x2_7 ;
2329236   +   H2x2_1  = H2x2_1  +       1.744725276854 * H1x3_1
2329237   +          +     0.13060858789431 * H1x3_2  +    -0.96737787454303 * H1x3_3
2329238   +          +    -0.33966254732699 * H1x3_4  +     2.39360262119688 * H1x3_5
2329239   +          +     2.58016170780679 * H1x3_6  +    -0.61611732156494 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 1.744725276854 * H1x3_1 + 0.13060858789431 * H1x3_2 + 
-0.96737787454303 * H1x3_3 + -0.33966254732699 * H1x3_4 + 2.39360262119688 * H1x3_5 + 
2.58016170780679 * H1x3_6 + -0.61611732156494 * H1x3_7 ;
2329240   +   H2x2_2  = H2x2_2  +    -0.81180308935434 * H1x3_1
2329241   +          +    -1.15566778124471 * H1x3_2  +     0.08550916456261 * H1x3_3
2329242   +          +     0.54919117407314 * H1x3_4  +     0.18927188150893 * H1x3_5
2329243   +          +    -0.15464567766004 * H1x3_6  +     0.22152383228096 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.81180308935434 * H1x3_1 + -1.15566778124471 * 
H1x3_2 + 0.08550916456261 * H1x3_3 + 0.54919117407314 * H1x3_4 + 0.18927188150893 * H1x3_5 + 
-0.15464567766004 * H1x3_6 + 0.22152383228096 * H1x3_7 ;
2329244   +   H2x2_3  = H2x2_3  +    -0.57155391194888 * H1x3_1
2329245   +          +    -0.80109748621438 * H1x3_2  +     -1.0755749661031 * H1x3_3
2329246   +          +     1.03082070302539 * H1x3_4  +    -2.00320570042417 * H1x3_5
2329247   +          +    -1.96298435256616 * H1x3_6  +     1.02097262601001 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.57155391194888 * H1x3_1 + -0.80109748621438 * 
H1x3_2 + -1.0755749661031 * H1x3_3 + 1.03082070302539 * H1x3_4 + -2.00320570042417 * H1x3_5 + 
-1.96298435256616 * H1x3_6 + 1.02097262601001 * H1x3_7 ;
2329248   +   H2x2_4  = H2x2_4  +     0.24801772968599 * H1x3_1
2329249   +          +    -2.13175914157416 * H1x3_2  +    -0.52172370749235 * H1x3_3
2329250   +          +     2.04158456409986 * H1x3_4  +     1.02332318578438 * H1x3_5
2329251   +          +      -0.428263055638 * H1x3_6  +    -0.10602300040145 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.24801772968599 * H1x3_1 + -2.13175914157416 * H1x3_2 
+ -0.52172370749235 * H1x3_3 + 2.04158456409986 * H1x3_4 + 1.02332318578438 * H1x3_5 + 
-0.428263055638 * H1x3_6 + -0.10602300040145 * H1x3_7 ;
2329252   +   H2x2_5  = H2x2_5  +    -1.00177979562809 * H1x3_1
2329253   +          +    -0.45285333413007 * H1x3_2  +    -0.35882884863392 * H1x3_3
2329254   +          +     0.23001711273663 * H1x3_4  +     0.77235765656369 * H1x3_5
2329255   +          +    -0.04383242140243 * H1x3_6  +    -0.25926963615252 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -1.00177979562809 * H1x3_1 + -0.45285333413007 * 
H1x3_2 + -0.35882884863392 * H1x3_3 + 0.23001711273663 * H1x3_4 + 0.77235765656369 * H1x3_5 + 
-0.04383242140243 * H1x3_6 + -0.25926963615252 * H1x3_7 ;
2329256   +   H2x2_6  = H2x2_6  +     0.84797826043534 * H1x3_1
2329257   +          +    -0.46927154831713 * H1x3_2  +    -1.09865845985096 * H1x3_3
2329258   +          +     0.59699123454307 * H1x3_4  +     1.59564014754161 * H1x3_5
2329259   +          +     1.33413776227036 * H1x3_6  +     0.33047800872361 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.84797826043534 * H1x3_1 + -0.46927154831713 * H1x3_2 
+ -1.09865845985096 * H1x3_3 + 0.59699123454307 * H1x3_4 + 1.59564014754161 * H1x3_5 + 
1.33413776227036 * H1x3_6 + 0.33047800872361 * H1x3_7 ;
2329260   +   H2x2_1  =    -3.05344936388855 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -3.05344936388855 + H2x2_1 ;
2329261   +   H2x2_2  =     0.31382645894355 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.31382645894355 + H2x2_2 ;
2329262   +   H2x2_3  =     0.31718668306888 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.31718668306888 + H2x2_3 ;
2329263   +   H2x2_4  =    -0.72340666209054 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.72340666209054 + H2x2_4 ;
2329264   +   H2x2_5  =    -0.59585228872544 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.59585228872544 + H2x2_5 ;
2329265   +   H2x2_6  =    -1.34027540207713 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = -1.34027540207713 + H2x2_6 ;
2329266   +   H2x2_7  = 0;
MPRINT(EM_DIAGRAM):   H2x2_7 = 0;
2329267   +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 , H2x2_7
2329268   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 , 
H2x2_7 );
2329269   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2329270   +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
2329271   +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
2329272   +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
2329273   +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
2329274   +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
2329275   +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
2329276   +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
2329277   +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
2329278   +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
2329279   +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
2329280   +   H2x2_6  = EXP(H2x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_6 = EXP(H2x2_6 - _MAX_);
2329281   +   _SUM_ = _SUM_ + H2x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_6 ;
2329282   +   H2x2_7  = EXP(H2x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_7 = EXP(H2x2_7 - _MAX_);
2329283   +   _SUM_ = _SUM_ + H2x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_7 ;
2329284   +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
2329285   +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
2329286   +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
2329287   +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
2329288   +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
2329289   +   H2x2_6  = H2x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 / _SUM_;
2329290   +   H2x2_7  = H2x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_7 = H2x2_7 / _SUM_;
2329291   +END;
MPRINT(EM_DIAGRAM):   END;
2329292   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2329293   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
2329294   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
2329295   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
2329296   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
2329297   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
2329298   +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
2329299   +   H2x2_7  = .;
MPRINT(EM_DIAGRAM):   H2x2_7 = .;
2329300   +END;
MPRINT(EM_DIAGRAM):   END;
2329301   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2329302   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
2329303   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2329304   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2329305   +   H3x1_1  =    -0.39436867680464 * H2x1_1  +    -0.20604911710368 * H2x1_2
2329306   +          +     0.29458107927185 * H2x1_3  +     0.66102662477481 * H2x1_4
2329307   +          +     0.62143406345506 * H2x1_5  +     2.63969484891539 * H2x1_6
2329308   +          +     2.03785323055294 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.39436867680464 * H2x1_1 + -0.20604911710368 * H2x1_2 + 
0.29458107927185 * H2x1_3 + 0.66102662477481 * H2x1_4 + 0.62143406345506 * H2x1_5 + 
2.63969484891539 * H2x1_6 + 2.03785323055294 * H2x1_7 ;
2329309   +   H3x1_2  =     0.14668618790671 * H2x1_1  +     0.53251535375334 * H2x1_2
2329310   +          +     1.73802487245889 * H2x1_3  +    -0.48818058655944 * H2x1_4
2329311   +          +     -0.6987810213409 * H2x1_5  +     1.61216865707221 * H2x1_6
2329312   +          +     0.02086486846601 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.14668618790671 * H2x1_1 + 0.53251535375334 * H2x1_2 + 
1.73802487245889 * H2x1_3 + -0.48818058655944 * H2x1_4 + -0.6987810213409 * H2x1_5 + 
1.61216865707221 * H2x1_6 + 0.02086486846601 * H2x1_7 ;
2329313   +   H3x1_3  =    -1.14054963328594 * H2x1_1  +    -0.75433574423253 * H2x1_2
2329314   +          +     0.06268113862558 * H2x1_3  +     -0.3981826777811 * H2x1_4
2329315   +          +    -0.04081627474016 * H2x1_5  +    -0.18547979458266 * H2x1_6
2329316   +          +     0.40248247309716 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.14054963328594 * H2x1_1 + -0.75433574423253 * H2x1_2 + 
0.06268113862558 * H2x1_3 + -0.3981826777811 * H2x1_4 + -0.04081627474016 * H2x1_5 + 
-0.18547979458266 * H2x1_6 + 0.40248247309716 * H2x1_7 ;
2329317   +   H3x1_4  =    -0.41046431364634 * H2x1_1  +     0.53558649664528 * H2x1_2
2329318   +          +     0.25426413492282 * H2x1_3  +     2.32537388539524 * H2x1_4
2329319   +          +    -0.95624400041487 * H2x1_5  +     -2.1423043357326 * H2x1_6
2329320   +          +     0.70189203885946 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.41046431364634 * H2x1_1 + 0.53558649664528 * H2x1_2 + 
0.25426413492282 * H2x1_3 + 2.32537388539524 * H2x1_4 + -0.95624400041487 * H2x1_5 + 
-2.1423043357326 * H2x1_6 + 0.70189203885946 * H2x1_7 ;
2329321   +   H3x1_5  =    -0.21139932639331 * H2x1_1  +      0.8853172209881 * H2x1_2
2329322   +          +    -0.23025284278478 * H2x1_3  +     1.30433450594503 * H2x1_4
2329323   +          +     1.26145590014333 * H2x1_5  +     0.63126627865104 * H2x1_6
2329324   +          +    -1.88455429451452 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -0.21139932639331 * H2x1_1 + 0.8853172209881 * H2x1_2 + 
-0.23025284278478 * H2x1_3 + 1.30433450594503 * H2x1_4 + 1.26145590014333 * H2x1_5 + 
0.63126627865104 * H2x1_6 + -1.88455429451452 * H2x1_7 ;
2329325   +   H3x1_6  =     0.99645242104414 * H2x1_1  +    -0.17835964967148 * H2x1_2
2329326   +          +     0.06539648561603 * H2x1_3  +     0.97412284078325 * H2x1_4
2329327   +          +     -1.3247680635275 * H2x1_5  +      0.8723025918678 * H2x1_6
2329328   +          +    -0.04328836172134 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.99645242104414 * H2x1_1 + -0.17835964967148 * H2x1_2 + 
0.06539648561603 * H2x1_3 + 0.97412284078325 * H2x1_4 + -1.3247680635275 * H2x1_5 + 
0.8723025918678 * H2x1_6 + -0.04328836172134 * H2x1_7 ;
2329329   +   H3x1_7  =     2.66887548952929 * H2x1_1  +    -0.86289888310949 * H2x1_2
2329330   +          +     1.58137421487648 * H2x1_3  +    -1.37105839507635 * H2x1_4
2329331   +          +    -0.65069986041129 * H2x1_5  +     2.50322156288062 * H2x1_6
2329332   +          +     0.75157328436087 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = 2.66887548952929 * H2x1_1 + -0.86289888310949 * H2x1_2 + 
1.58137421487648 * H2x1_3 + -1.37105839507635 * H2x1_4 + -0.65069986041129 * H2x1_5 + 
2.50322156288062 * H2x1_6 + 0.75157328436087 * H2x1_7 ;
2329333   +   H3x1_1  = H3x1_1  +     1.55317132694755 * H2x2_1
2329334   +          +     1.75656976582641 * H2x2_2  +    -1.25361089552085 * H2x2_3
2329335   +          +    -0.52984461837677 * H2x2_4  +     1.29915117873447 * H2x2_5
2329336   +          +    -1.03942372926622 * H2x2_6  +     0.13722887717178 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 1.55317132694755 * H2x2_1 + 1.75656976582641 * H2x2_2 
+ -1.25361089552085 * H2x2_3 + -0.52984461837677 * H2x2_4 + 1.29915117873447 * H2x2_5 + 
-1.03942372926622 * H2x2_6 + 0.13722887717178 * H2x2_7 ;
2329337   +   H3x1_2  = H3x1_2  +     0.88902418392614 * H2x2_1
2329338   +          +     1.35198205638356 * H2x2_2  +     1.49845421410078 * H2x2_3
2329339   +          +    -1.22318137674998 * H2x2_4  +     1.03485654068494 * H2x2_5
2329340   +          +    -0.88760495649169 * H2x2_6  +    -1.94135868960024 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.88902418392614 * H2x2_1 + 1.35198205638356 * H2x2_2 
+ 1.49845421410078 * H2x2_3 + -1.22318137674998 * H2x2_4 + 1.03485654068494 * H2x2_5 + 
-0.88760495649169 * H2x2_6 + -1.94135868960024 * H2x2_7 ;
2329341   +   H3x1_3  = H3x1_3  +     -0.5232166311723 * H2x2_1
2329342   +          +    -0.49154441995792 * H2x2_2  +     1.21222773866672 * H2x2_3
2329343   +          +     0.88954765096374 * H2x2_4  +     0.32666743913318 * H2x2_5
2329344   +          +     1.26201705110892 * H2x2_6  +    -2.46564869578322 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.5232166311723 * H2x2_1 + -0.49154441995792 * H2x2_2 
+ 1.21222773866672 * H2x2_3 + 0.88954765096374 * H2x2_4 + 0.32666743913318 * H2x2_5 + 
1.26201705110892 * H2x2_6 + -2.46564869578322 * H2x2_7 ;
2329345   +   H3x1_4  = H3x1_4  +     0.93897688204524 * H2x2_1
2329346   +          +    -0.56396325682963 * H2x2_2  +     0.60312223662348 * H2x2_3
2329347   +          +     0.05506195666559 * H2x2_4  +    -1.19478701476792 * H2x2_5
2329348   +          +     1.11111060864544 * H2x2_6  +     0.07602420470068 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.93897688204524 * H2x2_1 + -0.56396325682963 * H2x2_2 
+ 0.60312223662348 * H2x2_3 + 0.05506195666559 * H2x2_4 + -1.19478701476792 * H2x2_5 + 
1.11111060864544 * H2x2_6 + 0.07602420470068 * H2x2_7 ;
2329349   +   H3x1_5  = H3x1_5  +    -2.04067007195299 * H2x2_1
2329350   +          +    -0.24511447740547 * H2x2_2  +      1.1403782608351 * H2x2_3
2329351   +          +     0.28313253531571 * H2x2_4  +    -0.31001305293935 * H2x2_5
2329352   +          +     1.43972694265244 * H2x2_6  +     0.27081966717726 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -2.04067007195299 * H2x2_1 + -0.24511447740547 * 
H2x2_2 + 1.1403782608351 * H2x2_3 + 0.28313253531571 * H2x2_4 + -0.31001305293935 * H2x2_5 + 
1.43972694265244 * H2x2_6 + 0.27081966717726 * H2x2_7 ;
2329353   +   H3x1_6  = H3x1_6  +     1.53918759970091 * H2x2_1
2329354   +          +    -1.36834652818881 * H2x2_2  +    -0.97354088259421 * H2x2_3
2329355   +          +     0.73052173697294 * H2x2_4  +     1.34716412811946 * H2x2_5
2329356   +          +     1.66261041249676 * H2x2_6  +    -0.99719318696356 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + 1.53918759970091 * H2x2_1 + -1.36834652818881 * H2x2_2 
+ -0.97354088259421 * H2x2_3 + 0.73052173697294 * H2x2_4 + 1.34716412811946 * H2x2_5 + 
1.66261041249676 * H2x2_6 + -0.99719318696356 * H2x2_7 ;
2329357   +   H3x1_7  = H3x1_7  +     1.11994694673604 * H2x2_1
2329358   +          +     -1.6803356528873 * H2x2_2  +    -0.12962793678977 * H2x2_3
2329359   +          +    -0.71896094589725 * H2x2_4  +     0.46037684620833 * H2x2_5
2329360   +          +     0.25911483872618 * H2x2_6  +     1.00876479730932 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = H3x1_7 + 1.11994694673604 * H2x2_1 + -1.6803356528873 * H2x2_2 
+ -0.12962793678977 * H2x2_3 + -0.71896094589725 * H2x2_4 + 0.46037684620833 * H2x2_5 + 
0.25911483872618 * H2x2_6 + 1.00876479730932 * H2x2_7 ;
2329361   +   H3x1_1  =     1.52228889950912 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.52228889950912 + H3x1_1 ;
2329362   +   H3x1_2  =    -0.46625781761332 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.46625781761332 + H3x1_2 ;
2329363   +   H3x1_3  =     0.11008388635615 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.11008388635615 + H3x1_3 ;
2329364   +   H3x1_4  =    -0.38333236869719 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.38333236869719 + H3x1_4 ;
2329365   +   H3x1_5  =    -1.36620648378402 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -1.36620648378402 + H3x1_5 ;
2329366   +   H3x1_6  =     0.41780608126276 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.41780608126276 + H3x1_6 ;
2329367   +   H3x1_7  =    -0.69490040783623 + H3x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = -0.69490040783623 + H3x1_7 ;
2329368   +   H3x1_1  = SIN(H3x1_1 );
MPRINT(EM_DIAGRAM):   H3x1_1 = SIN(H3x1_1 );
2329369   +   H3x1_2  = SIN(H3x1_2 );
MPRINT(EM_DIAGRAM):   H3x1_2 = SIN(H3x1_2 );
2329370   +   H3x1_3  = SIN(H3x1_3 );
MPRINT(EM_DIAGRAM):   H3x1_3 = SIN(H3x1_3 );
2329371   +   H3x1_4  = SIN(H3x1_4 );
MPRINT(EM_DIAGRAM):   H3x1_4 = SIN(H3x1_4 );
2329372   +   H3x1_5  = SIN(H3x1_5 );
MPRINT(EM_DIAGRAM):   H3x1_5 = SIN(H3x1_5 );
2329373   +   H3x1_6  = SIN(H3x1_6 );
MPRINT(EM_DIAGRAM):   H3x1_6 = SIN(H3x1_6 );
2329374   +   H3x1_7  = SIN(H3x1_7 );
MPRINT(EM_DIAGRAM):   H3x1_7 = SIN(H3x1_7 );
2329375   +END;
MPRINT(EM_DIAGRAM):   END;
2329376   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2329377   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
2329378   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
2329379   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
2329380   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
2329381   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
2329382   +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
2329383   +   H3x1_7  = .;
MPRINT(EM_DIAGRAM):   H3x1_7 = .;
2329384   +END;
MPRINT(EM_DIAGRAM):   END;
2329385   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2329386   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2329387   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2329388   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2329389   +   P_DepVar1  =    -2.07102874283902 * H3x1_1  +     2.04799607124649 * H3x1_2
2329390   +          +    -0.05444449856749 * H3x1_3  +    -3.76440287030853 * H3x1_4
2329391   +          +    -0.62776678498994 * H3x1_5  +    -1.00383135301243 * H3x1_6
2329392   +          +     2.26027843968818 * H3x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.07102874283902 * H3x1_1 + 2.04799607124649 * H3x1_2 + 
-0.05444449856749 * H3x1_3 + -3.76440287030853 * H3x1_4 + -0.62776678498994 * H3x1_5 + 
-1.00383135301243 * H3x1_6 + 2.26027843968818 * H3x1_7 ;
2329393   +   P_DepVar1  =     0.51137297979162 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.51137297979162 + P_DepVar1 ;
2329394   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2329395   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2329396   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2329397   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2329398   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2329399   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2329400   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2329401   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2329402   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2329403   +END;
MPRINT(EM_DIAGRAM):   END;
2329404   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2329405   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2329406   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2329407   +END;
MPRINT(EM_DIAGRAM):   END;
2329408   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2329409   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2329410   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2329411   +END;
MPRINT(EM_DIAGRAM):   END;
2329412   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2329413   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2329414   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2329415   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2329416   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2329417   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2329418   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2329419   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2329420   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2329421   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2329422   +END;
MPRINT(EM_DIAGRAM):   END;
2329423   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2329424   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2329425   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2329426   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2329427    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2329428    quit;
2329429    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2329430    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2329431    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2329432    retain ID 2 Node "AutoNeural12";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural12";
2329433    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2329434    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16616 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16616 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

2329435    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2329436    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2329437    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16616 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16616 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

2329438    proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME 
CREATOR);
2329439    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2329440    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL12_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2329441    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2329442    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2329443    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2329444    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2329445    proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
2329446    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 95 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2329447    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2329448    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2329449    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 95 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 95 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2329450    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2329451    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2329452    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2329453    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 95 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 95 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2329454    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2329455    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2329455  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 8011 rows and 5 columns.

2329456    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2329457    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2329458    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 8011 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 8011 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2329459    filename _pref
2329459  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2329460    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2329461    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2329462   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2329463   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2329464   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2329465   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2329466   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2329467   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2329468    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2329469    quit;
2329470    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2329471    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2329472    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2329473    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2329474    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2329475    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2329476    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2329477    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2329478    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2329479    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2329480    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2329481    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2329482    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2329483    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2329484    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2329485    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2329486    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2329487    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2329488    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2329489    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2329490    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2329491    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2329492    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2329493    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2329494    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2329495    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2329496    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2329496  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2329497    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2329498    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2329499    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 8015 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2329500    filename _pref
2329500  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2329501    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2329502    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2329503   +
2329504   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2329505   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2329505  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2329506   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2329507   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2329508   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2329509   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2329510   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2329511    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2329512    quit;
2329513    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2329514    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2329515    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2329516    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2329517    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2329518    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2329519    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2329520    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2329521    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2329522    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2329523    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2329524    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2329525    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2329526    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2329527    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2329528    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2329529    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2329530    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2329531    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2329532    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2329533    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2329534    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2329535    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2329536    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2329537    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2329538    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2329539    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2329539  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2329540    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2329541    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2329542    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 8054 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2329543    filename _pref
2329543  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2329544    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2329545    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2329546   +
2329547   +
2329548   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2329549   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2329550   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2329551   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2329552   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2329553   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2329554   +
2329555   +
2329556   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2329557   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2329558   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2329559   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2329560   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2329561   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2329562   +
2329563   +
2329564   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2329565   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2329566   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2329567   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2329568   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2329569   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2329570   +
2329571   +
2329572   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2329573   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2329574   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2329575   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2329576   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2329577   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2329578   +
2329579   +
2329580   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2329581   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2329582   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2329583   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2329584   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2329585   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2329586   +
2329587   +
2329588   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2329589   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2329590   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2329591   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2329592   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2329593   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2329594   +
2329595   +
2329596   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2329597   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2329598   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2329599   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2329600   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2329601   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2329602   +
2329603   +
2329604   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2329605   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2329606   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2329607   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2329608   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2329609   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2329610   +if
2329611   +_FILTERNORM1 not in ( '.')
2329612   + and
2329613   +_FILTERNORM2 not in ( '.')
2329614   + and
2329615   +_FILTERNORM3 not in ( '.')
2329616   + and
2329617   +_FILTERNORM4 not in ( '.')
2329618   + and
2329619   +_FILTERNORM5 not in ( '.')
2329620   + and
2329621   +_FILTERNORM6 not in ( '.')
2329622   + and
2329623   +_FILTERNORM7 not in ( ' ')
2329624   + and
2329625   +_FILTERNORM8 not in ( ' ')
2329626   +and
2329627   +( Dt_Customer ne .)
2329628   +and ( Income ne . and (Income<=107000))
2329629   +and ( Kidhome ne .)
2329630   +and ( MntFishProducts ne .)
2329631   +and ( MntFruits ne .)
2329632   +and ( MntGoldProds ne .)
2329633   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2329634   +and ( MntSweetProducts ne .)
2329635   +and ( MntWines ne .)
2329636   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2329637   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2329638   +and ( NumStorePurchases ne .)
2329639   +and ( NumWebPurchases ne .)
2329640   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2329641   +and ( Recency ne .)
2329642   +and ( Teenhome ne .)
2329643   +and ( Year_Birth ne .)
2329644   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2329645   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2329646   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2329647   +end;
MPRINT(EM_DIAGRAM):   end;
2329648   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2329649   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2329650    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2329651    quit;
2329652    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2329653    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2329654    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2329655    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2329656    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2329657    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2329658    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2329659    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2329660    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2329661    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2329662    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2329663    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2329664    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2329665    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2329666    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2329667    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2329668    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2329669    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2329670    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2329671    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2329672    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2329673    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2329674    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2329675    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2329676    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2329677    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2329678    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2329678  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2329679    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2329680    proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl38_FCMP data=_tempx;
2329681    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL38_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL38_FCMP has 8120 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2329682    %macro varDept(fcmpdata=,id=);
2329683    %global nobs&id scoreFlag&id;
2329684    %let scoreFlag&id = 0;
2329685    %if &id=1 or ^&fcmpStart %then %do;
2329686    proc sort data=&fcmpdata out=_temp&id nodupkey;
2329687    by NAME;
2329688    where id=&id and LHS in( %let j=1;
2329689    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2329690    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2329691    "&var" %let j = %eval(&j+1);
2329692    %end;
2329693    );
2329694    run;
2329695    %let dsid = %sysfunc(open(_temp&id));
2329696    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2329697    %let dsid = %sysfunc(close(&dsid));
2329698    %if &&nobs&id %then %do;
2329699    %let scoreFlag&id = 1;
2329700    %let fcmpStart = 1;
2329701    %end;
2329702    %else %let fcmpStart = 0;
2329703    %end;
2329704    %else %do;
2329705    proc sort data=&fcmpdata out=_tempid;
2329706    where id=&id;
2329707    by LHS;
2329708    run;
2329709    %let dsid = %sysfunc(open(_tempid));
2329710    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2329711    %let dsid = %sysfunc(close(&dsid));
2329712    %if ^&&nobs&id %then %do;
2329713    proc datasets lib=work nolist;
2329714    delete _tempid;
2329715    run;
2329716    quit;
2329717    %end;
2329718    %else %do;
2329719    data _tempAll;
2329720    set %let j=%eval(&id-1);
2329721    %do x=1 %to &j;
2329722    %if &&nobs&x %then %do;
2329723    _temp&x %end;
2329724    %end;
2329725    ;
2329726    run;
2329727    proc sql;
2329728    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2329728  ! work._tempid p2 where p.name=p2.lhs;
2329729    quit;
2329730    data _temp&id;
2329731    set _temp&id;
2329732    where LHS ne '' and NAME ne '' and Node ne '';
2329733    run;
2329734    proc datasets lib=work nolist;
2329735    delete _tempAll;
2329736    run;
2329737    %let dsid = %sysfunc(open(_temp&id));
2329738    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2329739    %let dsid = %sysfunc(close(&dsid));
2329740    %if ^&&nobs&id %then %do;
2329741    proc datasets lib=work nolist;
2329742    delete _temp&id;
2329743    run;
2329744    quit;
2329745    %end;
2329746    %else %do;
2329747    %let scoreFlag&id = 1;
2329748    data _temp&id;
2329749    set _temp&id;
2329750    where LHS ne NAME and node ne '';
2329751    run;
2329752    %let dsid = %sysfunc(open(_temp&id));
2329753    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2329754    %let dsid = %sysfunc(close(&dsid));
2329755    %if ^&&nobs&id %then %do;
2329756    proc datasets lib=work nolist;
2329757    delete _temp&id;
2329758    run;
2329759    quit;
2329760    %end;
2329761    %else %do;
2329762    proc sort data=_temp&id nodupkey;
2329763    by LHS NAME;
2329764    run;
2329765    %end;
2329766    %end;
2329767    %end;
2329768    %end;
2329769    %mend varDept;
2329770    %macro optCode(outdata=fcmpdata);
2329771    %global fcmpStart;
2329772    %let fcmpStart = 0;
2329773    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2329774    %let NumNodes=9;
2329775    %do k=1 %to &NumNodes;
2329776    %vardept(fcmpdata=&outdata, id=&k);
2329777    %end;
2329778    %mend optCode;
2329779    %optcode(outData=EMWS8.Ensmbl38_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 260 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 184 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 76 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 76 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 76 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 76 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 80 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 76 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 119 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.20 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl38_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2329780    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2329781    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2329782    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2329783    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2329784    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2329785    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2329786    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2329787    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2329788    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2329789    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2329789  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

2329790    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2329791    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2329792    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2329793    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2329794    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2329795    * Ensmbl38: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Computing metadata for TRAIN data;
2329796    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL38_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl38\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl38_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl38_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl38_TRAIN out=WORK.M2PYXQLO noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2PYXQLO;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2PYXQLO(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2PYXQLO;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2PYXQLO;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0TGK5GE NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0TGK5GE;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0TGK5GE;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0A7JSNT(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0TGK5GE;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0TGK5GE;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0TGK5GE;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0TGK5GE;
MPRINT(EMADVISECOLUMNS):   set WORK.M0TGK5GE;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural6_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural6_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl38_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl38";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl38";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl38";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl38";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl38";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl38";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl38";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl38";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl38";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl38";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl38: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" 
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl38";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
2330116    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
2330117    set EMWS8.Ensmbl38_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl38_EMINFO;
2330118    where DATA='Ensmbl38' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl38' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
2330119    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.ENSMBL38_EMINFO.
      WHERE (DATA='Ensmbl38') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2330120    data EMWS8.Ensmbl38_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl38_EMINFO;
2330121    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
2330122    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
2330123    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL38_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
2330127    run;
2330128    data EMWS8.Ensmbl38_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl38_EMINFO;
2330129    set EMWS8.Ensmbl38_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl38_EMINFO WORK.MODELTEMP_INFO;
2330130    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL38_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL38_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2330131    proc sort data = EMWS8.Ensmbl38_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl38_EMINFO NOTHREADS;
2330132    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2330133    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL38_EMINFO.
NOTE: The data set EMWS8.ENSMBL38_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2330134    proc sort data = EMWS8.AutoNeural6_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural6_EMINFO OUT=WORK.SORTEDEMINFO 
NOTHREADS;
2330135    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2330136    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.AUTONEURAL6_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2330137    proc sort data = EMWS8.Ensmbl38_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl38_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
2330138    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2330139    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL38_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2330140    data EMWS8.Ensmbl38_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl38_EMINFO;
2330141    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
2330142    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2330143    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL38_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2330144    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
2330145    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
2330146    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
2330147    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

NOTE: View EMWS8.ENSMBL38_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
NOTE: View EMWS8.ENSMBL38_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
