*------------------------------------------------------------*
User:                Lukas Fahr
Date:                28. April 2016
Time:                19.52 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.52 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                28. April 2016
Time:                19.52 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O057FN1L
"C:\\predictive-models-project\Workspaces\EMWS8\DMNeural3\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O057FN1L new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\DMNeural3\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.52 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\DMNeural3\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\DMNeural3\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\DMNeural3\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\DMNeural3\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.52 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\DMNeural3\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\DMNeural3\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\DMNeural3\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\DMNeural3\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
724960     proc freq data=EMWS8.DMNeural3_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.DMNeural3_VariableSet noprint;
724961     table ROLE*LEVEL/out=WORK.DMNeural3META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.DMNeural3META;
724962     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.DMNEURAL3_VARIABLESET.
NOTE: The data set WORK.DMNEURAL3META has 6 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
724963     proc print data=WORK.DMNeural3META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.DMNeural3META label noobs;
724964     var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
724965     label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
724965   ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
724965   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
724966     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
724967     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
724968     run;
 
NOTE: There were 6 observations read from the data set WORK.DMNEURAL3META.
NOTE: The PROCEDURE PRINT printed page 530.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
724969     title10;
MPRINT(EM_DIAGRAM):   title10;
724970     %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.Meta3_TRAIN EMWS8.Meta3_TRAIN
EMWS8.Meta3_TRAIN EMWS8.Meta3_TRAIN EMWS8 Meta3_TRAIN
EMWS8.Meta3_TRAIN EMWS8.Meta3_TRAIN
EMWS8.Meta3_TRAIN EMWS8.Meta3_TRAIN EMWS8 Meta3_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.Meta3_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _sortedDecData;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural3_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.DMNeural3_DepVar_DD;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural3_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.DMNeural3_DepVar_DD;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural3_DepVar_DD;
MPRINT(EM_DIAGRAM):   merge EMWS8.DMNeural3_DepVar_DD
_TEMPCLASS(rename=(NMISSPERCENT=TRAINPRIOR FREQUENCY=COUNT));
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.DMNeural3_DepVar_DD
out=EMWS8.DMNeural3_DepVar_DD(drop=_levelorder_);
MPRINT(EM_DIAGRAM):   by _levelorder_;
MPRINT(EM_DIAGRAM):   run;
725017     data WORK.DMNeural3_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.DMNeural3_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
725018     length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
725019     label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
725019   ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
725019   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
725020        "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
725020   ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
725020   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
725021     set EMWS8.DMNEURAL3_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.DMNEURAL3_DEPVAR_DM( where=(_TYPE_="TARGET"));
725022     NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
725023     select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
725024     when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
725025     when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
725026     when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
725027     when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
725028     otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
725029     end;
MPRINT(EM_DIAGRAM):   end;
725030     output;
MPRINT(EM_DIAGRAM):   output;
725031     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.DMNEURAL3_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.DMNEURAL3_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
725032     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
725033     proc print data=WORK.DMNeural3_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.DMNeural3_EVENT noobs label;
725034     var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
725035     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
725036     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
725037     run;
 
NOTE: There were 1 observations read from the data set WORK.DMNEURAL3_EVENT.
NOTE: The PROCEDURE PRINT printed page 531.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
725038     title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
725039     proc print data = EMWS8.DMNeural3_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.DMNeural3_DepVar_DM noobs label;
725040     var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
725041     where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
725042     label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
725042   ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
725042   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
725043     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
725044     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
725045     run;
 
NOTE: There were 7 observations read from the data set EMWS8.DMNEURAL3_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 532.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
725046     title10;
MPRINT(EM_DIAGRAM):   title10;
725047     data WORK.M2ZK0LB7;
MPRINT(EM_DIAGRAM):    data WORK.M2ZK0LB7;
725048     set WORK.M2ZK0LB7;
MPRINT(EM_DIAGRAM):   set WORK.M2ZK0LB7;
725049     if role = 'TARGET' and use = 'Y' then do;
MPRINT(EM_DIAGRAM):   if role = 'TARGET' and use = 'Y' then do;
725050     role = 'TARGET';
MPRINT(EM_DIAGRAM):   role = 'TARGET';
725051     output;
MPRINT(EM_DIAGRAM):   output;
725052     end;
MPRINT(EM_DIAGRAM):   end;
725053     if role = 'INPUT' and use in ('Y','D') then do;
MPRINT(EM_DIAGRAM):   if role = 'INPUT' and use in ('Y','D') then do;
725054     role = 'INPUT';
MPRINT(EM_DIAGRAM):   role = 'INPUT';
725055     output;
MPRINT(EM_DIAGRAM):   output;
725056     end;
MPRINT(EM_DIAGRAM):   end;
725057     if role = 'REJECTED' and use = 'Y' then do;
MPRINT(EM_DIAGRAM):   if role = 'REJECTED' and use = 'Y' then do;
725058     role = 'INPUT';
MPRINT(EM_DIAGRAM):   role = 'INPUT';
725059     output;
MPRINT(EM_DIAGRAM):   output;
725060     end;
MPRINT(EM_DIAGRAM):   end;
725061     if role = 'FREQ' then do;
MPRINT(EM_DIAGRAM):   if role = 'FREQ' then do;
725062     role = 'FREQ';
MPRINT(EM_DIAGRAM):   role = 'FREQ';
725063     output;
MPRINT(EM_DIAGRAM):   output;
725064     end;
MPRINT(EM_DIAGRAM):   end;
725065     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK.M2ZK0LB7.
NOTE: The data set WORK.M2ZK0LB7 has 10 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
725066     data WORK.M2ZK0LB7;
MPRINT(EM_DIAGRAM):    data WORK.M2ZK0LB7;
725067     set WORK.M2ZK0LB7 end=eof;
MPRINT(EM_DIAGRAM):   set WORK.M2ZK0LB7 end=eof;
725068     output;
MPRINT(EM_DIAGRAM):   output;
725069     if eof then do;
MPRINT(EM_DIAGRAM):   if eof then do;
725070     NAME="";
MPRINT(EM_DIAGRAM):   NAME="";
725071     ROLE="COST";
MPRINT(EM_DIAGRAM):   ROLE="COST";
725072     LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
725073     TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
725074     output;
MPRINT(EM_DIAGRAM):   output;
725075     end;
MPRINT(EM_DIAGRAM):   end;
725076     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK.M2ZK0LB7.
NOTE: The data set WORK.M2ZK0LB7 has 11 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: There were 2 observations read from the data set EMWS8.DMNEURAL3_DEPVAR_DD.
NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
725077     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
725078     * DMNeural3: Create decision matrix;
MPRINT(EM_DIAGRAM):   * DMNeural3: Create decision matrix;
725079     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
725080     data WORK.DepVar;
MPRINT(EM_DIAGRAM):   data WORK.DepVar;
725081       length   DepVar                           $  32
725082                COUNT                                8
725083                DATAPRIOR                            8
725084                TRAINPRIOR                           8
725085                DECPRIOR                             8
725086                DECISION1                            8
725087                DECISION2                            8
725088                ;
MPRINT(EM_DIAGRAM):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1
8 DECISION2 8 ;
725089
725090       label    COUNT="Level Counts"
725091                DATAPRIOR="Data Proportions"
725092                TRAINPRIOR="Training Proportions"
725093                DECPRIOR="Decision Priors"
725094                DECISION1="1"
725095                DECISION2="0"
725096                ;
MPRINT(EM_DIAGRAM):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR=
"Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
725097       format   COUNT 10.
725098                ;
MPRINT(EM_DIAGRAM):   format COUNT 10. ;
725099     DepVar="1"; COUNT=359; DATAPRIOR=0.151221567; TRAINPRIOR=0.15122156697556;
725099   ! DECPRIOR=.; DECISION1=1; DECISION2=0;
MPRINT(EM_DIAGRAM):   DepVar="1";
MPRINT(EM_DIAGRAM):   COUNT=359;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.151221567;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.15122156697556;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=1;
MPRINT(EM_DIAGRAM):   DECISION2=0;
725100     output;
MPRINT(EM_DIAGRAM):   output;
725101     DepVar="0"; COUNT=2015; DATAPRIOR=0.848778433; TRAINPRIOR=0.84877843302443;
725101   ! DECPRIOR=.; DECISION1=0; DECISION2=1;
MPRINT(EM_DIAGRAM):   DepVar="0";
MPRINT(EM_DIAGRAM):   COUNT=2015;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.848778433;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.84877843302443;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=0;
MPRINT(EM_DIAGRAM):   DECISION2=1;
725102     output;
MPRINT(EM_DIAGRAM):   output;
725103     ;
MPRINT(EM_DIAGRAM):   ;
725104     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
725105     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
725106     modify DepVar(type=PROFIT label=DepVar);
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= '1';
MPRINT(EM_DIAGRAM):   label DECISION2= '0';
MPRINT(EM_DIAGRAM):   run;
725107     label DECISION1= '1';
725108     label DECISION2= '0';
725109     run;
 
NOTE: MODIFY was successful for WORK.DEPVAR.DATA.
725110     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * DMNeural3: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
725111     *------------------------------------------------------------* ;
725112     * DMNeural3: DMDBClass Macro ;
725113     *------------------------------------------------------------* ;
725114     %macro DMDBClass;
725115         DepVar(DESC) Marital_Status(ASC)
725116     %mend DMDBClass;
725117     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
725118     * DMNeural3: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * DMNeural3: DMDBVar Macro ;
725119     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
725120     %macro DMDBVar;
725121         AcceptedCmpTotal Frq Mnt MntMeatProducts NumCatalogPurchases NumDealsPurchases
725122        NumWebVisitsMonth Recency
725123     %mend DMDBVar;
725124     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
725125     * DMNeural3: Create DMDB;
MPRINT(EM_DIAGRAM):   * DMNeural3: Create DMDB;
725126     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
725127     proc dmdb batch data=EMWS8.Meta3_TRAIN
725128     dmdbcat=WORK.DMNeural3_DMDB
725129     maxlevel = 513
725130     ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.Meta3_TRAIN dmdbcat=WORK.DMNeural3_DMDB
maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
725131     class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC) Marital_Status(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
725132     var %DMDBVar;
MPRINT(DMDBVAR):   AcceptedCmpTotal Frq Mnt MntMeatProducts NumCatalogPurchases
NumDealsPurchases NumWebVisitsMonth Recency
MPRINT(EM_DIAGRAM):  ;
725133     target
725134     DepVar
725135     ;
MPRINT(EM_DIAGRAM):   target DepVar ;
725136     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: View EMWS8.META3_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META3_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
725137     quit;
725138     *--- end code ---*;
 
725139     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
725140     * DMNeural3: Input Variables Macro ;
MPRINT(EM_DIAGRAM):   * DMNeural3: Input Variables Macro ;
725141     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
725142     %macro INPUTS;
725143         AcceptedCmpTotal Frq Marital_Status Mnt MntMeatProducts NumCatalogPurchases
725144        NumDealsPurchases NumWebVisitsMonth Recency
725145     %mend INPUTS;
725146     proc dmneurl data=EMWS8.Meta3_TRAIN dmdbcat=WORK.DMNeural3_DMDB
725147     outest=EMWS8.DMNeural3_ESTIMATE outfit=WORK._OUTFIT_DMNEURAL
725148     out=WORK._OUT_DMNEURAL outclass=WORK._OUTCLASSDMNEURL_22F2_N5
725149     optcrit=ACC maxcomp=6 maxstage=10 maxfunc=1000
725150     selcrit=SSE
725151     maxiter=400 maxvect=800 memsiz=8 stopr2=0.00005 cutoff=0.5 maxrows = 3000
725152     absgconv=0.0005 gconv=1E-8
725153     NOMONITOR
725154     ;
MPRINT(EM_DIAGRAM):   proc dmneurl data=EMWS8.Meta3_TRAIN dmdbcat=WORK.DMNeural3_DMDB
outest=EMWS8.DMNeural3_ESTIMATE outfit=WORK._OUTFIT_DMNEURAL out=WORK._OUT_DMNEURAL
outclass=WORK._OUTCLASSDMNEURL_22F2_N5 optcrit=ACC maxcomp=6 maxstage=10 maxfunc=1000
selcrit=SSE maxiter=400 maxvect=800 memsiz=8 stopr2=0.00005 cutoff=0.5 maxrows = 3000
absgconv=0.0005 gconv=1E-8 NOMONITOR ;
MPRINT(EM_DIAGRAM):   var
725155     var %INPUTS;
MPRINT(INPUTS):   AcceptedCmpTotal Frq Marital_Status Mnt MntMeatProducts NumCatalogPurchases
NumDealsPurchases NumWebVisitsMonth Recency
MPRINT(EM_DIAGRAM):  ;
725156     target DepVar;
MPRINT(EM_DIAGRAM):   target DepVar;
725157     ;
MPRINT(EM_DIAGRAM):   ;
725158     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._OUTCLASSDMNEURL_22F2_N5 has 7 observations and 3 variables.
 
Building X'X  for target: DepVar rows=14 memory=0.00 meg.
2374 records read
2374 records read
2374 records read
2374 records read
2374 records read
NOTE: Distinctive Patterns=1096
NOTE: Sparsity  Percentage=0.0309331714
     ---------- Optimization Cycle (Stage=0) ----------
-------------------- Activation= SQUARE (Stage=0) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: SQUARE: Iter=5 Crit=0.03170999: SSE=301.118095 Acc= 91.3227
-------------------- Activation= TANH (Stage=0) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: TANH: Iter=12 Crit=0.03186976: SSE=302.635268 Acc= 91.1120
-------------------- Activation= ARCTAN (Stage=0) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: ARCTAN: Iter=6 Crit=0.03284259: SSE= 311.87328 Acc= 90.6487
-------------------- Activation= LOGIST (Stage=0) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=2.
NOTE: LOGIST: Iter=28 Crit=0.03409399: SSE=323.756537 Acc= 90.2275
-------------------- Activation= GAUSS (Stage=0) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=8.
NOTE: GAUSS: Iter=5 Crit=0.06361243: SSE=604.063592 Acc= 84.8778
-------------------- Activation= SIN (Stage=0) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: SIN: Iter=16 Crit=0.03179708: SSE=301.945054 Acc= 91.1963
-------------------- Activation= COS (Stage=0) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: COS: Iter=6 Crit=0.05270147: SSE=500.453192 Acc= 86.3521
-------------------- Activation= EXP (Stage=0) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: EXP: Iter=16 Crit=0.03471742: SSE=329.676603 Acc= 90.2275
2374 records read
2374 records read
2374 records read
2374 records read
NOTE: Distinctive Patterns=931
NOTE: Sparsity  Percentage=0.0262762614
2374 records read
     ---------- Optimization Cycle (Stage=1) ----------
-------------------- Activation= SQUARE (Stage=1) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: SQUARE: Iter=1 Crit=0.02731774: SSE=255.882091 Acc= 93.0076
-------------------- Activation= TANH (Stage=1) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: TANH: Iter=4 Crit= 0.0274228: SSE=257.082297 Acc= 92.9655
-------------------- Activation= ARCTAN (Stage=1) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=2.
NOTE: ARCTAN: Iter=6 Crit=0.02741029: SSE=257.032387 Acc= 92.9233
-------------------- Activation= LOGIST (Stage=1) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: LOGIST: Iter=5 Crit=0.02744099: SSE=257.437833 Acc= 92.8812
-------------------- Activation= GAUSS (Stage=1) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=2.
NOTE: GAUSS: Iter=5 Crit=0.02911324: SSE=276.387405 Acc= 92.4600
-------------------- Activation= SIN (Stage=1) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: SIN: Iter=4 Crit=0.02745054: SSE=257.530251 Acc= 92.7970
-------------------- Activation= COS (Stage=1) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=3.
NOTE: COS: Iter=8 Crit=0.02905472: SSE=275.724547 Acc= 92.3336
-------------------- Activation= EXP (Stage=1) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: EXP: Iter=4 Crit=0.02731208: SSE=256.361162 Acc= 93.0076
2374 records read
2374 records read
2374 records read
2374 records read
NOTE: Distinctive Patterns=929
NOTE: Sparsity  Percentage=0.0262198141
2374 records read
     ---------- Optimization Cycle (Stage=2) ----------
-------------------- Activation= SQUARE (Stage=2) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: SQUARE: Iter=1 Crit=0.02621583: SSE=242.971664 Acc= 93.3446
-------------------- Activation= TANH (Stage=2) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: TANH: Iter=9 Crit=0.02646784: SSE=244.571606 Acc= 93.0076
-------------------- Activation= ARCTAN (Stage=2) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: ARCTAN: Iter=12 Crit=0.02639913: SSE=244.042071 Acc= 93.0076
-------------------- Activation= LOGIST (Stage=2) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: LOGIST: Iter=7 Crit=0.02632123: SSE=243.290109 Acc= 93.0918
-------------------- Activation= GAUSS (Stage=2) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: GAUSS: Iter=4 Crit=0.02624949: SSE=245.453103 Acc= 93.0497
-------------------- Activation= SIN (Stage=2) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=2.
NOTE: SIN: Iter=5 Crit=0.02670362: SSE=248.337725 Acc= 92.9655
-------------------- Activation= COS (Stage=2) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=3.
NOTE: COS: Iter=5 Crit=0.02691373: SSE=253.334178 Acc= 93.1340
-------------------- Activation= EXP (Stage=2) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: EXP: Iter=2 Crit=0.02651344: SSE=245.485417 Acc= 93.0918
2374 records read
2374 records read
2374 records read
2374 records read
NOTE: Distinctive Patterns=1252
NOTE: Sparsity  Percentage=0.035336068
2374 records read
     ---------- Optimization Cycle (Stage=3) ----------
-------------------- Activation= SQUARE (Stage=3) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: SQUARE: Iter=1 Crit=0.02628694: SSE=243.921703 Acc= 93.3024
-------------------- Activation= TANH (Stage=3) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: TANH: Iter=4 Crit=0.02635426: SSE=244.505097 Acc= 93.3024
-------------------- Activation= ARCTAN (Stage=3) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=2.
NOTE: ARCTAN: Iter=4 Crit=0.02635638: SSE=244.452327 Acc= 93.3024
-------------------- Activation= LOGIST (Stage=3) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: LOGIST: Iter=1 Crit=0.02635482: SSE=244.476512 Acc= 93.3024
-------------------- Activation= GAUSS (Stage=3) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=4.
NOTE: GAUSS: Iter=3 Crit=0.02637154: SSE=244.576712 Acc= 93.3024
-------------------- Activation= SIN (Stage=3) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=4.
NOTE: SIN: Iter=6 Crit=0.02635643: SSE=244.391777 Acc= 93.3024
-------------------- Activation= COS (Stage=3) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=4.
NOTE: COS: Iter=9 Crit=0.02634361: SSE=244.105341 Acc= 93.3446
-------------------- Activation= EXP (Stage=3) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: EXP: Iter=2 Crit=0.02634066: SSE=244.370751 Acc= 93.3024
2374 records read
2374 records read
2374 records read
2374 records read
NOTE: Distinctive Patterns=1098
NOTE: Sparsity  Percentage=0.0309896188
2374 records read
     ---------- Optimization Cycle (Stage=4) ----------
-------------------- Activation= SQUARE (Stage=4) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: SQUARE: Iter=1 Crit=0.02627769: SSE=243.275279 Acc= 93.3446
-------------------- Activation= TANH (Stage=4) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=2.
NOTE: TANH: Iter=6 Crit=0.02627665: SSE=243.333169 Acc= 93.4288
-------------------- Activation= ARCTAN (Stage=4) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=3.
NOTE: ARCTAN: Iter=4 Crit=0.02629428: SSE=243.304725 Acc= 93.4709
-------------------- Activation= LOGIST (Stage=4) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=4.
NOTE: LOGIST: Iter=0 Crit=0.02632946: SSE= 243.93486 Acc= 93.3867
-------------------- Activation= GAUSS (Stage=4) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: GAUSS: Iter=5 Crit= 0.0263209: SSE=244.348664 Acc= 93.3024
-------------------- Activation= SIN (Stage=4) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=2.
NOTE: SIN: Iter=4 Crit= 0.0262986: SSE=242.964669 Acc= 93.4288
-------------------- Activation= COS (Stage=4) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=6.
NOTE: COS: Iter=4 Crit=0.02633903: SSE=244.134815 Acc= 93.3446
-------------------- Activation= EXP (Stage=4) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=2.
NOTE: EXP: Iter=2 Crit=0.02629177: SSE= 243.28563 Acc= 93.4709
2374 records read
2374 records read
2374 records read
2374 records read
NOTE: Distinctive Patterns=346
NOTE: Sparsity  Percentage=12.997746056
2374 records read
     ---------- Optimization Cycle (Stage=5) ----------
-------------------- Activation= SQUARE (Stage=5) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: SQUARE: Iter=1 Crit=0.02620705: SSE=242.897014 Acc= 93.2603
-------------------- Activation= TANH (Stage=5) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: TANH: Iter=5 Crit=0.02629798: SSE=243.030527 Acc= 93.3024
-------------------- Activation= ARCTAN (Stage=5) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: ARCTAN: Iter=3 Crit= 0.0263054: SSE=243.399341 Acc= 93.3867
-------------------- Activation= LOGIST (Stage=5) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=2.
NOTE: LOGIST: Iter=2 Crit=0.02630326: SSE=243.177018 Acc= 93.3446
-------------------- Activation= GAUSS (Stage=5) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: GAUSS: Iter=6 Crit=0.02623057: SSE=242.911179 Acc= 93.4288
-------------------- Activation= SIN (Stage=5) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: SIN: Iter=3 Crit=0.02629568: SSE=243.147519 Acc= 93.3024
-------------------- Activation= COS (Stage=5) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=3.
NOTE: COS: Iter=4 Crit=0.02629559: SSE=243.076577 Acc= 93.4288
-------------------- Activation= EXP (Stage=5) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: EXP: Iter=1 Crit=0.02629277: SSE=242.976576 Acc= 93.3024
2374 records read
NOTE: The data set EMWS8.DMNEURAL3_ESTIMATE has 87 observations and 19 variables.
2374 records read
NOTE: The data set WORK._OUT_DMNEURAL has 2374 observations and 4 variables.
NOTE: The data set WORK._OUTFIT_DMNEURAL has 7 observations and 9 variables.
*** Total Number of Runs through Data :       32
*** Total Number of NL Optimizations  :       48
*** Total Number of Iterations in NLP :      257
*** Total Number Function Calls in NLP:      543
NOTE: View EMWS8.META3_TRAIN.VIEW used (Total process time):
      real time           23.79 seconds
      cpu time            23.77 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: The PROCEDURE DMNEURL printed pages 533-554.
NOTE: PROCEDURE DMNEURL used (Total process time):
      real time           23.79 seconds
      cpu time            23.77 seconds
 
 
725159     data WORK._OUTFIT_DMNEURAL;
MPRINT(EM_DIAGRAM):    data WORK._OUTFIT_DMNEURAL;
725160     set WORK._OUTFIT_DMNEURAL;
MPRINT(EM_DIAGRAM):   set WORK._OUTFIT_DMNEURAL;
725161     if _TYPE_^='_FITIND_' then delete;
MPRINT(EM_DIAGRAM):   if _TYPE_^='_FITIND_' then delete;
725162     label _STAGE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_stage, noquote))"
725162   ! ;
MPRINT(EM_DIAGRAM):   label _STAGE_ = "Training Stage";
725163     _STAGE_=_STAGE_-1;
MPRINT(EM_DIAGRAM):   _STAGE_=_STAGE_-1;
 
NOTE: There were 7 observations read from the data set WORK._OUTFIT_DMNEURAL.
NOTE: The data set WORK._OUTFIT_DMNEURAL has 6 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
725164     proc transpose data=WORK._OUTFIT_DMNEURAL out=WORK._OUTFIT_DMNEURAL prefix=TRAINING;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._OUTFIT_DMNEURAL out=WORK._OUTFIT_DMNEURAL
prefix=TRAINING;
 
NOTE: There were 6 observations read from the data set WORK._OUTFIT_DMNEURAL.
NOTE: The data set WORK._OUTFIT_DMNEURAL has 6 observations and 8 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
725165     data WORK._OUTFIT_DMNEURAL;
MPRINT(EM_DIAGRAM):   data WORK._OUTFIT_DMNEURAL;
725166     set WORK._OUTFIT_DMNEURAL;
MPRINT(EM_DIAGRAM):   set WORK._OUTFIT_DMNEURAL;
725167     label _NAME_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_stat, noquote))";
MPRINT(EM_DIAGRAM):   label _NAME_ = "Statistic";
725168     label _LABEL_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_statlabel,
725168   ! noquote))";
MPRINT(EM_DIAGRAM):   label _LABEL_ = "Label of Statistic";
725169     rename _NAME_=STATISTIC;
MPRINT(EM_DIAGRAM):   rename _NAME_=STATISTIC;
725170     rename _LABEL_=LABEL;
MPRINT(EM_DIAGRAM):   rename _LABEL_=LABEL;
725171     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._OUTFIT_DMNEURAL.
NOTE: The data set WORK._OUTFIT_DMNEURAL has 6 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
725172     data WORK._DSSTAGEDMNEURL_22F2_N5;
MPRINT(EM_DIAGRAM):    data WORK._DSSTAGEDMNEURL_22F2_N5;
725173     set EMWS8.DMNeural3_ESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural3_ESTIMATE;
725174     by _STAGE_;
MPRINT(EM_DIAGRAM):   by _STAGE_;
725175     if _TYPE_^='_EIGVEC_' then delete;
MPRINT(EM_DIAGRAM):   if _TYPE_^='_EIGVEC_' then delete;
725176     keep _STAGE_ _NAME_;
MPRINT(EM_DIAGRAM):   keep _STAGE_ _NAME_;
725177     if FIRST._STAGE_ then output;
MPRINT(EM_DIAGRAM):   if FIRST._STAGE_ then output;
725178     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 87 observations read from the data set EMWS8.DMNEURAL3_ESTIMATE.
NOTE: The data set WORK._DSSTAGEDMNEURL_22F2_N5 has 6 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
725179     data WORK._DSSTDMEANDMNEURL_22F2_N5;
MPRINT(EM_DIAGRAM):    data WORK._DSSTDMEANDMNEURL_22F2_N5;
725180     set EMWS8.DMNeural3_ESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural3_ESTIMATE;
725181     if _TYPE_='_STDEV_' or _TYPE_='_MEAN_' then output;
MPRINT(EM_DIAGRAM):   if _TYPE_='_STDEV_' or _TYPE_='_MEAN_' then output;
725182     DROP _TARGET_ _NAME_ _STAGE_ _MEAN_ _STDEV_;
MPRINT(EM_DIAGRAM):   DROP _TARGET_ _NAME_ _STAGE_ _MEAN_ _STDEV_;
725183     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 87 observations read from the data set EMWS8.DMNEURAL3_ESTIMATE.
NOTE: The data set WORK._DSSTDMEANDMNEURL_22F2_N5 has 2 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
725184     data WORK._DSPARADMNEURL_22F2_N5;
MPRINT(EM_DIAGRAM):    data WORK._DSPARADMNEURL_22F2_N5;
725185     set EMWS8.DMNeural3_ESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural3_ESTIMATE;
725186     if _TYPE_='_PARMS_' then if _STAGE_=0 then output;
MPRINT(EM_DIAGRAM):   if _TYPE_='_PARMS_' then if _STAGE_=0 then output;
725187     if _TYPE_='_PARMS_' then if _STAGE_=1 then output;
MPRINT(EM_DIAGRAM):   if _TYPE_='_PARMS_' then if _STAGE_=1 then output;
725188     if _TYPE_='_PARMS_' then if _STAGE_=2 then output;
MPRINT(EM_DIAGRAM):   if _TYPE_='_PARMS_' then if _STAGE_=2 then output;
725189     if _TYPE_='_PARMS_' then if _STAGE_=3 then output;
MPRINT(EM_DIAGRAM):   if _TYPE_='_PARMS_' then if _STAGE_=3 then output;
725190     if _TYPE_='_PARMS_' then if _STAGE_=4 then output;
MPRINT(EM_DIAGRAM):   if _TYPE_='_PARMS_' then if _STAGE_=4 then output;
725191     if _TYPE_='_PARMS_' then if _STAGE_=5 then output;
MPRINT(EM_DIAGRAM):   if _TYPE_='_PARMS_' then if _STAGE_=5 then output;
725192     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 87 observations read from the data set EMWS8.DMNEURAL3_ESTIMATE.
NOTE: The data set WORK._DSPARADMNEURL_22F2_N5 has 48 observations and 19 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
725193     data WORK._DSPARADMNEURL_22F2_N5;
MPRINT(EM_DIAGRAM):    data WORK._DSPARADMNEURL_22F2_N5;
725194     set WORK._DSPARADMNEURL_22F2_N5;
MPRINT(EM_DIAGRAM):   set WORK._DSPARADMNEURL_22F2_N5;
725195     by _STAGE_;
MPRINT(EM_DIAGRAM):   by _STAGE_;
725196     if FIRST._STAGE_ then output;
MPRINT(EM_DIAGRAM):   if FIRST._STAGE_ then output;
725197     DROP _TARGET_ _TYPE_ _MEAN_ _STDEV_ _NAME_ _STAGE_;
MPRINT(EM_DIAGRAM):   DROP _TARGET_ _TYPE_ _MEAN_ _STDEV_ _NAME_ _STAGE_;
 
NOTE: There were 48 observations read from the data set WORK._DSPARADMNEURL_22F2_N5.
NOTE: The data set WORK._DSPARADMNEURL_22F2_N5 has 6 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
725198     proc transpose data=WORK._DSPARADMNEURL_22F2_N5 out=WORK._DSPARADMNEURL_22F2_N5
725198   ! prefix=STAGE;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._DSPARADMNEURL_22F2_N5
out=WORK._DSPARADMNEURL_22F2_N5 prefix=STAGE;
 
NOTE: There were 6 observations read from the data set WORK._DSPARADMNEURL_22F2_N5.
NOTE: The data set WORK._DSPARADMNEURL_22F2_N5 has 13 observations and 8 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
725199     proc transpose data=WORK._DSPARADMNEURL_22F2_N5 out=WORK._DSPARADMNEURL_22F2_N5
725199   ! prefix=PARA;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._DSPARADMNEURL_22F2_N5
out=WORK._DSPARADMNEURL_22F2_N5 prefix=PARA;
725200     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK._DSPARADMNEURL_22F2_N5.
NOTE: The data set WORK._DSPARADMNEURL_22F2_N5 has 6 observations and 14 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
725201     data WORK._OUTCLASSDMNEURL_22F2_N5;
MPRINT(EM_DIAGRAM):    data WORK._OUTCLASSDMNEURL_22F2_N5;
725202     set WORK._OUTCLASSDMNEURL_22F2_N5;
MPRINT(EM_DIAGRAM):   set WORK._OUTCLASSDMNEURL_22F2_N5;
725203     if upcase(_VAR_)=upcase('DepVar') then delete;
MPRINT(EM_DIAGRAM):   if upcase(_VAR_)=upcase('DepVar') then delete;
725204     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._OUTCLASSDMNEURL_22F2_N5.
NOTE: The data set WORK._OUTCLASSDMNEURL_22F2_N5 has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
725205     data WORK._SPRIN0;
MPRINT(EM_DIAGRAM):    data WORK._SPRIN0;
725206     set EMWS8.DMNeural3_ESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural3_ESTIMATE;
725207     if _TYPE_^='_EIGVEC_' then delete;
MPRINT(EM_DIAGRAM):   if _TYPE_^='_EIGVEC_' then delete;
725208     if _STAGE_ ^='0' then delete;
MPRINT(EM_DIAGRAM):   if _STAGE_ ^='0' then delete;
725209     drop _TARGET_ _TYPE_ _STAGE_ _NAME_ _MEAN_ _STDEV_;
MPRINT(EM_DIAGRAM):   drop _TARGET_ _TYPE_ _STAGE_ _NAME_ _MEAN_ _STDEV_;
 
NOTE: Character values have been converted to numeric values at the places given by:
      (Line):(Column).
      725208:14
NOTE: There were 87 observations read from the data set EMWS8.DMNEURAL3_ESTIMATE.
NOTE: The data set WORK._SPRIN0 has 6 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
725210     proc transpose data=WORK._SPRIN0 out=WORK._SPRIN0 prefix=_SPRIN0;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._SPRIN0 out=WORK._SPRIN0 prefix=_SPRIN0;
 
NOTE: There were 6 observations read from the data set WORK._SPRIN0.
NOTE: The data set WORK._SPRIN0 has 13 observations and 8 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
725211     data WORK._SPRIN0;
MPRINT(EM_DIAGRAM):   data WORK._SPRIN0;
725212     set WORK._SPRIN0;
MPRINT(EM_DIAGRAM):   set WORK._SPRIN0;
725213     if _SPRIN01=. then delete;
MPRINT(EM_DIAGRAM):   if _SPRIN01=. then delete;
725214     /* to delete _v_ variables */
 
NOTE: There were 13 observations read from the data set WORK._SPRIN0.
NOTE: The data set WORK._SPRIN0 has 13 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
725215     proc transpose data=WORK._SPRIN0 out=WORK._SPRIN0;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._SPRIN0 out=WORK._SPRIN0;
725216     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK._SPRIN0.
NOTE: The data set WORK._SPRIN0 has 6 observations and 14 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
725217     data WORK._SPRIN1;
MPRINT(EM_DIAGRAM):    data WORK._SPRIN1;
725218     set EMWS8.DMNeural3_ESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural3_ESTIMATE;
725219     if _TYPE_^='_EIGVEC_' then delete;
MPRINT(EM_DIAGRAM):   if _TYPE_^='_EIGVEC_' then delete;
725220     if _STAGE_ ^='1' then delete;
MPRINT(EM_DIAGRAM):   if _STAGE_ ^='1' then delete;
725221     drop _TARGET_ _TYPE_ _STAGE_ _NAME_ _MEAN_ _STDEV_;
MPRINT(EM_DIAGRAM):   drop _TARGET_ _TYPE_ _STAGE_ _NAME_ _MEAN_ _STDEV_;
 
NOTE: Character values have been converted to numeric values at the places given by:
      (Line):(Column).
      725220:14
NOTE: There were 87 observations read from the data set EMWS8.DMNEURAL3_ESTIMATE.
NOTE: The data set WORK._SPRIN1 has 6 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
725222     proc transpose data=WORK._SPRIN1 out=WORK._SPRIN1 prefix=_SPRIN1;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._SPRIN1 out=WORK._SPRIN1 prefix=_SPRIN1;
 
NOTE: There were 6 observations read from the data set WORK._SPRIN1.
NOTE: The data set WORK._SPRIN1 has 13 observations and 8 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
725223     data WORK._SPRIN1;
MPRINT(EM_DIAGRAM):   data WORK._SPRIN1;
725224     set WORK._SPRIN1;
MPRINT(EM_DIAGRAM):   set WORK._SPRIN1;
725225     if _SPRIN11=. then delete;
MPRINT(EM_DIAGRAM):   if _SPRIN11=. then delete;
725226     /* to delete _v_ variables */
 
NOTE: There were 13 observations read from the data set WORK._SPRIN1.
NOTE: The data set WORK._SPRIN1 has 13 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
725227     proc transpose data=WORK._SPRIN1 out=WORK._SPRIN1;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._SPRIN1 out=WORK._SPRIN1;
725228     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK._SPRIN1.
NOTE: The data set WORK._SPRIN1 has 6 observations and 14 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
725229     data WORK._SPRIN2;
MPRINT(EM_DIAGRAM):    data WORK._SPRIN2;
725230     set EMWS8.DMNeural3_ESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural3_ESTIMATE;
725231     if _TYPE_^='_EIGVEC_' then delete;
MPRINT(EM_DIAGRAM):   if _TYPE_^='_EIGVEC_' then delete;
725232     if _STAGE_ ^='2' then delete;
MPRINT(EM_DIAGRAM):   if _STAGE_ ^='2' then delete;
725233     drop _TARGET_ _TYPE_ _STAGE_ _NAME_ _MEAN_ _STDEV_;
MPRINT(EM_DIAGRAM):   drop _TARGET_ _TYPE_ _STAGE_ _NAME_ _MEAN_ _STDEV_;
 
NOTE: Character values have been converted to numeric values at the places given by:
      (Line):(Column).
      725232:14
NOTE: There were 87 observations read from the data set EMWS8.DMNEURAL3_ESTIMATE.
NOTE: The data set WORK._SPRIN2 has 6 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
725234     proc transpose data=WORK._SPRIN2 out=WORK._SPRIN2 prefix=_SPRIN2;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._SPRIN2 out=WORK._SPRIN2 prefix=_SPRIN2;
 
NOTE: There were 6 observations read from the data set WORK._SPRIN2.
NOTE: The data set WORK._SPRIN2 has 13 observations and 8 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
725235     data WORK._SPRIN2;
MPRINT(EM_DIAGRAM):   data WORK._SPRIN2;
725236     set WORK._SPRIN2;
MPRINT(EM_DIAGRAM):   set WORK._SPRIN2;
725237     if _SPRIN21=. then delete;
MPRINT(EM_DIAGRAM):   if _SPRIN21=. then delete;
725238     /* to delete _v_ variables */
 
NOTE: There were 13 observations read from the data set WORK._SPRIN2.
NOTE: The data set WORK._SPRIN2 has 13 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
725239     proc transpose data=WORK._SPRIN2 out=WORK._SPRIN2;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._SPRIN2 out=WORK._SPRIN2;
725240     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK._SPRIN2.
NOTE: The data set WORK._SPRIN2 has 6 observations and 14 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
725241     data WORK._SPRIN3;
MPRINT(EM_DIAGRAM):    data WORK._SPRIN3;
725242     set EMWS8.DMNeural3_ESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural3_ESTIMATE;
725243     if _TYPE_^='_EIGVEC_' then delete;
MPRINT(EM_DIAGRAM):   if _TYPE_^='_EIGVEC_' then delete;
725244     if _STAGE_ ^='3' then delete;
MPRINT(EM_DIAGRAM):   if _STAGE_ ^='3' then delete;
725245     drop _TARGET_ _TYPE_ _STAGE_ _NAME_ _MEAN_ _STDEV_;
MPRINT(EM_DIAGRAM):   drop _TARGET_ _TYPE_ _STAGE_ _NAME_ _MEAN_ _STDEV_;
 
NOTE: Character values have been converted to numeric values at the places given by:
      (Line):(Column).
      725244:14
NOTE: There were 87 observations read from the data set EMWS8.DMNEURAL3_ESTIMATE.
NOTE: The data set WORK._SPRIN3 has 6 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
725246     proc transpose data=WORK._SPRIN3 out=WORK._SPRIN3 prefix=_SPRIN3;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._SPRIN3 out=WORK._SPRIN3 prefix=_SPRIN3;
 
NOTE: There were 6 observations read from the data set WORK._SPRIN3.
NOTE: The data set WORK._SPRIN3 has 13 observations and 8 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
725247     data WORK._SPRIN3;
MPRINT(EM_DIAGRAM):   data WORK._SPRIN3;
725248     set WORK._SPRIN3;
MPRINT(EM_DIAGRAM):   set WORK._SPRIN3;
725249     if _SPRIN31=. then delete;
MPRINT(EM_DIAGRAM):   if _SPRIN31=. then delete;
725250     /* to delete _v_ variables */
 
NOTE: There were 13 observations read from the data set WORK._SPRIN3.
NOTE: The data set WORK._SPRIN3 has 13 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
725251     proc transpose data=WORK._SPRIN3 out=WORK._SPRIN3;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._SPRIN3 out=WORK._SPRIN3;
725252     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK._SPRIN3.
NOTE: The data set WORK._SPRIN3 has 6 observations and 14 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
725253     data WORK._SPRIN4;
MPRINT(EM_DIAGRAM):    data WORK._SPRIN4;
725254     set EMWS8.DMNeural3_ESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural3_ESTIMATE;
725255     if _TYPE_^='_EIGVEC_' then delete;
MPRINT(EM_DIAGRAM):   if _TYPE_^='_EIGVEC_' then delete;
725256     if _STAGE_ ^='4' then delete;
MPRINT(EM_DIAGRAM):   if _STAGE_ ^='4' then delete;
725257     drop _TARGET_ _TYPE_ _STAGE_ _NAME_ _MEAN_ _STDEV_;
MPRINT(EM_DIAGRAM):   drop _TARGET_ _TYPE_ _STAGE_ _NAME_ _MEAN_ _STDEV_;
 
NOTE: Character values have been converted to numeric values at the places given by:
      (Line):(Column).
      725256:14
NOTE: There were 87 observations read from the data set EMWS8.DMNEURAL3_ESTIMATE.
NOTE: The data set WORK._SPRIN4 has 6 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
725258     proc transpose data=WORK._SPRIN4 out=WORK._SPRIN4 prefix=_SPRIN4;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._SPRIN4 out=WORK._SPRIN4 prefix=_SPRIN4;
 
NOTE: There were 6 observations read from the data set WORK._SPRIN4.
NOTE: The data set WORK._SPRIN4 has 13 observations and 8 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
725259     data WORK._SPRIN4;
MPRINT(EM_DIAGRAM):   data WORK._SPRIN4;
725260     set WORK._SPRIN4;
MPRINT(EM_DIAGRAM):   set WORK._SPRIN4;
725261     if _SPRIN41=. then delete;
MPRINT(EM_DIAGRAM):   if _SPRIN41=. then delete;
725262     /* to delete _v_ variables */
 
NOTE: There were 13 observations read from the data set WORK._SPRIN4.
NOTE: The data set WORK._SPRIN4 has 13 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
725263     proc transpose data=WORK._SPRIN4 out=WORK._SPRIN4;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._SPRIN4 out=WORK._SPRIN4;
725264     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK._SPRIN4.
NOTE: The data set WORK._SPRIN4 has 6 observations and 14 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
725265     data WORK._SPRIN5;
MPRINT(EM_DIAGRAM):    data WORK._SPRIN5;
725266     set EMWS8.DMNeural3_ESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural3_ESTIMATE;
725267     if _TYPE_^='_EIGVEC_' then delete;
MPRINT(EM_DIAGRAM):   if _TYPE_^='_EIGVEC_' then delete;
725268     if _STAGE_ ^='5' then delete;
MPRINT(EM_DIAGRAM):   if _STAGE_ ^='5' then delete;
725269     drop _TARGET_ _TYPE_ _STAGE_ _NAME_ _MEAN_ _STDEV_;
MPRINT(EM_DIAGRAM):   drop _TARGET_ _TYPE_ _STAGE_ _NAME_ _MEAN_ _STDEV_;
 
NOTE: Character values have been converted to numeric values at the places given by:
      (Line):(Column).
      725268:14
NOTE: There were 87 observations read from the data set EMWS8.DMNEURAL3_ESTIMATE.
NOTE: The data set WORK._SPRIN5 has 3 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
725270     proc transpose data=WORK._SPRIN5 out=WORK._SPRIN5 prefix=_SPRIN5;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._SPRIN5 out=WORK._SPRIN5 prefix=_SPRIN5;
 
NOTE: There were 3 observations read from the data set WORK._SPRIN5.
NOTE: The data set WORK._SPRIN5 has 13 observations and 5 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
725271     data WORK._SPRIN5;
MPRINT(EM_DIAGRAM):   data WORK._SPRIN5;
725272     set WORK._SPRIN5;
MPRINT(EM_DIAGRAM):   set WORK._SPRIN5;
725273     if _SPRIN51=. then delete;
MPRINT(EM_DIAGRAM):   if _SPRIN51=. then delete;
725274     /* to delete _v_ variables */
 
NOTE: There were 13 observations read from the data set WORK._SPRIN5.
NOTE: The data set WORK._SPRIN5 has 13 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
725275     proc transpose data=WORK._SPRIN5 out=WORK._SPRIN5;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._SPRIN5 out=WORK._SPRIN5;
725276     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK._SPRIN5.
NOTE: The data set WORK._SPRIN5 has 3 observations and 14 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.52 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                19.52 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O11ZFZIJ
"C:\\predictive-models-project\Workspaces\EMWS8\DMNeural3\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O11ZFZIJ new;
MPRINT(EM_DIAGRAM):   run;
725378     filename emflow
725378   ! "C:\\predictive-models-project\Workspaces\EMWS8\DMNeural3\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\DMNeural3\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * DMNeural3: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
725379     *------------------------------------------------------------*;
725380     * DMNeural3: Scoring DATA data;
725381     *------------------------------------------------------------*;
725382     data EMWS8.DMNeural3_TRAIN
725383     / view=EMWS8.DMNeural3_TRAIN
725384     ;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural3_TRAIN / view=EMWS8.DMNeural3_TRAIN ;
725385     set EMWS8.Meta3_TRAIN
725386     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_TRAIN ;
725387     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\DMNeural3\EMFLOWSCORE.sas.
725388    +**********************************************************;
MPRINT(EM_DIAGRAM):   **********************************************************;
725389    +**** Begin scoring code for DMNeural;
MPRINT(EM_DIAGRAM):   **** Begin scoring code for DMNeural;
725390    +**********************************************************;
MPRINT(EM_DIAGRAM):   **********************************************************;
725391    +LENGTH _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
725392    +LABEL _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = "Warnings";
725393    +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar
725393   !+       I_DepVar $%DMNORLEN;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
725394    +LABEL I_DepVar="Into: DepVar";
MPRINT(EM_DIAGRAM):   LABEL I_DepVar= "Into: DepVar";
725395    +LENGTH _FORMAT_ $200;
MPRINT(EM_DIAGRAM):   LENGTH _FORMAT_ $200;
725396    +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH _NORMFMT_
725396   !+       _NORMFMT_ $%DMNORLEN;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
725397    +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH F_DepVar
725397   !+       F_DepVar $%DMNORLEN;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
725398    +LABEL F_DepVar="From: DepVar";
MPRINT(EM_DIAGRAM):   LABEL F_DepVar= "From: DepVar";
725399    +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH _TARGNOR_
725399   !+       _TARGNOR_ $%DMNORLEN;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
725400    +_FORMAT_ =PUT(DepVar, BEST.);
MPRINT(EM_DIAGRAM):   _FORMAT_ =PUT(DepVar, BEST.);
725401    +%DMNORMCP(_FORMAT_ , _TARGNOR_ );
MPRINT(DMNORMCP):   _TARGNOR_=dmnorm(_FORMAT_,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
725402    +F_DepVar=_TARGNOR_;
MPRINT(EM_DIAGRAM):   F_DepVar=_TARGNOR_;
725403    +;
MPRINT(EM_DIAGRAM):   ;
725404    +/************************************************/
725405    +* Create dummy variables for Marital_Status;
MPRINT(EM_DIAGRAM):   * Create dummy variables for Marital_Status;
725406    +/************************************************/
725407    +;
MPRINT(EM_DIAGRAM):   ;
725408    +_FORMAT_ =PUT(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FORMAT_ =PUT(Marital_Status,$8.0);
725409    +%DMNORMCP(_FORMAT_ , _NORMFMT_ );
MPRINT(DMNORMCP):   _NORMFMT_=dmnorm(_FORMAT_,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
725410    +IF _NORMFMT_ ="DIVORCED" THEN Marital_Status_1_=2.98126168425242;
MPRINT(EM_DIAGRAM):   IF _NORMFMT_ ="DIVORCED" THEN Marital_Status_1_=2.98126168425242;
725411    +/*---- (1-0.10109519797809)/0.30151824872338 -----*/
725412    +ELSE Marital_Status_1_=-0.33528716224019;
MPRINT(EM_DIAGRAM):   ELSE Marital_Status_1_=-0.33528716224019;
725413    +/*---- (0-0.10109519797809)/0.30151824872338 -----*/
725414    +IF _NORMFMT_ ="MARRIED" THEN Marital_Status_2_=1.18621875805397;
MPRINT(EM_DIAGRAM):   IF _NORMFMT_ ="MARRIED" THEN Marital_Status_2_=1.18621875805397;
725415    +/*---- (1-0.41533277169334)/0.49288314177885 -----*/
725416    +ELSE Marital_Status_2_=-0.84265972294036;
MPRINT(EM_DIAGRAM):   ELSE Marital_Status_2_=-0.84265972294036;
725417    +/*---- (0-0.41533277169334)/0.49288314177885 -----*/
725418    +IF _NORMFMT_ ="SINGLE" THEN Marital_Status_3_=1.8948253753083;
MPRINT(EM_DIAGRAM):   IF _NORMFMT_ ="SINGLE" THEN Marital_Status_3_=1.8948253753083;
725419    +/*---- (1-0.21777590564448)/0.41282120481854 -----*/
725420    +ELSE Marital_Status_3_=-0.52753081261949;
MPRINT(EM_DIAGRAM):   ELSE Marital_Status_3_=-0.52753081261949;
725421    +/*---- (0-0.21777590564448)/0.41282120481854 -----*/
725422    +IF _NORMFMT_ ="TOGETHER" THEN Marital_Status_4_=1.80152761035906;
MPRINT(EM_DIAGRAM):   IF _NORMFMT_ ="TOGETHER" THEN Marital_Status_4_=1.80152761035906;
725423    +/*---- (1-0.23546756529064)/0.42438008183342 -----*/
725424    +ELSE Marital_Status_4_=-0.55485065244667;
MPRINT(EM_DIAGRAM):   ELSE Marital_Status_4_=-0.55485065244667;
725425    +/*---- (0-0.23546756529064)/0.42438008183342 -----*/
725426    +IF _NORMFMT_ ="WIDOW" THEN Marital_Status_5_=5.65320745801221;
MPRINT(EM_DIAGRAM):   IF _NORMFMT_ ="WIDOW" THEN Marital_Status_5_=5.65320745801221;
725427    +/*---- (1-0.03032855939342)/0.17152589000289 -----*/
725428    +ELSE Marital_Status_5_=-0.17681621936441;
MPRINT(EM_DIAGRAM):   ELSE Marital_Status_5_=-0.17681621936441;
725429    +/*---- (0-0.03032855939342)/0.17152589000289 -----*/
725430    +DROP
725431    +_FORMAT_ _NORMFMT_;
MPRINT(EM_DIAGRAM):   DROP _FORMAT_ _NORMFMT_;
725432    +;
MPRINT(EM_DIAGRAM):   ;
725433    +/*-------------------------------------------------------------------------*/
725434    +*Impute missing values for interval variables;
MPRINT(EM_DIAGRAM):   *Impute missing values for interval variables;
725435    +/*-------------------------------------------------------------------------*/
725436    +;
MPRINT(EM_DIAGRAM):   ;
725437    +if AcceptedCmpTotal=. then _S1_ACCEPTEDCMPTOTAL = 0;
MPRINT(EM_DIAGRAM):   if AcceptedCmpTotal=. then _S1_ACCEPTEDCMPTOTAL = 0;
725438    +else _S1_ACCEPTEDCMPTOTAL=(AcceptedCmpTotal-0.31255265374894)/0.66837726102124;
MPRINT(EM_DIAGRAM):   else
_S1_ACCEPTEDCMPTOTAL=(AcceptedCmpTotal-0.31255265374894)/0.66837726102124;
725439    +if Frq=. then _S2_FRQ = 0;
MPRINT(EM_DIAGRAM):   if Frq=. then _S2_FRQ = 0;
725440    +else _S2_FRQ=(Frq-12.6545914069081)/7.15980860291451;
MPRINT(EM_DIAGRAM):   else _S2_FRQ=(Frq-12.6545914069081)/7.15980860291451;
725441    +if Mnt=. then _S3_MNT = 0;
MPRINT(EM_DIAGRAM):   if Mnt=. then _S3_MNT = 0;
725442    +else _S3_MNT=(Mnt-615.68197135636)/604.537497355942;
MPRINT(EM_DIAGRAM):   else _S3_MNT=(Mnt-615.68197135636)/604.537497355942;
725443    +if MntMeatProducts=. then _S4_MNTMEATPRODUCTS = 0;
MPRINT(EM_DIAGRAM):   if MntMeatProducts=. then _S4_MNTMEATPRODUCTS = 0;
725444    +else _S4_MNTMEATPRODUCTS=(MntMeatProducts-169.965037910699)/216.176716057929;
MPRINT(EM_DIAGRAM):   else
_S4_MNTMEATPRODUCTS=(MntMeatProducts-169.965037910699)/216.176716057929;
725445    +if NumCatalogPurchases=. then _S5_NUMCATALOGPURCHASES = 0;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases=. then _S5_NUMCATALOGPURCHASES = 0;
725446    +else _S5_NUMCATALOGPURCHASES=(NumCatalogPurchases-2.64448188711036)/2.77214051734809
725446   !+;
MPRINT(EM_DIAGRAM):   else
_S5_NUMCATALOGPURCHASES=(NumCatalogPurchases-2.64448188711036)/2.77214051734809;
725447    +if NumDealsPurchases=. then _S6_NUMDEALSPURCHASES = 0;
MPRINT(EM_DIAGRAM):   if NumDealsPurchases=. then _S6_NUMDEALSPURCHASES = 0;
725448    +else _S6_NUMDEALSPURCHASES=(NumDealsPurchases-2.25526537489469)/1.67318269219337;
MPRINT(EM_DIAGRAM):   else
_S6_NUMDEALSPURCHASES=(NumDealsPurchases-2.25526537489469)/1.67318269219337;
725449    +if NumWebVisitsMonth=. then _S7_NUMWEBVISITSMONTH = 0;
MPRINT(EM_DIAGRAM):   if NumWebVisitsMonth=. then _S7_NUMWEBVISITSMONTH = 0;
725450    +else _S7_NUMWEBVISITSMONTH=(NumWebVisitsMonth-5.24220724515585)/2.33225525940929;
MPRINT(EM_DIAGRAM):   else
_S7_NUMWEBVISITSMONTH=(NumWebVisitsMonth-5.24220724515585)/2.33225525940929;
725451    +if Recency=. then _S8_RECENCY = 0;
MPRINT(EM_DIAGRAM):   if Recency=. then _S8_RECENCY = 0;
725452    +else _S8_RECENCY=(Recency-48.7742207245156)/28.8224799181808;
MPRINT(EM_DIAGRAM):   else _S8_RECENCY=(Recency-48.7742207245156)/28.8224799181808;
725453    +;
MPRINT(EM_DIAGRAM):   ;
725454    +/*----------------------------------------------*/
725455    +* Component 1 at stage 0;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 0;
725456    +/*----------------------------------------------*/
725457    +;
MPRINT(EM_DIAGRAM):   ;
725458    +_SPRIN01=
725459    +-0.030533433*Marital_Status_1_+
725460    +-0.027998459*Marital_Status_2_+
725461    +0.0214882295*Marital_Status_3_+
725462    +0.0497827209*Marital_Status_4_+
725463    +-0.040759072*Marital_Status_5_+
725464    +0.9051379856*_S1_ACCEPTEDCMPTOTAL+
725465    +-0.141633693*_S2_FRQ+
725466    +-0.027881214*_S3_MNT+
725467    +-0.116645115*_S4_MNTMEATPRODUCTS+
725468    +-0.086193895*_S5_NUMCATALOGPURCHASES+
725469    +-0.224050139*_S6_NUMDEALSPURCHASES+
725470    +0.2854421342*_S7_NUMWEBVISITSMONTH+
725471    +-0.029309469*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN01= -0.030533433*Marital_Status_1_+
-0.027998459*Marital_Status_2_+ 0.0214882295*Marital_Status_3_+
0.0497827209*Marital_Status_4_+ -0.040759072*Marital_Status_5_+
0.9051379856*_S1_ACCEPTEDCMPTOTAL+ -0.141633693*_S2_FRQ+ -0.027881214*_S3_MNT+
-0.116645115*_S4_MNTMEATPRODUCTS+ -0.086193895*_S5_NUMCATALOGPURCHASES+
-0.224050139*_S6_NUMDEALSPURCHASES+ 0.2854421342*_S7_NUMWEBVISITSMONTH+
-0.029309469*_S8_RECENCY;
725472    +/*----------------------------------------------*/
725473    +* Component 2 at stage 0;
MPRINT(EM_DIAGRAM):   * Component 2 at stage 0;
725474    +/*----------------------------------------------*/
725475    +;
MPRINT(EM_DIAGRAM):   ;
725476    +_SPRIN02=
725477    +-0.158984376*Marital_Status_1_+
725478    +-0.029292114*Marital_Status_2_+
725479    +0.0652374414*Marital_Status_3_+
725480    +-0.047272583*Marital_Status_4_+
725481    +0.3235921012*Marital_Status_5_+
725482    +0.0050764455*_S1_ACCEPTEDCMPTOTAL+
725483    +-0.053126301*_S2_FRQ+
725484    +-0.029062364*_S3_MNT+
725485    +-0.026276531*_S4_MNTMEATPRODUCTS+
725486    +-0.016173632*_S5_NUMCATALOGPURCHASES+
725487    +-0.160580587*_S6_NUMDEALSPURCHASES+
725488    +-0.063858808*_S7_NUMWEBVISITSMONTH+
725489    +0.9100299784*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN02= -0.158984376*Marital_Status_1_+
-0.029292114*Marital_Status_2_+ 0.0652374414*Marital_Status_3_+
-0.047272583*Marital_Status_4_+ 0.3235921012*Marital_Status_5_+
0.0050764455*_S1_ACCEPTEDCMPTOTAL+ -0.053126301*_S2_FRQ+ -0.029062364*_S3_MNT+
-0.026276531*_S4_MNTMEATPRODUCTS+ -0.016173632*_S5_NUMCATALOGPURCHASES+
-0.160580587*_S6_NUMDEALSPURCHASES+ -0.063858808*_S7_NUMWEBVISITSMONTH+
0.9100299784*_S8_RECENCY;
725490    +/*----------------------------------------------*/
725491    +* Component 3 at stage 0;
MPRINT(EM_DIAGRAM):   * Component 3 at stage 0;
725492    +/*----------------------------------------------*/
725493    +;
MPRINT(EM_DIAGRAM):   ;
725494    +_SPRIN03=
725495    +-0.009163356*Marital_Status_1_+
725496    +-0.017190525*Marital_Status_2_+
725497    +0.0041674821*Marital_Status_3_+
725498    +0.0108473335*Marital_Status_4_+
725499    +0.0286372045*Marital_Status_5_+
725500    +0.2589037298*_S1_ACCEPTEDCMPTOTAL+
725501    +0.4288634785*_S2_FRQ+
725502    +0.468169543*_S3_MNT+
725503    +0.4406657126*_S4_MNTMEATPRODUCTS+
725504    +0.4512293115*_S5_NUMCATALOGPURCHASES+
725505    +-0.120164039*_S6_NUMDEALSPURCHASES+
725506    +-0.341012847*_S7_NUMWEBVISITSMONTH+
725507    +0.002081234*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN03= -0.009163356*Marital_Status_1_+
-0.017190525*Marital_Status_2_+ 0.0041674821*Marital_Status_3_+
0.0108473335*Marital_Status_4_+ 0.0286372045*Marital_Status_5_+
0.2589037298*_S1_ACCEPTEDCMPTOTAL+ 0.4288634785*_S2_FRQ+ 0.468169543*_S3_MNT+
0.4406657126*_S4_MNTMEATPRODUCTS+ 0.4512293115*_S5_NUMCATALOGPURCHASES+
-0.120164039*_S6_NUMDEALSPURCHASES+ -0.341012847*_S7_NUMWEBVISITSMONTH+
0.002081234*_S8_RECENCY;
725508    +/*----------------------------------------------*/
725509    +* Component 4 at stage 0;
MPRINT(EM_DIAGRAM):   * Component 4 at stage 0;
725510    +/*----------------------------------------------*/
725511    +;
MPRINT(EM_DIAGRAM):   ;
725512    +_SPRIN04=
725513    +-0.004105841*Marital_Status_1_+
725514    +0.0026546575*Marital_Status_2_+
725515    +-0.011950511*Marital_Status_3_+
725516    +0.0078474067*Marital_Status_4_+
725517    +0.0089356261*Marital_Status_5_+
725518    +-0.004132789*_S1_ACCEPTEDCMPTOTAL+
725519    +-0.562859505*_S2_FRQ+
725520    +-0.277471603*_S3_MNT+
725521    +0.2126634859*_S4_MNTMEATPRODUCTS+
725522    +0.7310937079*_S5_NUMCATALOGPURCHASES+
725523    +0.1193426498*_S6_NUMDEALSPURCHASES+
725524    +0.1090597873*_S7_NUMWEBVISITSMONTH+
725525    +0.0036037072*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN04= -0.004105841*Marital_Status_1_+
0.0026546575*Marital_Status_2_+ -0.011950511*Marital_Status_3_+
0.0078474067*Marital_Status_4_+ 0.0089356261*Marital_Status_5_+
-0.004132789*_S1_ACCEPTEDCMPTOTAL+ -0.562859505*_S2_FRQ+ -0.277471603*_S3_MNT+
0.2126634859*_S4_MNTMEATPRODUCTS+ 0.7310937079*_S5_NUMCATALOGPURCHASES+
0.1193426498*_S6_NUMDEALSPURCHASES+ 0.1090597873*_S7_NUMWEBVISITSMONTH+
0.0036037072*_S8_RECENCY;
725526    +/*----------------------------------------------*/
725527    +* Component 5 at stage 0;
MPRINT(EM_DIAGRAM):   * Component 5 at stage 0;
725528    +/*----------------------------------------------*/
725529    +;
MPRINT(EM_DIAGRAM):   ;
725530    +_SPRIN05=
725531    +0.0422645704*Marital_Status_1_+
725532    +-0.045690447*Marital_Status_2_+
725533    +0.7146731592*Marital_Status_3_+
725534    +-0.682396424*Marital_Status_4_+
725535    +0.0253007126*Marital_Status_5_+
725536    +0.0300322737*_S1_ACCEPTEDCMPTOTAL+
725537    +0.0233845108*_S2_FRQ+
725538    +0.0185707635*_S3_MNT+
725539    +-0.002634244*_S4_MNTMEATPRODUCTS+
725540    +0.0212505751*_S5_NUMCATALOGPURCHASES+
725541    +0.0939199651*_S6_NUMDEALSPURCHASES+
725542    +0.0592362947*_S7_NUMWEBVISITSMONTH+
725543    +-0.066942428*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN05= 0.0422645704*Marital_Status_1_+
-0.045690447*Marital_Status_2_+ 0.7146731592*Marital_Status_3_+
-0.682396424*Marital_Status_4_+ 0.0253007126*Marital_Status_5_+
0.0300322737*_S1_ACCEPTEDCMPTOTAL+ 0.0233845108*_S2_FRQ+ 0.0185707635*_S3_MNT+
-0.002634244*_S4_MNTMEATPRODUCTS+ 0.0212505751*_S5_NUMCATALOGPURCHASES+
0.0939199651*_S6_NUMDEALSPURCHASES+ 0.0592362947*_S7_NUMWEBVISITSMONTH+
-0.066942428*_S8_RECENCY;
725544    +/*----------------------------------------------*/
725545    +* Component 6 at stage 0;
MPRINT(EM_DIAGRAM):   * Component 6 at stage 0;
725546    +/*----------------------------------------------*/
725547    +;
MPRINT(EM_DIAGRAM):   ;
725548    +_SPRIN06=
725549    +-0.133661323*Marital_Status_1_+
725550    +-0.051981669*Marital_Status_2_+
725551    +-0.137405736*Marital_Status_3_+
725552    +-0.079938161*Marital_Status_4_+
725553    +0.9128090284*Marital_Status_5_+
725554    +0.0224242054*_S1_ACCEPTEDCMPTOTAL+
725555    +-0.006793272*_S2_FRQ+
725556    +-0.013098113*_S3_MNT+
725557    +-0.029730878*_S4_MNTMEATPRODUCTS+
725558    +-0.014442513*_S5_NUMCATALOGPURCHASES+
725559    +0.0017352662*_S6_NUMDEALSPURCHASES+
725560    +0.0088977322*_S7_NUMWEBVISITSMONTH+
725561    +-0.34503122*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN06= -0.133661323*Marital_Status_1_+
-0.051981669*Marital_Status_2_+ -0.137405736*Marital_Status_3_+
-0.079938161*Marital_Status_4_+ 0.9128090284*Marital_Status_5_+
0.0224242054*_S1_ACCEPTEDCMPTOTAL+ -0.006793272*_S2_FRQ+ -0.013098113*_S3_MNT+
-0.029730878*_S4_MNTMEATPRODUCTS+ -0.014442513*_S5_NUMCATALOGPURCHASES+
0.0017352662*_S6_NUMDEALSPURCHASES+ 0.0088977322*_S7_NUMWEBVISITSMONTH+
-0.34503122*_S8_RECENCY;
725562    +;
MPRINT(EM_DIAGRAM):   ;
725563    +/*----------------------------------------------*/
725564    +* Component 1 at stage 1;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 1;
725565    +/*----------------------------------------------*/
725566    +;
MPRINT(EM_DIAGRAM):   ;
725567    +_SPRIN11=
725568    +0.0088433896*Marital_Status_1_+
725569    +-0.012550627*Marital_Status_2_+
725570    +-0.002271234*Marital_Status_3_+
725571    +0.0021642821*Marital_Status_4_+
725572    +0.0206306135*Marital_Status_5_+
725573    +0.1009035281*_S1_ACCEPTEDCMPTOTAL+
725574    +-0.456946736*_S2_FRQ+
725575    +0.1988530541*_S3_MNT+
725576    +0.6183600004*_S4_MNTMEATPRODUCTS+
725577    +-0.481393504*_S5_NUMCATALOGPURCHASES+
725578    +0.311462421*_S6_NUMDEALSPURCHASES+
725579    +-0.170402162*_S7_NUMWEBVISITSMONTH+
725580    +0.0254931556*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN11= 0.0088433896*Marital_Status_1_+
-0.012550627*Marital_Status_2_+ -0.002271234*Marital_Status_3_+
0.0021642821*Marital_Status_4_+ 0.0206306135*Marital_Status_5_+
0.1009035281*_S1_ACCEPTEDCMPTOTAL+ -0.456946736*_S2_FRQ+ 0.1988530541*_S3_MNT+
0.6183600004*_S4_MNTMEATPRODUCTS+ -0.481393504*_S5_NUMCATALOGPURCHASES+
0.311462421*_S6_NUMDEALSPURCHASES+ -0.170402162*_S7_NUMWEBVISITSMONTH+
0.0254931556*_S8_RECENCY;
725581    +/*----------------------------------------------*/
725582    +* Component 2 at stage 1;
MPRINT(EM_DIAGRAM):   * Component 2 at stage 1;
725583    +/*----------------------------------------------*/
725584    +;
MPRINT(EM_DIAGRAM):   ;
725585    +_SPRIN12=
725586    +0.0106637752*Marital_Status_1_+
725587    +-0.006976946*Marital_Status_2_+
725588    +0.0029754745*Marital_Status_3_+
725589    +-0.005574564*Marital_Status_4_+
725590    +0.0079340274*Marital_Status_5_+
725591    +0.0743426991*_S1_ACCEPTEDCMPTOTAL+
725592    +0.4172241749*_S2_FRQ+
725593    +-0.756399427*_S3_MNT+
725594    +0.4836524496*_S4_MNTMEATPRODUCTS+
725595    +-0.1064254*_S5_NUMCATALOGPURCHASES+
725596    +-0.033812052*_S6_NUMDEALSPURCHASES+
725597    +0.0394187446*_S7_NUMWEBVISITSMONTH+
725598    +0.0069739491*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN12= 0.0106637752*Marital_Status_1_+
-0.006976946*Marital_Status_2_+ 0.0029754745*Marital_Status_3_+
-0.005574564*Marital_Status_4_+ 0.0079340274*Marital_Status_5_+
0.0743426991*_S1_ACCEPTEDCMPTOTAL+ 0.4172241749*_S2_FRQ+ -0.756399427*_S3_MNT+
0.4836524496*_S4_MNTMEATPRODUCTS+ -0.1064254*_S5_NUMCATALOGPURCHASES+
-0.033812052*_S6_NUMDEALSPURCHASES+ 0.0394187446*_S7_NUMWEBVISITSMONTH+
0.0069739491*_S8_RECENCY;
725599    +/*----------------------------------------------*/
725600    +* Component 3 at stage 1;
MPRINT(EM_DIAGRAM):   * Component 3 at stage 1;
725601    +/*----------------------------------------------*/
725602    +;
MPRINT(EM_DIAGRAM):   ;
725603    +_SPRIN13=
725604    +0.0059671872*Marital_Status_1_+
725605    +0.0184384503*Marital_Status_2_+
725606    +-0.020790781*Marital_Status_3_+
725607    +-0.011947833*Marital_Status_4_+
725608    +0.0161263141*Marital_Status_5_+
725609    +-0.272236938*_S1_ACCEPTEDCMPTOTAL+
725610    +0.0343385179*_S2_FRQ+
725611    +0.2782657866*_S3_MNT+
725612    +0.3531293035*_S4_MNTMEATPRODUCTS+
725613    +-0.02753263*_S5_NUMCATALOGPURCHASES+
725614    +-0.36457907*_S6_NUMDEALSPURCHASES+
725615    +0.766563427*_S7_NUMWEBVISITSMONTH+
725616    +0.0083475574*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN13= 0.0059671872*Marital_Status_1_+
0.0184384503*Marital_Status_2_+ -0.020790781*Marital_Status_3_+
-0.011947833*Marital_Status_4_+ 0.0161263141*Marital_Status_5_+
-0.272236938*_S1_ACCEPTEDCMPTOTAL+ 0.0343385179*_S2_FRQ+ 0.2782657866*_S3_MNT+
0.3531293035*_S4_MNTMEATPRODUCTS+ -0.02753263*_S5_NUMCATALOGPURCHASES+
-0.36457907*_S6_NUMDEALSPURCHASES+ 0.766563427*_S7_NUMWEBVISITSMONTH+ 0.0083475574*_S8_RECENCY;
725617    +/*----------------------------------------------*/
725618    +* Component 4 at stage 1;
MPRINT(EM_DIAGRAM):   * Component 4 at stage 1;
725619    +/*----------------------------------------------*/
725620    +;
MPRINT(EM_DIAGRAM):   ;
725621    +_SPRIN14=
725622    +-0.004105841*Marital_Status_1_+
725623    +0.0026546575*Marital_Status_2_+
725624    +-0.011950511*Marital_Status_3_+
725625    +0.0078474067*Marital_Status_4_+
725626    +0.0089356261*Marital_Status_5_+
725627    +-0.004132789*_S1_ACCEPTEDCMPTOTAL+
725628    +-0.562859505*_S2_FRQ+
725629    +-0.277471603*_S3_MNT+
725630    +0.2126634859*_S4_MNTMEATPRODUCTS+
725631    +0.7310937079*_S5_NUMCATALOGPURCHASES+
725632    +0.1193426498*_S6_NUMDEALSPURCHASES+
725633    +0.1090597873*_S7_NUMWEBVISITSMONTH+
725634    +0.0036037072*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN14= -0.004105841*Marital_Status_1_+
0.0026546575*Marital_Status_2_+ -0.011950511*Marital_Status_3_+
0.0078474067*Marital_Status_4_+ 0.0089356261*Marital_Status_5_+
-0.004132789*_S1_ACCEPTEDCMPTOTAL+ -0.562859505*_S2_FRQ+ -0.277471603*_S3_MNT+
0.2126634859*_S4_MNTMEATPRODUCTS+ 0.7310937079*_S5_NUMCATALOGPURCHASES+
0.1193426498*_S6_NUMDEALSPURCHASES+ 0.1090597873*_S7_NUMWEBVISITSMONTH+
0.0036037072*_S8_RECENCY;
725635    +/*----------------------------------------------*/
725636    +* Component 5 at stage 1;
MPRINT(EM_DIAGRAM):   * Component 5 at stage 1;
725637    +/*----------------------------------------------*/
725638    +;
MPRINT(EM_DIAGRAM):   ;
725639    +_SPRIN15=
725640    +0.4188802441*Marital_Status_1_+
725641    +-0.108693579*Marital_Status_2_+
725642    +-0.18569781*Marital_Status_3_+
725643    +-0.030796546*Marital_Status_4_+
725644    +0.0991257331*Marital_Status_5_+
725645    +0.133338802*_S1_ACCEPTEDCMPTOTAL+
725646    +0.2615189161*_S2_FRQ+
725647    +0.0994085062*_S3_MNT+
725648    +-0.065649042*_S4_MNTMEATPRODUCTS+
725649    +0.089704836*_S5_NUMCATALOGPURCHASES+
725650    +0.6988027641*_S6_NUMDEALSPURCHASES+
725651    +0.3548155116*_S7_NUMWEBVISITSMONTH+
725652    +0.2117486643*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN15= 0.4188802441*Marital_Status_1_+
-0.108693579*Marital_Status_2_+ -0.18569781*Marital_Status_3_+ -0.030796546*Marital_Status_4_+
0.0991257331*Marital_Status_5_+ 0.133338802*_S1_ACCEPTEDCMPTOTAL+ 0.2615189161*_S2_FRQ+
0.0994085062*_S3_MNT+ -0.065649042*_S4_MNTMEATPRODUCTS+ 0.089704836*_S5_NUMCATALOGPURCHASES+
0.6988027641*_S6_NUMDEALSPURCHASES+ 0.3548155116*_S7_NUMWEBVISITSMONTH+
0.2117486643*_S8_RECENCY;
725653    +/*----------------------------------------------*/
725654    +* Component 6 at stage 1;
MPRINT(EM_DIAGRAM):   * Component 6 at stage 1;
725655    +/*----------------------------------------------*/
725656    +;
MPRINT(EM_DIAGRAM):   ;
725657    +_SPRIN16=
725658    +-0.795416959*Marital_Status_1_+
725659    +0.0824648192*Marital_Status_2_+
725660    +0.2317116976*Marital_Status_3_+
725661    +0.2690782351*Marital_Status_4_+
725662    +-0.062146515*Marital_Status_5_+
725663    +0.0182327007*_S1_ACCEPTEDCMPTOTAL+
725664    +0.1513611302*_S2_FRQ+
725665    +0.0513363831*_S3_MNT+
725666    +-0.010073056*_S4_MNTMEATPRODUCTS+
725667    +0.0406819984*_S5_NUMCATALOGPURCHASES+
725668    +0.4050473454*_S6_NUMDEALSPURCHASES+
725669    +0.1960229521*_S7_NUMWEBVISITSMONTH+
725670    +-0.020806956*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN16= -0.795416959*Marital_Status_1_+
0.0824648192*Marital_Status_2_+ 0.2317116976*Marital_Status_3_+
0.2690782351*Marital_Status_4_+ -0.062146515*Marital_Status_5_+
0.0182327007*_S1_ACCEPTEDCMPTOTAL+ 0.1513611302*_S2_FRQ+ 0.0513363831*_S3_MNT+
-0.010073056*_S4_MNTMEATPRODUCTS+ 0.0406819984*_S5_NUMCATALOGPURCHASES+
0.4050473454*_S6_NUMDEALSPURCHASES+ 0.1960229521*_S7_NUMWEBVISITSMONTH+
-0.020806956*_S8_RECENCY;
725671    +;
MPRINT(EM_DIAGRAM):   ;
725672    +/*----------------------------------------------*/
725673    +* Component 1 at stage 2;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 2;
725674    +/*----------------------------------------------*/
725675    +;
MPRINT(EM_DIAGRAM):   ;
725676    +_SPRIN21=
725677    +-0.004105841*Marital_Status_1_+
725678    +0.0026546575*Marital_Status_2_+
725679    +-0.011950511*Marital_Status_3_+
725680    +0.0078474067*Marital_Status_4_+
725681    +0.0089356261*Marital_Status_5_+
725682    +-0.004132789*_S1_ACCEPTEDCMPTOTAL+
725683    +-0.562859505*_S2_FRQ+
725684    +-0.277471603*_S3_MNT+
725685    +0.2126634859*_S4_MNTMEATPRODUCTS+
725686    +0.7310937079*_S5_NUMCATALOGPURCHASES+
725687    +0.1193426498*_S6_NUMDEALSPURCHASES+
725688    +0.1090597873*_S7_NUMWEBVISITSMONTH+
725689    +0.0036037072*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN21= -0.004105841*Marital_Status_1_+
0.0026546575*Marital_Status_2_+ -0.011950511*Marital_Status_3_+
0.0078474067*Marital_Status_4_+ 0.0089356261*Marital_Status_5_+
-0.004132789*_S1_ACCEPTEDCMPTOTAL+ -0.562859505*_S2_FRQ+ -0.277471603*_S3_MNT+
0.2126634859*_S4_MNTMEATPRODUCTS+ 0.7310937079*_S5_NUMCATALOGPURCHASES+
0.1193426498*_S6_NUMDEALSPURCHASES+ 0.1090597873*_S7_NUMWEBVISITSMONTH+
0.0036037072*_S8_RECENCY;
725690    +/*----------------------------------------------*/
725691    +* Component 2 at stage 2;
MPRINT(EM_DIAGRAM):   * Component 2 at stage 2;
725692    +/*----------------------------------------------*/
725693    +;
MPRINT(EM_DIAGRAM):   ;
725694    +_SPRIN22=
725695    +-0.009163356*Marital_Status_1_+
725696    +-0.017190525*Marital_Status_2_+
725697    +0.0041674821*Marital_Status_3_+
725698    +0.0108473335*Marital_Status_4_+
725699    +0.0286372045*Marital_Status_5_+
725700    +0.2589037298*_S1_ACCEPTEDCMPTOTAL+
725701    +0.4288634785*_S2_FRQ+
725702    +0.468169543*_S3_MNT+
725703    +0.4406657126*_S4_MNTMEATPRODUCTS+
725704    +0.4512293115*_S5_NUMCATALOGPURCHASES+
725705    +-0.120164039*_S6_NUMDEALSPURCHASES+
725706    +-0.341012847*_S7_NUMWEBVISITSMONTH+
725707    +0.002081234*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN22= -0.009163356*Marital_Status_1_+
-0.017190525*Marital_Status_2_+ 0.0041674821*Marital_Status_3_+
0.0108473335*Marital_Status_4_+ 0.0286372045*Marital_Status_5_+
0.2589037298*_S1_ACCEPTEDCMPTOTAL+ 0.4288634785*_S2_FRQ+ 0.468169543*_S3_MNT+
0.4406657126*_S4_MNTMEATPRODUCTS+ 0.4512293115*_S5_NUMCATALOGPURCHASES+
-0.120164039*_S6_NUMDEALSPURCHASES+ -0.341012847*_S7_NUMWEBVISITSMONTH+
0.002081234*_S8_RECENCY;
725708    +/*----------------------------------------------*/
725709    +* Component 3 at stage 2;
MPRINT(EM_DIAGRAM):   * Component 3 at stage 2;
725710    +/*----------------------------------------------*/
725711    +;
MPRINT(EM_DIAGRAM):   ;
725712    +_SPRIN23=
725713    +-0.133661323*Marital_Status_1_+
725714    +-0.051981669*Marital_Status_2_+
725715    +-0.137405736*Marital_Status_3_+
725716    +-0.079938161*Marital_Status_4_+
725717    +0.9128090284*Marital_Status_5_+
725718    +0.0224242054*_S1_ACCEPTEDCMPTOTAL+
725719    +-0.006793272*_S2_FRQ+
725720    +-0.013098113*_S3_MNT+
725721    +-0.029730878*_S4_MNTMEATPRODUCTS+
725722    +-0.014442513*_S5_NUMCATALOGPURCHASES+
725723    +0.0017352662*_S6_NUMDEALSPURCHASES+
725724    +0.0088977322*_S7_NUMWEBVISITSMONTH+
725725    +-0.34503122*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN23= -0.133661323*Marital_Status_1_+
-0.051981669*Marital_Status_2_+ -0.137405736*Marital_Status_3_+
-0.079938161*Marital_Status_4_+ 0.9128090284*Marital_Status_5_+
0.0224242054*_S1_ACCEPTEDCMPTOTAL+ -0.006793272*_S2_FRQ+ -0.013098113*_S3_MNT+
-0.029730878*_S4_MNTMEATPRODUCTS+ -0.014442513*_S5_NUMCATALOGPURCHASES+
0.0017352662*_S6_NUMDEALSPURCHASES+ 0.0088977322*_S7_NUMWEBVISITSMONTH+
-0.34503122*_S8_RECENCY;
725726    +/*----------------------------------------------*/
725727    +* Component 4 at stage 2;
MPRINT(EM_DIAGRAM):   * Component 4 at stage 2;
725728    +/*----------------------------------------------*/
725729    +;
MPRINT(EM_DIAGRAM):   ;
725730    +_SPRIN24=
725731    +0.0106637752*Marital_Status_1_+
725732    +-0.006976946*Marital_Status_2_+
725733    +0.0029754745*Marital_Status_3_+
725734    +-0.005574564*Marital_Status_4_+
725735    +0.0079340274*Marital_Status_5_+
725736    +0.0743426991*_S1_ACCEPTEDCMPTOTAL+
725737    +0.4172241749*_S2_FRQ+
725738    +-0.756399427*_S3_MNT+
725739    +0.4836524496*_S4_MNTMEATPRODUCTS+
725740    +-0.1064254*_S5_NUMCATALOGPURCHASES+
725741    +-0.033812052*_S6_NUMDEALSPURCHASES+
725742    +0.0394187446*_S7_NUMWEBVISITSMONTH+
725743    +0.0069739491*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN24= 0.0106637752*Marital_Status_1_+
-0.006976946*Marital_Status_2_+ 0.0029754745*Marital_Status_3_+
-0.005574564*Marital_Status_4_+ 0.0079340274*Marital_Status_5_+
0.0743426991*_S1_ACCEPTEDCMPTOTAL+ 0.4172241749*_S2_FRQ+ -0.756399427*_S3_MNT+
0.4836524496*_S4_MNTMEATPRODUCTS+ -0.1064254*_S5_NUMCATALOGPURCHASES+
-0.033812052*_S6_NUMDEALSPURCHASES+ 0.0394187446*_S7_NUMWEBVISITSMONTH+
0.0069739491*_S8_RECENCY;
725744    +/*----------------------------------------------*/
725745    +* Component 5 at stage 2;
MPRINT(EM_DIAGRAM):   * Component 5 at stage 2;
725746    +/*----------------------------------------------*/
725747    +;
MPRINT(EM_DIAGRAM):   ;
725748    +_SPRIN25=
725749    +-0.030533433*Marital_Status_1_+
725750    +-0.027998459*Marital_Status_2_+
725751    +0.0214882295*Marital_Status_3_+
725752    +0.0497827209*Marital_Status_4_+
725753    +-0.040759072*Marital_Status_5_+
725754    +0.9051379856*_S1_ACCEPTEDCMPTOTAL+
725755    +-0.141633693*_S2_FRQ+
725756    +-0.027881214*_S3_MNT+
725757    +-0.116645115*_S4_MNTMEATPRODUCTS+
725758    +-0.086193895*_S5_NUMCATALOGPURCHASES+
725759    +-0.224050139*_S6_NUMDEALSPURCHASES+
725760    +0.2854421342*_S7_NUMWEBVISITSMONTH+
725761    +-0.029309469*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN25= -0.030533433*Marital_Status_1_+
-0.027998459*Marital_Status_2_+ 0.0214882295*Marital_Status_3_+
0.0497827209*Marital_Status_4_+ -0.040759072*Marital_Status_5_+
0.9051379856*_S1_ACCEPTEDCMPTOTAL+ -0.141633693*_S2_FRQ+ -0.027881214*_S3_MNT+
-0.116645115*_S4_MNTMEATPRODUCTS+ -0.086193895*_S5_NUMCATALOGPURCHASES+
-0.224050139*_S6_NUMDEALSPURCHASES+ 0.2854421342*_S7_NUMWEBVISITSMONTH+
-0.029309469*_S8_RECENCY;
725762    +/*----------------------------------------------*/
725763    +* Component 6 at stage 2;
MPRINT(EM_DIAGRAM):   * Component 6 at stage 2;
725764    +/*----------------------------------------------*/
725765    +;
MPRINT(EM_DIAGRAM):   ;
725766    +_SPRIN26=
725767    +0.0088433896*Marital_Status_1_+
725768    +-0.012550627*Marital_Status_2_+
725769    +-0.002271234*Marital_Status_3_+
725770    +0.0021642821*Marital_Status_4_+
725771    +0.0206306135*Marital_Status_5_+
725772    +0.1009035281*_S1_ACCEPTEDCMPTOTAL+
725773    +-0.456946736*_S2_FRQ+
725774    +0.1988530541*_S3_MNT+
725775    +0.6183600004*_S4_MNTMEATPRODUCTS+
725776    +-0.481393504*_S5_NUMCATALOGPURCHASES+
725777    +0.311462421*_S6_NUMDEALSPURCHASES+
725778    +-0.170402162*_S7_NUMWEBVISITSMONTH+
725779    +0.0254931556*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN26= 0.0088433896*Marital_Status_1_+
-0.012550627*Marital_Status_2_+ -0.002271234*Marital_Status_3_+
0.0021642821*Marital_Status_4_+ 0.0206306135*Marital_Status_5_+
0.1009035281*_S1_ACCEPTEDCMPTOTAL+ -0.456946736*_S2_FRQ+ 0.1988530541*_S3_MNT+
0.6183600004*_S4_MNTMEATPRODUCTS+ -0.481393504*_S5_NUMCATALOGPURCHASES+
0.311462421*_S6_NUMDEALSPURCHASES+ -0.170402162*_S7_NUMWEBVISITSMONTH+
0.0254931556*_S8_RECENCY;
725780    +;
MPRINT(EM_DIAGRAM):   ;
725781    +/*----------------------------------------------*/
725782    +* Component 1 at stage 3;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 3;
725783    +/*----------------------------------------------*/
725784    +;
MPRINT(EM_DIAGRAM):   ;
725785    +_SPRIN31=
725786    +0.4188802441*Marital_Status_1_+
725787    +-0.108693579*Marital_Status_2_+
725788    +-0.18569781*Marital_Status_3_+
725789    +-0.030796546*Marital_Status_4_+
725790    +0.0991257331*Marital_Status_5_+
725791    +0.133338802*_S1_ACCEPTEDCMPTOTAL+
725792    +0.2615189161*_S2_FRQ+
725793    +0.0994085062*_S3_MNT+
725794    +-0.065649042*_S4_MNTMEATPRODUCTS+
725795    +0.089704836*_S5_NUMCATALOGPURCHASES+
725796    +0.6988027641*_S6_NUMDEALSPURCHASES+
725797    +0.3548155116*_S7_NUMWEBVISITSMONTH+
725798    +0.2117486643*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN31= 0.4188802441*Marital_Status_1_+
-0.108693579*Marital_Status_2_+ -0.18569781*Marital_Status_3_+ -0.030796546*Marital_Status_4_+
0.0991257331*Marital_Status_5_+ 0.133338802*_S1_ACCEPTEDCMPTOTAL+ 0.2615189161*_S2_FRQ+
0.0994085062*_S3_MNT+ -0.065649042*_S4_MNTMEATPRODUCTS+ 0.089704836*_S5_NUMCATALOGPURCHASES+
0.6988027641*_S6_NUMDEALSPURCHASES+ 0.3548155116*_S7_NUMWEBVISITSMONTH+
0.2117486643*_S8_RECENCY;
725799    +/*----------------------------------------------*/
725800    +* Component 2 at stage 3;
MPRINT(EM_DIAGRAM):   * Component 2 at stage 3;
725801    +/*----------------------------------------------*/
725802    +;
MPRINT(EM_DIAGRAM):   ;
725803    +_SPRIN32=
725804    +0.0106637752*Marital_Status_1_+
725805    +-0.006976946*Marital_Status_2_+
725806    +0.0029754745*Marital_Status_3_+
725807    +-0.005574564*Marital_Status_4_+
725808    +0.0079340274*Marital_Status_5_+
725809    +0.0743426991*_S1_ACCEPTEDCMPTOTAL+
725810    +0.4172241749*_S2_FRQ+
725811    +-0.756399427*_S3_MNT+
725812    +0.4836524496*_S4_MNTMEATPRODUCTS+
725813    +-0.1064254*_S5_NUMCATALOGPURCHASES+
725814    +-0.033812052*_S6_NUMDEALSPURCHASES+
725815    +0.0394187446*_S7_NUMWEBVISITSMONTH+
725816    +0.0069739491*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN32= 0.0106637752*Marital_Status_1_+
-0.006976946*Marital_Status_2_+ 0.0029754745*Marital_Status_3_+
-0.005574564*Marital_Status_4_+ 0.0079340274*Marital_Status_5_+
0.0743426991*_S1_ACCEPTEDCMPTOTAL+ 0.4172241749*_S2_FRQ+ -0.756399427*_S3_MNT+
0.4836524496*_S4_MNTMEATPRODUCTS+ -0.1064254*_S5_NUMCATALOGPURCHASES+
-0.033812052*_S6_NUMDEALSPURCHASES+ 0.0394187446*_S7_NUMWEBVISITSMONTH+
0.0069739491*_S8_RECENCY;
725817    +/*----------------------------------------------*/
725818    +* Component 3 at stage 3;
MPRINT(EM_DIAGRAM):   * Component 3 at stage 3;
725819    +/*----------------------------------------------*/
725820    +;
MPRINT(EM_DIAGRAM):   ;
725821    +_SPRIN33=
725822    +-0.009163356*Marital_Status_1_+
725823    +-0.017190525*Marital_Status_2_+
725824    +0.0041674821*Marital_Status_3_+
725825    +0.0108473335*Marital_Status_4_+
725826    +0.0286372045*Marital_Status_5_+
725827    +0.2589037298*_S1_ACCEPTEDCMPTOTAL+
725828    +0.4288634785*_S2_FRQ+
725829    +0.468169543*_S3_MNT+
725830    +0.4406657126*_S4_MNTMEATPRODUCTS+
725831    +0.4512293115*_S5_NUMCATALOGPURCHASES+
725832    +-0.120164039*_S6_NUMDEALSPURCHASES+
725833    +-0.341012847*_S7_NUMWEBVISITSMONTH+
725834    +0.002081234*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN33= -0.009163356*Marital_Status_1_+
-0.017190525*Marital_Status_2_+ 0.0041674821*Marital_Status_3_+
0.0108473335*Marital_Status_4_+ 0.0286372045*Marital_Status_5_+
0.2589037298*_S1_ACCEPTEDCMPTOTAL+ 0.4288634785*_S2_FRQ+ 0.468169543*_S3_MNT+
0.4406657126*_S4_MNTMEATPRODUCTS+ 0.4512293115*_S5_NUMCATALOGPURCHASES+
-0.120164039*_S6_NUMDEALSPURCHASES+ -0.341012847*_S7_NUMWEBVISITSMONTH+
0.002081234*_S8_RECENCY;
725835    +/*----------------------------------------------*/
725836    +* Component 4 at stage 3;
MPRINT(EM_DIAGRAM):   * Component 4 at stage 3;
725837    +/*----------------------------------------------*/
725838    +;
MPRINT(EM_DIAGRAM):   ;
725839    +_SPRIN34=
725840    +-0.795416959*Marital_Status_1_+
725841    +0.0824648192*Marital_Status_2_+
725842    +0.2317116976*Marital_Status_3_+
725843    +0.2690782351*Marital_Status_4_+
725844    +-0.062146515*Marital_Status_5_+
725845    +0.0182327007*_S1_ACCEPTEDCMPTOTAL+
725846    +0.1513611302*_S2_FRQ+
725847    +0.0513363831*_S3_MNT+
725848    +-0.010073056*_S4_MNTMEATPRODUCTS+
725849    +0.0406819984*_S5_NUMCATALOGPURCHASES+
725850    +0.4050473454*_S6_NUMDEALSPURCHASES+
725851    +0.1960229521*_S7_NUMWEBVISITSMONTH+
725852    +-0.020806956*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN34= -0.795416959*Marital_Status_1_+
0.0824648192*Marital_Status_2_+ 0.2317116976*Marital_Status_3_+
0.2690782351*Marital_Status_4_+ -0.062146515*Marital_Status_5_+
0.0182327007*_S1_ACCEPTEDCMPTOTAL+ 0.1513611302*_S2_FRQ+ 0.0513363831*_S3_MNT+
-0.010073056*_S4_MNTMEATPRODUCTS+ 0.0406819984*_S5_NUMCATALOGPURCHASES+
0.4050473454*_S6_NUMDEALSPURCHASES+ 0.1960229521*_S7_NUMWEBVISITSMONTH+
-0.020806956*_S8_RECENCY;
725853    +/*----------------------------------------------*/
725854    +* Component 5 at stage 3;
MPRINT(EM_DIAGRAM):   * Component 5 at stage 3;
725855    +/*----------------------------------------------*/
725856    +;
MPRINT(EM_DIAGRAM):   ;
725857    +_SPRIN35=
725858    +0.0059671872*Marital_Status_1_+
725859    +0.0184384503*Marital_Status_2_+
725860    +-0.020790781*Marital_Status_3_+
725861    +-0.011947833*Marital_Status_4_+
725862    +0.0161263141*Marital_Status_5_+
725863    +-0.272236938*_S1_ACCEPTEDCMPTOTAL+
725864    +0.0343385179*_S2_FRQ+
725865    +0.2782657866*_S3_MNT+
725866    +0.3531293035*_S4_MNTMEATPRODUCTS+
725867    +-0.02753263*_S5_NUMCATALOGPURCHASES+
725868    +-0.36457907*_S6_NUMDEALSPURCHASES+
725869    +0.766563427*_S7_NUMWEBVISITSMONTH+
725870    +0.0083475574*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN35= 0.0059671872*Marital_Status_1_+
0.0184384503*Marital_Status_2_+ -0.020790781*Marital_Status_3_+
-0.011947833*Marital_Status_4_+ 0.0161263141*Marital_Status_5_+
-0.272236938*_S1_ACCEPTEDCMPTOTAL+ 0.0343385179*_S2_FRQ+ 0.2782657866*_S3_MNT+
0.3531293035*_S4_MNTMEATPRODUCTS+ -0.02753263*_S5_NUMCATALOGPURCHASES+
-0.36457907*_S6_NUMDEALSPURCHASES+ 0.766563427*_S7_NUMWEBVISITSMONTH+ 0.0083475574*_S8_RECENCY;
725871    +/*----------------------------------------------*/
725872    +* Component 6 at stage 3;
MPRINT(EM_DIAGRAM):   * Component 6 at stage 3;
725873    +/*----------------------------------------------*/
725874    +;
MPRINT(EM_DIAGRAM):   ;
725875    +_SPRIN36=
725876    +-0.158984376*Marital_Status_1_+
725877    +-0.029292114*Marital_Status_2_+
725878    +0.0652374414*Marital_Status_3_+
725879    +-0.047272583*Marital_Status_4_+
725880    +0.3235921012*Marital_Status_5_+
725881    +0.0050764455*_S1_ACCEPTEDCMPTOTAL+
725882    +-0.053126301*_S2_FRQ+
725883    +-0.029062364*_S3_MNT+
725884    +-0.026276531*_S4_MNTMEATPRODUCTS+
725885    +-0.016173632*_S5_NUMCATALOGPURCHASES+
725886    +-0.160580587*_S6_NUMDEALSPURCHASES+
725887    +-0.063858808*_S7_NUMWEBVISITSMONTH+
725888    +0.9100299784*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN36= -0.158984376*Marital_Status_1_+
-0.029292114*Marital_Status_2_+ 0.0652374414*Marital_Status_3_+
-0.047272583*Marital_Status_4_+ 0.3235921012*Marital_Status_5_+
0.0050764455*_S1_ACCEPTEDCMPTOTAL+ -0.053126301*_S2_FRQ+ -0.029062364*_S3_MNT+
-0.026276531*_S4_MNTMEATPRODUCTS+ -0.016173632*_S5_NUMCATALOGPURCHASES+
-0.160580587*_S6_NUMDEALSPURCHASES+ -0.063858808*_S7_NUMWEBVISITSMONTH+
0.9100299784*_S8_RECENCY;
725889    +;
MPRINT(EM_DIAGRAM):   ;
725890    +/*----------------------------------------------*/
725891    +* Component 1 at stage 4;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 4;
725892    +/*----------------------------------------------*/
725893    +;
MPRINT(EM_DIAGRAM):   ;
725894    +_SPRIN41=
725895    +0.0106637752*Marital_Status_1_+
725896    +-0.006976946*Marital_Status_2_+
725897    +0.0029754745*Marital_Status_3_+
725898    +-0.005574564*Marital_Status_4_+
725899    +0.0079340274*Marital_Status_5_+
725900    +0.0743426991*_S1_ACCEPTEDCMPTOTAL+
725901    +0.4172241749*_S2_FRQ+
725902    +-0.756399427*_S3_MNT+
725903    +0.4836524496*_S4_MNTMEATPRODUCTS+
725904    +-0.1064254*_S5_NUMCATALOGPURCHASES+
725905    +-0.033812052*_S6_NUMDEALSPURCHASES+
725906    +0.0394187446*_S7_NUMWEBVISITSMONTH+
725907    +0.0069739491*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN41= 0.0106637752*Marital_Status_1_+
-0.006976946*Marital_Status_2_+ 0.0029754745*Marital_Status_3_+
-0.005574564*Marital_Status_4_+ 0.0079340274*Marital_Status_5_+
0.0743426991*_S1_ACCEPTEDCMPTOTAL+ 0.4172241749*_S2_FRQ+ -0.756399427*_S3_MNT+
0.4836524496*_S4_MNTMEATPRODUCTS+ -0.1064254*_S5_NUMCATALOGPURCHASES+
-0.033812052*_S6_NUMDEALSPURCHASES+ 0.0394187446*_S7_NUMWEBVISITSMONTH+
0.0069739491*_S8_RECENCY;
725908    +/*----------------------------------------------*/
725909    +* Component 2 at stage 4;
MPRINT(EM_DIAGRAM):   * Component 2 at stage 4;
725910    +/*----------------------------------------------*/
725911    +;
MPRINT(EM_DIAGRAM):   ;
725912    +_SPRIN42=
725913    +-0.158984376*Marital_Status_1_+
725914    +-0.029292114*Marital_Status_2_+
725915    +0.0652374414*Marital_Status_3_+
725916    +-0.047272583*Marital_Status_4_+
725917    +0.3235921012*Marital_Status_5_+
725918    +0.0050764455*_S1_ACCEPTEDCMPTOTAL+
725919    +-0.053126301*_S2_FRQ+
725920    +-0.029062364*_S3_MNT+
725921    +-0.026276531*_S4_MNTMEATPRODUCTS+
725922    +-0.016173632*_S5_NUMCATALOGPURCHASES+
725923    +-0.160580587*_S6_NUMDEALSPURCHASES+
725924    +-0.063858808*_S7_NUMWEBVISITSMONTH+
725925    +0.9100299784*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN42= -0.158984376*Marital_Status_1_+
-0.029292114*Marital_Status_2_+ 0.0652374414*Marital_Status_3_+
-0.047272583*Marital_Status_4_+ 0.3235921012*Marital_Status_5_+
0.0050764455*_S1_ACCEPTEDCMPTOTAL+ -0.053126301*_S2_FRQ+ -0.029062364*_S3_MNT+
-0.026276531*_S4_MNTMEATPRODUCTS+ -0.016173632*_S5_NUMCATALOGPURCHASES+
-0.160580587*_S6_NUMDEALSPURCHASES+ -0.063858808*_S7_NUMWEBVISITSMONTH+
0.9100299784*_S8_RECENCY;
725926    +/*----------------------------------------------*/
725927    +* Component 3 at stage 4;
MPRINT(EM_DIAGRAM):   * Component 3 at stage 4;
725928    +/*----------------------------------------------*/
725929    +;
MPRINT(EM_DIAGRAM):   ;
725930    +_SPRIN43=
725931    +-0.795416959*Marital_Status_1_+
725932    +0.0824648192*Marital_Status_2_+
725933    +0.2317116976*Marital_Status_3_+
725934    +0.2690782351*Marital_Status_4_+
725935    +-0.062146515*Marital_Status_5_+
725936    +0.0182327007*_S1_ACCEPTEDCMPTOTAL+
725937    +0.1513611302*_S2_FRQ+
725938    +0.0513363831*_S3_MNT+
725939    +-0.010073056*_S4_MNTMEATPRODUCTS+
725940    +0.0406819984*_S5_NUMCATALOGPURCHASES+
725941    +0.4050473454*_S6_NUMDEALSPURCHASES+
725942    +0.1960229521*_S7_NUMWEBVISITSMONTH+
725943    +-0.020806956*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN43= -0.795416959*Marital_Status_1_+
0.0824648192*Marital_Status_2_+ 0.2317116976*Marital_Status_3_+
0.2690782351*Marital_Status_4_+ -0.062146515*Marital_Status_5_+
0.0182327007*_S1_ACCEPTEDCMPTOTAL+ 0.1513611302*_S2_FRQ+ 0.0513363831*_S3_MNT+
-0.010073056*_S4_MNTMEATPRODUCTS+ 0.0406819984*_S5_NUMCATALOGPURCHASES+
0.4050473454*_S6_NUMDEALSPURCHASES+ 0.1960229521*_S7_NUMWEBVISITSMONTH+
-0.020806956*_S8_RECENCY;
725944    +/*----------------------------------------------*/
725945    +* Component 4 at stage 4;
MPRINT(EM_DIAGRAM):   * Component 4 at stage 4;
725946    +/*----------------------------------------------*/
725947    +;
MPRINT(EM_DIAGRAM):   ;
725948    +_SPRIN44=
725949    +0.0422645704*Marital_Status_1_+
725950    +-0.045690447*Marital_Status_2_+
725951    +0.7146731592*Marital_Status_3_+
725952    +-0.682396424*Marital_Status_4_+
725953    +0.0253007126*Marital_Status_5_+
725954    +0.0300322737*_S1_ACCEPTEDCMPTOTAL+
725955    +0.0233845108*_S2_FRQ+
725956    +0.0185707635*_S3_MNT+
725957    +-0.002634244*_S4_MNTMEATPRODUCTS+
725958    +0.0212505751*_S5_NUMCATALOGPURCHASES+
725959    +0.0939199651*_S6_NUMDEALSPURCHASES+
725960    +0.0592362947*_S7_NUMWEBVISITSMONTH+
725961    +-0.066942428*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN44= 0.0422645704*Marital_Status_1_+
-0.045690447*Marital_Status_2_+ 0.7146731592*Marital_Status_3_+
-0.682396424*Marital_Status_4_+ 0.0253007126*Marital_Status_5_+
0.0300322737*_S1_ACCEPTEDCMPTOTAL+ 0.0233845108*_S2_FRQ+ 0.0185707635*_S3_MNT+
-0.002634244*_S4_MNTMEATPRODUCTS+ 0.0212505751*_S5_NUMCATALOGPURCHASES+
0.0939199651*_S6_NUMDEALSPURCHASES+ 0.0592362947*_S7_NUMWEBVISITSMONTH+
-0.066942428*_S8_RECENCY;
725962    +/*----------------------------------------------*/
725963    +* Component 5 at stage 4;
MPRINT(EM_DIAGRAM):   * Component 5 at stage 4;
725964    +/*----------------------------------------------*/
725965    +;
MPRINT(EM_DIAGRAM):   ;
725966    +_SPRIN45=
725967    +-0.030533433*Marital_Status_1_+
725968    +-0.027998459*Marital_Status_2_+
725969    +0.0214882295*Marital_Status_3_+
725970    +0.0497827209*Marital_Status_4_+
725971    +-0.040759072*Marital_Status_5_+
725972    +0.9051379856*_S1_ACCEPTEDCMPTOTAL+
725973    +-0.141633693*_S2_FRQ+
725974    +-0.027881214*_S3_MNT+
725975    +-0.116645115*_S4_MNTMEATPRODUCTS+
725976    +-0.086193895*_S5_NUMCATALOGPURCHASES+
725977    +-0.224050139*_S6_NUMDEALSPURCHASES+
725978    +0.2854421342*_S7_NUMWEBVISITSMONTH+
725979    +-0.029309469*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN45= -0.030533433*Marital_Status_1_+
-0.027998459*Marital_Status_2_+ 0.0214882295*Marital_Status_3_+
0.0497827209*Marital_Status_4_+ -0.040759072*Marital_Status_5_+
0.9051379856*_S1_ACCEPTEDCMPTOTAL+ -0.141633693*_S2_FRQ+ -0.027881214*_S3_MNT+
-0.116645115*_S4_MNTMEATPRODUCTS+ -0.086193895*_S5_NUMCATALOGPURCHASES+
-0.224050139*_S6_NUMDEALSPURCHASES+ 0.2854421342*_S7_NUMWEBVISITSMONTH+
-0.029309469*_S8_RECENCY;
725980    +/*----------------------------------------------*/
725981    +* Component 6 at stage 4;
MPRINT(EM_DIAGRAM):   * Component 6 at stage 4;
725982    +/*----------------------------------------------*/
725983    +;
MPRINT(EM_DIAGRAM):   ;
725984    +_SPRIN46=
725985    +0.0088433896*Marital_Status_1_+
725986    +-0.012550627*Marital_Status_2_+
725987    +-0.002271234*Marital_Status_3_+
725988    +0.0021642821*Marital_Status_4_+
725989    +0.0206306135*Marital_Status_5_+
725990    +0.1009035281*_S1_ACCEPTEDCMPTOTAL+
725991    +-0.456946736*_S2_FRQ+
725992    +0.1988530541*_S3_MNT+
725993    +0.6183600004*_S4_MNTMEATPRODUCTS+
725994    +-0.481393504*_S5_NUMCATALOGPURCHASES+
725995    +0.311462421*_S6_NUMDEALSPURCHASES+
725996    +-0.170402162*_S7_NUMWEBVISITSMONTH+
725997    +0.0254931556*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN46= 0.0088433896*Marital_Status_1_+
-0.012550627*Marital_Status_2_+ -0.002271234*Marital_Status_3_+
0.0021642821*Marital_Status_4_+ 0.0206306135*Marital_Status_5_+
0.1009035281*_S1_ACCEPTEDCMPTOTAL+ -0.456946736*_S2_FRQ+ 0.1988530541*_S3_MNT+
0.6183600004*_S4_MNTMEATPRODUCTS+ -0.481393504*_S5_NUMCATALOGPURCHASES+
0.311462421*_S6_NUMDEALSPURCHASES+ -0.170402162*_S7_NUMWEBVISITSMONTH+
0.0254931556*_S8_RECENCY;
725998    +;
MPRINT(EM_DIAGRAM):   ;
725999    +/*----------------------------------------------*/
726000    +* Component 1 at stage 5;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 5;
726001    +/*----------------------------------------------*/
726002    +;
MPRINT(EM_DIAGRAM):   ;
726003    +_SPRIN51=
726004    +-0.030533433*Marital_Status_1_+
726005    +-0.027998459*Marital_Status_2_+
726006    +0.0214882295*Marital_Status_3_+
726007    +0.0497827209*Marital_Status_4_+
726008    +-0.040759072*Marital_Status_5_+
726009    +0.9051379856*_S1_ACCEPTEDCMPTOTAL+
726010    +-0.141633693*_S2_FRQ+
726011    +-0.027881214*_S3_MNT+
726012    +-0.116645115*_S4_MNTMEATPRODUCTS+
726013    +-0.086193895*_S5_NUMCATALOGPURCHASES+
726014    +-0.224050139*_S6_NUMDEALSPURCHASES+
726015    +0.2854421342*_S7_NUMWEBVISITSMONTH+
726016    +-0.029309469*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN51= -0.030533433*Marital_Status_1_+
-0.027998459*Marital_Status_2_+ 0.0214882295*Marital_Status_3_+
0.0497827209*Marital_Status_4_+ -0.040759072*Marital_Status_5_+
0.9051379856*_S1_ACCEPTEDCMPTOTAL+ -0.141633693*_S2_FRQ+ -0.027881214*_S3_MNT+
-0.116645115*_S4_MNTMEATPRODUCTS+ -0.086193895*_S5_NUMCATALOGPURCHASES+
-0.224050139*_S6_NUMDEALSPURCHASES+ 0.2854421342*_S7_NUMWEBVISITSMONTH+
-0.029309469*_S8_RECENCY;
726017    +/*----------------------------------------------*/
726018    +* Component 2 at stage 5;
MPRINT(EM_DIAGRAM):   * Component 2 at stage 5;
726019    +/*----------------------------------------------*/
726020    +;
MPRINT(EM_DIAGRAM):   ;
726021    +_SPRIN52=
726022    +-0.009163356*Marital_Status_1_+
726023    +-0.017190525*Marital_Status_2_+
726024    +0.0041674821*Marital_Status_3_+
726025    +0.0108473335*Marital_Status_4_+
726026    +0.0286372045*Marital_Status_5_+
726027    +0.2589037298*_S1_ACCEPTEDCMPTOTAL+
726028    +0.4288634785*_S2_FRQ+
726029    +0.468169543*_S3_MNT+
726030    +0.4406657126*_S4_MNTMEATPRODUCTS+
726031    +0.4512293115*_S5_NUMCATALOGPURCHASES+
726032    +-0.120164039*_S6_NUMDEALSPURCHASES+
726033    +-0.341012847*_S7_NUMWEBVISITSMONTH+
726034    +0.002081234*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN52= -0.009163356*Marital_Status_1_+
-0.017190525*Marital_Status_2_+ 0.0041674821*Marital_Status_3_+
0.0108473335*Marital_Status_4_+ 0.0286372045*Marital_Status_5_+
0.2589037298*_S1_ACCEPTEDCMPTOTAL+ 0.4288634785*_S2_FRQ+ 0.468169543*_S3_MNT+
0.4406657126*_S4_MNTMEATPRODUCTS+ 0.4512293115*_S5_NUMCATALOGPURCHASES+
-0.120164039*_S6_NUMDEALSPURCHASES+ -0.341012847*_S7_NUMWEBVISITSMONTH+
0.002081234*_S8_RECENCY;
726035    +/*----------------------------------------------*/
726036    +* Component 3 at stage 5;
MPRINT(EM_DIAGRAM):   * Component 3 at stage 5;
726037    +/*----------------------------------------------*/
726038    +;
MPRINT(EM_DIAGRAM):   ;
726039    +_SPRIN53=
726040    +-0.158984376*Marital_Status_1_+
726041    +-0.029292114*Marital_Status_2_+
726042    +0.0652374414*Marital_Status_3_+
726043    +-0.047272583*Marital_Status_4_+
726044    +0.3235921012*Marital_Status_5_+
726045    +0.0050764455*_S1_ACCEPTEDCMPTOTAL+
726046    +-0.053126301*_S2_FRQ+
726047    +-0.029062364*_S3_MNT+
726048    +-0.026276531*_S4_MNTMEATPRODUCTS+
726049    +-0.016173632*_S5_NUMCATALOGPURCHASES+
726050    +-0.160580587*_S6_NUMDEALSPURCHASES+
726051    +-0.063858808*_S7_NUMWEBVISITSMONTH+
726052    +0.9100299784*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN53= -0.158984376*Marital_Status_1_+
-0.029292114*Marital_Status_2_+ 0.0652374414*Marital_Status_3_+
-0.047272583*Marital_Status_4_+ 0.3235921012*Marital_Status_5_+
0.0050764455*_S1_ACCEPTEDCMPTOTAL+ -0.053126301*_S2_FRQ+ -0.029062364*_S3_MNT+
-0.026276531*_S4_MNTMEATPRODUCTS+ -0.016173632*_S5_NUMCATALOGPURCHASES+
-0.160580587*_S6_NUMDEALSPURCHASES+ -0.063858808*_S7_NUMWEBVISITSMONTH+
0.9100299784*_S8_RECENCY;
726053    +;
MPRINT(EM_DIAGRAM):   ;
726054    +DROP
726055    +_SPRIN01
726056    +_SPRIN02
726057    +_SPRIN03
726058    +_SPRIN04
726059    +_SPRIN05
726060    +_SPRIN06
726061    +_SPRIN11
726062    +_SPRIN12
726063    +_SPRIN13
726064    +_SPRIN14
726065    +_SPRIN15
726066    +_SPRIN16
726067    +_SPRIN21
726068    +_SPRIN22
726069    +_SPRIN23
726070    +_SPRIN24
726071    +_SPRIN25
726072    +_SPRIN26
726073    +_SPRIN31
726074    +_SPRIN32
726075    +_SPRIN33
726076    +_SPRIN34
726077    +_SPRIN35
726078    +_SPRIN36
726079    +_SPRIN41
726080    +_SPRIN42
726081    +_SPRIN43
726082    +_SPRIN44
726083    +_SPRIN45
726084    +_SPRIN46
726085    +_SPRIN51
726086    +_SPRIN52
726087    +_SPRIN53
726088    +;
MPRINT(EM_DIAGRAM):   DROP _SPRIN01 _SPRIN02 _SPRIN03 _SPRIN04 _SPRIN05 _SPRIN06 _SPRIN11
_SPRIN12 _SPRIN13 _SPRIN14 _SPRIN15 _SPRIN16 _SPRIN21 _SPRIN22 _SPRIN23 _SPRIN24 _SPRIN25
_SPRIN26 _SPRIN31 _SPRIN32 _SPRIN33 _SPRIN34 _SPRIN35 _SPRIN36 _SPRIN41 _SPRIN42 _SPRIN43
_SPRIN44 _SPRIN45 _SPRIN46 _SPRIN51 _SPRIN52 _SPRIN53 ;
726089    +;
MPRINT(EM_DIAGRAM):   ;
726090    +/**********************************************************/
726091    +* Selected activation function at stage 0 = SQUARE;
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 0 = SQUARE;
726092    +/**********************************************************/
726093    +;
MPRINT(EM_DIAGRAM):   ;
726094    +_YHAT0=3.798978316
726095    ++(-1.22825262909667+-0.04299302501804*_SPRIN01)*_SPRIN01
726096    ++(1.98251776355506+-0.01908423872862*_SPRIN02)*_SPRIN02
726097    ++(-0.62146334798025+0.02278042228177*_SPRIN03)*_SPRIN03
726098    ++(-2.28151452670447+0.14883315570938*_SPRIN04)*_SPRIN04
726099    ++(-0.62817566899844+-0.20649000825165*_SPRIN05)*_SPRIN05
726100    ++(-0.65010059015777+-0.01294373133357*_SPRIN06)*_SPRIN06
726101    +;
MPRINT(EM_DIAGRAM):   _YHAT0=3.798978316
+(-1.22825262909667+-0.04299302501804*_SPRIN01)*_SPRIN01
+(1.98251776355506+-0.01908423872862*_SPRIN02)*_SPRIN02
+(-0.62146334798025+0.02278042228177*_SPRIN03)*_SPRIN03
+(-2.28151452670447+0.14883315570938*_SPRIN04)*_SPRIN04
+(-0.62817566899844+-0.20649000825165*_SPRIN05)*_SPRIN05
+(-0.65010059015777+-0.01294373133357*_SPRIN06)*_SPRIN06 ;
726102    +/*--- Target level is binary, take a logistic link function --*/
726103    +if _YHAT0 > 0 then _YHAT0=1/(1+exp(-_YHAT0));
MPRINT(EM_DIAGRAM):   if _YHAT0 > 0 then _YHAT0=1/(1+exp(-_YHAT0));
726104    +else _YHAT0=exp(_YHAT0)/(1+exp(_YHAT0));
MPRINT(EM_DIAGRAM):   else _YHAT0=exp(_YHAT0)/(1+exp(_YHAT0));
726105    +;
MPRINT(EM_DIAGRAM):   ;
726106    +/**********************************************************/
726107    +* Selected activation function at stage 1 = SQUARE;
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 1 = SQUARE;
726108    +/**********************************************************/
726109    +;
MPRINT(EM_DIAGRAM):   ;
726110    +_RHAT1=0.0149657388
726111    ++(-0.05835608559578+0.01214775792274*_SPRIN11)*_SPRIN11
726112    ++(-0.08057160048236+-0.06242653916252*_SPRIN12)*_SPRIN12
726113    ++(-0.04279674411413+-0.01164723613787*_SPRIN13)*_SPRIN13
726114    ++(-0.02712577531283+0.0025113183348*_SPRIN14)*_SPRIN14
726115    ++(-0.01920040627235+-0.00073026462435*_SPRIN15)*_SPRIN15
726116    ++(-0.01318789614847+-0.00005253336044*_SPRIN16)*_SPRIN16
726117    +;
MPRINT(EM_DIAGRAM):   _RHAT1=0.0149657388
+(-0.05835608559578+0.01214775792274*_SPRIN11)*_SPRIN11
+(-0.08057160048236+-0.06242653916252*_SPRIN12)*_SPRIN12
+(-0.04279674411413+-0.01164723613787*_SPRIN13)*_SPRIN13
+(-0.02712577531283+0.0025113183348*_SPRIN14)*_SPRIN14
+(-0.01920040627235+-0.00073026462435*_SPRIN15)*_SPRIN15
+(-0.01318789614847+-0.00005253336044*_SPRIN16)*_SPRIN16 ;
726118    +;
MPRINT(EM_DIAGRAM):   ;
726119    +/**********************************************************/
726120    +* Selected activation function at stage 2 = SQUARE;
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 2 = SQUARE;
726121    +/**********************************************************/
726122    +;
MPRINT(EM_DIAGRAM):   ;
726123    +_RHAT2=-0.029646812
726124    ++(-0.06196691124613+-0.04998114082335*_SPRIN21)*_SPRIN21
726125    ++(0.00276424597854+0.00615099991046*_SPRIN22)*_SPRIN22
726126    ++(-0.00753510645576+-0.00062778720444*_SPRIN23)*_SPRIN23
726127    ++(-0.01436555718974+-0.03060520362936*_SPRIN24)*_SPRIN24
726128    ++(-0.01694591616438+0.00197749018349*_SPRIN25)*_SPRIN25
726129    ++(-0.02237956446504+-0.00115040932227*_SPRIN26)*_SPRIN26
726130    +;
MPRINT(EM_DIAGRAM):   _RHAT2=-0.029646812
+(-0.06196691124613+-0.04998114082335*_SPRIN21)*_SPRIN21
+(0.00276424597854+0.00615099991046*_SPRIN22)*_SPRIN22
+(-0.00753510645576+-0.00062778720444*_SPRIN23)*_SPRIN23
+(-0.01436555718974+-0.03060520362936*_SPRIN24)*_SPRIN24
+(-0.01694591616438+0.00197749018349*_SPRIN25)*_SPRIN25
+(-0.02237956446504+-0.00115040932227*_SPRIN26)*_SPRIN26 ;
726131    +;
MPRINT(EM_DIAGRAM):   ;
726132    +/**********************************************************/
726133    +* Selected activation function at stage 3 = COS;
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 3 = COS;
726134    +/**********************************************************/
726135    +;
MPRINT(EM_DIAGRAM):   ;
726136    +_RHAT3=0.0257191945
726137    ++-0.02800185435927*COS(1.41896099294643*_SPRIN31*(2/ARCOS(-1)))
726138    ++0.3412398353768*COS(0.32259583044937*_SPRIN32*(2/ARCOS(-1)))
726139    ++0.01060654682685*COS(-0.35971082122701*_SPRIN33*(2/ARCOS(-1)))
726140    ++-2.26076370664657*COS(0.00941787038345*_SPRIN34*(2/ARCOS(-1)))
726141    ++1.31170592303827*COS(-0.03085251908102*_SPRIN35*(2/ARCOS(-1)))
726142    ++0.59239568564671*COS(0.09769476696649*_SPRIN36*(2/ARCOS(-1)))
726143    +;
MPRINT(EM_DIAGRAM):   _RHAT3=0.0257191945
+-0.02800185435927*COS(1.41896099294643*_SPRIN31*(2/ARCOS(-1)))
+0.3412398353768*COS(0.32259583044937*_SPRIN32*(2/ARCOS(-1)))
+0.01060654682685*COS(-0.35971082122701*_SPRIN33*(2/ARCOS(-1)))
+-2.26076370664657*COS(0.00941787038345*_SPRIN34*(2/ARCOS(-1)))
+1.31170592303827*COS(-0.03085251908102*_SPRIN35*(2/ARCOS(-1)))
+0.59239568564671*COS(0.09769476696649*_SPRIN36*(2/ARCOS(-1))) ;
726144    +;
MPRINT(EM_DIAGRAM):   ;
726145    +/**********************************************************/
726146    +* Selected activation function at stage 4 = SIN;
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 4 = SIN;
726147    +/**********************************************************/
726148    +;
MPRINT(EM_DIAGRAM):   ;
726149    +_RHAT4=0.0029327183
726150    ++0.03771647945026*SIN(-1.2352576692348*_SPRIN41*(2/ARCOS(-1)))
726151    ++-0.02838436219569*SIN(-0.19049287491309*_SPRIN42*(2/ARCOS(-1)))
726152    ++-0.04691078311928*SIN(-0.12359709908775*_SPRIN43*(2/ARCOS(-1)))
726153    ++0.00599852350489*SIN(-0.3868829620053*_SPRIN44*(2/ARCOS(-1)))
726154    ++0.03740371310513*SIN(-0.00842435790751*_SPRIN45*(2/ARCOS(-1)))
726155    ++0.00423439430896*SIN(-0.71742307187617*_SPRIN46*(2/ARCOS(-1)))
726156    +;
MPRINT(EM_DIAGRAM):   _RHAT4=0.0029327183
+0.03771647945026*SIN(-1.2352576692348*_SPRIN41*(2/ARCOS(-1)))
+-0.02838436219569*SIN(-0.19049287491309*_SPRIN42*(2/ARCOS(-1)))
+-0.04691078311928*SIN(-0.12359709908775*_SPRIN43*(2/ARCOS(-1)))
+0.00599852350489*SIN(-0.3868829620053*_SPRIN44*(2/ARCOS(-1)))
+0.03740371310513*SIN(-0.00842435790751*_SPRIN45*(2/ARCOS(-1)))
+0.00423439430896*SIN(-0.71742307187617*_SPRIN46*(2/ARCOS(-1))) ;
726157    +;
MPRINT(EM_DIAGRAM):   ;
726158    +/**********************************************************/
726159    +* Selected activation function at stage 5 = EXP;
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 5 = EXP;
726160    +/**********************************************************/
726161    +;
MPRINT(EM_DIAGRAM):   ;
726162    +_RHAT5=-0.070233579
726163    ++0.11046568750913*exp(0.01760697003035*_SPRIN51)
726164    ++0.01657876628253*exp(-0.11623043616899*_SPRIN52)
726165    ++-0.06066697184384*exp(-0.06633987365798*_SPRIN53)
726166    +;
MPRINT(EM_DIAGRAM):   _RHAT5=-0.070233579 +0.11046568750913*exp(0.01760697003035*_SPRIN51)
+0.01657876628253*exp(-0.11623043616899*_SPRIN52)
+-0.06066697184384*exp(-0.06633987365798*_SPRIN53) ;
726167    +;
MPRINT(EM_DIAGRAM):   ;
726168    +_tmpPredict
726169    +=_YHAT0
726170    ++_RHAT1
726171    ++_RHAT2
726172    ++_RHAT3
726173    ++_RHAT4
726174    ++_RHAT5
726175    +;
MPRINT(EM_DIAGRAM):   _tmpPredict =_YHAT0 +_RHAT1 +_RHAT2 +_RHAT3 +_RHAT4 +_RHAT5 ;
726176    +_tmpPredict=1-_tmpPredict;
MPRINT(EM_DIAGRAM):   _tmpPredict=1-_tmpPredict;
726177    +If _tmpPredict > 1 then _tmpPredict=1;
MPRINT(EM_DIAGRAM):   If _tmpPredict > 1 then _tmpPredict=1;
726178    +else if _tmpPredict < 0 then _tmpPredict=0;
MPRINT(EM_DIAGRAM):   else if _tmpPredict < 0 then _tmpPredict=0;
726179    +P_DepVar1=_tmpPredict;
MPRINT(EM_DIAGRAM):   P_DepVar1=_tmpPredict;
726180    +label P_DepVar1 = "Predicted: DepVar=1";
MPRINT(EM_DIAGRAM):   label P_DepVar1 = "Predicted: DepVar=1";
726181    +P_DepVar0=1-_tmpPredict;
MPRINT(EM_DIAGRAM):   P_DepVar0=1-_tmpPredict;
726182    +label P_DepVar0 = "Predicted: DepVar=0";
MPRINT(EM_DIAGRAM):   label P_DepVar0 = "Predicted: DepVar=0";
726183    +if P_DepVar1 ge 0.5 then I_DepVar="1";
MPRINT(EM_DIAGRAM):   if P_DepVar1 ge 0.5 then I_DepVar="1";
726184    +else I_DepVar="0";
MPRINT(EM_DIAGRAM):   else I_DepVar="0";
726185    +if F_DepVar NE "1" AND F_DepVar NE "0" then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE "1" AND F_DepVar NE "0" then do;
726186    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
726187    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
726188    +end;
MPRINT(EM_DIAGRAM):   end;
726189    +else do;
MPRINT(EM_DIAGRAM):   else do;
726190    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
726191    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
726192    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
726193    +WHEN("1") R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN("1") R_DepVar1 = R_DepVar1 +1;
726194    +WHEN("0") R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN("0") R_DepVar0 = R_DepVar0 +1;
726195    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
726196    +end;
MPRINT(EM_DIAGRAM):   end;
726197    +END;
MPRINT(EM_DIAGRAM):   END;
726198    +;
MPRINT(EM_DIAGRAM):   ;
726199    +DROP _YHAT0
726200    +_RHAT1
726201    +_RHAT2
726202    +_RHAT3
726203    +_RHAT4
726204    +_RHAT5
726205    +_tmpPredict
726206    +Marital_Status_1_
726207    +Marital_Status_2_
726208    +Marital_Status_3_
726209    +Marital_Status_4_
726210    +Marital_Status_5_
726211    +_S1_ACCEPTEDCMPTOTAL
726212    +_S2_FRQ
726213    +_S3_MNT
726214    +_S4_MNTMEATPRODUCTS
726215    +_S5_NUMCATALOGPURCHASES
726216    +_S6_NUMDEALSPURCHASES
726217    +_S7_NUMWEBVISITSMONTH
726218    +_S8_RECENCY
726219    +;
MPRINT(EM_DIAGRAM):   DROP _YHAT0 _RHAT1 _RHAT2 _RHAT3 _RHAT4 _RHAT5 _tmpPredict
Marital_Status_1_ Marital_Status_2_ Marital_Status_3_ Marital_Status_4_ Marital_Status_5_
_S1_ACCEPTEDCMPTOTAL _S2_FRQ _S3_MNT _S4_MNTMEATPRODUCTS _S5_NUMCATALOGPURCHASES
_S6_NUMDEALSPURCHASES _S7_NUMWEBVISITSMONTH _S8_RECENCY ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
726220     run;
 
NOTE: DATA STEP view saved on file EMWS8.DMNEURAL3_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
726221     quit;
726222     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
726223     filename emflow
726223   ! "C:\\predictive-models-project\Workspaces\EMWS8\DMNeural3\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\DMNeural3\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * DMNeural3: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
726224     *------------------------------------------------------------*;
726225     * DMNeural3: Scoring VALIDATE data;
726226     *------------------------------------------------------------*;
726227     data EMWS8.DMNeural3_VALIDATE
726228     / view=EMWS8.DMNeural3_VALIDATE
726229     ;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural3_VALIDATE / view=EMWS8.DMNeural3_VALIDATE ;
726230     set EMWS8.Meta3_VALIDATE
726231     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_VALIDATE ;
726232     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\DMNeural3\EMFLOWSCORE.sas.
726233    +**********************************************************;
MPRINT(EM_DIAGRAM):   **********************************************************;
726234    +**** Begin scoring code for DMNeural;
MPRINT(EM_DIAGRAM):   **** Begin scoring code for DMNeural;
726235    +**********************************************************;
MPRINT(EM_DIAGRAM):   **********************************************************;
726236    +LENGTH _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
726237    +LABEL _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = "Warnings";
726238    +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar
726238   !+       I_DepVar $%DMNORLEN;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
726239    +LABEL I_DepVar="Into: DepVar";
MPRINT(EM_DIAGRAM):   LABEL I_DepVar= "Into: DepVar";
726240    +LENGTH _FORMAT_ $200;
MPRINT(EM_DIAGRAM):   LENGTH _FORMAT_ $200;
726241    +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH _NORMFMT_
726241   !+       _NORMFMT_ $%DMNORLEN;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
726242    +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH F_DepVar
726242   !+       F_DepVar $%DMNORLEN;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
726243    +LABEL F_DepVar="From: DepVar";
MPRINT(EM_DIAGRAM):   LABEL F_DepVar= "From: DepVar";
726244    +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH _TARGNOR_
726244   !+       _TARGNOR_ $%DMNORLEN;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
726245    +_FORMAT_ =PUT(DepVar, BEST.);
MPRINT(EM_DIAGRAM):   _FORMAT_ =PUT(DepVar, BEST.);
726246    +%DMNORMCP(_FORMAT_ , _TARGNOR_ );
MPRINT(DMNORMCP):   _TARGNOR_=dmnorm(_FORMAT_,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
726247    +F_DepVar=_TARGNOR_;
MPRINT(EM_DIAGRAM):   F_DepVar=_TARGNOR_;
726248    +;
MPRINT(EM_DIAGRAM):   ;
726249    +/************************************************/
726250    +* Create dummy variables for Marital_Status;
MPRINT(EM_DIAGRAM):   * Create dummy variables for Marital_Status;
726251    +/************************************************/
726252    +;
MPRINT(EM_DIAGRAM):   ;
726253    +_FORMAT_ =PUT(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FORMAT_ =PUT(Marital_Status,$8.0);
726254    +%DMNORMCP(_FORMAT_ , _NORMFMT_ );
MPRINT(DMNORMCP):   _NORMFMT_=dmnorm(_FORMAT_,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
726255    +IF _NORMFMT_ ="DIVORCED" THEN Marital_Status_1_=2.98126168425242;
MPRINT(EM_DIAGRAM):   IF _NORMFMT_ ="DIVORCED" THEN Marital_Status_1_=2.98126168425242;
726256    +/*---- (1-0.10109519797809)/0.30151824872338 -----*/
726257    +ELSE Marital_Status_1_=-0.33528716224019;
MPRINT(EM_DIAGRAM):   ELSE Marital_Status_1_=-0.33528716224019;
726258    +/*---- (0-0.10109519797809)/0.30151824872338 -----*/
726259    +IF _NORMFMT_ ="MARRIED" THEN Marital_Status_2_=1.18621875805397;
MPRINT(EM_DIAGRAM):   IF _NORMFMT_ ="MARRIED" THEN Marital_Status_2_=1.18621875805397;
726260    +/*---- (1-0.41533277169334)/0.49288314177885 -----*/
726261    +ELSE Marital_Status_2_=-0.84265972294036;
MPRINT(EM_DIAGRAM):   ELSE Marital_Status_2_=-0.84265972294036;
726262    +/*---- (0-0.41533277169334)/0.49288314177885 -----*/
726263    +IF _NORMFMT_ ="SINGLE" THEN Marital_Status_3_=1.8948253753083;
MPRINT(EM_DIAGRAM):   IF _NORMFMT_ ="SINGLE" THEN Marital_Status_3_=1.8948253753083;
726264    +/*---- (1-0.21777590564448)/0.41282120481854 -----*/
726265    +ELSE Marital_Status_3_=-0.52753081261949;
MPRINT(EM_DIAGRAM):   ELSE Marital_Status_3_=-0.52753081261949;
726266    +/*---- (0-0.21777590564448)/0.41282120481854 -----*/
726267    +IF _NORMFMT_ ="TOGETHER" THEN Marital_Status_4_=1.80152761035906;
MPRINT(EM_DIAGRAM):   IF _NORMFMT_ ="TOGETHER" THEN Marital_Status_4_=1.80152761035906;
726268    +/*---- (1-0.23546756529064)/0.42438008183342 -----*/
726269    +ELSE Marital_Status_4_=-0.55485065244667;
MPRINT(EM_DIAGRAM):   ELSE Marital_Status_4_=-0.55485065244667;
726270    +/*---- (0-0.23546756529064)/0.42438008183342 -----*/
726271    +IF _NORMFMT_ ="WIDOW" THEN Marital_Status_5_=5.65320745801221;
MPRINT(EM_DIAGRAM):   IF _NORMFMT_ ="WIDOW" THEN Marital_Status_5_=5.65320745801221;
726272    +/*---- (1-0.03032855939342)/0.17152589000289 -----*/
726273    +ELSE Marital_Status_5_=-0.17681621936441;
MPRINT(EM_DIAGRAM):   ELSE Marital_Status_5_=-0.17681621936441;
726274    +/*---- (0-0.03032855939342)/0.17152589000289 -----*/
726275    +DROP
726276    +_FORMAT_ _NORMFMT_;
MPRINT(EM_DIAGRAM):   DROP _FORMAT_ _NORMFMT_;
726277    +;
MPRINT(EM_DIAGRAM):   ;
726278    +/*-------------------------------------------------------------------------*/
726279    +*Impute missing values for interval variables;
MPRINT(EM_DIAGRAM):   *Impute missing values for interval variables;
726280    +/*-------------------------------------------------------------------------*/
726281    +;
MPRINT(EM_DIAGRAM):   ;
726282    +if AcceptedCmpTotal=. then _S1_ACCEPTEDCMPTOTAL = 0;
MPRINT(EM_DIAGRAM):   if AcceptedCmpTotal=. then _S1_ACCEPTEDCMPTOTAL = 0;
726283    +else _S1_ACCEPTEDCMPTOTAL=(AcceptedCmpTotal-0.31255265374894)/0.66837726102124;
MPRINT(EM_DIAGRAM):   else
_S1_ACCEPTEDCMPTOTAL=(AcceptedCmpTotal-0.31255265374894)/0.66837726102124;
726284    +if Frq=. then _S2_FRQ = 0;
MPRINT(EM_DIAGRAM):   if Frq=. then _S2_FRQ = 0;
726285    +else _S2_FRQ=(Frq-12.6545914069081)/7.15980860291451;
MPRINT(EM_DIAGRAM):   else _S2_FRQ=(Frq-12.6545914069081)/7.15980860291451;
726286    +if Mnt=. then _S3_MNT = 0;
MPRINT(EM_DIAGRAM):   if Mnt=. then _S3_MNT = 0;
726287    +else _S3_MNT=(Mnt-615.68197135636)/604.537497355942;
MPRINT(EM_DIAGRAM):   else _S3_MNT=(Mnt-615.68197135636)/604.537497355942;
726288    +if MntMeatProducts=. then _S4_MNTMEATPRODUCTS = 0;
MPRINT(EM_DIAGRAM):   if MntMeatProducts=. then _S4_MNTMEATPRODUCTS = 0;
726289    +else _S4_MNTMEATPRODUCTS=(MntMeatProducts-169.965037910699)/216.176716057929;
MPRINT(EM_DIAGRAM):   else
_S4_MNTMEATPRODUCTS=(MntMeatProducts-169.965037910699)/216.176716057929;
726290    +if NumCatalogPurchases=. then _S5_NUMCATALOGPURCHASES = 0;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases=. then _S5_NUMCATALOGPURCHASES = 0;
726291    +else _S5_NUMCATALOGPURCHASES=(NumCatalogPurchases-2.64448188711036)/2.77214051734809
726291   !+;
MPRINT(EM_DIAGRAM):   else
_S5_NUMCATALOGPURCHASES=(NumCatalogPurchases-2.64448188711036)/2.77214051734809;
726292    +if NumDealsPurchases=. then _S6_NUMDEALSPURCHASES = 0;
MPRINT(EM_DIAGRAM):   if NumDealsPurchases=. then _S6_NUMDEALSPURCHASES = 0;
726293    +else _S6_NUMDEALSPURCHASES=(NumDealsPurchases-2.25526537489469)/1.67318269219337;
MPRINT(EM_DIAGRAM):   else
_S6_NUMDEALSPURCHASES=(NumDealsPurchases-2.25526537489469)/1.67318269219337;
726294    +if NumWebVisitsMonth=. then _S7_NUMWEBVISITSMONTH = 0;
MPRINT(EM_DIAGRAM):   if NumWebVisitsMonth=. then _S7_NUMWEBVISITSMONTH = 0;
726295    +else _S7_NUMWEBVISITSMONTH=(NumWebVisitsMonth-5.24220724515585)/2.33225525940929;
MPRINT(EM_DIAGRAM):   else
_S7_NUMWEBVISITSMONTH=(NumWebVisitsMonth-5.24220724515585)/2.33225525940929;
726296    +if Recency=. then _S8_RECENCY = 0;
MPRINT(EM_DIAGRAM):   if Recency=. then _S8_RECENCY = 0;
726297    +else _S8_RECENCY=(Recency-48.7742207245156)/28.8224799181808;
MPRINT(EM_DIAGRAM):   else _S8_RECENCY=(Recency-48.7742207245156)/28.8224799181808;
726298    +;
MPRINT(EM_DIAGRAM):   ;
726299    +/*----------------------------------------------*/
726300    +* Component 1 at stage 0;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 0;
726301    +/*----------------------------------------------*/
726302    +;
MPRINT(EM_DIAGRAM):   ;
726303    +_SPRIN01=
726304    +-0.030533433*Marital_Status_1_+
726305    +-0.027998459*Marital_Status_2_+
726306    +0.0214882295*Marital_Status_3_+
726307    +0.0497827209*Marital_Status_4_+
726308    +-0.040759072*Marital_Status_5_+
726309    +0.9051379856*_S1_ACCEPTEDCMPTOTAL+
726310    +-0.141633693*_S2_FRQ+
726311    +-0.027881214*_S3_MNT+
726312    +-0.116645115*_S4_MNTMEATPRODUCTS+
726313    +-0.086193895*_S5_NUMCATALOGPURCHASES+
726314    +-0.224050139*_S6_NUMDEALSPURCHASES+
726315    +0.2854421342*_S7_NUMWEBVISITSMONTH+
726316    +-0.029309469*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN01= -0.030533433*Marital_Status_1_+
-0.027998459*Marital_Status_2_+ 0.0214882295*Marital_Status_3_+
0.0497827209*Marital_Status_4_+ -0.040759072*Marital_Status_5_+
0.9051379856*_S1_ACCEPTEDCMPTOTAL+ -0.141633693*_S2_FRQ+ -0.027881214*_S3_MNT+
-0.116645115*_S4_MNTMEATPRODUCTS+ -0.086193895*_S5_NUMCATALOGPURCHASES+
-0.224050139*_S6_NUMDEALSPURCHASES+ 0.2854421342*_S7_NUMWEBVISITSMONTH+
-0.029309469*_S8_RECENCY;
726317    +/*----------------------------------------------*/
726318    +* Component 2 at stage 0;
MPRINT(EM_DIAGRAM):   * Component 2 at stage 0;
726319    +/*----------------------------------------------*/
726320    +;
MPRINT(EM_DIAGRAM):   ;
726321    +_SPRIN02=
726322    +-0.158984376*Marital_Status_1_+
726323    +-0.029292114*Marital_Status_2_+
726324    +0.0652374414*Marital_Status_3_+
726325    +-0.047272583*Marital_Status_4_+
726326    +0.3235921012*Marital_Status_5_+
726327    +0.0050764455*_S1_ACCEPTEDCMPTOTAL+
726328    +-0.053126301*_S2_FRQ+
726329    +-0.029062364*_S3_MNT+
726330    +-0.026276531*_S4_MNTMEATPRODUCTS+
726331    +-0.016173632*_S5_NUMCATALOGPURCHASES+
726332    +-0.160580587*_S6_NUMDEALSPURCHASES+
726333    +-0.063858808*_S7_NUMWEBVISITSMONTH+
726334    +0.9100299784*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN02= -0.158984376*Marital_Status_1_+
-0.029292114*Marital_Status_2_+ 0.0652374414*Marital_Status_3_+
-0.047272583*Marital_Status_4_+ 0.3235921012*Marital_Status_5_+
0.0050764455*_S1_ACCEPTEDCMPTOTAL+ -0.053126301*_S2_FRQ+ -0.029062364*_S3_MNT+
-0.026276531*_S4_MNTMEATPRODUCTS+ -0.016173632*_S5_NUMCATALOGPURCHASES+
-0.160580587*_S6_NUMDEALSPURCHASES+ -0.063858808*_S7_NUMWEBVISITSMONTH+
0.9100299784*_S8_RECENCY;
726335    +/*----------------------------------------------*/
726336    +* Component 3 at stage 0;
MPRINT(EM_DIAGRAM):   * Component 3 at stage 0;
726337    +/*----------------------------------------------*/
726338    +;
MPRINT(EM_DIAGRAM):   ;
726339    +_SPRIN03=
726340    +-0.009163356*Marital_Status_1_+
726341    +-0.017190525*Marital_Status_2_+
726342    +0.0041674821*Marital_Status_3_+
726343    +0.0108473335*Marital_Status_4_+
726344    +0.0286372045*Marital_Status_5_+
726345    +0.2589037298*_S1_ACCEPTEDCMPTOTAL+
726346    +0.4288634785*_S2_FRQ+
726347    +0.468169543*_S3_MNT+
726348    +0.4406657126*_S4_MNTMEATPRODUCTS+
726349    +0.4512293115*_S5_NUMCATALOGPURCHASES+
726350    +-0.120164039*_S6_NUMDEALSPURCHASES+
726351    +-0.341012847*_S7_NUMWEBVISITSMONTH+
726352    +0.002081234*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN03= -0.009163356*Marital_Status_1_+
-0.017190525*Marital_Status_2_+ 0.0041674821*Marital_Status_3_+
0.0108473335*Marital_Status_4_+ 0.0286372045*Marital_Status_5_+
0.2589037298*_S1_ACCEPTEDCMPTOTAL+ 0.4288634785*_S2_FRQ+ 0.468169543*_S3_MNT+
0.4406657126*_S4_MNTMEATPRODUCTS+ 0.4512293115*_S5_NUMCATALOGPURCHASES+
-0.120164039*_S6_NUMDEALSPURCHASES+ -0.341012847*_S7_NUMWEBVISITSMONTH+
0.002081234*_S8_RECENCY;
726353    +/*----------------------------------------------*/
726354    +* Component 4 at stage 0;
MPRINT(EM_DIAGRAM):   * Component 4 at stage 0;
726355    +/*----------------------------------------------*/
726356    +;
MPRINT(EM_DIAGRAM):   ;
726357    +_SPRIN04=
726358    +-0.004105841*Marital_Status_1_+
726359    +0.0026546575*Marital_Status_2_+
726360    +-0.011950511*Marital_Status_3_+
726361    +0.0078474067*Marital_Status_4_+
726362    +0.0089356261*Marital_Status_5_+
726363    +-0.004132789*_S1_ACCEPTEDCMPTOTAL+
726364    +-0.562859505*_S2_FRQ+
726365    +-0.277471603*_S3_MNT+
726366    +0.2126634859*_S4_MNTMEATPRODUCTS+
726367    +0.7310937079*_S5_NUMCATALOGPURCHASES+
726368    +0.1193426498*_S6_NUMDEALSPURCHASES+
726369    +0.1090597873*_S7_NUMWEBVISITSMONTH+
726370    +0.0036037072*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN04= -0.004105841*Marital_Status_1_+
0.0026546575*Marital_Status_2_+ -0.011950511*Marital_Status_3_+
0.0078474067*Marital_Status_4_+ 0.0089356261*Marital_Status_5_+
-0.004132789*_S1_ACCEPTEDCMPTOTAL+ -0.562859505*_S2_FRQ+ -0.277471603*_S3_MNT+
0.2126634859*_S4_MNTMEATPRODUCTS+ 0.7310937079*_S5_NUMCATALOGPURCHASES+
0.1193426498*_S6_NUMDEALSPURCHASES+ 0.1090597873*_S7_NUMWEBVISITSMONTH+
0.0036037072*_S8_RECENCY;
726371    +/*----------------------------------------------*/
726372    +* Component 5 at stage 0;
MPRINT(EM_DIAGRAM):   * Component 5 at stage 0;
726373    +/*----------------------------------------------*/
726374    +;
MPRINT(EM_DIAGRAM):   ;
726375    +_SPRIN05=
726376    +0.0422645704*Marital_Status_1_+
726377    +-0.045690447*Marital_Status_2_+
726378    +0.7146731592*Marital_Status_3_+
726379    +-0.682396424*Marital_Status_4_+
726380    +0.0253007126*Marital_Status_5_+
726381    +0.0300322737*_S1_ACCEPTEDCMPTOTAL+
726382    +0.0233845108*_S2_FRQ+
726383    +0.0185707635*_S3_MNT+
726384    +-0.002634244*_S4_MNTMEATPRODUCTS+
726385    +0.0212505751*_S5_NUMCATALOGPURCHASES+
726386    +0.0939199651*_S6_NUMDEALSPURCHASES+
726387    +0.0592362947*_S7_NUMWEBVISITSMONTH+
726388    +-0.066942428*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN05= 0.0422645704*Marital_Status_1_+
-0.045690447*Marital_Status_2_+ 0.7146731592*Marital_Status_3_+
-0.682396424*Marital_Status_4_+ 0.0253007126*Marital_Status_5_+
0.0300322737*_S1_ACCEPTEDCMPTOTAL+ 0.0233845108*_S2_FRQ+ 0.0185707635*_S3_MNT+
-0.002634244*_S4_MNTMEATPRODUCTS+ 0.0212505751*_S5_NUMCATALOGPURCHASES+
0.0939199651*_S6_NUMDEALSPURCHASES+ 0.0592362947*_S7_NUMWEBVISITSMONTH+
-0.066942428*_S8_RECENCY;
726389    +/*----------------------------------------------*/
726390    +* Component 6 at stage 0;
MPRINT(EM_DIAGRAM):   * Component 6 at stage 0;
726391    +/*----------------------------------------------*/
726392    +;
MPRINT(EM_DIAGRAM):   ;
726393    +_SPRIN06=
726394    +-0.133661323*Marital_Status_1_+
726395    +-0.051981669*Marital_Status_2_+
726396    +-0.137405736*Marital_Status_3_+
726397    +-0.079938161*Marital_Status_4_+
726398    +0.9128090284*Marital_Status_5_+
726399    +0.0224242054*_S1_ACCEPTEDCMPTOTAL+
726400    +-0.006793272*_S2_FRQ+
726401    +-0.013098113*_S3_MNT+
726402    +-0.029730878*_S4_MNTMEATPRODUCTS+
726403    +-0.014442513*_S5_NUMCATALOGPURCHASES+
726404    +0.0017352662*_S6_NUMDEALSPURCHASES+
726405    +0.0088977322*_S7_NUMWEBVISITSMONTH+
726406    +-0.34503122*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN06= -0.133661323*Marital_Status_1_+
-0.051981669*Marital_Status_2_+ -0.137405736*Marital_Status_3_+
-0.079938161*Marital_Status_4_+ 0.9128090284*Marital_Status_5_+
0.0224242054*_S1_ACCEPTEDCMPTOTAL+ -0.006793272*_S2_FRQ+ -0.013098113*_S3_MNT+
-0.029730878*_S4_MNTMEATPRODUCTS+ -0.014442513*_S5_NUMCATALOGPURCHASES+
0.0017352662*_S6_NUMDEALSPURCHASES+ 0.0088977322*_S7_NUMWEBVISITSMONTH+
-0.34503122*_S8_RECENCY;
726407    +;
MPRINT(EM_DIAGRAM):   ;
726408    +/*----------------------------------------------*/
726409    +* Component 1 at stage 1;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 1;
726410    +/*----------------------------------------------*/
726411    +;
MPRINT(EM_DIAGRAM):   ;
726412    +_SPRIN11=
726413    +0.0088433896*Marital_Status_1_+
726414    +-0.012550627*Marital_Status_2_+
726415    +-0.002271234*Marital_Status_3_+
726416    +0.0021642821*Marital_Status_4_+
726417    +0.0206306135*Marital_Status_5_+
726418    +0.1009035281*_S1_ACCEPTEDCMPTOTAL+
726419    +-0.456946736*_S2_FRQ+
726420    +0.1988530541*_S3_MNT+
726421    +0.6183600004*_S4_MNTMEATPRODUCTS+
726422    +-0.481393504*_S5_NUMCATALOGPURCHASES+
726423    +0.311462421*_S6_NUMDEALSPURCHASES+
726424    +-0.170402162*_S7_NUMWEBVISITSMONTH+
726425    +0.0254931556*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN11= 0.0088433896*Marital_Status_1_+
-0.012550627*Marital_Status_2_+ -0.002271234*Marital_Status_3_+
0.0021642821*Marital_Status_4_+ 0.0206306135*Marital_Status_5_+
0.1009035281*_S1_ACCEPTEDCMPTOTAL+ -0.456946736*_S2_FRQ+ 0.1988530541*_S3_MNT+
0.6183600004*_S4_MNTMEATPRODUCTS+ -0.481393504*_S5_NUMCATALOGPURCHASES+
0.311462421*_S6_NUMDEALSPURCHASES+ -0.170402162*_S7_NUMWEBVISITSMONTH+
0.0254931556*_S8_RECENCY;
726426    +/*----------------------------------------------*/
726427    +* Component 2 at stage 1;
MPRINT(EM_DIAGRAM):   * Component 2 at stage 1;
726428    +/*----------------------------------------------*/
726429    +;
MPRINT(EM_DIAGRAM):   ;
726430    +_SPRIN12=
726431    +0.0106637752*Marital_Status_1_+
726432    +-0.006976946*Marital_Status_2_+
726433    +0.0029754745*Marital_Status_3_+
726434    +-0.005574564*Marital_Status_4_+
726435    +0.0079340274*Marital_Status_5_+
726436    +0.0743426991*_S1_ACCEPTEDCMPTOTAL+
726437    +0.4172241749*_S2_FRQ+
726438    +-0.756399427*_S3_MNT+
726439    +0.4836524496*_S4_MNTMEATPRODUCTS+
726440    +-0.1064254*_S5_NUMCATALOGPURCHASES+
726441    +-0.033812052*_S6_NUMDEALSPURCHASES+
726442    +0.0394187446*_S7_NUMWEBVISITSMONTH+
726443    +0.0069739491*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN12= 0.0106637752*Marital_Status_1_+
-0.006976946*Marital_Status_2_+ 0.0029754745*Marital_Status_3_+
-0.005574564*Marital_Status_4_+ 0.0079340274*Marital_Status_5_+
0.0743426991*_S1_ACCEPTEDCMPTOTAL+ 0.4172241749*_S2_FRQ+ -0.756399427*_S3_MNT+
0.4836524496*_S4_MNTMEATPRODUCTS+ -0.1064254*_S5_NUMCATALOGPURCHASES+
-0.033812052*_S6_NUMDEALSPURCHASES+ 0.0394187446*_S7_NUMWEBVISITSMONTH+
0.0069739491*_S8_RECENCY;
726444    +/*----------------------------------------------*/
726445    +* Component 3 at stage 1;
MPRINT(EM_DIAGRAM):   * Component 3 at stage 1;
726446    +/*----------------------------------------------*/
726447    +;
MPRINT(EM_DIAGRAM):   ;
726448    +_SPRIN13=
726449    +0.0059671872*Marital_Status_1_+
726450    +0.0184384503*Marital_Status_2_+
726451    +-0.020790781*Marital_Status_3_+
726452    +-0.011947833*Marital_Status_4_+
726453    +0.0161263141*Marital_Status_5_+
726454    +-0.272236938*_S1_ACCEPTEDCMPTOTAL+
726455    +0.0343385179*_S2_FRQ+
726456    +0.2782657866*_S3_MNT+
726457    +0.3531293035*_S4_MNTMEATPRODUCTS+
726458    +-0.02753263*_S5_NUMCATALOGPURCHASES+
726459    +-0.36457907*_S6_NUMDEALSPURCHASES+
726460    +0.766563427*_S7_NUMWEBVISITSMONTH+
726461    +0.0083475574*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN13= 0.0059671872*Marital_Status_1_+
0.0184384503*Marital_Status_2_+ -0.020790781*Marital_Status_3_+
-0.011947833*Marital_Status_4_+ 0.0161263141*Marital_Status_5_+
-0.272236938*_S1_ACCEPTEDCMPTOTAL+ 0.0343385179*_S2_FRQ+ 0.2782657866*_S3_MNT+
0.3531293035*_S4_MNTMEATPRODUCTS+ -0.02753263*_S5_NUMCATALOGPURCHASES+
-0.36457907*_S6_NUMDEALSPURCHASES+ 0.766563427*_S7_NUMWEBVISITSMONTH+ 0.0083475574*_S8_RECENCY;
726462    +/*----------------------------------------------*/
726463    +* Component 4 at stage 1;
MPRINT(EM_DIAGRAM):   * Component 4 at stage 1;
726464    +/*----------------------------------------------*/
726465    +;
MPRINT(EM_DIAGRAM):   ;
726466    +_SPRIN14=
726467    +-0.004105841*Marital_Status_1_+
726468    +0.0026546575*Marital_Status_2_+
726469    +-0.011950511*Marital_Status_3_+
726470    +0.0078474067*Marital_Status_4_+
726471    +0.0089356261*Marital_Status_5_+
726472    +-0.004132789*_S1_ACCEPTEDCMPTOTAL+
726473    +-0.562859505*_S2_FRQ+
726474    +-0.277471603*_S3_MNT+
726475    +0.2126634859*_S4_MNTMEATPRODUCTS+
726476    +0.7310937079*_S5_NUMCATALOGPURCHASES+
726477    +0.1193426498*_S6_NUMDEALSPURCHASES+
726478    +0.1090597873*_S7_NUMWEBVISITSMONTH+
726479    +0.0036037072*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN14= -0.004105841*Marital_Status_1_+
0.0026546575*Marital_Status_2_+ -0.011950511*Marital_Status_3_+
0.0078474067*Marital_Status_4_+ 0.0089356261*Marital_Status_5_+
-0.004132789*_S1_ACCEPTEDCMPTOTAL+ -0.562859505*_S2_FRQ+ -0.277471603*_S3_MNT+
0.2126634859*_S4_MNTMEATPRODUCTS+ 0.7310937079*_S5_NUMCATALOGPURCHASES+
0.1193426498*_S6_NUMDEALSPURCHASES+ 0.1090597873*_S7_NUMWEBVISITSMONTH+
0.0036037072*_S8_RECENCY;
726480    +/*----------------------------------------------*/
726481    +* Component 5 at stage 1;
MPRINT(EM_DIAGRAM):   * Component 5 at stage 1;
726482    +/*----------------------------------------------*/
726483    +;
MPRINT(EM_DIAGRAM):   ;
726484    +_SPRIN15=
726485    +0.4188802441*Marital_Status_1_+
726486    +-0.108693579*Marital_Status_2_+
726487    +-0.18569781*Marital_Status_3_+
726488    +-0.030796546*Marital_Status_4_+
726489    +0.0991257331*Marital_Status_5_+
726490    +0.133338802*_S1_ACCEPTEDCMPTOTAL+
726491    +0.2615189161*_S2_FRQ+
726492    +0.0994085062*_S3_MNT+
726493    +-0.065649042*_S4_MNTMEATPRODUCTS+
726494    +0.089704836*_S5_NUMCATALOGPURCHASES+
726495    +0.6988027641*_S6_NUMDEALSPURCHASES+
726496    +0.3548155116*_S7_NUMWEBVISITSMONTH+
726497    +0.2117486643*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN15= 0.4188802441*Marital_Status_1_+
-0.108693579*Marital_Status_2_+ -0.18569781*Marital_Status_3_+ -0.030796546*Marital_Status_4_+
0.0991257331*Marital_Status_5_+ 0.133338802*_S1_ACCEPTEDCMPTOTAL+ 0.2615189161*_S2_FRQ+
0.0994085062*_S3_MNT+ -0.065649042*_S4_MNTMEATPRODUCTS+ 0.089704836*_S5_NUMCATALOGPURCHASES+
0.6988027641*_S6_NUMDEALSPURCHASES+ 0.3548155116*_S7_NUMWEBVISITSMONTH+
0.2117486643*_S8_RECENCY;
726498    +/*----------------------------------------------*/
726499    +* Component 6 at stage 1;
MPRINT(EM_DIAGRAM):   * Component 6 at stage 1;
726500    +/*----------------------------------------------*/
726501    +;
MPRINT(EM_DIAGRAM):   ;
726502    +_SPRIN16=
726503    +-0.795416959*Marital_Status_1_+
726504    +0.0824648192*Marital_Status_2_+
726505    +0.2317116976*Marital_Status_3_+
726506    +0.2690782351*Marital_Status_4_+
726507    +-0.062146515*Marital_Status_5_+
726508    +0.0182327007*_S1_ACCEPTEDCMPTOTAL+
726509    +0.1513611302*_S2_FRQ+
726510    +0.0513363831*_S3_MNT+
726511    +-0.010073056*_S4_MNTMEATPRODUCTS+
726512    +0.0406819984*_S5_NUMCATALOGPURCHASES+
726513    +0.4050473454*_S6_NUMDEALSPURCHASES+
726514    +0.1960229521*_S7_NUMWEBVISITSMONTH+
726515    +-0.020806956*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN16= -0.795416959*Marital_Status_1_+
0.0824648192*Marital_Status_2_+ 0.2317116976*Marital_Status_3_+
0.2690782351*Marital_Status_4_+ -0.062146515*Marital_Status_5_+
0.0182327007*_S1_ACCEPTEDCMPTOTAL+ 0.1513611302*_S2_FRQ+ 0.0513363831*_S3_MNT+
-0.010073056*_S4_MNTMEATPRODUCTS+ 0.0406819984*_S5_NUMCATALOGPURCHASES+
0.4050473454*_S6_NUMDEALSPURCHASES+ 0.1960229521*_S7_NUMWEBVISITSMONTH+
-0.020806956*_S8_RECENCY;
726516    +;
MPRINT(EM_DIAGRAM):   ;
726517    +/*----------------------------------------------*/
726518    +* Component 1 at stage 2;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 2;
726519    +/*----------------------------------------------*/
726520    +;
MPRINT(EM_DIAGRAM):   ;
726521    +_SPRIN21=
726522    +-0.004105841*Marital_Status_1_+
726523    +0.0026546575*Marital_Status_2_+
726524    +-0.011950511*Marital_Status_3_+
726525    +0.0078474067*Marital_Status_4_+
726526    +0.0089356261*Marital_Status_5_+
726527    +-0.004132789*_S1_ACCEPTEDCMPTOTAL+
726528    +-0.562859505*_S2_FRQ+
726529    +-0.277471603*_S3_MNT+
726530    +0.2126634859*_S4_MNTMEATPRODUCTS+
726531    +0.7310937079*_S5_NUMCATALOGPURCHASES+
726532    +0.1193426498*_S6_NUMDEALSPURCHASES+
726533    +0.1090597873*_S7_NUMWEBVISITSMONTH+
726534    +0.0036037072*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN21= -0.004105841*Marital_Status_1_+
0.0026546575*Marital_Status_2_+ -0.011950511*Marital_Status_3_+
0.0078474067*Marital_Status_4_+ 0.0089356261*Marital_Status_5_+
-0.004132789*_S1_ACCEPTEDCMPTOTAL+ -0.562859505*_S2_FRQ+ -0.277471603*_S3_MNT+
0.2126634859*_S4_MNTMEATPRODUCTS+ 0.7310937079*_S5_NUMCATALOGPURCHASES+
0.1193426498*_S6_NUMDEALSPURCHASES+ 0.1090597873*_S7_NUMWEBVISITSMONTH+
0.0036037072*_S8_RECENCY;
726535    +/*----------------------------------------------*/
726536    +* Component 2 at stage 2;
MPRINT(EM_DIAGRAM):   * Component 2 at stage 2;
726537    +/*----------------------------------------------*/
726538    +;
MPRINT(EM_DIAGRAM):   ;
726539    +_SPRIN22=
726540    +-0.009163356*Marital_Status_1_+
726541    +-0.017190525*Marital_Status_2_+
726542    +0.0041674821*Marital_Status_3_+
726543    +0.0108473335*Marital_Status_4_+
726544    +0.0286372045*Marital_Status_5_+
726545    +0.2589037298*_S1_ACCEPTEDCMPTOTAL+
726546    +0.4288634785*_S2_FRQ+
726547    +0.468169543*_S3_MNT+
726548    +0.4406657126*_S4_MNTMEATPRODUCTS+
726549    +0.4512293115*_S5_NUMCATALOGPURCHASES+
726550    +-0.120164039*_S6_NUMDEALSPURCHASES+
726551    +-0.341012847*_S7_NUMWEBVISITSMONTH+
726552    +0.002081234*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN22= -0.009163356*Marital_Status_1_+
-0.017190525*Marital_Status_2_+ 0.0041674821*Marital_Status_3_+
0.0108473335*Marital_Status_4_+ 0.0286372045*Marital_Status_5_+
0.2589037298*_S1_ACCEPTEDCMPTOTAL+ 0.4288634785*_S2_FRQ+ 0.468169543*_S3_MNT+
0.4406657126*_S4_MNTMEATPRODUCTS+ 0.4512293115*_S5_NUMCATALOGPURCHASES+
-0.120164039*_S6_NUMDEALSPURCHASES+ -0.341012847*_S7_NUMWEBVISITSMONTH+
0.002081234*_S8_RECENCY;
726553    +/*----------------------------------------------*/
726554    +* Component 3 at stage 2;
MPRINT(EM_DIAGRAM):   * Component 3 at stage 2;
726555    +/*----------------------------------------------*/
726556    +;
MPRINT(EM_DIAGRAM):   ;
726557    +_SPRIN23=
726558    +-0.133661323*Marital_Status_1_+
726559    +-0.051981669*Marital_Status_2_+
726560    +-0.137405736*Marital_Status_3_+
726561    +-0.079938161*Marital_Status_4_+
726562    +0.9128090284*Marital_Status_5_+
726563    +0.0224242054*_S1_ACCEPTEDCMPTOTAL+
726564    +-0.006793272*_S2_FRQ+
726565    +-0.013098113*_S3_MNT+
726566    +-0.029730878*_S4_MNTMEATPRODUCTS+
726567    +-0.014442513*_S5_NUMCATALOGPURCHASES+
726568    +0.0017352662*_S6_NUMDEALSPURCHASES+
726569    +0.0088977322*_S7_NUMWEBVISITSMONTH+
726570    +-0.34503122*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN23= -0.133661323*Marital_Status_1_+
-0.051981669*Marital_Status_2_+ -0.137405736*Marital_Status_3_+
-0.079938161*Marital_Status_4_+ 0.9128090284*Marital_Status_5_+
0.0224242054*_S1_ACCEPTEDCMPTOTAL+ -0.006793272*_S2_FRQ+ -0.013098113*_S3_MNT+
-0.029730878*_S4_MNTMEATPRODUCTS+ -0.014442513*_S5_NUMCATALOGPURCHASES+
0.0017352662*_S6_NUMDEALSPURCHASES+ 0.0088977322*_S7_NUMWEBVISITSMONTH+
-0.34503122*_S8_RECENCY;
726571    +/*----------------------------------------------*/
726572    +* Component 4 at stage 2;
MPRINT(EM_DIAGRAM):   * Component 4 at stage 2;
726573    +/*----------------------------------------------*/
726574    +;
MPRINT(EM_DIAGRAM):   ;
726575    +_SPRIN24=
726576    +0.0106637752*Marital_Status_1_+
726577    +-0.006976946*Marital_Status_2_+
726578    +0.0029754745*Marital_Status_3_+
726579    +-0.005574564*Marital_Status_4_+
726580    +0.0079340274*Marital_Status_5_+
726581    +0.0743426991*_S1_ACCEPTEDCMPTOTAL+
726582    +0.4172241749*_S2_FRQ+
726583    +-0.756399427*_S3_MNT+
726584    +0.4836524496*_S4_MNTMEATPRODUCTS+
726585    +-0.1064254*_S5_NUMCATALOGPURCHASES+
726586    +-0.033812052*_S6_NUMDEALSPURCHASES+
726587    +0.0394187446*_S7_NUMWEBVISITSMONTH+
726588    +0.0069739491*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN24= 0.0106637752*Marital_Status_1_+
-0.006976946*Marital_Status_2_+ 0.0029754745*Marital_Status_3_+
-0.005574564*Marital_Status_4_+ 0.0079340274*Marital_Status_5_+
0.0743426991*_S1_ACCEPTEDCMPTOTAL+ 0.4172241749*_S2_FRQ+ -0.756399427*_S3_MNT+
0.4836524496*_S4_MNTMEATPRODUCTS+ -0.1064254*_S5_NUMCATALOGPURCHASES+
-0.033812052*_S6_NUMDEALSPURCHASES+ 0.0394187446*_S7_NUMWEBVISITSMONTH+
0.0069739491*_S8_RECENCY;
726589    +/*----------------------------------------------*/
726590    +* Component 5 at stage 2;
MPRINT(EM_DIAGRAM):   * Component 5 at stage 2;
726591    +/*----------------------------------------------*/
726592    +;
MPRINT(EM_DIAGRAM):   ;
726593    +_SPRIN25=
726594    +-0.030533433*Marital_Status_1_+
726595    +-0.027998459*Marital_Status_2_+
726596    +0.0214882295*Marital_Status_3_+
726597    +0.0497827209*Marital_Status_4_+
726598    +-0.040759072*Marital_Status_5_+
726599    +0.9051379856*_S1_ACCEPTEDCMPTOTAL+
726600    +-0.141633693*_S2_FRQ+
726601    +-0.027881214*_S3_MNT+
726602    +-0.116645115*_S4_MNTMEATPRODUCTS+
726603    +-0.086193895*_S5_NUMCATALOGPURCHASES+
726604    +-0.224050139*_S6_NUMDEALSPURCHASES+
726605    +0.2854421342*_S7_NUMWEBVISITSMONTH+
726606    +-0.029309469*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN25= -0.030533433*Marital_Status_1_+
-0.027998459*Marital_Status_2_+ 0.0214882295*Marital_Status_3_+
0.0497827209*Marital_Status_4_+ -0.040759072*Marital_Status_5_+
0.9051379856*_S1_ACCEPTEDCMPTOTAL+ -0.141633693*_S2_FRQ+ -0.027881214*_S3_MNT+
-0.116645115*_S4_MNTMEATPRODUCTS+ -0.086193895*_S5_NUMCATALOGPURCHASES+
-0.224050139*_S6_NUMDEALSPURCHASES+ 0.2854421342*_S7_NUMWEBVISITSMONTH+
-0.029309469*_S8_RECENCY;
726607    +/*----------------------------------------------*/
726608    +* Component 6 at stage 2;
MPRINT(EM_DIAGRAM):   * Component 6 at stage 2;
726609    +/*----------------------------------------------*/
726610    +;
MPRINT(EM_DIAGRAM):   ;
726611    +_SPRIN26=
726612    +0.0088433896*Marital_Status_1_+
726613    +-0.012550627*Marital_Status_2_+
726614    +-0.002271234*Marital_Status_3_+
726615    +0.0021642821*Marital_Status_4_+
726616    +0.0206306135*Marital_Status_5_+
726617    +0.1009035281*_S1_ACCEPTEDCMPTOTAL+
726618    +-0.456946736*_S2_FRQ+
726619    +0.1988530541*_S3_MNT+
726620    +0.6183600004*_S4_MNTMEATPRODUCTS+
726621    +-0.481393504*_S5_NUMCATALOGPURCHASES+
726622    +0.311462421*_S6_NUMDEALSPURCHASES+
726623    +-0.170402162*_S7_NUMWEBVISITSMONTH+
726624    +0.0254931556*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN26= 0.0088433896*Marital_Status_1_+
-0.012550627*Marital_Status_2_+ -0.002271234*Marital_Status_3_+
0.0021642821*Marital_Status_4_+ 0.0206306135*Marital_Status_5_+
0.1009035281*_S1_ACCEPTEDCMPTOTAL+ -0.456946736*_S2_FRQ+ 0.1988530541*_S3_MNT+
0.6183600004*_S4_MNTMEATPRODUCTS+ -0.481393504*_S5_NUMCATALOGPURCHASES+
0.311462421*_S6_NUMDEALSPURCHASES+ -0.170402162*_S7_NUMWEBVISITSMONTH+
0.0254931556*_S8_RECENCY;
726625    +;
MPRINT(EM_DIAGRAM):   ;
726626    +/*----------------------------------------------*/
726627    +* Component 1 at stage 3;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 3;
726628    +/*----------------------------------------------*/
726629    +;
MPRINT(EM_DIAGRAM):   ;
726630    +_SPRIN31=
726631    +0.4188802441*Marital_Status_1_+
726632    +-0.108693579*Marital_Status_2_+
726633    +-0.18569781*Marital_Status_3_+
726634    +-0.030796546*Marital_Status_4_+
726635    +0.0991257331*Marital_Status_5_+
726636    +0.133338802*_S1_ACCEPTEDCMPTOTAL+
726637    +0.2615189161*_S2_FRQ+
726638    +0.0994085062*_S3_MNT+
726639    +-0.065649042*_S4_MNTMEATPRODUCTS+
726640    +0.089704836*_S5_NUMCATALOGPURCHASES+
726641    +0.6988027641*_S6_NUMDEALSPURCHASES+
726642    +0.3548155116*_S7_NUMWEBVISITSMONTH+
726643    +0.2117486643*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN31= 0.4188802441*Marital_Status_1_+
-0.108693579*Marital_Status_2_+ -0.18569781*Marital_Status_3_+ -0.030796546*Marital_Status_4_+
0.0991257331*Marital_Status_5_+ 0.133338802*_S1_ACCEPTEDCMPTOTAL+ 0.2615189161*_S2_FRQ+
0.0994085062*_S3_MNT+ -0.065649042*_S4_MNTMEATPRODUCTS+ 0.089704836*_S5_NUMCATALOGPURCHASES+
0.6988027641*_S6_NUMDEALSPURCHASES+ 0.3548155116*_S7_NUMWEBVISITSMONTH+
0.2117486643*_S8_RECENCY;
726644    +/*----------------------------------------------*/
726645    +* Component 2 at stage 3;
MPRINT(EM_DIAGRAM):   * Component 2 at stage 3;
726646    +/*----------------------------------------------*/
726647    +;
MPRINT(EM_DIAGRAM):   ;
726648    +_SPRIN32=
726649    +0.0106637752*Marital_Status_1_+
726650    +-0.006976946*Marital_Status_2_+
726651    +0.0029754745*Marital_Status_3_+
726652    +-0.005574564*Marital_Status_4_+
726653    +0.0079340274*Marital_Status_5_+
726654    +0.0743426991*_S1_ACCEPTEDCMPTOTAL+
726655    +0.4172241749*_S2_FRQ+
726656    +-0.756399427*_S3_MNT+
726657    +0.4836524496*_S4_MNTMEATPRODUCTS+
726658    +-0.1064254*_S5_NUMCATALOGPURCHASES+
726659    +-0.033812052*_S6_NUMDEALSPURCHASES+
726660    +0.0394187446*_S7_NUMWEBVISITSMONTH+
726661    +0.0069739491*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN32= 0.0106637752*Marital_Status_1_+
-0.006976946*Marital_Status_2_+ 0.0029754745*Marital_Status_3_+
-0.005574564*Marital_Status_4_+ 0.0079340274*Marital_Status_5_+
0.0743426991*_S1_ACCEPTEDCMPTOTAL+ 0.4172241749*_S2_FRQ+ -0.756399427*_S3_MNT+
0.4836524496*_S4_MNTMEATPRODUCTS+ -0.1064254*_S5_NUMCATALOGPURCHASES+
-0.033812052*_S6_NUMDEALSPURCHASES+ 0.0394187446*_S7_NUMWEBVISITSMONTH+
0.0069739491*_S8_RECENCY;
726662    +/*----------------------------------------------*/
726663    +* Component 3 at stage 3;
MPRINT(EM_DIAGRAM):   * Component 3 at stage 3;
726664    +/*----------------------------------------------*/
726665    +;
MPRINT(EM_DIAGRAM):   ;
726666    +_SPRIN33=
726667    +-0.009163356*Marital_Status_1_+
726668    +-0.017190525*Marital_Status_2_+
726669    +0.0041674821*Marital_Status_3_+
726670    +0.0108473335*Marital_Status_4_+
726671    +0.0286372045*Marital_Status_5_+
726672    +0.2589037298*_S1_ACCEPTEDCMPTOTAL+
726673    +0.4288634785*_S2_FRQ+
726674    +0.468169543*_S3_MNT+
726675    +0.4406657126*_S4_MNTMEATPRODUCTS+
726676    +0.4512293115*_S5_NUMCATALOGPURCHASES+
726677    +-0.120164039*_S6_NUMDEALSPURCHASES+
726678    +-0.341012847*_S7_NUMWEBVISITSMONTH+
726679    +0.002081234*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN33= -0.009163356*Marital_Status_1_+
-0.017190525*Marital_Status_2_+ 0.0041674821*Marital_Status_3_+
0.0108473335*Marital_Status_4_+ 0.0286372045*Marital_Status_5_+
0.2589037298*_S1_ACCEPTEDCMPTOTAL+ 0.4288634785*_S2_FRQ+ 0.468169543*_S3_MNT+
0.4406657126*_S4_MNTMEATPRODUCTS+ 0.4512293115*_S5_NUMCATALOGPURCHASES+
-0.120164039*_S6_NUMDEALSPURCHASES+ -0.341012847*_S7_NUMWEBVISITSMONTH+
0.002081234*_S8_RECENCY;
726680    +/*----------------------------------------------*/
726681    +* Component 4 at stage 3;
MPRINT(EM_DIAGRAM):   * Component 4 at stage 3;
726682    +/*----------------------------------------------*/
726683    +;
MPRINT(EM_DIAGRAM):   ;
726684    +_SPRIN34=
726685    +-0.795416959*Marital_Status_1_+
726686    +0.0824648192*Marital_Status_2_+
726687    +0.2317116976*Marital_Status_3_+
726688    +0.2690782351*Marital_Status_4_+
726689    +-0.062146515*Marital_Status_5_+
726690    +0.0182327007*_S1_ACCEPTEDCMPTOTAL+
726691    +0.1513611302*_S2_FRQ+
726692    +0.0513363831*_S3_MNT+
726693    +-0.010073056*_S4_MNTMEATPRODUCTS+
726694    +0.0406819984*_S5_NUMCATALOGPURCHASES+
726695    +0.4050473454*_S6_NUMDEALSPURCHASES+
726696    +0.1960229521*_S7_NUMWEBVISITSMONTH+
726697    +-0.020806956*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN34= -0.795416959*Marital_Status_1_+
0.0824648192*Marital_Status_2_+ 0.2317116976*Marital_Status_3_+
0.2690782351*Marital_Status_4_+ -0.062146515*Marital_Status_5_+
0.0182327007*_S1_ACCEPTEDCMPTOTAL+ 0.1513611302*_S2_FRQ+ 0.0513363831*_S3_MNT+
-0.010073056*_S4_MNTMEATPRODUCTS+ 0.0406819984*_S5_NUMCATALOGPURCHASES+
0.4050473454*_S6_NUMDEALSPURCHASES+ 0.1960229521*_S7_NUMWEBVISITSMONTH+
-0.020806956*_S8_RECENCY;
726698    +/*----------------------------------------------*/
726699    +* Component 5 at stage 3;
MPRINT(EM_DIAGRAM):   * Component 5 at stage 3;
726700    +/*----------------------------------------------*/
726701    +;
MPRINT(EM_DIAGRAM):   ;
726702    +_SPRIN35=
726703    +0.0059671872*Marital_Status_1_+
726704    +0.0184384503*Marital_Status_2_+
726705    +-0.020790781*Marital_Status_3_+
726706    +-0.011947833*Marital_Status_4_+
726707    +0.0161263141*Marital_Status_5_+
726708    +-0.272236938*_S1_ACCEPTEDCMPTOTAL+
726709    +0.0343385179*_S2_FRQ+
726710    +0.2782657866*_S3_MNT+
726711    +0.3531293035*_S4_MNTMEATPRODUCTS+
726712    +-0.02753263*_S5_NUMCATALOGPURCHASES+
726713    +-0.36457907*_S6_NUMDEALSPURCHASES+
726714    +0.766563427*_S7_NUMWEBVISITSMONTH+
726715    +0.0083475574*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN35= 0.0059671872*Marital_Status_1_+
0.0184384503*Marital_Status_2_+ -0.020790781*Marital_Status_3_+
-0.011947833*Marital_Status_4_+ 0.0161263141*Marital_Status_5_+
-0.272236938*_S1_ACCEPTEDCMPTOTAL+ 0.0343385179*_S2_FRQ+ 0.2782657866*_S3_MNT+
0.3531293035*_S4_MNTMEATPRODUCTS+ -0.02753263*_S5_NUMCATALOGPURCHASES+
-0.36457907*_S6_NUMDEALSPURCHASES+ 0.766563427*_S7_NUMWEBVISITSMONTH+ 0.0083475574*_S8_RECENCY;
726716    +/*----------------------------------------------*/
726717    +* Component 6 at stage 3;
MPRINT(EM_DIAGRAM):   * Component 6 at stage 3;
726718    +/*----------------------------------------------*/
726719    +;
MPRINT(EM_DIAGRAM):   ;
726720    +_SPRIN36=
726721    +-0.158984376*Marital_Status_1_+
726722    +-0.029292114*Marital_Status_2_+
726723    +0.0652374414*Marital_Status_3_+
726724    +-0.047272583*Marital_Status_4_+
726725    +0.3235921012*Marital_Status_5_+
726726    +0.0050764455*_S1_ACCEPTEDCMPTOTAL+
726727    +-0.053126301*_S2_FRQ+
726728    +-0.029062364*_S3_MNT+
726729    +-0.026276531*_S4_MNTMEATPRODUCTS+
726730    +-0.016173632*_S5_NUMCATALOGPURCHASES+
726731    +-0.160580587*_S6_NUMDEALSPURCHASES+
726732    +-0.063858808*_S7_NUMWEBVISITSMONTH+
726733    +0.9100299784*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN36= -0.158984376*Marital_Status_1_+
-0.029292114*Marital_Status_2_+ 0.0652374414*Marital_Status_3_+
-0.047272583*Marital_Status_4_+ 0.3235921012*Marital_Status_5_+
0.0050764455*_S1_ACCEPTEDCMPTOTAL+ -0.053126301*_S2_FRQ+ -0.029062364*_S3_MNT+
-0.026276531*_S4_MNTMEATPRODUCTS+ -0.016173632*_S5_NUMCATALOGPURCHASES+
-0.160580587*_S6_NUMDEALSPURCHASES+ -0.063858808*_S7_NUMWEBVISITSMONTH+
0.9100299784*_S8_RECENCY;
726734    +;
MPRINT(EM_DIAGRAM):   ;
726735    +/*----------------------------------------------*/
726736    +* Component 1 at stage 4;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 4;
726737    +/*----------------------------------------------*/
726738    +;
MPRINT(EM_DIAGRAM):   ;
726739    +_SPRIN41=
726740    +0.0106637752*Marital_Status_1_+
726741    +-0.006976946*Marital_Status_2_+
726742    +0.0029754745*Marital_Status_3_+
726743    +-0.005574564*Marital_Status_4_+
726744    +0.0079340274*Marital_Status_5_+
726745    +0.0743426991*_S1_ACCEPTEDCMPTOTAL+
726746    +0.4172241749*_S2_FRQ+
726747    +-0.756399427*_S3_MNT+
726748    +0.4836524496*_S4_MNTMEATPRODUCTS+
726749    +-0.1064254*_S5_NUMCATALOGPURCHASES+
726750    +-0.033812052*_S6_NUMDEALSPURCHASES+
726751    +0.0394187446*_S7_NUMWEBVISITSMONTH+
726752    +0.0069739491*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN41= 0.0106637752*Marital_Status_1_+
-0.006976946*Marital_Status_2_+ 0.0029754745*Marital_Status_3_+
-0.005574564*Marital_Status_4_+ 0.0079340274*Marital_Status_5_+
0.0743426991*_S1_ACCEPTEDCMPTOTAL+ 0.4172241749*_S2_FRQ+ -0.756399427*_S3_MNT+
0.4836524496*_S4_MNTMEATPRODUCTS+ -0.1064254*_S5_NUMCATALOGPURCHASES+
-0.033812052*_S6_NUMDEALSPURCHASES+ 0.0394187446*_S7_NUMWEBVISITSMONTH+
0.0069739491*_S8_RECENCY;
726753    +/*----------------------------------------------*/
726754    +* Component 2 at stage 4;
MPRINT(EM_DIAGRAM):   * Component 2 at stage 4;
726755    +/*----------------------------------------------*/
726756    +;
MPRINT(EM_DIAGRAM):   ;
726757    +_SPRIN42=
726758    +-0.158984376*Marital_Status_1_+
726759    +-0.029292114*Marital_Status_2_+
726760    +0.0652374414*Marital_Status_3_+
726761    +-0.047272583*Marital_Status_4_+
726762    +0.3235921012*Marital_Status_5_+
726763    +0.0050764455*_S1_ACCEPTEDCMPTOTAL+
726764    +-0.053126301*_S2_FRQ+
726765    +-0.029062364*_S3_MNT+
726766    +-0.026276531*_S4_MNTMEATPRODUCTS+
726767    +-0.016173632*_S5_NUMCATALOGPURCHASES+
726768    +-0.160580587*_S6_NUMDEALSPURCHASES+
726769    +-0.063858808*_S7_NUMWEBVISITSMONTH+
726770    +0.9100299784*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN42= -0.158984376*Marital_Status_1_+
-0.029292114*Marital_Status_2_+ 0.0652374414*Marital_Status_3_+
-0.047272583*Marital_Status_4_+ 0.3235921012*Marital_Status_5_+
0.0050764455*_S1_ACCEPTEDCMPTOTAL+ -0.053126301*_S2_FRQ+ -0.029062364*_S3_MNT+
-0.026276531*_S4_MNTMEATPRODUCTS+ -0.016173632*_S5_NUMCATALOGPURCHASES+
-0.160580587*_S6_NUMDEALSPURCHASES+ -0.063858808*_S7_NUMWEBVISITSMONTH+
0.9100299784*_S8_RECENCY;
726771    +/*----------------------------------------------*/
726772    +* Component 3 at stage 4;
MPRINT(EM_DIAGRAM):   * Component 3 at stage 4;
726773    +/*----------------------------------------------*/
726774    +;
MPRINT(EM_DIAGRAM):   ;
726775    +_SPRIN43=
726776    +-0.795416959*Marital_Status_1_+
726777    +0.0824648192*Marital_Status_2_+
726778    +0.2317116976*Marital_Status_3_+
726779    +0.2690782351*Marital_Status_4_+
726780    +-0.062146515*Marital_Status_5_+
726781    +0.0182327007*_S1_ACCEPTEDCMPTOTAL+
726782    +0.1513611302*_S2_FRQ+
726783    +0.0513363831*_S3_MNT+
726784    +-0.010073056*_S4_MNTMEATPRODUCTS+
726785    +0.0406819984*_S5_NUMCATALOGPURCHASES+
726786    +0.4050473454*_S6_NUMDEALSPURCHASES+
726787    +0.1960229521*_S7_NUMWEBVISITSMONTH+
726788    +-0.020806956*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN43= -0.795416959*Marital_Status_1_+
0.0824648192*Marital_Status_2_+ 0.2317116976*Marital_Status_3_+
0.2690782351*Marital_Status_4_+ -0.062146515*Marital_Status_5_+
0.0182327007*_S1_ACCEPTEDCMPTOTAL+ 0.1513611302*_S2_FRQ+ 0.0513363831*_S3_MNT+
-0.010073056*_S4_MNTMEATPRODUCTS+ 0.0406819984*_S5_NUMCATALOGPURCHASES+
0.4050473454*_S6_NUMDEALSPURCHASES+ 0.1960229521*_S7_NUMWEBVISITSMONTH+
-0.020806956*_S8_RECENCY;
726789    +/*----------------------------------------------*/
726790    +* Component 4 at stage 4;
MPRINT(EM_DIAGRAM):   * Component 4 at stage 4;
726791    +/*----------------------------------------------*/
726792    +;
MPRINT(EM_DIAGRAM):   ;
726793    +_SPRIN44=
726794    +0.0422645704*Marital_Status_1_+
726795    +-0.045690447*Marital_Status_2_+
726796    +0.7146731592*Marital_Status_3_+
726797    +-0.682396424*Marital_Status_4_+
726798    +0.0253007126*Marital_Status_5_+
726799    +0.0300322737*_S1_ACCEPTEDCMPTOTAL+
726800    +0.0233845108*_S2_FRQ+
726801    +0.0185707635*_S3_MNT+
726802    +-0.002634244*_S4_MNTMEATPRODUCTS+
726803    +0.0212505751*_S5_NUMCATALOGPURCHASES+
726804    +0.0939199651*_S6_NUMDEALSPURCHASES+
726805    +0.0592362947*_S7_NUMWEBVISITSMONTH+
726806    +-0.066942428*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN44= 0.0422645704*Marital_Status_1_+
-0.045690447*Marital_Status_2_+ 0.7146731592*Marital_Status_3_+
-0.682396424*Marital_Status_4_+ 0.0253007126*Marital_Status_5_+
0.0300322737*_S1_ACCEPTEDCMPTOTAL+ 0.0233845108*_S2_FRQ+ 0.0185707635*_S3_MNT+
-0.002634244*_S4_MNTMEATPRODUCTS+ 0.0212505751*_S5_NUMCATALOGPURCHASES+
0.0939199651*_S6_NUMDEALSPURCHASES+ 0.0592362947*_S7_NUMWEBVISITSMONTH+
-0.066942428*_S8_RECENCY;
726807    +/*----------------------------------------------*/
726808    +* Component 5 at stage 4;
MPRINT(EM_DIAGRAM):   * Component 5 at stage 4;
726809    +/*----------------------------------------------*/
726810    +;
MPRINT(EM_DIAGRAM):   ;
726811    +_SPRIN45=
726812    +-0.030533433*Marital_Status_1_+
726813    +-0.027998459*Marital_Status_2_+
726814    +0.0214882295*Marital_Status_3_+
726815    +0.0497827209*Marital_Status_4_+
726816    +-0.040759072*Marital_Status_5_+
726817    +0.9051379856*_S1_ACCEPTEDCMPTOTAL+
726818    +-0.141633693*_S2_FRQ+
726819    +-0.027881214*_S3_MNT+
726820    +-0.116645115*_S4_MNTMEATPRODUCTS+
726821    +-0.086193895*_S5_NUMCATALOGPURCHASES+
726822    +-0.224050139*_S6_NUMDEALSPURCHASES+
726823    +0.2854421342*_S7_NUMWEBVISITSMONTH+
726824    +-0.029309469*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN45= -0.030533433*Marital_Status_1_+
-0.027998459*Marital_Status_2_+ 0.0214882295*Marital_Status_3_+
0.0497827209*Marital_Status_4_+ -0.040759072*Marital_Status_5_+
0.9051379856*_S1_ACCEPTEDCMPTOTAL+ -0.141633693*_S2_FRQ+ -0.027881214*_S3_MNT+
-0.116645115*_S4_MNTMEATPRODUCTS+ -0.086193895*_S5_NUMCATALOGPURCHASES+
-0.224050139*_S6_NUMDEALSPURCHASES+ 0.2854421342*_S7_NUMWEBVISITSMONTH+
-0.029309469*_S8_RECENCY;
726825    +/*----------------------------------------------*/
726826    +* Component 6 at stage 4;
MPRINT(EM_DIAGRAM):   * Component 6 at stage 4;
726827    +/*----------------------------------------------*/
726828    +;
MPRINT(EM_DIAGRAM):   ;
726829    +_SPRIN46=
726830    +0.0088433896*Marital_Status_1_+
726831    +-0.012550627*Marital_Status_2_+
726832    +-0.002271234*Marital_Status_3_+
726833    +0.0021642821*Marital_Status_4_+
726834    +0.0206306135*Marital_Status_5_+
726835    +0.1009035281*_S1_ACCEPTEDCMPTOTAL+
726836    +-0.456946736*_S2_FRQ+
726837    +0.1988530541*_S3_MNT+
726838    +0.6183600004*_S4_MNTMEATPRODUCTS+
726839    +-0.481393504*_S5_NUMCATALOGPURCHASES+
726840    +0.311462421*_S6_NUMDEALSPURCHASES+
726841    +-0.170402162*_S7_NUMWEBVISITSMONTH+
726842    +0.0254931556*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN46= 0.0088433896*Marital_Status_1_+
-0.012550627*Marital_Status_2_+ -0.002271234*Marital_Status_3_+
0.0021642821*Marital_Status_4_+ 0.0206306135*Marital_Status_5_+
0.1009035281*_S1_ACCEPTEDCMPTOTAL+ -0.456946736*_S2_FRQ+ 0.1988530541*_S3_MNT+
0.6183600004*_S4_MNTMEATPRODUCTS+ -0.481393504*_S5_NUMCATALOGPURCHASES+
0.311462421*_S6_NUMDEALSPURCHASES+ -0.170402162*_S7_NUMWEBVISITSMONTH+
0.0254931556*_S8_RECENCY;
726843    +;
MPRINT(EM_DIAGRAM):   ;
726844    +/*----------------------------------------------*/
726845    +* Component 1 at stage 5;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 5;
726846    +/*----------------------------------------------*/
726847    +;
MPRINT(EM_DIAGRAM):   ;
726848    +_SPRIN51=
726849    +-0.030533433*Marital_Status_1_+
726850    +-0.027998459*Marital_Status_2_+
726851    +0.0214882295*Marital_Status_3_+
726852    +0.0497827209*Marital_Status_4_+
726853    +-0.040759072*Marital_Status_5_+
726854    +0.9051379856*_S1_ACCEPTEDCMPTOTAL+
726855    +-0.141633693*_S2_FRQ+
726856    +-0.027881214*_S3_MNT+
726857    +-0.116645115*_S4_MNTMEATPRODUCTS+
726858    +-0.086193895*_S5_NUMCATALOGPURCHASES+
726859    +-0.224050139*_S6_NUMDEALSPURCHASES+
726860    +0.2854421342*_S7_NUMWEBVISITSMONTH+
726861    +-0.029309469*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN51= -0.030533433*Marital_Status_1_+
-0.027998459*Marital_Status_2_+ 0.0214882295*Marital_Status_3_+
0.0497827209*Marital_Status_4_+ -0.040759072*Marital_Status_5_+
0.9051379856*_S1_ACCEPTEDCMPTOTAL+ -0.141633693*_S2_FRQ+ -0.027881214*_S3_MNT+
-0.116645115*_S4_MNTMEATPRODUCTS+ -0.086193895*_S5_NUMCATALOGPURCHASES+
-0.224050139*_S6_NUMDEALSPURCHASES+ 0.2854421342*_S7_NUMWEBVISITSMONTH+
-0.029309469*_S8_RECENCY;
726862    +/*----------------------------------------------*/
726863    +* Component 2 at stage 5;
MPRINT(EM_DIAGRAM):   * Component 2 at stage 5;
726864    +/*----------------------------------------------*/
726865    +;
MPRINT(EM_DIAGRAM):   ;
726866    +_SPRIN52=
726867    +-0.009163356*Marital_Status_1_+
726868    +-0.017190525*Marital_Status_2_+
726869    +0.0041674821*Marital_Status_3_+
726870    +0.0108473335*Marital_Status_4_+
726871    +0.0286372045*Marital_Status_5_+
726872    +0.2589037298*_S1_ACCEPTEDCMPTOTAL+
726873    +0.4288634785*_S2_FRQ+
726874    +0.468169543*_S3_MNT+
726875    +0.4406657126*_S4_MNTMEATPRODUCTS+
726876    +0.4512293115*_S5_NUMCATALOGPURCHASES+
726877    +-0.120164039*_S6_NUMDEALSPURCHASES+
726878    +-0.341012847*_S7_NUMWEBVISITSMONTH+
726879    +0.002081234*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN52= -0.009163356*Marital_Status_1_+
-0.017190525*Marital_Status_2_+ 0.0041674821*Marital_Status_3_+
0.0108473335*Marital_Status_4_+ 0.0286372045*Marital_Status_5_+
0.2589037298*_S1_ACCEPTEDCMPTOTAL+ 0.4288634785*_S2_FRQ+ 0.468169543*_S3_MNT+
0.4406657126*_S4_MNTMEATPRODUCTS+ 0.4512293115*_S5_NUMCATALOGPURCHASES+
-0.120164039*_S6_NUMDEALSPURCHASES+ -0.341012847*_S7_NUMWEBVISITSMONTH+
0.002081234*_S8_RECENCY;
726880    +/*----------------------------------------------*/
726881    +* Component 3 at stage 5;
MPRINT(EM_DIAGRAM):   * Component 3 at stage 5;
726882    +/*----------------------------------------------*/
726883    +;
MPRINT(EM_DIAGRAM):   ;
726884    +_SPRIN53=
726885    +-0.158984376*Marital_Status_1_+
726886    +-0.029292114*Marital_Status_2_+
726887    +0.0652374414*Marital_Status_3_+
726888    +-0.047272583*Marital_Status_4_+
726889    +0.3235921012*Marital_Status_5_+
726890    +0.0050764455*_S1_ACCEPTEDCMPTOTAL+
726891    +-0.053126301*_S2_FRQ+
726892    +-0.029062364*_S3_MNT+
726893    +-0.026276531*_S4_MNTMEATPRODUCTS+
726894    +-0.016173632*_S5_NUMCATALOGPURCHASES+
726895    +-0.160580587*_S6_NUMDEALSPURCHASES+
726896    +-0.063858808*_S7_NUMWEBVISITSMONTH+
726897    +0.9100299784*_S8_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN53= -0.158984376*Marital_Status_1_+
-0.029292114*Marital_Status_2_+ 0.0652374414*Marital_Status_3_+
-0.047272583*Marital_Status_4_+ 0.3235921012*Marital_Status_5_+
0.0050764455*_S1_ACCEPTEDCMPTOTAL+ -0.053126301*_S2_FRQ+ -0.029062364*_S3_MNT+
-0.026276531*_S4_MNTMEATPRODUCTS+ -0.016173632*_S5_NUMCATALOGPURCHASES+
-0.160580587*_S6_NUMDEALSPURCHASES+ -0.063858808*_S7_NUMWEBVISITSMONTH+
0.9100299784*_S8_RECENCY;
726898    +;
MPRINT(EM_DIAGRAM):   ;
726899    +DROP
726900    +_SPRIN01
726901    +_SPRIN02
726902    +_SPRIN03
726903    +_SPRIN04
726904    +_SPRIN05
726905    +_SPRIN06
726906    +_SPRIN11
726907    +_SPRIN12
726908    +_SPRIN13
726909    +_SPRIN14
726910    +_SPRIN15
726911    +_SPRIN16
726912    +_SPRIN21
726913    +_SPRIN22
726914    +_SPRIN23
726915    +_SPRIN24
726916    +_SPRIN25
726917    +_SPRIN26
726918    +_SPRIN31
726919    +_SPRIN32
726920    +_SPRIN33
726921    +_SPRIN34
726922    +_SPRIN35
726923    +_SPRIN36
726924    +_SPRIN41
726925    +_SPRIN42
726926    +_SPRIN43
726927    +_SPRIN44
726928    +_SPRIN45
726929    +_SPRIN46
726930    +_SPRIN51
726931    +_SPRIN52
726932    +_SPRIN53
726933    +;
MPRINT(EM_DIAGRAM):   DROP _SPRIN01 _SPRIN02 _SPRIN03 _SPRIN04 _SPRIN05 _SPRIN06 _SPRIN11
_SPRIN12 _SPRIN13 _SPRIN14 _SPRIN15 _SPRIN16 _SPRIN21 _SPRIN22 _SPRIN23 _SPRIN24 _SPRIN25
_SPRIN26 _SPRIN31 _SPRIN32 _SPRIN33 _SPRIN34 _SPRIN35 _SPRIN36 _SPRIN41 _SPRIN42 _SPRIN43
_SPRIN44 _SPRIN45 _SPRIN46 _SPRIN51 _SPRIN52 _SPRIN53 ;
726934    +;
MPRINT(EM_DIAGRAM):   ;
726935    +/**********************************************************/
726936    +* Selected activation function at stage 0 = SQUARE;
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 0 = SQUARE;
726937    +/**********************************************************/
726938    +;
MPRINT(EM_DIAGRAM):   ;
726939    +_YHAT0=3.798978316
726940    ++(-1.22825262909667+-0.04299302501804*_SPRIN01)*_SPRIN01
726941    ++(1.98251776355506+-0.01908423872862*_SPRIN02)*_SPRIN02
726942    ++(-0.62146334798025+0.02278042228177*_SPRIN03)*_SPRIN03
726943    ++(-2.28151452670447+0.14883315570938*_SPRIN04)*_SPRIN04
726944    ++(-0.62817566899844+-0.20649000825165*_SPRIN05)*_SPRIN05
726945    ++(-0.65010059015777+-0.01294373133357*_SPRIN06)*_SPRIN06
726946    +;
MPRINT(EM_DIAGRAM):   _YHAT0=3.798978316
+(-1.22825262909667+-0.04299302501804*_SPRIN01)*_SPRIN01
+(1.98251776355506+-0.01908423872862*_SPRIN02)*_SPRIN02
+(-0.62146334798025+0.02278042228177*_SPRIN03)*_SPRIN03
+(-2.28151452670447+0.14883315570938*_SPRIN04)*_SPRIN04
+(-0.62817566899844+-0.20649000825165*_SPRIN05)*_SPRIN05
+(-0.65010059015777+-0.01294373133357*_SPRIN06)*_SPRIN06 ;
726947    +/*--- Target level is binary, take a logistic link function --*/
726948    +if _YHAT0 > 0 then _YHAT0=1/(1+exp(-_YHAT0));
MPRINT(EM_DIAGRAM):   if _YHAT0 > 0 then _YHAT0=1/(1+exp(-_YHAT0));
726949    +else _YHAT0=exp(_YHAT0)/(1+exp(_YHAT0));
MPRINT(EM_DIAGRAM):   else _YHAT0=exp(_YHAT0)/(1+exp(_YHAT0));
726950    +;
MPRINT(EM_DIAGRAM):   ;
726951    +/**********************************************************/
726952    +* Selected activation function at stage 1 = SQUARE;
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 1 = SQUARE;
726953    +/**********************************************************/
726954    +;
MPRINT(EM_DIAGRAM):   ;
726955    +_RHAT1=0.0149657388
726956    ++(-0.05835608559578+0.01214775792274*_SPRIN11)*_SPRIN11
726957    ++(-0.08057160048236+-0.06242653916252*_SPRIN12)*_SPRIN12
726958    ++(-0.04279674411413+-0.01164723613787*_SPRIN13)*_SPRIN13
726959    ++(-0.02712577531283+0.0025113183348*_SPRIN14)*_SPRIN14
726960    ++(-0.01920040627235+-0.00073026462435*_SPRIN15)*_SPRIN15
726961    ++(-0.01318789614847+-0.00005253336044*_SPRIN16)*_SPRIN16
726962    +;
MPRINT(EM_DIAGRAM):   _RHAT1=0.0149657388
+(-0.05835608559578+0.01214775792274*_SPRIN11)*_SPRIN11
+(-0.08057160048236+-0.06242653916252*_SPRIN12)*_SPRIN12
+(-0.04279674411413+-0.01164723613787*_SPRIN13)*_SPRIN13
+(-0.02712577531283+0.0025113183348*_SPRIN14)*_SPRIN14
+(-0.01920040627235+-0.00073026462435*_SPRIN15)*_SPRIN15
+(-0.01318789614847+-0.00005253336044*_SPRIN16)*_SPRIN16 ;
726963    +;
MPRINT(EM_DIAGRAM):   ;
726964    +/**********************************************************/
726965    +* Selected activation function at stage 2 = SQUARE;
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 2 = SQUARE;
726966    +/**********************************************************/
726967    +;
MPRINT(EM_DIAGRAM):   ;
726968    +_RHAT2=-0.029646812
726969    ++(-0.06196691124613+-0.04998114082335*_SPRIN21)*_SPRIN21
726970    ++(0.00276424597854+0.00615099991046*_SPRIN22)*_SPRIN22
726971    ++(-0.00753510645576+-0.00062778720444*_SPRIN23)*_SPRIN23
726972    ++(-0.01436555718974+-0.03060520362936*_SPRIN24)*_SPRIN24
726973    ++(-0.01694591616438+0.00197749018349*_SPRIN25)*_SPRIN25
726974    ++(-0.02237956446504+-0.00115040932227*_SPRIN26)*_SPRIN26
726975    +;
MPRINT(EM_DIAGRAM):   _RHAT2=-0.029646812
+(-0.06196691124613+-0.04998114082335*_SPRIN21)*_SPRIN21
+(0.00276424597854+0.00615099991046*_SPRIN22)*_SPRIN22
+(-0.00753510645576+-0.00062778720444*_SPRIN23)*_SPRIN23
+(-0.01436555718974+-0.03060520362936*_SPRIN24)*_SPRIN24
+(-0.01694591616438+0.00197749018349*_SPRIN25)*_SPRIN25
+(-0.02237956446504+-0.00115040932227*_SPRIN26)*_SPRIN26 ;
726976    +;
MPRINT(EM_DIAGRAM):   ;
726977    +/**********************************************************/
726978    +* Selected activation function at stage 3 = COS;
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 3 = COS;
726979    +/**********************************************************/
726980    +;
MPRINT(EM_DIAGRAM):   ;
726981    +_RHAT3=0.0257191945
726982    ++-0.02800185435927*COS(1.41896099294643*_SPRIN31*(2/ARCOS(-1)))
726983    ++0.3412398353768*COS(0.32259583044937*_SPRIN32*(2/ARCOS(-1)))
726984    ++0.01060654682685*COS(-0.35971082122701*_SPRIN33*(2/ARCOS(-1)))
726985    ++-2.26076370664657*COS(0.00941787038345*_SPRIN34*(2/ARCOS(-1)))
726986    ++1.31170592303827*COS(-0.03085251908102*_SPRIN35*(2/ARCOS(-1)))
726987    ++0.59239568564671*COS(0.09769476696649*_SPRIN36*(2/ARCOS(-1)))
726988    +;
MPRINT(EM_DIAGRAM):   _RHAT3=0.0257191945
+-0.02800185435927*COS(1.41896099294643*_SPRIN31*(2/ARCOS(-1)))
+0.3412398353768*COS(0.32259583044937*_SPRIN32*(2/ARCOS(-1)))
+0.01060654682685*COS(-0.35971082122701*_SPRIN33*(2/ARCOS(-1)))
+-2.26076370664657*COS(0.00941787038345*_SPRIN34*(2/ARCOS(-1)))
+1.31170592303827*COS(-0.03085251908102*_SPRIN35*(2/ARCOS(-1)))
+0.59239568564671*COS(0.09769476696649*_SPRIN36*(2/ARCOS(-1))) ;
726989    +;
MPRINT(EM_DIAGRAM):   ;
726990    +/**********************************************************/
726991    +* Selected activation function at stage 4 = SIN;
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 4 = SIN;
726992    +/**********************************************************/
726993    +;
MPRINT(EM_DIAGRAM):   ;
726994    +_RHAT4=0.0029327183
726995    ++0.03771647945026*SIN(-1.2352576692348*_SPRIN41*(2/ARCOS(-1)))
726996    ++-0.02838436219569*SIN(-0.19049287491309*_SPRIN42*(2/ARCOS(-1)))
726997    ++-0.04691078311928*SIN(-0.12359709908775*_SPRIN43*(2/ARCOS(-1)))
726998    ++0.00599852350489*SIN(-0.3868829620053*_SPRIN44*(2/ARCOS(-1)))
726999    ++0.03740371310513*SIN(-0.00842435790751*_SPRIN45*(2/ARCOS(-1)))
727000    ++0.00423439430896*SIN(-0.71742307187617*_SPRIN46*(2/ARCOS(-1)))
727001    +;
MPRINT(EM_DIAGRAM):   _RHAT4=0.0029327183
+0.03771647945026*SIN(-1.2352576692348*_SPRIN41*(2/ARCOS(-1)))
+-0.02838436219569*SIN(-0.19049287491309*_SPRIN42*(2/ARCOS(-1)))
+-0.04691078311928*SIN(-0.12359709908775*_SPRIN43*(2/ARCOS(-1)))
+0.00599852350489*SIN(-0.3868829620053*_SPRIN44*(2/ARCOS(-1)))
+0.03740371310513*SIN(-0.00842435790751*_SPRIN45*(2/ARCOS(-1)))
+0.00423439430896*SIN(-0.71742307187617*_SPRIN46*(2/ARCOS(-1))) ;
727002    +;
MPRINT(EM_DIAGRAM):   ;
727003    +/**********************************************************/
727004    +* Selected activation function at stage 5 = EXP;
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 5 = EXP;
727005    +/**********************************************************/
727006    +;
MPRINT(EM_DIAGRAM):   ;
727007    +_RHAT5=-0.070233579
727008    ++0.11046568750913*exp(0.01760697003035*_SPRIN51)
727009    ++0.01657876628253*exp(-0.11623043616899*_SPRIN52)
727010    ++-0.06066697184384*exp(-0.06633987365798*_SPRIN53)
727011    +;
MPRINT(EM_DIAGRAM):   _RHAT5=-0.070233579 +0.11046568750913*exp(0.01760697003035*_SPRIN51)
+0.01657876628253*exp(-0.11623043616899*_SPRIN52)
+-0.06066697184384*exp(-0.06633987365798*_SPRIN53) ;
727012    +;
MPRINT(EM_DIAGRAM):   ;
727013    +_tmpPredict
727014    +=_YHAT0
727015    ++_RHAT1
727016    ++_RHAT2
727017    ++_RHAT3
727018    ++_RHAT4
727019    ++_RHAT5
727020    +;
MPRINT(EM_DIAGRAM):   _tmpPredict =_YHAT0 +_RHAT1 +_RHAT2 +_RHAT3 +_RHAT4 +_RHAT5 ;
727021    +_tmpPredict=1-_tmpPredict;
MPRINT(EM_DIAGRAM):   _tmpPredict=1-_tmpPredict;
727022    +If _tmpPredict > 1 then _tmpPredict=1;
MPRINT(EM_DIAGRAM):   If _tmpPredict > 1 then _tmpPredict=1;
727023    +else if _tmpPredict < 0 then _tmpPredict=0;
MPRINT(EM_DIAGRAM):   else if _tmpPredict < 0 then _tmpPredict=0;
727024    +P_DepVar1=_tmpPredict;
MPRINT(EM_DIAGRAM):   P_DepVar1=_tmpPredict;
727025    +label P_DepVar1 = "Predicted: DepVar=1";
MPRINT(EM_DIAGRAM):   label P_DepVar1 = "Predicted: DepVar=1";
727026    +P_DepVar0=1-_tmpPredict;
MPRINT(EM_DIAGRAM):   P_DepVar0=1-_tmpPredict;
727027    +label P_DepVar0 = "Predicted: DepVar=0";
MPRINT(EM_DIAGRAM):   label P_DepVar0 = "Predicted: DepVar=0";
727028    +if P_DepVar1 ge 0.5 then I_DepVar="1";
MPRINT(EM_DIAGRAM):   if P_DepVar1 ge 0.5 then I_DepVar="1";
727029    +else I_DepVar="0";
MPRINT(EM_DIAGRAM):   else I_DepVar="0";
727030    +if F_DepVar NE "1" AND F_DepVar NE "0" then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE "1" AND F_DepVar NE "0" then do;
727031    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
727032    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
727033    +end;
MPRINT(EM_DIAGRAM):   end;
727034    +else do;
MPRINT(EM_DIAGRAM):   else do;
727035    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
727036    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
727037    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
727038    +WHEN("1") R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN("1") R_DepVar1 = R_DepVar1 +1;
727039    +WHEN("0") R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN("0") R_DepVar0 = R_DepVar0 +1;
727040    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
727041    +end;
MPRINT(EM_DIAGRAM):   end;
727042    +END;
MPRINT(EM_DIAGRAM):   END;
727043    +;
MPRINT(EM_DIAGRAM):   ;
727044    +DROP _YHAT0
727045    +_RHAT1
727046    +_RHAT2
727047    +_RHAT3
727048    +_RHAT4
727049    +_RHAT5
727050    +_tmpPredict
727051    +Marital_Status_1_
727052    +Marital_Status_2_
727053    +Marital_Status_3_
727054    +Marital_Status_4_
727055    +Marital_Status_5_
727056    +_S1_ACCEPTEDCMPTOTAL
727057    +_S2_FRQ
727058    +_S3_MNT
727059    +_S4_MNTMEATPRODUCTS
727060    +_S5_NUMCATALOGPURCHASES
727061    +_S6_NUMDEALSPURCHASES
727062    +_S7_NUMWEBVISITSMONTH
727063    +_S8_RECENCY
727064    +;
MPRINT(EM_DIAGRAM):   DROP _YHAT0 _RHAT1 _RHAT2 _RHAT3 _RHAT4 _RHAT5 _tmpPredict
Marital_Status_1_ Marital_Status_2_ Marital_Status_3_ Marital_Status_4_ Marital_Status_5_
_S1_ACCEPTEDCMPTOTAL _S2_FRQ _S3_MNT _S4_MNTMEATPRODUCTS _S5_NUMCATALOGPURCHASES
_S6_NUMDEALSPURCHASES _S7_NUMWEBVISITSMONTH _S8_RECENCY ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
727065     run;
 
NOTE: DATA STEP view saved on file EMWS8.DMNEURAL3_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
727066     quit;
727067     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ _ERR_ _AVERR_ _DFT_ _DFE_ _MSE_ _RMSE_ _NW_ _FPE_ _RFPE_
_AIC_ _SBC_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.DMNeural3_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ _ERR_ _AVERR_ _DFT_ _DFE_ _MSE_ _RMSE_ _NW_ _FPE_ _RFPE_ _AIC_ _SBC_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error"
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_=
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train:
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   label _DFE_= "Train: Degrees of Freedom for Error" _DFT_=
"Train: Total Degrees of Freedom" _DFM_= "Train: Model Degrees of Freedom" _MSE_= "Train: Mean
Squared Error" _RMSE_= "Train: Root Mean Squared Error" _NW_= "Train: Number of Weights" _FPE_
= "Train: Final Prediction Error" _RFPE_ = "Train: Root Final Prediction Error" _AIC_= "Train:
Akaike's Information Criterion" _SBC_= "Train: Schwarz's Bayesian Criterion" _ERR_= "Train:
Error Function" _AVERR_= "Train: Average Error Function";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ _ERR_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar="1" then do;
MPRINT(CALFITSTATSNOMINAL):   if P_DepVar1<1e-10 then _ERR_+(-2*(1e10*P_DepVar1-10*LOG(10)-1));
MPRINT(CALFITSTATSNOMINAL):   else _ERR_+(-2*log(P_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar="0" then do;
MPRINT(CALFITSTATSNOMINAL):   if P_DepVar0<1e-10 then _ERR_+(-2*(1e10*P_DepVar0-10*LOG(10)-1));
MPRINT(CALFITSTATSNOMINAL):   else _ERR_+(-2*log(P_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   _AVERR_=_ERR_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _NW_=72;
MPRINT(CALFITSTATSNOMINAL):   _DFM_=72;
MPRINT(CALFITSTATSNOMINAL):   _DFT_=_DIV_-_NOBS_;
MPRINT(CALFITSTATSNOMINAL):   _DFE_=_DFT_-_DFM_;
MPRINT(CALFITSTATSNOMINAL):   if _DFE_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MSE_=_ASE_ *_DFT_/_DFE_;
MPRINT(CALFITSTATSNOMINAL):   _RMSE_=sqrt(_MSE_);
MPRINT(CALFITSTATSNOMINAL):   _FPE_ =_ASE_*(_DFT_+_DFM_)/_DFE_;
MPRINT(CALFITSTATSNOMINAL):   _RFPE_=sqrt(_FPE_);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _AIC_=_ERR_+2*_DFM_;
MPRINT(CALFITSTATSNOMINAL):   if _DFT_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _SBC_=_ERR_+_DFM_*log(_DFT_);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural3_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.DMNeural3_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error"
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_=
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid:
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural3_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.DMNeural3_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
727127     data _tmpds1_;
MPRINT(EM_DIAGRAM):    data _tmpds1_;
727128     set EMWS8.DMNeural3_ESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural3_ESTIMATE;
727129     if _TYPE_ ^='_PARMS_' then delete;
MPRINT(EM_DIAGRAM):   if _TYPE_ ^='_PARMS_' then delete;
727130     length STATISTICS $30;
MPRINT(EM_DIAGRAM):   length STATISTICS $30;
727131     STATISTICS = 'Sum of Square Errors';
MPRINT(EM_DIAGRAM):   STATISTICS = 'Sum of Square Errors';
727132     KEEP _NAME_ _STAGE_ STATISTICS _MEAN_;
MPRINT(EM_DIAGRAM):   KEEP _NAME_ _STAGE_ STATISTICS _MEAN_;
727133     Label _NAME_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_optfn, noquote))";
MPRINT(EM_DIAGRAM):   Label _NAME_ = "Optimization Function";
727134     Label _STAGE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_stage, noquote))"
727134   ! ;
MPRINT(EM_DIAGRAM):   Label _STAGE_ = "Training Stage";
727135     Label _MEAN_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_stat, noquote))";
MPRINT(EM_DIAGRAM):   Label _MEAN_ = "Statistic";
727136     Label STATISTICS = "%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_stats,
727136   ! noquote))";
MPRINT(EM_DIAGRAM):   Label STATISTICS = "Statistics";
727137     rename _NAME_ =OPTIMIZATION;
MPRINT(EM_DIAGRAM):   rename _NAME_ =OPTIMIZATION;
727138     rename _STAGE_=STAGE;
MPRINT(EM_DIAGRAM):   rename _STAGE_=STAGE;
727139     rename _MEAN_ = VALUE;
MPRINT(EM_DIAGRAM):   rename _MEAN_ = VALUE;
727140     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 87 observations read from the data set EMWS8.DMNEURAL3_ESTIMATE.
NOTE: The data set WORK._TMPDS1_ has 48 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
727141     data _tmpds2_;
MPRINT(EM_DIAGRAM):   data _tmpds2_;
727142     set EMWS8.DMNeural3_ESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural3_ESTIMATE;
727143     if _TYPE_ ^='_PARMS_' then delete;
MPRINT(EM_DIAGRAM):   if _TYPE_ ^='_PARMS_' then delete;
727144     length STATISTICS $30;
MPRINT(EM_DIAGRAM):   length STATISTICS $30;
727145     STATISTICS = 'Accuracy Percent';
MPRINT(EM_DIAGRAM):   STATISTICS = 'Accuracy Percent';
727146     KEEP _NAME_ _STAGE_ STATISTICS _STDEV_;
MPRINT(EM_DIAGRAM):   KEEP _NAME_ _STAGE_ STATISTICS _STDEV_;
727147     Label _NAME_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_optfn, noquote))";
MPRINT(EM_DIAGRAM):   Label _NAME_ = "Optimization Function";
727148     Label _STAGE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_stage, noquote))"
727148   ! ;
MPRINT(EM_DIAGRAM):   Label _STAGE_ = "Training Stage";
727149     Label _STDEV_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_stat, noquote))";
MPRINT(EM_DIAGRAM):   Label _STDEV_ = "Statistic";
727150     Label STATISTICS = "%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_stats,
727150   ! noquote))";
MPRINT(EM_DIAGRAM):   Label STATISTICS = "Statistics";
727151     rename _NAME_ =OPTIMIZATION;
MPRINT(EM_DIAGRAM):   rename _NAME_ =OPTIMIZATION;
727152     rename _STAGE_=STAGE;
MPRINT(EM_DIAGRAM):   rename _STAGE_=STAGE;
727153     rename _STDEV_ = VALUE;
MPRINT(EM_DIAGRAM):   rename _STDEV_ = VALUE;
727154     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 87 observations read from the data set EMWS8.DMNEURAL3_ESTIMATE.
NOTE: The data set WORK._TMPDS2_ has 48 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
727155     data EMWS8.DMNeural3_PLOTSTAGE;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural3_PLOTSTAGE;
727156     set _tmpds1_ _tmpds2_;
MPRINT(EM_DIAGRAM):   set _tmpds1_ _tmpds2_;
727157     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set WORK._TMPDS1_.
NOTE: There were 48 observations read from the data set WORK._TMPDS2_.
NOTE: The data set EMWS8.DMNEURAL3_PLOTSTAGE has 96 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * DMNeural3: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
727158     *------------------------------------------------------------*;
727159     * DMNeural3: Computing metadata for TRAIN data;
727160     *------------------------------------------------------------*;
 
NOTE: View EMWS8.DMNEURAL3_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\DMNeural3\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.DMNeural3_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.DMNeural3_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.DMNeural3_TRAIN out=WORK.M2RH3BOX noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2RH3BOX;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2RH3BOX(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2RH3BOX;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2RH3BOX;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0QW7H_3 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0QW7H_3;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0QW7H_3;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2J1CP62(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0QW7H_3;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0QW7H_3;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0QW7H_3;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0QW7H_3;
MPRINT(EMADVISECOLUMNS):   set WORK.M0QW7H_3;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta3_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta3_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural3_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "DMNeural3";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "DMNeural3";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "DMNeural3";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "DMNeural3";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "DMNeural3";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "DMNeural3";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "DMNeural3";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "DMNeural3";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "DMNeural3";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "DMNeural3";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * DMNeural3: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
727472     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
727473     set EMWS8.DMNeural3_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural3_EMINFO;
727474     where DATA='DMNeural3' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='DMNeural3' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE',
'MODEL');
727475     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.DMNEURAL3_EMINFO.
      WHERE (DATA='DMNeural3') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
727476     data EMWS8.DMNeural3_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.DMNeural3_EMINFO;
727477     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
727478     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
727479     cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.DMNEURAL3_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
727483     run;
727484     data EMWS8.DMNeural3_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural3_EMINFO;
727485     set EMWS8.DMNeural3_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural3_EMINFO WORK.MODELTEMP_INFO;
727486     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.DMNEURAL3_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.DMNEURAL3_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
727487     proc sort data = EMWS8.DMNeural3_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.DMNeural3_EMINFO NOTHREADS;
727488     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
727489     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.DMNEURAL3_EMINFO.
NOTE: The data set EMWS8.DMNEURAL3_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
727490     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
727491     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
727492     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
727493     proc sort data = EMWS8.DMNeural3_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.DMNeural3_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
727494     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
727495     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.DMNEURAL3_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
727496     data EMWS8.DMNeural3_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural3_EMINFO;
727497     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
727498     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
727499     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.DMNEURAL3_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
727500     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
727501     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
727502     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
727503     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
NOTE: View EMWS8.DMNEURAL3_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: View EMWS8.DMNEURAL3_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.52 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                28. April 2016
Time:                19.52 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1MJVKF9
"C:\\predictive-models-project\Workspaces\EMWS8\DMNeural3\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1MJVKF9 new;
MPRINT(EM_DIAGRAM):   run;
727527     data EMWS8.DMNeural3_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.DMNeural3_EMOUTFIT;
727528     set EMWS8.DMNeural3_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural3_EMOUTFIT;
727529     length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
727530     label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
727530   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
727531     if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
727532     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.DMNEURAL3_EMOUTFIT.
NOTE: The data set EMWS8.DMNEURAL3_EMOUTFIT has 1 observations and 31 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
727533     proc sort data=EMWS8.DMNeural3_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.DMNeural3_EMREPORTFIT nothreads;
727534     by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
727535     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS8.DMNEURAL3_EMREPORTFIT.
NOTE: The data set EMWS8.DMNEURAL3_EMREPORTFIT has 20 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
727536     %let _EMwarndup = 0;
727537     %let _EMtargetdup =;
727538     %let _EMASEtargetdup =;
727539     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
727540     set EMWS8.DMNeural3_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural3_EMOUTFIT;
727541     if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
727542     call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
727543     call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
727544     call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
727545     end;
MPRINT(EM_DIAGRAM):   end;
727546     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.DMNEURAL3_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
727547     proc sort data=EMWS8.Meta3_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Meta3_CMeta_TRAIN out=WORK.SUBSETINMETA;
727548     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
727549     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set EMWS8.META3_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 36 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
727550     proc sort data=EMWS8.DMNeural3_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.DMNeural3_VariableSet
out=WORK.SUBSETVARSET(keep=NAME REPORT);
727551     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
727552     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.DMNEURAL3_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
727553     data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
727554     merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
727555     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
727556     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 34 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 36 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
727557     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
727558     set EMWS8.DMNeural3_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural3_CMeta_TRAIN;
727559     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
727559   ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
727560     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set EMWS8.DMNEURAL3_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 7 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
727561     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
727562     set EMWS8.DMNeural3_TRAIN(keep=
727563     F_DepVar
727564     I_DepVar
727565     P_DepVar0
727566     P_DepVar1
727567     R_DepVar0
727568     R_DepVar1
727569     _WARN_
727570     DepVar
727571     );
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural3_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 _WARN_ DepVar );
727572     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.DMNEURAL3_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.META3_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.DMNEURAL3_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.DMNeural3_0HHM48C nocol norow
outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.DMNeural3_0HHM48C;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.DMNeural3_0HHM48C(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.DMNeural3_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.DMNeural3_0HHM48C;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.DMNeural3_0HHM48C;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.DMNeural3_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural3_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural3_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0 OVLMAX 1 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural3_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural3_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
731838     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
731839     set EMWS8.DMNeural3_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural3_CMeta_TRAIN;
731840     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
731840   ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
731841     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set EMWS8.DMNEURAL3_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 7 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
731842     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
731843     set EMWS8.DMNeural3_VALIDATE(keep=
731844     F_DepVar
731845     I_DepVar
731846     P_DepVar0
731847     P_DepVar1
731848     R_DepVar0
731849     R_DepVar1
731850     _WARN_
731851     DepVar
731852     );
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural3_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 _WARN_ DepVar );
731853     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: View EMWS8.DMNEURAL3_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.META3_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.DMNEURAL3_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.DMNeural3_1ZSSHT_ nocol norow
outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.DMNeural3_1ZSSHT_;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.DMNeural3_1ZSSHT_(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.DMNeural3_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural3_EMCLASSIFICATION WORK.DMNeural3_1ZSSHT_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.DMNeural3_1ZSSHT_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.DMNeural3_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural3_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural3_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural3_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0 OVLMAX 1 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural3_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural3_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural3_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural3_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
736128     %let _cn = %sysfunc(getoption(CENTER));
736129     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
736130     proc print data=EMWS8.DMNeural3_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.DMNeural3_EMREPORTFIT noobs label;
736131     var STAT LABEL TRAIN
736132     VALIDATE
736133     ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
736134     by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
736135     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
736136     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
736137     run;
 
NOTE: There were 20 observations read from the data set EMWS8.DMNEURAL3_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 555.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
736138     title10;
MPRINT(EM_DIAGRAM):   title10;
736139     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
736140     proc sort data=EMWS8.DMNeural3_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.DMNeural3_EMCLASSIFICATION nothreads;
736141     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
736142     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.DMNEURAL3_EMCLASSIFICATION.
NOTE: The data set EMWS8.DMNEURAL3_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
736143     %let _cn = %sysfunc(getoption(CENTER));
736144     options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
736145     proc print data=EMWS8.DMNeural3_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.DMNeural3_EMCLASSIFICATION noobs label;
736146     var from into pct_row pct_col count percent
736147     ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
736148     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
736149     label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
736150     label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
736151     label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
736152     label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
736153     label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
736154     label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
736155     where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
736156     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
736157     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
736158     run;
 
NOTE: There were 8 observations read from the data set EMWS8.DMNEURAL3_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 556.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
736159     title9;
MPRINT(EM_DIAGRAM):   title9;
736160     title10;
MPRINT(EM_DIAGRAM):   title10;
736161     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
736162     %let _cn = %sysfunc(getoption(CENTER));
736163     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
736164     data EMWS8.DMNeural3_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural3_EMEVENTREPORT;
736165     length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
736165   ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
736166     label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
736166   !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
736166   ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
736166   ! FALSEEVENT
736167     = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
736167   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
736167   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
736168        "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
736169     FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
736170     FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
736171     TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
736172     TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
736173     set EMWS8.DMNeural3_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural3_EMEVENTREPORT;
736174     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.DMNEURAL3_EMEVENTREPORT.
NOTE: The data set EMWS8.DMNEURAL3_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
736175     proc print data=EMWS8.DMNeural3_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.DMNeural3_EMEVENTREPORT noobs label;
736176     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
736177     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
736178     by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
736179     run;
 
NOTE: There were 2 observations read from the data set EMWS8.DMNEURAL3_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 557.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
736180     title10;
MPRINT(EM_DIAGRAM):   title10;
736181     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
736182     proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
736183     modify DMNeural3_EMRANK;
MPRINT(EM_DIAGRAM):   modify DMNeural3_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
736184     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
736185     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
736185   ! ;
MPRINT(EM_DIAGRAM):   run;
736186     run;
 
NOTE: MODIFY was successful for EMWS8.DMNEURAL3_EMRANK.DATA.
736187     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
 
736188     %let _cn = %sysfunc(getoption(CENTER));
736189     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
736190     proc print data=EMWS8.DMNeural3_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.DMNeural3_EMRANK label noobs;
736191     var
736192     decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
736193     by
736194     notsorted DATAROLE
736195     notsorted TARGET
736196     notsorted TARGETLABEL
736197     ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
736198     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
736199     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
736200     run;
 
NOTE: There were 40 observations read from the data set EMWS8.DMNEURAL3_EMRANK.
NOTE: The PROCEDURE PRINT printed page 558.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
736201     title10;
MPRINT(EM_DIAGRAM):   title10;
736202     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
736203     proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
736204     modify DMNeural3_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify DMNeural3_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
736205     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
736205   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
736206     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
736206   ! ;
MPRINT(EM_DIAGRAM):   run;
736207     run;
 
NOTE: MODIFY was successful for EMWS8.DMNEURAL3_EMSCOREDIST.DATA.
736208     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.13 seconds
      cpu time            0.14 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.DMNeural3_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
