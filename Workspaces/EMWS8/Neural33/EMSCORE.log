MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.31 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                19.31 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3KQ0B2R 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural33\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3KQ0B2R new;
MPRINT(EM_DIAGRAM):   run;
362668     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
362669     set EMWS8.Neural33_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural33_OUTKEY;
362670     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
362671     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.NEURAL33_OUTKEY.
NOTE: The data set WORK.OUTKEY has 4 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

362672     filename emflow
362672   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural33\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural33\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural33: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
362673     *------------------------------------------------------------*;
362674     * Neural33: Scoring DATA data;
362675     *------------------------------------------------------------*;
362676     data EMWS8.Neural33_TRAIN
362677     / view=EMWS8.Neural33_TRAIN
362678     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural33_TRAIN / view=EMWS8.Neural33_TRAIN ;
362679     set EMWS8.Meta2_TRAIN
362680     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta2_TRAIN ;
362681     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural33\EMFLOWSCORE.sas.
362682    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
362683    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
362684    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
362685    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
362686    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
362687    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
362688    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
362689    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
362690    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
362691    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
362692    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
362693    +LENGTH _WARN_ $4
362694    +      F_DepVar  $ 12
362695    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
362696    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
362697    +
362698    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
362699    +
362700    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
362701    +
362702    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
362703    +
362704    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
362705    +
362706    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
362707    +
362708    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
362709    +
362710    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
362711    +
362712    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
362713    +
362714    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
362715    +
362716    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
362717    +
362718    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
362719    +
362720    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
362721    +
362722    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
362723    +
362724    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
362725    +
362726    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
362727    +
362728    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
362729    +
362730    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
362731    +
362732    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
362733    +
362734    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
362735    +
362736    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
362737    +
362738    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
362739    +
362740    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
362741    +
362742    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
362743    +
362744    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
362745    +
362746    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
362747    +
362748    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
362749    +
362750    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
362751    +
362752    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
362753    +
362754    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
362755    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
362756    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
362757    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
362758    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
362759    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
362760    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
362761    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
362762    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
362763    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
362764    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
362765    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
362766    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
362767    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
362768    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
362769    +end;
MPRINT(EM_DIAGRAM):   end;
362770    +else do;
MPRINT(EM_DIAGRAM):   else do;
362771    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
362772    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
362773    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
362774    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
362775    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
362776    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
362777    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
362778    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
362779    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
362780    +         end;
MPRINT(EM_DIAGRAM):   end;
362781    +         else do;
MPRINT(EM_DIAGRAM):   else do;
362782    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
362783    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
362784    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
362785    +            end;
MPRINT(EM_DIAGRAM):   end;
362786    +         end;
MPRINT(EM_DIAGRAM):   end;
362787    +      end;
MPRINT(EM_DIAGRAM):   end;
362788    +      else do;
MPRINT(EM_DIAGRAM):   else do;
362789    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
362790    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
362791    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
362792    +         end;
MPRINT(EM_DIAGRAM):   end;
362793    +      end;
MPRINT(EM_DIAGRAM):   end;
362794    +   end;
MPRINT(EM_DIAGRAM):   end;
362795    +   else do;
MPRINT(EM_DIAGRAM):   else do;
362796    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
362797    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
362798    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
362799    +      end;
MPRINT(EM_DIAGRAM):   end;
362800    +      else do;
MPRINT(EM_DIAGRAM):   else do;
362801    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
362802    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
362803    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
362804    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
362805    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
362806    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
362807    +         end;
MPRINT(EM_DIAGRAM):   end;
362808    +      end;
MPRINT(EM_DIAGRAM):   end;
362809    +   end;
MPRINT(EM_DIAGRAM):   end;
362810    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
362811    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
362812    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
362813    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
362814    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
362815    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
362816    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
362817    +   end;
MPRINT(EM_DIAGRAM):   end;
362818    +end;
MPRINT(EM_DIAGRAM):   end;
362819    +
362820    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
362821    +*** Checking missing input Interval
362822    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
362823    +
362824    +IF NMISS(
362825    +   AcceptedCmpTotal ,
362826    +   Frq ,
362827    +   Income ,
362828    +   Mnt ,
362829    +   MntGoldProds ,
362830    +   MntMeatProducts ,
362831    +   NumCatalogPurchases ,
362832    +   NumDealsPurchases ,
362833    +   NumWebVisitsMonth ,
362834    +   RFMstat ,
362835    +   Recency ,
362836    +   Teenhome ,
362837    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat , 
Recency , Teenhome , Year_Birth ) THEN DO;
362838    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
362839    +
362840    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
362841    +END;
MPRINT(EM_DIAGRAM):   END;
362842    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
362843    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
362844    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
362845    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
362846    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
362847    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
362848    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
362849    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
362850    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
362851    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
362852    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
362853    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
362854    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
362855    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
362856    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
362857    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
362858    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
362859    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
362860    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
362861    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
362862    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
362863    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
362864    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
362865    +END;
MPRINT(EM_DIAGRAM):   END;
362866    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
362867    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
362868    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
362869    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
362870    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
362871    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
362872    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
362873    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
362874    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
362875    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
362876    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
362877    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
362878    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
362879    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
362880    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
362881    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
362882    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
362883    +   ELSE S_NumCatalogPurchases
362884    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
362885    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
362886    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
362887    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
362888    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
362889    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
362890    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
362891    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
362892    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
362893    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
362894    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
362895    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
362896    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
362897    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
362898    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
362899    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
362900    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
362901    +END;
MPRINT(EM_DIAGRAM):   END;
362902    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
362903    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
362904    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
362905    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
362906    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
362907    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
362908    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
362909    +   H11  =     -0.3624095681204 * S_AcceptedCmpTotal  +     1.01518882941618 *
362910    +        S_Frq  +     0.14163876143623 * S_Income  +     0.18437754450816 *
362911    +        S_Mnt  +    -0.03378018124605 * S_MntGoldProds
362912    +          +    -0.52344281767524 * S_MntMeatProducts
362913    +          +     -0.6884135946269 * S_NumCatalogPurchases
362914    +          +    -0.12856075624625 * S_NumDealsPurchases
362915    +          +    -0.58105614174468 * S_NumWebVisitsMonth
362916    +          +     0.09063060544172 * S_RFMstat  +     0.92595865959351 *
362917    +        S_Recency  +     0.00335534258037 * S_Teenhome
362918    +          +    -0.14621396956533 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = -0.3624095681204 * S_AcceptedCmpTotal + 1.01518882941618 * S_Frq + 
0.14163876143623 * S_Income + 0.18437754450816 * S_Mnt + -0.03378018124605 * S_MntGoldProds + 
-0.52344281767524 * S_MntMeatProducts + -0.6884135946269 * S_NumCatalogPurchases + 
-0.12856075624625 * S_NumDealsPurchases + -0.58105614174468 * S_NumWebVisitsMonth + 
0.09063060544172 * S_RFMstat + 0.92595865959351 * S_Recency + 0.00335534258037 * S_Teenhome + 
-0.14621396956533 * S_Year_Birth ;
362919    +   H12  =    -0.13932580003162 * S_AcceptedCmpTotal  +     2.09775859766206 *
362920    +        S_Frq  +    -0.42295658324349 * S_Income  +     0.03160631895041 *
362921    +        S_Mnt  +     0.02870226805701 * S_MntGoldProds
362922    +          +    -3.21420406871629 * S_MntMeatProducts
362923    +          +    -1.56815215220348 * S_NumCatalogPurchases
362924    +          +    -0.56628395228428 * S_NumDealsPurchases
362925    +          +    -0.01648720659261 * S_NumWebVisitsMonth
362926    +          +    -0.57797638676469 * S_RFMstat  +     0.04106705989046 *
362927    +        S_Recency  +     0.07015650916724 * S_Teenhome
362928    +          +    -0.05744143566545 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = -0.13932580003162 * S_AcceptedCmpTotal + 2.09775859766206 * S_Frq 
+ -0.42295658324349 * S_Income + 0.03160631895041 * S_Mnt + 0.02870226805701 * S_MntGoldProds 
+ -3.21420406871629 * S_MntMeatProducts + -1.56815215220348 * S_NumCatalogPurchases + 
-0.56628395228428 * S_NumDealsPurchases + -0.01648720659261 * S_NumWebVisitsMonth + 
-0.57797638676469 * S_RFMstat + 0.04106705989046 * S_Recency + 0.07015650916724 * S_Teenhome + 
-0.05744143566545 * S_Year_Birth ;
362929    +   H13  =      1.0020577734194 * S_AcceptedCmpTotal  +    -0.16268227573577 *
362930    +        S_Frq  +    -0.35573632865253 * S_Income  +     -1.6701902435151 *
362931    +        S_Mnt  +      0.0055587308705 * S_MntGoldProds
362932    +          +      1.1356215784316 * S_MntMeatProducts
362933    +          +     0.46578516103345 * S_NumCatalogPurchases
362934    +          +     0.50948863372922 * S_NumDealsPurchases
362935    +          +     0.80331126155418 * S_NumWebVisitsMonth
362936    +          +     0.58230379065894 * S_RFMstat  +     0.09792820936871 *
362937    +        S_Recency  +     0.10880433588984 * S_Teenhome
362938    +          +    -0.35839108032211 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 1.0020577734194 * S_AcceptedCmpTotal + -0.16268227573577 * S_Frq + 
-0.35573632865253 * S_Income + -1.6701902435151 * S_Mnt + 0.0055587308705 * S_MntGoldProds + 
1.1356215784316 * S_MntMeatProducts + 0.46578516103345 * S_NumCatalogPurchases + 
0.50948863372922 * S_NumDealsPurchases + 0.80331126155418 * S_NumWebVisitsMonth + 
0.58230379065894 * S_RFMstat + 0.09792820936871 * S_Recency + 0.10880433588984 * S_Teenhome + 
-0.35839108032211 * S_Year_Birth ;
362939    +   H14  =     -0.2830856861045 * S_AcceptedCmpTotal  +    -0.00786686047455 *
362940    +        S_Frq  +    -1.06516379910878 * S_Income  +     0.56300054177968 *
362941    +        S_Mnt  +    -0.03794914704348 * S_MntGoldProds
362942    +          +    -0.49782612970305 * S_MntMeatProducts
362943    +          +    -0.48971797177753 * S_NumCatalogPurchases
362944    +          +     0.43666647759892 * S_NumDealsPurchases
362945    +          +     -0.6371807197004 * S_NumWebVisitsMonth
362946    +          +     0.05063483473255 * S_RFMstat  +     0.82729242088876 *
362947    +        S_Recency  +     0.56468632582242 * S_Teenhome
362948    +          +     0.03948411070138 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = -0.2830856861045 * S_AcceptedCmpTotal + -0.00786686047455 * S_Frq 
+ -1.06516379910878 * S_Income + 0.56300054177968 * S_Mnt + -0.03794914704348 * S_MntGoldProds 
+ -0.49782612970305 * S_MntMeatProducts + -0.48971797177753 * S_NumCatalogPurchases + 
0.43666647759892 * S_NumDealsPurchases + -0.6371807197004 * S_NumWebVisitsMonth + 
0.05063483473255 * S_RFMstat + 0.82729242088876 * S_Recency + 0.56468632582242 * S_Teenhome + 
0.03948411070138 * S_Year_Birth ;
362949    +   H11  = H11  +    -0.19055864746672 * Marital_StatusDivorced
362950    +          +     0.21864587556196 * Marital_StatusMarried
362951    +          +    -0.07948838358248 * Marital_StatusSingle
362952    +          +     0.32370171928785 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.19055864746672 * Marital_StatusDivorced + 
0.21864587556196 * Marital_StatusMarried + -0.07948838358248 * Marital_StatusSingle + 
0.32370171928785 * Marital_StatusTogether ;
362953    +   H12  = H12  +      0.2979920044098 * Marital_StatusDivorced
362954    +          +    -0.24510504704478 * Marital_StatusMarried
362955    +          +     0.17931681569377 * Marital_StatusSingle
362956    +          +    -0.17983171416027 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.2979920044098 * Marital_StatusDivorced + -0.24510504704478 
* Marital_StatusMarried + 0.17931681569377 * Marital_StatusSingle + -0.17983171416027 * 
Marital_StatusTogether ;
362957    +   H13  = H13  +     -0.0118278328379 * Marital_StatusDivorced
362958    +          +     0.11135072653985 * Marital_StatusMarried
362959    +          +     0.69838622740766 * Marital_StatusSingle
362960    +          +     0.23061775358106 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.0118278328379 * Marital_StatusDivorced + 0.11135072653985 
* Marital_StatusMarried + 0.69838622740766 * Marital_StatusSingle + 0.23061775358106 * 
Marital_StatusTogether ;
362961    +   H14  = H14  +    -0.37788805152784 * Marital_StatusDivorced
362962    +          +     1.11385121430926 * Marital_StatusMarried
362963    +          +    -0.68978220893985 * Marital_StatusSingle
362964    +          +     0.64537210427352 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.37788805152784 * Marital_StatusDivorced + 
1.11385121430926 * Marital_StatusMarried + -0.68978220893985 * Marital_StatusSingle + 
0.64537210427352 * Marital_StatusTogether ;
362965    +   H11  =      0.9647029290568 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.9647029290568 + H11 ;
362966    +   H12  =    -1.63602876859332 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -1.63602876859332 + H12 ;
362967    +   H13  =    -0.35592434540519 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.35592434540519 + H13 ;
362968    +   H14  =     2.76114635497369 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 2.76114635497369 + H14 ;
362969    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
362970    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
362971    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
362972    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
362973    +END;
MPRINT(EM_DIAGRAM):   END;
362974    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
362975    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
362976    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
362977    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
362978    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
362979    +END;
MPRINT(EM_DIAGRAM):   END;
362980    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
362981    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
362982    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
362983    +
362984    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
362985    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
362986    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
362987    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
362988    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
362989    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
362990    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
362991    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
362992    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
362993    +end;
MPRINT(EM_DIAGRAM):   end;
362994    +else do;
MPRINT(EM_DIAGRAM):   else do;
362995    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
362996    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
362997    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
362998    +   end;
MPRINT(EM_DIAGRAM):   end;
362999    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
363000    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
363001    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
363002    +   end;
MPRINT(EM_DIAGRAM):   end;
363003    +   else do;
MPRINT(EM_DIAGRAM):   else do;
363004    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
363005    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
363006    +   end;
MPRINT(EM_DIAGRAM):   end;
363007    +end;
MPRINT(EM_DIAGRAM):   end;
363008    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
363009    +   P_DepVar1  =    -6.24183937366733 * H11  +    -5.95989624743853 * H12
363010    +          +     2.94585900942219 * H13  +    -6.19710435543839 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.24183937366733 * H11 + -5.95989624743853 * H12 + 
2.94585900942219 * H13 + -6.19710435543839 * H14 ;
363011    +   P_DepVar1  =     0.00271169512824 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.00271169512824 + P_DepVar1 ;
363012    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
363013    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
363014    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
363015    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
363016    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
363017    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
363018    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
363019    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
363020    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
363021    +END;
MPRINT(EM_DIAGRAM):   END;
363022    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
363023    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
363024    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
363025    +END;
MPRINT(EM_DIAGRAM):   END;
363026    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
363027    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
363028    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
363029    +END;
MPRINT(EM_DIAGRAM):   END;
363030    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
363031    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
363032    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
363033    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
363034    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
363035    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
363036    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
363037    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
363038    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
363039    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
363040    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
363041    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
363042    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
363043    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
363044    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
363045    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
363046    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
363047    +END;
MPRINT(EM_DIAGRAM):   END;
363048    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
363049    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
363050    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
363051    +drop
363052    +H11
363053    +H12
363054    +H13
363055    +H14
363056    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
363057    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
363058     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL33_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META2_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
363059     quit;
363060     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
363061     filename emflow
363061   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural33\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural33\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural33: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
363062     *------------------------------------------------------------*;
363063     * Neural33: Scoring VALIDATE data;
363064     *------------------------------------------------------------*;
363065     data EMWS8.Neural33_VALIDATE
363066     / view=EMWS8.Neural33_VALIDATE
363067     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural33_VALIDATE / view=EMWS8.Neural33_VALIDATE ;
363068     set EMWS8.Meta2_VALIDATE
363069     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta2_VALIDATE ;
363070     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural33\EMFLOWSCORE.sas.
363071    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
363072    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
363073    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
363074    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
363075    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
363076    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
363077    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
363078    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
363079    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
363080    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
363081    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
363082    +LENGTH _WARN_ $4
363083    +      F_DepVar  $ 12
363084    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
363085    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
363086    +
363087    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
363088    +
363089    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
363090    +
363091    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
363092    +
363093    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
363094    +
363095    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
363096    +
363097    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
363098    +
363099    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
363100    +
363101    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
363102    +
363103    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
363104    +
363105    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
363106    +
363107    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
363108    +
363109    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
363110    +
363111    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
363112    +
363113    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
363114    +
363115    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
363116    +
363117    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
363118    +
363119    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
363120    +
363121    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
363122    +
363123    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
363124    +
363125    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
363126    +
363127    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
363128    +
363129    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
363130    +
363131    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
363132    +
363133    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
363134    +
363135    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
363136    +
363137    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
363138    +
363139    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
363140    +
363141    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
363142    +
363143    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
363144    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
363145    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
363146    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
363147    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
363148    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
363149    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
363150    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
363151    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
363152    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
363153    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
363154    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
363155    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
363156    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
363157    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
363158    +end;
MPRINT(EM_DIAGRAM):   end;
363159    +else do;
MPRINT(EM_DIAGRAM):   else do;
363160    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
363161    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
363162    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
363163    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
363164    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
363165    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
363166    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
363167    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
363168    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
363169    +         end;
MPRINT(EM_DIAGRAM):   end;
363170    +         else do;
MPRINT(EM_DIAGRAM):   else do;
363171    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
363172    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
363173    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
363174    +            end;
MPRINT(EM_DIAGRAM):   end;
363175    +         end;
MPRINT(EM_DIAGRAM):   end;
363176    +      end;
MPRINT(EM_DIAGRAM):   end;
363177    +      else do;
MPRINT(EM_DIAGRAM):   else do;
363178    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
363179    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
363180    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
363181    +         end;
MPRINT(EM_DIAGRAM):   end;
363182    +      end;
MPRINT(EM_DIAGRAM):   end;
363183    +   end;
MPRINT(EM_DIAGRAM):   end;
363184    +   else do;
MPRINT(EM_DIAGRAM):   else do;
363185    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
363186    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
363187    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
363188    +      end;
MPRINT(EM_DIAGRAM):   end;
363189    +      else do;
MPRINT(EM_DIAGRAM):   else do;
363190    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
363191    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
363192    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
363193    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
363194    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
363195    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
363196    +         end;
MPRINT(EM_DIAGRAM):   end;
363197    +      end;
MPRINT(EM_DIAGRAM):   end;
363198    +   end;
MPRINT(EM_DIAGRAM):   end;
363199    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
363200    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
363201    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
363202    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
363203    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
363204    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
363205    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
363206    +   end;
MPRINT(EM_DIAGRAM):   end;
363207    +end;
MPRINT(EM_DIAGRAM):   end;
363208    +
363209    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
363210    +*** Checking missing input Interval
363211    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
363212    +
363213    +IF NMISS(
363214    +   AcceptedCmpTotal ,
363215    +   Frq ,
363216    +   Income ,
363217    +   Mnt ,
363218    +   MntGoldProds ,
363219    +   MntMeatProducts ,
363220    +   NumCatalogPurchases ,
363221    +   NumDealsPurchases ,
363222    +   NumWebVisitsMonth ,
363223    +   RFMstat ,
363224    +   Recency ,
363225    +   Teenhome ,
363226    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat , 
Recency , Teenhome , Year_Birth ) THEN DO;
363227    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
363228    +
363229    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
363230    +END;
MPRINT(EM_DIAGRAM):   END;
363231    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
363232    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
363233    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
363234    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
363235    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
363236    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
363237    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
363238    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
363239    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
363240    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
363241    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
363242    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
363243    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
363244    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
363245    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
363246    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
363247    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
363248    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
363249    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
363250    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
363251    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
363252    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
363253    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
363254    +END;
MPRINT(EM_DIAGRAM):   END;
363255    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
363256    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
363257    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
363258    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
363259    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
363260    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
363261    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
363262    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
363263    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
363264    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
363265    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
363266    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
363267    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
363268    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
363269    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
363270    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
363271    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
363272    +   ELSE S_NumCatalogPurchases
363273    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
363274    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
363275    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
363276    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
363277    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
363278    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
363279    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
363280    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
363281    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
363282    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
363283    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
363284    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
363285    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
363286    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
363287    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
363288    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
363289    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
363290    +END;
MPRINT(EM_DIAGRAM):   END;
363291    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
363292    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
363293    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
363294    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
363295    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
363296    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
363297    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
363298    +   H11  =     -0.3624095681204 * S_AcceptedCmpTotal  +     1.01518882941618 *
363299    +        S_Frq  +     0.14163876143623 * S_Income  +     0.18437754450816 *
363300    +        S_Mnt  +    -0.03378018124605 * S_MntGoldProds
363301    +          +    -0.52344281767524 * S_MntMeatProducts
363302    +          +     -0.6884135946269 * S_NumCatalogPurchases
363303    +          +    -0.12856075624625 * S_NumDealsPurchases
363304    +          +    -0.58105614174468 * S_NumWebVisitsMonth
363305    +          +     0.09063060544172 * S_RFMstat  +     0.92595865959351 *
363306    +        S_Recency  +     0.00335534258037 * S_Teenhome
363307    +          +    -0.14621396956533 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = -0.3624095681204 * S_AcceptedCmpTotal + 1.01518882941618 * S_Frq + 
0.14163876143623 * S_Income + 0.18437754450816 * S_Mnt + -0.03378018124605 * S_MntGoldProds + 
-0.52344281767524 * S_MntMeatProducts + -0.6884135946269 * S_NumCatalogPurchases + 
-0.12856075624625 * S_NumDealsPurchases + -0.58105614174468 * S_NumWebVisitsMonth + 
0.09063060544172 * S_RFMstat + 0.92595865959351 * S_Recency + 0.00335534258037 * S_Teenhome + 
-0.14621396956533 * S_Year_Birth ;
363308    +   H12  =    -0.13932580003162 * S_AcceptedCmpTotal  +     2.09775859766206 *
363309    +        S_Frq  +    -0.42295658324349 * S_Income  +     0.03160631895041 *
363310    +        S_Mnt  +     0.02870226805701 * S_MntGoldProds
363311    +          +    -3.21420406871629 * S_MntMeatProducts
363312    +          +    -1.56815215220348 * S_NumCatalogPurchases
363313    +          +    -0.56628395228428 * S_NumDealsPurchases
363314    +          +    -0.01648720659261 * S_NumWebVisitsMonth
363315    +          +    -0.57797638676469 * S_RFMstat  +     0.04106705989046 *
363316    +        S_Recency  +     0.07015650916724 * S_Teenhome
363317    +          +    -0.05744143566545 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = -0.13932580003162 * S_AcceptedCmpTotal + 2.09775859766206 * S_Frq 
+ -0.42295658324349 * S_Income + 0.03160631895041 * S_Mnt + 0.02870226805701 * S_MntGoldProds 
+ -3.21420406871629 * S_MntMeatProducts + -1.56815215220348 * S_NumCatalogPurchases + 
-0.56628395228428 * S_NumDealsPurchases + -0.01648720659261 * S_NumWebVisitsMonth + 
-0.57797638676469 * S_RFMstat + 0.04106705989046 * S_Recency + 0.07015650916724 * S_Teenhome + 
-0.05744143566545 * S_Year_Birth ;
363318    +   H13  =      1.0020577734194 * S_AcceptedCmpTotal  +    -0.16268227573577 *
363319    +        S_Frq  +    -0.35573632865253 * S_Income  +     -1.6701902435151 *
363320    +        S_Mnt  +      0.0055587308705 * S_MntGoldProds
363321    +          +      1.1356215784316 * S_MntMeatProducts
363322    +          +     0.46578516103345 * S_NumCatalogPurchases
363323    +          +     0.50948863372922 * S_NumDealsPurchases
363324    +          +     0.80331126155418 * S_NumWebVisitsMonth
363325    +          +     0.58230379065894 * S_RFMstat  +     0.09792820936871 *
363326    +        S_Recency  +     0.10880433588984 * S_Teenhome
363327    +          +    -0.35839108032211 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 1.0020577734194 * S_AcceptedCmpTotal + -0.16268227573577 * S_Frq + 
-0.35573632865253 * S_Income + -1.6701902435151 * S_Mnt + 0.0055587308705 * S_MntGoldProds + 
1.1356215784316 * S_MntMeatProducts + 0.46578516103345 * S_NumCatalogPurchases + 
0.50948863372922 * S_NumDealsPurchases + 0.80331126155418 * S_NumWebVisitsMonth + 
0.58230379065894 * S_RFMstat + 0.09792820936871 * S_Recency + 0.10880433588984 * S_Teenhome + 
-0.35839108032211 * S_Year_Birth ;
363328    +   H14  =     -0.2830856861045 * S_AcceptedCmpTotal  +    -0.00786686047455 *
363329    +        S_Frq  +    -1.06516379910878 * S_Income  +     0.56300054177968 *
363330    +        S_Mnt  +    -0.03794914704348 * S_MntGoldProds
363331    +          +    -0.49782612970305 * S_MntMeatProducts
363332    +          +    -0.48971797177753 * S_NumCatalogPurchases
363333    +          +     0.43666647759892 * S_NumDealsPurchases
363334    +          +     -0.6371807197004 * S_NumWebVisitsMonth
363335    +          +     0.05063483473255 * S_RFMstat  +     0.82729242088876 *
363336    +        S_Recency  +     0.56468632582242 * S_Teenhome
363337    +          +     0.03948411070138 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = -0.2830856861045 * S_AcceptedCmpTotal + -0.00786686047455 * S_Frq 
+ -1.06516379910878 * S_Income + 0.56300054177968 * S_Mnt + -0.03794914704348 * S_MntGoldProds 
+ -0.49782612970305 * S_MntMeatProducts + -0.48971797177753 * S_NumCatalogPurchases + 
0.43666647759892 * S_NumDealsPurchases + -0.6371807197004 * S_NumWebVisitsMonth + 
0.05063483473255 * S_RFMstat + 0.82729242088876 * S_Recency + 0.56468632582242 * S_Teenhome + 
0.03948411070138 * S_Year_Birth ;
363338    +   H11  = H11  +    -0.19055864746672 * Marital_StatusDivorced
363339    +          +     0.21864587556196 * Marital_StatusMarried
363340    +          +    -0.07948838358248 * Marital_StatusSingle
363341    +          +     0.32370171928785 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.19055864746672 * Marital_StatusDivorced + 
0.21864587556196 * Marital_StatusMarried + -0.07948838358248 * Marital_StatusSingle + 
0.32370171928785 * Marital_StatusTogether ;
363342    +   H12  = H12  +      0.2979920044098 * Marital_StatusDivorced
363343    +          +    -0.24510504704478 * Marital_StatusMarried
363344    +          +     0.17931681569377 * Marital_StatusSingle
363345    +          +    -0.17983171416027 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.2979920044098 * Marital_StatusDivorced + -0.24510504704478 
* Marital_StatusMarried + 0.17931681569377 * Marital_StatusSingle + -0.17983171416027 * 
Marital_StatusTogether ;
363346    +   H13  = H13  +     -0.0118278328379 * Marital_StatusDivorced
363347    +          +     0.11135072653985 * Marital_StatusMarried
363348    +          +     0.69838622740766 * Marital_StatusSingle
363349    +          +     0.23061775358106 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.0118278328379 * Marital_StatusDivorced + 0.11135072653985 
* Marital_StatusMarried + 0.69838622740766 * Marital_StatusSingle + 0.23061775358106 * 
Marital_StatusTogether ;
363350    +   H14  = H14  +    -0.37788805152784 * Marital_StatusDivorced
363351    +          +     1.11385121430926 * Marital_StatusMarried
363352    +          +    -0.68978220893985 * Marital_StatusSingle
363353    +          +     0.64537210427352 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.37788805152784 * Marital_StatusDivorced + 
1.11385121430926 * Marital_StatusMarried + -0.68978220893985 * Marital_StatusSingle + 
0.64537210427352 * Marital_StatusTogether ;
363354    +   H11  =      0.9647029290568 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.9647029290568 + H11 ;
363355    +   H12  =    -1.63602876859332 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -1.63602876859332 + H12 ;
363356    +   H13  =    -0.35592434540519 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.35592434540519 + H13 ;
363357    +   H14  =     2.76114635497369 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 2.76114635497369 + H14 ;
363358    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
363359    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
363360    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
363361    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
363362    +END;
MPRINT(EM_DIAGRAM):   END;
363363    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
363364    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
363365    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
363366    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
363367    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
363368    +END;
MPRINT(EM_DIAGRAM):   END;
363369    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
363370    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
363371    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
363372    +
363373    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
363374    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
363375    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
363376    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
363377    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
363378    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
363379    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
363380    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
363381    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
363382    +end;
MPRINT(EM_DIAGRAM):   end;
363383    +else do;
MPRINT(EM_DIAGRAM):   else do;
363384    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
363385    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
363386    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
363387    +   end;
MPRINT(EM_DIAGRAM):   end;
363388    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
363389    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
363390    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
363391    +   end;
MPRINT(EM_DIAGRAM):   end;
363392    +   else do;
MPRINT(EM_DIAGRAM):   else do;
363393    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
363394    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
363395    +   end;
MPRINT(EM_DIAGRAM):   end;
363396    +end;
MPRINT(EM_DIAGRAM):   end;
363397    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
363398    +   P_DepVar1  =    -6.24183937366733 * H11  +    -5.95989624743853 * H12
363399    +          +     2.94585900942219 * H13  +    -6.19710435543839 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.24183937366733 * H11 + -5.95989624743853 * H12 + 
2.94585900942219 * H13 + -6.19710435543839 * H14 ;
363400    +   P_DepVar1  =     0.00271169512824 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.00271169512824 + P_DepVar1 ;
363401    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
363402    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
363403    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
363404    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
363405    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
363406    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
363407    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
363408    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
363409    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
363410    +END;
MPRINT(EM_DIAGRAM):   END;
363411    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
363412    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
363413    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
363414    +END;
MPRINT(EM_DIAGRAM):   END;
363415    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
363416    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
363417    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
363418    +END;
MPRINT(EM_DIAGRAM):   END;
363419    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
363420    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
363421    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
363422    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
363423    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
363424    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
363425    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
363426    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
363427    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
363428    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
363429    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
363430    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
363431    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
363432    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
363433    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
363434    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
363435    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
363436    +END;
MPRINT(EM_DIAGRAM):   END;
363437    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
363438    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
363439    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
363440    +drop
363441    +H11
363442    +H12
363443    +H13
363444    +H14
363445    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
363446    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
363447     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL33_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META2_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
363448     quit;
363449     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
363450     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
363451     * Neural33: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural33: Computing metadata for TRAIN data;
363452     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL33_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural33\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural33_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural33_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural33_TRAIN out=WORK.M2WC51MR noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2WC51MR;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2WC51MR(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2WC51MR;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2WC51MR;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2NTPYYR NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2NTPYYR;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2NTPYYR;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0TVEYPU(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2NTPYYR;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2NTPYYR;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2NTPYYR;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2NTPYYR;
MPRINT(EMADVISECOLUMNS):   set WORK.M2NTPYYR;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta2_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta2_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural33_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural33";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural33";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural33";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural33";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural33";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural33";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural33";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural33";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural33";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural33";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural33: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
363764     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
363765     set EMWS8.Neural33_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural33_EMINFO;
363766     where DATA='Neural33' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural33' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
363767     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL33_EMINFO.
      WHERE (DATA='Neural33') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

363768     data EMWS8.Neural33_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural33_EMINFO;
363769     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
363770     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
363771     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL33_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
363775     run;
363776     data EMWS8.Neural33_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural33_EMINFO;
363777     set EMWS8.Neural33_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural33_EMINFO WORK.MODELTEMP_INFO;
363778     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL33_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL33_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

363779     proc sort data = EMWS8.Neural33_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural33_EMINFO NOTHREADS;
363780     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
363781     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL33_EMINFO.
NOTE: The data set EMWS8.NEURAL33_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

363782     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
363783     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
363784     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

363785     proc sort data = EMWS8.Neural33_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural33_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
363786     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
363787     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL33_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

363788     data EMWS8.Neural33_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural33_EMINFO;
363789     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
363790     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
363791     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL33_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

363792     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
363793     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
363794     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
363795     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.NEURAL33_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL33_VALIDATE.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
