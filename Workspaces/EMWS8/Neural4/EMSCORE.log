MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.23 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                20. April 2016
Time:                16.23 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3GEBIU8 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3GEBIU8 new;
MPRINT(EM_DIAGRAM):   run;
199000     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
199001     set EMWS8.Neural4_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural4_OUTKEY;
199002     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
199003     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 54 observations read from the data set EMWS8.NEURAL4_OUTKEY.
NOTE: The data set WORK.OUTKEY has 4 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

199004     filename emflow
199004   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural4: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
199005     *------------------------------------------------------------*;
199006     * Neural4: Scoring DATA data;
199007     *------------------------------------------------------------*;
199008     data EMWS8.Neural4_TRAIN
199009     / view=EMWS8.Neural4_TRAIN
199010     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural4_TRAIN / view=EMWS8.Neural4_TRAIN ;
199011     set EMWS8.Meta_TRAIN
199012     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_TRAIN ;
199013     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMFLOWSCORE.sas.
199014    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
199015    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
199016    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
199017    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
199018    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
199019    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
199020    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
199021    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
199022    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
199023    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
199024    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
199025    +LENGTH _WARN_ $4
199026    +      F_DepVar  $ 12
199027    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
199028    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
199029    +
199030    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
199031    +
199032    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
199033    +
199034    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
199035    +
199036    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
199037    +
199038    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
199039    +
199040    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
199041    +
199042    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
199043    +
199044    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
199045    +
199046    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
199047    +
199048    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
199049    +
199050    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
199051    +
199052    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
199053    +
199054    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
199055    +
199056    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
199057    +
199058    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
199059    +
199060    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
199061    +
199062    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
199063    +
199064    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
199065    +
199066    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
199067    +
199068    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
199069    +
199070    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
199071    +
199072    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
199073    +
199074    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
199075    +
199076    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
199077    +
199078    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
199079    +
199080    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
199081    +
199082    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
199083    +
199084    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
199085    +
199086    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
199087    +
199088    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
199089    +
199090    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
199091    +
199092    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
199093    +
199094    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
199095    +
199096    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
199097    +
199098    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
199099    +
199100    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
199101    +
199102    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
199103    +
199104    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
199105    +
199106    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
199107    +
199108    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
199109    +
199110    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
199111    +
199112    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
199113    +
199114    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
199115    +
199116    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
199117    +
199118    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
199119    +
199120    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
199121    +
199122    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
199123    +
199124    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
199125    +
199126    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
199127    +
199128    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
199129    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
199130    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
199131    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
199132    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
199133    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
199134    +end;
MPRINT(EM_DIAGRAM):   end;
199135    +else do;
MPRINT(EM_DIAGRAM):   else do;
199136    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
199137    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
199138    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
199139    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
199140    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
199141    +   end;
MPRINT(EM_DIAGRAM):   end;
199142    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
199143    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
199144    +   end;
MPRINT(EM_DIAGRAM):   end;
199145    +   else do;
MPRINT(EM_DIAGRAM):   else do;
199146    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
199147    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
199148    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
199149    +   end;
MPRINT(EM_DIAGRAM):   end;
199150    +end;
MPRINT(EM_DIAGRAM):   end;
199151    +
199152    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
199153    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
199154    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
199155    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
199156    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
199157    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
199158    +end;
MPRINT(EM_DIAGRAM):   end;
199159    +else do;
MPRINT(EM_DIAGRAM):   else do;
199160    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
199161    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
199162    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
199163    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
199164    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
199165    +   end;
MPRINT(EM_DIAGRAM):   end;
199166    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
199167    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
199168    +   end;
MPRINT(EM_DIAGRAM):   end;
199169    +   else do;
MPRINT(EM_DIAGRAM):   else do;
199170    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
199171    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
199172    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
199173    +   end;
MPRINT(EM_DIAGRAM):   end;
199174    +end;
MPRINT(EM_DIAGRAM):   end;
199175    +
199176    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
199177    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
199178    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
199179    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
199180    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
199181    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
The SAS System

199182    +end;
MPRINT(EM_DIAGRAM):   end;
199183    +else do;
MPRINT(EM_DIAGRAM):   else do;
199184    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
199185    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
199186    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
199187    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
199188    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
199189    +   end;
MPRINT(EM_DIAGRAM):   end;
199190    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
199191    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
199192    +   end;
MPRINT(EM_DIAGRAM):   end;
199193    +   else do;
MPRINT(EM_DIAGRAM):   else do;
199194    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
199195    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
199196    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
199197    +   end;
MPRINT(EM_DIAGRAM):   end;
199198    +end;
MPRINT(EM_DIAGRAM):   end;
199199    +
199200    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
199201    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
199202    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
199203    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
199204    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
199205    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
199206    +end;
MPRINT(EM_DIAGRAM):   end;
199207    +else do;
MPRINT(EM_DIAGRAM):   else do;
199208    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
199209    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
199210    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
199211    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
199212    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
199213    +   end;
MPRINT(EM_DIAGRAM):   end;
199214    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
199215    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
199216    +   end;
MPRINT(EM_DIAGRAM):   end;
199217    +   else do;
MPRINT(EM_DIAGRAM):   else do;
199218    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
199219    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
199220    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
199221    +   end;
MPRINT(EM_DIAGRAM):   end;
199222    +end;
MPRINT(EM_DIAGRAM):   end;
199223    +
199224    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
199225    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
199226    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
199227    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
199228    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
199229    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
199230    +end;
MPRINT(EM_DIAGRAM):   end;
199231    +else do;
MPRINT(EM_DIAGRAM):   else do;
199232    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
199233    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
199234    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
199235    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
199236    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
199237    +   end;
MPRINT(EM_DIAGRAM):   end;
199238    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
199239    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
199240    +   end;
MPRINT(EM_DIAGRAM):   end;
199241    +   else do;
MPRINT(EM_DIAGRAM):   else do;
199242    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
199243    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
199244    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
199245    +   end;
MPRINT(EM_DIAGRAM):   end;
199246    +end;
MPRINT(EM_DIAGRAM):   end;
199247    +
199248    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
199249    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
199250    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
199251    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
199252    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
199253    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
199254    +end;
MPRINT(EM_DIAGRAM):   end;
199255    +else do;
MPRINT(EM_DIAGRAM):   else do;
199256    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
199257    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
199258    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
199259    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
199260    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
199261    +   end;
MPRINT(EM_DIAGRAM):   end;
199262    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
199263    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
199264    +   end;
MPRINT(EM_DIAGRAM):   end;
199265    +   else do;
MPRINT(EM_DIAGRAM):   else do;
199266    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
199267    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
199268    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
199269    +   end;
MPRINT(EM_DIAGRAM):   end;
199270    +end;
MPRINT(EM_DIAGRAM):   end;
199271    +
199272    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
199273    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
199274    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
199275    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
199276    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
199277    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
199278    +end;
MPRINT(EM_DIAGRAM):   end;
199279    +else do;
MPRINT(EM_DIAGRAM):   else do;
199280    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
199281    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
199282    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
199283    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
199284    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
199285    +   end;
MPRINT(EM_DIAGRAM):   end;
199286    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
199287    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
199288    +   end;
MPRINT(EM_DIAGRAM):   end;
199289    +   else do;
MPRINT(EM_DIAGRAM):   else do;
199290    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
199291    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
199292    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
199293    +   end;
MPRINT(EM_DIAGRAM):   end;
199294    +end;
MPRINT(EM_DIAGRAM):   end;
199295    +
199296    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
199297    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
199298    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
199299    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
199300    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
199301    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
199302    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
199303    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
199304    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
199305    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
199306    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
199307    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
199308    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
199309    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
199310    +end;
MPRINT(EM_DIAGRAM):   end;
199311    +else do;
MPRINT(EM_DIAGRAM):   else do;
199312    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
199313    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
199314    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
199315    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
199316    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
199317    +   end;
MPRINT(EM_DIAGRAM):   end;
199318    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
199319    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
199320    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
199321    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
199322    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
199323    +   end;
MPRINT(EM_DIAGRAM):   end;
199324    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
199325    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
199326    +   end;
MPRINT(EM_DIAGRAM):   end;
199327    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
199328    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
199329    +   end;
MPRINT(EM_DIAGRAM):   end;
199330    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
199331    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
199332    +   end;
MPRINT(EM_DIAGRAM):   end;
199333    +   else do;
MPRINT(EM_DIAGRAM):   else do;
199334    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
199335    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
199336    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
199337    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
199338    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
199339    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
199340    +   end;
MPRINT(EM_DIAGRAM):   end;
199341    +end;
MPRINT(EM_DIAGRAM):   end;
199342    +
199343    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
199344    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
199345    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
199346    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
199347    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
199348    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
199349    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
199350    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
199351    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
199352    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
199353    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
199354    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
199355    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
199356    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
199357    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
199358    +end;
MPRINT(EM_DIAGRAM):   end;
199359    +else do;
MPRINT(EM_DIAGRAM):   else do;
199360    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
199361    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
199362    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
199363    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
199364    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
199365    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
199366    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
199367    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
199368    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
199369    +         end;
MPRINT(EM_DIAGRAM):   end;
199370    +         else do;
MPRINT(EM_DIAGRAM):   else do;
199371    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
199372    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
199373    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
199374    +            end;
MPRINT(EM_DIAGRAM):   end;
199375    +         end;
MPRINT(EM_DIAGRAM):   end;
199376    +      end;
MPRINT(EM_DIAGRAM):   end;
199377    +      else do;
MPRINT(EM_DIAGRAM):   else do;
199378    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
199379    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
199380    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
199381    +         end;
MPRINT(EM_DIAGRAM):   end;
199382    +      end;
MPRINT(EM_DIAGRAM):   end;
199383    +   end;
MPRINT(EM_DIAGRAM):   end;
199384    +   else do;
MPRINT(EM_DIAGRAM):   else do;
199385    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
199386    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
199387    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
199388    +      end;
MPRINT(EM_DIAGRAM):   end;
199389    +      else do;
MPRINT(EM_DIAGRAM):   else do;
199390    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
199391    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
199392    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
199393    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
199394    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
199395    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
199396    +         end;
MPRINT(EM_DIAGRAM):   end;
199397    +      end;
MPRINT(EM_DIAGRAM):   end;
199398    +   end;
MPRINT(EM_DIAGRAM):   end;
199399    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
199400    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
199401    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
199402    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
199403    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
199404    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
199405    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
199406    +   end;
MPRINT(EM_DIAGRAM):   end;
199407    +end;
MPRINT(EM_DIAGRAM):   end;
199408    +
199409    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
199410    +*** Checking missing input Interval
199411    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
199412    +
199413    +IF NMISS(
199414    +   AcceptedCmpTotal ,
199415    +   Age ,
199416    +   Frq ,
199417    +   Income ,
199418    +   Kidhome ,
199419    +   Mnt ,
199420    +   MntFishProducts ,
199421    +   MntFruits ,
199422    +   MntGoldProds ,
199423    +   MntMeatProducts ,
199424    +   MntSweetProducts ,
199425    +   MntWines ,
199426    +   MonthsAsCustomer ,
199427    +   NumCatalogPurchases ,
199428    +   NumDealsPurchases ,
199429    +   NumDistPurchases ,
199430    +   NumStorePurchases ,
199431    +   NumWebPurchases ,
199432    +   NumWebVisitsMonth ,
199433    +   RFMstat ,
199434    +   RMntFrq ,
199435    +   Recency ,
199436    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
199437    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
199438    +
199439    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
199440    +END;
MPRINT(EM_DIAGRAM):   END;
199441    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
199442    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
199443    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
199444    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
199445    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
199446    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
199447    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
199448    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
199449    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
199450    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
199451    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
199452    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
199453    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
199454    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
199455    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
199456    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
199457    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
199458    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
199459    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
199460    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
199461    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
199462    +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
199463    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
199464    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
199465    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
199466    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
199467    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
199468    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
199469    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
199470    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
199471    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
199472    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
199473    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
199474    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
199475    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
199476    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
199477    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
199478    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
199479    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
199480    +END;
MPRINT(EM_DIAGRAM):   END;
199481    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
199482    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
199483    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
199484    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
199485    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
199486    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
199487    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
199488    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
199489    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
199490    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
199491    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
199492    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
199493    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
199494    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
199495    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
199496    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
199497    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
199498    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
199499    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
199500    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
199501    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
199502    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
199503    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
199504    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
199505    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
199506    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
199507    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
199508    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
199509    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
199510    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
199511    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
199512    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
199513    +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
199514    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
199515    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
199516    +   ELSE S_NumCatalogPurchases
199517    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
199518    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
199519    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
199520    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
199521    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
199522    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
199523    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
199524    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
199525    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
199526    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
199527    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
199528    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
199529    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
199530    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
199531    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
199532    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
199533    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
199534    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
199535    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
199536    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
199537    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
199538    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
199539    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
199540    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
199541    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
199542    +END;
MPRINT(EM_DIAGRAM):   END;
199543    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
199544    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
199545    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
199546    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
199547    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
199548    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
199549    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
199550    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
199551    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
199552    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
199553    +   H11  =    -0.20235102200349 * S_AcceptedCmpTotal  +     0.09973620402232 *
199554    +        S_Age  +     0.02651873850568 * S_Frq  +     0.23209072271879 *
199555    +        S_Income  +    -0.76740176580734 * S_Kidhome
199556    +          +    -0.88638155859277 * S_Mnt  +     0.15075663922997 *
199557    +        S_MntFishProducts  +    -0.08321498612983 * S_MntFruits
199558    +          +    -0.13987698754788 * S_MntGoldProds  +    -3.55252162783508 *
199559    +        S_MntMeatProducts  +      0.0898998147336 * S_MntSweetProducts
199560    +          +     0.95106929843555 * S_MntWines  +    -0.16645795433479 *
199561    +        S_MonthsAsCustomer  +    -2.17690446735449 * S_NumCatalogPurchases
199562    +          +    -1.00050516074089 * S_NumDealsPurchases
199563    +          +    -0.89322788176916 * S_NumDistPurchases
199564    +          +     1.21914397196653 * S_NumStorePurchases
199565    +          +     1.50867172673665 * S_NumWebPurchases
199566    +          +    -0.78565948522753 * S_NumWebVisitsMonth
199567    +          +     -0.5372025730293 * S_RFMstat  +     0.11393374364398 *
199568    +        S_RMntFrq  +     0.54722353861156 * S_Recency
199569    +          +    -0.11838984639164 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.20235102200349 * S_AcceptedCmpTotal + 0.09973620402232 * S_Age 
+ 0.02651873850568 * S_Frq + 0.23209072271879 * S_Income + -0.76740176580734 * S_Kidhome + 
-0.88638155859277 * S_Mnt + 0.15075663922997 * S_MntFishProducts + -0.08321498612983 * 
S_MntFruits + -0.13987698754788 * S_MntGoldProds + -3.55252162783508 * S_MntMeatProducts + 
0.0898998147336 * S_MntSweetProducts + 0.95106929843555 * S_MntWines + -0.16645795433479 * 
S_MonthsAsCustomer + -2.17690446735449 * S_NumCatalogPurchases + -1.00050516074089 * 
S_NumDealsPurchases + -0.89322788176916 * S_NumDistPurchases + 1.21914397196653 * 
S_NumStorePurchases + 1.50867172673665 * S_NumWebPurchases + -0.78565948522753 * 
S_NumWebVisitsMonth + -0.5372025730293 * S_RFMstat + 0.11393374364398 * S_RMntFrq + 
0.54722353861156 * S_Recency + -0.11838984639164 * S_Teenhome ;
199570    +   H12  =     0.25506261839516 * S_AcceptedCmpTotal  +     0.01024151194031 *
199571    +        S_Age  +    -0.55552102748303 * S_Frq  +     0.78784343774845 *
199572    +        S_Income  +    -0.76288911429735 * S_Kidhome
199573    +          +     0.07845582032978 * S_Mnt  +    -0.06043213360138 *
199574    +        S_MntFishProducts  +    -0.03108843308656 * S_MntFruits
199575    +          +     0.08520753779496 * S_MntGoldProds  +     1.23943533448957 *
199576    +        S_MntMeatProducts  +    -0.04818028301325 * S_MntSweetProducts
199577    +          +    -0.19360001861206 * S_MntWines  +     0.02102763949525 *
199578    +        S_MonthsAsCustomer  +     0.82476019134022 * S_NumCatalogPurchases
199579    +          +     0.79497206561332 * S_NumDealsPurchases
199580    +          +    -0.13658888199464 * S_NumDistPurchases
199581    +          +    -0.86436416316417 * S_NumStorePurchases
199582    +          +    -0.85206550087617 * S_NumWebPurchases
199583    +          +     1.72745004688732 * S_NumWebVisitsMonth
199584    +          +     0.10490733564919 * S_RFMstat  +    -1.33460581392927 *
199585    +        S_RMntFrq  +    -1.61929009656969 * S_Recency
199586    +          +    -0.40811882166933 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.25506261839516 * S_AcceptedCmpTotal + 0.01024151194031 * S_Age + 
-0.55552102748303 * S_Frq + 0.78784343774845 * S_Income + -0.76288911429735 * S_Kidhome + 
0.07845582032978 * S_Mnt + -0.06043213360138 * S_MntFishProducts + -0.03108843308656 * 
S_MntFruits + 0.08520753779496 * S_MntGoldProds + 1.23943533448957 * S_MntMeatProducts + 
-0.04818028301325 * S_MntSweetProducts + -0.19360001861206 * S_MntWines + 0.02102763949525 * 
S_MonthsAsCustomer + 0.82476019134022 * S_NumCatalogPurchases + 0.79497206561332 * 
S_NumDealsPurchases + -0.13658888199464 * S_NumDistPurchases + -0.86436416316417 * 
S_NumStorePurchases + -0.85206550087617 * S_NumWebPurchases + 1.72745004688732 * 
S_NumWebVisitsMonth + 0.10490733564919 * S_RFMstat + -1.33460581392927 * S_RMntFrq + 
-1.61929009656969 * S_Recency + -0.40811882166933 * S_Teenhome ;
199587    +   H13  =     0.89866188971024 * S_AcceptedCmpTotal  +     0.37738110735253 *
199588    +        S_Age  +    -0.04453285097901 * S_Frq  +     0.61675011019409 *
199589    +        S_Income  +    -0.48841499166688 * S_Kidhome
199590    +          +     0.49665971139658 * S_Mnt  +    -0.20125479592957 *
199591    +        S_MntFishProducts  +      0.0681895096053 * S_MntFruits
199592    +          +     0.67390749394162 * S_MntGoldProds  +     1.81626882746224 *
199593    +        S_MntMeatProducts  +     -0.0176717868606 * S_MntSweetProducts
199594    +          +    -0.68432931764529 * S_MntWines  +    -0.19779036276409 *
199595    +        S_MonthsAsCustomer  +    -0.27272063064541 * S_NumCatalogPurchases
199596    +          +    -0.00010125986409 * S_NumDealsPurchases
199597    +          +    -0.00873530900019 * S_NumDistPurchases
199598    +          +    -0.13188135131414 * S_NumStorePurchases
199599    +          +    -0.10710067608125 * S_NumWebPurchases
199600    +          +     0.99164053465149 * S_NumWebVisitsMonth
199601    +          +    -0.36365240312055 * S_RFMstat  +     0.83648105712358 *
199602    +        S_RMntFrq  +    -1.11555213179399 * S_Recency
199603    +          +    -1.05493455023687 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.89866188971024 * S_AcceptedCmpTotal + 0.37738110735253 * S_Age + 
-0.04453285097901 * S_Frq + 0.61675011019409 * S_Income + -0.48841499166688 * S_Kidhome + 
0.49665971139658 * S_Mnt + -0.20125479592957 * S_MntFishProducts + 0.0681895096053 * 
S_MntFruits + 0.67390749394162 * S_MntGoldProds + 1.81626882746224 * S_MntMeatProducts + 
-0.0176717868606 * S_MntSweetProducts + -0.68432931764529 * S_MntWines + -0.19779036276409 * 
S_MonthsAsCustomer + -0.27272063064541 * S_NumCatalogPurchases + -0.00010125986409 * 
S_NumDealsPurchases + -0.00873530900019 * S_NumDistPurchases + -0.13188135131414 * 
S_NumStorePurchases + -0.10710067608125 * S_NumWebPurchases + 0.99164053465149 * 
S_NumWebVisitsMonth + -0.36365240312055 * S_RFMstat + 0.83648105712358 * S_RMntFrq + 
-1.11555213179399 * S_Recency + -1.05493455023687 * S_Teenhome ;
199604    +   H14  =     1.05245177290629 * S_AcceptedCmpTotal  +    -0.18935909277475 *
199605    +        S_Age  +    -0.62796012464254 * S_Frq  +     1.52631204208209 *
199606    +        S_Income  +    -0.57026847797175 * S_Kidhome
199607    +          +    -0.38396402477474 * S_Mnt  +     0.11993109499321 *
199608    +        S_MntFishProducts  +    -0.46266068395624 * S_MntFruits
199609    +          +     -0.0053445402941 * S_MntGoldProds  +     0.71621242208505 *
199610    +        S_MntMeatProducts  +    -0.18517095559545 * S_MntSweetProducts
199611    +          +    -0.48362695115436 * S_MntWines  +    -0.74607964641067 *
199612    +        S_MonthsAsCustomer  +     1.04753413401345 * S_NumCatalogPurchases
199613    +          +     0.83618651452015 * S_NumDealsPurchases
199614    +          +     0.22469306589917 * S_NumDistPurchases
199615    +          +    -0.95889459414769 * S_NumStorePurchases
199616    +          +    -0.95695646799114 * S_NumWebPurchases
199617    +          +     0.96738689790948 * S_NumWebVisitsMonth
199618    +          +     0.43799480510827 * S_RFMstat  +    -0.78928324520812 *
199619    +        S_RMntFrq  +    -1.86789718822119 * S_Recency
199620    +          +    -0.76785535767095 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 1.05245177290629 * S_AcceptedCmpTotal + -0.18935909277475 * S_Age 
+ -0.62796012464254 * S_Frq + 1.52631204208209 * S_Income + -0.57026847797175 * S_Kidhome + 
-0.38396402477474 * S_Mnt + 0.11993109499321 * S_MntFishProducts + -0.46266068395624 * 
S_MntFruits + -0.0053445402941 * S_MntGoldProds + 0.71621242208505 * S_MntMeatProducts + 
-0.18517095559545 * S_MntSweetProducts + -0.48362695115436 * S_MntWines + -0.74607964641067 * 
S_MonthsAsCustomer + 1.04753413401345 * S_NumCatalogPurchases + 0.83618651452015 * 
S_NumDealsPurchases + 0.22469306589917 * S_NumDistPurchases + -0.95889459414769 * 
S_NumStorePurchases + -0.95695646799114 * S_NumWebPurchases + 0.96738689790948 * 
S_NumWebVisitsMonth + 0.43799480510827 * S_RFMstat + -0.78928324520812 * S_RMntFrq + 
-1.86789718822119 * S_Recency + -0.76785535767095 * S_Teenhome ;
199621    +   H11  = H11  +     0.60866074820604 * AcceptedCmp10
199622    +          +     0.07993237689851 * AcceptedCmp20  +     0.14739641952804 *
199623    +        AcceptedCmp30  +       0.338448397077 * AcceptedCmp40
199624    +          +     0.28353325529941 * AcceptedCmp50  +     0.29608633443438 *
199625    +        Complain0  +     0.53578458775397 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.60866074820604 * AcceptedCmp10 + 0.07993237689851 * 
AcceptedCmp20 + 0.14739641952804 * AcceptedCmp30 + 0.338448397077 * AcceptedCmp40 + 
0.28353325529941 * AcceptedCmp50 + 0.29608633443438 * Complain0 + 0.53578458775397 * 
HigherEducationBinary0 ;
199626    +   H12  = H12  +     -0.4662444958919 * AcceptedCmp10
199627    +          +    -0.30464849698344 * AcceptedCmp20  +    -0.50063538782012 *
199628    +        AcceptedCmp30  +     -0.6442077753422 * AcceptedCmp40
199629    +          +    -0.74565351673363 * AcceptedCmp50  +     0.26597130844918 *
199630    +        Complain0  +    -0.04001511061236 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.4662444958919 * AcceptedCmp10 + -0.30464849698344 * 
AcceptedCmp20 + -0.50063538782012 * AcceptedCmp30 + -0.6442077753422 * AcceptedCmp40 + 
-0.74565351673363 * AcceptedCmp50 + 0.26597130844918 * Complain0 + -0.04001511061236 * 
HigherEducationBinary0 ;
199631    +   H13  = H13  +    -1.06883355677907 * AcceptedCmp10
199632    +          +    -0.35462686270639 * AcceptedCmp20  +    -0.31440573486926 *
199633    +        AcceptedCmp30  +    -0.17582569004646 * AcceptedCmp40
199634    +          +    -0.04273477698635 * AcceptedCmp50  +     -0.7436810070055 *
199635    +        Complain0  +     0.20476001423175 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -1.06883355677907 * AcceptedCmp10 + -0.35462686270639 * 
AcceptedCmp20 + -0.31440573486926 * AcceptedCmp30 + -0.17582569004646 * AcceptedCmp40 + 
-0.04273477698635 * AcceptedCmp50 + -0.7436810070055 * Complain0 + 0.20476001423175 * 
HigherEducationBinary0 ;
199636    +   H14  = H14  +     0.68773392217233 * AcceptedCmp10
199637    +          +     0.08494308015283 * AcceptedCmp20  +    -0.11139186803411 *
199638    +        AcceptedCmp30  +    -0.20382002359296 * AcceptedCmp40
199639    +          +    -0.32247439351969 * AcceptedCmp50  +     0.82989255901139 *
199640    +        Complain0  +     0.05214618024356 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.68773392217233 * AcceptedCmp10 + 0.08494308015283 * 
AcceptedCmp20 + -0.11139186803411 * AcceptedCmp30 + -0.20382002359296 * AcceptedCmp40 + 
-0.32247439351969 * AcceptedCmp50 + 0.82989255901139 * Complain0 + 0.05214618024356 * 
HigherEducationBinary0 ;
199641    +   H11  = H11  +    -0.43797621519057 * Education2n_Cycle
199642    +          +     0.47421688615611 * EducationBasic  +      0.1118091646456 *
199643    +        EducationGraduation  +    -0.23468159779626 * EducationMaster
199644    +          +     0.80885454992674 * Marital_StatusDivorced
199645    +          +     -0.5568630572283 * Marital_StatusMarried
199646    +          +    -0.03099047176508 * Marital_StatusSingle
199647    +          +    -0.35224706104652 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.43797621519057 * Education2n_Cycle + 0.47421688615611 * 
EducationBasic + 0.1118091646456 * EducationGraduation + -0.23468159779626 * EducationMaster + 
0.80885454992674 * Marital_StatusDivorced + -0.5568630572283 * Marital_StatusMarried + 
-0.03099047176508 * Marital_StatusSingle + -0.35224706104652 * Marital_StatusTogether ;
199648    +   H12  = H12  +     0.47698408016747 * Education2n_Cycle
199649    +          +    -0.24647152239846 * EducationBasic  +     0.19908915508906 *
199650    +        EducationGraduation  +    -0.56110080484509 * EducationMaster
199651    +          +     0.13911597069393 * Marital_StatusDivorced
199652    +          +    -1.50081060732787 * Marital_StatusMarried
199653    +          +     1.41717012231539 * Marital_StatusSingle
199654    +          +    -1.62614552373863 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.47698408016747 * Education2n_Cycle + -0.24647152239846 * 
EducationBasic + 0.19908915508906 * EducationGraduation + -0.56110080484509 * EducationMaster 
+ 0.13911597069393 * Marital_StatusDivorced + -1.50081060732787 * Marital_StatusMarried + 
1.41717012231539 * Marital_StatusSingle + -1.62614552373863 * Marital_StatusTogether ;
199655    +   H13  = H13  +    -0.25742376124248 * Education2n_Cycle
199656    +          +     0.44394400416073 * EducationBasic  +    -0.33356997418791 *
199657    +        EducationGraduation  +     0.00076803730381 * EducationMaster
199658    +          +    -0.26412736340464 * Marital_StatusDivorced
199659    +          +    -0.27049992388629 * Marital_StatusMarried
199660    +          +     0.67476795725099 * Marital_StatusSingle
199661    +          +     0.15855552601745 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.25742376124248 * Education2n_Cycle + 0.44394400416073 * 
EducationBasic + -0.33356997418791 * EducationGraduation + 0.00076803730381 * EducationMaster 
+ -0.26412736340464 * Marital_StatusDivorced + -0.27049992388629 * Marital_StatusMarried + 
0.67476795725099 * Marital_StatusSingle + 0.15855552601745 * Marital_StatusTogether ;
199662    +   H14  = H14  +     0.34018522050994 * Education2n_Cycle
199663    +          +    -0.13784986616442 * EducationBasic  +    -0.25711169208765 *
199664    +        EducationGraduation  +     0.46303431308465 * EducationMaster
199665    +          +      0.8954230457499 * Marital_StatusDivorced
199666    +          +     0.73706556068242 * Marital_StatusMarried
199667    +          +    -1.29073720538893 * Marital_StatusSingle
199668    +          +     0.11975449670353 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.34018522050994 * Education2n_Cycle + -0.13784986616442 * 
EducationBasic + -0.25711169208765 * EducationGraduation + 0.46303431308465 * EducationMaster 
+ 0.8954230457499 * Marital_StatusDivorced + 0.73706556068242 * Marital_StatusMarried + 
-1.29073720538893 * Marital_StatusSingle + 0.11975449670353 * Marital_StatusTogether ;
199669    +   H11  =    -1.66590961835123 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.66590961835123 + H11 ;
199670    +   H12  =     1.28516055491565 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.28516055491565 + H12 ;
199671    +   H13  =    -0.39755213732006 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.39755213732006 + H13 ;
199672    +   H14  =    -0.66769943446418 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.66769943446418 + H14 ;
199673    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
199674    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
199675    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
199676    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
199677    +END;
MPRINT(EM_DIAGRAM):   END;
199678    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
199679    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
199680    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
199681    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
199682    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
199683    +END;
MPRINT(EM_DIAGRAM):   END;
199684    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
199685    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
199686    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
199687    +
199688    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
199689    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
199690    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
199691    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
199692    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
199693    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
199694    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
199695    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
199696    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
199697    +end;
MPRINT(EM_DIAGRAM):   end;
199698    +else do;
MPRINT(EM_DIAGRAM):   else do;
199699    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
199700    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
199701    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
199702    +   end;
MPRINT(EM_DIAGRAM):   end;
199703    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
199704    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
199705    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
199706    +   end;
MPRINT(EM_DIAGRAM):   end;
199707    +   else do;
MPRINT(EM_DIAGRAM):   else do;
199708    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
199709    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
199710    +   end;
MPRINT(EM_DIAGRAM):   end;
199711    +end;
MPRINT(EM_DIAGRAM):   end;
199712    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
199713    +   P_DepVar1  =    -3.14958692661377 * H11  +     5.03700452655477 * H12
199714    +          +     2.72905677872798 * H13  +     3.04035126231974 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.14958692661377 * H11 + 5.03700452655477 * H12 + 
2.72905677872798 * H13 + 3.04035126231974 * H14 ;
199715    +   P_DepVar1  =    -5.45024002292455 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.45024002292455 + P_DepVar1 ;
199716    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
199717    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
199718    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
199719    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
199720    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
199721    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
199722    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
199723    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
199724    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
199725    +END;
MPRINT(EM_DIAGRAM):   END;
199726    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
199727    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
199728    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
199729    +END;
MPRINT(EM_DIAGRAM):   END;
199730    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
199731    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
199732    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
199733    +END;
MPRINT(EM_DIAGRAM):   END;
199734    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
199735    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
199736    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
199737    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
199738    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
199739    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
199740    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
199741    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
199742    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
199743    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
199744    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
199745    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
199746    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
199747    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
199748    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
199749    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
199750    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
199751    +END;
MPRINT(EM_DIAGRAM):   END;
199752    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
199753    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
199754    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
199755    +drop
199756    +H11
199757    +H12
199758    +H13
199759    +H14
199760    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
199761    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
199762     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL4_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
199763     quit;
199764     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
199765     filename emflow
199765   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural4: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
199766     *------------------------------------------------------------*;
199767     * Neural4: Scoring VALIDATE data;
199768     *------------------------------------------------------------*;
199769     data EMWS8.Neural4_VALIDATE
199770     / view=EMWS8.Neural4_VALIDATE
199771     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural4_VALIDATE / view=EMWS8.Neural4_VALIDATE ;
199772     set EMWS8.Meta_VALIDATE
199773     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_VALIDATE ;
199774     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMFLOWSCORE.sas.
199775    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
199776    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
199777    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
199778    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
199779    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
199780    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
199781    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
199782    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
199783    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
199784    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
199785    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
199786    +LENGTH _WARN_ $4
199787    +      F_DepVar  $ 12
199788    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
199789    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
199790    +
199791    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
199792    +
199793    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
199794    +
199795    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
199796    +
199797    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
199798    +
199799    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
199800    +
199801    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
199802    +
199803    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
199804    +
199805    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
199806    +
199807    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
199808    +
199809    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
199810    +
199811    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
199812    +
199813    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
199814    +
199815    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
199816    +
199817    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
199818    +
199819    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
199820    +
199821    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
199822    +
199823    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
199824    +
199825    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
199826    +
199827    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
199828    +
199829    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
199830    +
199831    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
199832    +
199833    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
199834    +
199835    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
199836    +
199837    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
199838    +
199839    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
199840    +
199841    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
199842    +
199843    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
199844    +
199845    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
199846    +
199847    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
199848    +
199849    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
199850    +
199851    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
199852    +
199853    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
199854    +
199855    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
199856    +
199857    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
199858    +
199859    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
199860    +
199861    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
199862    +
199863    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
199864    +
199865    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
199866    +
199867    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
199868    +
199869    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
199870    +
199871    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
199872    +
199873    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
199874    +
199875    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
199876    +
199877    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
199878    +
199879    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
199880    +
199881    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
199882    +
199883    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
199884    +
199885    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
199886    +
199887    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
199888    +
199889    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
199890    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
199891    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
199892    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
199893    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
199894    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
199895    +end;
MPRINT(EM_DIAGRAM):   end;
199896    +else do;
MPRINT(EM_DIAGRAM):   else do;
199897    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
199898    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
199899    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
199900    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
199901    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
199902    +   end;
MPRINT(EM_DIAGRAM):   end;
199903    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
199904    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
199905    +   end;
MPRINT(EM_DIAGRAM):   end;
199906    +   else do;
MPRINT(EM_DIAGRAM):   else do;
199907    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
199908    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
199909    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
199910    +   end;
MPRINT(EM_DIAGRAM):   end;
199911    +end;
MPRINT(EM_DIAGRAM):   end;
199912    +
199913    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
199914    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
199915    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
199916    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
199917    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
199918    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
199919    +end;
MPRINT(EM_DIAGRAM):   end;
199920    +else do;
MPRINT(EM_DIAGRAM):   else do;
199921    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
199922    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
199923    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
199924    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
199925    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
199926    +   end;
MPRINT(EM_DIAGRAM):   end;
199927    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
199928    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
199929    +   end;
MPRINT(EM_DIAGRAM):   end;
199930    +   else do;
MPRINT(EM_DIAGRAM):   else do;
199931    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
199932    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
199933    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
199934    +   end;
MPRINT(EM_DIAGRAM):   end;
199935    +end;
MPRINT(EM_DIAGRAM):   end;
199936    +
199937    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
199938    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
199939    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
199940    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
199941    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
199942    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
199943    +end;
MPRINT(EM_DIAGRAM):   end;
199944    +else do;
MPRINT(EM_DIAGRAM):   else do;
199945    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
199946    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
199947    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
199948    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
199949    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
199950    +   end;
MPRINT(EM_DIAGRAM):   end;
199951    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
199952    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
199953    +   end;
MPRINT(EM_DIAGRAM):   end;
199954    +   else do;
MPRINT(EM_DIAGRAM):   else do;
199955    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
199956    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
199957    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
199958    +   end;
MPRINT(EM_DIAGRAM):   end;
199959    +end;
MPRINT(EM_DIAGRAM):   end;
199960    +
199961    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
199962    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
199963    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
199964    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
199965    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
199966    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
199967    +end;
MPRINT(EM_DIAGRAM):   end;
199968    +else do;
MPRINT(EM_DIAGRAM):   else do;
199969    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
199970    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
199971    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
199972    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
199973    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
199974    +   end;
MPRINT(EM_DIAGRAM):   end;
199975    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
199976    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
199977    +   end;
MPRINT(EM_DIAGRAM):   end;
199978    +   else do;
MPRINT(EM_DIAGRAM):   else do;
199979    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
199980    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
199981    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
199982    +   end;
MPRINT(EM_DIAGRAM):   end;
199983    +end;
MPRINT(EM_DIAGRAM):   end;
199984    +
199985    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
199986    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
199987    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
199988    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
199989    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
199990    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
199991    +end;
MPRINT(EM_DIAGRAM):   end;
199992    +else do;
MPRINT(EM_DIAGRAM):   else do;
199993    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
199994    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
199995    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
199996    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
199997    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
199998    +   end;
MPRINT(EM_DIAGRAM):   end;
199999    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
200000    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
200001    +   end;
MPRINT(EM_DIAGRAM):   end;
200002    +   else do;
MPRINT(EM_DIAGRAM):   else do;
200003    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
200004    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
200005    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200006    +   end;
MPRINT(EM_DIAGRAM):   end;
200007    +end;
MPRINT(EM_DIAGRAM):   end;
200008    +
200009    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
200010    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
200011    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
200012    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
200013    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
200014    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200015    +end;
MPRINT(EM_DIAGRAM):   end;
200016    +else do;
MPRINT(EM_DIAGRAM):   else do;
200017    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
200018    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
200019    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
200020    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
200021    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
200022    +   end;
MPRINT(EM_DIAGRAM):   end;
200023    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
200024    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
200025    +   end;
MPRINT(EM_DIAGRAM):   end;
200026    +   else do;
MPRINT(EM_DIAGRAM):   else do;
200027    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
200028    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
200029    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200030    +   end;
MPRINT(EM_DIAGRAM):   end;
200031    +end;
MPRINT(EM_DIAGRAM):   end;
200032    +
200033    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
200034    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
200035    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
200036    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
200037    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
200038    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200039    +end;
MPRINT(EM_DIAGRAM):   end;
200040    +else do;
MPRINT(EM_DIAGRAM):   else do;
200041    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
200042    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
200043    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
200044    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
200045    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
200046    +   end;
MPRINT(EM_DIAGRAM):   end;
200047    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
200048    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
200049    +   end;
MPRINT(EM_DIAGRAM):   end;
200050    +   else do;
MPRINT(EM_DIAGRAM):   else do;
200051    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
200052    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
200053    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200054    +   end;
MPRINT(EM_DIAGRAM):   end;
200055    +end;
MPRINT(EM_DIAGRAM):   end;
200056    +
200057    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
200058    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
200059    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
200060    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
200061    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
200062    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
200063    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
200064    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
200065    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
200066    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
200067    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
200068    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
200069    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
200070    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200071    +end;
MPRINT(EM_DIAGRAM):   end;
200072    +else do;
MPRINT(EM_DIAGRAM):   else do;
200073    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
200074    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
200075    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
200076    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
200077    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
200078    +   end;
MPRINT(EM_DIAGRAM):   end;
200079    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
200080    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
200081    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
200082    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
200083    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
200084    +   end;
MPRINT(EM_DIAGRAM):   end;
200085    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
200086    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
200087    +   end;
MPRINT(EM_DIAGRAM):   end;
200088    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
200089    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
200090    +   end;
MPRINT(EM_DIAGRAM):   end;
200091    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
200092    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
200093    +   end;
MPRINT(EM_DIAGRAM):   end;
200094    +   else do;
MPRINT(EM_DIAGRAM):   else do;
200095    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
200096    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
200097    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
200098    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
200099    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
200100    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200101    +   end;
MPRINT(EM_DIAGRAM):   end;
200102    +end;
MPRINT(EM_DIAGRAM):   end;
200103    +
200104    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
200105    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
200106    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
200107    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
200108    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
200109    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
200110    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
200111    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
200112    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
200113    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
200114    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
200115    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
200116    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
200117    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
200118    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200119    +end;
MPRINT(EM_DIAGRAM):   end;
200120    +else do;
MPRINT(EM_DIAGRAM):   else do;
200121    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
200122    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
200123    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
200124    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
200125    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
200126    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
200127    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
200128    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
200129    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
200130    +         end;
MPRINT(EM_DIAGRAM):   end;
200131    +         else do;
MPRINT(EM_DIAGRAM):   else do;
200132    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
200133    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
200134    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
200135    +            end;
MPRINT(EM_DIAGRAM):   end;
200136    +         end;
MPRINT(EM_DIAGRAM):   end;
200137    +      end;
MPRINT(EM_DIAGRAM):   end;
200138    +      else do;
MPRINT(EM_DIAGRAM):   else do;
200139    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
200140    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
200141    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
200142    +         end;
MPRINT(EM_DIAGRAM):   end;
200143    +      end;
MPRINT(EM_DIAGRAM):   end;
200144    +   end;
MPRINT(EM_DIAGRAM):   end;
200145    +   else do;
MPRINT(EM_DIAGRAM):   else do;
200146    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
200147    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
200148    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
200149    +      end;
MPRINT(EM_DIAGRAM):   end;
200150    +      else do;
MPRINT(EM_DIAGRAM):   else do;
200151    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
200152    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
200153    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
200154    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
200155    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
200156    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
200157    +         end;
MPRINT(EM_DIAGRAM):   end;
200158    +      end;
MPRINT(EM_DIAGRAM):   end;
200159    +   end;
MPRINT(EM_DIAGRAM):   end;
200160    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
200161    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
200162    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
200163    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
200164    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
200165    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
200166    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200167    +   end;
MPRINT(EM_DIAGRAM):   end;
200168    +end;
MPRINT(EM_DIAGRAM):   end;
200169    +
200170    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
200171    +*** Checking missing input Interval
200172    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
200173    +
200174    +IF NMISS(
200175    +   AcceptedCmpTotal ,
200176    +   Age ,
200177    +   Frq ,
200178    +   Income ,
200179    +   Kidhome ,
200180    +   Mnt ,
200181    +   MntFishProducts ,
200182    +   MntFruits ,
200183    +   MntGoldProds ,
200184    +   MntMeatProducts ,
200185    +   MntSweetProducts ,
200186    +   MntWines ,
200187    +   MonthsAsCustomer ,
200188    +   NumCatalogPurchases ,
200189    +   NumDealsPurchases ,
200190    +   NumDistPurchases ,
200191    +   NumStorePurchases ,
200192    +   NumWebPurchases ,
200193    +   NumWebVisitsMonth ,
200194    +   RFMstat ,
200195    +   RMntFrq ,
200196    +   Recency ,
200197    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
200198    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
200199    +
200200    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200201    +END;
MPRINT(EM_DIAGRAM):   END;
200202    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
200203    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
200204    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
200205    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
200206    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
200207    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
200208    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
200209    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
200210    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
200211    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
200212    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
200213    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
200214    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
200215    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
200216    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
200217    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
200218    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
200219    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
200220    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
200221    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
200222    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
200223    +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
200224    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
200225    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
200226    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
200227    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
200228    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
200229    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
200230    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
200231    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
200232    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
200233    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
200234    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
200235    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
200236    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
200237    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
200238    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
200239    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
200240    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
200241    +END;
MPRINT(EM_DIAGRAM):   END;
200242    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
200243    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
200244    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
200245    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
200246    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
200247    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
200248    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
200249    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
200250    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
200251    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
200252    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
200253    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
200254    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
200255    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
200256    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
200257    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
200258    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
200259    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
200260    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
200261    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
200262    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
200263    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
200264    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
200265    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
200266    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
200267    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
200268    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
200269    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
200270    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
200271    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
200272    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
200273    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
200274    +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
200275    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
200276    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
200277    +   ELSE S_NumCatalogPurchases
200278    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
200279    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
200280    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
200281    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
200282    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
200283    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
200284    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
200285    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
200286    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
200287    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
200288    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
200289    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
200290    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
200291    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
200292    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
200293    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
200294    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
200295    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
200296    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
200297    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
200298    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
200299    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
200300    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
200301    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
200302    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
200303    +END;
MPRINT(EM_DIAGRAM):   END;
200304    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
200305    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
200306    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
200307    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
200308    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
200309    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
200310    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
200311    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
200312    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
200313    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
200314    +   H11  =    -0.20235102200349 * S_AcceptedCmpTotal  +     0.09973620402232 *
200315    +        S_Age  +     0.02651873850568 * S_Frq  +     0.23209072271879 *
200316    +        S_Income  +    -0.76740176580734 * S_Kidhome
200317    +          +    -0.88638155859277 * S_Mnt  +     0.15075663922997 *
200318    +        S_MntFishProducts  +    -0.08321498612983 * S_MntFruits
200319    +          +    -0.13987698754788 * S_MntGoldProds  +    -3.55252162783508 *
200320    +        S_MntMeatProducts  +      0.0898998147336 * S_MntSweetProducts
200321    +          +     0.95106929843555 * S_MntWines  +    -0.16645795433479 *
200322    +        S_MonthsAsCustomer  +    -2.17690446735449 * S_NumCatalogPurchases
200323    +          +    -1.00050516074089 * S_NumDealsPurchases
200324    +          +    -0.89322788176916 * S_NumDistPurchases
200325    +          +     1.21914397196653 * S_NumStorePurchases
200326    +          +     1.50867172673665 * S_NumWebPurchases
200327    +          +    -0.78565948522753 * S_NumWebVisitsMonth
200328    +          +     -0.5372025730293 * S_RFMstat  +     0.11393374364398 *
200329    +        S_RMntFrq  +     0.54722353861156 * S_Recency
200330    +          +    -0.11838984639164 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.20235102200349 * S_AcceptedCmpTotal + 0.09973620402232 * S_Age 
+ 0.02651873850568 * S_Frq + 0.23209072271879 * S_Income + -0.76740176580734 * S_Kidhome + 
-0.88638155859277 * S_Mnt + 0.15075663922997 * S_MntFishProducts + -0.08321498612983 * 
S_MntFruits + -0.13987698754788 * S_MntGoldProds + -3.55252162783508 * S_MntMeatProducts + 
0.0898998147336 * S_MntSweetProducts + 0.95106929843555 * S_MntWines + -0.16645795433479 * 
S_MonthsAsCustomer + -2.17690446735449 * S_NumCatalogPurchases + -1.00050516074089 * 
S_NumDealsPurchases + -0.89322788176916 * S_NumDistPurchases + 1.21914397196653 * 
S_NumStorePurchases + 1.50867172673665 * S_NumWebPurchases + -0.78565948522753 * 
S_NumWebVisitsMonth + -0.5372025730293 * S_RFMstat + 0.11393374364398 * S_RMntFrq + 
0.54722353861156 * S_Recency + -0.11838984639164 * S_Teenhome ;
200331    +   H12  =     0.25506261839516 * S_AcceptedCmpTotal  +     0.01024151194031 *
200332    +        S_Age  +    -0.55552102748303 * S_Frq  +     0.78784343774845 *
200333    +        S_Income  +    -0.76288911429735 * S_Kidhome
200334    +          +     0.07845582032978 * S_Mnt  +    -0.06043213360138 *
200335    +        S_MntFishProducts  +    -0.03108843308656 * S_MntFruits
200336    +          +     0.08520753779496 * S_MntGoldProds  +     1.23943533448957 *
200337    +        S_MntMeatProducts  +    -0.04818028301325 * S_MntSweetProducts
200338    +          +    -0.19360001861206 * S_MntWines  +     0.02102763949525 *
200339    +        S_MonthsAsCustomer  +     0.82476019134022 * S_NumCatalogPurchases
200340    +          +     0.79497206561332 * S_NumDealsPurchases
200341    +          +    -0.13658888199464 * S_NumDistPurchases
200342    +          +    -0.86436416316417 * S_NumStorePurchases
200343    +          +    -0.85206550087617 * S_NumWebPurchases
200344    +          +     1.72745004688732 * S_NumWebVisitsMonth
200345    +          +     0.10490733564919 * S_RFMstat  +    -1.33460581392927 *
200346    +        S_RMntFrq  +    -1.61929009656969 * S_Recency
200347    +          +    -0.40811882166933 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.25506261839516 * S_AcceptedCmpTotal + 0.01024151194031 * S_Age + 
-0.55552102748303 * S_Frq + 0.78784343774845 * S_Income + -0.76288911429735 * S_Kidhome + 
0.07845582032978 * S_Mnt + -0.06043213360138 * S_MntFishProducts + -0.03108843308656 * 
S_MntFruits + 0.08520753779496 * S_MntGoldProds + 1.23943533448957 * S_MntMeatProducts + 
-0.04818028301325 * S_MntSweetProducts + -0.19360001861206 * S_MntWines + 0.02102763949525 * 
S_MonthsAsCustomer + 0.82476019134022 * S_NumCatalogPurchases + 0.79497206561332 * 
S_NumDealsPurchases + -0.13658888199464 * S_NumDistPurchases + -0.86436416316417 * 
S_NumStorePurchases + -0.85206550087617 * S_NumWebPurchases + 1.72745004688732 * 
S_NumWebVisitsMonth + 0.10490733564919 * S_RFMstat + -1.33460581392927 * S_RMntFrq + 
-1.61929009656969 * S_Recency + -0.40811882166933 * S_Teenhome ;
200348    +   H13  =     0.89866188971024 * S_AcceptedCmpTotal  +     0.37738110735253 *
200349    +        S_Age  +    -0.04453285097901 * S_Frq  +     0.61675011019409 *
200350    +        S_Income  +    -0.48841499166688 * S_Kidhome
200351    +          +     0.49665971139658 * S_Mnt  +    -0.20125479592957 *
200352    +        S_MntFishProducts  +      0.0681895096053 * S_MntFruits
200353    +          +     0.67390749394162 * S_MntGoldProds  +     1.81626882746224 *
200354    +        S_MntMeatProducts  +     -0.0176717868606 * S_MntSweetProducts
200355    +          +    -0.68432931764529 * S_MntWines  +    -0.19779036276409 *
200356    +        S_MonthsAsCustomer  +    -0.27272063064541 * S_NumCatalogPurchases
200357    +          +    -0.00010125986409 * S_NumDealsPurchases
200358    +          +    -0.00873530900019 * S_NumDistPurchases
200359    +          +    -0.13188135131414 * S_NumStorePurchases
200360    +          +    -0.10710067608125 * S_NumWebPurchases
200361    +          +     0.99164053465149 * S_NumWebVisitsMonth
200362    +          +    -0.36365240312055 * S_RFMstat  +     0.83648105712358 *
200363    +        S_RMntFrq  +    -1.11555213179399 * S_Recency
200364    +          +    -1.05493455023687 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.89866188971024 * S_AcceptedCmpTotal + 0.37738110735253 * S_Age + 
-0.04453285097901 * S_Frq + 0.61675011019409 * S_Income + -0.48841499166688 * S_Kidhome + 
0.49665971139658 * S_Mnt + -0.20125479592957 * S_MntFishProducts + 0.0681895096053 * 
S_MntFruits + 0.67390749394162 * S_MntGoldProds + 1.81626882746224 * S_MntMeatProducts + 
-0.0176717868606 * S_MntSweetProducts + -0.68432931764529 * S_MntWines + -0.19779036276409 * 
S_MonthsAsCustomer + -0.27272063064541 * S_NumCatalogPurchases + -0.00010125986409 * 
S_NumDealsPurchases + -0.00873530900019 * S_NumDistPurchases + -0.13188135131414 * 
S_NumStorePurchases + -0.10710067608125 * S_NumWebPurchases + 0.99164053465149 * 
S_NumWebVisitsMonth + -0.36365240312055 * S_RFMstat + 0.83648105712358 * S_RMntFrq + 
-1.11555213179399 * S_Recency + -1.05493455023687 * S_Teenhome ;
200365    +   H14  =     1.05245177290629 * S_AcceptedCmpTotal  +    -0.18935909277475 *
200366    +        S_Age  +    -0.62796012464254 * S_Frq  +     1.52631204208209 *
200367    +        S_Income  +    -0.57026847797175 * S_Kidhome
200368    +          +    -0.38396402477474 * S_Mnt  +     0.11993109499321 *
200369    +        S_MntFishProducts  +    -0.46266068395624 * S_MntFruits
200370    +          +     -0.0053445402941 * S_MntGoldProds  +     0.71621242208505 *
200371    +        S_MntMeatProducts  +    -0.18517095559545 * S_MntSweetProducts
200372    +          +    -0.48362695115436 * S_MntWines  +    -0.74607964641067 *
200373    +        S_MonthsAsCustomer  +     1.04753413401345 * S_NumCatalogPurchases
200374    +          +     0.83618651452015 * S_NumDealsPurchases
200375    +          +     0.22469306589917 * S_NumDistPurchases
200376    +          +    -0.95889459414769 * S_NumStorePurchases
200377    +          +    -0.95695646799114 * S_NumWebPurchases
200378    +          +     0.96738689790948 * S_NumWebVisitsMonth
200379    +          +     0.43799480510827 * S_RFMstat  +    -0.78928324520812 *
200380    +        S_RMntFrq  +    -1.86789718822119 * S_Recency
200381    +          +    -0.76785535767095 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 1.05245177290629 * S_AcceptedCmpTotal + -0.18935909277475 * S_Age 
+ -0.62796012464254 * S_Frq + 1.52631204208209 * S_Income + -0.57026847797175 * S_Kidhome + 
-0.38396402477474 * S_Mnt + 0.11993109499321 * S_MntFishProducts + -0.46266068395624 * 
S_MntFruits + -0.0053445402941 * S_MntGoldProds + 0.71621242208505 * S_MntMeatProducts + 
-0.18517095559545 * S_MntSweetProducts + -0.48362695115436 * S_MntWines + -0.74607964641067 * 
S_MonthsAsCustomer + 1.04753413401345 * S_NumCatalogPurchases + 0.83618651452015 * 
S_NumDealsPurchases + 0.22469306589917 * S_NumDistPurchases + -0.95889459414769 * 
S_NumStorePurchases + -0.95695646799114 * S_NumWebPurchases + 0.96738689790948 * 
S_NumWebVisitsMonth + 0.43799480510827 * S_RFMstat + -0.78928324520812 * S_RMntFrq + 
-1.86789718822119 * S_Recency + -0.76785535767095 * S_Teenhome ;
200382    +   H11  = H11  +     0.60866074820604 * AcceptedCmp10
200383    +          +     0.07993237689851 * AcceptedCmp20  +     0.14739641952804 *
200384    +        AcceptedCmp30  +       0.338448397077 * AcceptedCmp40
200385    +          +     0.28353325529941 * AcceptedCmp50  +     0.29608633443438 *
200386    +        Complain0  +     0.53578458775397 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.60866074820604 * AcceptedCmp10 + 0.07993237689851 * 
AcceptedCmp20 + 0.14739641952804 * AcceptedCmp30 + 0.338448397077 * AcceptedCmp40 + 
0.28353325529941 * AcceptedCmp50 + 0.29608633443438 * Complain0 + 0.53578458775397 * 
HigherEducationBinary0 ;
200387    +   H12  = H12  +     -0.4662444958919 * AcceptedCmp10
200388    +          +    -0.30464849698344 * AcceptedCmp20  +    -0.50063538782012 *
200389    +        AcceptedCmp30  +     -0.6442077753422 * AcceptedCmp40
200390    +          +    -0.74565351673363 * AcceptedCmp50  +     0.26597130844918 *
200391    +        Complain0  +    -0.04001511061236 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.4662444958919 * AcceptedCmp10 + -0.30464849698344 * 
AcceptedCmp20 + -0.50063538782012 * AcceptedCmp30 + -0.6442077753422 * AcceptedCmp40 + 
-0.74565351673363 * AcceptedCmp50 + 0.26597130844918 * Complain0 + -0.04001511061236 * 
HigherEducationBinary0 ;
200392    +   H13  = H13  +    -1.06883355677907 * AcceptedCmp10
200393    +          +    -0.35462686270639 * AcceptedCmp20  +    -0.31440573486926 *
200394    +        AcceptedCmp30  +    -0.17582569004646 * AcceptedCmp40
200395    +          +    -0.04273477698635 * AcceptedCmp50  +     -0.7436810070055 *
200396    +        Complain0  +     0.20476001423175 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -1.06883355677907 * AcceptedCmp10 + -0.35462686270639 * 
AcceptedCmp20 + -0.31440573486926 * AcceptedCmp30 + -0.17582569004646 * AcceptedCmp40 + 
-0.04273477698635 * AcceptedCmp50 + -0.7436810070055 * Complain0 + 0.20476001423175 * 
HigherEducationBinary0 ;
200397    +   H14  = H14  +     0.68773392217233 * AcceptedCmp10
200398    +          +     0.08494308015283 * AcceptedCmp20  +    -0.11139186803411 *
200399    +        AcceptedCmp30  +    -0.20382002359296 * AcceptedCmp40
200400    +          +    -0.32247439351969 * AcceptedCmp50  +     0.82989255901139 *
200401    +        Complain0  +     0.05214618024356 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.68773392217233 * AcceptedCmp10 + 0.08494308015283 * 
AcceptedCmp20 + -0.11139186803411 * AcceptedCmp30 + -0.20382002359296 * AcceptedCmp40 + 
-0.32247439351969 * AcceptedCmp50 + 0.82989255901139 * Complain0 + 0.05214618024356 * 
HigherEducationBinary0 ;
200402    +   H11  = H11  +    -0.43797621519057 * Education2n_Cycle
200403    +          +     0.47421688615611 * EducationBasic  +      0.1118091646456 *
200404    +        EducationGraduation  +    -0.23468159779626 * EducationMaster
200405    +          +     0.80885454992674 * Marital_StatusDivorced
200406    +          +     -0.5568630572283 * Marital_StatusMarried
200407    +          +    -0.03099047176508 * Marital_StatusSingle
200408    +          +    -0.35224706104652 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.43797621519057 * Education2n_Cycle + 0.47421688615611 * 
EducationBasic + 0.1118091646456 * EducationGraduation + -0.23468159779626 * EducationMaster + 
0.80885454992674 * Marital_StatusDivorced + -0.5568630572283 * Marital_StatusMarried + 
-0.03099047176508 * Marital_StatusSingle + -0.35224706104652 * Marital_StatusTogether ;
200409    +   H12  = H12  +     0.47698408016747 * Education2n_Cycle
200410    +          +    -0.24647152239846 * EducationBasic  +     0.19908915508906 *
200411    +        EducationGraduation  +    -0.56110080484509 * EducationMaster
200412    +          +     0.13911597069393 * Marital_StatusDivorced
200413    +          +    -1.50081060732787 * Marital_StatusMarried
200414    +          +     1.41717012231539 * Marital_StatusSingle
200415    +          +    -1.62614552373863 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.47698408016747 * Education2n_Cycle + -0.24647152239846 * 
EducationBasic + 0.19908915508906 * EducationGraduation + -0.56110080484509 * EducationMaster 
+ 0.13911597069393 * Marital_StatusDivorced + -1.50081060732787 * Marital_StatusMarried + 
1.41717012231539 * Marital_StatusSingle + -1.62614552373863 * Marital_StatusTogether ;
200416    +   H13  = H13  +    -0.25742376124248 * Education2n_Cycle
200417    +          +     0.44394400416073 * EducationBasic  +    -0.33356997418791 *
200418    +        EducationGraduation  +     0.00076803730381 * EducationMaster
200419    +          +    -0.26412736340464 * Marital_StatusDivorced
200420    +          +    -0.27049992388629 * Marital_StatusMarried
200421    +          +     0.67476795725099 * Marital_StatusSingle
200422    +          +     0.15855552601745 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.25742376124248 * Education2n_Cycle + 0.44394400416073 * 
EducationBasic + -0.33356997418791 * EducationGraduation + 0.00076803730381 * EducationMaster 
+ -0.26412736340464 * Marital_StatusDivorced + -0.27049992388629 * Marital_StatusMarried + 
0.67476795725099 * Marital_StatusSingle + 0.15855552601745 * Marital_StatusTogether ;
200423    +   H14  = H14  +     0.34018522050994 * Education2n_Cycle
200424    +          +    -0.13784986616442 * EducationBasic  +    -0.25711169208765 *
200425    +        EducationGraduation  +     0.46303431308465 * EducationMaster
200426    +          +      0.8954230457499 * Marital_StatusDivorced
200427    +          +     0.73706556068242 * Marital_StatusMarried
200428    +          +    -1.29073720538893 * Marital_StatusSingle
200429    +          +     0.11975449670353 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.34018522050994 * Education2n_Cycle + -0.13784986616442 * 
EducationBasic + -0.25711169208765 * EducationGraduation + 0.46303431308465 * EducationMaster 
+ 0.8954230457499 * Marital_StatusDivorced + 0.73706556068242 * Marital_StatusMarried + 
-1.29073720538893 * Marital_StatusSingle + 0.11975449670353 * Marital_StatusTogether ;
200430    +   H11  =    -1.66590961835123 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.66590961835123 + H11 ;
200431    +   H12  =     1.28516055491565 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.28516055491565 + H12 ;
200432    +   H13  =    -0.39755213732006 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.39755213732006 + H13 ;
200433    +   H14  =    -0.66769943446418 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.66769943446418 + H14 ;
200434    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
200435    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
200436    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
200437    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
200438    +END;
MPRINT(EM_DIAGRAM):   END;
200439    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
200440    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
200441    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
200442    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
200443    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
200444    +END;
MPRINT(EM_DIAGRAM):   END;
200445    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
200446    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
200447    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
200448    +
200449    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
200450    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
200451    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
200452    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
200453    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
200454    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
200455    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
200456    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
200457    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
200458    +end;
MPRINT(EM_DIAGRAM):   end;
200459    +else do;
MPRINT(EM_DIAGRAM):   else do;
200460    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
200461    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
200462    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
200463    +   end;
MPRINT(EM_DIAGRAM):   end;
200464    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
200465    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
200466    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
200467    +   end;
MPRINT(EM_DIAGRAM):   end;
200468    +   else do;
MPRINT(EM_DIAGRAM):   else do;
200469    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
200470    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
200471    +   end;
MPRINT(EM_DIAGRAM):   end;
200472    +end;
MPRINT(EM_DIAGRAM):   end;
200473    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
200474    +   P_DepVar1  =    -3.14958692661377 * H11  +     5.03700452655477 * H12
200475    +          +     2.72905677872798 * H13  +     3.04035126231974 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.14958692661377 * H11 + 5.03700452655477 * H12 + 
2.72905677872798 * H13 + 3.04035126231974 * H14 ;
200476    +   P_DepVar1  =    -5.45024002292455 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.45024002292455 + P_DepVar1 ;
200477    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
200478    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
200479    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
200480    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
200481    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
200482    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
200483    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
200484    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
200485    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
200486    +END;
MPRINT(EM_DIAGRAM):   END;
200487    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
200488    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
200489    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
200490    +END;
MPRINT(EM_DIAGRAM):   END;
200491    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
200492    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
200493    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
200494    +END;
MPRINT(EM_DIAGRAM):   END;
200495    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
200496    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
200497    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
200498    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
200499    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
200500    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
200501    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
200502    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
200503    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
200504    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
200505    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
200506    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
200507    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
200508    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
200509    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
200510    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
200511    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
200512    +END;
MPRINT(EM_DIAGRAM):   END;
200513    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
200514    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
200515    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
200516    +drop
200517    +H11
200518    +H12
200519    +H13
200520    +H14
200521    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
200522    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
200523     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL4_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
200524     quit;
200525     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
200526     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
200527     * Neural4: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural4: Computing metadata for TRAIN data;
200528     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL4_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural4\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural4_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural4_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural4_TRAIN out=WORK.M1R2L_I5 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1R2L_I5;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1R2L_I5(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1R2L_I5;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1R2L_I5;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M22GVBL4 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M22GVBL4;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M22GVBL4;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1HTVZZ4(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M22GVBL4;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M22GVBL4;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M22GVBL4;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M22GVBL4;
MPRINT(EMADVISECOLUMNS):   set WORK.M22GVBL4;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural4_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural4";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural4";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural4";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural4";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural4";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural4";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural4";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural4";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural4";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural4";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural4: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
200840     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
200841     set EMWS8.Neural4_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural4_EMINFO;
200842     where DATA='Neural4' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural4' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
200843     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL4_EMINFO.
      WHERE (DATA='Neural4') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

200844     data EMWS8.Neural4_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural4_EMINFO;
200845     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
200846     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
200847     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL4_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   run;
200851     run;
200852     data EMWS8.Neural4_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural4_EMINFO;
200853     set EMWS8.Neural4_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural4_EMINFO WORK.MODELTEMP_INFO;
200854     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL4_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL4_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

200855     proc sort data = EMWS8.Neural4_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural4_EMINFO NOTHREADS;
200856     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
200857     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL4_EMINFO.
NOTE: The data set EMWS8.NEURAL4_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

200858     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
200859     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
200860     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

200861     proc sort data = EMWS8.Neural4_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural4_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
200862     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
200863     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL4_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

200864     data EMWS8.Neural4_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural4_EMINFO;
200865     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
200866     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
200867     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL4_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

200868     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
200869     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
200870     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
200871     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.NEURAL4_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
NOTE: View EMWS8.NEURAL4_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
