MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "08.22 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                08.22 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1OM5YOM 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1OM5YOM new;
MPRINT(EM_DIAGRAM):   run;
435538     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
435539     set EMWS8.Neural4_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural4_OUTKEY;
435540     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
435541     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 54 observations read from the data set EMWS8.NEURAL4_OUTKEY.
NOTE: The data set WORK.OUTKEY has 4 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

435542     filename emflow
435542   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural4: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
435543     *------------------------------------------------------------*;
435544     * Neural4: Scoring DATA data;
435545     *------------------------------------------------------------*;
435546     data EMWS8.Neural4_TRAIN
435547     / view=EMWS8.Neural4_TRAIN
435548     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural4_TRAIN / view=EMWS8.Neural4_TRAIN ;
435549     set EMWS8.Meta_TRAIN
435550     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_TRAIN ;
435551     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMFLOWSCORE.sas.
435552    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
435553    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
435554    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
435555    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
435556    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
435557    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
435558    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
435559    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
435560    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
435561    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
435562    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
435563    +LENGTH _WARN_ $4
435564    +      F_DepVar  $ 12
435565    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
435566    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
435567    +
435568    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
435569    +
435570    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
435571    +
435572    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
435573    +
435574    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
435575    +
435576    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
435577    +
435578    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
435579    +
435580    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
435581    +
435582    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
435583    +
435584    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
435585    +
435586    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
435587    +
435588    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
435589    +
435590    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
435591    +
435592    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
435593    +
435594    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
435595    +
435596    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
435597    +
435598    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
435599    +
435600    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
435601    +
435602    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
435603    +
435604    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
435605    +
435606    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
435607    +
435608    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
435609    +
435610    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
435611    +
435612    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
435613    +
435614    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
435615    +
435616    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
435617    +
435618    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
435619    +
435620    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
435621    +
435622    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
435623    +
435624    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
435625    +
435626    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
435627    +
435628    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
435629    +
435630    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
435631    +
435632    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
435633    +
435634    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
435635    +
435636    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
435637    +
435638    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
435639    +
435640    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
435641    +
435642    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
435643    +
435644    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
435645    +
435646    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
435647    +
435648    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
435649    +
435650    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
435651    +
435652    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
435653    +
435654    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
435655    +
435656    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
435657    +
435658    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
435659    +
435660    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
435661    +
435662    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
435663    +
435664    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
435665    +
435666    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
435667    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
435668    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
435669    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
435670    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
435671    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
435672    +end;
MPRINT(EM_DIAGRAM):   end;
435673    +else do;
MPRINT(EM_DIAGRAM):   else do;
435674    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
435675    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
435676    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
435677    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
435678    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
435679    +   end;
MPRINT(EM_DIAGRAM):   end;
435680    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
435681    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
435682    +   end;
MPRINT(EM_DIAGRAM):   end;
435683    +   else do;
MPRINT(EM_DIAGRAM):   else do;
435684    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
435685    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
435686    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
435687    +   end;
MPRINT(EM_DIAGRAM):   end;
435688    +end;
MPRINT(EM_DIAGRAM):   end;
435689    +
435690    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
435691    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
435692    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
435693    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
435694    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
435695    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
435696    +end;
MPRINT(EM_DIAGRAM):   end;
435697    +else do;
MPRINT(EM_DIAGRAM):   else do;
435698    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
435699    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
435700    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
435701    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
435702    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
435703    +   end;
MPRINT(EM_DIAGRAM):   end;
435704    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
435705    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
435706    +   end;
MPRINT(EM_DIAGRAM):   end;
435707    +   else do;
MPRINT(EM_DIAGRAM):   else do;
435708    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
435709    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
435710    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
435711    +   end;
MPRINT(EM_DIAGRAM):   end;
435712    +end;
MPRINT(EM_DIAGRAM):   end;
435713    +
435714    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
435715    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
435716    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
435717    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
435718    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
435719    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
435720    +end;
MPRINT(EM_DIAGRAM):   end;
435721    +else do;
MPRINT(EM_DIAGRAM):   else do;
435722    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
435723    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
435724    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
435725    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
435726    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
435727    +   end;
MPRINT(EM_DIAGRAM):   end;
435728    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
435729    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
435730    +   end;
MPRINT(EM_DIAGRAM):   end;
435731    +   else do;
MPRINT(EM_DIAGRAM):   else do;
435732    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
435733    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
435734    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
435735    +   end;
MPRINT(EM_DIAGRAM):   end;
435736    +end;
MPRINT(EM_DIAGRAM):   end;
435737    +
435738    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
435739    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
435740    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
435741    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
435742    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
435743    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
435744    +end;
MPRINT(EM_DIAGRAM):   end;
435745    +else do;
MPRINT(EM_DIAGRAM):   else do;
435746    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
435747    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
435748    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
435749    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
435750    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
435751    +   end;
MPRINT(EM_DIAGRAM):   end;
435752    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
435753    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
435754    +   end;
MPRINT(EM_DIAGRAM):   end;
435755    +   else do;
MPRINT(EM_DIAGRAM):   else do;
435756    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
435757    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
435758    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
435759    +   end;
MPRINT(EM_DIAGRAM):   end;
435760    +end;
MPRINT(EM_DIAGRAM):   end;
435761    +
435762    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
435763    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
435764    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
435765    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
435766    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
435767    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
435768    +end;
MPRINT(EM_DIAGRAM):   end;
435769    +else do;
MPRINT(EM_DIAGRAM):   else do;
435770    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
435771    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
435772    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
435773    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
435774    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
435775    +   end;
MPRINT(EM_DIAGRAM):   end;
435776    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
435777    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
435778    +   end;
MPRINT(EM_DIAGRAM):   end;
435779    +   else do;
MPRINT(EM_DIAGRAM):   else do;
435780    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
435781    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
435782    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
435783    +   end;
MPRINT(EM_DIAGRAM):   end;
435784    +end;
MPRINT(EM_DIAGRAM):   end;
435785    +
435786    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
435787    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
435788    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
435789    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
435790    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
435791    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
435792    +end;
MPRINT(EM_DIAGRAM):   end;
435793    +else do;
MPRINT(EM_DIAGRAM):   else do;
435794    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
435795    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
435796    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
435797    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
435798    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
435799    +   end;
MPRINT(EM_DIAGRAM):   end;
435800    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
435801    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
435802    +   end;
MPRINT(EM_DIAGRAM):   end;
435803    +   else do;
MPRINT(EM_DIAGRAM):   else do;
435804    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
435805    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
435806    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
435807    +   end;
MPRINT(EM_DIAGRAM):   end;
435808    +end;
MPRINT(EM_DIAGRAM):   end;
435809    +
435810    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
435811    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
435812    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
435813    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
435814    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
435815    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
435816    +end;
MPRINT(EM_DIAGRAM):   end;
435817    +else do;
MPRINT(EM_DIAGRAM):   else do;
435818    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
435819    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
435820    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
435821    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
435822    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
435823    +   end;
MPRINT(EM_DIAGRAM):   end;
435824    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
435825    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
435826    +   end;
MPRINT(EM_DIAGRAM):   end;
435827    +   else do;
MPRINT(EM_DIAGRAM):   else do;
435828    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
435829    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
435830    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
435831    +   end;
MPRINT(EM_DIAGRAM):   end;
435832    +end;
MPRINT(EM_DIAGRAM):   end;
435833    +
435834    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
435835    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
435836    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
435837    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
435838    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
435839    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
435840    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
435841    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
435842    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
435843    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
435844    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
435845    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
435846    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
435847    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
435848    +end;
MPRINT(EM_DIAGRAM):   end;
435849    +else do;
MPRINT(EM_DIAGRAM):   else do;
435850    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
435851    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
435852    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
435853    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
435854    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
435855    +   end;
MPRINT(EM_DIAGRAM):   end;
435856    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
435857    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
435858    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
435859    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
435860    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
435861    +   end;
MPRINT(EM_DIAGRAM):   end;
435862    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
435863    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
435864    +   end;
MPRINT(EM_DIAGRAM):   end;
435865    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
435866    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
435867    +   end;
MPRINT(EM_DIAGRAM):   end;
435868    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
435869    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
435870    +   end;
MPRINT(EM_DIAGRAM):   end;
435871    +   else do;
MPRINT(EM_DIAGRAM):   else do;
435872    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
435873    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
435874    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
435875    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
435876    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
435877    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
435878    +   end;
MPRINT(EM_DIAGRAM):   end;
435879    +end;
MPRINT(EM_DIAGRAM):   end;
435880    +
435881    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
435882    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
435883    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
435884    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
435885    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
435886    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
435887    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
435888    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
435889    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
435890    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
435891    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
435892    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
435893    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
435894    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
435895    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
435896    +end;
MPRINT(EM_DIAGRAM):   end;
435897    +else do;
MPRINT(EM_DIAGRAM):   else do;
435898    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
435899    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
435900    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
435901    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
435902    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
435903    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
435904    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
435905    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
435906    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
435907    +         end;
MPRINT(EM_DIAGRAM):   end;
435908    +         else do;
MPRINT(EM_DIAGRAM):   else do;
435909    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
435910    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
435911    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
435912    +            end;
MPRINT(EM_DIAGRAM):   end;
435913    +         end;
MPRINT(EM_DIAGRAM):   end;
435914    +      end;
MPRINT(EM_DIAGRAM):   end;
435915    +      else do;
MPRINT(EM_DIAGRAM):   else do;
435916    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
435917    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
435918    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
435919    +         end;
MPRINT(EM_DIAGRAM):   end;
435920    +      end;
MPRINT(EM_DIAGRAM):   end;
435921    +   end;
MPRINT(EM_DIAGRAM):   end;
435922    +   else do;
MPRINT(EM_DIAGRAM):   else do;
435923    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
435924    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
435925    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
435926    +      end;
MPRINT(EM_DIAGRAM):   end;
435927    +      else do;
MPRINT(EM_DIAGRAM):   else do;
435928    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
435929    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
435930    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
435931    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
435932    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
435933    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
435934    +         end;
MPRINT(EM_DIAGRAM):   end;
435935    +      end;
MPRINT(EM_DIAGRAM):   end;
435936    +   end;
MPRINT(EM_DIAGRAM):   end;
435937    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
435938    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
435939    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
435940    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
435941    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
435942    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
435943    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
435944    +   end;
MPRINT(EM_DIAGRAM):   end;
435945    +end;
MPRINT(EM_DIAGRAM):   end;
435946    +
435947    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
435948    +*** Checking missing input Interval
435949    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
435950    +
435951    +IF NMISS(
435952    +   AcceptedCmpTotal ,
435953    +   Age ,
435954    +   Frq ,
435955    +   Income ,
435956    +   Kidhome ,
435957    +   Mnt ,
435958    +   MntFishProducts ,
435959    +   MntFruits ,
435960    +   MntGoldProds ,
435961    +   MntMeatProducts ,
435962    +   MntSweetProducts ,
435963    +   MntWines ,
435964    +   MonthsAsCustomer ,
435965    +   NumCatalogPurchases ,
435966    +   NumDealsPurchases ,
435967    +   NumDistPurchases ,
435968    +   NumStorePurchases ,
435969    +   NumWebPurchases ,
435970    +   NumWebVisitsMonth ,
435971    +   RFMstat ,
435972    +   RMntFrq ,
435973    +   Recency ,
435974    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
435975    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
435976    +
435977    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
435978    +END;
MPRINT(EM_DIAGRAM):   END;
435979    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
435980    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
435981    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
435982    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
435983    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
435984    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
435985    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
435986    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
435987    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
435988    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
435989    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
435990    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
435991    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
435992    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
435993    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
435994    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
435995    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
435996    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
435997    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
435998    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
435999    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
436000    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
436001    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
436002    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
436003    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
436004    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
436005    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
436006    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
436007    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
436008    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
436009    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
436010    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
436011    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
436012    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
436013    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
436014    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
436015    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
436016    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
436017    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
436018    +END;
MPRINT(EM_DIAGRAM):   END;
436019    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
436020    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
436021    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
436022    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
436023    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
436024    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
436025    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
436026    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
436027    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
436028    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
436029    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
436030    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
436031    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
436032    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
436033    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
436034    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
436035    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
436036    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
436037    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
436038    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
436039    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
436040    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
436041    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
436042    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
436043    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
436044    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
436045    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
436046    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
436047    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
436048    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
436049    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
436050    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
436051    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
436052    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
436053    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
436054    +   ELSE S_NumCatalogPurchases
436055    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
436056    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
436057    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
436058    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
436059    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
436060    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
436061    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
436062    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
436063    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
436064    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
436065    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
436066    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
436067    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
436068    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
436069    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
436070    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
436071    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
436072    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
436073    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
436074    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
436075    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
436076    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
436077    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
436078    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
436079    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
436080    +END;
MPRINT(EM_DIAGRAM):   END;
436081    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
436082    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
436083    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
436084    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
436085    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
436086    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
436087    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
436088    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
436089    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
436090    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
436091    +   H11  =    -0.72488278382149 * S_AcceptedCmpTotal  +    -0.08876410529608 *
436092    +        S_Age  +     0.17754731745808 * S_Frq  +    -1.23662359142973 *
436093    +        S_Income  +     0.07820904288043 * S_Kidhome
436094    +          +     0.09164194039404 * S_Mnt  +     0.00169726430295 *
436095    +        S_MntFishProducts  +     0.08787980644898 * S_MntFruits
436096    +          +     -0.0420056461204 * S_MntGoldProds  +    -0.81054492991264 *
436097    +        S_MntMeatProducts  +     0.26453743798812 * S_MntSweetProducts
436098    +          +     0.87316917599734 * S_MntWines  +     -0.1156870103679 *
436099    +        S_MonthsAsCustomer  +    -0.89585916703653 * S_NumCatalogPurchases
436100    +          +    -0.44226169338822 * S_NumDealsPurchases
436101    +          +     0.10904937358153 * S_NumDistPurchases
436102    +          +     0.85965494396899 * S_NumStorePurchases
436103    +          +     0.96874262276823 * S_NumWebPurchases
436104    +          +    -1.65059126031172 * S_NumWebVisitsMonth
436105    +          +    -0.23020354942632 * S_RFMstat  +      0.4911559239905 *
436106    +        S_RMntFrq  +     1.26381685754541 * S_Recency
436107    +          +     0.57424541808437 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.72488278382149 * S_AcceptedCmpTotal + -0.08876410529608 * S_Age 
+ 0.17754731745808 * S_Frq + -1.23662359142973 * S_Income + 0.07820904288043 * S_Kidhome + 
0.09164194039404 * S_Mnt + 0.00169726430295 * S_MntFishProducts + 0.08787980644898 * 
S_MntFruits + -0.0420056461204 * S_MntGoldProds + -0.81054492991264 * S_MntMeatProducts + 
0.26453743798812 * S_MntSweetProducts + 0.87316917599734 * S_MntWines + -0.1156870103679 * 
S_MonthsAsCustomer + -0.89585916703653 * S_NumCatalogPurchases + -0.44226169338822 * 
S_NumDealsPurchases + 0.10904937358153 * S_NumDistPurchases + 0.85965494396899 * 
S_NumStorePurchases + 0.96874262276823 * S_NumWebPurchases + -1.65059126031172 * 
S_NumWebVisitsMonth + -0.23020354942632 * S_RFMstat + 0.4911559239905 * S_RMntFrq + 
1.26381685754541 * S_Recency + 0.57424541808437 * S_Teenhome ;
436108    +   H12  =    -0.06242833364988 * S_AcceptedCmpTotal  +     0.17162996069984 *
436109    +        S_Age  +     0.23397947005047 * S_Frq  +     0.03838049824533 *
436110    +        S_Income  +     0.49350393223739 * S_Kidhome
436111    +          +     0.08493308955856 * S_Mnt  +     0.06641355586315 *
436112    +        S_MntFishProducts  +     0.13796996882884 * S_MntFruits
436113    +          +     0.29997327116644 * S_MntGoldProds  +     0.15434247119193 *
436114    +        S_MntMeatProducts  +     0.11282870587489 * S_MntSweetProducts
436115    +          +   -8.265968493305E-6 * S_MntWines  +     0.50847138279991 *
436116    +        S_MonthsAsCustomer  +    -0.36453629467324 * S_NumCatalogPurchases
436117    +          +     0.06978864254959 * S_NumDealsPurchases
436118    +          +    -0.12599065703384 * S_NumDistPurchases
436119    +          +      0.2144247508744 * S_NumStorePurchases
436120    +          +    -0.02658304825149 * S_NumWebPurchases
436121    +          +     0.19921493609147 * S_NumWebVisitsMonth
436122    +          +    -0.00068400425323 * S_RFMstat  +     0.12958872503477 *
436123    +        S_RMntFrq  +     0.22604179472269 * S_Recency
436124    +          +    -0.00024748416541 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.06242833364988 * S_AcceptedCmpTotal + 0.17162996069984 * S_Age 
+ 0.23397947005047 * S_Frq + 0.03838049824533 * S_Income + 0.49350393223739 * S_Kidhome + 
0.08493308955856 * S_Mnt + 0.06641355586315 * S_MntFishProducts + 0.13796996882884 * 
S_MntFruits + 0.29997327116644 * S_MntGoldProds + 0.15434247119193 * S_MntMeatProducts + 
0.11282870587489 * S_MntSweetProducts + -8.265968493305E-6 * S_MntWines + 0.50847138279991 * 
S_MonthsAsCustomer + -0.36453629467324 * S_NumCatalogPurchases + 0.06978864254959 * 
S_NumDealsPurchases + -0.12599065703384 * S_NumDistPurchases + 0.2144247508744 * 
S_NumStorePurchases + -0.02658304825149 * S_NumWebPurchases + 0.19921493609147 * 
S_NumWebVisitsMonth + -0.00068400425323 * S_RFMstat + 0.12958872503477 * S_RMntFrq + 
0.22604179472269 * S_Recency + -0.00024748416541 * S_Teenhome ;
436125    +   H13  =    -0.14904002464294 * S_AcceptedCmpTotal  +      0.0196407171011 *
436126    +        S_Age  +    -0.38130761092647 * S_Frq  +    -0.25514550161418 *
436127    +        S_Income  +    -0.54955591901458 * S_Kidhome
436128    +          +    -0.20064604720551 * S_Mnt  +    -0.01120159869349 *
436129    +        S_MntFishProducts  +    -0.28438340072693 * S_MntFruits
436130    +          +      -0.401775646063 * S_MntGoldProds  +    -0.14664321081034 *
436131    +        S_MntMeatProducts  +     0.09485876734388 * S_MntSweetProducts
436132    +          +     0.11019033056419 * S_MntWines  +    -0.11590485042345 *
436133    +        S_MonthsAsCustomer  +    -0.41095899807576 * S_NumCatalogPurchases
436134    +          +    -0.80287489735524 * S_NumDealsPurchases
436135    +          +    -0.44815413969261 * S_NumDistPurchases
436136    +          +     0.01081559808314 * S_NumStorePurchases
436137    +          +    -0.27447334038648 * S_NumWebPurchases
436138    +          +      0.1182881539804 * S_NumWebVisitsMonth
436139    +          +    -0.31607576702749 * S_RFMstat  +     0.02351098110071 *
436140    +        S_RMntFrq  +    -0.05679667432729 * S_Recency
436141    +          +    -0.35363001486382 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.14904002464294 * S_AcceptedCmpTotal + 0.0196407171011 * S_Age + 
-0.38130761092647 * S_Frq + -0.25514550161418 * S_Income + -0.54955591901458 * S_Kidhome + 
-0.20064604720551 * S_Mnt + -0.01120159869349 * S_MntFishProducts + -0.28438340072693 * 
S_MntFruits + -0.401775646063 * S_MntGoldProds + -0.14664321081034 * S_MntMeatProducts + 
0.09485876734388 * S_MntSweetProducts + 0.11019033056419 * S_MntWines + -0.11590485042345 * 
S_MonthsAsCustomer + -0.41095899807576 * S_NumCatalogPurchases + -0.80287489735524 * 
S_NumDealsPurchases + -0.44815413969261 * S_NumDistPurchases + 0.01081559808314 * 
S_NumStorePurchases + -0.27447334038648 * S_NumWebPurchases + 0.1182881539804 * 
S_NumWebVisitsMonth + -0.31607576702749 * S_RFMstat + 0.02351098110071 * S_RMntFrq + 
-0.05679667432729 * S_Recency + -0.35363001486382 * S_Teenhome ;
436142    +   H14  =     0.36193112751246 * S_AcceptedCmpTotal  +    -0.09713774522438 *
436143    +        S_Age  +    -0.34167413708614 * S_Frq  +    -0.31867444373143 *
436144    +        S_Income  +     0.01946696600265 * S_Kidhome
436145    +          +     0.42765015920152 * S_Mnt  +    -0.40290796700834 *
436146    +        S_MntFishProducts  +    -0.10716764177415 * S_MntFruits
436147    +          +     0.15797682916287 * S_MntGoldProds  +      1.3190145500044 *
436148    +        S_MntMeatProducts  +     0.36757292603754 * S_MntSweetProducts
436149    +          +    -0.13810540469151 * S_MntWines  +    -0.06721864190223 *
436150    +        S_MonthsAsCustomer  +     0.61424075957518 * S_NumCatalogPurchases
436151    +          +     0.43311138877196 * S_NumDealsPurchases
436152    +          +     0.18502408909322 * S_NumDistPurchases
436153    +          +    -0.24252633187618 * S_NumStorePurchases
436154    +          +      -0.336642179836 * S_NumWebPurchases
436155    +          +     0.81771723742428 * S_NumWebVisitsMonth
436156    +          +    -0.05424233789327 * S_RFMstat  +     0.11603798180639 *
436157    +        S_RMntFrq  +      -1.497745460265 * S_Recency
436158    +          +    -0.16644420630578 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.36193112751246 * S_AcceptedCmpTotal + -0.09713774522438 * S_Age 
+ -0.34167413708614 * S_Frq + -0.31867444373143 * S_Income + 0.01946696600265 * S_Kidhome + 
0.42765015920152 * S_Mnt + -0.40290796700834 * S_MntFishProducts + -0.10716764177415 * 
S_MntFruits + 0.15797682916287 * S_MntGoldProds + 1.3190145500044 * S_MntMeatProducts + 
0.36757292603754 * S_MntSweetProducts + -0.13810540469151 * S_MntWines + -0.06721864190223 * 
S_MonthsAsCustomer + 0.61424075957518 * S_NumCatalogPurchases + 0.43311138877196 * 
S_NumDealsPurchases + 0.18502408909322 * S_NumDistPurchases + -0.24252633187618 * 
S_NumStorePurchases + -0.336642179836 * S_NumWebPurchases + 0.81771723742428 * 
S_NumWebVisitsMonth + -0.05424233789327 * S_RFMstat + 0.11603798180639 * S_RMntFrq + 
-1.497745460265 * S_Recency + -0.16644420630578 * S_Teenhome ;
436159    +   H11  = H11  +     0.07313834221819 * AcceptedCmp10
436160    +          +     0.32717092230961 * AcceptedCmp20  +     0.48102262014799 *
436161    +        AcceptedCmp30  +     0.17547408877472 * AcceptedCmp40
436162    +          +     0.25746983749355 * AcceptedCmp50  +    -0.28773497540647 *
436163    +        Complain0  +    -0.18629685324982 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.07313834221819 * AcceptedCmp10 + 0.32717092230961 * 
AcceptedCmp20 + 0.48102262014799 * AcceptedCmp30 + 0.17547408877472 * AcceptedCmp40 + 
0.25746983749355 * AcceptedCmp50 + -0.28773497540647 * Complain0 + -0.18629685324982 * 
HigherEducationBinary0 ;
436164    +   H12  = H12  +    -0.17623954696104 * AcceptedCmp10
436165    +          +     0.09694493862829 * AcceptedCmp20  +     0.11024646409489 *
436166    +        AcceptedCmp30  +     0.13769886685196 * AcceptedCmp40
436167    +          +    -0.14277658423319 * AcceptedCmp50  +     0.07414319423679 *
436168    +        Complain0  +    -0.05210282033436 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.17623954696104 * AcceptedCmp10 + 0.09694493862829 * 
AcceptedCmp20 + 0.11024646409489 * AcceptedCmp30 + 0.13769886685196 * AcceptedCmp40 + 
-0.14277658423319 * AcceptedCmp50 + 0.07414319423679 * Complain0 + -0.05210282033436 * 
HigherEducationBinary0 ;
436169    +   H13  = H13  +     0.00232895100278 * AcceptedCmp10
436170    +          +    -0.17245793714966 * AcceptedCmp20  +     0.22300285586606 *
436171    +        AcceptedCmp30  +     0.02667629114587 * AcceptedCmp40
436172    +          +    -0.08909727736989 * AcceptedCmp50  +     0.33169373470586 *
436173    +        Complain0  +     0.30446475173693 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00232895100278 * AcceptedCmp10 + -0.17245793714966 * 
AcceptedCmp20 + 0.22300285586606 * AcceptedCmp30 + 0.02667629114587 * AcceptedCmp40 + 
-0.08909727736989 * AcceptedCmp50 + 0.33169373470586 * Complain0 + 0.30446475173693 * 
HigherEducationBinary0 ;
436174    +   H14  = H14  +    -0.47820584762363 * AcceptedCmp10
436175    +          +     0.03654006761759 * AcceptedCmp20  +    -0.20965167013319 *
436176    +        AcceptedCmp30  +    -0.13396151443119 * AcceptedCmp40
436177    +          +    -1.12947244187955 * AcceptedCmp50  +     0.01007973582648 *
436178    +        Complain0  +    -0.22975952148681 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.47820584762363 * AcceptedCmp10 + 0.03654006761759 * 
AcceptedCmp20 + -0.20965167013319 * AcceptedCmp30 + -0.13396151443119 * AcceptedCmp40 + 
-1.12947244187955 * AcceptedCmp50 + 0.01007973582648 * Complain0 + -0.22975952148681 * 
HigherEducationBinary0 ;
436179    +   H11  = H11  +    -0.45165482916552 * Education2n_Cycle
436180    +          +     0.67730616273788 * EducationBasic  +    -0.51516495083024 *
436181    +        EducationGraduation  +     0.43154054999649 * EducationMaster
436182    +          +    -0.91598027963019 * Marital_StatusDivorced
436183    +          +     0.99081987547846 * Marital_StatusMarried
436184    +          +    -1.39858900243332 * Marital_StatusSingle
436185    +          +       1.347741143103 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.45165482916552 * Education2n_Cycle + 0.67730616273788 * 
EducationBasic + -0.51516495083024 * EducationGraduation + 0.43154054999649 * EducationMaster 
+ -0.91598027963019 * Marital_StatusDivorced + 0.99081987547846 * Marital_StatusMarried + 
-1.39858900243332 * Marital_StatusSingle + 1.347741143103 * Marital_StatusTogether ;
436186    +   H12  = H12  +    -0.00189420846473 * Education2n_Cycle
436187    +          +    -0.20493655640888 * EducationBasic  +     0.02037300537072 *
436188    +        EducationGraduation  +     0.01942778395804 * EducationMaster
436189    +          +     0.04148596239454 * Marital_StatusDivorced
436190    +          +     0.13700464357088 * Marital_StatusMarried
436191    +          +     0.26244943889586 * Marital_StatusSingle
436192    +          +    -0.01959556613989 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.00189420846473 * Education2n_Cycle + -0.20493655640888 * 
EducationBasic + 0.02037300537072 * EducationGraduation + 0.01942778395804 * EducationMaster + 
0.04148596239454 * Marital_StatusDivorced + 0.13700464357088 * Marital_StatusMarried + 
0.26244943889586 * Marital_StatusSingle + -0.01959556613989 * Marital_StatusTogether ;
436193    +   H13  = H13  +    -0.08424648072756 * Education2n_Cycle
436194    +          +    -0.03519553916539 * EducationBasic  +    -0.14733534752496 *
436195    +        EducationGraduation  +    -0.13923731176653 * EducationMaster
436196    +          +     0.21225188119775 * Marital_StatusDivorced
436197    +          +    -0.78447428711532 * Marital_StatusMarried
436198    +          +     0.40081668287631 * Marital_StatusSingle
436199    +          +    -0.47768802901346 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.08424648072756 * Education2n_Cycle + -0.03519553916539 * 
EducationBasic + -0.14733534752496 * EducationGraduation + -0.13923731176653 * EducationMaster 
+ 0.21225188119775 * Marital_StatusDivorced + -0.78447428711532 * Marital_StatusMarried + 
0.40081668287631 * Marital_StatusSingle + -0.47768802901346 * Marital_StatusTogether ;
436200    +   H14  = H14  +    -0.13077789963596 * Education2n_Cycle
436201    +          +    -0.04224059272723 * EducationBasic  +    -0.26064134779202 *
436202    +        EducationGraduation  +     0.26637203274122 * EducationMaster
436203    +          +    -0.35332505424842 * Marital_StatusDivorced
436204    +          +    -0.23139833132219 * Marital_StatusMarried
436205    +          +    -0.06980598315267 * Marital_StatusSingle
436206    +          +     0.08689807740885 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.13077789963596 * Education2n_Cycle + -0.04224059272723 * 
EducationBasic + -0.26064134779202 * EducationGraduation + 0.26637203274122 * EducationMaster 
+ -0.35332505424842 * Marital_StatusDivorced + -0.23139833132219 * Marital_StatusMarried + 
-0.06980598315267 * Marital_StatusSingle + 0.08689807740885 * Marital_StatusTogether ;
436207    +   H11  =    -0.03502284610962 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.03502284610962 + H11 ;
436208    +   H12  =    -1.33013445020225 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -1.33013445020225 + H12 ;
436209    +   H13  =    -1.70772581209165 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.70772581209165 + H13 ;
436210    +   H14  =    -0.77238092213725 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.77238092213725 + H14 ;
436211    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
436212    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
436213    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
436214    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
436215    +END;
MPRINT(EM_DIAGRAM):   END;
436216    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
436217    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
436218    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
436219    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
436220    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
436221    +END;
MPRINT(EM_DIAGRAM):   END;
436222    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
436223    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
436224    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
436225    +
436226    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
436227    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
436228    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
436229    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
436230    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
436231    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
436232    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
436233    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
436234    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
436235    +end;
MPRINT(EM_DIAGRAM):   end;
436236    +else do;
MPRINT(EM_DIAGRAM):   else do;
436237    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
436238    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
436239    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
436240    +   end;
MPRINT(EM_DIAGRAM):   end;
436241    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
436242    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
436243    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
436244    +   end;
MPRINT(EM_DIAGRAM):   end;
436245    +   else do;
MPRINT(EM_DIAGRAM):   else do;
436246    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
436247    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
436248    +   end;
MPRINT(EM_DIAGRAM):   end;
436249    +end;
MPRINT(EM_DIAGRAM):   end;
436250    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
436251    +   P_DepVar1  =    -4.10527116293157 * H11  +    -0.50563319025675 * H12
436252    +          +    -1.37794943679966 * H13  +     3.57492661052202 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.10527116293157 * H11 + -0.50563319025675 * H12 + 
-1.37794943679966 * H13 + 3.57492661052202 * H14 ;
436253    +   P_DepVar1  =     -2.7093416265681 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.7093416265681 + P_DepVar1 ;
436254    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
436255    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
436256    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
436257    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
436258    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
436259    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
436260    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
436261    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
436262    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
436263    +END;
MPRINT(EM_DIAGRAM):   END;
436264    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
436265    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
436266    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
436267    +END;
MPRINT(EM_DIAGRAM):   END;
436268    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
436269    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
436270    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
436271    +END;
MPRINT(EM_DIAGRAM):   END;
436272    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
436273    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
436274    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
436275    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
436276    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
436277    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
436278    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
436279    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
436280    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
436281    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
436282    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
436283    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
436284    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
436285    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
436286    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
436287    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
436288    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
436289    +END;
MPRINT(EM_DIAGRAM):   END;
436290    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
436291    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
436292    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
436293    +drop
436294    +H11
436295    +H12
436296    +H13
436297    +H14
436298    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
436299    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
436300     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL4_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
436301     quit;
436302     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
436303     filename emflow
436303   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural4: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
436304     *------------------------------------------------------------*;
436305     * Neural4: Scoring VALIDATE data;
436306     *------------------------------------------------------------*;
436307     data EMWS8.Neural4_VALIDATE
436308     / view=EMWS8.Neural4_VALIDATE
436309     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural4_VALIDATE / view=EMWS8.Neural4_VALIDATE ;
436310     set EMWS8.Meta_VALIDATE
436311     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_VALIDATE ;
436312     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMFLOWSCORE.sas.
436313    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
436314    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
436315    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
436316    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
436317    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
436318    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
436319    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
436320    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
436321    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
436322    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
436323    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
436324    +LENGTH _WARN_ $4
436325    +      F_DepVar  $ 12
436326    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
436327    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
436328    +
436329    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
436330    +
436331    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
436332    +
436333    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
436334    +
436335    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
436336    +
436337    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
436338    +
436339    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
436340    +
436341    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
436342    +
436343    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
436344    +
436345    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
436346    +
436347    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
436348    +
436349    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
436350    +
436351    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
436352    +
436353    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
436354    +
436355    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
436356    +
436357    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
436358    +
436359    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
436360    +
436361    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
436362    +
436363    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
436364    +
436365    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
436366    +
436367    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
436368    +
436369    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
436370    +
436371    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
436372    +
436373    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
436374    +
436375    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
436376    +
436377    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
436378    +
436379    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
436380    +
436381    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
436382    +
436383    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
436384    +
436385    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
436386    +
436387    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
436388    +
436389    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
436390    +
436391    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
436392    +
436393    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
436394    +
436395    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
436396    +
436397    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
436398    +
436399    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
436400    +
436401    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
436402    +
436403    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
436404    +
436405    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
436406    +
436407    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
436408    +
436409    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
436410    +
436411    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
436412    +
436413    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
436414    +
436415    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
436416    +
436417    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
436418    +
436419    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
436420    +
436421    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
436422    +
436423    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
436424    +
436425    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
436426    +
436427    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
436428    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
436429    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
436430    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
436431    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
436432    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
436433    +end;
MPRINT(EM_DIAGRAM):   end;
436434    +else do;
MPRINT(EM_DIAGRAM):   else do;
436435    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
436436    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
436437    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
436438    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
436439    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
436440    +   end;
MPRINT(EM_DIAGRAM):   end;
436441    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
436442    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
436443    +   end;
MPRINT(EM_DIAGRAM):   end;
436444    +   else do;
MPRINT(EM_DIAGRAM):   else do;
436445    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
436446    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
436447    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
436448    +   end;
MPRINT(EM_DIAGRAM):   end;
436449    +end;
MPRINT(EM_DIAGRAM):   end;
436450    +
436451    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
436452    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
436453    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
436454    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
436455    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
436456    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
436457    +end;
MPRINT(EM_DIAGRAM):   end;
436458    +else do;
MPRINT(EM_DIAGRAM):   else do;
436459    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
436460    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
436461    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
436462    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
436463    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
436464    +   end;
MPRINT(EM_DIAGRAM):   end;
436465    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
436466    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
436467    +   end;
MPRINT(EM_DIAGRAM):   end;
436468    +   else do;
MPRINT(EM_DIAGRAM):   else do;
436469    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
436470    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
436471    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
436472    +   end;
MPRINT(EM_DIAGRAM):   end;
436473    +end;
MPRINT(EM_DIAGRAM):   end;
436474    +
436475    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
436476    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
436477    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
436478    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
436479    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
436480    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
436481    +end;
MPRINT(EM_DIAGRAM):   end;
436482    +else do;
MPRINT(EM_DIAGRAM):   else do;
436483    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
436484    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
436485    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
436486    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
436487    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
436488    +   end;
MPRINT(EM_DIAGRAM):   end;
436489    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
436490    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
436491    +   end;
MPRINT(EM_DIAGRAM):   end;
436492    +   else do;
MPRINT(EM_DIAGRAM):   else do;
436493    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
436494    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
436495    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
436496    +   end;
MPRINT(EM_DIAGRAM):   end;
436497    +end;
MPRINT(EM_DIAGRAM):   end;
436498    +
436499    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
436500    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
436501    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
436502    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
436503    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
436504    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
436505    +end;
MPRINT(EM_DIAGRAM):   end;
436506    +else do;
MPRINT(EM_DIAGRAM):   else do;
436507    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
436508    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
436509    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
436510    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
436511    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
436512    +   end;
MPRINT(EM_DIAGRAM):   end;
436513    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
436514    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
436515    +   end;
MPRINT(EM_DIAGRAM):   end;
436516    +   else do;
MPRINT(EM_DIAGRAM):   else do;
436517    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
436518    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
436519    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
436520    +   end;
MPRINT(EM_DIAGRAM):   end;
436521    +end;
MPRINT(EM_DIAGRAM):   end;
436522    +
436523    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
436524    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
436525    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
436526    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
436527    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
436528    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
436529    +end;
MPRINT(EM_DIAGRAM):   end;
436530    +else do;
MPRINT(EM_DIAGRAM):   else do;
436531    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
436532    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
436533    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
436534    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
436535    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
436536    +   end;
MPRINT(EM_DIAGRAM):   end;
436537    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
436538    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
436539    +   end;
MPRINT(EM_DIAGRAM):   end;
436540    +   else do;
MPRINT(EM_DIAGRAM):   else do;
436541    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
436542    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
436543    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
436544    +   end;
MPRINT(EM_DIAGRAM):   end;
436545    +end;
MPRINT(EM_DIAGRAM):   end;
436546    +
436547    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
436548    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
436549    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
436550    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
436551    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
436552    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
436553    +end;
MPRINT(EM_DIAGRAM):   end;
436554    +else do;
MPRINT(EM_DIAGRAM):   else do;
436555    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
436556    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
436557    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
436558    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
436559    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
436560    +   end;
MPRINT(EM_DIAGRAM):   end;
436561    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
436562    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
436563    +   end;
MPRINT(EM_DIAGRAM):   end;
436564    +   else do;
MPRINT(EM_DIAGRAM):   else do;
436565    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
436566    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
436567    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
436568    +   end;
MPRINT(EM_DIAGRAM):   end;
436569    +end;
MPRINT(EM_DIAGRAM):   end;
436570    +
436571    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
436572    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
436573    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
436574    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
436575    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
436576    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
436577    +end;
MPRINT(EM_DIAGRAM):   end;
436578    +else do;
MPRINT(EM_DIAGRAM):   else do;
436579    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
436580    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
436581    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
436582    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
436583    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
436584    +   end;
MPRINT(EM_DIAGRAM):   end;
436585    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
436586    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
436587    +   end;
MPRINT(EM_DIAGRAM):   end;
436588    +   else do;
MPRINT(EM_DIAGRAM):   else do;
436589    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
436590    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
436591    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
436592    +   end;
MPRINT(EM_DIAGRAM):   end;
436593    +end;
MPRINT(EM_DIAGRAM):   end;
436594    +
436595    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
436596    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
436597    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
436598    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
436599    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
436600    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
436601    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
436602    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
436603    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
436604    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
436605    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
436606    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
436607    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
436608    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
436609    +end;
MPRINT(EM_DIAGRAM):   end;
436610    +else do;
MPRINT(EM_DIAGRAM):   else do;
436611    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
436612    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
436613    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
436614    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
436615    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
436616    +   end;
MPRINT(EM_DIAGRAM):   end;
436617    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
436618    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
436619    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
436620    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
436621    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
436622    +   end;
MPRINT(EM_DIAGRAM):   end;
436623    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
436624    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
436625    +   end;
MPRINT(EM_DIAGRAM):   end;
436626    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
436627    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
436628    +   end;
MPRINT(EM_DIAGRAM):   end;
436629    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
436630    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
436631    +   end;
MPRINT(EM_DIAGRAM):   end;
436632    +   else do;
MPRINT(EM_DIAGRAM):   else do;
436633    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
436634    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
436635    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
436636    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
436637    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
436638    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
436639    +   end;
MPRINT(EM_DIAGRAM):   end;
436640    +end;
MPRINT(EM_DIAGRAM):   end;
436641    +
436642    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
436643    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
436644    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
436645    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
436646    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
436647    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
436648    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
436649    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
436650    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
436651    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
436652    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
436653    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
436654    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
436655    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
436656    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
436657    +end;
MPRINT(EM_DIAGRAM):   end;
436658    +else do;
MPRINT(EM_DIAGRAM):   else do;
436659    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
436660    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
436661    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
436662    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
436663    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
436664    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
436665    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
436666    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
436667    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
436668    +         end;
MPRINT(EM_DIAGRAM):   end;
436669    +         else do;
MPRINT(EM_DIAGRAM):   else do;
436670    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
436671    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
436672    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
436673    +            end;
MPRINT(EM_DIAGRAM):   end;
436674    +         end;
MPRINT(EM_DIAGRAM):   end;
436675    +      end;
MPRINT(EM_DIAGRAM):   end;
436676    +      else do;
MPRINT(EM_DIAGRAM):   else do;
436677    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
436678    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
436679    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
436680    +         end;
MPRINT(EM_DIAGRAM):   end;
436681    +      end;
MPRINT(EM_DIAGRAM):   end;
436682    +   end;
MPRINT(EM_DIAGRAM):   end;
436683    +   else do;
MPRINT(EM_DIAGRAM):   else do;
436684    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
436685    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
436686    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
436687    +      end;
MPRINT(EM_DIAGRAM):   end;
436688    +      else do;
MPRINT(EM_DIAGRAM):   else do;
436689    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
436690    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
436691    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
436692    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
436693    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
436694    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
436695    +         end;
MPRINT(EM_DIAGRAM):   end;
436696    +      end;
MPRINT(EM_DIAGRAM):   end;
436697    +   end;
MPRINT(EM_DIAGRAM):   end;
436698    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
436699    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
436700    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
436701    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
436702    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
436703    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
436704    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
436705    +   end;
MPRINT(EM_DIAGRAM):   end;
436706    +end;
MPRINT(EM_DIAGRAM):   end;
436707    +
436708    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
436709    +*** Checking missing input Interval
436710    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
436711    +
436712    +IF NMISS(
436713    +   AcceptedCmpTotal ,
436714    +   Age ,
436715    +   Frq ,
436716    +   Income ,
436717    +   Kidhome ,
436718    +   Mnt ,
436719    +   MntFishProducts ,
436720    +   MntFruits ,
436721    +   MntGoldProds ,
436722    +   MntMeatProducts ,
436723    +   MntSweetProducts ,
436724    +   MntWines ,
436725    +   MonthsAsCustomer ,
436726    +   NumCatalogPurchases ,
436727    +   NumDealsPurchases ,
436728    +   NumDistPurchases ,
436729    +   NumStorePurchases ,
436730    +   NumWebPurchases ,
436731    +   NumWebVisitsMonth ,
436732    +   RFMstat ,
436733    +   RMntFrq ,
436734    +   Recency ,
436735    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
436736    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
436737    +
436738    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
436739    +END;
MPRINT(EM_DIAGRAM):   END;
436740    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
436741    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
436742    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
436743    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
436744    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
436745    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
436746    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
436747    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
436748    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
436749    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
436750    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
436751    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
436752    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
436753    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
436754    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
436755    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
436756    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
436757    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
436758    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
436759    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
436760    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
436761    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
436762    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
436763    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
436764    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
436765    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
436766    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
436767    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
436768    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
436769    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
436770    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
436771    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
436772    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
436773    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
436774    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
436775    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
436776    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
436777    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
436778    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
436779    +END;
MPRINT(EM_DIAGRAM):   END;
436780    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
436781    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
436782    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
436783    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
436784    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
436785    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
436786    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
436787    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
436788    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
436789    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
436790    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
436791    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
436792    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
436793    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
436794    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
436795    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
436796    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
436797    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
436798    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
436799    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
436800    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
436801    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
436802    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
436803    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
436804    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
436805    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
436806    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
436807    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
436808    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
436809    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
436810    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
436811    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
436812    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
436813    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
436814    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
436815    +   ELSE S_NumCatalogPurchases
436816    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
436817    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
436818    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
436819    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
436820    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
436821    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
436822    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
436823    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
436824    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
436825    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
436826    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
436827    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
436828    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
436829    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
436830    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
436831    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
436832    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
436833    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
436834    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
436835    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
436836    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
436837    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
436838    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
436839    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
436840    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
436841    +END;
MPRINT(EM_DIAGRAM):   END;
436842    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
436843    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
436844    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
436845    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
436846    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
436847    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
436848    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
436849    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
436850    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
436851    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
436852    +   H11  =    -0.72488278382149 * S_AcceptedCmpTotal  +    -0.08876410529608 *
436853    +        S_Age  +     0.17754731745808 * S_Frq  +    -1.23662359142973 *
436854    +        S_Income  +     0.07820904288043 * S_Kidhome
436855    +          +     0.09164194039404 * S_Mnt  +     0.00169726430295 *
436856    +        S_MntFishProducts  +     0.08787980644898 * S_MntFruits
436857    +          +     -0.0420056461204 * S_MntGoldProds  +    -0.81054492991264 *
436858    +        S_MntMeatProducts  +     0.26453743798812 * S_MntSweetProducts
436859    +          +     0.87316917599734 * S_MntWines  +     -0.1156870103679 *
436860    +        S_MonthsAsCustomer  +    -0.89585916703653 * S_NumCatalogPurchases
436861    +          +    -0.44226169338822 * S_NumDealsPurchases
436862    +          +     0.10904937358153 * S_NumDistPurchases
436863    +          +     0.85965494396899 * S_NumStorePurchases
436864    +          +     0.96874262276823 * S_NumWebPurchases
436865    +          +    -1.65059126031172 * S_NumWebVisitsMonth
436866    +          +    -0.23020354942632 * S_RFMstat  +      0.4911559239905 *
436867    +        S_RMntFrq  +     1.26381685754541 * S_Recency
436868    +          +     0.57424541808437 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.72488278382149 * S_AcceptedCmpTotal + -0.08876410529608 * S_Age 
+ 0.17754731745808 * S_Frq + -1.23662359142973 * S_Income + 0.07820904288043 * S_Kidhome + 
0.09164194039404 * S_Mnt + 0.00169726430295 * S_MntFishProducts + 0.08787980644898 * 
S_MntFruits + -0.0420056461204 * S_MntGoldProds + -0.81054492991264 * S_MntMeatProducts + 
0.26453743798812 * S_MntSweetProducts + 0.87316917599734 * S_MntWines + -0.1156870103679 * 
S_MonthsAsCustomer + -0.89585916703653 * S_NumCatalogPurchases + -0.44226169338822 * 
S_NumDealsPurchases + 0.10904937358153 * S_NumDistPurchases + 0.85965494396899 * 
S_NumStorePurchases + 0.96874262276823 * S_NumWebPurchases + -1.65059126031172 * 
S_NumWebVisitsMonth + -0.23020354942632 * S_RFMstat + 0.4911559239905 * S_RMntFrq + 
1.26381685754541 * S_Recency + 0.57424541808437 * S_Teenhome ;
436869    +   H12  =    -0.06242833364988 * S_AcceptedCmpTotal  +     0.17162996069984 *
436870    +        S_Age  +     0.23397947005047 * S_Frq  +     0.03838049824533 *
436871    +        S_Income  +     0.49350393223739 * S_Kidhome
436872    +          +     0.08493308955856 * S_Mnt  +     0.06641355586315 *
436873    +        S_MntFishProducts  +     0.13796996882884 * S_MntFruits
436874    +          +     0.29997327116644 * S_MntGoldProds  +     0.15434247119193 *
436875    +        S_MntMeatProducts  +     0.11282870587489 * S_MntSweetProducts
436876    +          +   -8.265968493305E-6 * S_MntWines  +     0.50847138279991 *
436877    +        S_MonthsAsCustomer  +    -0.36453629467324 * S_NumCatalogPurchases
436878    +          +     0.06978864254959 * S_NumDealsPurchases
436879    +          +    -0.12599065703384 * S_NumDistPurchases
436880    +          +      0.2144247508744 * S_NumStorePurchases
436881    +          +    -0.02658304825149 * S_NumWebPurchases
436882    +          +     0.19921493609147 * S_NumWebVisitsMonth
436883    +          +    -0.00068400425323 * S_RFMstat  +     0.12958872503477 *
436884    +        S_RMntFrq  +     0.22604179472269 * S_Recency
436885    +          +    -0.00024748416541 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.06242833364988 * S_AcceptedCmpTotal + 0.17162996069984 * S_Age 
+ 0.23397947005047 * S_Frq + 0.03838049824533 * S_Income + 0.49350393223739 * S_Kidhome + 
0.08493308955856 * S_Mnt + 0.06641355586315 * S_MntFishProducts + 0.13796996882884 * 
S_MntFruits + 0.29997327116644 * S_MntGoldProds + 0.15434247119193 * S_MntMeatProducts + 
0.11282870587489 * S_MntSweetProducts + -8.265968493305E-6 * S_MntWines + 0.50847138279991 * 
S_MonthsAsCustomer + -0.36453629467324 * S_NumCatalogPurchases + 0.06978864254959 * 
S_NumDealsPurchases + -0.12599065703384 * S_NumDistPurchases + 0.2144247508744 * 
S_NumStorePurchases + -0.02658304825149 * S_NumWebPurchases + 0.19921493609147 * 
S_NumWebVisitsMonth + -0.00068400425323 * S_RFMstat + 0.12958872503477 * S_RMntFrq + 
0.22604179472269 * S_Recency + -0.00024748416541 * S_Teenhome ;
436886    +   H13  =    -0.14904002464294 * S_AcceptedCmpTotal  +      0.0196407171011 *
436887    +        S_Age  +    -0.38130761092647 * S_Frq  +    -0.25514550161418 *
436888    +        S_Income  +    -0.54955591901458 * S_Kidhome
436889    +          +    -0.20064604720551 * S_Mnt  +    -0.01120159869349 *
436890    +        S_MntFishProducts  +    -0.28438340072693 * S_MntFruits
436891    +          +      -0.401775646063 * S_MntGoldProds  +    -0.14664321081034 *
436892    +        S_MntMeatProducts  +     0.09485876734388 * S_MntSweetProducts
436893    +          +     0.11019033056419 * S_MntWines  +    -0.11590485042345 *
436894    +        S_MonthsAsCustomer  +    -0.41095899807576 * S_NumCatalogPurchases
436895    +          +    -0.80287489735524 * S_NumDealsPurchases
436896    +          +    -0.44815413969261 * S_NumDistPurchases
436897    +          +     0.01081559808314 * S_NumStorePurchases
436898    +          +    -0.27447334038648 * S_NumWebPurchases
436899    +          +      0.1182881539804 * S_NumWebVisitsMonth
436900    +          +    -0.31607576702749 * S_RFMstat  +     0.02351098110071 *
436901    +        S_RMntFrq  +    -0.05679667432729 * S_Recency
436902    +          +    -0.35363001486382 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.14904002464294 * S_AcceptedCmpTotal + 0.0196407171011 * S_Age + 
-0.38130761092647 * S_Frq + -0.25514550161418 * S_Income + -0.54955591901458 * S_Kidhome + 
-0.20064604720551 * S_Mnt + -0.01120159869349 * S_MntFishProducts + -0.28438340072693 * 
S_MntFruits + -0.401775646063 * S_MntGoldProds + -0.14664321081034 * S_MntMeatProducts + 
0.09485876734388 * S_MntSweetProducts + 0.11019033056419 * S_MntWines + -0.11590485042345 * 
S_MonthsAsCustomer + -0.41095899807576 * S_NumCatalogPurchases + -0.80287489735524 * 
S_NumDealsPurchases + -0.44815413969261 * S_NumDistPurchases + 0.01081559808314 * 
S_NumStorePurchases + -0.27447334038648 * S_NumWebPurchases + 0.1182881539804 * 
S_NumWebVisitsMonth + -0.31607576702749 * S_RFMstat + 0.02351098110071 * S_RMntFrq + 
-0.05679667432729 * S_Recency + -0.35363001486382 * S_Teenhome ;
436903    +   H14  =     0.36193112751246 * S_AcceptedCmpTotal  +    -0.09713774522438 *
436904    +        S_Age  +    -0.34167413708614 * S_Frq  +    -0.31867444373143 *
436905    +        S_Income  +     0.01946696600265 * S_Kidhome
436906    +          +     0.42765015920152 * S_Mnt  +    -0.40290796700834 *
436907    +        S_MntFishProducts  +    -0.10716764177415 * S_MntFruits
436908    +          +     0.15797682916287 * S_MntGoldProds  +      1.3190145500044 *
436909    +        S_MntMeatProducts  +     0.36757292603754 * S_MntSweetProducts
436910    +          +    -0.13810540469151 * S_MntWines  +    -0.06721864190223 *
436911    +        S_MonthsAsCustomer  +     0.61424075957518 * S_NumCatalogPurchases
436912    +          +     0.43311138877196 * S_NumDealsPurchases
436913    +          +     0.18502408909322 * S_NumDistPurchases
436914    +          +    -0.24252633187618 * S_NumStorePurchases
436915    +          +      -0.336642179836 * S_NumWebPurchases
436916    +          +     0.81771723742428 * S_NumWebVisitsMonth
436917    +          +    -0.05424233789327 * S_RFMstat  +     0.11603798180639 *
436918    +        S_RMntFrq  +      -1.497745460265 * S_Recency
436919    +          +    -0.16644420630578 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.36193112751246 * S_AcceptedCmpTotal + -0.09713774522438 * S_Age 
+ -0.34167413708614 * S_Frq + -0.31867444373143 * S_Income + 0.01946696600265 * S_Kidhome + 
0.42765015920152 * S_Mnt + -0.40290796700834 * S_MntFishProducts + -0.10716764177415 * 
S_MntFruits + 0.15797682916287 * S_MntGoldProds + 1.3190145500044 * S_MntMeatProducts + 
0.36757292603754 * S_MntSweetProducts + -0.13810540469151 * S_MntWines + -0.06721864190223 * 
S_MonthsAsCustomer + 0.61424075957518 * S_NumCatalogPurchases + 0.43311138877196 * 
S_NumDealsPurchases + 0.18502408909322 * S_NumDistPurchases + -0.24252633187618 * 
S_NumStorePurchases + -0.336642179836 * S_NumWebPurchases + 0.81771723742428 * 
S_NumWebVisitsMonth + -0.05424233789327 * S_RFMstat + 0.11603798180639 * S_RMntFrq + 
-1.497745460265 * S_Recency + -0.16644420630578 * S_Teenhome ;
436920    +   H11  = H11  +     0.07313834221819 * AcceptedCmp10
436921    +          +     0.32717092230961 * AcceptedCmp20  +     0.48102262014799 *
436922    +        AcceptedCmp30  +     0.17547408877472 * AcceptedCmp40
436923    +          +     0.25746983749355 * AcceptedCmp50  +    -0.28773497540647 *
436924    +        Complain0  +    -0.18629685324982 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.07313834221819 * AcceptedCmp10 + 0.32717092230961 * 
AcceptedCmp20 + 0.48102262014799 * AcceptedCmp30 + 0.17547408877472 * AcceptedCmp40 + 
0.25746983749355 * AcceptedCmp50 + -0.28773497540647 * Complain0 + -0.18629685324982 * 
HigherEducationBinary0 ;
436925    +   H12  = H12  +    -0.17623954696104 * AcceptedCmp10
436926    +          +     0.09694493862829 * AcceptedCmp20  +     0.11024646409489 *
436927    +        AcceptedCmp30  +     0.13769886685196 * AcceptedCmp40
436928    +          +    -0.14277658423319 * AcceptedCmp50  +     0.07414319423679 *
436929    +        Complain0  +    -0.05210282033436 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.17623954696104 * AcceptedCmp10 + 0.09694493862829 * 
AcceptedCmp20 + 0.11024646409489 * AcceptedCmp30 + 0.13769886685196 * AcceptedCmp40 + 
-0.14277658423319 * AcceptedCmp50 + 0.07414319423679 * Complain0 + -0.05210282033436 * 
HigherEducationBinary0 ;
436930    +   H13  = H13  +     0.00232895100278 * AcceptedCmp10
436931    +          +    -0.17245793714966 * AcceptedCmp20  +     0.22300285586606 *
436932    +        AcceptedCmp30  +     0.02667629114587 * AcceptedCmp40
436933    +          +    -0.08909727736989 * AcceptedCmp50  +     0.33169373470586 *
436934    +        Complain0  +     0.30446475173693 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00232895100278 * AcceptedCmp10 + -0.17245793714966 * 
AcceptedCmp20 + 0.22300285586606 * AcceptedCmp30 + 0.02667629114587 * AcceptedCmp40 + 
-0.08909727736989 * AcceptedCmp50 + 0.33169373470586 * Complain0 + 0.30446475173693 * 
HigherEducationBinary0 ;
436935    +   H14  = H14  +    -0.47820584762363 * AcceptedCmp10
436936    +          +     0.03654006761759 * AcceptedCmp20  +    -0.20965167013319 *
436937    +        AcceptedCmp30  +    -0.13396151443119 * AcceptedCmp40
436938    +          +    -1.12947244187955 * AcceptedCmp50  +     0.01007973582648 *
436939    +        Complain0  +    -0.22975952148681 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.47820584762363 * AcceptedCmp10 + 0.03654006761759 * 
AcceptedCmp20 + -0.20965167013319 * AcceptedCmp30 + -0.13396151443119 * AcceptedCmp40 + 
-1.12947244187955 * AcceptedCmp50 + 0.01007973582648 * Complain0 + -0.22975952148681 * 
HigherEducationBinary0 ;
436940    +   H11  = H11  +    -0.45165482916552 * Education2n_Cycle
436941    +          +     0.67730616273788 * EducationBasic  +    -0.51516495083024 *
436942    +        EducationGraduation  +     0.43154054999649 * EducationMaster
436943    +          +    -0.91598027963019 * Marital_StatusDivorced
436944    +          +     0.99081987547846 * Marital_StatusMarried
436945    +          +    -1.39858900243332 * Marital_StatusSingle
436946    +          +       1.347741143103 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.45165482916552 * Education2n_Cycle + 0.67730616273788 * 
EducationBasic + -0.51516495083024 * EducationGraduation + 0.43154054999649 * EducationMaster 
+ -0.91598027963019 * Marital_StatusDivorced + 0.99081987547846 * Marital_StatusMarried + 
-1.39858900243332 * Marital_StatusSingle + 1.347741143103 * Marital_StatusTogether ;
436947    +   H12  = H12  +    -0.00189420846473 * Education2n_Cycle
436948    +          +    -0.20493655640888 * EducationBasic  +     0.02037300537072 *
436949    +        EducationGraduation  +     0.01942778395804 * EducationMaster
436950    +          +     0.04148596239454 * Marital_StatusDivorced
436951    +          +     0.13700464357088 * Marital_StatusMarried
436952    +          +     0.26244943889586 * Marital_StatusSingle
436953    +          +    -0.01959556613989 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.00189420846473 * Education2n_Cycle + -0.20493655640888 * 
EducationBasic + 0.02037300537072 * EducationGraduation + 0.01942778395804 * EducationMaster + 
0.04148596239454 * Marital_StatusDivorced + 0.13700464357088 * Marital_StatusMarried + 
0.26244943889586 * Marital_StatusSingle + -0.01959556613989 * Marital_StatusTogether ;
436954    +   H13  = H13  +    -0.08424648072756 * Education2n_Cycle
436955    +          +    -0.03519553916539 * EducationBasic  +    -0.14733534752496 *
436956    +        EducationGraduation  +    -0.13923731176653 * EducationMaster
436957    +          +     0.21225188119775 * Marital_StatusDivorced
436958    +          +    -0.78447428711532 * Marital_StatusMarried
436959    +          +     0.40081668287631 * Marital_StatusSingle
436960    +          +    -0.47768802901346 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.08424648072756 * Education2n_Cycle + -0.03519553916539 * 
EducationBasic + -0.14733534752496 * EducationGraduation + -0.13923731176653 * EducationMaster 
+ 0.21225188119775 * Marital_StatusDivorced + -0.78447428711532 * Marital_StatusMarried + 
0.40081668287631 * Marital_StatusSingle + -0.47768802901346 * Marital_StatusTogether ;
436961    +   H14  = H14  +    -0.13077789963596 * Education2n_Cycle
436962    +          +    -0.04224059272723 * EducationBasic  +    -0.26064134779202 *
436963    +        EducationGraduation  +     0.26637203274122 * EducationMaster
436964    +          +    -0.35332505424842 * Marital_StatusDivorced
436965    +          +    -0.23139833132219 * Marital_StatusMarried
436966    +          +    -0.06980598315267 * Marital_StatusSingle
436967    +          +     0.08689807740885 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.13077789963596 * Education2n_Cycle + -0.04224059272723 * 
EducationBasic + -0.26064134779202 * EducationGraduation + 0.26637203274122 * EducationMaster 
+ -0.35332505424842 * Marital_StatusDivorced + -0.23139833132219 * Marital_StatusMarried + 
-0.06980598315267 * Marital_StatusSingle + 0.08689807740885 * Marital_StatusTogether ;
436968    +   H11  =    -0.03502284610962 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.03502284610962 + H11 ;
436969    +   H12  =    -1.33013445020225 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -1.33013445020225 + H12 ;
436970    +   H13  =    -1.70772581209165 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.70772581209165 + H13 ;
436971    +   H14  =    -0.77238092213725 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.77238092213725 + H14 ;
436972    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
436973    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
436974    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
436975    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
436976    +END;
MPRINT(EM_DIAGRAM):   END;
436977    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
436978    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
436979    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
436980    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
436981    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
436982    +END;
MPRINT(EM_DIAGRAM):   END;
436983    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
436984    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
436985    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
436986    +
436987    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
436988    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
436989    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
436990    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
436991    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
436992    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
436993    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
436994    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
436995    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
436996    +end;
MPRINT(EM_DIAGRAM):   end;
436997    +else do;
MPRINT(EM_DIAGRAM):   else do;
436998    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
436999    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
437000    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
437001    +   end;
MPRINT(EM_DIAGRAM):   end;
437002    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
437003    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
437004    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
437005    +   end;
MPRINT(EM_DIAGRAM):   end;
437006    +   else do;
MPRINT(EM_DIAGRAM):   else do;
437007    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
437008    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
437009    +   end;
MPRINT(EM_DIAGRAM):   end;
437010    +end;
MPRINT(EM_DIAGRAM):   end;
437011    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
437012    +   P_DepVar1  =    -4.10527116293157 * H11  +    -0.50563319025675 * H12
437013    +          +    -1.37794943679966 * H13  +     3.57492661052202 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.10527116293157 * H11 + -0.50563319025675 * H12 + 
-1.37794943679966 * H13 + 3.57492661052202 * H14 ;
437014    +   P_DepVar1  =     -2.7093416265681 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.7093416265681 + P_DepVar1 ;
437015    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
437016    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
437017    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
437018    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
437019    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
437020    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
437021    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
437022    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
437023    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
437024    +END;
MPRINT(EM_DIAGRAM):   END;
437025    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
437026    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
437027    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
437028    +END;
MPRINT(EM_DIAGRAM):   END;
437029    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
437030    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
437031    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
437032    +END;
MPRINT(EM_DIAGRAM):   END;
437033    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
437034    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
437035    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
437036    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
437037    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
437038    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
437039    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
437040    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
437041    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
437042    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
437043    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
437044    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
437045    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
437046    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
437047    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
437048    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
437049    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
437050    +END;
MPRINT(EM_DIAGRAM):   END;
437051    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
437052    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
437053    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
437054    +drop
437055    +H11
437056    +H12
437057    +H13
437058    +H14
437059    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
437060    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
437061     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL4_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
437062     quit;
437063     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
437064     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
437065     * Neural4: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural4: Computing metadata for TRAIN data;
437066     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL4_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural4\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural4_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural4_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural4_TRAIN out=WORK.M26KPJPH noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M26KPJPH;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M26KPJPH(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M26KPJPH;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M26KPJPH;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1Z6PHLG NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1Z6PHLG;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1Z6PHLG;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M16QJFJH(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1Z6PHLG;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1Z6PHLG;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1Z6PHLG;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1Z6PHLG;
MPRINT(EMADVISECOLUMNS):   set WORK.M1Z6PHLG;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural4_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural4";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural4";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural4";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural4";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural4";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural4";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural4";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural4";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural4";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural4";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural4: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
437378     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
437379     set EMWS8.Neural4_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural4_EMINFO;
437380     where DATA='Neural4' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural4' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
437381     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL4_EMINFO.
      WHERE (DATA='Neural4') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

437382     data EMWS8.Neural4_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural4_EMINFO;
437383     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
437384     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
437385     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL4_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
437389     run;
437390     data EMWS8.Neural4_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural4_EMINFO;
437391     set EMWS8.Neural4_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural4_EMINFO WORK.MODELTEMP_INFO;
437392     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL4_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL4_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

437393     proc sort data = EMWS8.Neural4_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural4_EMINFO NOTHREADS;
437394     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
437395     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL4_EMINFO.
NOTE: The data set EMWS8.NEURAL4_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

437396     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
437397     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
437398     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

437399     proc sort data = EMWS8.Neural4_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural4_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
437400     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
437401     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL4_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

437402     data EMWS8.Neural4_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural4_EMINFO;
437403     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
437404     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
437405     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL4_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

437406     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
437407     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
437408     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
437409     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.NEURAL4_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL4_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
