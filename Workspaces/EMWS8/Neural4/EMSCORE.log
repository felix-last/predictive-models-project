MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "16. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "20.10 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                16. April 2016
Time:                20.10 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O37LZ3AF 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O37LZ3AF new;
MPRINT(EM_DIAGRAM):   run;
109138     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
109139     set EMWS8.Neural4_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural4_OUTKEY;
109140     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
109141     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 45 observations read from the data set EMWS8.NEURAL4_OUTKEY.
NOTE: The data set WORK.OUTKEY has 4 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

109142     filename emflow
109142   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural4: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
109143     *------------------------------------------------------------*;
109144     * Neural4: Scoring DATA data;
109145     *------------------------------------------------------------*;
109146     data EMWS8.Neural4_TRAIN
109147     / view=EMWS8.Neural4_TRAIN
109148     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural4_TRAIN / view=EMWS8.Neural4_TRAIN ;
109149     set EMWS8.Meta_TRAIN
109150     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_TRAIN ;
109151     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMFLOWSCORE.sas.
109152    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
109153    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
109154    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
109155    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
109156    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
109157    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
109158    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
109159    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
109160    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
109161    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
109162    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
109163    +LENGTH _WARN_ $4
109164    +      F_DepVar  $ 12
109165    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
109166    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
109167    +
109168    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
109169    +
109170    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
109171    +
109172    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
109173    +
109174    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
109175    +
109176    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
109177    +
109178    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
109179    +
109180    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
109181    +
109182    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
109183    +
109184    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
109185    +
109186    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
109187    +
109188    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
109189    +
109190    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
109191    +
109192    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
109193    +
109194    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
109195    +
109196    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
109197    +
109198    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
109199    +
109200    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
109201    +
109202    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
109203    +
109204    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
109205    +
109206    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
109207    +
109208    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
109209    +
109210    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
109211    +
109212    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
109213    +
109214    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
109215    +
109216    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
109217    +
109218    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
109219    +
109220    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
109221    +
109222    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
109223    +
109224    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
109225    +
109226    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
109227    +
109228    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
109229    +
109230    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
109231    +
109232    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
109233    +
109234    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
109235    +
109236    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
109237    +
109238    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
109239    +
109240    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
109241    +
109242    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
109243    +
109244    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
109245    +
109246    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
109247    +
109248    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
109249    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
109250    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
109251    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
109252    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
109253    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
109254    +end;
MPRINT(EM_DIAGRAM):   end;
109255    +else do;
MPRINT(EM_DIAGRAM):   else do;
109256    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
109257    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
109258    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
109259    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
109260    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
109261    +   end;
MPRINT(EM_DIAGRAM):   end;
109262    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
109263    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
109264    +   end;
MPRINT(EM_DIAGRAM):   end;
109265    +   else do;
MPRINT(EM_DIAGRAM):   else do;
109266    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
109267    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
109268    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
109269    +   end;
MPRINT(EM_DIAGRAM):   end;
109270    +end;
MPRINT(EM_DIAGRAM):   end;
109271    +
109272    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
109273    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
109274    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
109275    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
109276    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
109277    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
109278    +end;
MPRINT(EM_DIAGRAM):   end;
109279    +else do;
MPRINT(EM_DIAGRAM):   else do;
109280    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
109281    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
109282    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
109283    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
109284    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
109285    +   end;
MPRINT(EM_DIAGRAM):   end;
109286    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
109287    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
109288    +   end;
MPRINT(EM_DIAGRAM):   end;
109289    +   else do;
MPRINT(EM_DIAGRAM):   else do;
109290    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
109291    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
109292    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
109293    +   end;
MPRINT(EM_DIAGRAM):   end;
109294    +end;
MPRINT(EM_DIAGRAM):   end;
109295    +
109296    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
109297    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
109298    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
109299    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
109300    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
109301    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
109302    +end;
MPRINT(EM_DIAGRAM):   end;
109303    +else do;
MPRINT(EM_DIAGRAM):   else do;
109304    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
109305    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
109306    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
109307    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
109308    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
109309    +   end;
MPRINT(EM_DIAGRAM):   end;
109310    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
109311    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
109312    +   end;
MPRINT(EM_DIAGRAM):   end;
109313    +   else do;
MPRINT(EM_DIAGRAM):   else do;
109314    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
109315    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
109316    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
109317    +   end;
MPRINT(EM_DIAGRAM):   end;
109318    +end;
MPRINT(EM_DIAGRAM):   end;
109319    +
109320    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
109321    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
109322    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
109323    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
109324    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
109325    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
109326    +end;
MPRINT(EM_DIAGRAM):   end;
109327    +else do;
MPRINT(EM_DIAGRAM):   else do;
109328    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
109329    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
109330    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
109331    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
109332    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
109333    +   end;
MPRINT(EM_DIAGRAM):   end;
109334    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
109335    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
109336    +   end;
MPRINT(EM_DIAGRAM):   end;
109337    +   else do;
MPRINT(EM_DIAGRAM):   else do;
109338    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
109339    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
109340    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
109341    +   end;
MPRINT(EM_DIAGRAM):   end;
109342    +end;
MPRINT(EM_DIAGRAM):   end;
109343    +
109344    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
109345    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
109346    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
109347    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
109348    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
109349    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
109350    +end;
MPRINT(EM_DIAGRAM):   end;
109351    +else do;
MPRINT(EM_DIAGRAM):   else do;
109352    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
109353    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
109354    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
109355    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
109356    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
109357    +   end;
MPRINT(EM_DIAGRAM):   end;
109358    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
109359    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
109360    +   end;
MPRINT(EM_DIAGRAM):   end;
109361    +   else do;
MPRINT(EM_DIAGRAM):   else do;
109362    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
109363    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
109364    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
109365    +   end;
MPRINT(EM_DIAGRAM):   end;
109366    +end;
MPRINT(EM_DIAGRAM):   end;
109367    +
109368    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
109369    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
109370    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
109371    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
109372    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
109373    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
109374    +end;
MPRINT(EM_DIAGRAM):   end;
109375    +else do;
MPRINT(EM_DIAGRAM):   else do;
109376    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
109377    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
109378    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
109379    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
109380    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
109381    +   end;
MPRINT(EM_DIAGRAM):   end;
109382    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
109383    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
109384    +   end;
MPRINT(EM_DIAGRAM):   end;
109385    +   else do;
MPRINT(EM_DIAGRAM):   else do;
109386    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
109387    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
109388    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
109389    +   end;
MPRINT(EM_DIAGRAM):   end;
109390    +end;
MPRINT(EM_DIAGRAM):   end;
109391    +
109392    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
109393    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
109394    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
109395    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
109396    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
109397    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
109398    +end;
MPRINT(EM_DIAGRAM):   end;
109399    +else do;
MPRINT(EM_DIAGRAM):   else do;
109400    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
109401    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
109402    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
109403    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
109404    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
109405    +   end;
MPRINT(EM_DIAGRAM):   end;
109406    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
109407    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
109408    +   end;
MPRINT(EM_DIAGRAM):   end;
109409    +   else do;
MPRINT(EM_DIAGRAM):   else do;
109410    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
109411    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
109412    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
109413    +   end;
MPRINT(EM_DIAGRAM):   end;
109414    +end;
MPRINT(EM_DIAGRAM):   end;
109415    +
109416    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
109417    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
109418    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
109419    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
109420    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
109421    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
109422    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
109423    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
109424    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
109425    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
109426    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
109427    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
109428    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
109429    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
109430    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
109431    +end;
MPRINT(EM_DIAGRAM):   end;
109432    +else do;
MPRINT(EM_DIAGRAM):   else do;
109433    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
109434    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
109435    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
109436    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
109437    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
109438    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
109439    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
109440    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
109441    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
109442    +         end;
MPRINT(EM_DIAGRAM):   end;
109443    +         else do;
MPRINT(EM_DIAGRAM):   else do;
109444    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
109445    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
109446    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
109447    +            end;
MPRINT(EM_DIAGRAM):   end;
109448    +         end;
MPRINT(EM_DIAGRAM):   end;
109449    +      end;
MPRINT(EM_DIAGRAM):   end;
109450    +      else do;
MPRINT(EM_DIAGRAM):   else do;
109451    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
109452    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
109453    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
109454    +         end;
MPRINT(EM_DIAGRAM):   end;
109455    +      end;
MPRINT(EM_DIAGRAM):   end;
109456    +   end;
MPRINT(EM_DIAGRAM):   end;
109457    +   else do;
MPRINT(EM_DIAGRAM):   else do;
109458    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
109459    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
109460    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
109461    +      end;
MPRINT(EM_DIAGRAM):   end;
109462    +      else do;
MPRINT(EM_DIAGRAM):   else do;
109463    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
109464    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
109465    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
109466    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
109467    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
109468    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
109469    +         end;
MPRINT(EM_DIAGRAM):   end;
109470    +      end;
MPRINT(EM_DIAGRAM):   end;
109471    +   end;
MPRINT(EM_DIAGRAM):   end;
109472    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
109473    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
109474    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
109475    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
109476    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
109477    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
109478    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
109479    +   end;
MPRINT(EM_DIAGRAM):   end;
109480    +end;
MPRINT(EM_DIAGRAM):   end;
109481    +
109482    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
109483    +*** Checking missing input Interval
109484    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
109485    +
109486    +IF NMISS(
109487    +   AcceptedCmpTotal ,
109488    +   Kidhome ,
109489    +   Mnt ,
109490    +   MntFishProducts ,
109491    +   MntFruits ,
109492    +   MntGoldProds ,
109493    +   MntMeatProducts ,
109494    +   MntSweetProducts ,
109495    +   MntWines ,
109496    +   NumCatalogPurchases ,
109497    +   NumDealsPurchases ,
109498    +   NumDistPurchases ,
109499    +   NumStorePurchases ,
109500    +   NumWebPurchases ,
109501    +   NumWebVisitsMonth ,
109502    +   RFMstat ,
109503    +   Recency ,
109504    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Kidhome , Mnt , MntFishProducts , MntFruits 
, MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , 
NumDealsPurchases , NumDistPurchases , NumStorePurchases , NumWebPurchases , NumWebVisitsMonth 
, RFMstat , Recency , Teenhome ) THEN DO;
109505    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
109506    +
109507    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
109508    +END;
MPRINT(EM_DIAGRAM):   END;
109509    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
109510    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
109511    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
109512    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
109513    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
109514    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
109515    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
109516    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
109517    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
109518    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
109519    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
109520    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
109521    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
109522    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
109523    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
109524    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
109525    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
109526    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
109527    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
109528    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
109529    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
109530    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
109531    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
109532    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
109533    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
109534    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
109535    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
109536    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
109537    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
109538    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
109539    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
109540    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
109541    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
109542    +END;
MPRINT(EM_DIAGRAM):   END;
109543    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
109544    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
109545    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
109546    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
109547    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
109548    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
109549    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
109550    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
109551    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
109552    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
109553    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
109554    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
109555    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
109556    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
109557    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
109558    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
109559    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
109560    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
109561    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
109562    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
109563    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
109564    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
109565    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
109566    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
109567    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
109568    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
109569    +   ELSE S_NumCatalogPurchases
109570    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
109571    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
109572    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
109573    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
109574    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
109575    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
109576    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
109577    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
109578    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
109579    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
109580    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
109581    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
109582    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
109583    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
109584    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
109585    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
109586    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
109587    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
109588    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
109589    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
109590    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
109591    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
109592    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
109593    +END;
MPRINT(EM_DIAGRAM):   END;
109594    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
109595    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
109596    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
109597    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
109598    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
109599    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
109600    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
109601    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
109602    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
109603    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
109604    +   H11  =     -0.8246180954871 * S_AcceptedCmpTotal  +    -0.26046792683156 *
109605    +        S_Kidhome  +    -0.20961567748735 * S_Mnt  +     0.26654542653658 *
109606    +        S_MntFishProducts  +    -0.30951775122613 * S_MntFruits
109607    +          +     0.09051491444093 * S_MntGoldProds  +    -1.64328058678717 *
109608    +        S_MntMeatProducts  +    -0.19366895196568 * S_MntSweetProducts
109609    +          +     0.38603773876569 * S_MntWines  +    -0.25551176610235 *
109610    +        S_NumCatalogPurchases  +    -0.10625029852107 * S_NumDealsPurchases
109611    +          +     0.19912219980931 * S_NumDistPurchases
109612    +          +     0.18110016198301 * S_NumStorePurchases
109613    +          +     0.84844988279844 * S_NumWebPurchases
109614    +          +    -0.18450776402283 * S_NumWebVisitsMonth
109615    +          +    -0.50884714303231 * S_RFMstat  +     0.19244941768129 *
109616    +        S_Recency  +    -0.18130850769076 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.8246180954871 * S_AcceptedCmpTotal + -0.26046792683156 * 
S_Kidhome + -0.20961567748735 * S_Mnt + 0.26654542653658 * S_MntFishProducts + 
-0.30951775122613 * S_MntFruits + 0.09051491444093 * S_MntGoldProds + -1.64328058678717 * 
S_MntMeatProducts + -0.19366895196568 * S_MntSweetProducts + 0.38603773876569 * S_MntWines + 
-0.25551176610235 * S_NumCatalogPurchases + -0.10625029852107 * S_NumDealsPurchases + 
0.19912219980931 * S_NumDistPurchases + 0.18110016198301 * S_NumStorePurchases + 
0.84844988279844 * S_NumWebPurchases + -0.18450776402283 * S_NumWebVisitsMonth + 
-0.50884714303231 * S_RFMstat + 0.19244941768129 * S_Recency + -0.18130850769076 * S_Teenhome ;
109617    +   H12  =     0.59683104990369 * S_AcceptedCmpTotal  +     0.36552928900705 *
109618    +        S_Kidhome  +      0.5173309469318 * S_Mnt  +    -0.43538154644347 *
109619    +        S_MntFishProducts  +    -0.21779050605401 * S_MntFruits
109620    +          +     0.19689161190877 * S_MntGoldProds  +      1.9153507069603 *
109621    +        S_MntMeatProducts  +     0.21257962213904 * S_MntSweetProducts
109622    +          +    -0.49835209765306 * S_MntWines  +     1.47489768672818 *
109623    +        S_NumCatalogPurchases  +     0.68023375677638 * S_NumDealsPurchases
109624    +          +     0.28904827738676 * S_NumDistPurchases
109625    +          +    -0.77789592957647 * S_NumStorePurchases
109626    +          +    -0.72822660183607 * S_NumWebPurchases
109627    +          +     0.38372224856027 * S_NumWebVisitsMonth
109628    +          +       0.255547398028 * S_RFMstat  +    -0.45525472850351 *
109629    +        S_Recency  +     0.10036435252662 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.59683104990369 * S_AcceptedCmpTotal + 0.36552928900705 * 
S_Kidhome + 0.5173309469318 * S_Mnt + -0.43538154644347 * S_MntFishProducts + 
-0.21779050605401 * S_MntFruits + 0.19689161190877 * S_MntGoldProds + 1.9153507069603 * 
S_MntMeatProducts + 0.21257962213904 * S_MntSweetProducts + -0.49835209765306 * S_MntWines + 
1.47489768672818 * S_NumCatalogPurchases + 0.68023375677638 * S_NumDealsPurchases + 
0.28904827738676 * S_NumDistPurchases + -0.77789592957647 * S_NumStorePurchases + 
-0.72822660183607 * S_NumWebPurchases + 0.38372224856027 * S_NumWebVisitsMonth + 
0.255547398028 * S_RFMstat + -0.45525472850351 * S_Recency + 0.10036435252662 * S_Teenhome ;
109630    +   H13  =     -0.5325626665587 * S_AcceptedCmpTotal  +     0.71160037572862 *
109631    +        S_Kidhome  +    -0.00359855229002 * S_Mnt  +     0.19705637237968 *
109632    +        S_MntFishProducts  +     0.09889116807812 * S_MntFruits
109633    +          +     0.12320565911743 * S_MntGoldProds  +    -0.61569836083387 *
109634    +        S_MntMeatProducts  +      0.1217025461924 * S_MntSweetProducts
109635    +          +     0.46869304908218 * S_MntWines  +    -0.47274920452333 *
109636    +        S_NumCatalogPurchases  +     -0.4082953904163 * S_NumDealsPurchases
109637    +          +     0.19800897399715 * S_NumDistPurchases
109638    +          +     0.59071719241145 * S_NumStorePurchases
109639    +          +      0.3381501904539 * S_NumWebPurchases
109640    +          +    -1.28883338112011 * S_NumWebVisitsMonth
109641    +          +     0.00400055495022 * S_RFMstat  +     1.08206529730608 *
109642    +        S_Recency  +     0.35657275245743 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.5325626665587 * S_AcceptedCmpTotal + 0.71160037572862 * 
S_Kidhome + -0.00359855229002 * S_Mnt + 0.19705637237968 * S_MntFishProducts + 
0.09889116807812 * S_MntFruits + 0.12320565911743 * S_MntGoldProds + -0.61569836083387 * 
S_MntMeatProducts + 0.1217025461924 * S_MntSweetProducts + 0.46869304908218 * S_MntWines + 
-0.47274920452333 * S_NumCatalogPurchases + -0.4082953904163 * S_NumDealsPurchases + 
0.19800897399715 * S_NumDistPurchases + 0.59071719241145 * S_NumStorePurchases + 
0.3381501904539 * S_NumWebPurchases + -1.28883338112011 * S_NumWebVisitsMonth + 
0.00400055495022 * S_RFMstat + 1.08206529730608 * S_Recency + 0.35657275245743 * S_Teenhome ;
109643    +   H14  =    -0.33036484145041 * S_AcceptedCmpTotal  +     0.10011415505573 *
109644    +        S_Kidhome  +    -0.00759070944812 * S_Mnt  +     0.05305726956194 *
109645    +        S_MntFishProducts  +     0.08083584431458 * S_MntFruits
109646    +          +    -0.08731108181089 * S_MntGoldProds  +    -0.64750431537028 *
109647    +        S_MntMeatProducts  +     0.12864735236133 * S_MntSweetProducts
109648    +          +     0.61392673917624 * S_MntWines  +    -0.64142881303629 *
109649    +        S_NumCatalogPurchases  +    -0.05548488425681 * S_NumDealsPurchases
109650    +          +    -0.14288173902466 * S_NumDistPurchases
109651    +          +     0.19601348567287 * S_NumStorePurchases
109652    +          +    -0.08044033043411 * S_NumWebPurchases
109653    +          +    -0.39713255047568 * S_NumWebVisitsMonth
109654    +          +    -0.04913287368072 * S_RFMstat  +     1.19829042792592 *
109655    +        S_Recency  +     0.43457954748035 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.33036484145041 * S_AcceptedCmpTotal + 0.10011415505573 * 
S_Kidhome + -0.00759070944812 * S_Mnt + 0.05305726956194 * S_MntFishProducts + 
0.08083584431458 * S_MntFruits + -0.08731108181089 * S_MntGoldProds + -0.64750431537028 * 
S_MntMeatProducts + 0.12864735236133 * S_MntSweetProducts + 0.61392673917624 * S_MntWines + 
-0.64142881303629 * S_NumCatalogPurchases + -0.05548488425681 * S_NumDealsPurchases + 
-0.14288173902466 * S_NumDistPurchases + 0.19601348567287 * S_NumStorePurchases + 
-0.08044033043411 * S_NumWebPurchases + -0.39713255047568 * S_NumWebVisitsMonth + 
-0.04913287368072 * S_RFMstat + 1.19829042792592 * S_Recency + 0.43457954748035 * S_Teenhome ;
109656    +   H11  = H11  +     0.00533685725345 * AcceptedCmp10
109657    +          +      0.0179370757261 * AcceptedCmp20  +    -0.41410060470313 *
109658    +        AcceptedCmp30  +     0.07645376869498 * AcceptedCmp40
109659    +          +      0.5492727191786 * AcceptedCmp50  +    -0.05028898116052 *
109660    +        Complain0  +    -0.17001742563016 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.00533685725345 * AcceptedCmp10 + 0.0179370757261 * 
AcceptedCmp20 + -0.41410060470313 * AcceptedCmp30 + 0.07645376869498 * AcceptedCmp40 + 
0.5492727191786 * AcceptedCmp50 + -0.05028898116052 * Complain0 + -0.17001742563016 * 
HigherEducationBinary0 ;
109661    +   H12  = H12  +    -0.05469008468492 * AcceptedCmp10
109662    +          +     0.21812430064959 * AcceptedCmp20  +     0.26338110557539 *
109663    +        AcceptedCmp30  +     0.33060548335742 * AcceptedCmp40
109664    +          +    -0.36020558841261 * AcceptedCmp50  +    -0.15370297603958 *
109665    +        Complain0  +    -0.30675348901275 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.05469008468492 * AcceptedCmp10 + 0.21812430064959 * 
AcceptedCmp20 + 0.26338110557539 * AcceptedCmp30 + 0.33060548335742 * AcceptedCmp40 + 
-0.36020558841261 * AcceptedCmp50 + -0.15370297603958 * Complain0 + -0.30675348901275 * 
HigherEducationBinary0 ;
109666    +   H13  = H13  +     0.08685748229764 * AcceptedCmp10
109667    +          +     0.07844617220165 * AcceptedCmp20  +     0.31067826076463 *
109668    +        AcceptedCmp30  +     0.04677289598333 * AcceptedCmp40
109669    +          +    -0.02262539182663 * AcceptedCmp50  +    -0.09187679949493 *
109670    +        Complain0  +    -0.01445092200886 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.08685748229764 * AcceptedCmp10 + 0.07844617220165 * 
AcceptedCmp20 + 0.31067826076463 * AcceptedCmp30 + 0.04677289598333 * AcceptedCmp40 + 
-0.02262539182663 * AcceptedCmp50 + -0.09187679949493 * Complain0 + -0.01445092200886 * 
HigherEducationBinary0 ;
109671    +   H14  = H14  +     0.23256857638539 * AcceptedCmp10
109672    +          +     0.49380464365655 * AcceptedCmp20  +      0.1564578964027 *
109673    +        AcceptedCmp30  +     0.27321024493692 * AcceptedCmp40
109674    +          +     0.52468244186776 * AcceptedCmp50  +    -0.00211673076991 *
109675    +        Complain0  +     0.05471438087898 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.23256857638539 * AcceptedCmp10 + 0.49380464365655 * 
AcceptedCmp20 + 0.1564578964027 * AcceptedCmp30 + 0.27321024493692 * AcceptedCmp40 + 
0.52468244186776 * AcceptedCmp50 + -0.00211673076991 * Complain0 + 0.05471438087898 * 
HigherEducationBinary0 ;
109676    +   H11  = H11  +    -0.04076816270663 * Marital_StatusDivorced
109677    +          +    -0.67847600465626 * Marital_StatusMarried
109678    +          +     0.54591305323233 * Marital_StatusSingle
109679    +          +    -0.32687043798373 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.04076816270663 * Marital_StatusDivorced + 
-0.67847600465626 * Marital_StatusMarried + 0.54591305323233 * Marital_StatusSingle + 
-0.32687043798373 * Marital_StatusTogether ;
109680    +   H12  = H12  +    -0.12115659474027 * Marital_StatusDivorced
109681    +          +     0.46392772017888 * Marital_StatusMarried
109682    +          +    -0.17314180037873 * Marital_StatusSingle
109683    +          +     0.53644907440751 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.12115659474027 * Marital_StatusDivorced + 
0.46392772017888 * Marital_StatusMarried + -0.17314180037873 * Marital_StatusSingle + 
0.53644907440751 * Marital_StatusTogether ;
109684    +   H13  = H13  +    -0.54658256529903 * Marital_StatusDivorced
109685    +          +     0.30725483889925 * Marital_StatusMarried
109686    +          +    -0.68483370266906 * Marital_StatusSingle
109687    +          +     0.27621335641244 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.54658256529903 * Marital_StatusDivorced + 
0.30725483889925 * Marital_StatusMarried + -0.68483370266906 * Marital_StatusSingle + 
0.27621335641244 * Marital_StatusTogether ;
109688    +   H14  = H14  +    -0.38188288053916 * Marital_StatusDivorced
109689    +          +     1.16505115927327 * Marital_StatusMarried
109690    +          +     -0.8294279027913 * Marital_StatusSingle
109691    +          +     1.27240761581762 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.38188288053916 * Marital_StatusDivorced + 
1.16505115927327 * Marital_StatusMarried + -0.8294279027913 * Marital_StatusSingle + 
1.27240761581762 * Marital_StatusTogether ;
109692    +   H11  =     -1.1404178523108 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.1404178523108 + H11 ;
109693    +   H12  =    -0.13870893584871 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.13870893584871 + H12 ;
109694    +   H13  =       0.548122343891 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.548122343891 + H13 ;
109695    +   H14  =     1.07479952425856 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.07479952425856 + H14 ;
109696    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
109697    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
109698    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
109699    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
109700    +END;
MPRINT(EM_DIAGRAM):   END;
109701    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
109702    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
109703    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
109704    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
109705    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
109706    +END;
MPRINT(EM_DIAGRAM):   END;
109707    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
109708    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
109709    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
109710    +
109711    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
109712    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
109713    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
109714    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
109715    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
109716    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
109717    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
109718    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
109719    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
109720    +end;
MPRINT(EM_DIAGRAM):   end;
109721    +else do;
MPRINT(EM_DIAGRAM):   else do;
109722    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
109723    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
109724    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
109725    +   end;
MPRINT(EM_DIAGRAM):   end;
109726    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
109727    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
109728    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
109729    +   end;
MPRINT(EM_DIAGRAM):   end;
109730    +   else do;
MPRINT(EM_DIAGRAM):   else do;
109731    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
109732    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
109733    +   end;
MPRINT(EM_DIAGRAM):   end;
109734    +end;
MPRINT(EM_DIAGRAM):   end;
109735    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
109736    +   P_DepVar1  =    -2.05486530281327 * H11  +     3.33946880396656 * H12
109737    +          +      -3.559477956484 * H13  +    -4.19177056173878 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.05486530281327 * H11 + 3.33946880396656 * H12 + 
-3.559477956484 * H13 + -4.19177056173878 * H14 ;
109738    +   P_DepVar1  =     -2.0040107893081 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.0040107893081 + P_DepVar1 ;
109739    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
109740    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
109741    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
109742    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
109743    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
109744    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
109745    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
109746    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
109747    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
109748    +END;
MPRINT(EM_DIAGRAM):   END;
109749    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
109750    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
109751    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
109752    +END;
MPRINT(EM_DIAGRAM):   END;
109753    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
109754    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
109755    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
109756    +END;
MPRINT(EM_DIAGRAM):   END;
109757    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
109758    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
109759    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
109760    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
109761    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
109762    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
109763    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
109764    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
109765    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
109766    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
109767    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
109768    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
109769    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
109770    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
109771    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
109772    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
109773    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
109774    +END;
MPRINT(EM_DIAGRAM):   END;
109775    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
109776    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
109777    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
109778    +drop
109779    +H11
109780    +H12
109781    +H13
109782    +H14
109783    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
109784    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
109785     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL4_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
109786     quit;
109787     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
109788     filename emflow
109788   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural4: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
109789     *------------------------------------------------------------*;
109790     * Neural4: Scoring VALIDATE data;
109791     *------------------------------------------------------------*;
109792     data EMWS8.Neural4_VALIDATE
109793     / view=EMWS8.Neural4_VALIDATE
109794     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural4_VALIDATE / view=EMWS8.Neural4_VALIDATE ;
109795     set EMWS8.Meta_VALIDATE
109796     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_VALIDATE ;
109797     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural4\EMFLOWSCORE.sas.
109798    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
109799    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
109800    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
109801    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
109802    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
109803    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
109804    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
109805    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
109806    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
109807    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
109808    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
109809    +LENGTH _WARN_ $4
109810    +      F_DepVar  $ 12
109811    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
109812    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
109813    +
109814    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
109815    +
109816    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
109817    +
109818    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
109819    +
109820    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
109821    +
109822    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
109823    +
109824    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
109825    +
109826    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
109827    +
109828    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
109829    +
109830    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
109831    +
109832    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
109833    +
109834    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
109835    +
109836    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
109837    +
109838    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
109839    +
109840    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
109841    +
109842    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
109843    +
109844    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
109845    +
109846    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
109847    +
109848    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
109849    +
109850    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
109851    +
109852    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
109853    +
109854    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
109855    +
109856    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
109857    +
109858    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
109859    +
109860    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
109861    +
109862    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
109863    +
109864    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
109865    +
109866    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
109867    +
109868    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
109869    +
109870    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
109871    +
109872    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
109873    +
109874    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
109875    +
109876    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
109877    +
109878    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
109879    +
109880    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
109881    +
109882    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
109883    +
109884    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
109885    +
109886    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
109887    +
109888    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
109889    +
109890    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
109891    +
109892    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
109893    +
109894    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
109895    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
109896    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
109897    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
109898    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
109899    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
109900    +end;
MPRINT(EM_DIAGRAM):   end;
109901    +else do;
MPRINT(EM_DIAGRAM):   else do;
109902    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
109903    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
109904    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
109905    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
109906    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
109907    +   end;
MPRINT(EM_DIAGRAM):   end;
109908    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
109909    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
109910    +   end;
MPRINT(EM_DIAGRAM):   end;
109911    +   else do;
MPRINT(EM_DIAGRAM):   else do;
109912    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
109913    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
109914    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
109915    +   end;
MPRINT(EM_DIAGRAM):   end;
109916    +end;
MPRINT(EM_DIAGRAM):   end;
109917    +
109918    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
109919    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
109920    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
109921    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
109922    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
109923    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
109924    +end;
MPRINT(EM_DIAGRAM):   end;
109925    +else do;
MPRINT(EM_DIAGRAM):   else do;
109926    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
109927    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
109928    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
109929    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
109930    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
109931    +   end;
MPRINT(EM_DIAGRAM):   end;
109932    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
109933    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
109934    +   end;
MPRINT(EM_DIAGRAM):   end;
109935    +   else do;
MPRINT(EM_DIAGRAM):   else do;
109936    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
109937    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
109938    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
109939    +   end;
MPRINT(EM_DIAGRAM):   end;
109940    +end;
MPRINT(EM_DIAGRAM):   end;
109941    +
109942    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
109943    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
109944    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
109945    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
109946    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
109947    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
109948    +end;
MPRINT(EM_DIAGRAM):   end;
109949    +else do;
MPRINT(EM_DIAGRAM):   else do;
109950    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
109951    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
109952    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
109953    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
109954    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
109955    +   end;
MPRINT(EM_DIAGRAM):   end;
109956    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
109957    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
109958    +   end;
MPRINT(EM_DIAGRAM):   end;
109959    +   else do;
MPRINT(EM_DIAGRAM):   else do;
109960    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
109961    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
109962    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
109963    +   end;
MPRINT(EM_DIAGRAM):   end;
109964    +end;
MPRINT(EM_DIAGRAM):   end;
109965    +
109966    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
109967    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
109968    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
109969    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
109970    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
109971    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
109972    +end;
MPRINT(EM_DIAGRAM):   end;
109973    +else do;
MPRINT(EM_DIAGRAM):   else do;
109974    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
109975    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
109976    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
109977    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
109978    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
109979    +   end;
MPRINT(EM_DIAGRAM):   end;
109980    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
109981    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
109982    +   end;
MPRINT(EM_DIAGRAM):   end;
109983    +   else do;
MPRINT(EM_DIAGRAM):   else do;
109984    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
109985    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
109986    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
109987    +   end;
MPRINT(EM_DIAGRAM):   end;
109988    +end;
MPRINT(EM_DIAGRAM):   end;
109989    +
109990    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
109991    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
109992    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
109993    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
109994    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
109995    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
109996    +end;
MPRINT(EM_DIAGRAM):   end;
109997    +else do;
MPRINT(EM_DIAGRAM):   else do;
109998    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
109999    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
110000    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
110001    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
110002    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
110003    +   end;
MPRINT(EM_DIAGRAM):   end;
110004    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
110005    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
110006    +   end;
MPRINT(EM_DIAGRAM):   end;
110007    +   else do;
MPRINT(EM_DIAGRAM):   else do;
110008    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
110009    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
110010    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
110011    +   end;
MPRINT(EM_DIAGRAM):   end;
110012    +end;
MPRINT(EM_DIAGRAM):   end;
110013    +
110014    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
110015    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
110016    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
110017    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
110018    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
110019    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
110020    +end;
MPRINT(EM_DIAGRAM):   end;
110021    +else do;
MPRINT(EM_DIAGRAM):   else do;
110022    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
110023    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
110024    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
110025    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
110026    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
110027    +   end;
MPRINT(EM_DIAGRAM):   end;
110028    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
110029    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
110030    +   end;
MPRINT(EM_DIAGRAM):   end;
110031    +   else do;
MPRINT(EM_DIAGRAM):   else do;
110032    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
110033    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
110034    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
110035    +   end;
MPRINT(EM_DIAGRAM):   end;
110036    +end;
MPRINT(EM_DIAGRAM):   end;
110037    +
110038    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
110039    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
110040    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
110041    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
110042    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
110043    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
110044    +end;
MPRINT(EM_DIAGRAM):   end;
110045    +else do;
MPRINT(EM_DIAGRAM):   else do;
110046    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
110047    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
110048    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
110049    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
110050    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
110051    +   end;
MPRINT(EM_DIAGRAM):   end;
110052    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
110053    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
110054    +   end;
MPRINT(EM_DIAGRAM):   end;
110055    +   else do;
MPRINT(EM_DIAGRAM):   else do;
110056    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
110057    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
110058    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
110059    +   end;
MPRINT(EM_DIAGRAM):   end;
110060    +end;
MPRINT(EM_DIAGRAM):   end;
110061    +
110062    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
110063    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
110064    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
110065    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
110066    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
110067    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
110068    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
110069    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
110070    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
110071    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
110072    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
110073    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
110074    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
110075    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
110076    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
110077    +end;
MPRINT(EM_DIAGRAM):   end;
110078    +else do;
MPRINT(EM_DIAGRAM):   else do;
110079    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
110080    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
110081    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
110082    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
110083    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
110084    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
110085    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
110086    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
110087    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
110088    +         end;
MPRINT(EM_DIAGRAM):   end;
110089    +         else do;
MPRINT(EM_DIAGRAM):   else do;
110090    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
110091    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
110092    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
110093    +            end;
MPRINT(EM_DIAGRAM):   end;
110094    +         end;
MPRINT(EM_DIAGRAM):   end;
110095    +      end;
MPRINT(EM_DIAGRAM):   end;
110096    +      else do;
MPRINT(EM_DIAGRAM):   else do;
110097    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
110098    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
110099    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
110100    +         end;
MPRINT(EM_DIAGRAM):   end;
110101    +      end;
MPRINT(EM_DIAGRAM):   end;
110102    +   end;
MPRINT(EM_DIAGRAM):   end;
110103    +   else do;
MPRINT(EM_DIAGRAM):   else do;
110104    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
110105    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
110106    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
110107    +      end;
MPRINT(EM_DIAGRAM):   end;
110108    +      else do;
MPRINT(EM_DIAGRAM):   else do;
110109    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
110110    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
110111    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
110112    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
110113    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
110114    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
110115    +         end;
MPRINT(EM_DIAGRAM):   end;
110116    +      end;
MPRINT(EM_DIAGRAM):   end;
110117    +   end;
MPRINT(EM_DIAGRAM):   end;
110118    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
110119    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
110120    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
110121    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
110122    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
110123    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
110124    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
110125    +   end;
MPRINT(EM_DIAGRAM):   end;
110126    +end;
MPRINT(EM_DIAGRAM):   end;
110127    +
110128    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
110129    +*** Checking missing input Interval
110130    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
110131    +
110132    +IF NMISS(
110133    +   AcceptedCmpTotal ,
110134    +   Kidhome ,
110135    +   Mnt ,
110136    +   MntFishProducts ,
110137    +   MntFruits ,
110138    +   MntGoldProds ,
110139    +   MntMeatProducts ,
110140    +   MntSweetProducts ,
110141    +   MntWines ,
110142    +   NumCatalogPurchases ,
110143    +   NumDealsPurchases ,
110144    +   NumDistPurchases ,
110145    +   NumStorePurchases ,
110146    +   NumWebPurchases ,
110147    +   NumWebVisitsMonth ,
110148    +   RFMstat ,
110149    +   Recency ,
110150    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Kidhome , Mnt , MntFishProducts , MntFruits 
, MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , 
NumDealsPurchases , NumDistPurchases , NumStorePurchases , NumWebPurchases , NumWebVisitsMonth 
, RFMstat , Recency , Teenhome ) THEN DO;
110151    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
110152    +
110153    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
110154    +END;
MPRINT(EM_DIAGRAM):   END;
110155    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
110156    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
110157    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
110158    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
110159    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
110160    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
110161    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
110162    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
110163    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
110164    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
110165    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
110166    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
110167    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
110168    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
110169    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
110170    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
110171    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
110172    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
110173    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
110174    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
110175    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
110176    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
110177    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
110178    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
110179    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
110180    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
110181    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
110182    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
110183    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
110184    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
110185    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
110186    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
110187    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
110188    +END;
MPRINT(EM_DIAGRAM):   END;
110189    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
110190    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
110191    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
110192    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
110193    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
110194    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
110195    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
110196    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
110197    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
110198    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
110199    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
110200    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
110201    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
110202    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
110203    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
110204    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
110205    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
110206    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
110207    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
110208    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
110209    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
110210    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
110211    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
110212    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
110213    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
110214    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
110215    +   ELSE S_NumCatalogPurchases
110216    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
110217    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
110218    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
110219    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
110220    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
110221    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
110222    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
110223    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
110224    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
110225    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
110226    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
110227    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
110228    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
110229    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
110230    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
110231    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
110232    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
110233    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
110234    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
110235    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
110236    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
110237    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
110238    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
110239    +END;
MPRINT(EM_DIAGRAM):   END;
110240    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
110241    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
110242    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
110243    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
110244    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
110245    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
110246    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
110247    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
110248    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
110249    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
110250    +   H11  =     -0.8246180954871 * S_AcceptedCmpTotal  +    -0.26046792683156 *
110251    +        S_Kidhome  +    -0.20961567748735 * S_Mnt  +     0.26654542653658 *
110252    +        S_MntFishProducts  +    -0.30951775122613 * S_MntFruits
110253    +          +     0.09051491444093 * S_MntGoldProds  +    -1.64328058678717 *
110254    +        S_MntMeatProducts  +    -0.19366895196568 * S_MntSweetProducts
110255    +          +     0.38603773876569 * S_MntWines  +    -0.25551176610235 *
110256    +        S_NumCatalogPurchases  +    -0.10625029852107 * S_NumDealsPurchases
110257    +          +     0.19912219980931 * S_NumDistPurchases
110258    +          +     0.18110016198301 * S_NumStorePurchases
110259    +          +     0.84844988279844 * S_NumWebPurchases
110260    +          +    -0.18450776402283 * S_NumWebVisitsMonth
110261    +          +    -0.50884714303231 * S_RFMstat  +     0.19244941768129 *
110262    +        S_Recency  +    -0.18130850769076 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.8246180954871 * S_AcceptedCmpTotal + -0.26046792683156 * 
S_Kidhome + -0.20961567748735 * S_Mnt + 0.26654542653658 * S_MntFishProducts + 
-0.30951775122613 * S_MntFruits + 0.09051491444093 * S_MntGoldProds + -1.64328058678717 * 
S_MntMeatProducts + -0.19366895196568 * S_MntSweetProducts + 0.38603773876569 * S_MntWines + 
-0.25551176610235 * S_NumCatalogPurchases + -0.10625029852107 * S_NumDealsPurchases + 
0.19912219980931 * S_NumDistPurchases + 0.18110016198301 * S_NumStorePurchases + 
0.84844988279844 * S_NumWebPurchases + -0.18450776402283 * S_NumWebVisitsMonth + 
-0.50884714303231 * S_RFMstat + 0.19244941768129 * S_Recency + -0.18130850769076 * S_Teenhome ;
110263    +   H12  =     0.59683104990369 * S_AcceptedCmpTotal  +     0.36552928900705 *
110264    +        S_Kidhome  +      0.5173309469318 * S_Mnt  +    -0.43538154644347 *
110265    +        S_MntFishProducts  +    -0.21779050605401 * S_MntFruits
110266    +          +     0.19689161190877 * S_MntGoldProds  +      1.9153507069603 *
110267    +        S_MntMeatProducts  +     0.21257962213904 * S_MntSweetProducts
110268    +          +    -0.49835209765306 * S_MntWines  +     1.47489768672818 *
110269    +        S_NumCatalogPurchases  +     0.68023375677638 * S_NumDealsPurchases
110270    +          +     0.28904827738676 * S_NumDistPurchases
110271    +          +    -0.77789592957647 * S_NumStorePurchases
110272    +          +    -0.72822660183607 * S_NumWebPurchases
110273    +          +     0.38372224856027 * S_NumWebVisitsMonth
110274    +          +       0.255547398028 * S_RFMstat  +    -0.45525472850351 *
110275    +        S_Recency  +     0.10036435252662 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.59683104990369 * S_AcceptedCmpTotal + 0.36552928900705 * 
S_Kidhome + 0.5173309469318 * S_Mnt + -0.43538154644347 * S_MntFishProducts + 
-0.21779050605401 * S_MntFruits + 0.19689161190877 * S_MntGoldProds + 1.9153507069603 * 
S_MntMeatProducts + 0.21257962213904 * S_MntSweetProducts + -0.49835209765306 * S_MntWines + 
1.47489768672818 * S_NumCatalogPurchases + 0.68023375677638 * S_NumDealsPurchases + 
0.28904827738676 * S_NumDistPurchases + -0.77789592957647 * S_NumStorePurchases + 
-0.72822660183607 * S_NumWebPurchases + 0.38372224856027 * S_NumWebVisitsMonth + 
0.255547398028 * S_RFMstat + -0.45525472850351 * S_Recency + 0.10036435252662 * S_Teenhome ;
110276    +   H13  =     -0.5325626665587 * S_AcceptedCmpTotal  +     0.71160037572862 *
110277    +        S_Kidhome  +    -0.00359855229002 * S_Mnt  +     0.19705637237968 *
110278    +        S_MntFishProducts  +     0.09889116807812 * S_MntFruits
110279    +          +     0.12320565911743 * S_MntGoldProds  +    -0.61569836083387 *
110280    +        S_MntMeatProducts  +      0.1217025461924 * S_MntSweetProducts
110281    +          +     0.46869304908218 * S_MntWines  +    -0.47274920452333 *
110282    +        S_NumCatalogPurchases  +     -0.4082953904163 * S_NumDealsPurchases
110283    +          +     0.19800897399715 * S_NumDistPurchases
110284    +          +     0.59071719241145 * S_NumStorePurchases
110285    +          +      0.3381501904539 * S_NumWebPurchases
110286    +          +    -1.28883338112011 * S_NumWebVisitsMonth
110287    +          +     0.00400055495022 * S_RFMstat  +     1.08206529730608 *
110288    +        S_Recency  +     0.35657275245743 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.5325626665587 * S_AcceptedCmpTotal + 0.71160037572862 * 
S_Kidhome + -0.00359855229002 * S_Mnt + 0.19705637237968 * S_MntFishProducts + 
0.09889116807812 * S_MntFruits + 0.12320565911743 * S_MntGoldProds + -0.61569836083387 * 
S_MntMeatProducts + 0.1217025461924 * S_MntSweetProducts + 0.46869304908218 * S_MntWines + 
-0.47274920452333 * S_NumCatalogPurchases + -0.4082953904163 * S_NumDealsPurchases + 
0.19800897399715 * S_NumDistPurchases + 0.59071719241145 * S_NumStorePurchases + 
0.3381501904539 * S_NumWebPurchases + -1.28883338112011 * S_NumWebVisitsMonth + 
0.00400055495022 * S_RFMstat + 1.08206529730608 * S_Recency + 0.35657275245743 * S_Teenhome ;
110289    +   H14  =    -0.33036484145041 * S_AcceptedCmpTotal  +     0.10011415505573 *
110290    +        S_Kidhome  +    -0.00759070944812 * S_Mnt  +     0.05305726956194 *
110291    +        S_MntFishProducts  +     0.08083584431458 * S_MntFruits
110292    +          +    -0.08731108181089 * S_MntGoldProds  +    -0.64750431537028 *
110293    +        S_MntMeatProducts  +     0.12864735236133 * S_MntSweetProducts
110294    +          +     0.61392673917624 * S_MntWines  +    -0.64142881303629 *
110295    +        S_NumCatalogPurchases  +    -0.05548488425681 * S_NumDealsPurchases
110296    +          +    -0.14288173902466 * S_NumDistPurchases
110297    +          +     0.19601348567287 * S_NumStorePurchases
110298    +          +    -0.08044033043411 * S_NumWebPurchases
110299    +          +    -0.39713255047568 * S_NumWebVisitsMonth
110300    +          +    -0.04913287368072 * S_RFMstat  +     1.19829042792592 *
110301    +        S_Recency  +     0.43457954748035 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.33036484145041 * S_AcceptedCmpTotal + 0.10011415505573 * 
S_Kidhome + -0.00759070944812 * S_Mnt + 0.05305726956194 * S_MntFishProducts + 
0.08083584431458 * S_MntFruits + -0.08731108181089 * S_MntGoldProds + -0.64750431537028 * 
S_MntMeatProducts + 0.12864735236133 * S_MntSweetProducts + 0.61392673917624 * S_MntWines + 
-0.64142881303629 * S_NumCatalogPurchases + -0.05548488425681 * S_NumDealsPurchases + 
-0.14288173902466 * S_NumDistPurchases + 0.19601348567287 * S_NumStorePurchases + 
-0.08044033043411 * S_NumWebPurchases + -0.39713255047568 * S_NumWebVisitsMonth + 
-0.04913287368072 * S_RFMstat + 1.19829042792592 * S_Recency + 0.43457954748035 * S_Teenhome ;
110302    +   H11  = H11  +     0.00533685725345 * AcceptedCmp10
110303    +          +      0.0179370757261 * AcceptedCmp20  +    -0.41410060470313 *
110304    +        AcceptedCmp30  +     0.07645376869498 * AcceptedCmp40
110305    +          +      0.5492727191786 * AcceptedCmp50  +    -0.05028898116052 *
110306    +        Complain0  +    -0.17001742563016 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.00533685725345 * AcceptedCmp10 + 0.0179370757261 * 
AcceptedCmp20 + -0.41410060470313 * AcceptedCmp30 + 0.07645376869498 * AcceptedCmp40 + 
0.5492727191786 * AcceptedCmp50 + -0.05028898116052 * Complain0 + -0.17001742563016 * 
HigherEducationBinary0 ;
110307    +   H12  = H12  +    -0.05469008468492 * AcceptedCmp10
110308    +          +     0.21812430064959 * AcceptedCmp20  +     0.26338110557539 *
110309    +        AcceptedCmp30  +     0.33060548335742 * AcceptedCmp40
110310    +          +    -0.36020558841261 * AcceptedCmp50  +    -0.15370297603958 *
110311    +        Complain0  +    -0.30675348901275 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.05469008468492 * AcceptedCmp10 + 0.21812430064959 * 
AcceptedCmp20 + 0.26338110557539 * AcceptedCmp30 + 0.33060548335742 * AcceptedCmp40 + 
-0.36020558841261 * AcceptedCmp50 + -0.15370297603958 * Complain0 + -0.30675348901275 * 
HigherEducationBinary0 ;
110312    +   H13  = H13  +     0.08685748229764 * AcceptedCmp10
110313    +          +     0.07844617220165 * AcceptedCmp20  +     0.31067826076463 *
110314    +        AcceptedCmp30  +     0.04677289598333 * AcceptedCmp40
110315    +          +    -0.02262539182663 * AcceptedCmp50  +    -0.09187679949493 *
110316    +        Complain0  +    -0.01445092200886 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.08685748229764 * AcceptedCmp10 + 0.07844617220165 * 
AcceptedCmp20 + 0.31067826076463 * AcceptedCmp30 + 0.04677289598333 * AcceptedCmp40 + 
-0.02262539182663 * AcceptedCmp50 + -0.09187679949493 * Complain0 + -0.01445092200886 * 
HigherEducationBinary0 ;
110317    +   H14  = H14  +     0.23256857638539 * AcceptedCmp10
110318    +          +     0.49380464365655 * AcceptedCmp20  +      0.1564578964027 *
110319    +        AcceptedCmp30  +     0.27321024493692 * AcceptedCmp40
110320    +          +     0.52468244186776 * AcceptedCmp50  +    -0.00211673076991 *
110321    +        Complain0  +     0.05471438087898 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.23256857638539 * AcceptedCmp10 + 0.49380464365655 * 
AcceptedCmp20 + 0.1564578964027 * AcceptedCmp30 + 0.27321024493692 * AcceptedCmp40 + 
0.52468244186776 * AcceptedCmp50 + -0.00211673076991 * Complain0 + 0.05471438087898 * 
HigherEducationBinary0 ;
110322    +   H11  = H11  +    -0.04076816270663 * Marital_StatusDivorced
110323    +          +    -0.67847600465626 * Marital_StatusMarried
110324    +          +     0.54591305323233 * Marital_StatusSingle
110325    +          +    -0.32687043798373 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.04076816270663 * Marital_StatusDivorced + 
-0.67847600465626 * Marital_StatusMarried + 0.54591305323233 * Marital_StatusSingle + 
-0.32687043798373 * Marital_StatusTogether ;
110326    +   H12  = H12  +    -0.12115659474027 * Marital_StatusDivorced
110327    +          +     0.46392772017888 * Marital_StatusMarried
110328    +          +    -0.17314180037873 * Marital_StatusSingle
110329    +          +     0.53644907440751 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.12115659474027 * Marital_StatusDivorced + 
0.46392772017888 * Marital_StatusMarried + -0.17314180037873 * Marital_StatusSingle + 
0.53644907440751 * Marital_StatusTogether ;
110330    +   H13  = H13  +    -0.54658256529903 * Marital_StatusDivorced
110331    +          +     0.30725483889925 * Marital_StatusMarried
110332    +          +    -0.68483370266906 * Marital_StatusSingle
110333    +          +     0.27621335641244 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.54658256529903 * Marital_StatusDivorced + 
0.30725483889925 * Marital_StatusMarried + -0.68483370266906 * Marital_StatusSingle + 
0.27621335641244 * Marital_StatusTogether ;
110334    +   H14  = H14  +    -0.38188288053916 * Marital_StatusDivorced
110335    +          +     1.16505115927327 * Marital_StatusMarried
110336    +          +     -0.8294279027913 * Marital_StatusSingle
110337    +          +     1.27240761581762 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.38188288053916 * Marital_StatusDivorced + 
1.16505115927327 * Marital_StatusMarried + -0.8294279027913 * Marital_StatusSingle + 
1.27240761581762 * Marital_StatusTogether ;
110338    +   H11  =     -1.1404178523108 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.1404178523108 + H11 ;
110339    +   H12  =    -0.13870893584871 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.13870893584871 + H12 ;
110340    +   H13  =       0.548122343891 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.548122343891 + H13 ;
110341    +   H14  =     1.07479952425856 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.07479952425856 + H14 ;
110342    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
110343    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
110344    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
110345    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
110346    +END;
MPRINT(EM_DIAGRAM):   END;
110347    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
110348    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
110349    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
110350    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
110351    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
110352    +END;
MPRINT(EM_DIAGRAM):   END;
110353    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
110354    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
110355    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
110356    +
110357    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
110358    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
110359    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
110360    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
110361    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
110362    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
110363    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
110364    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
110365    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
110366    +end;
MPRINT(EM_DIAGRAM):   end;
110367    +else do;
MPRINT(EM_DIAGRAM):   else do;
110368    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
110369    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
110370    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
110371    +   end;
MPRINT(EM_DIAGRAM):   end;
110372    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
110373    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
110374    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
110375    +   end;
MPRINT(EM_DIAGRAM):   end;
110376    +   else do;
MPRINT(EM_DIAGRAM):   else do;
110377    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
110378    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
110379    +   end;
MPRINT(EM_DIAGRAM):   end;
110380    +end;
MPRINT(EM_DIAGRAM):   end;
110381    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
110382    +   P_DepVar1  =    -2.05486530281327 * H11  +     3.33946880396656 * H12
110383    +          +      -3.559477956484 * H13  +    -4.19177056173878 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.05486530281327 * H11 + 3.33946880396656 * H12 + 
-3.559477956484 * H13 + -4.19177056173878 * H14 ;
110384    +   P_DepVar1  =     -2.0040107893081 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.0040107893081 + P_DepVar1 ;
110385    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
110386    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
110387    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
110388    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
110389    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
110390    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
110391    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
110392    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
110393    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
110394    +END;
MPRINT(EM_DIAGRAM):   END;
110395    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
110396    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
110397    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
110398    +END;
MPRINT(EM_DIAGRAM):   END;
110399    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
110400    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
110401    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
110402    +END;
MPRINT(EM_DIAGRAM):   END;
110403    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
110404    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
110405    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
110406    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
110407    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
110408    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
110409    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
110410    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
110411    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
110412    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
110413    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
110414    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
110415    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
110416    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
110417    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
110418    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
110419    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
110420    +END;
MPRINT(EM_DIAGRAM):   END;
110421    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
110422    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
110423    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
110424    +drop
110425    +H11
110426    +H12
110427    +H13
110428    +H14
110429    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
110430    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
110431     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL4_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
110432     quit;
110433     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
110434     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
110435     * Neural4: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural4: Computing metadata for TRAIN data;
110436     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL4_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural4\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural4_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural4_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural4_TRAIN out=WORK.M1XM75SS noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1XM75SS;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1XM75SS(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1XM75SS;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1XM75SS;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2RCU40A NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2RCU40A;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2RCU40A;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3I8N8DA(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2RCU40A;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2RCU40A;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2RCU40A;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2RCU40A;
MPRINT(EMADVISECOLUMNS):   set WORK.M2RCU40A;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural4_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural4";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural4";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural4";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural4";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural4";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural4";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural4";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural4";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural4";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural4";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural4: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
110748     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
110749     set EMWS8.Neural4_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural4_EMINFO;
110750     where DATA='Neural4' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural4' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
110751     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL4_EMINFO.
      WHERE (DATA='Neural4') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

110752     data EMWS8.Neural4_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural4_EMINFO;
110753     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
110754     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
110755     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL4_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
110759     run;
110760     data EMWS8.Neural4_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural4_EMINFO;
110761     set EMWS8.Neural4_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural4_EMINFO WORK.MODELTEMP_INFO;
110762     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL4_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL4_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

110763     proc sort data = EMWS8.Neural4_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural4_EMINFO NOTHREADS;
110764     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
110765     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL4_EMINFO.
NOTE: The data set EMWS8.NEURAL4_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

110766     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
110767     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
110768     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

110769     proc sort data = EMWS8.Neural4_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural4_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
110770     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
110771     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL4_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

110772     data EMWS8.Neural4_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural4_EMINFO;
110773     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
110774     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
110775     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL4_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

110776     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
110777     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
110778     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
110779     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.NEURAL4_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL4_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
