MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "10 de Março de 
2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "06H10m" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                10 de Março de 2016
Time:                06H10m
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O39O_5OU 
"E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Neural4\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O39O_5OU new;
MPRINT(EM_DIAGRAM):   run;
107044     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
107045     set EMWS8.Neural4_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural4_OUTKEY;
107046     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
107047     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 29 observations read from the data set EMWS8.NEURAL4_OUTKEY.
NOTE: The data set WORK.OUTKEY has 4 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

107048     filename emflow
107048   ! "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Neural4\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Neural4\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural4: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
107049     *------------------------------------------------------------*;
107050     * Neural4: Scoring DATA data;
107051     *------------------------------------------------------------*;
107052     data EMWS8.Neural4_TRAIN
107053     / view=EMWS8.Neural4_TRAIN
107054     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural4_TRAIN / view=EMWS8.Neural4_TRAIN ;
107055     set EMWS8.Meta_TRAIN
107056     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_TRAIN ;
107057     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Neural4\EMFLOWSCORE.sas.
107058    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
107059    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
107060    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
107061    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
107062    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
107063    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
107064    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
107065    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
107066    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
107067    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
107068    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
107069    +LENGTH _WARN_ $4
107070    +      F_DepVar  $ 12
107071    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
107072    +      label S_CatPurchase = 'Standard: CatPurchase' ;
MPRINT(EM_DIAGRAM):   label S_CatPurchase = 'Standard: CatPurchase' ;
107073    +
107074    +      label S_Clothes = 'Standard: Clothes' ;
MPRINT(EM_DIAGRAM):   label S_Clothes = 'Standard: Clothes' ;
107075    +
107076    +      label S_HouseKeeping = 'Standard: HouseKeeping' ;
MPRINT(EM_DIAGRAM):   label S_HouseKeeping = 'Standard: HouseKeeping' ;
107077    +
107078    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
107079    +
107080    +      label S_Rcn = 'Standard: Rcn' ;
MPRINT(EM_DIAGRAM):   label S_Rcn = 'Standard: Rcn' ;
107081    +
107082    +      label S_Recomendation = 'Standard: Recomendation' ;
MPRINT(EM_DIAGRAM):   label S_Recomendation = 'Standard: Recomendation' ;
107083    +
107084    +      label S_SmallAppliances = 'Standard: SmallAppliances' ;
MPRINT(EM_DIAGRAM):   label S_SmallAppliances = 'Standard: SmallAppliances' ;
107085    +
107086    +      label S_Toys = 'Standard: Toys' ;
MPRINT(EM_DIAGRAM):   label S_Toys = 'Standard: Toys' ;
107087    +
107088    +      label Dependents0 = 'Dummy: Dependents=0' ;
MPRINT(EM_DIAGRAM):   label Dependents0 = 'Dummy: Dependents=0' ;
107089    +
107090    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
107091    +
107092    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
107093    +
107094    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
107095    +
107096    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
107097    +
107098    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
107099    +
107100    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
107101    +
107102    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
107103    +
107104    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
107105    +
107106    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
107107    +
107108    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
107109    +
107110    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
107111    +
107112    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
107113    +
107114    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
107115    +
107116    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
107117    +
107118    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
107119    +
107120    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
107121    +
107122    +*** Generate dummy variables for Dependents ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Dependents ;
107123    +drop Dependents0 ;
MPRINT(EM_DIAGRAM):   drop Dependents0 ;
107124    +if missing( Dependents ) then do;
MPRINT(EM_DIAGRAM):   if missing( Dependents ) then do;
107125    +   Dependents0 = .;
MPRINT(EM_DIAGRAM):   Dependents0 = .;
107126    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
107127    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
107128    +end;
MPRINT(EM_DIAGRAM):   end;
107129    +else do;
MPRINT(EM_DIAGRAM):   else do;
107130    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
107131    +   _dm12 = put( Dependents , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Dependents , BEST. );
107132    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
107133    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
107134    +      Dependents0 = -1;
MPRINT(EM_DIAGRAM):   Dependents0 = -1;
107135    +   end;
MPRINT(EM_DIAGRAM):   end;
107136    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
107137    +      Dependents0 = 1;
MPRINT(EM_DIAGRAM):   Dependents0 = 1;
107138    +   end;
MPRINT(EM_DIAGRAM):   end;
107139    +   else do;
MPRINT(EM_DIAGRAM):   else do;
107140    +      Dependents0 = .;
MPRINT(EM_DIAGRAM):   Dependents0 = .;
107141    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
107142    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
107143    +   end;
MPRINT(EM_DIAGRAM):   end;
107144    +end;
MPRINT(EM_DIAGRAM):   end;
107145    +
107146    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
107147    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
107148    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
107149    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
107150    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
107151    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
107152    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
107153    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
107154    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
107155    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
107156    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
107157    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
107158    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
107159    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
107160    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
107161    +end;
MPRINT(EM_DIAGRAM):   end;
107162    +else do;
MPRINT(EM_DIAGRAM):   else do;
107163    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
107164    +   _dm12 = put( Marital_Status , $12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Marital_Status , $12. );
107165    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
107166    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
107167    +   if _dm12 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= 'SINGLE' then do;
107168    +      if _dm12 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= 'MARRIED' then do;
107169    +         if _dm12 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = 'DIVORCED' then do;
107170    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
107171    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
107172    +         end;
MPRINT(EM_DIAGRAM):   end;
107173    +         else do;
MPRINT(EM_DIAGRAM):   else do;
107174    +            if _dm12 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = 'MARRIED' then do;
107175    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
107176    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
107177    +            end;
MPRINT(EM_DIAGRAM):   end;
107178    +         end;
MPRINT(EM_DIAGRAM):   end;
107179    +      end;
MPRINT(EM_DIAGRAM):   end;
107180    +      else do;
MPRINT(EM_DIAGRAM):   else do;
107181    +         if _dm12 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = 'SINGLE' then do;
107182    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
107183    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
107184    +         end;
MPRINT(EM_DIAGRAM):   end;
107185    +      end;
MPRINT(EM_DIAGRAM):   end;
107186    +   end;
MPRINT(EM_DIAGRAM):   end;
107187    +   else do;
MPRINT(EM_DIAGRAM):   else do;
107188    +      if _dm12 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = 'TOGETHER' then do;
107189    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
107190    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
107191    +      end;
MPRINT(EM_DIAGRAM):   end;
107192    +      else do;
MPRINT(EM_DIAGRAM):   else do;
107193    +         if _dm12 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = 'WIDOW' then do;
107194    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
107195    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
107196    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
107197    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
107198    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
107199    +         end;
MPRINT(EM_DIAGRAM):   end;
107200    +      end;
MPRINT(EM_DIAGRAM):   end;
107201    +   end;
MPRINT(EM_DIAGRAM):   end;
107202    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
107203    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
107204    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
107205    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
107206    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
107207    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
107208    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
107209    +   end;
MPRINT(EM_DIAGRAM):   end;
107210    +end;
MPRINT(EM_DIAGRAM):   end;
107211    +
107212    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107213    +*** Checking missing input Interval
107214    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
107215    +
107216    +IF NMISS(
107217    +   CatPurchase ,
107218    +   Clothes ,
107219    +   HouseKeeping ,
107220    +   Mnt ,
107221    +   Rcn ,
107222    +   Recomendation ,
107223    +   SmallAppliances ,
107224    +   Toys   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( CatPurchase , Clothes , HouseKeeping , Mnt , Rcn , 
Recomendation , SmallAppliances , Toys ) THEN DO;
107225    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
107226    +
107227    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
107228    +END;
MPRINT(EM_DIAGRAM):   END;
107229    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107230    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
107231    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107232    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
107233    +   S_CatPurchase  =    -3.17624192684474 +     0.05492769453828 * CatPurchase
107234    +         ;
MPRINT(EM_DIAGRAM):   S_CatPurchase = -3.17624192684474 + 0.05492769453828 * CatPurchase ;
107235    +   S_Clothes  =     -2.3113689693832 +     0.04437092805094 * Clothes ;
MPRINT(EM_DIAGRAM):   S_Clothes = -2.3113689693832 + 0.04437092805094 * Clothes ;
107236    +   S_HouseKeeping  =    -0.93443662367683 +     0.14435178378641 *
107237    +        HouseKeeping ;
MPRINT(EM_DIAGRAM):   S_HouseKeeping = -0.93443662367683 + 0.14435178378641 * HouseKeeping ;
107238    +   S_Mnt  =     -0.9789629518701 +     0.00146441725342 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -0.9789629518701 + 0.00146441725342 * Mnt ;
107239    +   S_Rcn  =    -0.88409352592792 +      0.0137435215813 * Rcn ;
MPRINT(EM_DIAGRAM):   S_Rcn = -0.88409352592792 + 0.0137435215813 * Rcn ;
107240    +   S_Recomendation  =    -3.46611377322712 +     0.87281636006383 *
107241    +        Recomendation ;
MPRINT(EM_DIAGRAM):   S_Recomendation = -3.46611377322712 + 0.87281636006383 * Recomendation ;
107242    +   S_SmallAppliances  =    -2.26667909624218 +     0.07979093963203 *
107243    +        SmallAppliances ;
MPRINT(EM_DIAGRAM):   S_SmallAppliances = -2.26667909624218 + 0.07979093963203 * 
SmallAppliances ;
107244    +   S_Toys  =    -0.95465683239199 +     0.14741955061838 * Toys ;
MPRINT(EM_DIAGRAM):   S_Toys = -0.95465683239199 + 0.14741955061838 * Toys ;
107245    +END;
MPRINT(EM_DIAGRAM):   END;
107246    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
107247    +   IF MISSING( CatPurchase ) THEN S_CatPurchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( CatPurchase ) THEN S_CatPurchase = . ;
107248    +   ELSE S_CatPurchase  =    -3.17624192684474 +     0.05492769453828 *
107249    +        CatPurchase ;
MPRINT(EM_DIAGRAM):   ELSE S_CatPurchase = -3.17624192684474 + 0.05492769453828 * CatPurchase ;
107250    +   IF MISSING( Clothes ) THEN S_Clothes  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Clothes ) THEN S_Clothes = . ;
107251    +   ELSE S_Clothes  =     -2.3113689693832 +     0.04437092805094 * Clothes ;
MPRINT(EM_DIAGRAM):   ELSE S_Clothes = -2.3113689693832 + 0.04437092805094 * Clothes ;
107252    +   IF MISSING( HouseKeeping ) THEN S_HouseKeeping  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( HouseKeeping ) THEN S_HouseKeeping = . ;
107253    +   ELSE S_HouseKeeping  =    -0.93443662367683 +     0.14435178378641 *
107254    +        HouseKeeping ;
MPRINT(EM_DIAGRAM):   ELSE S_HouseKeeping = -0.93443662367683 + 0.14435178378641 * 
HouseKeeping ;
107255    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
107256    +   ELSE S_Mnt  =     -0.9789629518701 +     0.00146441725342 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -0.9789629518701 + 0.00146441725342 * Mnt ;
107257    +   IF MISSING( Rcn ) THEN S_Rcn  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Rcn ) THEN S_Rcn = . ;
107258    +   ELSE S_Rcn  =    -0.88409352592792 +      0.0137435215813 * Rcn ;
MPRINT(EM_DIAGRAM):   ELSE S_Rcn = -0.88409352592792 + 0.0137435215813 * Rcn ;
107259    +   IF MISSING( Recomendation ) THEN S_Recomendation  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recomendation ) THEN S_Recomendation = . ;
107260    +   ELSE S_Recomendation  =    -3.46611377322712 +     0.87281636006383 *
107261    +        Recomendation ;
MPRINT(EM_DIAGRAM):   ELSE S_Recomendation = -3.46611377322712 + 0.87281636006383 * 
Recomendation ;
107262    +   IF MISSING( SmallAppliances ) THEN S_SmallAppliances  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( SmallAppliances ) THEN S_SmallAppliances = . ;
107263    +   ELSE S_SmallAppliances  =    -2.26667909624218 +     0.07979093963203 *
107264    +        SmallAppliances ;
MPRINT(EM_DIAGRAM):   ELSE S_SmallAppliances = -2.26667909624218 + 0.07979093963203 * 
SmallAppliances ;
107265    +   IF MISSING( Toys ) THEN S_Toys  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Toys ) THEN S_Toys = . ;
107266    +   ELSE S_Toys  =    -0.95465683239199 +     0.14741955061838 * Toys ;
MPRINT(EM_DIAGRAM):   ELSE S_Toys = -0.95465683239199 + 0.14741955061838 * Toys ;
107267    +END;
MPRINT(EM_DIAGRAM):   END;
107268    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107269    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
107270    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107271    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107272    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
107273    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107274    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107275    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
107276    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107277    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
107278    +   H11  =     0.18572089848779 * S_CatPurchase  +    -0.26953903486764 *
107279    +        S_Clothes  +    -0.02030295218421 * S_HouseKeeping
107280    +          +     1.08282121245277 * S_Mnt  +    -0.25979965691276 * S_Rcn
107281    +          +     0.44490450701167 * S_Recomendation  +    -0.18814459861569 *
107282    +        S_SmallAppliances  +    -0.57570060208594 * S_Toys ;
MPRINT(EM_DIAGRAM):   H11 = 0.18572089848779 * S_CatPurchase + -0.26953903486764 * S_Clothes + 
-0.02030295218421 * S_HouseKeeping + 1.08282121245277 * S_Mnt + -0.25979965691276 * S_Rcn + 
0.44490450701167 * S_Recomendation + -0.18814459861569 * S_SmallAppliances + -0.57570060208594 
* S_Toys ;
107283    +   H12  =     -0.1212047048021 * S_CatPurchase  +     0.03771814544073 *
107284    +        S_Clothes  +     0.22749663542082 * S_HouseKeeping
107285    +          +    -0.42820959164873 * S_Mnt  +    -0.22990299119502 * S_Rcn
107286    +          +     0.85815096072726 * S_Recomendation  +     0.16022542529137 *
107287    +        S_SmallAppliances  +     0.99582116161525 * S_Toys ;
MPRINT(EM_DIAGRAM):   H12 = -0.1212047048021 * S_CatPurchase + 0.03771814544073 * S_Clothes + 
0.22749663542082 * S_HouseKeeping + -0.42820959164873 * S_Mnt + -0.22990299119502 * S_Rcn + 
0.85815096072726 * S_Recomendation + 0.16022542529137 * S_SmallAppliances + 0.99582116161525 * 
S_Toys ;
107288    +   H13  =    -0.03553873112819 * S_CatPurchase  +    -0.24003602324706 *
107289    +        S_Clothes  +    -0.48669532029485 * S_HouseKeeping
107290    +          +    -0.71218636535185 * S_Mnt  +    -0.40733206469229 * S_Rcn
107291    +          +    -1.57550536212406 * S_Recomendation  +     1.02753075123485 *
107292    +        S_SmallAppliances  +    -0.79856850159513 * S_Toys ;
MPRINT(EM_DIAGRAM):   H13 = -0.03553873112819 * S_CatPurchase + -0.24003602324706 * S_Clothes 
+ -0.48669532029485 * S_HouseKeeping + -0.71218636535185 * S_Mnt + -0.40733206469229 * S_Rcn + 
-1.57550536212406 * S_Recomendation + 1.02753075123485 * S_SmallAppliances + -0.79856850159513 
* S_Toys ;
107293    +   H14  =     -0.1093738896086 * S_CatPurchase  +    -0.06188655408119 *
107294    +        S_Clothes  +    -0.00093570200416 * S_HouseKeeping
107295    +          +     0.11100048256774 * S_Mnt  +    -0.37622324155686 * S_Rcn
107296    +          +     0.50802903345962 * S_Recomendation  +     0.41685389000421 *
107297    +        S_SmallAppliances  +     0.83184191874791 * S_Toys ;
MPRINT(EM_DIAGRAM):   H14 = -0.1093738896086 * S_CatPurchase + -0.06188655408119 * S_Clothes + 
-0.00093570200416 * S_HouseKeeping + 0.11100048256774 * S_Mnt + -0.37622324155686 * S_Rcn + 
0.50802903345962 * S_Recomendation + 0.41685389000421 * S_SmallAppliances + 0.83184191874791 * 
S_Toys ;
107298    +   H11  = H11  +    -0.66206282016358 * Dependents0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.66206282016358 * Dependents0 ;
107299    +   H12  = H12  +    -0.24444127124166 * Dependents0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.24444127124166 * Dependents0 ;
107300    +   H13  = H13  +    -0.37480402525632 * Dependents0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.37480402525632 * Dependents0 ;
107301    +   H14  = H14  +    -0.11939949675789 * Dependents0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.11939949675789 * Dependents0 ;
107302    +   H11  = H11  +    -0.80758384966677 * Marital_StatusDivorced
107303    +          +    -0.06693131813453 * Marital_StatusMarried
107304    +          +    -0.92114950564283 * Marital_StatusSingle
107305    +          +    -0.94999025392943 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.80758384966677 * Marital_StatusDivorced + 
-0.06693131813453 * Marital_StatusMarried + -0.92114950564283 * Marital_StatusSingle + 
-0.94999025392943 * Marital_StatusTogether ;
107306    +   H12  = H12  +    -0.55082238118134 * Marital_StatusDivorced
107307    +          +    -0.39264750361037 * Marital_StatusMarried
107308    +          +    -0.04929662569186 * Marital_StatusSingle
107309    +          +    -0.18326524551436 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.55082238118134 * Marital_StatusDivorced + 
-0.39264750361037 * Marital_StatusMarried + -0.04929662569186 * Marital_StatusSingle + 
-0.18326524551436 * Marital_StatusTogether ;
107310    +   H13  = H13  +      0.2383985287543 * Marital_StatusDivorced
107311    +          +     0.15238070583594 * Marital_StatusMarried
107312    +          +    -1.01845303219882 * Marital_StatusSingle
107313    +          +    -0.65103090338266 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.2383985287543 * Marital_StatusDivorced + 0.15238070583594 
* Marital_StatusMarried + -1.01845303219882 * Marital_StatusSingle + -0.65103090338266 * 
Marital_StatusTogether ;
107314    +   H14  = H14  +     -0.7889761584294 * Marital_StatusDivorced
107315    +          +    -0.90543530513378 * Marital_StatusMarried
107316    +          +    -0.55957748287302 * Marital_StatusSingle
107317    +          +    -0.51011088773334 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.7889761584294 * Marital_StatusDivorced + 
-0.90543530513378 * Marital_StatusMarried + -0.55957748287302 * Marital_StatusSingle + 
-0.51011088773334 * Marital_StatusTogether ;
107318    +   H11  =     0.90043822488498 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.90043822488498 + H11 ;
107319    +   H12  =     0.52046684122025 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.52046684122025 + H12 ;
107320    +   H13  =     1.11009535618234 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.11009535618234 + H13 ;
107321    +   H14  =    -0.16327244022428 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.16327244022428 + H14 ;
107322    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
107323    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
107324    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
107325    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
107326    +END;
MPRINT(EM_DIAGRAM):   END;
107327    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
107328    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
107329    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
107330    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
107331    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
107332    +END;
MPRINT(EM_DIAGRAM):   END;
107333    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107334    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
107335    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107336    +
107337    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
107338    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
107339    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
107340    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
107341    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
107342    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
107343    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
107344    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
107345    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
107346    +end;
MPRINT(EM_DIAGRAM):   end;
107347    +else do;
MPRINT(EM_DIAGRAM):   else do;
107348    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
107349    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
107350    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
107351    +   end;
MPRINT(EM_DIAGRAM):   end;
107352    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
107353    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
107354    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
107355    +   end;
MPRINT(EM_DIAGRAM):   end;
107356    +   else do;
MPRINT(EM_DIAGRAM):   else do;
107357    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
107358    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
107359    +   end;
MPRINT(EM_DIAGRAM):   end;
107360    +end;
MPRINT(EM_DIAGRAM):   end;
107361    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
107362    +   P_DepVar1  =     2.71475758170388 * H11  +     -3.7186442929168 * H12
107363    +          +    -1.61910718920192 * H13  +     2.85370720429597 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.71475758170388 * H11 + -3.7186442929168 * H12 + 
-1.61910718920192 * H13 + 2.85370720429597 * H14 ;
107364    +   P_DepVar1  =    -4.18186032474238 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.18186032474238 + P_DepVar1 ;
107365    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
107366    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
107367    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
107368    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
107369    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
107370    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
107371    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
107372    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
107373    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
107374    +END;
MPRINT(EM_DIAGRAM):   END;
107375    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
107376    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
107377    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
107378    +END;
MPRINT(EM_DIAGRAM):   END;
107379    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
107380    +   P_DepVar1  =     0.06989576946658;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.06989576946658;
107381    +   P_DepVar0  =     0.93010423053341;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.93010423053341;
107382    +END;
MPRINT(EM_DIAGRAM):   END;
107383    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
107384    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
107385    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
107386    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
107387    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
107388    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
107389    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
107390    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107391    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
107392    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107393    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
107394    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
107395    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
107396    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
107397    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
107398    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
107399    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
107400    +END;
MPRINT(EM_DIAGRAM):   END;
107401    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
107402    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
107403    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
107404    +drop
107405    +H11
107406    +H12
107407    +H13
107408    +H14
107409    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
107410    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
107411     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL4_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
107412     quit;
107413     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
107414     filename emflow
107414   ! "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Neural4\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Neural4\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural4: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
107415     *------------------------------------------------------------*;
107416     * Neural4: Scoring VALIDATE data;
107417     *------------------------------------------------------------*;
107418     data EMWS8.Neural4_VALIDATE
107419     / view=EMWS8.Neural4_VALIDATE
107420     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural4_VALIDATE / view=EMWS8.Neural4_VALIDATE ;
107421     set EMWS8.Meta_VALIDATE
107422     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_VALIDATE ;
107423     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Neural4\EMFLOWSCORE.sas.
107424    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
107425    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
107426    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
107427    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
107428    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
107429    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
107430    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
107431    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
107432    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
107433    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
107434    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
107435    +LENGTH _WARN_ $4
107436    +      F_DepVar  $ 12
107437    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
107438    +      label S_CatPurchase = 'Standard: CatPurchase' ;
MPRINT(EM_DIAGRAM):   label S_CatPurchase = 'Standard: CatPurchase' ;
107439    +
107440    +      label S_Clothes = 'Standard: Clothes' ;
MPRINT(EM_DIAGRAM):   label S_Clothes = 'Standard: Clothes' ;
107441    +
107442    +      label S_HouseKeeping = 'Standard: HouseKeeping' ;
MPRINT(EM_DIAGRAM):   label S_HouseKeeping = 'Standard: HouseKeeping' ;
107443    +
107444    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
107445    +
107446    +      label S_Rcn = 'Standard: Rcn' ;
MPRINT(EM_DIAGRAM):   label S_Rcn = 'Standard: Rcn' ;
107447    +
107448    +      label S_Recomendation = 'Standard: Recomendation' ;
MPRINT(EM_DIAGRAM):   label S_Recomendation = 'Standard: Recomendation' ;
107449    +
107450    +      label S_SmallAppliances = 'Standard: SmallAppliances' ;
MPRINT(EM_DIAGRAM):   label S_SmallAppliances = 'Standard: SmallAppliances' ;
107451    +
107452    +      label S_Toys = 'Standard: Toys' ;
MPRINT(EM_DIAGRAM):   label S_Toys = 'Standard: Toys' ;
107453    +
107454    +      label Dependents0 = 'Dummy: Dependents=0' ;
MPRINT(EM_DIAGRAM):   label Dependents0 = 'Dummy: Dependents=0' ;
107455    +
107456    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
107457    +
107458    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
107459    +
107460    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
107461    +
107462    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
107463    +
107464    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
107465    +
107466    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
107467    +
107468    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
107469    +
107470    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
107471    +
107472    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
107473    +
107474    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
107475    +
107476    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
107477    +
107478    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
107479    +
107480    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
107481    +
107482    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
107483    +
107484    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
107485    +
107486    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
107487    +
107488    +*** Generate dummy variables for Dependents ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Dependents ;
107489    +drop Dependents0 ;
MPRINT(EM_DIAGRAM):   drop Dependents0 ;
107490    +if missing( Dependents ) then do;
MPRINT(EM_DIAGRAM):   if missing( Dependents ) then do;
107491    +   Dependents0 = .;
MPRINT(EM_DIAGRAM):   Dependents0 = .;
107492    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
107493    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
107494    +end;
MPRINT(EM_DIAGRAM):   end;
107495    +else do;
MPRINT(EM_DIAGRAM):   else do;
107496    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
107497    +   _dm12 = put( Dependents , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Dependents , BEST. );
107498    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
107499    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
107500    +      Dependents0 = -1;
MPRINT(EM_DIAGRAM):   Dependents0 = -1;
107501    +   end;
MPRINT(EM_DIAGRAM):   end;
107502    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
107503    +      Dependents0 = 1;
MPRINT(EM_DIAGRAM):   Dependents0 = 1;
107504    +   end;
MPRINT(EM_DIAGRAM):   end;
107505    +   else do;
MPRINT(EM_DIAGRAM):   else do;
107506    +      Dependents0 = .;
MPRINT(EM_DIAGRAM):   Dependents0 = .;
107507    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
107508    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
107509    +   end;
MPRINT(EM_DIAGRAM):   end;
107510    +end;
MPRINT(EM_DIAGRAM):   end;
107511    +
107512    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
107513    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
107514    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
107515    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
107516    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
107517    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
107518    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
107519    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
107520    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
107521    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
107522    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
107523    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
107524    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
107525    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
107526    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
107527    +end;
MPRINT(EM_DIAGRAM):   end;
107528    +else do;
MPRINT(EM_DIAGRAM):   else do;
107529    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
107530    +   _dm12 = put( Marital_Status , $12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Marital_Status , $12. );
107531    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
107532    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
107533    +   if _dm12 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= 'SINGLE' then do;
107534    +      if _dm12 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= 'MARRIED' then do;
107535    +         if _dm12 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = 'DIVORCED' then do;
107536    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
107537    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
107538    +         end;
MPRINT(EM_DIAGRAM):   end;
107539    +         else do;
MPRINT(EM_DIAGRAM):   else do;
107540    +            if _dm12 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = 'MARRIED' then do;
107541    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
107542    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
107543    +            end;
MPRINT(EM_DIAGRAM):   end;
107544    +         end;
MPRINT(EM_DIAGRAM):   end;
107545    +      end;
MPRINT(EM_DIAGRAM):   end;
107546    +      else do;
MPRINT(EM_DIAGRAM):   else do;
107547    +         if _dm12 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = 'SINGLE' then do;
107548    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
107549    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
107550    +         end;
MPRINT(EM_DIAGRAM):   end;
107551    +      end;
MPRINT(EM_DIAGRAM):   end;
107552    +   end;
MPRINT(EM_DIAGRAM):   end;
107553    +   else do;
MPRINT(EM_DIAGRAM):   else do;
107554    +      if _dm12 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = 'TOGETHER' then do;
107555    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
107556    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
107557    +      end;
MPRINT(EM_DIAGRAM):   end;
107558    +      else do;
MPRINT(EM_DIAGRAM):   else do;
107559    +         if _dm12 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = 'WIDOW' then do;
107560    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
107561    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
107562    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
107563    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
107564    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
107565    +         end;
MPRINT(EM_DIAGRAM):   end;
107566    +      end;
MPRINT(EM_DIAGRAM):   end;
107567    +   end;
MPRINT(EM_DIAGRAM):   end;
107568    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
107569    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
107570    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
107571    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
107572    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
107573    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
107574    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
107575    +   end;
MPRINT(EM_DIAGRAM):   end;
107576    +end;
MPRINT(EM_DIAGRAM):   end;
107577    +
107578    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107579    +*** Checking missing input Interval
107580    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
107581    +
107582    +IF NMISS(
107583    +   CatPurchase ,
107584    +   Clothes ,
107585    +   HouseKeeping ,
107586    +   Mnt ,
107587    +   Rcn ,
107588    +   Recomendation ,
107589    +   SmallAppliances ,
107590    +   Toys   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( CatPurchase , Clothes , HouseKeeping , Mnt , Rcn , 
Recomendation , SmallAppliances , Toys ) THEN DO;
107591    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
107592    +
107593    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
107594    +END;
MPRINT(EM_DIAGRAM):   END;
107595    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107596    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
107597    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107598    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
107599    +   S_CatPurchase  =    -3.17624192684474 +     0.05492769453828 * CatPurchase
107600    +         ;
MPRINT(EM_DIAGRAM):   S_CatPurchase = -3.17624192684474 + 0.05492769453828 * CatPurchase ;
107601    +   S_Clothes  =     -2.3113689693832 +     0.04437092805094 * Clothes ;
MPRINT(EM_DIAGRAM):   S_Clothes = -2.3113689693832 + 0.04437092805094 * Clothes ;
107602    +   S_HouseKeeping  =    -0.93443662367683 +     0.14435178378641 *
107603    +        HouseKeeping ;
MPRINT(EM_DIAGRAM):   S_HouseKeeping = -0.93443662367683 + 0.14435178378641 * HouseKeeping ;
107604    +   S_Mnt  =     -0.9789629518701 +     0.00146441725342 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -0.9789629518701 + 0.00146441725342 * Mnt ;
107605    +   S_Rcn  =    -0.88409352592792 +      0.0137435215813 * Rcn ;
MPRINT(EM_DIAGRAM):   S_Rcn = -0.88409352592792 + 0.0137435215813 * Rcn ;
107606    +   S_Recomendation  =    -3.46611377322712 +     0.87281636006383 *
107607    +        Recomendation ;
MPRINT(EM_DIAGRAM):   S_Recomendation = -3.46611377322712 + 0.87281636006383 * Recomendation ;
107608    +   S_SmallAppliances  =    -2.26667909624218 +     0.07979093963203 *
107609    +        SmallAppliances ;
MPRINT(EM_DIAGRAM):   S_SmallAppliances = -2.26667909624218 + 0.07979093963203 * 
SmallAppliances ;
107610    +   S_Toys  =    -0.95465683239199 +     0.14741955061838 * Toys ;
MPRINT(EM_DIAGRAM):   S_Toys = -0.95465683239199 + 0.14741955061838 * Toys ;
107611    +END;
MPRINT(EM_DIAGRAM):   END;
107612    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
107613    +   IF MISSING( CatPurchase ) THEN S_CatPurchase  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( CatPurchase ) THEN S_CatPurchase = . ;
107614    +   ELSE S_CatPurchase  =    -3.17624192684474 +     0.05492769453828 *
107615    +        CatPurchase ;
MPRINT(EM_DIAGRAM):   ELSE S_CatPurchase = -3.17624192684474 + 0.05492769453828 * CatPurchase ;
107616    +   IF MISSING( Clothes ) THEN S_Clothes  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Clothes ) THEN S_Clothes = . ;
107617    +   ELSE S_Clothes  =     -2.3113689693832 +     0.04437092805094 * Clothes ;
MPRINT(EM_DIAGRAM):   ELSE S_Clothes = -2.3113689693832 + 0.04437092805094 * Clothes ;
107618    +   IF MISSING( HouseKeeping ) THEN S_HouseKeeping  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( HouseKeeping ) THEN S_HouseKeeping = . ;
107619    +   ELSE S_HouseKeeping  =    -0.93443662367683 +     0.14435178378641 *
107620    +        HouseKeeping ;
MPRINT(EM_DIAGRAM):   ELSE S_HouseKeeping = -0.93443662367683 + 0.14435178378641 * 
HouseKeeping ;
107621    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
107622    +   ELSE S_Mnt  =     -0.9789629518701 +     0.00146441725342 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -0.9789629518701 + 0.00146441725342 * Mnt ;
107623    +   IF MISSING( Rcn ) THEN S_Rcn  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Rcn ) THEN S_Rcn = . ;
107624    +   ELSE S_Rcn  =    -0.88409352592792 +      0.0137435215813 * Rcn ;
MPRINT(EM_DIAGRAM):   ELSE S_Rcn = -0.88409352592792 + 0.0137435215813 * Rcn ;
107625    +   IF MISSING( Recomendation ) THEN S_Recomendation  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recomendation ) THEN S_Recomendation = . ;
107626    +   ELSE S_Recomendation  =    -3.46611377322712 +     0.87281636006383 *
107627    +        Recomendation ;
MPRINT(EM_DIAGRAM):   ELSE S_Recomendation = -3.46611377322712 + 0.87281636006383 * 
Recomendation ;
107628    +   IF MISSING( SmallAppliances ) THEN S_SmallAppliances  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( SmallAppliances ) THEN S_SmallAppliances = . ;
107629    +   ELSE S_SmallAppliances  =    -2.26667909624218 +     0.07979093963203 *
107630    +        SmallAppliances ;
MPRINT(EM_DIAGRAM):   ELSE S_SmallAppliances = -2.26667909624218 + 0.07979093963203 * 
SmallAppliances ;
107631    +   IF MISSING( Toys ) THEN S_Toys  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Toys ) THEN S_Toys = . ;
107632    +   ELSE S_Toys  =    -0.95465683239199 +     0.14741955061838 * Toys ;
MPRINT(EM_DIAGRAM):   ELSE S_Toys = -0.95465683239199 + 0.14741955061838 * Toys ;
107633    +END;
MPRINT(EM_DIAGRAM):   END;
107634    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107635    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
107636    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107637    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107638    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
107639    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107640    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107641    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
107642    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107643    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
107644    +   H11  =     0.18572089848779 * S_CatPurchase  +    -0.26953903486764 *
107645    +        S_Clothes  +    -0.02030295218421 * S_HouseKeeping
107646    +          +     1.08282121245277 * S_Mnt  +    -0.25979965691276 * S_Rcn
107647    +          +     0.44490450701167 * S_Recomendation  +    -0.18814459861569 *
107648    +        S_SmallAppliances  +    -0.57570060208594 * S_Toys ;
MPRINT(EM_DIAGRAM):   H11 = 0.18572089848779 * S_CatPurchase + -0.26953903486764 * S_Clothes + 
-0.02030295218421 * S_HouseKeeping + 1.08282121245277 * S_Mnt + -0.25979965691276 * S_Rcn + 
0.44490450701167 * S_Recomendation + -0.18814459861569 * S_SmallAppliances + -0.57570060208594 
* S_Toys ;
107649    +   H12  =     -0.1212047048021 * S_CatPurchase  +     0.03771814544073 *
107650    +        S_Clothes  +     0.22749663542082 * S_HouseKeeping
107651    +          +    -0.42820959164873 * S_Mnt  +    -0.22990299119502 * S_Rcn
107652    +          +     0.85815096072726 * S_Recomendation  +     0.16022542529137 *
107653    +        S_SmallAppliances  +     0.99582116161525 * S_Toys ;
MPRINT(EM_DIAGRAM):   H12 = -0.1212047048021 * S_CatPurchase + 0.03771814544073 * S_Clothes + 
0.22749663542082 * S_HouseKeeping + -0.42820959164873 * S_Mnt + -0.22990299119502 * S_Rcn + 
0.85815096072726 * S_Recomendation + 0.16022542529137 * S_SmallAppliances + 0.99582116161525 * 
S_Toys ;
107654    +   H13  =    -0.03553873112819 * S_CatPurchase  +    -0.24003602324706 *
107655    +        S_Clothes  +    -0.48669532029485 * S_HouseKeeping
107656    +          +    -0.71218636535185 * S_Mnt  +    -0.40733206469229 * S_Rcn
107657    +          +    -1.57550536212406 * S_Recomendation  +     1.02753075123485 *
107658    +        S_SmallAppliances  +    -0.79856850159513 * S_Toys ;
MPRINT(EM_DIAGRAM):   H13 = -0.03553873112819 * S_CatPurchase + -0.24003602324706 * S_Clothes 
+ -0.48669532029485 * S_HouseKeeping + -0.71218636535185 * S_Mnt + -0.40733206469229 * S_Rcn + 
-1.57550536212406 * S_Recomendation + 1.02753075123485 * S_SmallAppliances + -0.79856850159513 
* S_Toys ;
107659    +   H14  =     -0.1093738896086 * S_CatPurchase  +    -0.06188655408119 *
107660    +        S_Clothes  +    -0.00093570200416 * S_HouseKeeping
107661    +          +     0.11100048256774 * S_Mnt  +    -0.37622324155686 * S_Rcn
107662    +          +     0.50802903345962 * S_Recomendation  +     0.41685389000421 *
107663    +        S_SmallAppliances  +     0.83184191874791 * S_Toys ;
MPRINT(EM_DIAGRAM):   H14 = -0.1093738896086 * S_CatPurchase + -0.06188655408119 * S_Clothes + 
-0.00093570200416 * S_HouseKeeping + 0.11100048256774 * S_Mnt + -0.37622324155686 * S_Rcn + 
0.50802903345962 * S_Recomendation + 0.41685389000421 * S_SmallAppliances + 0.83184191874791 * 
S_Toys ;
107664    +   H11  = H11  +    -0.66206282016358 * Dependents0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.66206282016358 * Dependents0 ;
107665    +   H12  = H12  +    -0.24444127124166 * Dependents0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.24444127124166 * Dependents0 ;
107666    +   H13  = H13  +    -0.37480402525632 * Dependents0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.37480402525632 * Dependents0 ;
107667    +   H14  = H14  +    -0.11939949675789 * Dependents0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.11939949675789 * Dependents0 ;
107668    +   H11  = H11  +    -0.80758384966677 * Marital_StatusDivorced
107669    +          +    -0.06693131813453 * Marital_StatusMarried
107670    +          +    -0.92114950564283 * Marital_StatusSingle
107671    +          +    -0.94999025392943 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.80758384966677 * Marital_StatusDivorced + 
-0.06693131813453 * Marital_StatusMarried + -0.92114950564283 * Marital_StatusSingle + 
-0.94999025392943 * Marital_StatusTogether ;
107672    +   H12  = H12  +    -0.55082238118134 * Marital_StatusDivorced
107673    +          +    -0.39264750361037 * Marital_StatusMarried
107674    +          +    -0.04929662569186 * Marital_StatusSingle
107675    +          +    -0.18326524551436 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.55082238118134 * Marital_StatusDivorced + 
-0.39264750361037 * Marital_StatusMarried + -0.04929662569186 * Marital_StatusSingle + 
-0.18326524551436 * Marital_StatusTogether ;
107676    +   H13  = H13  +      0.2383985287543 * Marital_StatusDivorced
107677    +          +     0.15238070583594 * Marital_StatusMarried
107678    +          +    -1.01845303219882 * Marital_StatusSingle
107679    +          +    -0.65103090338266 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.2383985287543 * Marital_StatusDivorced + 0.15238070583594 
* Marital_StatusMarried + -1.01845303219882 * Marital_StatusSingle + -0.65103090338266 * 
Marital_StatusTogether ;
107680    +   H14  = H14  +     -0.7889761584294 * Marital_StatusDivorced
107681    +          +    -0.90543530513378 * Marital_StatusMarried
107682    +          +    -0.55957748287302 * Marital_StatusSingle
107683    +          +    -0.51011088773334 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.7889761584294 * Marital_StatusDivorced + 
-0.90543530513378 * Marital_StatusMarried + -0.55957748287302 * Marital_StatusSingle + 
-0.51011088773334 * Marital_StatusTogether ;
107684    +   H11  =     0.90043822488498 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.90043822488498 + H11 ;
107685    +   H12  =     0.52046684122025 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.52046684122025 + H12 ;
107686    +   H13  =     1.11009535618234 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.11009535618234 + H13 ;
107687    +   H14  =    -0.16327244022428 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.16327244022428 + H14 ;
107688    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
107689    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
107690    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
107691    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
107692    +END;
MPRINT(EM_DIAGRAM):   END;
107693    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
107694    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
107695    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
107696    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
107697    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
107698    +END;
MPRINT(EM_DIAGRAM):   END;
107699    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107700    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
107701    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107702    +
107703    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
107704    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
107705    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
107706    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
107707    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
107708    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
107709    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
107710    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
107711    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
107712    +end;
MPRINT(EM_DIAGRAM):   end;
107713    +else do;
MPRINT(EM_DIAGRAM):   else do;
107714    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
107715    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
107716    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
107717    +   end;
MPRINT(EM_DIAGRAM):   end;
107718    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
107719    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
107720    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
107721    +   end;
MPRINT(EM_DIAGRAM):   end;
107722    +   else do;
MPRINT(EM_DIAGRAM):   else do;
107723    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
107724    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
107725    +   end;
MPRINT(EM_DIAGRAM):   end;
107726    +end;
MPRINT(EM_DIAGRAM):   end;
107727    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
107728    +   P_DepVar1  =     2.71475758170388 * H11  +     -3.7186442929168 * H12
107729    +          +    -1.61910718920192 * H13  +     2.85370720429597 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.71475758170388 * H11 + -3.7186442929168 * H12 + 
-1.61910718920192 * H13 + 2.85370720429597 * H14 ;
107730    +   P_DepVar1  =    -4.18186032474238 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.18186032474238 + P_DepVar1 ;
107731    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
107732    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
107733    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
107734    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
107735    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
107736    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
107737    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
107738    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
107739    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
107740    +END;
MPRINT(EM_DIAGRAM):   END;
107741    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
107742    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
107743    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
107744    +END;
MPRINT(EM_DIAGRAM):   END;
107745    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
107746    +   P_DepVar1  =     0.06989576946658;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.06989576946658;
107747    +   P_DepVar0  =     0.93010423053341;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.93010423053341;
107748    +END;
MPRINT(EM_DIAGRAM):   END;
107749    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
107750    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
107751    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
107752    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
107753    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
107754    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
107755    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
107756    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107757    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
107758    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107759    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
107760    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
107761    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
107762    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
107763    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
107764    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
107765    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
107766    +END;
MPRINT(EM_DIAGRAM):   END;
107767    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
107768    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
107769    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
107770    +drop
107771    +H11
107772    +H12
107773    +H13
107774    +H14
107775    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
107776    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
107777     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL4_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
107778     quit;
107779     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
107780     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
107781     * Neural4: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural4: Computing metadata for TRAIN data;
107782     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL4_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Neural4\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural4_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural4_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural4_TRAIN out=WORK.M1_HEJSU noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1_HEJSU;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1_HEJSU(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1_HEJSU;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1_HEJSU;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2NPBHD8 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2NPBHD8;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2NPBHD8;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3CD__UX(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2NPBHD8;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2NPBHD8;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2NPBHD8;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2NPBHD8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2NPBHD8;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural4_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural4";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural4";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural4";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural4";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural4";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural4";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural4";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural4";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural4";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural4";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural4: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
108094     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
108095     set EMWS8.Neural4_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural4_EMINFO;
108096     where DATA='Neural4' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural4' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
108097     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL4_EMINFO.
      WHERE (DATA='Neural4') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

108098     data EMWS8.Neural4_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural4_EMINFO;
108099     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
108100     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
108101     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL4_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
108105     run;
108106     data EMWS8.Neural4_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural4_EMINFO;
108107     set EMWS8.Neural4_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural4_EMINFO WORK.MODELTEMP_INFO;
108108     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL4_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL4_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

108109     proc sort data = EMWS8.Neural4_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural4_EMINFO NOTHREADS;
108110     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
108111     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL4_EMINFO.
NOTE: The data set EMWS8.NEURAL4_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

108112     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
108113     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
108114     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

108115     proc sort data = EMWS8.Neural4_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural4_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
108116     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
108117     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL4_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

108118     data EMWS8.Neural4_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural4_EMINFO;
108119     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
108120     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
108121     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL4_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

108122     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
108123     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
108124     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
108125     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.NEURAL4_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      
NOTE: View EMWS8.NEURAL4_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
