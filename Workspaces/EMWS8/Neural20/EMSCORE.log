MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18.53 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                21. April 2016
Time:                18.53 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2RX1FK5 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural20\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2RX1FK5 new;
MPRINT(EM_DIAGRAM):   run;
809372     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
809373     set EMWS8.Neural20_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural20_OUTKEY;
809374     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
809375     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 55 observations read from the data set EMWS8.NEURAL20_OUTKEY.
NOTE: The data set WORK.OUTKEY has 3 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

809376     filename emflow
809376   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural20\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural20\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural20: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
809377     *------------------------------------------------------------*;
809378     * Neural20: Scoring DATA data;
809379     *------------------------------------------------------------*;
809380     data EMWS8.Neural20_TRAIN
809381     / view=EMWS8.Neural20_TRAIN
809382     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural20_TRAIN / view=EMWS8.Neural20_TRAIN ;
809383     set EMWS8.BINNING_TRAIN
809384     ;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_TRAIN ;
809385     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural20\EMFLOWSCORE.sas.
809386    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
809387    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
809388    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
809389    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
809390    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
809391    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
809392    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
809393    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
809394    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
809395    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
809396    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
809397    +LENGTH _WARN_ $4
809398    +      F_DepVar  $ 12
809399    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
809400    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
809401    +
809402    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
809403    +
809404    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
809405    +
809406    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
809407    +
809408    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
809409    +
809410    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
809411    +
809412    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
809413    +
809414    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
809415    +
809416    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
809417    +
809418    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
809419    +
809420    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
809421    +
809422    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
809423    +
809424    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
809425    +
809426    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
809427    +
809428    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
809429    +
809430    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
809431    +
809432    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
809433    +
809434    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
809435    +
809436    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
809437    +
809438    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
809439    +
809440    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
809441    +
809442    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
809443    +
809444    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
809445    +
809446    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
809447    +
809448    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
809449    +
809450    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
809451    +
809452    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
809453    +
809454    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
809455    +
809456    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
809457    +
809458    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
809459    +
809460    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
809461    +
809462    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
809463    +
809464    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
809465    +
809466    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
809467    +
809468    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
809469    +
809470    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
809471    +
809472    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
809473    +
809474    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
809475    +
809476    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
809477    +
809478    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
809479    +
809480    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
809481    +
809482    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
809483    +
809484    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
809485    +
809486    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
809487    +
809488    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
809489    +
809490    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
809491    +
809492    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
809493    +
809494    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
809495    +
809496    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
809497    +
809498    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
809499    +
809500    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
809501    +
809502    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
809503    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
809504    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
809505    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
809506    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
809507    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
809508    +end;
MPRINT(EM_DIAGRAM):   end;
809509    +else do;
MPRINT(EM_DIAGRAM):   else do;
809510    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
809511    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
809512    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
809513    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
809514    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
809515    +   end;
MPRINT(EM_DIAGRAM):   end;
809516    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
809517    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
809518    +   end;
MPRINT(EM_DIAGRAM):   end;
809519    +   else do;
MPRINT(EM_DIAGRAM):   else do;
809520    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
809521    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
809522    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
809523    +   end;
MPRINT(EM_DIAGRAM):   end;
809524    +end;
MPRINT(EM_DIAGRAM):   end;
809525    +
809526    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
809527    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
809528    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
809529    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
809530    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
809531    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
809532    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
809533    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
809534    +end;
MPRINT(EM_DIAGRAM):   end;
809535    +else do;
MPRINT(EM_DIAGRAM):   else do;
809536    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
809537    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
809538    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
809539    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
809540    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
809541    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
809542    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
809543    +   end;
MPRINT(EM_DIAGRAM):   end;
809544    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
809545    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
809546    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
809547    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
809548    +   end;
MPRINT(EM_DIAGRAM):   end;
809549    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
809550    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
809551    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
809552    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
809553    +   end;
MPRINT(EM_DIAGRAM):   end;
809554    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
809555    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
809556    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
809557    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
809558    +   end;
MPRINT(EM_DIAGRAM):   end;
809559    +   else do;
MPRINT(EM_DIAGRAM):   else do;
809560    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
809561    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
809562    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
809563    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
809564    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
809565    +   end;
MPRINT(EM_DIAGRAM):   end;
809566    +end;
MPRINT(EM_DIAGRAM):   end;
809567    +
809568    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
809569    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
809570    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
809571    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
809572    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
809573    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
809574    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
809575    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
809576    +end;
MPRINT(EM_DIAGRAM):   end;
809577    +else do;
MPRINT(EM_DIAGRAM):   else do;
809578    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
809579    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
809580    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
809581    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
809582    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
809583    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
809584    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
809585    +   end;
MPRINT(EM_DIAGRAM):   end;
809586    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
809587    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
809588    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
809589    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
809590    +   end;
MPRINT(EM_DIAGRAM):   end;
809591    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
809592    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
809593    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
809594    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
809595    +   end;
MPRINT(EM_DIAGRAM):   end;
809596    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
809597    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
809598    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
809599    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
809600    +   end;
MPRINT(EM_DIAGRAM):   end;
809601    +   else do;
MPRINT(EM_DIAGRAM):   else do;
809602    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
809603    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
809604    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
809605    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
809606    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
809607    +   end;
MPRINT(EM_DIAGRAM):   end;
809608    +end;
MPRINT(EM_DIAGRAM):   end;
809609    +
809610    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
809611    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
809612    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
809613    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
809614    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
809615    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
809616    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
809617    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
809618    +end;
MPRINT(EM_DIAGRAM):   end;
809619    +else do;
MPRINT(EM_DIAGRAM):   else do;
809620    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
809621    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
809622    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
809623    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
809624    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
809625    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
809626    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
809627    +   end;
MPRINT(EM_DIAGRAM):   end;
809628    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
809629    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
809630    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
809631    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
809632    +   end;
MPRINT(EM_DIAGRAM):   end;
809633    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
809634    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
809635    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
809636    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
809637    +   end;
MPRINT(EM_DIAGRAM):   end;
809638    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
809639    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
809640    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
809641    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
809642    +   end;
MPRINT(EM_DIAGRAM):   end;
809643    +   else do;
MPRINT(EM_DIAGRAM):   else do;
809644    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
809645    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
809646    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
809647    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
809648    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
809649    +   end;
MPRINT(EM_DIAGRAM):   end;
809650    +end;
MPRINT(EM_DIAGRAM):   end;
809651    +
809652    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
809653    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
809654    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
809655    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
809656    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
809657    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
809658    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
809659    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
809660    +end;
MPRINT(EM_DIAGRAM):   end;
809661    +else do;
MPRINT(EM_DIAGRAM):   else do;
809662    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
809663    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
809664    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
809665    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
809666    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
809667    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
809668    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
809669    +   end;
MPRINT(EM_DIAGRAM):   end;
809670    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
809671    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
809672    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
809673    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
809674    +   end;
MPRINT(EM_DIAGRAM):   end;
809675    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
809676    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
809677    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
809678    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
809679    +   end;
MPRINT(EM_DIAGRAM):   end;
809680    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
809681    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
809682    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
809683    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
809684    +   end;
MPRINT(EM_DIAGRAM):   end;
809685    +   else do;
MPRINT(EM_DIAGRAM):   else do;
809686    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
809687    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
809688    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
809689    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
809690    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
809691    +   end;
MPRINT(EM_DIAGRAM):   end;
809692    +end;
MPRINT(EM_DIAGRAM):   end;
809693    +
809694    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
809695    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
809696    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
809697    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
809698    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
809699    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
809700    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
809701    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
809702    +end;
MPRINT(EM_DIAGRAM):   end;
809703    +else do;
MPRINT(EM_DIAGRAM):   else do;
809704    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
809705    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
809706    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
809707    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
809708    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
809709    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
809710    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
809711    +   end;
MPRINT(EM_DIAGRAM):   end;
809712    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
809713    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
809714    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
809715    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
809716    +   end;
MPRINT(EM_DIAGRAM):   end;
809717    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
809718    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
809719    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
809720    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
809721    +   end;
MPRINT(EM_DIAGRAM):   end;
809722    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
809723    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
809724    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
809725    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
809726    +   end;
MPRINT(EM_DIAGRAM):   end;
809727    +   else do;
MPRINT(EM_DIAGRAM):   else do;
809728    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
809729    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
809730    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
809731    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
809732    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
809733    +   end;
MPRINT(EM_DIAGRAM):   end;
809734    +end;
MPRINT(EM_DIAGRAM):   end;
809735    +
809736    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
809737    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
809738    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
809739    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
809740    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
809741    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
809742    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
809743    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
809744    +end;
MPRINT(EM_DIAGRAM):   end;
809745    +else do;
MPRINT(EM_DIAGRAM):   else do;
809746    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
809747    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
809748    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
809749    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
809750    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
809751    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
809752    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
809753    +   end;
MPRINT(EM_DIAGRAM):   end;
809754    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
809755    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
809756    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
809757    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
809758    +   end;
MPRINT(EM_DIAGRAM):   end;
809759    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
809760    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
809761    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
809762    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
809763    +   end;
MPRINT(EM_DIAGRAM):   end;
809764    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
809765    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
809766    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
809767    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
809768    +   end;
MPRINT(EM_DIAGRAM):   end;
809769    +   else do;
MPRINT(EM_DIAGRAM):   else do;
809770    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
809771    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
809772    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
809773    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
809774    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
809775    +   end;
MPRINT(EM_DIAGRAM):   end;
809776    +end;
MPRINT(EM_DIAGRAM):   end;
809777    +
809778    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
809779    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
809780    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
809781    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
809782    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
809783    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
809784    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
809785    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
809786    +end;
MPRINT(EM_DIAGRAM):   end;
809787    +else do;
MPRINT(EM_DIAGRAM):   else do;
809788    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
809789    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
809790    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
809791    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
809792    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
809793    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
809794    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
809795    +   end;
MPRINT(EM_DIAGRAM):   end;
809796    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
809797    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
809798    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
809799    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
809800    +   end;
MPRINT(EM_DIAGRAM):   end;
809801    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
809802    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
809803    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
809804    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
809805    +   end;
MPRINT(EM_DIAGRAM):   end;
809806    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
809807    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
809808    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
809809    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
809810    +   end;
MPRINT(EM_DIAGRAM):   end;
809811    +   else do;
MPRINT(EM_DIAGRAM):   else do;
809812    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
809813    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
809814    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
809815    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
809816    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
809817    +   end;
MPRINT(EM_DIAGRAM):   end;
809818    +end;
MPRINT(EM_DIAGRAM):   end;
809819    +
809820    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
809821    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
809822    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
809823    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
809824    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
809825    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
809826    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
809827    +end;
MPRINT(EM_DIAGRAM):   end;
809828    +else do;
MPRINT(EM_DIAGRAM):   else do;
809829    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
809830    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
809831    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
809832    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
809833    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
809834    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
809835    +   end;
MPRINT(EM_DIAGRAM):   end;
809836    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
809837    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
809838    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
809839    +   end;
MPRINT(EM_DIAGRAM):   end;
809840    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
809841    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
809842    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
809843    +   end;
MPRINT(EM_DIAGRAM):   end;
809844    +   else do;
MPRINT(EM_DIAGRAM):   else do;
809845    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
809846    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
809847    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
809848    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
809849    +   end;
MPRINT(EM_DIAGRAM):   end;
809850    +end;
MPRINT(EM_DIAGRAM):   end;
809851    +
809852    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
809853    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
809854    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
809855    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
809856    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
809857    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
809858    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
809859    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
809860    +end;
MPRINT(EM_DIAGRAM):   end;
809861    +else do;
MPRINT(EM_DIAGRAM):   else do;
809862    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
809863    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
809864    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
809865    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
809866    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
809867    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
809868    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
809869    +   end;
MPRINT(EM_DIAGRAM):   end;
809870    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
809871    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
809872    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
809873    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
809874    +   end;
MPRINT(EM_DIAGRAM):   end;
809875    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
809876    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
809877    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
809878    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
809879    +   end;
MPRINT(EM_DIAGRAM):   end;
809880    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
809881    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
809882    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
809883    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
809884    +   end;
MPRINT(EM_DIAGRAM):   end;
809885    +   else do;
MPRINT(EM_DIAGRAM):   else do;
809886    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
809887    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
809888    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
809889    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
809890    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
809891    +   end;
MPRINT(EM_DIAGRAM):   end;
809892    +end;
MPRINT(EM_DIAGRAM):   end;
809893    +
809894    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
809895    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
809896    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
809897    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
809898    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
809899    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
809900    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
809901    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
809902    +end;
MPRINT(EM_DIAGRAM):   end;
809903    +else do;
MPRINT(EM_DIAGRAM):   else do;
809904    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
809905    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
809906    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
809907    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
809908    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
809909    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
809910    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
809911    +   end;
MPRINT(EM_DIAGRAM):   end;
809912    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
809913    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
809914    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
809915    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
809916    +   end;
MPRINT(EM_DIAGRAM):   end;
809917    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
809918    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
809919    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
809920    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
809921    +   end;
MPRINT(EM_DIAGRAM):   end;
809922    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
809923    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
809924    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
809925    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
809926    +   end;
MPRINT(EM_DIAGRAM):   end;
809927    +   else do;
MPRINT(EM_DIAGRAM):   else do;
809928    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
809929    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
809930    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
809931    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
809932    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
809933    +   end;
MPRINT(EM_DIAGRAM):   end;
809934    +end;
MPRINT(EM_DIAGRAM):   end;
809935    +
809936    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
809937    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
809938    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
809939    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
809940    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
809941    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
809942    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
809943    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
809944    +end;
MPRINT(EM_DIAGRAM):   end;
809945    +else do;
MPRINT(EM_DIAGRAM):   else do;
809946    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
809947    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
809948    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
809949    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
809950    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
809951    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
809952    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
809953    +   end;
MPRINT(EM_DIAGRAM):   end;
809954    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
809955    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
809956    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
809957    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
809958    +   end;
MPRINT(EM_DIAGRAM):   end;
809959    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
809960    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
809961    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
809962    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
809963    +   end;
MPRINT(EM_DIAGRAM):   end;
809964    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
809965    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
809966    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
809967    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
809968    +   end;
MPRINT(EM_DIAGRAM):   end;
809969    +   else do;
MPRINT(EM_DIAGRAM):   else do;
809970    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
809971    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
809972    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
809973    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
809974    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
809975    +   end;
MPRINT(EM_DIAGRAM):   end;
809976    +end;
MPRINT(EM_DIAGRAM):   end;
809977    +
809978    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
809979    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
809980    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
809981    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
809982    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
809983    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
809984    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
809985    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
809986    +end;
MPRINT(EM_DIAGRAM):   end;
809987    +else do;
MPRINT(EM_DIAGRAM):   else do;
809988    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
809989    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
809990    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
809991    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
809992    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
809993    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
809994    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
809995    +   end;
MPRINT(EM_DIAGRAM):   end;
809996    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
809997    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
809998    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
809999    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
810000    +   end;
MPRINT(EM_DIAGRAM):   end;
810001    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
810002    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
810003    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
810004    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
810005    +   end;
MPRINT(EM_DIAGRAM):   end;
810006    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
810007    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
810008    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
810009    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
810010    +   end;
MPRINT(EM_DIAGRAM):   end;
810011    +   else do;
MPRINT(EM_DIAGRAM):   else do;
810012    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
810013    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
810014    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
810015    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
810016    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
810017    +   end;
MPRINT(EM_DIAGRAM):   end;
810018    +end;
MPRINT(EM_DIAGRAM):   end;
810019    +
810020    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
810021    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
810022    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
810023    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
810024    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
810025    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
810026    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
810027    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
810028    +end;
MPRINT(EM_DIAGRAM):   end;
810029    +else do;
MPRINT(EM_DIAGRAM):   else do;
810030    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
810031    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
810032    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
810033    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
810034    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
810035    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
810036    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
810037    +   end;
MPRINT(EM_DIAGRAM):   end;
810038    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
810039    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
810040    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
810041    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
810042    +   end;
MPRINT(EM_DIAGRAM):   end;
810043    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
810044    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
810045    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
810046    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
810047    +   end;
MPRINT(EM_DIAGRAM):   end;
810048    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
810049    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
810050    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
810051    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
810052    +   end;
MPRINT(EM_DIAGRAM):   end;
810053    +   else do;
MPRINT(EM_DIAGRAM):   else do;
810054    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
810055    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
810056    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
810057    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
810058    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
810059    +   end;
MPRINT(EM_DIAGRAM):   end;
810060    +end;
MPRINT(EM_DIAGRAM):   end;
810061    +
810062    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
810063    +*** Checking missing input Interval
810064    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
810065    +
810066    +IF NMISS(
810067    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
810068    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
810069    +
810070    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
810071    +END;
MPRINT(EM_DIAGRAM):   END;
810072    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
810073    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
810074    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
810075    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
810076    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
810077    +END;
MPRINT(EM_DIAGRAM):   END;
810078    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
810079    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
810080    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
810081    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
810082    +END;
MPRINT(EM_DIAGRAM):   END;
810083    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
810084    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
810085    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
810086    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
810087    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
810088    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
810089    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
810090    +   H11  =    -0.41939883149261 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = -0.41939883149261 * S_Year_Birth ;
810091    +   H12  =    -0.11064938192918 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = -0.11064938192918 * S_Year_Birth ;
810092    +   H13  =    -0.06467031288187 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = -0.06467031288187 * S_Year_Birth ;
810093    +   H11  = H11  +     0.35448004105908 * GRP_AcceptedCmp52
810094    +          +     -0.0918084964279 * GRP_Frq2  +    -0.23985284532042 * GRP_Frq3
810095    +          +     0.05570802281486 * GRP_Frq4  +     -0.3547598798301 *
810096    +        GRP_Income2  +    -0.33962703607715 * GRP_Income3
810097    +          +     0.12436841230863 * GRP_Income4  +    -0.01455143009771 *
810098    +        GRP_Mnt2  +     0.10120972709945 * GRP_Mnt3  +     -0.0249155152295 *
810099    +        GRP_Mnt4  +      -0.269333013942 * GRP_MntFishProducts2
810100    +          +     0.05785555057946 * GRP_MntFishProducts3
810101    +          +    -0.13000426565494 * GRP_MntFishProducts4
810102    +          +     0.17862455375899 * GRP_MntGoldProds2
810103    +          +     0.06257016564867 * GRP_MntGoldProds3
810104    +          +     0.20249370161035 * GRP_MntGoldProds4
810105    +          +     0.32678386182233 * GRP_MntMeatProducts2
810106    +          +      0.3373259079058 * GRP_MntMeatProducts3
810107    +          +     0.28061036187325 * GRP_MntMeatProducts4
810108    +          +    -0.03272437686392 * GRP_MntWines2  +    -0.21202325680638 *
810109    +        GRP_MntWines3  +      0.3424605103125 * GRP_MntWines4
810110    +          +     0.18542181546309 * GRP_NumCatalogPurchases3
810111    +          +     0.14594977072698 * GRP_NumCatalogPurchases4
810112    +          +     0.20431880618842 * GRP_NumDistPurchases2
810113    +          +    -0.15119714667229 * GRP_NumDistPurchases3
810114    +          +     0.19430353652214 * GRP_NumDistPurchases4
810115    +          +     0.04685341709526 * GRP_NumWebPurchases2
810116    +          +    -0.06094487598588 * GRP_NumWebPurchases3
810117    +          +    -0.04237233324733 * GRP_NumWebPurchases4
810118    +          +    -0.08991829185393 * GRP_RFMstat2  +    -0.07347809144281 *
810119    +        GRP_RFMstat3  +     -0.4341534715985 * GRP_RFMstat4
810120    +          +     -0.0196197195217 * GRP_RMntFrq2  +     0.12097540554524 *
810121    +        GRP_RMntFrq3  +     0.26057062278983 * GRP_RMntFrq4
810122    +          +    -0.63029497931535 * GRP_Recency2  +    -0.41040165908214 *
810123    +        GRP_Recency3  +     0.03209060504164 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.35448004105908 * GRP_AcceptedCmp52 + -0.0918084964279 * 
GRP_Frq2 + -0.23985284532042 * GRP_Frq3 + 0.05570802281486 * GRP_Frq4 + -0.3547598798301 * 
GRP_Income2 + -0.33962703607715 * GRP_Income3 + 0.12436841230863 * GRP_Income4 + 
-0.01455143009771 * GRP_Mnt2 + 0.10120972709945 * GRP_Mnt3 + -0.0249155152295 * GRP_Mnt4 + 
-0.269333013942 * GRP_MntFishProducts2 + 0.05785555057946 * GRP_MntFishProducts3 + 
-0.13000426565494 * GRP_MntFishProducts4 + 0.17862455375899 * GRP_MntGoldProds2 + 
0.06257016564867 * GRP_MntGoldProds3 + 0.20249370161035 * GRP_MntGoldProds4 + 0.32678386182233 
* GRP_MntMeatProducts2 + 0.3373259079058 * GRP_MntMeatProducts3 + 0.28061036187325 * 
GRP_MntMeatProducts4 + -0.03272437686392 * GRP_MntWines2 + -0.21202325680638 * GRP_MntWines3 + 
0.3424605103125 * GRP_MntWines4 + 0.18542181546309 * GRP_NumCatalogPurchases3 + 
0.14594977072698 * GRP_NumCatalogPurchases4 + 0.20431880618842 * GRP_NumDistPurchases2 + 
-0.15119714667229 * GRP_NumDistPurchases3 + 0.19430353652214 * GRP_NumDistPurchases4 + 
0.04685341709526 * GRP_NumWebPurchases2 + -0.06094487598588 * GRP_NumWebPurchases3 + 
-0.04237233324733 * GRP_NumWebPurchases4 + -0.08991829185393 * GRP_RFMstat2 + 
-0.07347809144281 * GRP_RFMstat3 + -0.4341534715985 * GRP_RFMstat4 + -0.0196197195217 * 
GRP_RMntFrq2 + 0.12097540554524 * GRP_RMntFrq3 + 0.26057062278983 * GRP_RMntFrq4 + 
-0.63029497931535 * GRP_Recency2 + -0.41040165908214 * GRP_Recency3 + 0.03209060504164 * 
GRP_Recency4 ;
810124    +   H12  = H12  +    -0.16182441315567 * GRP_AcceptedCmp52
810125    +          +     0.17228162466334 * GRP_Frq2  +     0.15132687990319 * GRP_Frq3
810126    +          +     -0.1689155033241 * GRP_Frq4  +     0.15149901619495 *
810127    +        GRP_Income2  +     0.17788129654866 * GRP_Income3
810128    +          +     0.05923547318389 * GRP_Income4  +    -0.08355004275991 *
810129    +        GRP_Mnt2  +     0.02631246580002 * GRP_Mnt3  +     -0.2309890088856 *
810130    +        GRP_Mnt4  +     0.14312480402918 * GRP_MntFishProducts2
810131    +          +     -0.2578736956972 * GRP_MntFishProducts3
810132    +          +     0.18402620335031 * GRP_MntFishProducts4
810133    +          +     0.05242149290227 * GRP_MntGoldProds2
810134    +          +    -0.21803869063517 * GRP_MntGoldProds3
810135    +          +     0.13815635816146 * GRP_MntGoldProds4
810136    +          +    -0.27330809721997 * GRP_MntMeatProducts2
810137    +          +    -0.21530314028526 * GRP_MntMeatProducts3
810138    +          +     0.02052103215709 * GRP_MntMeatProducts4
810139    +          +    -0.12650113568762 * GRP_MntWines2  +     0.11322482902275 *
810140    +        GRP_MntWines3  +    -0.27438926594633 * GRP_MntWines4
810141    +          +    -0.54784157827091 * GRP_NumCatalogPurchases3
810142    +          +    -0.08859032150825 * GRP_NumCatalogPurchases4
810143    +          +     -0.1595237277506 * GRP_NumDistPurchases2
810144    +          +     0.00057390274989 * GRP_NumDistPurchases3
810145    +          +     -0.1082308524036 * GRP_NumDistPurchases4
810146    +          +     0.08795971555231 * GRP_NumWebPurchases2
810147    +          +    -0.23666817227274 * GRP_NumWebPurchases3
810148    +          +     0.01490866706276 * GRP_NumWebPurchases4
810149    +          +    -0.00588866906818 * GRP_RFMstat2  +    -0.01109150017006 *
810150    +        GRP_RFMstat3  +    -0.00327834027258 * GRP_RFMstat4
810151    +          +     0.04028767653615 * GRP_RMntFrq2  +     -0.0163649640466 *
810152    +        GRP_RMntFrq3  +    -0.07601316125357 * GRP_RMntFrq4
810153    +          +     0.66228536796217 * GRP_Recency2  +     0.48287342862457 *
810154    +        GRP_Recency3  +    -0.03032773010646 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.16182441315567 * GRP_AcceptedCmp52 + 0.17228162466334 * 
GRP_Frq2 + 0.15132687990319 * GRP_Frq3 + -0.1689155033241 * GRP_Frq4 + 0.15149901619495 * 
GRP_Income2 + 0.17788129654866 * GRP_Income3 + 0.05923547318389 * GRP_Income4 + 
-0.08355004275991 * GRP_Mnt2 + 0.02631246580002 * GRP_Mnt3 + -0.2309890088856 * GRP_Mnt4 + 
0.14312480402918 * GRP_MntFishProducts2 + -0.2578736956972 * GRP_MntFishProducts3 + 
0.18402620335031 * GRP_MntFishProducts4 + 0.05242149290227 * GRP_MntGoldProds2 + 
-0.21803869063517 * GRP_MntGoldProds3 + 0.13815635816146 * GRP_MntGoldProds4 + 
-0.27330809721997 * GRP_MntMeatProducts2 + -0.21530314028526 * GRP_MntMeatProducts3 + 
0.02052103215709 * GRP_MntMeatProducts4 + -0.12650113568762 * GRP_MntWines2 + 0.11322482902275 
* GRP_MntWines3 + -0.27438926594633 * GRP_MntWines4 + -0.54784157827091 * 
GRP_NumCatalogPurchases3 + -0.08859032150825 * GRP_NumCatalogPurchases4 + -0.1595237277506 * 
GRP_NumDistPurchases2 + 0.00057390274989 * GRP_NumDistPurchases3 + -0.1082308524036 * 
GRP_NumDistPurchases4 + 0.08795971555231 * GRP_NumWebPurchases2 + -0.23666817227274 * 
GRP_NumWebPurchases3 + 0.01490866706276 * GRP_NumWebPurchases4 + -0.00588866906818 * 
GRP_RFMstat2 + -0.01109150017006 * GRP_RFMstat3 + -0.00327834027258 * GRP_RFMstat4 + 
0.04028767653615 * GRP_RMntFrq2 + -0.0163649640466 * GRP_RMntFrq3 + -0.07601316125357 * 
GRP_RMntFrq4 + 0.66228536796217 * GRP_Recency2 + 0.48287342862457 * GRP_Recency3 + 
-0.03032773010646 * GRP_Recency4 ;
810155    +   H13  = H13  +    -0.76222121025234 * GRP_AcceptedCmp52
810156    +          +     0.36511613420086 * GRP_Frq2  +    -0.02961648849396 * GRP_Frq3
810157    +          +     0.08263295800576 * GRP_Frq4  +     0.53248885273716 *
810158    +        GRP_Income2  +     0.58143836248256 * GRP_Income3
810159    +          +     -0.6819044946332 * GRP_Income4  +     0.09969835343923 *
810160    +        GRP_Mnt2  +     0.22681708558976 * GRP_Mnt3  +    -0.05933156304489 *
810161    +        GRP_Mnt4  +      0.3115929057885 * GRP_MntFishProducts2
810162    +          +     0.20656815909058 * GRP_MntFishProducts3
810163    +          +    -0.18100587726033 * GRP_MntFishProducts4
810164    +          +    -0.26082445403302 * GRP_MntGoldProds2
810165    +          +     0.05485426947921 * GRP_MntGoldProds3
810166    +          +     0.09168468833046 * GRP_MntGoldProds4
810167    +          +    -0.26764306152541 * GRP_MntMeatProducts2
810168    +          +    -0.05251001605784 * GRP_MntMeatProducts3
810169    +          +     0.29225259283913 * GRP_MntMeatProducts4
810170    +          +     0.61402400906277 * GRP_MntWines2  +     0.18145923811098 *
810171    +        GRP_MntWines3  +    -0.04337923172483 * GRP_MntWines4
810172    +          +    -0.72349314013585 * GRP_NumCatalogPurchases3
810173    +          +     0.14875924587174 * GRP_NumCatalogPurchases4
810174    +          +    -0.74484872686794 * GRP_NumDistPurchases2
810175    +          +    -0.21410281712514 * GRP_NumDistPurchases3
810176    +          +     0.04732133485671 * GRP_NumDistPurchases4
810177    +          +     -0.1068322737335 * GRP_NumWebPurchases2
810178    +          +     0.16615642908107 * GRP_NumWebPurchases3
810179    +          +     0.06510367246629 * GRP_NumWebPurchases4
810180    +          +    -0.32688260466431 * GRP_RFMstat2  +    -0.18733405583331 *
810181    +        GRP_RFMstat3  +     -0.2070438751052 * GRP_RFMstat4
810182    +          +     0.00135495431586 * GRP_RMntFrq2  +     0.14594289041413 *
810183    +        GRP_RMntFrq3  +    -0.22868347656723 * GRP_RMntFrq4
810184    +          +     0.85583167880584 * GRP_Recency2  +     0.12194433799934 *
810185    +        GRP_Recency3  +    -0.40666493945855 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.76222121025234 * GRP_AcceptedCmp52 + 0.36511613420086 * 
GRP_Frq2 + -0.02961648849396 * GRP_Frq3 + 0.08263295800576 * GRP_Frq4 + 0.53248885273716 * 
GRP_Income2 + 0.58143836248256 * GRP_Income3 + -0.6819044946332 * GRP_Income4 + 
0.09969835343923 * GRP_Mnt2 + 0.22681708558976 * GRP_Mnt3 + -0.05933156304489 * GRP_Mnt4 + 
0.3115929057885 * GRP_MntFishProducts2 + 0.20656815909058 * GRP_MntFishProducts3 + 
-0.18100587726033 * GRP_MntFishProducts4 + -0.26082445403302 * GRP_MntGoldProds2 + 
0.05485426947921 * GRP_MntGoldProds3 + 0.09168468833046 * GRP_MntGoldProds4 + 
-0.26764306152541 * GRP_MntMeatProducts2 + -0.05251001605784 * GRP_MntMeatProducts3 + 
0.29225259283913 * GRP_MntMeatProducts4 + 0.61402400906277 * GRP_MntWines2 + 0.18145923811098 
* GRP_MntWines3 + -0.04337923172483 * GRP_MntWines4 + -0.72349314013585 * 
GRP_NumCatalogPurchases3 + 0.14875924587174 * GRP_NumCatalogPurchases4 + -0.74484872686794 * 
GRP_NumDistPurchases2 + -0.21410281712514 * GRP_NumDistPurchases3 + 0.04732133485671 * 
GRP_NumDistPurchases4 + -0.1068322737335 * GRP_NumWebPurchases2 + 0.16615642908107 * 
GRP_NumWebPurchases3 + 0.06510367246629 * GRP_NumWebPurchases4 + -0.32688260466431 * 
GRP_RFMstat2 + -0.18733405583331 * GRP_RFMstat3 + -0.2070438751052 * GRP_RFMstat4 + 
0.00135495431586 * GRP_RMntFrq2 + 0.14594289041413 * GRP_RMntFrq3 + -0.22868347656723 * 
GRP_RMntFrq4 + 0.85583167880584 * GRP_Recency2 + 0.12194433799934 * GRP_Recency3 + 
-0.40666493945855 * GRP_Recency4 ;
810186    +   H11  =    -0.47589199029932 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.47589199029932 + H11 ;
810187    +   H12  =    -0.33973735112712 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.33973735112712 + H12 ;
810188    +   H13  =     0.16076842495153 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.16076842495153 + H13 ;
810189    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
810190    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
810191    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
810192    +END;
MPRINT(EM_DIAGRAM):   END;
810193    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
810194    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
810195    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
810196    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
810197    +END;
MPRINT(EM_DIAGRAM):   END;
810198    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
810199    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
810200    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
810201    +
810202    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
810203    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
810204    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
810205    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
810206    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
810207    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
810208    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
810209    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
810210    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
810211    +end;
MPRINT(EM_DIAGRAM):   end;
810212    +else do;
MPRINT(EM_DIAGRAM):   else do;
810213    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
810214    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
810215    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
810216    +   end;
MPRINT(EM_DIAGRAM):   end;
810217    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
810218    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
810219    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
810220    +   end;
MPRINT(EM_DIAGRAM):   end;
810221    +   else do;
MPRINT(EM_DIAGRAM):   else do;
810222    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
810223    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
810224    +   end;
MPRINT(EM_DIAGRAM):   end;
810225    +end;
MPRINT(EM_DIAGRAM):   end;
810226    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
810227    +   P_DepVar1  =    -1.16415993584169 * H11  +     0.57209582268762 * H12
810228    +          +     1.90916164841558 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.16415993584169 * H11 + 0.57209582268762 * H12 + 
1.90916164841558 * H13 ;
810229    +   P_DepVar1  =    -1.85769338519577 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.85769338519577 + P_DepVar1 ;
810230    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
810231    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
810232    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
810233    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
810234    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
810235    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
810236    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
810237    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
810238    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
810239    +END;
MPRINT(EM_DIAGRAM):   END;
810240    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
810241    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
810242    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
810243    +END;
MPRINT(EM_DIAGRAM):   END;
810244    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
810245    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
810246    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
810247    +END;
MPRINT(EM_DIAGRAM):   END;
810248    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
810249    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
810250    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
810251    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
810252    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
810253    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
810254    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
810255    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
810256    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
810257    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
810258    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
810259    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
810260    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
810261    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
810262    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
810263    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
810264    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
810265    +END;
MPRINT(EM_DIAGRAM):   END;
810266    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
810267    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
810268    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
810269    +drop
810270    +H11
810271    +H12
810272    +H13
810273    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
810274    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
810275     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL20_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
810276     quit;
810277     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
810278     filename emflow
810278   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural20\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural20\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural20: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
810279     *------------------------------------------------------------*;
810280     * Neural20: Scoring VALIDATE data;
810281     *------------------------------------------------------------*;
810282     data EMWS8.Neural20_VALIDATE
810283     / view=EMWS8.Neural20_VALIDATE
810284     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural20_VALIDATE / view=EMWS8.Neural20_VALIDATE ;
810285     set EMWS8.BINNING_VALIDATE
810286     ;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_VALIDATE ;
810287     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural20\EMFLOWSCORE.sas.
810288    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
810289    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
810290    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
810291    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
810292    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
810293    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
810294    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
810295    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
810296    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
810297    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
810298    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
810299    +LENGTH _WARN_ $4
810300    +      F_DepVar  $ 12
810301    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
810302    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
810303    +
810304    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
810305    +
810306    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
810307    +
810308    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
810309    +
810310    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
810311    +
810312    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
810313    +
810314    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
810315    +
810316    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
810317    +
810318    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
810319    +
810320    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
810321    +
810322    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
810323    +
810324    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
810325    +
810326    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
810327    +
810328    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
810329    +
810330    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
810331    +
810332    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
810333    +
810334    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
810335    +
810336    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
810337    +
810338    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
810339    +
810340    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
810341    +
810342    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
810343    +
810344    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
810345    +
810346    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
810347    +
810348    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
810349    +
810350    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
810351    +
810352    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
810353    +
810354    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
810355    +
810356    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
810357    +
810358    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
810359    +
810360    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
810361    +
810362    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
810363    +
810364    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
810365    +
810366    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
810367    +
810368    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
810369    +
810370    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
810371    +
810372    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
810373    +
810374    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
810375    +
810376    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
810377    +
810378    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
810379    +
810380    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
810381    +
810382    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
810383    +
810384    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
810385    +
810386    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
810387    +
810388    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
810389    +
810390    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
810391    +
810392    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
810393    +
810394    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
810395    +
810396    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
810397    +
810398    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
810399    +
810400    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
810401    +
810402    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
810403    +
810404    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
810405    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
810406    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
810407    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
810408    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
810409    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
810410    +end;
MPRINT(EM_DIAGRAM):   end;
810411    +else do;
MPRINT(EM_DIAGRAM):   else do;
810412    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
810413    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
810414    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
810415    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
810416    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
810417    +   end;
MPRINT(EM_DIAGRAM):   end;
810418    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
810419    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
810420    +   end;
MPRINT(EM_DIAGRAM):   end;
810421    +   else do;
MPRINT(EM_DIAGRAM):   else do;
810422    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
810423    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
810424    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
810425    +   end;
MPRINT(EM_DIAGRAM):   end;
810426    +end;
MPRINT(EM_DIAGRAM):   end;
810427    +
810428    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
810429    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
810430    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
810431    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
810432    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
810433    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
810434    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
810435    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
810436    +end;
MPRINT(EM_DIAGRAM):   end;
810437    +else do;
MPRINT(EM_DIAGRAM):   else do;
810438    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
810439    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
810440    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
810441    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
810442    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
810443    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
810444    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
810445    +   end;
MPRINT(EM_DIAGRAM):   end;
810446    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
810447    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
810448    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
810449    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
810450    +   end;
MPRINT(EM_DIAGRAM):   end;
810451    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
810452    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
810453    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
810454    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
810455    +   end;
MPRINT(EM_DIAGRAM):   end;
810456    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
810457    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
810458    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
810459    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
810460    +   end;
MPRINT(EM_DIAGRAM):   end;
810461    +   else do;
MPRINT(EM_DIAGRAM):   else do;
810462    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
810463    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
810464    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
810465    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
810466    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
810467    +   end;
MPRINT(EM_DIAGRAM):   end;
810468    +end;
MPRINT(EM_DIAGRAM):   end;
810469    +
810470    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
810471    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
810472    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
810473    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
810474    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
810475    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
810476    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
810477    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
810478    +end;
MPRINT(EM_DIAGRAM):   end;
810479    +else do;
MPRINT(EM_DIAGRAM):   else do;
810480    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
810481    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
810482    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
810483    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
810484    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
810485    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
810486    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
810487    +   end;
MPRINT(EM_DIAGRAM):   end;
810488    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
810489    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
810490    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
810491    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
810492    +   end;
MPRINT(EM_DIAGRAM):   end;
810493    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
810494    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
810495    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
810496    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
810497    +   end;
MPRINT(EM_DIAGRAM):   end;
810498    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
810499    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
810500    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
810501    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
810502    +   end;
MPRINT(EM_DIAGRAM):   end;
810503    +   else do;
MPRINT(EM_DIAGRAM):   else do;
810504    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
810505    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
810506    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
810507    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
810508    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
810509    +   end;
MPRINT(EM_DIAGRAM):   end;
810510    +end;
MPRINT(EM_DIAGRAM):   end;
810511    +
810512    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
810513    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
810514    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
810515    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
810516    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
810517    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
810518    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
810519    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
810520    +end;
MPRINT(EM_DIAGRAM):   end;
810521    +else do;
MPRINT(EM_DIAGRAM):   else do;
810522    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
810523    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
810524    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
810525    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
810526    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
810527    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
810528    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
810529    +   end;
MPRINT(EM_DIAGRAM):   end;
810530    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
810531    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
810532    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
810533    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
810534    +   end;
MPRINT(EM_DIAGRAM):   end;
810535    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
810536    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
810537    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
810538    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
810539    +   end;
MPRINT(EM_DIAGRAM):   end;
810540    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
810541    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
810542    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
810543    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
810544    +   end;
MPRINT(EM_DIAGRAM):   end;
810545    +   else do;
MPRINT(EM_DIAGRAM):   else do;
810546    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
810547    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
810548    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
810549    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
810550    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
810551    +   end;
MPRINT(EM_DIAGRAM):   end;
810552    +end;
MPRINT(EM_DIAGRAM):   end;
810553    +
810554    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
810555    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
810556    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
810557    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
810558    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
810559    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
810560    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
810561    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
810562    +end;
MPRINT(EM_DIAGRAM):   end;
810563    +else do;
MPRINT(EM_DIAGRAM):   else do;
810564    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
810565    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
810566    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
810567    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
810568    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
810569    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
810570    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
810571    +   end;
MPRINT(EM_DIAGRAM):   end;
810572    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
810573    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
810574    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
810575    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
810576    +   end;
MPRINT(EM_DIAGRAM):   end;
810577    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
810578    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
810579    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
810580    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
810581    +   end;
MPRINT(EM_DIAGRAM):   end;
810582    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
810583    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
810584    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
810585    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
810586    +   end;
MPRINT(EM_DIAGRAM):   end;
810587    +   else do;
MPRINT(EM_DIAGRAM):   else do;
810588    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
810589    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
810590    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
810591    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
810592    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
810593    +   end;
MPRINT(EM_DIAGRAM):   end;
810594    +end;
MPRINT(EM_DIAGRAM):   end;
810595    +
810596    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
810597    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
810598    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
810599    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
810600    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
810601    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
810602    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
810603    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
810604    +end;
MPRINT(EM_DIAGRAM):   end;
810605    +else do;
MPRINT(EM_DIAGRAM):   else do;
810606    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
810607    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
810608    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
810609    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
810610    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
810611    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
810612    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
810613    +   end;
MPRINT(EM_DIAGRAM):   end;
810614    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
810615    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
810616    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
810617    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
810618    +   end;
MPRINT(EM_DIAGRAM):   end;
810619    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
810620    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
810621    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
810622    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
810623    +   end;
MPRINT(EM_DIAGRAM):   end;
810624    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
810625    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
810626    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
810627    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
810628    +   end;
MPRINT(EM_DIAGRAM):   end;
810629    +   else do;
MPRINT(EM_DIAGRAM):   else do;
810630    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
810631    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
810632    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
810633    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
810634    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
810635    +   end;
MPRINT(EM_DIAGRAM):   end;
810636    +end;
MPRINT(EM_DIAGRAM):   end;
810637    +
810638    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
810639    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
810640    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
810641    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
810642    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
810643    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
810644    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
810645    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
810646    +end;
MPRINT(EM_DIAGRAM):   end;
810647    +else do;
MPRINT(EM_DIAGRAM):   else do;
810648    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
810649    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
810650    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
810651    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
810652    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
810653    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
810654    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
810655    +   end;
MPRINT(EM_DIAGRAM):   end;
810656    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
810657    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
810658    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
810659    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
810660    +   end;
MPRINT(EM_DIAGRAM):   end;
810661    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
810662    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
810663    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
810664    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
810665    +   end;
MPRINT(EM_DIAGRAM):   end;
810666    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
810667    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
810668    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
810669    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
810670    +   end;
MPRINT(EM_DIAGRAM):   end;
810671    +   else do;
MPRINT(EM_DIAGRAM):   else do;
810672    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
810673    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
810674    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
810675    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
810676    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
810677    +   end;
MPRINT(EM_DIAGRAM):   end;
810678    +end;
MPRINT(EM_DIAGRAM):   end;
810679    +
810680    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
810681    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
810682    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
810683    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
810684    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
810685    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
810686    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
810687    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
810688    +end;
MPRINT(EM_DIAGRAM):   end;
810689    +else do;
MPRINT(EM_DIAGRAM):   else do;
810690    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
810691    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
810692    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
810693    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
810694    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
810695    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
810696    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
810697    +   end;
MPRINT(EM_DIAGRAM):   end;
810698    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
810699    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
810700    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
810701    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
810702    +   end;
MPRINT(EM_DIAGRAM):   end;
810703    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
810704    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
810705    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
810706    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
810707    +   end;
MPRINT(EM_DIAGRAM):   end;
810708    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
810709    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
810710    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
810711    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
810712    +   end;
MPRINT(EM_DIAGRAM):   end;
810713    +   else do;
MPRINT(EM_DIAGRAM):   else do;
810714    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
810715    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
810716    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
810717    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
810718    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
810719    +   end;
MPRINT(EM_DIAGRAM):   end;
810720    +end;
MPRINT(EM_DIAGRAM):   end;
810721    +
810722    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
810723    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
810724    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
810725    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
810726    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
810727    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
810728    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
810729    +end;
MPRINT(EM_DIAGRAM):   end;
810730    +else do;
MPRINT(EM_DIAGRAM):   else do;
810731    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
810732    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
810733    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
810734    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
810735    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
810736    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
810737    +   end;
MPRINT(EM_DIAGRAM):   end;
810738    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
810739    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
810740    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
810741    +   end;
MPRINT(EM_DIAGRAM):   end;
810742    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
810743    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
810744    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
810745    +   end;
MPRINT(EM_DIAGRAM):   end;
810746    +   else do;
MPRINT(EM_DIAGRAM):   else do;
810747    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
810748    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
810749    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
810750    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
810751    +   end;
MPRINT(EM_DIAGRAM):   end;
810752    +end;
MPRINT(EM_DIAGRAM):   end;
810753    +
810754    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
810755    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
810756    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
810757    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
810758    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
810759    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
810760    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
810761    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
810762    +end;
MPRINT(EM_DIAGRAM):   end;
810763    +else do;
MPRINT(EM_DIAGRAM):   else do;
810764    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
810765    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
810766    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
810767    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
810768    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
810769    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
810770    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
810771    +   end;
MPRINT(EM_DIAGRAM):   end;
810772    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
810773    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
810774    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
810775    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
810776    +   end;
MPRINT(EM_DIAGRAM):   end;
810777    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
810778    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
810779    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
810780    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
810781    +   end;
MPRINT(EM_DIAGRAM):   end;
810782    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
810783    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
810784    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
810785    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
810786    +   end;
MPRINT(EM_DIAGRAM):   end;
810787    +   else do;
MPRINT(EM_DIAGRAM):   else do;
810788    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
810789    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
810790    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
810791    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
810792    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
810793    +   end;
MPRINT(EM_DIAGRAM):   end;
810794    +end;
MPRINT(EM_DIAGRAM):   end;
810795    +
810796    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
810797    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
810798    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
810799    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
810800    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
810801    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
810802    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
810803    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
810804    +end;
MPRINT(EM_DIAGRAM):   end;
810805    +else do;
MPRINT(EM_DIAGRAM):   else do;
810806    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
810807    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
810808    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
810809    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
810810    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
810811    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
810812    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
810813    +   end;
MPRINT(EM_DIAGRAM):   end;
810814    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
810815    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
810816    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
810817    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
810818    +   end;
MPRINT(EM_DIAGRAM):   end;
810819    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
810820    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
810821    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
810822    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
810823    +   end;
MPRINT(EM_DIAGRAM):   end;
810824    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
810825    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
810826    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
810827    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
810828    +   end;
MPRINT(EM_DIAGRAM):   end;
810829    +   else do;
MPRINT(EM_DIAGRAM):   else do;
810830    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
810831    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
810832    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
810833    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
810834    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
810835    +   end;
MPRINT(EM_DIAGRAM):   end;
810836    +end;
MPRINT(EM_DIAGRAM):   end;
810837    +
810838    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
810839    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
810840    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
810841    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
810842    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
810843    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
810844    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
810845    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
810846    +end;
MPRINT(EM_DIAGRAM):   end;
810847    +else do;
MPRINT(EM_DIAGRAM):   else do;
810848    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
810849    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
810850    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
810851    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
810852    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
810853    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
810854    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
810855    +   end;
MPRINT(EM_DIAGRAM):   end;
810856    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
810857    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
810858    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
810859    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
810860    +   end;
MPRINT(EM_DIAGRAM):   end;
810861    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
810862    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
810863    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
810864    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
810865    +   end;
MPRINT(EM_DIAGRAM):   end;
810866    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
810867    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
810868    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
810869    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
810870    +   end;
MPRINT(EM_DIAGRAM):   end;
810871    +   else do;
MPRINT(EM_DIAGRAM):   else do;
810872    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
810873    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
810874    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
810875    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
810876    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
810877    +   end;
MPRINT(EM_DIAGRAM):   end;
810878    +end;
MPRINT(EM_DIAGRAM):   end;
810879    +
810880    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
810881    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
810882    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
810883    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
810884    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
810885    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
810886    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
810887    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
810888    +end;
MPRINT(EM_DIAGRAM):   end;
810889    +else do;
MPRINT(EM_DIAGRAM):   else do;
810890    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
810891    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
810892    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
810893    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
810894    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
810895    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
810896    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
810897    +   end;
MPRINT(EM_DIAGRAM):   end;
810898    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
810899    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
810900    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
810901    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
810902    +   end;
MPRINT(EM_DIAGRAM):   end;
810903    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
810904    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
810905    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
810906    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
810907    +   end;
MPRINT(EM_DIAGRAM):   end;
810908    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
810909    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
810910    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
810911    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
810912    +   end;
MPRINT(EM_DIAGRAM):   end;
810913    +   else do;
MPRINT(EM_DIAGRAM):   else do;
810914    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
810915    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
810916    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
810917    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
810918    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
810919    +   end;
MPRINT(EM_DIAGRAM):   end;
810920    +end;
MPRINT(EM_DIAGRAM):   end;
810921    +
810922    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
810923    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
810924    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
810925    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
810926    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
810927    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
810928    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
810929    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
810930    +end;
MPRINT(EM_DIAGRAM):   end;
810931    +else do;
MPRINT(EM_DIAGRAM):   else do;
810932    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
810933    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
810934    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
810935    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
810936    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
810937    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
810938    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
810939    +   end;
MPRINT(EM_DIAGRAM):   end;
810940    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
810941    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
810942    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
810943    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
810944    +   end;
MPRINT(EM_DIAGRAM):   end;
810945    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
810946    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
810947    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
810948    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
810949    +   end;
MPRINT(EM_DIAGRAM):   end;
810950    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
810951    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
810952    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
810953    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
810954    +   end;
MPRINT(EM_DIAGRAM):   end;
810955    +   else do;
MPRINT(EM_DIAGRAM):   else do;
810956    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
810957    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
810958    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
810959    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
810960    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
810961    +   end;
MPRINT(EM_DIAGRAM):   end;
810962    +end;
MPRINT(EM_DIAGRAM):   end;
810963    +
810964    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
810965    +*** Checking missing input Interval
810966    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
810967    +
810968    +IF NMISS(
810969    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
810970    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
810971    +
810972    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
810973    +END;
MPRINT(EM_DIAGRAM):   END;
810974    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
810975    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
810976    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
810977    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
810978    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
810979    +END;
MPRINT(EM_DIAGRAM):   END;
810980    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
810981    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
810982    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
810983    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
810984    +END;
MPRINT(EM_DIAGRAM):   END;
810985    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
810986    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
810987    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
810988    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
810989    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
810990    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
810991    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
810992    +   H11  =    -0.41939883149261 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = -0.41939883149261 * S_Year_Birth ;
810993    +   H12  =    -0.11064938192918 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = -0.11064938192918 * S_Year_Birth ;
810994    +   H13  =    -0.06467031288187 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = -0.06467031288187 * S_Year_Birth ;
810995    +   H11  = H11  +     0.35448004105908 * GRP_AcceptedCmp52
810996    +          +     -0.0918084964279 * GRP_Frq2  +    -0.23985284532042 * GRP_Frq3
810997    +          +     0.05570802281486 * GRP_Frq4  +     -0.3547598798301 *
810998    +        GRP_Income2  +    -0.33962703607715 * GRP_Income3
810999    +          +     0.12436841230863 * GRP_Income4  +    -0.01455143009771 *
811000    +        GRP_Mnt2  +     0.10120972709945 * GRP_Mnt3  +     -0.0249155152295 *
811001    +        GRP_Mnt4  +      -0.269333013942 * GRP_MntFishProducts2
811002    +          +     0.05785555057946 * GRP_MntFishProducts3
811003    +          +    -0.13000426565494 * GRP_MntFishProducts4
811004    +          +     0.17862455375899 * GRP_MntGoldProds2
811005    +          +     0.06257016564867 * GRP_MntGoldProds3
811006    +          +     0.20249370161035 * GRP_MntGoldProds4
811007    +          +     0.32678386182233 * GRP_MntMeatProducts2
811008    +          +      0.3373259079058 * GRP_MntMeatProducts3
811009    +          +     0.28061036187325 * GRP_MntMeatProducts4
811010    +          +    -0.03272437686392 * GRP_MntWines2  +    -0.21202325680638 *
811011    +        GRP_MntWines3  +      0.3424605103125 * GRP_MntWines4
811012    +          +     0.18542181546309 * GRP_NumCatalogPurchases3
811013    +          +     0.14594977072698 * GRP_NumCatalogPurchases4
811014    +          +     0.20431880618842 * GRP_NumDistPurchases2
811015    +          +    -0.15119714667229 * GRP_NumDistPurchases3
811016    +          +     0.19430353652214 * GRP_NumDistPurchases4
811017    +          +     0.04685341709526 * GRP_NumWebPurchases2
811018    +          +    -0.06094487598588 * GRP_NumWebPurchases3
811019    +          +    -0.04237233324733 * GRP_NumWebPurchases4
811020    +          +    -0.08991829185393 * GRP_RFMstat2  +    -0.07347809144281 *
811021    +        GRP_RFMstat3  +     -0.4341534715985 * GRP_RFMstat4
811022    +          +     -0.0196197195217 * GRP_RMntFrq2  +     0.12097540554524 *
811023    +        GRP_RMntFrq3  +     0.26057062278983 * GRP_RMntFrq4
811024    +          +    -0.63029497931535 * GRP_Recency2  +    -0.41040165908214 *
811025    +        GRP_Recency3  +     0.03209060504164 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.35448004105908 * GRP_AcceptedCmp52 + -0.0918084964279 * 
GRP_Frq2 + -0.23985284532042 * GRP_Frq3 + 0.05570802281486 * GRP_Frq4 + -0.3547598798301 * 
GRP_Income2 + -0.33962703607715 * GRP_Income3 + 0.12436841230863 * GRP_Income4 + 
-0.01455143009771 * GRP_Mnt2 + 0.10120972709945 * GRP_Mnt3 + -0.0249155152295 * GRP_Mnt4 + 
-0.269333013942 * GRP_MntFishProducts2 + 0.05785555057946 * GRP_MntFishProducts3 + 
-0.13000426565494 * GRP_MntFishProducts4 + 0.17862455375899 * GRP_MntGoldProds2 + 
0.06257016564867 * GRP_MntGoldProds3 + 0.20249370161035 * GRP_MntGoldProds4 + 0.32678386182233 
* GRP_MntMeatProducts2 + 0.3373259079058 * GRP_MntMeatProducts3 + 0.28061036187325 * 
GRP_MntMeatProducts4 + -0.03272437686392 * GRP_MntWines2 + -0.21202325680638 * GRP_MntWines3 + 
0.3424605103125 * GRP_MntWines4 + 0.18542181546309 * GRP_NumCatalogPurchases3 + 
0.14594977072698 * GRP_NumCatalogPurchases4 + 0.20431880618842 * GRP_NumDistPurchases2 + 
-0.15119714667229 * GRP_NumDistPurchases3 + 0.19430353652214 * GRP_NumDistPurchases4 + 
0.04685341709526 * GRP_NumWebPurchases2 + -0.06094487598588 * GRP_NumWebPurchases3 + 
-0.04237233324733 * GRP_NumWebPurchases4 + -0.08991829185393 * GRP_RFMstat2 + 
-0.07347809144281 * GRP_RFMstat3 + -0.4341534715985 * GRP_RFMstat4 + -0.0196197195217 * 
GRP_RMntFrq2 + 0.12097540554524 * GRP_RMntFrq3 + 0.26057062278983 * GRP_RMntFrq4 + 
-0.63029497931535 * GRP_Recency2 + -0.41040165908214 * GRP_Recency3 + 0.03209060504164 * 
GRP_Recency4 ;
811026    +   H12  = H12  +    -0.16182441315567 * GRP_AcceptedCmp52
811027    +          +     0.17228162466334 * GRP_Frq2  +     0.15132687990319 * GRP_Frq3
811028    +          +     -0.1689155033241 * GRP_Frq4  +     0.15149901619495 *
811029    +        GRP_Income2  +     0.17788129654866 * GRP_Income3
811030    +          +     0.05923547318389 * GRP_Income4  +    -0.08355004275991 *
811031    +        GRP_Mnt2  +     0.02631246580002 * GRP_Mnt3  +     -0.2309890088856 *
811032    +        GRP_Mnt4  +     0.14312480402918 * GRP_MntFishProducts2
811033    +          +     -0.2578736956972 * GRP_MntFishProducts3
811034    +          +     0.18402620335031 * GRP_MntFishProducts4
811035    +          +     0.05242149290227 * GRP_MntGoldProds2
811036    +          +    -0.21803869063517 * GRP_MntGoldProds3
811037    +          +     0.13815635816146 * GRP_MntGoldProds4
811038    +          +    -0.27330809721997 * GRP_MntMeatProducts2
811039    +          +    -0.21530314028526 * GRP_MntMeatProducts3
811040    +          +     0.02052103215709 * GRP_MntMeatProducts4
811041    +          +    -0.12650113568762 * GRP_MntWines2  +     0.11322482902275 *
811042    +        GRP_MntWines3  +    -0.27438926594633 * GRP_MntWines4
811043    +          +    -0.54784157827091 * GRP_NumCatalogPurchases3
811044    +          +    -0.08859032150825 * GRP_NumCatalogPurchases4
811045    +          +     -0.1595237277506 * GRP_NumDistPurchases2
811046    +          +     0.00057390274989 * GRP_NumDistPurchases3
811047    +          +     -0.1082308524036 * GRP_NumDistPurchases4
811048    +          +     0.08795971555231 * GRP_NumWebPurchases2
811049    +          +    -0.23666817227274 * GRP_NumWebPurchases3
811050    +          +     0.01490866706276 * GRP_NumWebPurchases4
811051    +          +    -0.00588866906818 * GRP_RFMstat2  +    -0.01109150017006 *
811052    +        GRP_RFMstat3  +    -0.00327834027258 * GRP_RFMstat4
811053    +          +     0.04028767653615 * GRP_RMntFrq2  +     -0.0163649640466 *
811054    +        GRP_RMntFrq3  +    -0.07601316125357 * GRP_RMntFrq4
811055    +          +     0.66228536796217 * GRP_Recency2  +     0.48287342862457 *
811056    +        GRP_Recency3  +    -0.03032773010646 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.16182441315567 * GRP_AcceptedCmp52 + 0.17228162466334 * 
GRP_Frq2 + 0.15132687990319 * GRP_Frq3 + -0.1689155033241 * GRP_Frq4 + 0.15149901619495 * 
GRP_Income2 + 0.17788129654866 * GRP_Income3 + 0.05923547318389 * GRP_Income4 + 
-0.08355004275991 * GRP_Mnt2 + 0.02631246580002 * GRP_Mnt3 + -0.2309890088856 * GRP_Mnt4 + 
0.14312480402918 * GRP_MntFishProducts2 + -0.2578736956972 * GRP_MntFishProducts3 + 
0.18402620335031 * GRP_MntFishProducts4 + 0.05242149290227 * GRP_MntGoldProds2 + 
-0.21803869063517 * GRP_MntGoldProds3 + 0.13815635816146 * GRP_MntGoldProds4 + 
-0.27330809721997 * GRP_MntMeatProducts2 + -0.21530314028526 * GRP_MntMeatProducts3 + 
0.02052103215709 * GRP_MntMeatProducts4 + -0.12650113568762 * GRP_MntWines2 + 0.11322482902275 
* GRP_MntWines3 + -0.27438926594633 * GRP_MntWines4 + -0.54784157827091 * 
GRP_NumCatalogPurchases3 + -0.08859032150825 * GRP_NumCatalogPurchases4 + -0.1595237277506 * 
GRP_NumDistPurchases2 + 0.00057390274989 * GRP_NumDistPurchases3 + -0.1082308524036 * 
GRP_NumDistPurchases4 + 0.08795971555231 * GRP_NumWebPurchases2 + -0.23666817227274 * 
GRP_NumWebPurchases3 + 0.01490866706276 * GRP_NumWebPurchases4 + -0.00588866906818 * 
GRP_RFMstat2 + -0.01109150017006 * GRP_RFMstat3 + -0.00327834027258 * GRP_RFMstat4 + 
0.04028767653615 * GRP_RMntFrq2 + -0.0163649640466 * GRP_RMntFrq3 + -0.07601316125357 * 
GRP_RMntFrq4 + 0.66228536796217 * GRP_Recency2 + 0.48287342862457 * GRP_Recency3 + 
-0.03032773010646 * GRP_Recency4 ;
811057    +   H13  = H13  +    -0.76222121025234 * GRP_AcceptedCmp52
811058    +          +     0.36511613420086 * GRP_Frq2  +    -0.02961648849396 * GRP_Frq3
811059    +          +     0.08263295800576 * GRP_Frq4  +     0.53248885273716 *
811060    +        GRP_Income2  +     0.58143836248256 * GRP_Income3
811061    +          +     -0.6819044946332 * GRP_Income4  +     0.09969835343923 *
811062    +        GRP_Mnt2  +     0.22681708558976 * GRP_Mnt3  +    -0.05933156304489 *
811063    +        GRP_Mnt4  +      0.3115929057885 * GRP_MntFishProducts2
811064    +          +     0.20656815909058 * GRP_MntFishProducts3
811065    +          +    -0.18100587726033 * GRP_MntFishProducts4
811066    +          +    -0.26082445403302 * GRP_MntGoldProds2
811067    +          +     0.05485426947921 * GRP_MntGoldProds3
811068    +          +     0.09168468833046 * GRP_MntGoldProds4
811069    +          +    -0.26764306152541 * GRP_MntMeatProducts2
811070    +          +    -0.05251001605784 * GRP_MntMeatProducts3
811071    +          +     0.29225259283913 * GRP_MntMeatProducts4
811072    +          +     0.61402400906277 * GRP_MntWines2  +     0.18145923811098 *
811073    +        GRP_MntWines3  +    -0.04337923172483 * GRP_MntWines4
811074    +          +    -0.72349314013585 * GRP_NumCatalogPurchases3
811075    +          +     0.14875924587174 * GRP_NumCatalogPurchases4
811076    +          +    -0.74484872686794 * GRP_NumDistPurchases2
811077    +          +    -0.21410281712514 * GRP_NumDistPurchases3
811078    +          +     0.04732133485671 * GRP_NumDistPurchases4
811079    +          +     -0.1068322737335 * GRP_NumWebPurchases2
811080    +          +     0.16615642908107 * GRP_NumWebPurchases3
811081    +          +     0.06510367246629 * GRP_NumWebPurchases4
811082    +          +    -0.32688260466431 * GRP_RFMstat2  +    -0.18733405583331 *
811083    +        GRP_RFMstat3  +     -0.2070438751052 * GRP_RFMstat4
811084    +          +     0.00135495431586 * GRP_RMntFrq2  +     0.14594289041413 *
811085    +        GRP_RMntFrq3  +    -0.22868347656723 * GRP_RMntFrq4
811086    +          +     0.85583167880584 * GRP_Recency2  +     0.12194433799934 *
811087    +        GRP_Recency3  +    -0.40666493945855 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.76222121025234 * GRP_AcceptedCmp52 + 0.36511613420086 * 
GRP_Frq2 + -0.02961648849396 * GRP_Frq3 + 0.08263295800576 * GRP_Frq4 + 0.53248885273716 * 
GRP_Income2 + 0.58143836248256 * GRP_Income3 + -0.6819044946332 * GRP_Income4 + 
0.09969835343923 * GRP_Mnt2 + 0.22681708558976 * GRP_Mnt3 + -0.05933156304489 * GRP_Mnt4 + 
0.3115929057885 * GRP_MntFishProducts2 + 0.20656815909058 * GRP_MntFishProducts3 + 
-0.18100587726033 * GRP_MntFishProducts4 + -0.26082445403302 * GRP_MntGoldProds2 + 
0.05485426947921 * GRP_MntGoldProds3 + 0.09168468833046 * GRP_MntGoldProds4 + 
-0.26764306152541 * GRP_MntMeatProducts2 + -0.05251001605784 * GRP_MntMeatProducts3 + 
0.29225259283913 * GRP_MntMeatProducts4 + 0.61402400906277 * GRP_MntWines2 + 0.18145923811098 
* GRP_MntWines3 + -0.04337923172483 * GRP_MntWines4 + -0.72349314013585 * 
GRP_NumCatalogPurchases3 + 0.14875924587174 * GRP_NumCatalogPurchases4 + -0.74484872686794 * 
GRP_NumDistPurchases2 + -0.21410281712514 * GRP_NumDistPurchases3 + 0.04732133485671 * 
GRP_NumDistPurchases4 + -0.1068322737335 * GRP_NumWebPurchases2 + 0.16615642908107 * 
GRP_NumWebPurchases3 + 0.06510367246629 * GRP_NumWebPurchases4 + -0.32688260466431 * 
GRP_RFMstat2 + -0.18733405583331 * GRP_RFMstat3 + -0.2070438751052 * GRP_RFMstat4 + 
0.00135495431586 * GRP_RMntFrq2 + 0.14594289041413 * GRP_RMntFrq3 + -0.22868347656723 * 
GRP_RMntFrq4 + 0.85583167880584 * GRP_Recency2 + 0.12194433799934 * GRP_Recency3 + 
-0.40666493945855 * GRP_Recency4 ;
811088    +   H11  =    -0.47589199029932 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.47589199029932 + H11 ;
811089    +   H12  =    -0.33973735112712 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.33973735112712 + H12 ;
811090    +   H13  =     0.16076842495153 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.16076842495153 + H13 ;
811091    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
811092    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
811093    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
811094    +END;
MPRINT(EM_DIAGRAM):   END;
811095    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
811096    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
811097    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
811098    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
811099    +END;
MPRINT(EM_DIAGRAM):   END;
811100    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
811101    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
811102    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
811103    +
811104    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
811105    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
811106    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
811107    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
811108    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
811109    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
811110    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
811111    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
811112    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
811113    +end;
MPRINT(EM_DIAGRAM):   end;
811114    +else do;
MPRINT(EM_DIAGRAM):   else do;
811115    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
811116    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
811117    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
811118    +   end;
MPRINT(EM_DIAGRAM):   end;
811119    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
811120    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
811121    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
811122    +   end;
MPRINT(EM_DIAGRAM):   end;
811123    +   else do;
MPRINT(EM_DIAGRAM):   else do;
811124    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
811125    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
811126    +   end;
MPRINT(EM_DIAGRAM):   end;
811127    +end;
MPRINT(EM_DIAGRAM):   end;
811128    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
811129    +   P_DepVar1  =    -1.16415993584169 * H11  +     0.57209582268762 * H12
811130    +          +     1.90916164841558 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.16415993584169 * H11 + 0.57209582268762 * H12 + 
1.90916164841558 * H13 ;
811131    +   P_DepVar1  =    -1.85769338519577 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.85769338519577 + P_DepVar1 ;
811132    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
811133    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
811134    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
811135    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
811136    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
811137    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
811138    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
811139    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
811140    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
811141    +END;
MPRINT(EM_DIAGRAM):   END;
811142    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
811143    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
811144    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
811145    +END;
MPRINT(EM_DIAGRAM):   END;
811146    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
811147    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
811148    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
811149    +END;
MPRINT(EM_DIAGRAM):   END;
811150    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
811151    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
811152    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
811153    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
811154    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
811155    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
811156    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
811157    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
811158    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
811159    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
811160    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
811161    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
811162    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
811163    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
811164    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
811165    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
811166    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
811167    +END;
MPRINT(EM_DIAGRAM):   END;
811168    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
811169    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
811170    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
811171    +drop
811172    +H11
811173    +H12
811174    +H13
811175    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
811176    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
811177     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL20_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_DIAGRAM):   quit;
811178     quit;
811179     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
811180     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
811181     * Neural20: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural20: Computing metadata for TRAIN data;
811182     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL20_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural20\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural20_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural20_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural20_TRAIN out=WORK.M1GQU_DV noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1GQU_DV;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1GQU_DV(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1GQU_DV;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1GQU_DV;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0K77DK1 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0K77DK1;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0K77DK1;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1CFI0GS(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0K77DK1;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0K77DK1;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0K77DK1;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0K77DK1;
MPRINT(EMADVISECOLUMNS):   set WORK.M0K77DK1;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural20_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural20";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural20";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural20";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural20";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural20";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural20";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural20";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural20";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural20";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural20";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural20: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
811494     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
811495     set EMWS8.Neural20_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural20_EMINFO;
811496     where DATA='Neural20' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural20' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
811497     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL20_EMINFO.
      WHERE (DATA='Neural20') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

811498     data EMWS8.Neural20_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural20_EMINFO;
811499     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
811500     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
811501     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL20_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
811505     run;
811506     data EMWS8.Neural20_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural20_EMINFO;
811507     set EMWS8.Neural20_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural20_EMINFO WORK.MODELTEMP_INFO;
811508     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL20_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL20_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

811509     proc sort data = EMWS8.Neural20_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural20_EMINFO NOTHREADS;
811510     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
811511     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL20_EMINFO.
NOTE: The data set EMWS8.NEURAL20_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

811512     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
811513     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
811514     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

811515     proc sort data = EMWS8.Neural20_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural20_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
811516     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
811517     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL20_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

811518     data EMWS8.Neural20_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural20_EMINFO;
811519     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
811520     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
811521     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL20_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

811522     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
811523     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
811524     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
811525     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.NEURAL20_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL20_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
