MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "10.59 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                10.59 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O34ERWGJ 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural46\EMSCORE.out" encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O34ERWGJ new;
MPRINT(EM_DIAGRAM):   run;
2855347    filename emflow
2855347  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural46\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural46\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural46: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2855348    *------------------------------------------------------------*;
2855349    * AutoNeural46: Scoring DATA data;
2855350    *------------------------------------------------------------*;
2855351    data EMWS8.AutoNeural46_TRAIN
2855352    / view=EMWS8.AutoNeural46_TRAIN
2855353    ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural46_TRAIN / view=EMWS8.AutoNeural46_TRAIN ;
2855354    set EMWS8.Meta2_TRAIN
2855355    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta2_TRAIN ;
2855356    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural46\EMFLOWSCORE.sas.
2855357   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2855358   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2855359   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2855360   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2855361   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2855362   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2855363   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2855364   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2855365   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2855366   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2855367   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2855368   +LENGTH _WARN_ $4
2855369   +      F_DepVar  $ 12
2855370   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2855371   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2855372   +
2855373   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2855374   +
2855375   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2855376   +
2855377   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2855378   +
2855379   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2855380   +
2855381   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2855382   +
2855383   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2855384   +
2855385   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2855386   +
2855387   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2855388   +
2855389   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2855390   +
2855391   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2855392   +
2855393   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2855394   +
2855395   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2855396   +
2855397   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2855398   +
2855399   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2855400   +
2855401   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2855402   +
2855403   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2855404   +
2855405   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2855406   +
2855407   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2855408   +
2855409   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2855410   +
2855411   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2855412   +
2855413   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2855414   +
2855415   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2855416   +
2855417   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2855418   +
2855419   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2855420   +
2855421   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2855422   +
2855423   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2855424   +
2855425   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2855426   +
2855427   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2855428   +
2855429   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2855430   +
2855431   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2855432   +
2855433   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2855434   +
2855435   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2855436   +
2855437   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2855438   +
2855439   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2855440   +
2855441   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2855442   +
2855443   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2855444   +
2855445   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2855446   +
2855447   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2855448   +
2855449   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2855450   +
2855451   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2855452   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2855453   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2855454   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2855455   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2855456   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2855457   +end;
MPRINT(EM_DIAGRAM):   end;
2855458   +else do;
MPRINT(EM_DIAGRAM):   else do;
2855459   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2855460   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2855461   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2855462   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2855463   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2855464   +   end;
MPRINT(EM_DIAGRAM):   end;
2855465   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2855466   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2855467   +   end;
MPRINT(EM_DIAGRAM):   end;
2855468   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2855469   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2855470   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2855471   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2855472   +   end;
MPRINT(EM_DIAGRAM):   end;
2855473   +end;
MPRINT(EM_DIAGRAM):   end;
2855474   +
2855475   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2855476   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2855477   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2855478   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2855479   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2855480   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2855481   +end;
MPRINT(EM_DIAGRAM):   end;
2855482   +else do;
MPRINT(EM_DIAGRAM):   else do;
2855483   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2855484   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2855485   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2855486   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2855487   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2855488   +   end;
MPRINT(EM_DIAGRAM):   end;
2855489   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2855490   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2855491   +   end;
MPRINT(EM_DIAGRAM):   end;
2855492   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2855493   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2855494   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2855495   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2855496   +   end;
MPRINT(EM_DIAGRAM):   end;
2855497   +end;
MPRINT(EM_DIAGRAM):   end;
2855498   +
2855499   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2855500   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2855501   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2855502   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2855503   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2855504   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2855505   +end;
MPRINT(EM_DIAGRAM):   end;
2855506   +else do;
MPRINT(EM_DIAGRAM):   else do;
2855507   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2855508   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2855509   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2855510   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2855511   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2855512   +   end;
MPRINT(EM_DIAGRAM):   end;
2855513   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2855514   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2855515   +   end;
MPRINT(EM_DIAGRAM):   end;
2855516   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2855517   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2855518   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2855519   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2855520   +   end;
MPRINT(EM_DIAGRAM):   end;
2855521   +end;
MPRINT(EM_DIAGRAM):   end;
2855522   +
2855523   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2855524   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2855525   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2855526   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2855527   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2855528   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2855529   +end;
MPRINT(EM_DIAGRAM):   end;
2855530   +else do;
MPRINT(EM_DIAGRAM):   else do;
2855531   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2855532   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2855533   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2855534   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2855535   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2855536   +   end;
MPRINT(EM_DIAGRAM):   end;
2855537   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2855538   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2855539   +   end;
MPRINT(EM_DIAGRAM):   end;
2855540   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2855541   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2855542   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2855543   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2855544   +   end;
MPRINT(EM_DIAGRAM):   end;
2855545   +end;
MPRINT(EM_DIAGRAM):   end;
2855546   +
2855547   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2855548   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2855549   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2855550   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2855551   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2855552   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2855553   +end;
MPRINT(EM_DIAGRAM):   end;
2855554   +else do;
MPRINT(EM_DIAGRAM):   else do;
2855555   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2855556   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2855557   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2855558   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2855559   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2855560   +   end;
MPRINT(EM_DIAGRAM):   end;
2855561   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2855562   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2855563   +   end;
MPRINT(EM_DIAGRAM):   end;
2855564   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2855565   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2855566   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2855567   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2855568   +   end;
MPRINT(EM_DIAGRAM):   end;
2855569   +end;
MPRINT(EM_DIAGRAM):   end;
2855570   +
2855571   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2855572   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2855573   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2855574   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2855575   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2855576   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2855577   +end;
MPRINT(EM_DIAGRAM):   end;
2855578   +else do;
MPRINT(EM_DIAGRAM):   else do;
2855579   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2855580   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2855581   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2855582   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2855583   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2855584   +   end;
MPRINT(EM_DIAGRAM):   end;
2855585   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2855586   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2855587   +   end;
MPRINT(EM_DIAGRAM):   end;
2855588   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2855589   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2855590   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2855591   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2855592   +   end;
MPRINT(EM_DIAGRAM):   end;
2855593   +end;
MPRINT(EM_DIAGRAM):   end;
2855594   +
2855595   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2855596   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2855597   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2855598   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2855599   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2855600   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2855601   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2855602   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2855603   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2855604   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2855605   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2855606   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2855607   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2855608   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2855609   +end;
MPRINT(EM_DIAGRAM):   end;
2855610   +else do;
MPRINT(EM_DIAGRAM):   else do;
2855611   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2855612   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2855613   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2855614   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2855615   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2855616   +   end;
MPRINT(EM_DIAGRAM):   end;
2855617   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2855618   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2855619   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2855620   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2855621   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2855622   +   end;
MPRINT(EM_DIAGRAM):   end;
2855623   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2855624   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2855625   +   end;
MPRINT(EM_DIAGRAM):   end;
2855626   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2855627   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2855628   +   end;
MPRINT(EM_DIAGRAM):   end;
2855629   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2855630   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2855631   +   end;
MPRINT(EM_DIAGRAM):   end;
2855632   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2855633   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2855634   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2855635   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2855636   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2855637   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2855638   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2855639   +   end;
MPRINT(EM_DIAGRAM):   end;
2855640   +end;
MPRINT(EM_DIAGRAM):   end;
2855641   +
2855642   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2855643   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2855644   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2855645   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2855646   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2855647   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2855648   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2855649   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2855650   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2855651   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2855652   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2855653   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2855654   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2855655   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2855656   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2855657   +end;
MPRINT(EM_DIAGRAM):   end;
2855658   +else do;
MPRINT(EM_DIAGRAM):   else do;
2855659   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2855660   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2855661   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2855662   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2855663   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2855664   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2855665   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2855666   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2855667   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2855668   +         end;
MPRINT(EM_DIAGRAM):   end;
2855669   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2855670   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2855671   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2855672   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2855673   +            end;
MPRINT(EM_DIAGRAM):   end;
2855674   +         end;
MPRINT(EM_DIAGRAM):   end;
2855675   +      end;
MPRINT(EM_DIAGRAM):   end;
2855676   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2855677   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2855678   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2855679   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2855680   +         end;
MPRINT(EM_DIAGRAM):   end;
2855681   +      end;
MPRINT(EM_DIAGRAM):   end;
2855682   +   end;
MPRINT(EM_DIAGRAM):   end;
2855683   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2855684   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2855685   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2855686   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2855687   +      end;
MPRINT(EM_DIAGRAM):   end;
2855688   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2855689   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2855690   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2855691   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2855692   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2855693   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2855694   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2855695   +         end;
MPRINT(EM_DIAGRAM):   end;
2855696   +      end;
MPRINT(EM_DIAGRAM):   end;
2855697   +   end;
MPRINT(EM_DIAGRAM):   end;
2855698   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2855699   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2855700   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2855701   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2855702   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2855703   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2855704   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2855705   +   end;
MPRINT(EM_DIAGRAM):   end;
2855706   +end;
MPRINT(EM_DIAGRAM):   end;
2855707   +
2855708   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2855709   +*** Checking missing input Interval
2855710   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2855711   +
2855712   +IF NMISS(
2855713   +   Income ,
2855714   +   Kidhome ,
2855715   +   MntFishProducts ,
2855716   +   MntFruits ,
2855717   +   MntGoldProds ,
2855718   +   MntMeatProducts ,
2855719   +   MntSweetProducts ,
2855720   +   MntWines ,
2855721   +   NumCatalogPurchases ,
2855722   +   NumDealsPurchases ,
2855723   +   NumStorePurchases ,
2855724   +   NumWebPurchases ,
2855725   +   NumWebVisitsMonth ,
2855726   +   Recency ,
2855727   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
2855728   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2855729   +
2855730   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2855731   +END;
MPRINT(EM_DIAGRAM):   END;
2855732   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2855733   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2855734   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2855735   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2855736   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2855737   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2855738   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2855739   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2855740   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2855741   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2855742   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2855743   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2855744   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2855745   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2855746   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2855747   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2855748   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2855749   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2855750   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2855751   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2855752   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2855753   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2855754   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2855755   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2855756   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2855757   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2855758   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2855759   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2855760   +END;
MPRINT(EM_DIAGRAM):   END;
2855761   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2855762   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2855763   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2855764   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2855765   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2855766   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2855767   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2855768   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2855769   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2855770   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2855771   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2855772   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2855773   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2855774   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2855775   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2855776   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2855777   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2855778   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2855779   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2855780   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2855781   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2855782   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2855783   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2855784   +   ELSE S_NumCatalogPurchases
2855785   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2855786   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2855787   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2855788   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2855789   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2855790   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2855791   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2855792   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2855793   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2855794   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2855795   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2855796   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2855797   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2855798   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2855799   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2855800   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2855801   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2855802   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2855803   +END;
MPRINT(EM_DIAGRAM):   END;
2855804   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2855805   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2855806   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2855807   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2855808   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2855809   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2855810   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2855811   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2855812   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2855813   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2855814   +   H1x1_1  =    -0.14779241211238 * S_Income  +     0.12406923960108 *
2855815   +        S_Kidhome  +     0.07566108150758 * S_MntFishProducts
2855816   +          +     0.04223936357442 * S_MntFruits  +    -0.01414396912246 *
2855817   +        S_MntGoldProds  +    -0.43631543928923 * S_MntMeatProducts
2855818   +          +      0.0311909552218 * S_MntSweetProducts
2855819   +          +      0.1593908004139 * S_MntWines  +    -0.16331402526215 *
2855820   +        S_NumCatalogPurchases  +    -0.08123579404919 * S_NumDealsPurchases
2855821   +          +     0.12294876865087 * S_NumStorePurchases
2855822   +          +     0.11602382379314 * S_NumWebPurchases
2855823   +          +    -0.23519567542635 * S_NumWebVisitsMonth
2855824   +          +     0.27617232496223 * S_Recency  +     0.06912944740739 *
2855825   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.14779241211238 * S_Income + 0.12406923960108 * S_Kidhome + 
0.07566108150758 * S_MntFishProducts + 0.04223936357442 * S_MntFruits + -0.01414396912246 * 
S_MntGoldProds + -0.43631543928923 * S_MntMeatProducts + 0.0311909552218 * S_MntSweetProducts 
+ 0.1593908004139 * S_MntWines + -0.16331402526215 * S_NumCatalogPurchases + -0.08123579404919 
* S_NumDealsPurchases + 0.12294876865087 * S_NumStorePurchases + 0.11602382379314 * 
S_NumWebPurchases + -0.23519567542635 * S_NumWebVisitsMonth + 0.27617232496223 * S_Recency + 
0.06912944740739 * S_Teenhome ;
2855826   +   H1x1_2  =    -0.13491153011654 * S_Income  +     0.14656938917448 *
2855827   +        S_Kidhome  +     0.04457005191996 * S_MntFishProducts
2855828   +          +     0.00771761834647 * S_MntFruits  +    -0.11830651019438 *
2855829   +        S_MntGoldProds  +     0.06464771115751 * S_MntMeatProducts
2855830   +          +     0.00133400054994 * S_MntSweetProducts
2855831   +          +    -0.63837598558931 * S_MntWines  +     0.09668222160749 *
2855832   +        S_NumCatalogPurchases  +     0.23530173987642 * S_NumDealsPurchases
2855833   +          +    -0.49595472235036 * S_NumStorePurchases
2855834   +          +    -0.24747548015204 * S_NumWebPurchases
2855835   +          +     0.12326047694811 * S_NumWebVisitsMonth
2855836   +          +    -0.04929000435218 * S_Recency  +     0.00568113597531 *
2855837   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.13491153011654 * S_Income + 0.14656938917448 * S_Kidhome + 
0.04457005191996 * S_MntFishProducts + 0.00771761834647 * S_MntFruits + -0.11830651019438 * 
S_MntGoldProds + 0.06464771115751 * S_MntMeatProducts + 0.00133400054994 * S_MntSweetProducts 
+ -0.63837598558931 * S_MntWines + 0.09668222160749 * S_NumCatalogPurchases + 0.23530173987642 
* S_NumDealsPurchases + -0.49595472235036 * S_NumStorePurchases + -0.24747548015204 * 
S_NumWebPurchases + 0.12326047694811 * S_NumWebVisitsMonth + -0.04929000435218 * S_Recency + 
0.00568113597531 * S_Teenhome ;
2855838   +   H1x1_3  =     0.13062973754666 * S_Income  +    -0.15311279667585 *
2855839   +        S_Kidhome  +      0.0854652628099 * S_MntFishProducts
2855840   +          +     0.02260695043189 * S_MntFruits  +    -0.06427354034325 *
2855841   +        S_MntGoldProds  +    -0.51556004816788 * S_MntMeatProducts
2855842   +          +    -0.03908755288099 * S_MntSweetProducts
2855843   +          +    -0.24983513168561 * S_MntWines  +     0.11583370343483 *
2855844   +        S_NumCatalogPurchases  +     0.05060583856766 * S_NumDealsPurchases
2855845   +          +    -0.20634630081435 * S_NumStorePurchases
2855846   +          +    -0.06734935798888 * S_NumWebPurchases
2855847   +          +     0.32288250215418 * S_NumWebVisitsMonth
2855848   +          +    -0.32978147839937 * S_Recency  +    -0.07420334428475 *
2855849   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.13062973754666 * S_Income + -0.15311279667585 * S_Kidhome + 
0.0854652628099 * S_MntFishProducts + 0.02260695043189 * S_MntFruits + -0.06427354034325 * 
S_MntGoldProds + -0.51556004816788 * S_MntMeatProducts + -0.03908755288099 * 
S_MntSweetProducts + -0.24983513168561 * S_MntWines + 0.11583370343483 * S_NumCatalogPurchases 
+ 0.05060583856766 * S_NumDealsPurchases + -0.20634630081435 * S_NumStorePurchases + 
-0.06734935798888 * S_NumWebPurchases + 0.32288250215418 * S_NumWebVisitsMonth + 
-0.32978147839937 * S_Recency + -0.07420334428475 * S_Teenhome ;
2855850   +   H1x1_1  = H1x1_1  +     0.14311220987159 * AcceptedCmp10
2855851   +          +     0.25596748420576 * AcceptedCmp20  +     0.13199169114019 *
2855852   +        AcceptedCmp30  +     0.14111066281846 * AcceptedCmp40
2855853   +          +     0.16136804502708 * AcceptedCmp50  +     0.06340055511955 *
2855854   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.14311220987159 * AcceptedCmp10 + 0.25596748420576 * 
AcceptedCmp20 + 0.13199169114019 * AcceptedCmp30 + 0.14111066281846 * AcceptedCmp40 + 
0.16136804502708 * AcceptedCmp50 + 0.06340055511955 * Complain0 ;
2855855   +   H1x1_2  = H1x1_2  +     0.07692946904386 * AcceptedCmp10
2855856   +          +     0.10129736414747 * AcceptedCmp20  +    -0.08526063108983 *
2855857   +        AcceptedCmp30  +     0.00391518443243 * AcceptedCmp40
2855858   +          +    -0.11013908503956 * AcceptedCmp50  +     0.03814032229209 *
2855859   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.07692946904386 * AcceptedCmp10 + 0.10129736414747 * 
AcceptedCmp20 + -0.08526063108983 * AcceptedCmp30 + 0.00391518443243 * AcceptedCmp40 + 
-0.11013908503956 * AcceptedCmp50 + 0.03814032229209 * Complain0 ;
2855860   +   H1x1_3  = H1x1_3  +    -0.02206432573422 * AcceptedCmp10
2855861   +          +     0.22410311196864 * AcceptedCmp20  +    -0.19387020375313 *
2855862   +        AcceptedCmp30  +    -0.12058647992586 * AcceptedCmp40
2855863   +          +    -0.09809197464918 * AcceptedCmp50  +    -0.09604584189983 *
2855864   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.02206432573422 * AcceptedCmp10 + 0.22410311196864 * 
AcceptedCmp20 + -0.19387020375313 * AcceptedCmp30 + -0.12058647992586 * AcceptedCmp40 + 
-0.09809197464918 * AcceptedCmp50 + -0.09604584189983 * Complain0 ;
2855865   +   H1x1_1  = H1x1_1  +    -0.00017476927899 * Education2n_Cycle
2855866   +          +    -0.15306731287208 * EducationBasic  +     0.04951359729631 *
2855867   +        EducationGraduation  +     0.07475697967073 * EducationMaster
2855868   +          +    -0.04265434587882 * Marital_StatusDivorced
2855869   +          +     0.17114014094758 * Marital_StatusMarried
2855870   +          +     -0.1537035921296 * Marital_StatusSingle
2855871   +          +     0.15023718360478 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00017476927899 * Education2n_Cycle + 
-0.15306731287208 * EducationBasic + 0.04951359729631 * EducationGraduation + 0.07475697967073 
* EducationMaster + -0.04265434587882 * Marital_StatusDivorced + 0.17114014094758 * 
Marital_StatusMarried + -0.1537035921296 * Marital_StatusSingle + 0.15023718360478 * 
Marital_StatusTogether ;
2855872   +   H1x1_2  = H1x1_2  +     0.10391719023548 * Education2n_Cycle
2855873   +          +    -0.71597921887555 * EducationBasic  +     0.38732833028427 *
2855874   +        EducationGraduation  +     0.04507684017588 * EducationMaster
2855875   +          +     0.25534272809394 * Marital_StatusDivorced
2855876   +          +     0.20034903346804 * Marital_StatusMarried
2855877   +          +    -0.38348393943797 * Marital_StatusSingle
2855878   +          +     0.15254304652439 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.10391719023548 * Education2n_Cycle + 
-0.71597921887555 * EducationBasic + 0.38732833028427 * EducationGraduation + 0.04507684017588 
* EducationMaster + 0.25534272809394 * Marital_StatusDivorced + 0.20034903346804 * 
Marital_StatusMarried + -0.38348393943797 * Marital_StatusSingle + 0.15254304652439 * 
Marital_StatusTogether ;
2855879   +   H1x1_3  = H1x1_3  +     0.06104667656786 * Education2n_Cycle
2855880   +          +     -0.0935234366994 * EducationBasic  +     0.09446977823229 *
2855881   +        EducationGraduation  +    -0.11683780234266 * EducationMaster
2855882   +          +      0.1988416043876 * Marital_StatusDivorced
2855883   +          +    -0.21663959478684 * Marital_StatusMarried
2855884   +          +     0.06591480171547 * Marital_StatusSingle
2855885   +          +    -0.17108581516048 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.06104667656786 * Education2n_Cycle + 
-0.0935234366994 * EducationBasic + 0.09446977823229 * EducationGraduation + -0.11683780234266 
* EducationMaster + 0.1988416043876 * Marital_StatusDivorced + -0.21663959478684 * 
Marital_StatusMarried + 0.06591480171547 * Marital_StatusSingle + -0.17108581516048 * 
Marital_StatusTogether ;
2855886   +   H1x1_1  =     0.12085771569539 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.12085771569539 + H1x1_1 ;
2855887   +   H1x1_2  =     1.88026862462696 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.88026862462696 + H1x1_2 ;
2855888   +   H1x1_3  =    -1.66768306479405 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.66768306479405 + H1x1_3 ;
2855889   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
2855890   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
2855891   +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
2855892   +END;
MPRINT(EM_DIAGRAM):   END;
2855893   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2855894   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2855895   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2855896   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2855897   +END;
MPRINT(EM_DIAGRAM):   END;
2855898   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2855899   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2855900   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2855901   +
2855902   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2855903   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2855904   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2855905   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2855906   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2855907   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2855908   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2855909   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2855910   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2855911   +end;
MPRINT(EM_DIAGRAM):   end;
2855912   +else do;
MPRINT(EM_DIAGRAM):   else do;
2855913   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2855914   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2855915   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2855916   +   end;
MPRINT(EM_DIAGRAM):   end;
2855917   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2855918   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2855919   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2855920   +   end;
MPRINT(EM_DIAGRAM):   end;
2855921   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2855922   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2855923   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2855924   +   end;
MPRINT(EM_DIAGRAM):   end;
2855925   +end;
MPRINT(EM_DIAGRAM):   end;
2855926   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2855927   +   P_DepVar1  =    -105.465737701328 * H1x1_1  +    -25.9919910307682 * H1x1_2
2855928   +          +    -60.7557666068018 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -105.465737701328 * H1x1_1 + -25.9919910307682 * H1x1_2 + 
-60.7557666068018 * H1x1_3 ;
2855929   +   P_DepVar1  =     17.0796398396243 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 17.0796398396243 + P_DepVar1 ;
2855930   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2855931   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2855932   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2855933   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2855934   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2855935   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2855936   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2855937   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2855938   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2855939   +END;
MPRINT(EM_DIAGRAM):   END;
2855940   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2855941   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2855942   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2855943   +END;
MPRINT(EM_DIAGRAM):   END;
2855944   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2855945   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2855946   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2855947   +END;
MPRINT(EM_DIAGRAM):   END;
2855948   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2855949   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2855950   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2855951   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2855952   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2855953   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2855954   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2855955   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2855956   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2855957   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2855958   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2855959   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2855960   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2855961   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2855962   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2855963   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2855964   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2855965   +END;
MPRINT(EM_DIAGRAM):   END;
2855966   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2855967   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2855968   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2855969   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2855970    run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL46_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META2_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2855971    quit;
2855972    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
2855973    filename emflow
2855973  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural46\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural46\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural46: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2855974    *------------------------------------------------------------*;
2855975    * AutoNeural46: Scoring VALIDATE data;
2855976    *------------------------------------------------------------*;
2855977    data EMWS8.AutoNeural46_VALIDATE
2855978    / view=EMWS8.AutoNeural46_VALIDATE
2855979    ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural46_VALIDATE / view=EMWS8.AutoNeural46_VALIDATE ;
2855980    set EMWS8.Meta2_VALIDATE
2855981    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta2_VALIDATE ;
2855982    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural46\EMFLOWSCORE.sas.
2855983   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2855984   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2855985   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2855986   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2855987   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2855988   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2855989   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2855990   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2855991   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2855992   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2855993   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2855994   +LENGTH _WARN_ $4
2855995   +      F_DepVar  $ 12
2855996   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2855997   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2855998   +
2855999   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2856000   +
2856001   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2856002   +
2856003   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2856004   +
2856005   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2856006   +
2856007   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2856008   +
2856009   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2856010   +
2856011   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2856012   +
2856013   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2856014   +
2856015   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2856016   +
2856017   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2856018   +
2856019   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2856020   +
2856021   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2856022   +
2856023   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2856024   +
2856025   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2856026   +
2856027   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2856028   +
2856029   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2856030   +
2856031   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2856032   +
2856033   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2856034   +
2856035   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2856036   +
2856037   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2856038   +
2856039   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2856040   +
2856041   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2856042   +
2856043   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2856044   +
2856045   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2856046   +
2856047   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2856048   +
2856049   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2856050   +
2856051   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2856052   +
2856053   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2856054   +
2856055   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2856056   +
2856057   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2856058   +
2856059   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2856060   +
2856061   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2856062   +
2856063   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2856064   +
2856065   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2856066   +
2856067   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2856068   +
2856069   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2856070   +
2856071   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2856072   +
2856073   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2856074   +
2856075   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2856076   +
2856077   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2856078   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2856079   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2856080   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2856081   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2856082   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2856083   +end;
MPRINT(EM_DIAGRAM):   end;
2856084   +else do;
MPRINT(EM_DIAGRAM):   else do;
2856085   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2856086   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2856087   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2856088   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2856089   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2856090   +   end;
MPRINT(EM_DIAGRAM):   end;
2856091   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2856092   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2856093   +   end;
MPRINT(EM_DIAGRAM):   end;
2856094   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2856095   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2856096   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2856097   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2856098   +   end;
MPRINT(EM_DIAGRAM):   end;
2856099   +end;
MPRINT(EM_DIAGRAM):   end;
2856100   +
2856101   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2856102   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2856103   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2856104   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2856105   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2856106   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2856107   +end;
MPRINT(EM_DIAGRAM):   end;
2856108   +else do;
MPRINT(EM_DIAGRAM):   else do;
2856109   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2856110   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2856111   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2856112   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2856113   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2856114   +   end;
MPRINT(EM_DIAGRAM):   end;
2856115   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2856116   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2856117   +   end;
MPRINT(EM_DIAGRAM):   end;
2856118   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2856119   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2856120   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2856121   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2856122   +   end;
MPRINT(EM_DIAGRAM):   end;
2856123   +end;
MPRINT(EM_DIAGRAM):   end;
2856124   +
2856125   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2856126   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2856127   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2856128   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2856129   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2856130   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2856131   +end;
MPRINT(EM_DIAGRAM):   end;
2856132   +else do;
MPRINT(EM_DIAGRAM):   else do;
2856133   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2856134   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2856135   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2856136   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2856137   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2856138   +   end;
MPRINT(EM_DIAGRAM):   end;
2856139   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2856140   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2856141   +   end;
MPRINT(EM_DIAGRAM):   end;
2856142   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2856143   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2856144   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2856145   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2856146   +   end;
MPRINT(EM_DIAGRAM):   end;
2856147   +end;
MPRINT(EM_DIAGRAM):   end;
2856148   +
2856149   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2856150   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2856151   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2856152   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2856153   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2856154   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2856155   +end;
MPRINT(EM_DIAGRAM):   end;
2856156   +else do;
MPRINT(EM_DIAGRAM):   else do;
2856157   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2856158   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2856159   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2856160   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2856161   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2856162   +   end;
MPRINT(EM_DIAGRAM):   end;
2856163   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2856164   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2856165   +   end;
MPRINT(EM_DIAGRAM):   end;
2856166   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2856167   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2856168   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2856169   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2856170   +   end;
MPRINT(EM_DIAGRAM):   end;
2856171   +end;
MPRINT(EM_DIAGRAM):   end;
2856172   +
2856173   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2856174   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2856175   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2856176   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2856177   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2856178   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2856179   +end;
MPRINT(EM_DIAGRAM):   end;
2856180   +else do;
MPRINT(EM_DIAGRAM):   else do;
2856181   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2856182   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2856183   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2856184   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2856185   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2856186   +   end;
MPRINT(EM_DIAGRAM):   end;
2856187   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2856188   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2856189   +   end;
MPRINT(EM_DIAGRAM):   end;
2856190   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2856191   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2856192   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2856193   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2856194   +   end;
MPRINT(EM_DIAGRAM):   end;
2856195   +end;
MPRINT(EM_DIAGRAM):   end;
2856196   +
2856197   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2856198   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2856199   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2856200   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2856201   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2856202   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2856203   +end;
MPRINT(EM_DIAGRAM):   end;
2856204   +else do;
MPRINT(EM_DIAGRAM):   else do;
2856205   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2856206   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2856207   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2856208   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2856209   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2856210   +   end;
MPRINT(EM_DIAGRAM):   end;
2856211   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2856212   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2856213   +   end;
MPRINT(EM_DIAGRAM):   end;
2856214   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2856215   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2856216   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2856217   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2856218   +   end;
MPRINT(EM_DIAGRAM):   end;
2856219   +end;
MPRINT(EM_DIAGRAM):   end;
2856220   +
2856221   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2856222   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2856223   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2856224   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2856225   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2856226   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2856227   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2856228   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2856229   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2856230   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2856231   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2856232   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2856233   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2856234   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2856235   +end;
MPRINT(EM_DIAGRAM):   end;
2856236   +else do;
MPRINT(EM_DIAGRAM):   else do;
2856237   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2856238   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2856239   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2856240   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2856241   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2856242   +   end;
MPRINT(EM_DIAGRAM):   end;
2856243   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2856244   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2856245   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2856246   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2856247   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2856248   +   end;
MPRINT(EM_DIAGRAM):   end;
2856249   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2856250   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2856251   +   end;
MPRINT(EM_DIAGRAM):   end;
2856252   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2856253   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2856254   +   end;
MPRINT(EM_DIAGRAM):   end;
2856255   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2856256   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2856257   +   end;
MPRINT(EM_DIAGRAM):   end;
2856258   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2856259   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2856260   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2856261   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2856262   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2856263   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2856264   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2856265   +   end;
MPRINT(EM_DIAGRAM):   end;
2856266   +end;
MPRINT(EM_DIAGRAM):   end;
2856267   +
2856268   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2856269   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2856270   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2856271   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2856272   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2856273   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2856274   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2856275   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2856276   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2856277   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2856278   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2856279   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2856280   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2856281   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2856282   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2856283   +end;
MPRINT(EM_DIAGRAM):   end;
2856284   +else do;
MPRINT(EM_DIAGRAM):   else do;
2856285   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2856286   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2856287   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2856288   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2856289   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2856290   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2856291   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2856292   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2856293   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2856294   +         end;
MPRINT(EM_DIAGRAM):   end;
2856295   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2856296   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2856297   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2856298   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2856299   +            end;
MPRINT(EM_DIAGRAM):   end;
2856300   +         end;
MPRINT(EM_DIAGRAM):   end;
2856301   +      end;
MPRINT(EM_DIAGRAM):   end;
2856302   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2856303   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2856304   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2856305   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2856306   +         end;
MPRINT(EM_DIAGRAM):   end;
2856307   +      end;
MPRINT(EM_DIAGRAM):   end;
2856308   +   end;
MPRINT(EM_DIAGRAM):   end;
2856309   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2856310   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2856311   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2856312   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2856313   +      end;
MPRINT(EM_DIAGRAM):   end;
2856314   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2856315   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2856316   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2856317   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2856318   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2856319   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2856320   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2856321   +         end;
MPRINT(EM_DIAGRAM):   end;
2856322   +      end;
MPRINT(EM_DIAGRAM):   end;
2856323   +   end;
MPRINT(EM_DIAGRAM):   end;
2856324   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2856325   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2856326   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2856327   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2856328   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2856329   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2856330   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2856331   +   end;
MPRINT(EM_DIAGRAM):   end;
2856332   +end;
MPRINT(EM_DIAGRAM):   end;
2856333   +
2856334   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2856335   +*** Checking missing input Interval
2856336   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2856337   +
2856338   +IF NMISS(
2856339   +   Income ,
2856340   +   Kidhome ,
2856341   +   MntFishProducts ,
2856342   +   MntFruits ,
2856343   +   MntGoldProds ,
2856344   +   MntMeatProducts ,
2856345   +   MntSweetProducts ,
2856346   +   MntWines ,
2856347   +   NumCatalogPurchases ,
2856348   +   NumDealsPurchases ,
2856349   +   NumStorePurchases ,
2856350   +   NumWebPurchases ,
2856351   +   NumWebVisitsMonth ,
2856352   +   Recency ,
2856353   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
2856354   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2856355   +
2856356   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2856357   +END;
MPRINT(EM_DIAGRAM):   END;
2856358   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2856359   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2856360   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2856361   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2856362   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2856363   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2856364   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2856365   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2856366   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2856367   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2856368   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2856369   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2856370   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2856371   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2856372   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2856373   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2856374   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2856375   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2856376   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2856377   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2856378   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2856379   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2856380   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2856381   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2856382   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2856383   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2856384   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2856385   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2856386   +END;
MPRINT(EM_DIAGRAM):   END;
2856387   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2856388   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2856389   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2856390   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2856391   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2856392   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2856393   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2856394   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2856395   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2856396   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2856397   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2856398   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2856399   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2856400   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2856401   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2856402   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2856403   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2856404   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2856405   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2856406   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2856407   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2856408   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2856409   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2856410   +   ELSE S_NumCatalogPurchases
2856411   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2856412   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2856413   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2856414   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2856415   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2856416   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2856417   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2856418   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2856419   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2856420   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2856421   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2856422   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2856423   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2856424   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2856425   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2856426   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2856427   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2856428   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2856429   +END;
MPRINT(EM_DIAGRAM):   END;
2856430   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2856431   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2856432   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2856433   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2856434   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2856435   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2856436   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2856437   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2856438   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2856439   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2856440   +   H1x1_1  =    -0.14779241211238 * S_Income  +     0.12406923960108 *
2856441   +        S_Kidhome  +     0.07566108150758 * S_MntFishProducts
2856442   +          +     0.04223936357442 * S_MntFruits  +    -0.01414396912246 *
2856443   +        S_MntGoldProds  +    -0.43631543928923 * S_MntMeatProducts
2856444   +          +      0.0311909552218 * S_MntSweetProducts
2856445   +          +      0.1593908004139 * S_MntWines  +    -0.16331402526215 *
2856446   +        S_NumCatalogPurchases  +    -0.08123579404919 * S_NumDealsPurchases
2856447   +          +     0.12294876865087 * S_NumStorePurchases
2856448   +          +     0.11602382379314 * S_NumWebPurchases
2856449   +          +    -0.23519567542635 * S_NumWebVisitsMonth
2856450   +          +     0.27617232496223 * S_Recency  +     0.06912944740739 *
2856451   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.14779241211238 * S_Income + 0.12406923960108 * S_Kidhome + 
0.07566108150758 * S_MntFishProducts + 0.04223936357442 * S_MntFruits + -0.01414396912246 * 
S_MntGoldProds + -0.43631543928923 * S_MntMeatProducts + 0.0311909552218 * S_MntSweetProducts 
+ 0.1593908004139 * S_MntWines + -0.16331402526215 * S_NumCatalogPurchases + -0.08123579404919 
* S_NumDealsPurchases + 0.12294876865087 * S_NumStorePurchases + 0.11602382379314 * 
S_NumWebPurchases + -0.23519567542635 * S_NumWebVisitsMonth + 0.27617232496223 * S_Recency + 
0.06912944740739 * S_Teenhome ;
2856452   +   H1x1_2  =    -0.13491153011654 * S_Income  +     0.14656938917448 *
2856453   +        S_Kidhome  +     0.04457005191996 * S_MntFishProducts
2856454   +          +     0.00771761834647 * S_MntFruits  +    -0.11830651019438 *
2856455   +        S_MntGoldProds  +     0.06464771115751 * S_MntMeatProducts
2856456   +          +     0.00133400054994 * S_MntSweetProducts
2856457   +          +    -0.63837598558931 * S_MntWines  +     0.09668222160749 *
2856458   +        S_NumCatalogPurchases  +     0.23530173987642 * S_NumDealsPurchases
2856459   +          +    -0.49595472235036 * S_NumStorePurchases
2856460   +          +    -0.24747548015204 * S_NumWebPurchases
2856461   +          +     0.12326047694811 * S_NumWebVisitsMonth
2856462   +          +    -0.04929000435218 * S_Recency  +     0.00568113597531 *
2856463   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.13491153011654 * S_Income + 0.14656938917448 * S_Kidhome + 
0.04457005191996 * S_MntFishProducts + 0.00771761834647 * S_MntFruits + -0.11830651019438 * 
S_MntGoldProds + 0.06464771115751 * S_MntMeatProducts + 0.00133400054994 * S_MntSweetProducts 
+ -0.63837598558931 * S_MntWines + 0.09668222160749 * S_NumCatalogPurchases + 0.23530173987642 
* S_NumDealsPurchases + -0.49595472235036 * S_NumStorePurchases + -0.24747548015204 * 
S_NumWebPurchases + 0.12326047694811 * S_NumWebVisitsMonth + -0.04929000435218 * S_Recency + 
0.00568113597531 * S_Teenhome ;
2856464   +   H1x1_3  =     0.13062973754666 * S_Income  +    -0.15311279667585 *
2856465   +        S_Kidhome  +      0.0854652628099 * S_MntFishProducts
2856466   +          +     0.02260695043189 * S_MntFruits  +    -0.06427354034325 *
2856467   +        S_MntGoldProds  +    -0.51556004816788 * S_MntMeatProducts
2856468   +          +    -0.03908755288099 * S_MntSweetProducts
2856469   +          +    -0.24983513168561 * S_MntWines  +     0.11583370343483 *
2856470   +        S_NumCatalogPurchases  +     0.05060583856766 * S_NumDealsPurchases
2856471   +          +    -0.20634630081435 * S_NumStorePurchases
2856472   +          +    -0.06734935798888 * S_NumWebPurchases
2856473   +          +     0.32288250215418 * S_NumWebVisitsMonth
2856474   +          +    -0.32978147839937 * S_Recency  +    -0.07420334428475 *
2856475   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.13062973754666 * S_Income + -0.15311279667585 * S_Kidhome + 
0.0854652628099 * S_MntFishProducts + 0.02260695043189 * S_MntFruits + -0.06427354034325 * 
S_MntGoldProds + -0.51556004816788 * S_MntMeatProducts + -0.03908755288099 * 
S_MntSweetProducts + -0.24983513168561 * S_MntWines + 0.11583370343483 * S_NumCatalogPurchases 
+ 0.05060583856766 * S_NumDealsPurchases + -0.20634630081435 * S_NumStorePurchases + 
-0.06734935798888 * S_NumWebPurchases + 0.32288250215418 * S_NumWebVisitsMonth + 
-0.32978147839937 * S_Recency + -0.07420334428475 * S_Teenhome ;
2856476   +   H1x1_1  = H1x1_1  +     0.14311220987159 * AcceptedCmp10
2856477   +          +     0.25596748420576 * AcceptedCmp20  +     0.13199169114019 *
2856478   +        AcceptedCmp30  +     0.14111066281846 * AcceptedCmp40
2856479   +          +     0.16136804502708 * AcceptedCmp50  +     0.06340055511955 *
2856480   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.14311220987159 * AcceptedCmp10 + 0.25596748420576 * 
AcceptedCmp20 + 0.13199169114019 * AcceptedCmp30 + 0.14111066281846 * AcceptedCmp40 + 
0.16136804502708 * AcceptedCmp50 + 0.06340055511955 * Complain0 ;
2856481   +   H1x1_2  = H1x1_2  +     0.07692946904386 * AcceptedCmp10
2856482   +          +     0.10129736414747 * AcceptedCmp20  +    -0.08526063108983 *
2856483   +        AcceptedCmp30  +     0.00391518443243 * AcceptedCmp40
2856484   +          +    -0.11013908503956 * AcceptedCmp50  +     0.03814032229209 *
2856485   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.07692946904386 * AcceptedCmp10 + 0.10129736414747 * 
AcceptedCmp20 + -0.08526063108983 * AcceptedCmp30 + 0.00391518443243 * AcceptedCmp40 + 
-0.11013908503956 * AcceptedCmp50 + 0.03814032229209 * Complain0 ;
2856486   +   H1x1_3  = H1x1_3  +    -0.02206432573422 * AcceptedCmp10
2856487   +          +     0.22410311196864 * AcceptedCmp20  +    -0.19387020375313 *
2856488   +        AcceptedCmp30  +    -0.12058647992586 * AcceptedCmp40
2856489   +          +    -0.09809197464918 * AcceptedCmp50  +    -0.09604584189983 *
2856490   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.02206432573422 * AcceptedCmp10 + 0.22410311196864 * 
AcceptedCmp20 + -0.19387020375313 * AcceptedCmp30 + -0.12058647992586 * AcceptedCmp40 + 
-0.09809197464918 * AcceptedCmp50 + -0.09604584189983 * Complain0 ;
2856491   +   H1x1_1  = H1x1_1  +    -0.00017476927899 * Education2n_Cycle
2856492   +          +    -0.15306731287208 * EducationBasic  +     0.04951359729631 *
2856493   +        EducationGraduation  +     0.07475697967073 * EducationMaster
2856494   +          +    -0.04265434587882 * Marital_StatusDivorced
2856495   +          +     0.17114014094758 * Marital_StatusMarried
2856496   +          +     -0.1537035921296 * Marital_StatusSingle
2856497   +          +     0.15023718360478 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00017476927899 * Education2n_Cycle + 
-0.15306731287208 * EducationBasic + 0.04951359729631 * EducationGraduation + 0.07475697967073 
* EducationMaster + -0.04265434587882 * Marital_StatusDivorced + 0.17114014094758 * 
Marital_StatusMarried + -0.1537035921296 * Marital_StatusSingle + 0.15023718360478 * 
Marital_StatusTogether ;
2856498   +   H1x1_2  = H1x1_2  +     0.10391719023548 * Education2n_Cycle
2856499   +          +    -0.71597921887555 * EducationBasic  +     0.38732833028427 *
2856500   +        EducationGraduation  +     0.04507684017588 * EducationMaster
2856501   +          +     0.25534272809394 * Marital_StatusDivorced
2856502   +          +     0.20034903346804 * Marital_StatusMarried
2856503   +          +    -0.38348393943797 * Marital_StatusSingle
2856504   +          +     0.15254304652439 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.10391719023548 * Education2n_Cycle + 
-0.71597921887555 * EducationBasic + 0.38732833028427 * EducationGraduation + 0.04507684017588 
* EducationMaster + 0.25534272809394 * Marital_StatusDivorced + 0.20034903346804 * 
Marital_StatusMarried + -0.38348393943797 * Marital_StatusSingle + 0.15254304652439 * 
Marital_StatusTogether ;
2856505   +   H1x1_3  = H1x1_3  +     0.06104667656786 * Education2n_Cycle
2856506   +          +     -0.0935234366994 * EducationBasic  +     0.09446977823229 *
2856507   +        EducationGraduation  +    -0.11683780234266 * EducationMaster
2856508   +          +      0.1988416043876 * Marital_StatusDivorced
2856509   +          +    -0.21663959478684 * Marital_StatusMarried
2856510   +          +     0.06591480171547 * Marital_StatusSingle
2856511   +          +    -0.17108581516048 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.06104667656786 * Education2n_Cycle + 
-0.0935234366994 * EducationBasic + 0.09446977823229 * EducationGraduation + -0.11683780234266 
* EducationMaster + 0.1988416043876 * Marital_StatusDivorced + -0.21663959478684 * 
Marital_StatusMarried + 0.06591480171547 * Marital_StatusSingle + -0.17108581516048 * 
Marital_StatusTogether ;
2856512   +   H1x1_1  =     0.12085771569539 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.12085771569539 + H1x1_1 ;
2856513   +   H1x1_2  =     1.88026862462696 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.88026862462696 + H1x1_2 ;
2856514   +   H1x1_3  =    -1.66768306479405 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.66768306479405 + H1x1_3 ;
2856515   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
2856516   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
2856517   +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
2856518   +END;
MPRINT(EM_DIAGRAM):   END;
2856519   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2856520   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2856521   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2856522   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2856523   +END;
MPRINT(EM_DIAGRAM):   END;
2856524   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2856525   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2856526   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2856527   +
2856528   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2856529   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2856530   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2856531   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2856532   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2856533   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2856534   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2856535   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2856536   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2856537   +end;
MPRINT(EM_DIAGRAM):   end;
2856538   +else do;
MPRINT(EM_DIAGRAM):   else do;
2856539   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2856540   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2856541   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2856542   +   end;
MPRINT(EM_DIAGRAM):   end;
2856543   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2856544   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2856545   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2856546   +   end;
MPRINT(EM_DIAGRAM):   end;
2856547   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2856548   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2856549   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2856550   +   end;
MPRINT(EM_DIAGRAM):   end;
2856551   +end;
MPRINT(EM_DIAGRAM):   end;
2856552   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2856553   +   P_DepVar1  =    -105.465737701328 * H1x1_1  +    -25.9919910307682 * H1x1_2
2856554   +          +    -60.7557666068018 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -105.465737701328 * H1x1_1 + -25.9919910307682 * H1x1_2 + 
-60.7557666068018 * H1x1_3 ;
2856555   +   P_DepVar1  =     17.0796398396243 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 17.0796398396243 + P_DepVar1 ;
2856556   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2856557   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2856558   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2856559   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2856560   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2856561   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2856562   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2856563   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2856564   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2856565   +END;
MPRINT(EM_DIAGRAM):   END;
2856566   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2856567   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2856568   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2856569   +END;
MPRINT(EM_DIAGRAM):   END;
2856570   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2856571   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2856572   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2856573   +END;
MPRINT(EM_DIAGRAM):   END;
2856574   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2856575   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2856576   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2856577   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2856578   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2856579   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2856580   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2856581   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2856582   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2856583   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2856584   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2856585   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2856586   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2856587   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2856588   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2856589   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2856590   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2856591   +END;
MPRINT(EM_DIAGRAM):   END;
2856592   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2856593   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2856594   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2856595   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2856596    run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL46_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META2_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2856597    quit;
2856598    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
2856599    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2856600    * AutoNeural46: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural46: Computing metadata for TRAIN data;
2856601    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.AUTONEURAL46_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural46\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural46_TRAIN out=_tempAdvisor 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural46_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural46_TRAIN out=WORK.M1W46IQT 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1W46IQT;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1W46IQT(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1W46IQT;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1W46IQT;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2KEQD53 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2KEQD53;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2KEQD53;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2FJNBY5(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2KEQD53;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2KEQD53;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2KEQD53;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2KEQD53;
MPRINT(EMADVISECOLUMNS):   set WORK.M2KEQD53;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta2_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta2_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural46_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural46";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural46";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural46";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural46";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural46";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural46";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural46";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural46";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural46";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural46";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural46: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
2856913    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
2856914    set EMWS8.AutoNeural46_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural46_EMINFO;
2856915    where DATA='AutoNeural46' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural46' and KEY ^in('DECDATA', 'DECMETA', 
'IMPORTANCE', 'MODEL');
2856916    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL46_EMINFO.
      WHERE (DATA='AutoNeural46') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2856917    data EMWS8.AutoNeural46_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural46_EMINFO;
2856918    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
2856919    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
2856920    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.AUTONEURAL46_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   run;
2856924    run;
2856925    data EMWS8.AutoNeural46_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural46_EMINFO;
2856926    set EMWS8.AutoNeural46_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural46_EMINFO WORK.MODELTEMP_INFO;
2856927    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL46_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL46_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2856928    proc sort data = EMWS8.AutoNeural46_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural46_EMINFO NOTHREADS;
2856929    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2856930    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL46_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL46_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2856931    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
2856932    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2856933    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2856934    proc sort data = EMWS8.AutoNeural46_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural46_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
2856935    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2856936    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL46_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2856937    data EMWS8.AutoNeural46_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural46_EMINFO;
2856938    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
2856939    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2856940    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL46_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2856941    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
2856942    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
2856943    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
2856944    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

NOTE: View EMWS8.AUTONEURAL46_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.06 seconds
      
NOTE: View EMWS8.AUTONEURAL46_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
