MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.51 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                19.51 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3979QRL 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural46\EMSCORE.out" encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3979QRL new;
MPRINT(EM_DIAGRAM):   run;
517744     filename emflow
517744   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural46\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural46\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural46: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
517745     *------------------------------------------------------------*;
517746     * AutoNeural46: Scoring DATA data;
517747     *------------------------------------------------------------*;
517748     data EMWS8.AutoNeural46_TRAIN
517749     / view=EMWS8.AutoNeural46_TRAIN
517750     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural46_TRAIN / view=EMWS8.AutoNeural46_TRAIN ;
517751     set EMWS8.Meta2_TRAIN
517752     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta2_TRAIN ;
517753     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural46\EMFLOWSCORE.sas.
517754    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
517755    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
517756    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
517757    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
517758    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
517759    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
517760    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
517761    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
517762    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
517763    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
517764    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
517765    +LENGTH _WARN_ $4
517766    +      F_DepVar  $ 12
517767    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
517768    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
517769    +
517770    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
517771    +
517772    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
517773    +
517774    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
517775    +
517776    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
517777    +
517778    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
517779    +
517780    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
517781    +
517782    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
517783    +
517784    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
517785    +
517786    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
517787    +
517788    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
517789    +
517790    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
517791    +
517792    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
517793    +
517794    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
517795    +
517796    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
517797    +
517798    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
517799    +
517800    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
517801    +
517802    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
517803    +
517804    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
517805    +
517806    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
517807    +
517808    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
517809    +
517810    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
517811    +
517812    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
517813    +
517814    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
517815    +
517816    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
517817    +
517818    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
517819    +
517820    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
517821    +
517822    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
517823    +
517824    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
517825    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
517826    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
517827    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
517828    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
517829    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
517830    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
517831    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
517832    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
517833    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
517834    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
517835    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
517836    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
517837    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
517838    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
517839    +end;
MPRINT(EM_DIAGRAM):   end;
517840    +else do;
MPRINT(EM_DIAGRAM):   else do;
517841    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
517842    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
517843    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
517844    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
517845    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
517846    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
517847    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
517848    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
517849    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
517850    +         end;
MPRINT(EM_DIAGRAM):   end;
517851    +         else do;
MPRINT(EM_DIAGRAM):   else do;
517852    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
517853    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
517854    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
517855    +            end;
MPRINT(EM_DIAGRAM):   end;
517856    +         end;
MPRINT(EM_DIAGRAM):   end;
517857    +      end;
MPRINT(EM_DIAGRAM):   end;
517858    +      else do;
MPRINT(EM_DIAGRAM):   else do;
517859    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
517860    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
517861    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
517862    +         end;
MPRINT(EM_DIAGRAM):   end;
517863    +      end;
MPRINT(EM_DIAGRAM):   end;
517864    +   end;
MPRINT(EM_DIAGRAM):   end;
517865    +   else do;
MPRINT(EM_DIAGRAM):   else do;
517866    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
517867    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
517868    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
517869    +      end;
MPRINT(EM_DIAGRAM):   end;
517870    +      else do;
MPRINT(EM_DIAGRAM):   else do;
517871    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
517872    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
517873    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
517874    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
517875    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
517876    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
517877    +         end;
MPRINT(EM_DIAGRAM):   end;
517878    +      end;
MPRINT(EM_DIAGRAM):   end;
517879    +   end;
MPRINT(EM_DIAGRAM):   end;
517880    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
517881    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
517882    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
517883    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
517884    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
517885    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
517886    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
517887    +   end;
MPRINT(EM_DIAGRAM):   end;
517888    +end;
MPRINT(EM_DIAGRAM):   end;
517889    +
517890    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
517891    +*** Checking missing input Interval
517892    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
517893    +
517894    +IF NMISS(
517895    +   AcceptedCmpTotal ,
517896    +   Frq ,
517897    +   Income ,
517898    +   Mnt ,
517899    +   MntGoldProds ,
517900    +   MntMeatProducts ,
517901    +   NumCatalogPurchases ,
517902    +   NumDealsPurchases ,
517903    +   NumWebVisitsMonth ,
517904    +   RFMstat ,
517905    +   Recency ,
517906    +   Teenhome ,
517907    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat , 
Recency , Teenhome , Year_Birth ) THEN DO;
517908    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
517909    +
517910    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
517911    +END;
MPRINT(EM_DIAGRAM):   END;
517912    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
517913    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
517914    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
517915    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
517916    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
517917    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
517918    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
517919    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
517920    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
517921    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
517922    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
517923    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
517924    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
517925    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
517926    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
517927    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
517928    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
517929    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
517930    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
517931    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
517932    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
517933    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
517934    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
517935    +END;
MPRINT(EM_DIAGRAM):   END;
517936    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
517937    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
517938    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
517939    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
517940    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
517941    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
517942    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
517943    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
517944    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
517945    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
517946    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
517947    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
517948    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
517949    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
517950    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
517951    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
517952    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
517953    +   ELSE S_NumCatalogPurchases
517954    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
517955    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
517956    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
517957    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
517958    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
517959    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
517960    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
517961    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
517962    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
517963    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
517964    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
517965    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
517966    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
517967    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
517968    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
517969    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
517970    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
517971    +END;
MPRINT(EM_DIAGRAM):   END;
517972    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
517973    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
517974    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
517975    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
517976    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
517977    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
517978    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
517979    +   H1x1_1  =    -0.10743056275421 * S_AcceptedCmpTotal
517980    +          +     0.03409888241348 * S_Frq  +    -0.00055974837068 * S_Income
517981    +          +       0.134341851096 * S_Mnt  +    -0.00857864409164 *
517982    +        S_MntGoldProds  +      0.4895390061827 * S_MntMeatProducts
517983    +          +    -0.01423451356563 * S_NumCatalogPurchases
517984    +          +     0.06006350655487 * S_NumDealsPurchases
517985    +          +    -0.20885493964335 * S_NumWebVisitsMonth
517986    +          +    -0.01173202621744 * S_RFMstat  +     0.25819909101611 *
517987    +        S_Recency  +    -0.03326479668652 * S_Teenhome
517988    +          +     0.03371888312814 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.10743056275421 * S_AcceptedCmpTotal + 0.03409888241348 * 
S_Frq + -0.00055974837068 * S_Income + 0.134341851096 * S_Mnt + -0.00857864409164 * 
S_MntGoldProds + 0.4895390061827 * S_MntMeatProducts + -0.01423451356563 * 
S_NumCatalogPurchases + 0.06006350655487 * S_NumDealsPurchases + -0.20885493964335 * 
S_NumWebVisitsMonth + -0.01173202621744 * S_RFMstat + 0.25819909101611 * S_Recency + 
-0.03326479668652 * S_Teenhome + 0.03371888312814 * S_Year_Birth ;
517989    +   H1x1_2  =    -0.03078478134042 * S_AcceptedCmpTotal
517990    +          +    -0.12351766308972 * S_Frq  +     -0.1943406821731 * S_Income
517991    +          +    -0.36027326127049 * S_Mnt  +     0.05117597516658 *
517992    +        S_MntGoldProds  +     0.07931191953223 * S_MntMeatProducts
517993    +          +    -0.03109266966794 * S_NumCatalogPurchases
517994    +          +     0.05524435494328 * S_NumDealsPurchases
517995    +          +     -0.0105802056898 * S_NumWebVisitsMonth
517996    +          +     0.01793771049002 * S_RFMstat  +      0.0322880575902 *
517997    +        S_Recency  +       0.195010707702 * S_Teenhome
517998    +          +     -0.0351563039686 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.03078478134042 * S_AcceptedCmpTotal + -0.12351766308972 * 
S_Frq + -0.1943406821731 * S_Income + -0.36027326127049 * S_Mnt + 0.05117597516658 * 
S_MntGoldProds + 0.07931191953223 * S_MntMeatProducts + -0.03109266966794 * 
S_NumCatalogPurchases + 0.05524435494328 * S_NumDealsPurchases + -0.0105802056898 * 
S_NumWebVisitsMonth + 0.01793771049002 * S_RFMstat + 0.0322880575902 * S_Recency + 
0.195010707702 * S_Teenhome + -0.0351563039686 * S_Year_Birth ;
517999    +   H1x1_3  =     0.23990987498311 * S_AcceptedCmpTotal
518000    +          +     0.04052411845464 * S_Frq  +    -0.00302331972067 * S_Income
518001    +          +     0.39981531247427 * S_Mnt  +     0.01433011413993 *
518002    +        S_MntGoldProds  +    -0.19955782687502 * S_MntMeatProducts
518003    +          +     0.07777995109144 * S_NumCatalogPurchases
518004    +          +     0.08683394019767 * S_NumDealsPurchases
518005    +          +     0.27328366433987 * S_NumWebVisitsMonth
518006    +          +      0.0263930429288 * S_RFMstat  +    -0.38900647412136 *
518007    +        S_Recency  +      0.0640153287908 * S_Teenhome
518008    +          +     0.07587467002123 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.23990987498311 * S_AcceptedCmpTotal + 0.04052411845464 * 
S_Frq + -0.00302331972067 * S_Income + 0.39981531247427 * S_Mnt + 0.01433011413993 * 
S_MntGoldProds + -0.19955782687502 * S_MntMeatProducts + 0.07777995109144 * 
S_NumCatalogPurchases + 0.08683394019767 * S_NumDealsPurchases + 0.27328366433987 * 
S_NumWebVisitsMonth + 0.0263930429288 * S_RFMstat + -0.38900647412136 * S_Recency + 
0.0640153287908 * S_Teenhome + 0.07587467002123 * S_Year_Birth ;
518009    +   H1x1_1  = H1x1_1  +    -0.05820552608682 * Marital_StatusDivorced
518010    +          +    -0.02695167777393 * Marital_StatusMarried
518011    +          +    -0.00733864032764 * Marital_StatusSingle
518012    +          +     0.03838747494293 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.05820552608682 * Marital_StatusDivorced + 
-0.02695167777393 * Marital_StatusMarried + -0.00733864032764 * Marital_StatusSingle + 
0.03838747494293 * Marital_StatusTogether ;
518013    +   H1x1_2  = H1x1_2  +    -0.00853551919442 * Marital_StatusDivorced
518014    +          +     0.42249671001117 * Marital_StatusMarried
518015    +          +    -0.18515416581955 * Marital_StatusSingle
518016    +          +     0.25783473520826 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.00853551919442 * Marital_StatusDivorced + 
0.42249671001117 * Marital_StatusMarried + -0.18515416581955 * Marital_StatusSingle + 
0.25783473520826 * Marital_StatusTogether ;
518017    +   H1x1_3  = H1x1_3  +      0.4175036565076 * Marital_StatusDivorced
518018    +          +     0.45127582934777 * Marital_StatusMarried
518019    +          +       0.358157766485 * Marital_StatusSingle
518020    +          +     0.42627185625497 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.4175036565076 * Marital_StatusDivorced + 
0.45127582934777 * Marital_StatusMarried + 0.358157766485 * Marital_StatusSingle + 
0.42627185625497 * Marital_StatusTogether ;
518021    +   H1x1_1  =    -1.23226472635566 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.23226472635566 + H1x1_1 ;
518022    +   H1x1_2  =      2.2313165328971 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.2313165328971 + H1x1_2 ;
518023    +   H1x1_3  =     0.09755782095138 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.09755782095138 + H1x1_3 ;
518024    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
518025    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
518026    +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
518027    +END;
MPRINT(EM_DIAGRAM):   END;
518028    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
518029    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
518030    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
518031    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
518032    +END;
MPRINT(EM_DIAGRAM):   END;
518033    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
518034    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
518035    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
518036    +
518037    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
518038    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
518039    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
518040    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
518041    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
518042    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
518043    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
518044    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
518045    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
518046    +end;
MPRINT(EM_DIAGRAM):   end;
518047    +else do;
MPRINT(EM_DIAGRAM):   else do;
518048    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
518049    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
518050    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
518051    +   end;
MPRINT(EM_DIAGRAM):   end;
518052    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
518053    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
518054    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
518055    +   end;
MPRINT(EM_DIAGRAM):   end;
518056    +   else do;
MPRINT(EM_DIAGRAM):   else do;
518057    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
518058    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
518059    +   end;
MPRINT(EM_DIAGRAM):   end;
518060    +end;
MPRINT(EM_DIAGRAM):   end;
518061    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
518062    +   P_DepVar1  =     -68.075125441494 * H1x1_1  +    -72.7630361672259 * H1x1_2
518063    +          +    -71.6251597703755 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -68.075125441494 * H1x1_1 + -72.7630361672259 * H1x1_2 + 
-71.6251597703755 * H1x1_3 ;
518064    +   P_DepVar1  =    -25.6080957302662 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -25.6080957302662 + P_DepVar1 ;
518065    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
518066    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
518067    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
518068    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
518069    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
518070    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
518071    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
518072    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
518073    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
518074    +END;
MPRINT(EM_DIAGRAM):   END;
518075    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
518076    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
518077    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
518078    +END;
MPRINT(EM_DIAGRAM):   END;
518079    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
518080    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
518081    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
518082    +END;
MPRINT(EM_DIAGRAM):   END;
518083    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
518084    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
518085    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
518086    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
518087    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
518088    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
518089    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
518090    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
518091    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
518092    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
518093    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
518094    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
518095    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
518096    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
518097    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
518098    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
518099    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
518100    +END;
MPRINT(EM_DIAGRAM):   END;
518101    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
518102    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
518103    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
518104    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
518105     run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL46_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META2_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
518106     quit;
518107     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
518108     filename emflow
518108   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural46\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural46\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural46: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
518109     *------------------------------------------------------------*;
518110     * AutoNeural46: Scoring VALIDATE data;
518111     *------------------------------------------------------------*;
518112     data EMWS8.AutoNeural46_VALIDATE
518113     / view=EMWS8.AutoNeural46_VALIDATE
518114     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural46_VALIDATE / view=EMWS8.AutoNeural46_VALIDATE ;
518115     set EMWS8.Meta2_VALIDATE
518116     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta2_VALIDATE ;
518117     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural46\EMFLOWSCORE.sas.
518118    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
518119    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
518120    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
518121    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
518122    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
518123    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
518124    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
518125    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
518126    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
518127    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
518128    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
518129    +LENGTH _WARN_ $4
518130    +      F_DepVar  $ 12
518131    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
518132    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
518133    +
518134    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
518135    +
518136    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
518137    +
518138    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
518139    +
518140    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
518141    +
518142    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
518143    +
518144    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
518145    +
518146    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
518147    +
518148    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
518149    +
518150    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
518151    +
518152    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
518153    +
518154    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
518155    +
518156    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
518157    +
518158    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
518159    +
518160    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
518161    +
518162    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
518163    +
518164    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
518165    +
518166    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
518167    +
518168    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
518169    +
518170    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
518171    +
518172    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
518173    +
518174    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
518175    +
518176    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
518177    +
518178    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
518179    +
518180    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
518181    +
518182    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
518183    +
518184    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
518185    +
518186    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
518187    +
518188    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
518189    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
518190    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
518191    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
518192    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
518193    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
518194    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
518195    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
518196    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
518197    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
518198    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
518199    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
518200    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
518201    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
518202    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
518203    +end;
MPRINT(EM_DIAGRAM):   end;
518204    +else do;
MPRINT(EM_DIAGRAM):   else do;
518205    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
518206    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
518207    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
518208    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
518209    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
518210    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
518211    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
518212    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
518213    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
518214    +         end;
MPRINT(EM_DIAGRAM):   end;
518215    +         else do;
MPRINT(EM_DIAGRAM):   else do;
518216    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
518217    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
518218    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
518219    +            end;
MPRINT(EM_DIAGRAM):   end;
518220    +         end;
MPRINT(EM_DIAGRAM):   end;
518221    +      end;
MPRINT(EM_DIAGRAM):   end;
518222    +      else do;
MPRINT(EM_DIAGRAM):   else do;
518223    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
518224    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
518225    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
518226    +         end;
MPRINT(EM_DIAGRAM):   end;
518227    +      end;
MPRINT(EM_DIAGRAM):   end;
518228    +   end;
MPRINT(EM_DIAGRAM):   end;
518229    +   else do;
MPRINT(EM_DIAGRAM):   else do;
518230    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
518231    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
518232    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
518233    +      end;
MPRINT(EM_DIAGRAM):   end;
518234    +      else do;
MPRINT(EM_DIAGRAM):   else do;
518235    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
518236    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
518237    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
518238    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
518239    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
518240    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
518241    +         end;
MPRINT(EM_DIAGRAM):   end;
518242    +      end;
MPRINT(EM_DIAGRAM):   end;
518243    +   end;
MPRINT(EM_DIAGRAM):   end;
518244    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
518245    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
518246    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
518247    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
518248    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
518249    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
518250    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
518251    +   end;
MPRINT(EM_DIAGRAM):   end;
518252    +end;
MPRINT(EM_DIAGRAM):   end;
518253    +
518254    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
518255    +*** Checking missing input Interval
518256    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
518257    +
518258    +IF NMISS(
518259    +   AcceptedCmpTotal ,
518260    +   Frq ,
518261    +   Income ,
518262    +   Mnt ,
518263    +   MntGoldProds ,
518264    +   MntMeatProducts ,
518265    +   NumCatalogPurchases ,
518266    +   NumDealsPurchases ,
518267    +   NumWebVisitsMonth ,
518268    +   RFMstat ,
518269    +   Recency ,
518270    +   Teenhome ,
518271    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat , 
Recency , Teenhome , Year_Birth ) THEN DO;
518272    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
518273    +
518274    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
518275    +END;
MPRINT(EM_DIAGRAM):   END;
518276    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
518277    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
518278    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
518279    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
518280    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
518281    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
518282    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
518283    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
518284    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
518285    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
518286    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
518287    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
518288    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
518289    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
518290    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
518291    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
518292    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
518293    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
518294    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
518295    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
518296    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
518297    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
518298    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
518299    +END;
MPRINT(EM_DIAGRAM):   END;
518300    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
518301    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
518302    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
518303    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
518304    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
518305    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
518306    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
518307    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
518308    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
518309    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
518310    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
518311    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
518312    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
518313    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
518314    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
518315    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
518316    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
518317    +   ELSE S_NumCatalogPurchases
518318    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
518319    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
518320    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
518321    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
518322    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
518323    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
518324    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
518325    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
518326    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
518327    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
518328    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
518329    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
518330    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
518331    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
518332    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
518333    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
518334    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
518335    +END;
MPRINT(EM_DIAGRAM):   END;
518336    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
518337    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
518338    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
518339    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
518340    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
518341    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
518342    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
518343    +   H1x1_1  =    -0.10743056275421 * S_AcceptedCmpTotal
518344    +          +     0.03409888241348 * S_Frq  +    -0.00055974837068 * S_Income
518345    +          +       0.134341851096 * S_Mnt  +    -0.00857864409164 *
518346    +        S_MntGoldProds  +      0.4895390061827 * S_MntMeatProducts
518347    +          +    -0.01423451356563 * S_NumCatalogPurchases
518348    +          +     0.06006350655487 * S_NumDealsPurchases
518349    +          +    -0.20885493964335 * S_NumWebVisitsMonth
518350    +          +    -0.01173202621744 * S_RFMstat  +     0.25819909101611 *
518351    +        S_Recency  +    -0.03326479668652 * S_Teenhome
518352    +          +     0.03371888312814 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.10743056275421 * S_AcceptedCmpTotal + 0.03409888241348 * 
S_Frq + -0.00055974837068 * S_Income + 0.134341851096 * S_Mnt + -0.00857864409164 * 
S_MntGoldProds + 0.4895390061827 * S_MntMeatProducts + -0.01423451356563 * 
S_NumCatalogPurchases + 0.06006350655487 * S_NumDealsPurchases + -0.20885493964335 * 
S_NumWebVisitsMonth + -0.01173202621744 * S_RFMstat + 0.25819909101611 * S_Recency + 
-0.03326479668652 * S_Teenhome + 0.03371888312814 * S_Year_Birth ;
518353    +   H1x1_2  =    -0.03078478134042 * S_AcceptedCmpTotal
518354    +          +    -0.12351766308972 * S_Frq  +     -0.1943406821731 * S_Income
518355    +          +    -0.36027326127049 * S_Mnt  +     0.05117597516658 *
518356    +        S_MntGoldProds  +     0.07931191953223 * S_MntMeatProducts
518357    +          +    -0.03109266966794 * S_NumCatalogPurchases
518358    +          +     0.05524435494328 * S_NumDealsPurchases
518359    +          +     -0.0105802056898 * S_NumWebVisitsMonth
518360    +          +     0.01793771049002 * S_RFMstat  +      0.0322880575902 *
518361    +        S_Recency  +       0.195010707702 * S_Teenhome
518362    +          +     -0.0351563039686 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.03078478134042 * S_AcceptedCmpTotal + -0.12351766308972 * 
S_Frq + -0.1943406821731 * S_Income + -0.36027326127049 * S_Mnt + 0.05117597516658 * 
S_MntGoldProds + 0.07931191953223 * S_MntMeatProducts + -0.03109266966794 * 
S_NumCatalogPurchases + 0.05524435494328 * S_NumDealsPurchases + -0.0105802056898 * 
S_NumWebVisitsMonth + 0.01793771049002 * S_RFMstat + 0.0322880575902 * S_Recency + 
0.195010707702 * S_Teenhome + -0.0351563039686 * S_Year_Birth ;
518363    +   H1x1_3  =     0.23990987498311 * S_AcceptedCmpTotal
518364    +          +     0.04052411845464 * S_Frq  +    -0.00302331972067 * S_Income
518365    +          +     0.39981531247427 * S_Mnt  +     0.01433011413993 *
518366    +        S_MntGoldProds  +    -0.19955782687502 * S_MntMeatProducts
518367    +          +     0.07777995109144 * S_NumCatalogPurchases
518368    +          +     0.08683394019767 * S_NumDealsPurchases
518369    +          +     0.27328366433987 * S_NumWebVisitsMonth
518370    +          +      0.0263930429288 * S_RFMstat  +    -0.38900647412136 *
518371    +        S_Recency  +      0.0640153287908 * S_Teenhome
518372    +          +     0.07587467002123 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.23990987498311 * S_AcceptedCmpTotal + 0.04052411845464 * 
S_Frq + -0.00302331972067 * S_Income + 0.39981531247427 * S_Mnt + 0.01433011413993 * 
S_MntGoldProds + -0.19955782687502 * S_MntMeatProducts + 0.07777995109144 * 
S_NumCatalogPurchases + 0.08683394019767 * S_NumDealsPurchases + 0.27328366433987 * 
S_NumWebVisitsMonth + 0.0263930429288 * S_RFMstat + -0.38900647412136 * S_Recency + 
0.0640153287908 * S_Teenhome + 0.07587467002123 * S_Year_Birth ;
518373    +   H1x1_1  = H1x1_1  +    -0.05820552608682 * Marital_StatusDivorced
518374    +          +    -0.02695167777393 * Marital_StatusMarried
518375    +          +    -0.00733864032764 * Marital_StatusSingle
518376    +          +     0.03838747494293 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.05820552608682 * Marital_StatusDivorced + 
-0.02695167777393 * Marital_StatusMarried + -0.00733864032764 * Marital_StatusSingle + 
0.03838747494293 * Marital_StatusTogether ;
518377    +   H1x1_2  = H1x1_2  +    -0.00853551919442 * Marital_StatusDivorced
518378    +          +     0.42249671001117 * Marital_StatusMarried
518379    +          +    -0.18515416581955 * Marital_StatusSingle
518380    +          +     0.25783473520826 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.00853551919442 * Marital_StatusDivorced + 
0.42249671001117 * Marital_StatusMarried + -0.18515416581955 * Marital_StatusSingle + 
0.25783473520826 * Marital_StatusTogether ;
518381    +   H1x1_3  = H1x1_3  +      0.4175036565076 * Marital_StatusDivorced
518382    +          +     0.45127582934777 * Marital_StatusMarried
518383    +          +       0.358157766485 * Marital_StatusSingle
518384    +          +     0.42627185625497 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.4175036565076 * Marital_StatusDivorced + 
0.45127582934777 * Marital_StatusMarried + 0.358157766485 * Marital_StatusSingle + 
0.42627185625497 * Marital_StatusTogether ;
518385    +   H1x1_1  =    -1.23226472635566 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.23226472635566 + H1x1_1 ;
518386    +   H1x1_2  =      2.2313165328971 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.2313165328971 + H1x1_2 ;
518387    +   H1x1_3  =     0.09755782095138 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.09755782095138 + H1x1_3 ;
518388    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
518389    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
518390    +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
518391    +END;
MPRINT(EM_DIAGRAM):   END;
518392    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
518393    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
518394    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
518395    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
518396    +END;
MPRINT(EM_DIAGRAM):   END;
518397    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
518398    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
518399    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
518400    +
518401    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
518402    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
518403    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
518404    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
518405    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
518406    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
518407    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
518408    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
518409    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
518410    +end;
MPRINT(EM_DIAGRAM):   end;
518411    +else do;
MPRINT(EM_DIAGRAM):   else do;
518412    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
518413    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
518414    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
518415    +   end;
MPRINT(EM_DIAGRAM):   end;
518416    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
518417    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
518418    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
518419    +   end;
MPRINT(EM_DIAGRAM):   end;
518420    +   else do;
MPRINT(EM_DIAGRAM):   else do;
518421    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
518422    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
518423    +   end;
MPRINT(EM_DIAGRAM):   end;
518424    +end;
MPRINT(EM_DIAGRAM):   end;
518425    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
518426    +   P_DepVar1  =     -68.075125441494 * H1x1_1  +    -72.7630361672259 * H1x1_2
518427    +          +    -71.6251597703755 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -68.075125441494 * H1x1_1 + -72.7630361672259 * H1x1_2 + 
-71.6251597703755 * H1x1_3 ;
518428    +   P_DepVar1  =    -25.6080957302662 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -25.6080957302662 + P_DepVar1 ;
518429    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
518430    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
518431    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
518432    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
518433    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
518434    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
518435    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
518436    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
518437    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
518438    +END;
MPRINT(EM_DIAGRAM):   END;
518439    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
518440    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
518441    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
518442    +END;
MPRINT(EM_DIAGRAM):   END;
518443    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
518444    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
518445    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
518446    +END;
MPRINT(EM_DIAGRAM):   END;
518447    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
518448    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
518449    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
518450    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
518451    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
518452    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
518453    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
518454    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
518455    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
518456    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
518457    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
518458    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
518459    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
518460    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
518461    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
518462    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
518463    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
518464    +END;
MPRINT(EM_DIAGRAM):   END;
518465    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
518466    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
518467    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
518468    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
518469     run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL46_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META2_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
518470     quit;
518471     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
518472     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
518473     * AutoNeural46: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural46: Computing metadata for TRAIN data;
518474     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.AUTONEURAL46_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural46\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural46_TRAIN out=_tempAdvisor 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural46_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural46_TRAIN out=WORK.M2DCC2TL 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2DCC2TL;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2DCC2TL(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2DCC2TL;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2DCC2TL;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M116V03S NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M116V03S;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M116V03S;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1Y4U2Y5(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M116V03S;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M116V03S;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M116V03S;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M116V03S;
MPRINT(EMADVISECOLUMNS):   set WORK.M116V03S;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta2_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta2_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural46_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural46";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural46";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural46";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural46";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural46";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural46";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural46";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural46";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural46";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural46";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural46: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
518786     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
518787     set EMWS8.AutoNeural46_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural46_EMINFO;
518788     where DATA='AutoNeural46' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural46' and KEY ^in('DECDATA', 'DECMETA', 
'IMPORTANCE', 'MODEL');
518789     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL46_EMINFO.
      WHERE (DATA='AutoNeural46') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

518790     data EMWS8.AutoNeural46_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural46_EMINFO;
518791     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
518792     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
518793     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.AUTONEURAL46_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
518797     run;
518798     data EMWS8.AutoNeural46_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural46_EMINFO;
518799     set EMWS8.AutoNeural46_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural46_EMINFO WORK.MODELTEMP_INFO;
518800     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL46_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL46_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

518801     proc sort data = EMWS8.AutoNeural46_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural46_EMINFO NOTHREADS;
518802     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
518803     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL46_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL46_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

518804     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
518805     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
518806     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

518807     proc sort data = EMWS8.AutoNeural46_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural46_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
518808     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
518809     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL46_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

518810     data EMWS8.AutoNeural46_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural46_EMINFO;
518811     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
518812     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
518813     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL46_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

518814     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
518815     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
518816     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
518817     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.AUTONEURAL46_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.AUTONEURAL46_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
